quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"	 Coordinate Previous Force Change New ; 	 ---------- -------- ------ ------ ------; 	 1 R(1,2) = 2.124830 0.072797 0.020582 2.145412; 	 2 R(1,3) = 2.128962 0.068599 0.020146 2.149109; 	 3 R(1,4) = 2.024461 0.069553 17.524433 19.548895; 	 4 R(1,5) = 2.028397 0.066233 17.556204 19.584601; 	 5 R(1,6) = 2.024305 0.070720 17.517231 19.541535; 	 6 L(2,1,3) = 179.431194 0.000053 -1.744105 177.687089; 	 7 l(2,1,3) = 180.000000 -0.000770 0.000000 180.000000; 	 8 B(2,1,4) = 90.533252 -0.000595 -1.113535 89.419717; 	 9 B(2,1,5) = 89.845687 -0.000107 -1.005547 88.840140; 	 10 B(2,1,6) = 89.819597 0.000658 1.944389 91.763985; 	 11 B(3,1,4) = 89.828837 -0.000257 2.088415 91.917251; 	 12 B(3,1,5) = 89.592600 -0.000007 -0.737452 88.855147; 	 13 B(3,1,6) = 90.389033 0.000309 -1.148076 89.240958; 	 14 B(4,1,5) = 120.478052 -0.000026 0.003564 120.481615; 	 15 B(4,1,6) = 118.946205 0.000056 0.000429 118.946634; 	 16 B(5,1,6) = 120.575361 -0.000030 -0.003611 120.571750; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007F4BEF0B510F for__signal_handl Unknown Unknown; libpthread-2.27.s 00007F4C029A7FB0 Unknown Unknown Unknown; libc-2.27.so 00007F4C0260DEAB gsignal Unknown Unknown; libc-2.27.so 00007F4C025F85B9 abort Unknown Unknown; core.cpython-36m- 00007F4BF2B2E25A Unknown Unknown Unknown; core.cpython-36m- 00007F4BF15542FD Unknown Unknown Unknown; core.cpython-36m- 00007F4BF1570541 Unknown Unknown Unknown; core.cpython-36m- 00007F4BF0FFE806 Unknown Unknown Unknown; python3.6 0000556FBA8799E4 _PyCFunction_Fast Unknown Unknown; python3.6 0000556FBA906DFC Unknown Unknown Unknown; python3.6 0000556FBA92B94A _PyEval_EvalFrame Unknown Unknown; python3.6 0000556FBA900206 Unknown Unknown Unknown; python3.6 0000556FBA9011CF Unknown Unknown Unknown; python3.6 0000556FBA906ED5 Unknown Unknown Unknown; python3.6 0000556FBA92B94A _PyEval_EvalFrame Unknown Unknown; python3.6 0000556FBA901CB9 PyEval_EvalCodeEx Unknown Unknown; python3.6 0000556FBA902A4C PyEval_Eval",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265:3677,error,error,3677,https://psicode.org,https://github.com/psi4/psi4/issues/1265,1,['error'],['error']
Availability," **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable, external projects such as ChemPS2 and EFP may not work. The build systems has also only seen compilation on half a dozen architectures and setups, you may encounter errors in the build process. A new branch named 1.0.x maintenance has been created that contains a stable and updated version of the 1.0 release. In effect, this means that the master branch will no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if you need additional time to rebase in a change.; ## Summary. Changes for developers:; - **WARNING!** All clones and forks will need to be",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:3028,mainten,maintenance,3028,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['mainten'],['maintenance']
Availability," - [x] new test: `dft-pruning`. ## Questions; - Pruning enabled by default? -> not this PR, but after further testing yes. ## Checklist; - [x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/au",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3115,ROBUST,ROBUST,3115,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability," -20767.22191508719698 1.03359e+00 7.27536e-04 DIIS/ADIIS; @DF-RKS iter 35: -20767.30054954416119 -7.86345e-02 7.44286e-04 DIIS/ADIIS; @DF-RKS iter 36: -20768.48520793548960 -1.18466e+00 3.90872e-04 DIIS/ADIIS; @DF-RKS iter 37: -20760.76716258910164 7.71805e+00 1.04468e-03 DIIS/ADIIS; @DF-RKS iter 38: -20768.55429866314080 -7.78714e+00 4.52478e-04 DIIS/ADIIS; @DF-RKS iter 39: -20768.68773671058443 -1.33438e-01 3.57019e-04 DIIS/ADIIS; @DF-RKS iter 40: -20768.48564212785277 2.02095e-01 4.58988e-04 DIIS/ADIIS; @DF-RKS iter 41: -20768.13969658983478 3.45946e-01 5.78947e-04 DIIS/ADIIS; @DF-RKS iter 42: -20762.40168626864761 5.73801e+00 9.73915e-04 DIIS/ADIIS; @DF-RKS iter 43: -20766.25151067776460 -3.84982e+00 7.95995e-04 DIIS/ADIIS; @DF-RKS iter 44: -20765.44779441227365 8.03716e-01 9.14875e-04 DIIS/ADIIS; @DF-RKS iter 45: -20765.88519158808413 -4.37397e-01 8.46012e-04 DIIS/ADIIS; @DF-RKS iter 46: -20765.45932088459085 4.25871e-01 9.17563e-04 DIIS/ADIIS; @DF-RKS iter 47: -20766.50827718868823 -1.04896e+00 1.04726e-03 DIIS/ADIIS; @DF-RKS iter 48: -20768.31847177083182 -1.81019e+00 5.14600e-04 DIIS/ADIIS; @DF-RKS iter 49: -20768.02143037749192 2.97041e-01 5.84422e-04 DIIS/ADIIS; @DF-RKS iter 50: -20761.83031277303962 6.19112e+00 8.91825e-04 DIIS/ADIIS; @DF-RKS iter 51: -20768.07299881569270 -6.24269e+00 6.34851e-04 DIIS/ADIIS; @DF-RKS iter 52: -20768.59364478812495 -5.20646e-01 4.92054e-04 DIIS/ADIIS; @DF-RKS iter 53: -20768.58960690460299 4.03788e-03 4.84011e-04 DIIS/ADIIS; @DF-RKS iter 54: -20768.33116902869369 2.58438e-01 4.15860e-04 DIIS/ADIIS; @DF-RKS iter 55: -20768.33156887947553 -3.99851e-04 4.95197e-04 DIIS/ADIIS; @DF-RKS iter 56: -20762.57387532185021 5.75769e+00 9.89335e-04 DIIS/ADIIS; @DF-RKS iter 57: -20766.27465992301950 -3.70078e+00 8.06840e-04 DIIS/ADIIS. Psi4 stopped on: Tuesday, 30 August 2022 05:31PM; Psi4 wall time for execution: 5:34:28.48. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4. ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2709:25140,error,error,25140,https://psicode.org,https://github.com/psi4/psi4/issues/2709,1,['error'],['error']
Availability," 2817; Number of Cartesian functions: 3173; Spherical Harmonics?: true; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 5.2.3; S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97M-D3BJ <= . wB97M-V with D3(BJ) instead of VV10 dispersion . A. Najib, L. Goerigk, J. Comput. Theory Chem.,14, 5725, 2018; N. Mardirossian, M. Head-Gordon, J. Chem. Phys. 144, 214110, 2016. Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97M-V exchange-correlation functional. => Exact (HF) Exchange <=. 0.8500 HF,LR [omega = 0.3000]; 0.1500 HF . => LibXC Density Thresholds <==. XC_HYB_MGGA_XC_WB97M_V: 1.00E-13 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 2115829; Total Blocks = 14225; Max Points = 256; Max Functions = 1539; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-33 entry C line 198 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 34-89 entry H line 18 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 90-101 entry N line 258 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 102-106 entry O line 318 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. PSIO_ERROR: unit = 97, errval = 12; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007F6F7C68B10F for__signal_handl Unknown Unknown; libpthread-2.28.s 00007F6F9C906B20 Unknown Unknown Unknown; libc-2.28.so 00007F6F9BDDC37F gsignal Unknown Unknown; libc-2.2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970:11548,Toler,Tolerance,11548,https://psicode.org,https://github.com/psi4/psi4/issues/2970,1,['Toler'],['Tolerance']
Availability," Basis Set: DEF2-SVP; Blend: DEF2-SVP; Number of shells: 30; Number of basis functions: 60; Number of Cartesian functions: 60; Spherical Harmonics?: false; Max angular momentum: 2. ==> DFT Potential <==. => Composite Functional: SVWN <=. Slater exchange; Vosko, Wilk & Nusair (VWN5_RPA); P. A. M. Dirac, Math. Proc. Cambridge Philos. Soc. 26, 376 (1930) (10.1017/S0305004100016108); F. Bloch, Z. Phys. 57, 545 (1929) (10.1007/BF01340281); S. H. Vosko, L. Wilk, and M. Nusair, Can. J. Phys. 58, 1200 (1980) (10.1139/p80-159). Deriv = 1; GGA = FALSE; Meta = FALSE. Exchange Hybrid = FALSE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 1.0000 XC_LDA_X. => Correlation Functionals <=. 1.0000 XC_LDA_C_VWN_RPA. => LibXC Density Thresholds <==. XC_LDA_C_VWN_RPA: 1.00E-15; XC_LDA_X: 1.00E-15. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 88; Spherical Points = 434; Total Points = 292072; Total Blocks = 2181; Max Points = 256; Max Functions = 60; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: DEF2-UNIVERSAL-JFIT; Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry C line 170 file /home/manas/psi4conda/share/psi4/basis/def2-universal-jfit.gbs; atoms 3-8 entry H line 17 file /home/manas/psi4conda/share/psi4/basis/def2-universal-jfit.gbs. ==> Integral Setup <==. DFHelper Memory: AOs need 0.007 GiB; user supplied 83.698 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: No; wK tasked: No; OpenMP threads: 8; Memory [MiB]: 85706; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 0.0000; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: DEF2-UNIVERSAL-JFIT; Blend: DEF2-UNIVERSAL-JFIT; Number of shells: 60; Number of basis functions: 194; Number of Cartesian functions: 194; Spherical Harmonics?: false; Max angular momentum: 4. Cached 100.0% of DFT collocation blocks in 0.1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911:5431,Toler,Tolerance,5431,https://psicode.org,https://github.com/psi4/psi4/issues/2911,1,['Toler'],['Tolerance']
Availability," Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so;/usr/lib/x86_64-linux-gnu/libpthread.so ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:97 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:45 (find_dependency); CMakeLists.txt:25 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build/CMakeFiles/CMakeOutput.log"".; CMakeFiles/psi4-core.dir/build.make:108: recipe for target 'psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure' failed; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure] Error 1; CMakeFiles/Makefile2:646: recipe for target 'CMakeFiles/psi4-core.dir/all' failed; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; Makefile:140: recipe for target 'all' failed; make: *** [all] Error 2; ```. I also had a different combination (compiling with clang?) that built fully but then gave a run-time error about attempting to load both libomp5.so and libiomp5.so. I'm happy to poke things at this end to test but cmake is not my forte and it looks a bit of a nightmare here to take in all possible combinations!. This is with a clean tree checked out from git straight before building.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041:4047,error,errors,4047,https://psicode.org,https://github.com/psi4/psi4/issues/1041,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability," EST] INFO: qcfractalcompute.config: Reading configuration data from configs/config.3049902-1.yaml; Traceback (most recent call last):; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <module>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <dictcomp>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/lila/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/psi4/__init__.py"", line 64, in <module>; raise KeyError(f""Unable to read the Psi4 Python folder - check the PSIDATADIR environmental variable - current value is {str(data_dir)}""); KeyError: 'Unable to read the Psi4 Python folder - check the PSIDATADIR environmental variable - current value is /lila/home/conda/feedstock_root/build_artifacts/psi4_1696426865911/work/build/stage/share/psi4'; ``` . To decode this output a little, the failure results from qcarchive trying to get the version of psi4. The specific qcarchive code is here: https://github.com/MolSSI/QCFractal/blob/32a29a86d6673b0ea1a743b02d3af314c2fd164c/qcfractalcompute/qcfractalcompute/run_scripts/qcengine_list.py#L12. The code to query the version in qcarchive is newer than issue #3084, which is why it probably was not caught at the time.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3126:2166,failure,failure,2166,https://psicode.org,https://github.com/psi4/psi4/issues/3126,1,['failure'],['failure']
Availability," Functionals <=. 1.0000 XC_LDA_X. => Correlation Functionals <=. 1.0000 XC_LDA_C_VWN_RPA. => LibXC Density Thresholds <==. XC_LDA_C_VWN_RPA: 1.00E-15; XC_LDA_X: 1.00E-15. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 88; Spherical Points = 434; Total Points = 292072; Total Blocks = 2181; Max Points = 256; Max Functions = 60; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: DEF2-UNIVERSAL-JFIT; Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry C line 170 file /home/manas/psi4conda/share/psi4/basis/def2-universal-jfit.gbs; atoms 3-8 entry H line 17 file /home/manas/psi4conda/share/psi4/basis/def2-universal-jfit.gbs. ==> Integral Setup <==. DFHelper Memory: AOs need 0.007 GiB; user supplied 83.698 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: No; wK tasked: No; OpenMP threads: 8; Memory [MiB]: 85706; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 0.0000; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: DEF2-UNIVERSAL-JFIT; Blend: DEF2-UNIVERSAL-JFIT; Number of shells: 60; Number of basis functions: 194; Number of Cartesian functions: 194; Spherical Harmonics?: false; Max angular momentum: 4. Cached 100.0% of DFT collocation blocks in 0.121 [GiB]. Minimum eigenvalue in the overlap matrix is 4.2926659058E-03.; Reciprocal condition number of the overlap matrix is 5.8671564054E-04.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo; -------------------------; A 60 60; -------------------------; Total 60 60; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -78.86898106418064 -7.88690e+01 0.00000e+00; @DF-RKS iter 1: -78.88636762953359 -1.73866e-02 1.49",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2911:6008,Mask,Mask,6008,https://psicode.org,https://github.com/psi4/psi4/issues/2911,1,['Mask'],['Mask']
Availability," H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 4249; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61:1588,Error,Error,1588,https://psicode.org,https://github.com/psi4/psi4/issues/61,1,['Error'],['Error']
Availability," In function `boost::mpi::detail::packed_archive_recv(int, int, int, boost::mpi::packed_iarchive&, MPI_Status&)':; point_to_point.cpp:(.text+0x2c1): undefined reference to `MPI_Recv'; point_to_point.cpp:(.text+0x318): undefined reference to `MPI_Recv'; point_to_point.cpp:(.text+0x40a): undefined reference to `MPI_Free_mem'; point_to_point.cpp:(.text+0x4a7): undefined reference to `MPI_Alloc_mem'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::wait()':; request.cpp:(.text+0x82): undefined reference to `MPI_Waitall'; request.cpp:(.text+0xd4): undefined reference to `MPI_Wait'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::test()':; request.cpp:(.text+0x201): undefined reference to `MPI_Testall'; request.cpp:(.text+0x283): undefined reference to `MPI_Test'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::cancel()':; request.cpp:(.text+0x38e): undefined reference to `MPI_Cancel'; request.cpp:(.text+0x3a9): undefined reference to `MPI_Cancel'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(exception.o): In function `boost::mpi::exception::exception(char const*, int)':; exception.cpp:(.text+0xaf): undefined reference to `MPI_Error_string'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; make: *** [all] Error 2; ```. It looks to me like a problem with my external Boost installation. Can you confirm this? I just wanted to make sure there wasn't some linking flag I'm missing before contacting the Boost developers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/411:36361,error,error,36361,https://psicode.org,https://github.com/psi4/psi4/issues/411,4,"['Error', 'error']","['Error', 'error']"
Availability," MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' f",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1876,error,error,1876,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability," Psi, both the `Wavefunction` class and the `MintsHelper` class have their own copy of `basissets_`, a map from basis name to the actual `BasisSet`. There are `get_basisset`, `set_basisset`, and `basisset_exists` methods to manipulate `basissets_`, which are identical between the two classes. So `basissets_` and associated methods are functionally identical on the two classes. The problem is that every `Wavefunction` object is already guaranteed to have a `MintsHelper` object, there is no reason for the `Wavefunction` object to ever have a different `basissets_` from its `MintsHelper` (because `Wavefunction`’s only use for `basissets_` is aforementioned methods), but there is no mechanism to synchronize the `basissets_` variables of a `Wavefunction` and its `MintsHelper`. So we can have two sources disagreeing about the same information. This PR solves the problem by moving the responsibility for managing `basissets_` onto `MintsHelper`. The `Wavefunction` methods now just call the relevant `MintsHelper` methods. ~~I’m in favor of deprecating the offending `Wavefunction` methods, but I’ll open this to core developer discussion before adding that to the PR because I expect changing `Wavefunction` API will be controversial.~~. I’ve also marked some functions as override to silence annoying compiler warnings. Obligatory Pings: @jturney for `libmints` changes, @loriab for API changes. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Silences compiler warnings; - [x] Eliminates `wavefunction.basissets_` so that `wavefunction.mintshelper().basissets_` is the source of truth. ## Questions; ~~Do we want to deprecate `wavefunction.basissets()`, `wavefunction.get_basisset()`, `wavefunction.set_basisset()`, and `wavefunction.basisset_exists()` in favor of `wavefunction.mintshelper().method_name_here()`?~~. ## Checklist; - [x] Quick tests, dkh tests, and x2c tests all pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1970:1364,Ping,Pings,1364,https://psicode.org,https://github.com/psi4/psi4/pull/1970,1,['Ping'],['Pings']
Availability," Psi4 and allow Psi4 users to directly run the ADC calculations supported inside adcc. The opposite direction (i.e. using Psi4 SCF results in adcc) is already implemented and working, see the [adcc manual](https://adc-connect.org/calculations.html#general-adc-n-calculations), so this should mainly be an effort of connecting the strings together on the Psi4 side. Currently I am still very much in the planning phase of this PR, thankful for any early pointers or feedback to get me moving in a sensible direction. Since this is my first PR here I still feel a little lost inside the Psi4 source :smile:. My implementation so far hooks into the driver python code of Psi4 and branches out to either `adcc` or the built-in ADC module of Psi4. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Get ADC(2) calculation triggered in adcc from Psi4 (see `adcc_examples` subfolder).; - [x] Allow all ADC variants to be run in Psi4; - [x] Proper error handling of Psi4 SCF references not supported in adcc (symmetry, density-fitting, ...); - [x] Integration of adcc installation into Psi4 build system; - Currently adcc can only be installed via `pip`, but we would love to get `conda` support working on our end.; - [x] Tests and examples; - [x] Test install process; - [x] Documentation. ## Questions; - [x] How to best branch between the builtin module and adcc? The two implementations share some features, but use different approaches to solve ADC, which can in some cases lead to differing results (related to #1033 ); - [x] How to best direct options and configurables from Psi4 and adcc? The current solution I see is to add basically everything to the big `read_options.cc`, which is pretty inflexible and could lead to a lot of duplicated information being necessary. Is there some better way to do this?; - [x] What to do with the calculation results? Right now only the MP2 ground state energy is returned to the python world in ADC calculations o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1744:1110,error,error,1110,https://psicode.org,https://github.com/psi4/psi4/pull/1744,1,['error'],['error']
Availability," Psi4. The C++ Python bindings have been moved to PyBind11. See [here](https://github.com/psi4/psi4/issues/450) for more information. **Inversion:**; Currently the hybrid Python/C++ architecture of Psi4 is in an odd spot where Psi4 itself is a C++ program that calls an input file as a Python executable. This circular process will be removed and Psi4 itself will become a Python library capable of being imported just like any other module. This will allow Psi4 to be used in a normal python workflow with other scientific python programs like OpenMM, iPython, MolDesign, etc. In addition, python-based error messages will be more expressive and accurate. For users who enjoy the current Psithon interface the current Psi4 Psithon parsing equipment will be moved to a script named ""psi4"" in the binary location. This will allow all current Psi4 input files to be run normally. **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable, external projects such as ChemPS2 and EFP may not work. The build systems has also only seen compilation on half a dozen architectures and setups, you may encounter errors in the build process. A new branch named 1.0.x maintenance has been created that contains a stable and updated version of the 1.0 release. In effect, this means that the master branch will no longer be 100% sta",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:2267,down,downloaded,2267,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['down'],['downloaded']
Availability," SAPT levels. The E(30)ind correction needs to be calculated beforehand, both for subtracting its value from the total (ind+ex-ind) calculated here, and for generating the third-order induction amplitudes that are reused here. However, unlike most of the stuff in `libsapt_solver`, the code is AO-based and the two-electron integrals enter only via generalized J/K matrices. Therefore, I had to export some additional AO quantities in `libsapt_solver/sapt.h` and I don't know if I did this in an optimal way.; - [x] Note to self: frozen core still needs to be checked. ## Design (Big-Picture) Questions - input from @CDSherrill @dgasmith @loriab and others will be highly beneficial!; - [ ] The three new(ish) beyond-S^2 corrections, E(20)exch-ind, E(20)exch-disp, and E(30)exch-ind cannot be currently calculated by a single SAPT call: the first two require `energy('sapt(dft)')` and the last one `energy('sapt2+3')`. That's quite unfortunate and we need a better workflow, possibly by making the non-S^2 E(20)exch-ind,resp and E(20)exch-disp available as part of `energy('sapt0')`.; - [ ] What should go into aggregate SAPT energy values, S^2 or non-S^2? I made the code pick the non-S^2 value of E(30)exch-ind,resp if available, but I'd be happy to revert it back to picking E(30)exch-ind,resp(S^2). At present, I don't think the non-S^2 values of E(20)exch-ind,resp and E(20)exch-disp are ever included in total SAPT numbers, maybe they should?; - [ ] Finally, the option names such as `do_ind30_exch_sinf` are somewhat unfortunate because they propagate the misconception that you include effects all the way to S^infinity. In reality, the largest power of overlap integral S you ever need is min(NelA,NelB) - after that, you run out of electrons to exchange between A and B. **Nonapproximated**, **Nonexpanded**, and **beyond-S^2** are all formally more correct names than S^infinity. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2314:2043,avail,available,2043,https://psicode.org,https://github.com/psi4/psi4/pull/2314,1,['avail'],['available']
Availability," [ 13%] Built target 3index; Consolidate compiler generated dependencies of target ciomr; [ 15%] Built target ciomr; Consolidate compiler generated dependencies of target cubeprop; [ 16%] Built target cubeprop; Consolidate compiler generated dependencies of target disp; [ 16%] Built target disp; Consolidate compiler generated dependencies of target dpd; [ 25%] Built target dpd; Consolidate compiler generated dependencies of target filesystem; [ 25%] Built target filesystem; Consolidate compiler generated dependencies of target fock; [ 25%] Building CXX object src/psi4/libfock/CMakeFiles/fock.dir/DiskDFJK.cc.o; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:17: error: no viable overloaded operator[] for type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ~~~~~~~~^~~~~~~~~~~~~~; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:68: error: member access into incomplete type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ^; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libqt/qt.h:47:7: note: forward declaration of 'psi::Options'; class Options;; ^; 2 errors generated. ```. I'm doing this on my intel mac: `2.6 GHz 6-Core Intel Core i7`; using clang++ ; ```; (base) gwood@EXS-001355 build % /usr/local/opt/llvm/bin/clang++ -v; Homebrew clang version 15.0.7; Target: x86_64-apple-darwin22.4.0; Thread model: posix; InstalledDir: /usr/local/opt/llvm/bin`; ```. The only issue prior to this was to install libxc and point to it, which i did with 6.2.2; I downloaded the source from git and am using master:. ```; git clone git@github.com:psi4/psi4.git; (base) gwood@EXS-001355 src % git branch; * master; ```; my cmake version is:. ```; (base) gwood@EXS-001355 src % cmake --version; cmake version 3.23.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; blas and lapack is pi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:1950,error,error,1950,https://psicode.org,https://github.com/psi4/psi4/issues/3006,1,['error'],['error']
Availability," ['SCF', 'DF_INTS_IO']). core.set_local_option('SCF', 'DF_INTS_IO', 'SAVE'). # Your plugin's psi4 run sequence goes here; ref_wfn = kwargs.get('ref_wfn', None); if ref_wfn is None:; ref_wfn = psi4.driver.scf_helper(name, **kwargs). # if restarting from a checkpoint file, this file; # needs to be in scratch with the correct name; filename = core.get_option(""V2RDM_CASSCF"",""RESTART_FROM_CHECKPOINT_FILE""). # todo PSIF_V2RDM_CHECKPOINT should be definied in psifiles.h; if ( filename != """" ):; molname = ref_wfn.molecule().name(); p4util.copy_file_to_scratch(filename,'psi',molname,269,False). # Ensure IWL files have been written when not using DF/CD; scf_type = core.get_option('SCF', 'SCF_TYPE'); if ( scf_type == 'PK' or scf_type == 'DIRECT' ):; proc_util.check_iwl_file_from_scf_type(core.get_option('SCF', 'SCF_TYPE'), ref_wfn). > returnvalue = core.plugin('v2rdm_casscf.so', ref_wfn); E RuntimeError:; E Fatal Error: v2RDM did not converge.; E Error occurred in file: /scratch/psilocaluser/conda-builds/v2rdm_casscf_1491348825317/work/v2rdm_solver.cc on line: 1799; E The most recent 5 function calls were:; E; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::v2rdm_casscf::v2RDMSolver::compute_energy(); E py_psi_plugin(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<psi::Wavefunction>). /home/je714/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/pymodule.py:66: RuntimeError; ---------------------------------------------- Captured stdout call -----------------------------------------------; N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A; =========================== 1 failed, 15 passed, 2 skipped, 1 xfailed in 201.46 seconds ===========================; ```. </details>; Also here is the current status of the conda installation:; <details>. ```bash; je714@guanine:~$ conda list; # packages in environment at /home/je714/psi4cond",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:5553,Error,Error,5553,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['Error'],['Error']
Availability," _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. name = 'v2rdm-casscf', kwargs = {'molecule': <psi4.core.Molecule object at 0x7f8d89888e30>}; lowername = 'v2rdm-casscf', optstash = <psi4.driver.p4util.optproc.OptionsState object at 0x7f8d89888470>; ref_wfn = <psi4.core.RHF object at 0x7f8d897e56d0>, filename = '', scf_type = 'CD'. def run_v2rdm_casscf(name, **kwargs):; r""""""Function encoding sequence of PSI module and plugin calls so that; v2rdm_casscf can be called via :py:func:`~driver.energy`. For post-scf plugins. >>> energy('v2rdm_casscf'). """""". lowername = name.lower(); kwargs = p4util.kwargs_lower(kwargs). optstash = p4util.OptionsState(; ['SCF', 'DF_INTS_IO']). core.set_local_option('SCF', 'DF_INTS_IO', 'SAVE'). # Your plugin's psi4 run sequence goes here; ref_wfn = kwargs.get('ref_wfn', None); if ref_wfn is None:; ref_wfn = psi4.driver.scf_helper(name, **kwargs). # if restarting from a checkpoint file, this file; # needs to be in scratch with the correct name; filename = core.get_option(""V2RDM_CASSCF"",""RESTART_FROM_CHECKPOINT_FILE""). # todo PSIF_V2RDM_CHECKPOINT should be definied in psifiles.h; if ( filename != """" ):; molname = ref_wfn.molecule().name(); p4util.copy_file_to_scratch(filename,'psi',molname,269,False). # Ensure IWL files have been written when not using DF/CD; scf_type = core.get_option('SCF', 'SCF_TYPE'); if ( scf_type == 'PK' or scf_type == 'DIRECT' ):; proc_util.check_iwl_file_from_scf_type(core.get_option('SCF', 'SCF_TYPE'), ref_wfn). > returnvalue = core.plugin('v2rdm_casscf.so', ref_wfn); E RuntimeError:; E Fatal Error: v2RDM did not converge.; E Error occurred in file: /scratch/psilocaluser/conda-builds/v2rdm_casscf_1491348825317/work/v2rdm_solver.cc on line: 1799; E The most recent 5 function calls were:; E; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::v2rdm_casscf::v2RDMSolver::comp",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:4858,checkpoint,checkpoint,4858,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['checkpoint'],['checkpoint']
Availability," a single list of functionals, which improves code readability and removes the XC functional special case (see below). ## User API & Changelog headlines; - [ ] Changes the Python API surface for the Superfunctional class: A complete list of functionals in a superfunctional can be accessed with `functionals()`. `add_x_functional(fnctl)` and `add_c_functional(fnctl)` were removed in favor of `add_functional(fnctl)`. Also removes `is_libxc_func()` since there is now no distinction. ## Dev notes & details; - [ ] The base `Functional` class now has a `kind()` field. When implemented in the `LibXCFunctional`, this allows one to get the kind of functional from LibXC -- Now, LibXC is treated as the single source of truth for the kind of functional. Accordingly, constants are [imported from LibXC to define these types.](https://github.com/psi4/psi4/blob/b40aa4fdce0996db38bdeafa454af8fb1cef136d/psi4/src/psi4/libfunctional/functional.h#L40-L43) A field is added for ""kinetic"" functionals for future-proofing, but error(s) will be encountered trying to use them.; - [ ] The inheritance structure of the `Functional` class was improved by moving LibXC specific code into the LibXCFunctional class; - [ ] The `Superfunctional` class was modified to have only a single list of functionals, as opposed to a separate list of X and C functionals. This removed the need for special-case behavior for XC functionals -- See [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/src/psi4/libfunctional/superfunctional.cc#L223) and [here](https://github.com/psi4/psi4/blob/1813c0c31e3049511f558a78db15bb2290257650/psi4/driver/procrouting/dft/superfunctionals.py#L90-L92); - [ ] Unused variables and definitions were cleaned up. ## Questions; - [ ] I have all but removed `libxc_xc_func_`... Is there any use for this that I can't think of?; - [ ] Currently, X and C functionals can be accessed with `x_functionals()` and `c_functionals()`. Neither of these return XC functional",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3203:1157,error,error,1157,https://psicode.org,https://github.com/psi4/psi4/pull/3203,1,['error'],['error']
Availability," and to collect different perturbative triples for qcisd.; - [x] collected qcvars correctly in DFOCC for CCD and QCHF. (It was harvesting the CCD method that tipped me into the rabbit-hole that became this PR.). - [x] TODO `pytest -m quick` is still friendly to run (CI finished in reasonable time), but the additions to stdsuite have make ordinary full pytests expensive. I need to manipulate default marks so folks don't inadvertently start hours of tests. `pytest -v ../tests/pytests/test_standard_suite.py -m ""not noci"" -n auto --durations 100 --durations-min 60.0` runs in 25 minutes on a 20-core machine with no individual test over 4m. That's not reasonable for a laptop. Blame the slow-to-converge oo methods, and it's going to get worse with occd and friends.; - [ ] TODO https://github.com/MolSSI/QCEngine/pull/376 and a new version of QCEngine are a prereq.; - [x] https://github.com/qcdb/qcdb/pull/57 is associated QCDB PR (psi4 PR is a prereq to it); - [ ] TODO full stdsuite in the presence of MRCC will have a couple faults of the ""not NYI"" variety after the MRCC defaulting logic switch from Q. I haven't decided how to remedy this, but it's unlikely to be hit, so I'll defer. ## Questions; - [ ] My version of Psi4+MRCC doesn't run CC2. Anyone else see this? (Just curious, not really needed for PR.); - [ ] I don't think the original module authors will find issues, but if you want to look over pertinent docs and capabilities tables, please do so.; - [x] [ADDED from #2737 For methods (or methods in certain circumstances, say reference or conv/df) only available through an external add-on, do we want those opt-in? That is, certainly the external must be (1) installed and detectable. But do we also want to (2) require the user to set qc_module=mrcc|adcc|chemps2 ? CheMPS2 has a long history of not requiring (2). ADCC has a shorter history of being the preferred backend and automatic choice, if present. @maxscheurer prefers not requiring (2). In this PR, I just switched MRCC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:13157,fault,faults,13157,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['fault'],['faults']
Availability," at least as capable as 1.0. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fixes psi4/psi4#617; - From psi4/psi4#43, fixes; - [x] 1. `decontract` now py-side and signaled by `-decon`. This was done some time ago.; - [x] 2. `basis_rel` also now `basis_relativistic`, etc. Also some time ago; - [x] 3. user-def basis sets have names/handles and are recallable as shown in mints9 and python/mints9. docs corrected and elaborated on this point; - [x] 7. got taken out last fall, and its replacement has not been added.; - [x] 12. fixed up the basisset.rst docs; - [x] 14. covered by comments at 6; - [x] fixed mints9 and enabled symmetry detection to show through to C-side mol; - [x] assigned a rough zeta to most built-in basis sets. * **User-Facing for Release Notes**; - [x] Extends `basis <opt_name> {...}` blocks to PsiAPI via `psi4.basis_helper(name='mybas', key='DF_BASIS_JKFIT', block=""""""; assign ...; """""")`; - From psi4/psi4#43, fixes; - [x] 4. didn't try it on a `db()`, but basis blocks aren't anonymous and can be reused at will. Even `basis mybas {....}; energy('hf/mybas')`; - [x] 6. vastly improved basis printing by always printing file and line origin on each basis set load (called in the driver so no longer mass rebuilding of basissets). separated name into a name field that is the handle by which it can be recalled (that is, the BASIS* keyword value) and a composition that'll look like `aug-cc-pvdz + cc-pvdz + 6-31g`; - [x] 8. fixed. now if first-preference fitting basis not avail and orbitals basis is _known_ to be >quad-zeta, _won't_ default to def2-qz* fitting sets. ## Questions; - [ ] @WDerricotte, there was that decon example in the manual that we agreed was wrong. Can you fix that?; - [ ] PsiAPI folks: getting a lot of these ""helper"" functionals for processing input blocks: pcm_helper, basis_helper. Shall we settle on a name? Others are ""geometry"" and ""set_options"". ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/649:1647,avail,avail,1647,https://psicode.org,https://github.com/psi4/psi4/pull/649,1,['avail'],['avail']
Availability," build from source, and your tags aren't synced with upstream, the Psi4 version will be undefined. QCEngine balks at that and urges you to pull tags. But this only pops up for cbs/findif/nbody jobs, which can be confusing. This PR promotes to tag complaint to upon `import psi4` for uniformity.; - [x] ""OliP"" [reported a bug at the forum](http://forum.psicode.org/t/problems-with-cbs-and-version-1-6/2494) where an input like the below returned `‘<’ not supported between instances of ‘dict’ and ‘dict’ `. This came about because I was comparing well-behaved dertype per method tuples like; ```; ['hf', 'mp2', 'ccsd(t)', 'ccsd(t)']; [(2, {}), (1, {}), (1, {}), (1, {})]; ```. rather than the real-life cases one gets with ROHF. Sorting on only the dertype fixes the bug.; ```; ['hf', 'mp2', 'ccsd(t)', 'ccsd(t)']; [(2, {}), (0, {1: ""\nPsiException: select_mp2_gradient: Method 'mp2' with MP2_TYPE 'DF', FREEZE_CORE 'True', and REFERENCE 'ROHF' not available\n\n""}), (0, {1: ""\nPsiException: select_ccsd_t__gradient: Method 'ccsd(t)' with CC_TYPE 'CONV' and REFERENCE 'ROHF' not available\n\n""}), (0, {1: ""\nPsiException: select_ccsd_t__gradient: Method 'ccsd(t)' with CC_TYPE 'CONV' and REFERENCE 'ROHF' not available\n\n""})]; ```. ```; molecule N {; 0 4; N 0.00 0.00 0.00; }. set {; scf_type direct; reference rohf; r_convergence 6; d_convergence 7; e_convergence 8; freeze_core true; }. e_cbs = energy(‘cbs’,; scf_basis=‘aug-cc-pV[TQ5]Z’,; corl_wfn=‘mp2’,; corl_basis=‘aug-cc-pV[TQ]Z’,; delta_wfn=‘ccsd(t)’,; delta_basis=‘aug-cc-pV[DT]Z’); ```. - [x] @hokru reported that `energy('SCF/def2-SVP',bsse_type=['cp','nocp'],dft_functional=my_functional)` got broken with the distributed driver. That's patched up for string `dft_functional` at least.; - [x] I noticed that a change I made to `_qcvars_transitions` to help version reported would make `variables(include_deprecated_keys=True)` fail. that's fixed. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of ful",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2590:1141,avail,available,1141,https://psicode.org,https://github.com/psi4/psi4/pull/2590,3,['avail'],['available']
Availability," by a frequency calculation on 12-butadiene with the following input file:. ```; molecule mol_12_butadiene {; 0 1; C -1.743900000 -0.363600000 -0.000000000; C -0.552300000 0.557000000 -0.000100000; C 0.691500000 0.173100000 -0.000000000; C 1.934600000 -0.213400000 -0.000000000; H 2.475000000 -0.380600000 0.924600000; H 2.475400000 -0.380100000 -0.924300000; H -0.756100000 1.624500000 0.000500000; H -2.368000000 -0.187400000 0.878900000; H -1.437400000 -1.407900000 -0.000100000; H -2.368300000 -0.187200000 -0.878700000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVTZ; dft_spherical_points 434; dft_radial_points 85; }. set_memory(24000000000); try:; optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); set guess read; optimize('pwpb95-d3bj'); E, wfn = frequency('pwpb95-d3bj', return_wfn=True); print(wfn.frequencies().get(0, 0)); ```. The program starts the optimization and produces an error:. ```; Performing finite difference calculations; 49 displacements needed ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007FB2D549510F for__signal_handl Unknown Unknown; libpthread-2.27.s 00007FB2DA9F68A0 Unknown Unknown Unknown; libc-2.27.so 00007FB2DA631F47 gsignal Unknown Unknown; libc-2.27.so 00007FB2DA6338B1 abort Unknown Unknown; core.cpython-37m- 00007FB2D7A0D3D7 Unknown Unknown Unknown; core.cpython-37m- 00007FB2D6563E2D Unknown Unknown Unknown; core.cpython-37m- 00007FB2D657D2C1 Unknown Unknown Unknown; core.cpython-37m- 00007FB2D6040FF6 Unknown Unknown Unknown; python3.7 000055D7E213E914 _PyMethodDef_RawF Unknown Unknown; python3.7 000055D7E213EA31 _PyCFunction_Fast Unknown Unknown; python3.7 000055D7E21AAEBD _PyEval_EvalFrame Unknown Unknown; python3.7 000055D7E20ED829 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2020:1065,error,error,1065,https://psicode.org,https://github.com/psi4/psi4/issues/2020,1,['error'],['error']
Availability," calculation crashes, with the following output at the end of the log file (I have attached the full log file to the issue.):; ```; Wfn Parameters:; --------------------; Wavefunction = CCSD_T; Number of irreps = 1; Number of MOs = 275; Number of active MOs = 275; AO-Basis = NONE; Semicanonical = false; Reference = RHF; Print Level = 1. IRREP # MOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 275 0 9 0 266 0; Transforming integrals...; IWL integrals will be deleted.; (OO|OO)...; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 1; Constructing frozen core operators; Row and column block dimensions of A; (n = 1): 275 ; (n = 1): 275 ; Row and column block dimensions of B; (n = 1): 276 ; (n = 1): 275 ; Row and column block dimensions of C; (n = 1): 275 ; (n = 1): 275 ; Asym: 0, Bsym: 0, Csym: 0; Mismatch in index Ha = 0; ```. Additionally, the following error message is given:; ```; Traceback (most recent call last):; File ""/oasis/tscc/scratch/ebullvul/projects/POPC/timings/debug/psi4test/psi4_ccsdt.py"", line 28, in <module>; e = psi4.energy(model, molecule=mol); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/driver.py"", line 526, in energy wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 989, in select_ccsd_t_ return func(name, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 2898, in run_ccenergy core.cctransort(ref_wfn); RuntimeError: ; Fatal Error: Matrix::gemm error: Number of rows and columns do not match.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1670993662927/work/psi4/src/psi4/libmints/matrix.cc on line: 1389The most recent 5 function calls were:. psi::Matrix::gemm(bool, bool, double, psi::Matrix const*, psi::Mat",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916:1882,error,error,1882,https://psicode.org,https://github.com/psi4/psi4/issues/2916,1,['error'],['error']
Availability," compilers. . Here's the error message: . `/home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed; make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt; Makefile:127: recipe for target 'all' failed; make[3]: *** [all] Interrupt; CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt; CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all' failed; make[1]: *** [CMakeFiles/psi4_core.dir/all] Interrupt; Makefile:138: recip",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536:1257,error,error,1257,https://psicode.org,https://github.com/psi4/psi4/issues/536,1,['error'],['error']
Availability," designed at the moment for coupled JK build algorithms. Separate J and K algorithms, then, are either hard-locked to each other (as in DFJCOSK) or bolted onto the side of already-existing JK classes (as in LinK with DirectJK). Such a layout leaves no flexibility in combining separate J and K algorithms, a problem which will only get worse as new separate J and K algorithms like CFMM are added. Additionally, the scattering of separate J and K build algorithms throughout the JK class in Psi4 in an non-standardized fashion is unfortunate from a code design perspective. The goal of the CompositeJK project is, ultimately, to create a new JK class (_CompositeJK_) that offers a proper framework for combining separate J and K algorithms for use in JK construction. Such a class will provide a home for any new separate J and K algorithm that gets added to Psi4 in the future (such as the in-progress CFMM). Additionally, the CompositeJK class will be designed in such as a way to enable arbitrary combinations of any available separate J and K build algorithm through a single JK subclass. This arbitrary mixing and matching is planned to be accesible in a user-friendly way. DFJLinK is the first step to this process. DFJLinK, itself, is a new JK subclass that combines the integral-direct density fitted J build algorithm from DFJCOSK with the LinK algorithm previously available in DirectJK. LinK was previously available for use in Psi4 via DirectJK, but was always disrecommended due to its combination with a normal DirectJK implementation for J construction. In conjunction with Direct DF-J to form the Coulomb matrix, LinK performs much better. Some benchmarks comparing the Direct DF-J + LinK algorithm combination to other JK options in Psi4, for water clusters of varying sizes at the cc-pVDZ basis set, are attached:. ![Timing Plots of Water Clusters at cc-pVDZ](https://user-images.githubusercontent.com/26306559/198107808-42f3b855-13f0-4e14-8a50-c0402c16b94f.png). Small, non-diffuse ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:1604,avail,available,1604,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['avail'],['available']
Availability," did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: once pb11 no longer restrained to <2.12 (see above), the ""FixedSize"" issue appears (see nitpick-exceptions), and the exceptions formerly emitted as `List` needed `list` counterparts added.; - [x] win azure: headers in np v2 are at `numpy/_core/include` not `numpy/core/include`. We were setting the latter explicitly for this lane, so removed that. Also added `${Python_NumPy_VERSION}` printing for feedback.; - [x] linux eco: dftd4-python now available for py312 (except on windows), so added that back to the package testing.; - [x] cmake: squashed a few warnings by setting policies. it looks like find_package(Boost) for L2 is still needing FindBoost rather than BoostConfig, so that one needs to be OLD for now.; - [x] conda: threading tests weren't running at the conda recipe b/c the trial job hit the block we put in on MemDF in Disk mode. Increased the memory in test_threading so it could run.; - [x] gha: bumped all the actions to the latest version to get rid of node deprecation warnings. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:2958,avail,available,2958,https://psicode.org,https://github.com/psi4/psi4/pull/3186,1,['avail'],['available']
Availability," external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://github.com/evaleev/libint does not seem to have `find_package(Eigen3 MODULE)` line and `FindEigen3.cmake` file. A workaround is to `export EIGEN3_ROOT=/path/to/eigen3/include`, or patch; ```diff; --- a/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt; +++ b/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt; @@ -114,3 +114,3 @@; ; -find_package(Eigen3 MODULE); +find_package(Eigen3); ; ```; and remove `FindEigen3.cmake`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:1986,error,error,1986,https://psicode.org,https://github.com/psi4/psi4/issues/2606,1,['error'],['error']
Availability," heavy-aug-cc-pv(d+d)z -1 -150.01871638 xtpl_highest_1; ---------------------------------------------------------------------------------------------------------. ==> CBS <==. ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / heavy-aug-cc-pv(q+d)z -149.66713397 xtpl_highest_1; corl mp2 / heavy-aug-cc-pv([tq]+d)z -0.53215356 corl_xtpl_helgaker_2; delta1 ccsd(t) - mp2 / heavy-aug-cc-pv(d+d)z -0.00134025 xtpl_highest_1; total CBS -150.20062777; ---------------------------------------------------------------------------------------------------------; ```. For an energy/gradient cbs uses df-mp2 for the cc-pv[t,q]z portion and conventional mp2 which I believe is pulled out of the CCSD(T) calculation. no df-CCSD(T) available ☹️ ; When I compute the Hessian, instead of doing a conventional MP2/DZ singlepoint it looks like a separate, df-mp2 calculation is performed. . Here's the Hessian CBS summary:. ```; ---------------------------------------------------------------------------------------------------------; Method / Basis Rqd Energy [Eh] Variable; ---------------------------------------------------------------------------------------------------------; hf / heavy-aug-cc-pv(q+d)z * -149.66713397 HF TOTAL ENERGY; hf / heavy-aug-cc-pv(t+d)z * -149.65690150 HF TOTAL ENERGY; mp2 / heavy-aug-cc-pv(t+d)z * -150.13698909 MP2 TOTAL ENERGY; hf / heavy-aug-cc-pv(q+d)z * -149.66713397 HF TOTAL ENERGY; mp2 / heavy-aug-cc-pv(q+d)z * -150.17732219 MP2 TOTAL ENERGY; hf / heavy-aug-cc-pv(t+d)z * -149.65690150 HF TOTAL ENERGY; hf / heavy-aug-cc-pv(q+d)z * -149.66713397 HF TOTAL ENERGY; hf / heavy-aug-cc-pv(d+d)z 0.00000000 HF TOTAL ENERGY; mp2 / heavy-aug-cc-pv(d+d)z * -150.01845040 MP2 TOTAL ENERGY; ccsd / heavy-aug-cc-pv(d+d)z 0.00000000 CCSD TOTAL ENERGY; ccsd(t) / heavy-aug-c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1897:3011,avail,available,3011,https://psicode.org,https://github.com/psi4/psi4/issues/1897,1,['avail'],['available']
Availability," here. -->; For some poorly understood confluence of reasons, for some users error messages can _sometimes_ get completely lost when Psi4 exits with a `PSIEXCEPTION`, especially when a PSIO error happens.; This can be observed in recent bug reports, see:. - https://github.com/psi4/psi4/issues/2970; - https://forum.psicode.org/t/sapt0-calculation-crashes-pointer-error/2839. In both of these cases the users were only seeing the error message that has been written to `cerr`, but not the string that `PSIEXCEPTION` should have printed. IIRC when I tried to research this quite a while ago, I have found this may be a bug in some versions of libstdc++. This PR adds a simple workaround: the exception message is also printed to `cerr` in `psio_error`. The only side effect, is that some users, who are currently not affected by the lost message problem, may start getting the same error message twice when a PSIO error happens. Spammy error exits are not great, but PSIO errors are not supposed to happen too often, and when they do loosing the error message is more annoying than having it be duplicated. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] PSIO error messages are now also printed to `cerr`, fixing an issue where (under some circumstances) large parts of the error message would never reach the user, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] The same error message that gets passed to `PSIEXCEPTION` is now printed to `cerr` before throwing in `psio_error`. ## Checklist; - [x] There is no easy way to add tests for ""are error messages getting delivered or not?""; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2997:1003,error,error,1003,https://psicode.org,https://github.com/psi4/psi4/pull/2997,7,['error'],"['error', 'errors']"
Availability," in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmints/matrix.cc` (`Matrix::diagonalize`); - [x] Check that all requested roots converge in the `libqt` Davidson solver used by `adc/prepare_tensors.cc`; - [x] Mark the return value of the `libqt` Davidson solver as `[[nodiscard]]` to force callers to check how many of the requested roots actually converged. ### Unrelated fixes; - [x] Fix a memory leak in the ROHF stability check. **(merged: #2671)**. ###",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3443,down,down,3443,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['down'],['down']
Availability," ints_tolerance 1.0e-12; cosx_spherical_points_initial 146 ; cosx_radial_point_initial 50 ; cosx_spherical_points_final 302; cosx_radial_points_final 75 ; cosx_pruning_scheme robust; }. energy = energy('scf'); ```. This one fails in the SAD-guess iteration, with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::diagonalize: DSYEV failed! !; ! Error occurred in file: !; ! /theoryfs2/ds/dpoole34/Documents/Codes/psi4/psi4/src/psi4/libmints/matrix.cc !; ! on line: 1715 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Matrix::diagonalize(psi::Matrix&, psi::Vector&, psi::diagonalize_order) !; ! !; !----------------------------------------------------------------------------------!; ```. Various things can be switched, with equally varying effects:; * Switching the COSX_PRUNING_SCHEME from ROBUST to TREUTLER fixes these calculations.; * Switching from 146 spherical points to either 110 or 170 fixes these calculations.; * Switching from 50 radial points to either 55 or 45 does _not_ fix these calculations.; * Switching from water to benzene does _not_ fix these calculations. Finally, from my observation, the problem seems to be localized specifically to COSX. Consider the following input:; ```; molecule mol {; 0 1; O; H 1 0.96; H 1 0.96 2 104.5; symmetry c1; no_reorient; no_com; }. set {; scf_type direct; df_scf_guess false; basis aug-cc-pVDZ; e_convergence 1.0e-10; incfock true; incfock_full_fock_every 4; ints_tolerance 1.0e-12; dft_spherical_points 146; dft_radial_points 50; dft_vv10_spherical_points 146; dft_vv10_radial_points 50; dft_pruning_scheme robust; mbis_spherical_points 146; mbis_radial_points 50; mbis_pruning_scheme robust; }. energy, wfn = energy('b3lyp-nl', return_wfn=True); oeprop(wfn, ""MBIS_CHARGES"", ""MBIS_VOLUME_RATIOS""); ``",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890:2547,ROBUST,ROBUST,2547,https://psicode.org,https://github.com/psi4/psi4/issues/2890,1,['ROBUST'],['ROBUST']
Availability," items need to be highlighted more and categorical division can be improved. Note: Psi4 1.3 starts around PR #1065. TODO: Document #1393, . ##. # Major Points of Interest. - Added native Windows compatibility without the WSL requirement.; - DFT collocation grids can now be cache in-memory to avoid extra computation and lowering the total cost of DFT by up to a factor of two (#1233).; - Wavefunctions can now be serialized to disk and back using `Wavefunction.to_file/from_file` (#1304).; - Psi4 is now Python 3.5+ only, Psi4 1.4 will be Python 3.6+ only. Potential:; - A smart SCF solver that can intelligently make a variety of choices depending on local conditions (#1135).; - TDDFT for HF, LDA, and GGA SCF wave functions (#1349). . # Obtaining; - Binary installers: ; - Python Anaconda: `conda install psi4 -c psi4`. ##. # New Methods; - Improved support for the [MolSSI](molssi.org) QC Schema [interface](http://molssi-qc-schema.readthedocs.io/en/latest/index.html#) v1; - VV10 dispersion is now available for UKS references.; - Cubeprop can now compute the `FRONTIER_ORBITALS` and `DUAL_DESCRIPTOR` quantities.; - nZaPa-NR basis sets have been added.; - The recursive driver can now compute N-body gradients and Hessians. # New External Libraries; - [QCElemental](https://github.com/MolSSI/QCElemental) - A library for CODATA, molecule manipulation routines, and periodic table information.; - [HelPME](https://github.com/andysim/helpme) - A particle-mesh Ewald library for long-range electrostatics.; - [pyoptking](https://github.com/psi-rking/optking) - A python-based implementation of the OptKing geometry optimization and IRC program. # First Time Contributors; - @raimis - #1399, #1185, #1183, +70 more!; - @obrien951 #1359, #1222, #1130, #1140, #1100, #1097; - @zachglick #1453, #1304, #1291; - @tovrstra #1510, #1506, #1500; - @timostrunk #1133, #1128, #1127; - @mdav2 #1374, #1142; - @chapincavender #1364; - @janisozaur #1321; - @rainli323 #1131; - @yxie326 #1083. # Additional Non-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406:1244,avail,available,1244,https://psicode.org,https://github.com/psi4/psi4/issues/1406,1,['avail'],['available']
Availability," jfit sets; ```; b=( def2*jfit.gbs ); for((ib=0;ib<${#b[@]};ib++)); do for((jb=0;jb<ib;jb++)); do echo -n ""${b[ib]} vs ${b[jb]}: ""; diff ${b[ib]} ${b[jb]}| wc -l;done;done; def2-qzvpp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-sv_p_-jfit.gbs vs def2-qzvp-jfit.gbs: 101; def2-sv_p_-jfit.gbs vs def2-qzvpp-jfit.gbs: 54; def2-svp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-svp-jfit.gbs vs def2-qzvpp-jfit.gbs: 0; def2-svp-jfit.gbs vs def2-sv_p_-jfit.gbs: 54; def2-tzvp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-tzvp-jfit.gbs vs def2-qzvpp-jfit.gbs: 0; def2-tzvp-jfit.gbs vs def2-sv_p_-jfit.gbs: 54; def2-tzvp-jfit.gbs vs def2-svp-jfit.gbs: 0; def2-tzvpp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-tzvpp-jfit.gbs vs def2-qzvpp-jfit.gbs: 0; def2-tzvpp-jfit.gbs vs def2-sv_p_-jfit.gbs: 54; def2-tzvpp-jfit.gbs vs def2-svp-jfit.gbs: 0; def2-tzvpp-jfit.gbs vs def2-tzvp-jfit.gbs: 0; ```; and the jkfit sets as well; ```; b=( def2*jkfit.gbs ); for((ib=0;ib<${#b[@]};ib++)); do for((jb=0;jb<ib;jb++)); do echo -n ""${b[ib]} vs ${b[jb]}: ""; diff ${b[ib]} ${b[jb]}| wc -l;done;done; def2-qzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 4; def2-sv_p_-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1727; def2-sv_p_-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1723; def2-svp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvpp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvpp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvpp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-tzvp-jkfit.gbs: 0; ```. According to @bennybp the sets should be all the same, see https://github.com/MolSSI-BSE/basis_set_exchange/issues/103. ## Todos; Notable points (developer or user-interest) that this PR has or ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1804:1201,echo,echo,1201,https://psicode.org,https://github.com/psi4/psi4/pull/1804,1,['echo'],['echo']
Availability," last):; File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; dfmp2_wfn.compute_energy(). RuntimeError:; Fatal Error: There are no occupied orbitals with beta spin.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; The most recent 5 function calls were:. Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); core.set_global_option(""DFT_RADIAL_POINTS"", 85); core.set_global_option(""REFERENCE"", ""uhf""); set_memory(100000000000); try:; --> optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); core.set_global_option(""GUESS"", ""read""); optimize('pwpb95-d3bj'). Psi4 stopped on: Friday, 21 August 2020 04:21PM; Psi4 wall time for execution: 0:00:04.47. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. As I am fairly new to quantum chemistry, I do not really know how to interpret this err",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995:2483,Error,Error,2483,https://psicode.org,https://github.com/psi4/psi4/issues/1995,1,['Error'],['Error']
Availability," manually. They could be written to one or more external; # files and included by adding the directory to environment variable PSIPATH; #; # The format of these external files follows the same format as those below, where there's a [name]; # tag before the standard G94 basis set specification:. # [DZ]; # spherical; # ****; # H 0 ; # S 3 1.00; # 19.2406000 0.0328280 ; # 2.8992000 0.2312080 ; # 0.6534000 0.8172380 ; # S 1 1.00; # 0.1776000 1.0000000 ; # ****; # C 0; # definition of carbon atom DZ basis...; # ****; # Any more atoms needed...; # ****. # The keywords cartesian or spherical are optional and provide default behavior if the; # puream keyword is not set. In basis strings, like below, multiple basis sets can appear, as long; # as there is a [name] tag above the definition of each basis set. The basis sets specified; # using either basis <opt_name> {...} are utilized first (in the order specified; # in the input file). Any remaining basis sets required are extracted from the built-in library,; # if they exist, or an error message is printed.; psi4.basis_helper(""""""; #; # We start by assigning basis sets to atoms. These commands can go anywhere in the basis block; #; # First, assign DZ to all atoms; assign DZ; # Now, assign 3-21G to all carbon atoms; assign C my3-21G; # The two atoms labelled H1 get a STO-3G basis two; assign H1 sto-3g; # Carbons 3 and 5 get a STO-3G basis, too; assign C1 sto-3g; # With all these in place, the symmetry is lowered to C2v automatically; # The commands are applied in order i.e., adding a line like; # assign cc-pvtz; # here would override all of the above and assign cc-pvtz to all atoms. #; # Now we define the basis sets. N.B. Indentation does not matter; it just looks prettier.; #; [my3-21G] #This is really the standard 3-21G basis, but with a different name; cartesian; ****; H 0; S 2 1.00; 5.4471780 0.1562850; 0.8245470 0.9046910; S 1 1.00; 0.1831920 1.0000000; ****; C 0; S 3 1.00; 172.2560000 0.0617669; 25.9109000 0.3587940; 5.533",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1178:2335,error,error,2335,https://psicode.org,https://github.com/psi4/psi4/pull/1178,1,['error'],['error']
Availability," not compatible with the production psi4-1.3.2+ecbda83 version(Tested under Win10 WSL Ubuntu1804). ```; Traceback (most recent call last):; File ""/root/miniconda3/envs/psi/bin/psi4"", line 177, in <module>; import psi4; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/psi4/__init__.py"", line 82, in <module>; from .driver import endorsed_plugins; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; import v2rdm_casscf; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; psi4.core.plugin_load(sofile); RuntimeError:; Fatal Error: load_plugin: Cannot open library: core.so: cannot open shared object file: No such file or directory; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; The most recent 5 function calls were:. forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source; libgdma.so 00007F0370F460DC for__signal_handl Unknown Unknown; libpthread-2.27.s 00007F03763F2890 Unknown Unknown Unknown; ld-2.27.so 00007F0376616A31 Unknown Unknown Unknown; libc-2.27.so 00007F03761472DF _dl_catch_excepti Unknown Unknown; libc-2.27.so 00007F037614736F _dl_catch_error Unknown Unknown; libdl-2.27.so 00007F0375DD1735 Unknown Unknown Unknown; libdl-2.27.so 00007F0375DD10B3 dlclose Unknown Unknown; core.cpython-36m- 00007F0371E280E7 Unknown Unknown Unknown; core.cpython-36m- 00007F037202C9B2 Unknown Unknown Unknown; core.cpython-36m- 00007F03720539F6 Unknown Unknown Unknown; core.cpython-36m- 00007F0371AFD0D6 Unknown Unknown Unknown; python3.6 00007F03769C4B36 PyCFunction_Call Unknown Unknown; python3.6 00007F03769C1A5E PyObject_Call Unknown Unknown; python3.6 00007F0376AC1834 Unknown Unknown Unknown; python3.6 00007F0376ABF37F Py_FinalizeEx Unknown Unknown; python3.6 00007F0376AC957E Py_Main Unknown Unknown; python3.6 00007F037699",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1775:1056,fault,fault,1056,https://psicode.org,https://github.com/psi4/psi4/issues/1775,1,['fault'],['fault']
Availability," pruning, respectively. This leads to a 15-20% speed up for small molecules.; - [x] the following tests have been updated because of the new BS radii: `dft-b3lyp`; `dft-custom-mgga`, `dft-grad-lr1`, `dft-grad-lr3`, `dft-grad-meta`, `dft-grad1`, `dft-grad2`, `dft-omega`, `dft-psivar`, `dft-vv10`, `dft1`, `dftd3-grad`, `dftd3-version`, `frac-traverse`, `opt13`, `pcmsolver-dft`, `pcmsolver-dipole`; - [x] new test: `dft-pruning`. ## Questions; - Pruning enabled by default? -> not this PR, but after further testing yes. ## Checklist; - [x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:2694,ROBUST,ROBUST,2694,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability," reported error with setting basis sets. As this seems a rather sane assumption to me, it is Now enforced. This uncovered a second error when ZMAT coordinates were used: energies at displacements would be off by ~4 hartrees. When the molecule is cloned in the process of getting a c1 wavefunction, I found that the coordinates of the cloned molecules differed from those of the original molecule, right before the basis sets were set. Telling the basis sets that the atoms are not what they actually are seems like the kind of thing that would lead to garbage energies, though I didn't get a detailed mechanism for this. To get the geometries consistent, I had to change the atom cloning procedure. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Molecule clone now guarantees that each elements of the atom_ list is identical to some element of the full_atom_ list.; - [x] Atom clone now guarantees that ZMATs with computed coordinates carry the computed coordinates over to the clone.; * **User-Facing for Release Notes**; - [x] Fixed a bug where using density fitting for a frequency computation would cause an error unless the symmetry was explicitly set to c1. ## Questions; - [x] Symmetry is used for the purposes of generating displacements, but not for labeling normal modes. Even if we can't take advantage of symmetry for the energetics, we should be able to use symmetry for displacements and normal modes. My hunch is that this is a problem with changing the symmetry of the molecule between the two findif calls, but I'd like Py-side findif to be accepted before looking into this, just in case. Sound good?. ## Checklist; - [x] Tests added for any newly functional features; - [x] [All of full tests run, modulo DFT benchmarks and plugins](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge (as soon as the last review is in)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1108:1726,error,error,1726,https://psicode.org,https://github.com/psi4/psi4/pull/1108,1,['error'],['error']
Availability," separate sections so that we're not suggesting psi4rc is the best way to set your scratch (pretty much, PSI_SCRATCH envvar is). Use `make sphinxmini` if you need to test the docs build.; - [x] In docs, show example csh/bash in the PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the qu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/109:1110,echo,echo,1110,https://psicode.org,https://github.com/psi4/psi4/issues/109,1,['echo'],['echo']
Availability," test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set basis bas; energy(mtd) | `PSIO_ERROR: (Incorrect block end address)` | `PSIO_ERROR: (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. - [x] Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - [x] A Logging file has been introduced. All its contents should be considered experimental and subject to change.; - [x] Dipole derivatives through finite difference of dipoles added, so IR intensities available; - [x] The dummy wavefunctions returned from wrappers always had some questionable properties (e.g., single method for mixed method, largeset HF basis for cbs wavefunction) can be even less realistic (e.g., always def2-svp basis for cbs).; - [x] n-body qcvars renamed (grace period applies); ```; ""CP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""NOCP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""VMFC-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""COUNTERPOISE CORRECTED TOTAL ENERGY"": (""CP-CORRECTED TOTAL ENERGY"", 1.7),; ""COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED TOTAL ENERGY"": (""NOCP-CORRECTED TOTAL ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY"", 1.7),; ""VALIRON-MAYER FUNCTION COUTERPOISE ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:5684,avail,available,5684,https://psicode.org,https://github.com/psi4/psi4/pull/2575,1,['avail'],['available']
Availability," the documentation and on forum threads, but these are too confusing and not working. This is my failed attempt (borrowed from http://vergil.chemistry.gatech.edu/nu-psicode/install-v1.2rc2.html and http://forum.psicode.org/t/building-with-high-am/936/20):. ```; wget 'https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh'; chmod +x Miniconda3-latest-Linux-x86_64.sh; ./Miniconda3-latest-Linux-x86_64.sh -b; conda create -n p4dev psi4-dev python=3.6 -c psi4/label/dev; conda activate p4dev; conda install libint am8 -c psi4/label/dev; git clone https://github.com/psi4/psi4.git && cd psi4; `psi4-path-advisor --gcc` -DMAX_AM_ERI=8; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; ```. (The info on the forum is also confusing and due to formatting issues, some essential quotes are missing.). From the output of the penultimate line, it seems that the right AM options is picked up:. ```; ...; -- Setting option MAX_AM_ERI: 8; ...; ```. Alas, this does not work. The error I get from the last command is:. ```; -- Maximum AM: 8; -- Maximum Derivative: 0; -- CMAKE_C_FLAGS: -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- CMAKE_CXX_FLAGS: -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- SIMINT_C_INCLUDES: /home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external;/home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build/stage; -- SIMINT_C_FLAGS: -std=c99;-Wall;-Wextra;-pedantic;-Wno-unused-parameter;-Wno-unused-variable;-fopenmp;-mavx; -- SIMINT_LINK_FLAGS: -fopenmp; CMake Error at simint/CMakeLists.txt:7 (message):; Maximum angular momentum set is greater than I have available (7); ```. I've checked manually that my libint supports the right angular momenta:. ```; grep MAX ~/miniconda3/envs/p4dev/include/libint/*",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341:1212,error,error,1212,https://psicode.org,https://github.com/psi4/psi4/issues/1341,1,['error'],['error']
Availability," use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors generated.; make[2]: *** [src/lib/libfrag/CMakeFiles/frag.dir/LibFragDriver.cc.o] Error 1; make[1]: *** [src/lib/libfrag/CMakeFiles/frag.dir/all] Error 2; make: *** [all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:4442,error,error,4442,https://psicode.org,https://github.com/psi4/psi4/issues/206,8,"['Error', 'error']","['Error', 'error', 'errors']"
Availability," with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self_t, undefined_t> op(const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:140:1: note: in expansion of macro ‘PYBIND11_UNARY_OPERATOR’; PYBIND11_UNARY_OPERATOR(pos, operator+, +l); ^~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory '/home/work/psi4/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:647: CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```. I configured psi4 with; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBR",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:3534,error,error,3534,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['error'],['error']
Availability," {; guess sad; scf_type df; basis DZVP # works for def2-svp; e_convergence 8; d_convergence 8; }; e, wfn = energy('scf', return_wfn=True); oeprop(wfn, ""MBIS_VOLUME_RATIOS"", 'MBIS_CHARGES', title='CH3I-dzvp'). ```; The error message reads:; ```; Traceback (most recent call last):; File ""/home/anaconda3/envs/psi4-09-26-22/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 33, in <module>; File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/util.py"", line 72, in oeprop; free_atom_volumes(wfn); File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/prop_util.py"", line 121, in free_atom_volumes; psi4.oeprop(at_wfn, 'MBIS_CHARGES', title=a_sym + "" "" + method, free_atom=True); File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/util.py"", line 74, in oeprop; oe.compute(). RuntimeError: ; Fatal Error: Atomic Number 53 unsupported by MBIS; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1657298395608/work/psi4/src/psi4/libmints/oeprop.cc on line: 1871; The most recent 5 function calls were:. psi::OEProp::compute_mbis_multipoles(bool); psi::OEProp::compute(). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""SCF_TYPE"", ""df""); core.set_global_option(""BASIS"", ""DZVP""); core.set_global_option(""E_CONVERGENCE"", 8); core.set_global_option(""D_CONVERGENCE"", 8); e, wfn = energy('scf', return_wfn=True); --> oeprop(wfn, ""MBIS_VOLUME_RATIOS"", 'MBIS_CHARGES', title='CH3I-dzvp'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Atomic Number 53 unsupported by MBIS !; ! Error occurred in file: /scratch/psilocaluser/conda- !; ! builds/psi4-multiout_1657298395608/work/psi4/src/psi4/libmints/oeprop.cc on !; ! line: 1871 !; ! The most recent 5 function calls were: !; ! psi::OEProp::compute_mbis_multipoles(bool) !; ! psi::OEProp::co",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2728:1208,Error,Error,1208,https://psicode.org,https://github.com/psi4/psi4/issues/2728,2,['Error'],['Error']
Availability," | Program | Monomer A (H) | Monomer B (H) | Dimer AB (H)| $E_{int}$ (kcal/mol)| ; |---------|-------------|-------------|-----------|-----------|; | Psi4 | -453.84229689692728 | -453.84229689783353 | -907.68447385499462 | 0.075263339533 |; |Orca | -453.842841688023 | -453.842841698644 | -907.685688152560 | -0.002990642998 |. | Program | $E_{int}$ (kJ/mol)| Notes|; |---------|-------------| ----|; | Psi4 | 0.31490181 | |; |Orca | -0.01251285 | |; | Benchmark | -0.00315431 | Focal Point CCSD(T)/CBS with Psi4 |. I have noticed this warning in all of my Psi4 hexamine/PBEh-3c files:; `Warning: Molecule has a spherically-symmetric moment of charge but lacks icosahedral, octahedral, and tetrahedral symmetry.` . CDS figures this has something to do with the grid placement. Any ideas of how to alleviate this warning while keeping the same geometries and/or what the energy difference could be attributed to? I've tried different basis sets, different number of grid points, `symmetry c1`, `molecule.symmetrize(1e-3)`, no pruning scheme (rather than `robust`). The only time I have been able to get the warning to go away is when I use `bsse_type='cp'`, but I really shouldn't be running the calculation with cp correction because that is already included in the PBEh-3c calculation. Output files for the above example are attached, as well as a graph of Psi4 and Orca interaction energies for all dimers tested. . [Psi4-214-int.txt](https://github.com/psi4/psi4/files/9200713/Psi4-214-int.txt); [Orca-214-monA.txt](https://github.com/psi4/psi4/files/9200765/Orca-214-monA.txt); [Orca-214-monB.txt](https://github.com/psi4/psi4/files/9200766/Orca-214-monB.txt); [Orca-214-dimerAB.txt](https://github.com/psi4/psi4/files/9200767/Orca-214-dimerAB.txt). [hexamine-compare.pdf](https://github.com/psi4/psi4/files/9200777/hexamine-compare.pdf); Image of hexamine: ; ![hexamine](https://user-images.githubusercontent.com/87093097/181296669-eceb1742-e404-4c29-ada4-c090b1d63875.png). Thank you!; Caroline",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2647:1548,robust,robust,1548,https://psicode.org,https://github.com/psi4/psi4/issues/2647,1,['robust'],['robust']
Availability," | `_1`, c-f | c-f | c-f |; | A'' [^10] | flex solid-harm ordering, libtool-based | [upstream master](https://github.com/evaleev/libint/tree/master) any point after https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9 | 3Dec23, after #3047, v1.9 (see also A') | [libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:2836,down,download,2836,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"""Error writing to file"" PSi0_error 12",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959:1,Error,Error,1,https://psicode.org,https://github.com/psi4/psi4/issues/1959,1,['Error'],['Error']
Availability,"# PsiPEP2: Rationalize Variable Access. Pursuant to #883, common driver migration, the War Against Globals, and [QCSchema](https://github.com/molssi/qcschema), we want clear programmatic access to QC quantities, and we want them on the Wfn/JSONrec, not off `Process.environment.globals`. First step toward this is duplication of `P::e.globals` onto `Wfn`. Unfortunately, the syntax and methods don't align (see table below). Also unfortunately, we have many redundant `get_`s. This PsiPEP proposes the following syntax changes and additions. ### Final Proposal (dynamic). * **W-C** means C-side access to `psi4.core.Wavefunction`; * **W-Py** means Py-side access to `psi4.core.Wavefunction`; * **G-Py** means Py-side access to `psi4.core` globals. | Now `Wavefunction` | Now `psi4.core` | Proposed Both | W-C | W-Py | G-Py | doc |; |-----|----|----|---|---|---|---|; | | has_variable | has_scalar_variable |y|y|y| is float var set ? |; | get_variable | get_variable | scalar_variable |y|y|y| return float var value |; | set_variable | set_variable | set_scalar_variable |y|y|y | set float var value |; | | | del_scalar_variable |y|y|y | unset float var |; | variables | get_variables | scalar_variables |y|y|y| return dict of all float vars |; | |; | | | has_array_variable |y|y|y| is array var set ? |; | get_array | get_array_variable | array_variable |y|y|y| return array var value |; | set_array | set_array_variable | set_array_variable |y|y|y| set array var value |; | | | del_array_variable |y|y|y| unset array var |; | arrays | get_array_variables | array_variables |y|y|y| return dict of all array vars |; | |; | | | has_variable |–|y|y| is any float or array var set ?|; | | | variable |–|y|y| return float or array var value |; | | | set_variable |–|y|y| set float/Matrix/ndarray var value |; | | | del_variable |–|y|y| unset float or array var |; | | | variables |–|y|y| return dict of all float or array vars |; | | clean_variables | clean_variables |–|–|y| unset all float or array vars ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1375:458,redundant,redundant,458,https://psicode.org,https://github.com/psi4/psi4/issues/1375,1,['redundant'],['redundant']
Availability,"# assuming you have stored you scf_wfn into water-ammonia.npy:; original_wfn = psi4.core.Wavefunction.from_file(""water-ammonia""). print(""HF energy:"",original_wfn.energy()); CASCI_energy = psi4.energy('fci', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASCI energy:"",CASCI_energy); CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASSCF :"",CASSCF_energy); ```. This outputs:; ```; HF energy : -130.74589276437956; CASCI energy : -130.7730891288199; ```. and then the error:; ```; ==> Setting up CI strings <==. There are 462 alpha and 462 beta strings; The CI space requires 213444 (2.13E+05) determinants and 1 blocks. ==> Setting up MCSCF integrals <==. Could not find requested basisset (DF_BASIS_SCF).Traceback (most recent call last):; File ""PSI4_CAS_sim.py"", line 89, in <module>; CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 570, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 4804, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 100, in mcscf_solver; mcscf_obj = ciwfn.mcscf_object(); RuntimeError: ; Fatal Error: Wavefunction::get_basisset: Requested basis set (DF_BASIS_SCF) was not set!. Error occurred in file: /Users/bsenjean/Documents/Git_repositories/psi4/psi4/src/psi4/libmints/wavefunction.cc on line: 670; The most recent 1 function calls were:. ```. EDIT: to run this input, note that I used the following options to generate my wavefunction object:. ```; psi4.set_options({'basis': 'STO-3G-DECON',; 'reference': 'rohf',; 'scf_type': 'direct',; 'guess': 'sad',; 'puream':true}); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1871:2494,Error,Error,2494,https://psicode.org,https://github.com/psi4/psi4/issues/1871,2,['Error'],['Error']
Availability,"## Big Picture of the Project; See #1783. tl;dr: The goal is to improve orbital convergence in `occ`, but I need the module cleaned up to make it easier to think about the code I'm needing to mess with. I'm breaking a monolith PR into several. ## Description of the PR; The current PR has two objectives. First, condense the MP2 amplitude functions, MP2 energy functions, and MP2 1RDM functions into one function each. Although several methods needed these functions with minimal changes, there were two or three functions created for each of those three. Dealing with how he handled spin-scaling forced me to take a second objective: to clean OCC's handling of spin-scaling variables. OCC previously allowed the user to overwrite the definitions of opposite-spin scaling and spin-component-scaling schemes and used far too many variables. The current scheme still allows users to make their own definitions, but those are now sent to custom variables. In addition, many keywords have been eliminated. OCC's handling of spin-scaling now differs from DFOCC's, but I am not fool enough to take on that module. Obligatory ping of @susilehtola and @hokru, who expressed opinions about this on Slack, and @loriab, who expressed many opinions about this on Slack. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] We have shed another 800+ lines of code.; - [x] Major refactor of spin-scaling in OCC. All keywords for manual handling of spin scaling in OCC are removed. Please use `os_scale` and `ss_scale` for custom scaling. Select the spin scaling method that goes to the current energy by the method string you pass to the energy call.; ~~- [ ] Update documentation accordingly.~~ Deferred to Lori PR. ## Checklist; - [x] Quick tests, occ related tests, manual diff checks, and `test_mp2.py` all pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1789:1119,ping,ping,1119,https://psicode.org,https://github.com/psi4/psi4/pull/1789,1,['ping'],['ping']
Availability,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/365:529,error,error,529,https://psicode.org,https://github.com/psi4/psi4/pull/365,1,['error'],['error']
Availability,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/318:404,error,errors,404,https://psicode.org,https://github.com/psi4/psi4/pull/318,1,['error'],['errors']
Availability,## Description. Allows BCCD with ROHF starting orbitals.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Added BCCD and BCCD_T to the list of ROHF semicanonicalize cases in `src/bin/cc*`.; - [x] Added a BCCD ROHF test case; - [x] Added a BCCD_MAXITER keyword instead of using an arbitrary value; - [x] Removed redundant `proc.py:run_bccdt`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/295:352,redundant,redundant,352,https://psicode.org,https://github.com/psi4/psi4/pull/295,1,['redundant'],['redundant']
Availability,"## Description. Code used in the roa driver has been re-organized into a module `findif_response_utils`. ; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - ROA driver functions the same as it does currently.; - New drivers (in the works) will use this module rather than c+p functions from roa.py . _RE comments by @dgasmith_; - [x] Change naming scheme in tensor_helpers.py to clarify return types are not proper matrix/tensor objects; - [x] Change Exceptions raised to `PsiException` so that error information is printed to screen and the output files ; ## Questions; - [x] @lothian thoughts on the `registered_props` dict? It isn't very flexible, but I don't know if this kind of driver _needs_ to be flexible. The hard-coded `registerd_props` dict has been removed in favor of a solution that allows each driver to choose the arguments to the `property()` function in each sub-dir. The module doesn't need to know anything except what the calling driver tells it :).; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/395:530,error,error,530,https://psicode.org,https://github.com/psi4/psi4/pull/395,1,['error'],['error']
Availability,"## Description. Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and makes F/I-SAPT postprocessing scripts available in install/share. ; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [ ] Enables the average citizen to quickly begin using F/I-SAPT.; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/467:129,avail,available,129,https://psicode.org,https://github.com/psi4/psi4/pull/467,1,['avail'],['available']
Availability,"## Description. Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and makes F/I-SAPT postprocessing scripts available in install/share.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Enables the average citizen to quickly begin using F/I-SAPT.; ## Status; - [x] Ready to go. Looks ready to me, though there may well be further reST changes after viewing the docs build. @robparrish may want to look it over. We'll close the other PR.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/470:129,avail,available,129,https://psicode.org,https://github.com/psi4/psi4/pull/470,1,['avail'],['available']
Availability,"## Description. Finally, some modernization of the PK JK object. I coded everything trying to maximize code reuse and using polymorphism where it would be good, but if you have any suggestions on the code organization please let me know.; Traditionally, PK denotes the integral supermatrices stored on disk. Here I use it more generally for the class of algorithm storing integrals somewhere instead of recomputing them.; ## Caution:. Some older commits contain additional attempts at algorithms that were deleted since (for being inefficient). You may want to review the most recent commits only.; ## Todos. Notable points that this PR has accomplished:; - [x] In-core PK algorithm when enough memory is available; - [x] ""Reorder"" PK algorithm: the PK supermatrices are directly written on file without any intermediates by reordering the integral computation (thanks to @dgasmith for discussion), good for large to medium memory; - [x] ""Yoshimine"" PK algorithm: pre-sorts integrals on disk, similar to more traditional algorithm. Best for low memory, otherwise quite slow.; - [x] Automatic selection of the algorithm depending on available memory; - [x] wK long-range integrals are also handled; - [x] Non-symmetric density matrices are handled ; ## Questions; - [x] I'd like this pull request to stay unmerged for a few days so everyone who wants to have a look at it has some time to do so. (@andysim, @jturney ?); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/387:705,avail,available,705,https://psicode.org,https://github.com/psi4/psi4/pull/387,2,['avail'],['available']
Availability,"## Description. Finally, the first of @bozkaya's new methods. These are the canonical (non-orbital-optimized, non-FNO) CC methods with UHF reference by density-fitting and Cholesky decomposition. Gradients available for the most popular methods. This is PR No. 5 in the mega-dfocc-remp series. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] new methods!; - [x] uhf df ccd E & G; - [x] uhf df ccsd E & G ; - [x] uhf df ccsd(t) E & G (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf df a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd-ccd E; - [x] uhf cd-ccsd E; - [x] uhf cd-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] pick over canonical methods and run some basic timings tests; - [x] TODO: kill `new` pass; - [x] TODO: there might be UHF CCD in there, too.; - [x] TODO: merge #2731 first. it has a lot of stdsuite changes that I don't want to rebase through. nevertheless, stdsuite on the new methods is working fine locally. the azure errors are that uhf cc methods are running rather than throwing NYI as it expects.; - [x] TODO: df ccsd(t) gradients need to be marked experimental and semi-hidden until optimization. REVISED 25 Oct; ```; Module comparison timings [s] for CCSD & CCSD(T) energy & gradient; * Benzene, C6H6; * Either aug-cc-pVDZ (192 nbf) or cc-pVDZ (119 nbf); all-electron; * Same singlet system run as RHF & UHF; * CC converged to 1e-7; * 20 GiB, 8 threads. ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2739:206,avail,available,206,https://psicode.org,https://github.com/psi4/psi4/pull/2739,1,['avail'],['available']
Availability,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/383:372,error,error,372,https://psicode.org,https://github.com/psi4/psi4/pull/383,2,['error'],['error']
Availability,"## Description. Fixed incorrect B matrix for 'interfragment coordinates'. These coordinates are not used by default, but the user can specify them to create very specific coordinates. They may be useful, e.g., in combination with 'freeze_intrafrag' for fixed-body optimizations. When symmetry is turned on, there is a difficulty with the symmetry detection in combination with the way in which the displacements are carried out for these coordinates. A loosening of the symmetry tolerance when computing the symmetrized geometry usually works and has been implemented. In the future, it may be best to carry out the displacements in these coordinates iteratively and numerically as they are for redundant intrafrag coordinates. However, this approach would be more hazardous with no upside in C1, and I don't have time to implement it right now anyway.; - [ ] Feature1; Reference atoms can now be specified by the user with a standard multi-dimensional python list. The test cases illustrate this. Probably, this utility will stimulate more use cases for further development of the code.; ## Questions; - [ ] Question1; ## Status; - [X] Ready to go; All tests, including the 3 new ones pass for me.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/432:479,toler,tolerance,479,https://psicode.org,https://github.com/psi4/psi4/pull/432,2,"['redundant', 'toler']","['redundant', 'tolerance']"
Availability,"## Description. Fixes special case of traceback printing where only lineno available is from `exec(content)`, which is useless. This fixes #1920 . We don't get Jonathon's nice `-->` offending line printing, but at least we don't get a new error. I've tried it on `print(""asdf"")` and some more common mistakes. ```; Traceback (most recent call last):; File ""/psi/gits/hrw-py39/objdir39/stage/bin/psi4"", line 337, in <module>; exec(content). File ""<string>"", line 26; print ""asdf""; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""asdf"")?. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------!; ! !; ! Missing parentheses in call to 'print'. Did you mean print(""asdf"")? !; ! !; !----------------------------------------------------------------------!; ```. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2083:75,avail,available,75,https://psicode.org,https://github.com/psi4/psi4/pull/2083,2,"['avail', 'error']","['available', 'error']"
Availability,"## Description. If a DFT functional gives `NaN` when we attempt to numerically integrate it, throw the functional under the bus immediately instead of leaving my ADIIS code to take the blame, i.e., give a better error message. Closes #2609. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2611:212,error,error,212,https://psicode.org,https://github.com/psi4/psi4/pull/2611,1,['error'],['error']
Availability,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/323:102,checkpoint,checkpoint,102,https://psicode.org,https://github.com/psi4/psi4/pull/323,1,['checkpoint'],['checkpoint']
Availability,## Description. Make docs look nice again; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] clean up a lot of warnings/errors generated by sphinx-build; - [x] regenerate `_static`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/343:159,error,errors,159,https://psicode.org,https://github.com/psi4/psi4/pull/343,1,['error'],['errors']
Availability,## Description. Makes all components of the dHF computation in FISAPT available as Psi Variables.; ## Todos; - [x] Export detailed components of FISAPT dHF as Psi variables; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/480:70,avail,available,70,https://psicode.org,https://github.com/psi4/psi4/pull/480,1,['avail'],['available']
Availability,"## Description. Reduces the minimum overlap between atoms to fix issue #195. Reductions to this tolerance in the future would likely have to be for ghost atoms only. A downside to this is linear depends will pop up much more often when two atoms are this close together, especially in highly symmetric molecules.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/283:96,toler,tolerance,96,https://psicode.org,https://github.com/psi4/psi4/pull/283,2,"['down', 'toler']","['downside', 'tolerance']"
Availability,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315:1114,down,download,1114,https://psicode.org,https://github.com/psi4/psi4/pull/315,1,['down'],['download']
Availability,## Description. Running `vmd_cube.py` would produce an error due to the use of deprecated `.iteritems` instead of `.items`. ## User API & Changelog headlines; - [x] Fix Python3 compatibility in vmd_cube.py. ## Dev notes & details; - Replace `iteritems` with `items`. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3097:55,error,error,55,https://psicode.org,https://github.com/psi4/psi4/pull/3097,1,['error'],['error']
Availability,"## Description. SCF Gradients are now symmetrized by swiping some code from Andy's Deriv module and placing it in `scfgrad`. Generally we wouldn't want to duplicate code, but there isn't a great way to avoid this at the moment. Discussion in issue #298 for reasoning behind this simple solution.; ## Todos; - [x] SCF Gradient is now symmetrized.; - [x] Fixed the `opt7` convergence tolerance issue the failing cases now does an additional 6 iterations.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/301:382,toler,tolerance,382,https://psicode.org,https://github.com/psi4/psi4/pull/301,1,['toler'],['tolerance']
Availability,"## Description. Several tweaks to prepare for the 1.0 release.; ## Todos; - [x] Throws a error if NumPy is not install and prints documentation for installation, closes #407.; - [x] Tweaks CI convergence and will throw PsiException if CI/MCSCF does not converge, closes #394.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/412:89,error,error,89,https://psicode.org,https://github.com/psi4/psi4/pull/412,1,['error'],['error']
Availability,"## Description. The MOLDEN file written by psi4, which can be used by our external programs, is HUGE when a reasonably-sized molecule is calculated using a large basis set. Since for many post-processing purposes the virtual orbitals are unnecessary, it would be interesting to have an option to drop writing most virtual MOs to the file, dramatically cutting down its size. This PR implements the molden_novirtual option to SCF. If true (it is false by default to preserve the original behavior), only the occupied orbitals are written to the molden file in a closed-shell molecule. In an open-shell system, 2*max(nocca,noccb) orbitals are written.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/454:360,down,down,360,https://psicode.org,https://github.com/psi4/psi4/pull/454,1,['down'],['down']
Availability,"## Description. The MOLDEN file written by psi4, which can be used by our external programs, is HUGE when a reasonably-sized molecule is calculated using a large basis set. Since for many post-processing purposes the virtual orbitals are unnecessary, it would be interesting to have an option to drop writing most virtual MOs to the file, dramatically cutting down its size. This PR implements the molden_novirtual option to SCF. If true (it is false by default to preserve the original behavior), only the occupied orbitals are written to the molden file in a closed-shell molecule. In an open-shell system, 2*max(nocca,noccb) orbitals are written.; ## Questions; - [x] @dgasmith, input file seems unresponsive to `set MOLDEN_WRITE true`. Instead have to keep Wfn and call `molden(Wfn)`. Does that sound right for the new scheme? Otherwise, can just have `molden()` called at end of `energy()` if kw is on. The PR's molden writing was in `src/bin/scf` which is now gone. Is the driver `molden()` the replacement location or did I miss it? Currently set up to be sensitive to `MOLDEN_WITH_VIRTUAL` but whatever's decided about `MOLDEN_WRTIE`, should probably go the same way.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/472:360,down,down,360,https://psicode.org,https://github.com/psi4/psi4/pull/472,1,['down'],['down']
Availability,"## Description. The `GIT_TAG` argument to `ExternalProject_Add` was changed to `v1.1.4` to reflect a version bump in [PCMSolver](https://github.com/PCMSolver/pcmsolver/releases/tag/v1.1.4); I had introduced a bug with v1.1.3 The polarization charges were computed with a degraded accuracy. This was caught neither by the library own unit tests nor by Psi4 tests, as it becomes apparent only when trying to calculate higher-order response properties (available in DALTON, but I failed to run the PCM tests there...); I apologize for any inconvenience!; ## Todos; - [x] Update the version of PCMSolver shipped with Psi4.; ## Questions; - [x] @loriab should re-build the conda package; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/440:271,degraded,degraded,271,https://psicode.org,https://github.com/psi4/psi4/pull/440,2,"['avail', 'degraded']","['available', 'degraded']"
Availability,"## Description. The main motivation for these changes is to make the pending #1061 available satisfying the constraints and comments offered by @dgasmith and @amjames.; This mainly amounts to localizing state to a suitable CC wavefunction object and we tried doing that within the scope of #1061, but quickly recognized that some form of rewrite of the CC infrastructure would be more helpful in general. See also #1247 . This PR makes the first step of moving the various `cc*` folders inside a top-level `cc` folder which contains the `ccwave.h` and top-level implementation files. This is thus mostly aesthetics, but avoids drowning the (hopefully!) good stuff to come in a large diff. ~Hold off merging until #1203, #1206, #1251, and #1252 are in. I'll keep rebasing this one accordingly.~. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Moved `cc{energy,hbar,lambda,density,eom,response}` under `cc` folder.; - [x] Moved `ccwave.h` header file to top-level `cc` folder. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1253:83,avail,available,83,https://psicode.org,https://github.com/psi4/psi4/pull/1253,1,['avail'],['available']
Availability,"## Description. The main motivation for these changes is to make the pending #1061 available satisfying the constraints and comments offered by @dgasmith and @amjames.; This mainly amounts to localizing state to a suitable CC wavefunction object and we tried doing that within the scope of #1061, but quickly recognized that some form of rewrite of the CC infrastructure would be more helpful in general. We are preparing a more thoroughly motivated outline of the changes we propose, which will be posted as an issue. In the meantime, this PR makes the first step of moving the various `cc*` folders inside a top-level `cc` folder which contains the `ccwave.h` and top-level implementation files. This is thus mostly aesthetics, but avoids drowning the (hopefully!) good stuff to come in a large diff. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Moved `cc{energy,hbar,lambda,density,eom,response}` under `cc` folder.; - [x] Moved `ccwave.h` header file to top-level `cc` folder.; - [x] Cherry-picked some of the changes by @tomspur; * Changes suggested by valgrind and cppcheck; * Matrix CTOR from `dpdbuf4` @amjames could you check that setting `symmetry_` is done correctly?. Aesthetics; - [x] Run `clang-format` on `ccenergy`. Supersedes #1203, see #1144 ; - [x] Run `clang-format` on `ccdensity`. Supersedes #1202, see #1144 ; - [x] Run `clang-format` on `cclambda`. Supersedes #1206, see #1144 ; - [x] Run `clang-format` on `cctriples`. Supersedes #1209, see #1144 ; - [x] Remove `void` from function argument lists in the `cc*` folders. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1243:83,avail,available,83,https://psicode.org,https://github.com/psi4/psi4/pull/1243,1,['avail'],['available']
Availability,"## Description. The open-shell SAPT0 code, with documentation included.; ## Todos; - [x] Implement all open-shell SAPT0 terms; - [x] Add documentation; - [x] Add export of Psi variables; ## Questions; - [ ] When ROHF is requested, we cannot compute the relaxed induction term, hence only unrelaxed induction is available for the Psi variables. For now, I export it in the `SAPT IND20,R ENERGY` and `SAPT EXCH-IND20,R ENERGY` and I issue a warning in the output file that these variables actually contain the unrelaxed induction. This way, the PsiVar machinery computes the total induction energy correctly. @loriab, is that fine ? It should be quite rarely used anyway.; ## Status; - [x] Ready to go, as far as I'm concerned.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/479:311,avail,available,311,https://psicode.org,https://github.com/psi4/psi4/pull/479,1,['avail'],['available']
Availability,"## Description. The overall goal was to revamp the SCF guess inside Psi to give a bit better convergence and reduce the number of times a user needs to intervene in guess selection. To this end we have improved the speed of SAD, and tweaked default guesses away from CORE. The other half of improving SCF convergence is improving the solver which is delegated to a later date.; ## Todos; - [x] Changed SAD to use DF (default) or a Direct JK object. Reduced computational time of SAD by 50-2000x (yes, really).; - [x] SAD guess is now default for RHF, all RHF test cases pass.; - [x] GWH is now the default for ROHF/UHF, cc11 fails and was switched back to CORE.; - [x] Added fractional occupations via electron smearing across a given row. Preliminary tests show that for something like the HF molecule this works really well, but less so for Benzene. However, for UHF test cases this seems to help things dramatically. Turned off by default.; - [x] Closes #156. Now takes ~3 seconds instead of several hours.; - [x] Add Weigend J fit as a fail over fitting basis sets. While this is only J fit, this appears sufficient for SAD and contains auxiliary basis for atoms through Xenon.; - [x] Add secondary failover to Direct if DF is too angular momentum heavy for compiled `libint`.; ## Questions; - [x] We are not sold on GWH as the default for ROHF and UHF, the general consensus is that it works better than CORE on the average. Feedback is most welcome.; - [x] There may have been stability issues with SAD in the past. Can anyone recall what these were and provide an example?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/400:1203,failover,failover,1203,https://psicode.org,https://github.com/psi4/psi4/pull/400,1,['failover'],['failover']
Availability,"## Description. The semilocal PW86 exchange functional (PRB 33:8800(R), 1986) is implemented. The dft1 test case includes four test cases for this functional on a water molecule. The energies are compared against the nwchem reference implementation. The PW86PBE exchange-correlation functional (keyword: pw86pbe), built as the combination of PW86 exchange and PBE correlation, is also made available.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/453:390,avail,available,390,https://psicode.org,https://github.com/psi4/psi4/pull/453,2,['avail'],['available']
Availability,## Description. There was a compiler error when GTFock was called in libscf_solver. I fixed this error and I also enabled GTFock to work with symmetry. ; ## Todos; - [x] PSI4 compilers with HAVE_JK_FACTORY flag enabled; - [x] GTFock works with symmetry. ; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/287:37,error,error,37,https://psicode.org,https://github.com/psi4/psi4/pull/287,2,['error'],['error']
Availability,"## Description. There was an error in df-mp3 grad. I was comment out the wrong line. Now, it is fixed and DF-MP3 grad works!; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [ ] Feature1; ## Questions; - [ ] Question1; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/429:29,error,error,29,https://psicode.org,https://github.com/psi4/psi4/pull/429,1,['error'],['error']
Availability,"## Description. This PR does two things:. 1. Adds a new compile-time option, `FORCE_PEDANTIC`, that adds the `-pedantic-errors` flag to the compilation flag list when enabled. The `-pedantic-errors` flag has the compilation fail any time the code does not strictly follow the C++ language standard, i.e., whenever a compiler-specific language extension is used. `FORCE_PEDANTIC` is currently set to be enabled by default. ; 2. Fixes any instances of the code where the above option/flag would cause a compilation failure. This only requires two changes currently - removing extra semicolons in `libdiis/diismanager.h`, and replacing use of variable-length C-style arrays in `libmints/extern.cc`. The goal of these changes is to improve code portability across different compilers. By effectively disabling compiler-specific language extensions, the code no longer relies on specific compiler functionalities to work, and therefore should be compatible with a larger range of compilers across a wider variety of systems. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds a new compile-time setting, `FORCE_PEDANTIC`, that causes compilation to fail whenever use of a compiler-specific extension is detected.; - [X] Removes extraneous semicolons in `libddis/diismanager.h` that led to compiler error with the `FORCE_PEDANTIC` option enabled.; - [X] Replaces the use of variable-length C-style arrays in `libmints/extern.cc` with `std::vector` constructs. ## Questions; - [X] Should this new option be on by default?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145:120,error,errors,120,https://psicode.org,https://github.com/psi4/psi4/pull/3145,3,"['error', 'failure']","['errors', 'failure']"
Availability,"## Description. This PR fixes thread synchronization in AIOHandler after KTB. The std::thread in C++11 must not be joinable when it is destroyed, or it calls terminate(). Before destroying every thread created in AIOHandler, it is thus joined. In addition, a thread must not be joined twice, thus the synchronization step now checks whether the thread is joinable before joining. Fixes #596 and should definitely fix errors in tests cubeprop, sapt2, sapt3 and sapt6 that appeared in KTB and for which @loriab had a workaround. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fixed thread management in AIOHandler. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/609:417,error,errors,417,https://psicode.org,https://github.com/psi4/psi4/pull/609,1,['error'],['errors']
Availability,"## Description. This PR is a reboot of https://github.com/psi4/psi4/pull/2695. That PR hasn't been kept up-to-date with the many changes to JK since, so I decided to reimplement it from scratch. The motivation and ideas are the same, however, so I will copy-paste the description here:. This PR is the second in a series of planned PRs designed to remove density screening from the TwoBodyAOInt object and into the JK object, with PR https://github.com/psi4/psi4/pull/2547 being the first such PR. Having density screening available in TwoBodyAOInt runs the risk of applying density screening to algorithms where density screening doesn't make sense. Thus, it would be a good idea to move the logic of density screening to where it is more correctly applied, i.e., the JK object. The primary purposes of this PR are twofold:. First, this PR introduce the shell_significant() framework to the JK class. The shell_significant() framework starts with a shell_significant() virtual function that exists in the base JK class. The shell_significant() function can then be redefined specifically for different JK derived classes as needed. The existence of shell_significant() provides a unified framework for performing screening for any JK method, and it also provides the method by which density screening can be added directly to the relevant JK classes.; Second, this PR uses the shell_significant() framework to reimplement screening for certain JK methods. Most significantly, as implied in the first point, the biggest change in this regard was the removal of shell_significant_density() from TwoBodyAOInt into the domain and its reimplementation into the JK shell_significant() definitions. With this change, density screening is now the domain of individual JK classes rather than the TwoBodyAOInt class, which was one of the primary goals of this overall refactor PR set in the first place. Additionally, another method that was subject to slight changes from the shell_significant() framework was",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3098:29,reboot,reboot,29,https://psicode.org,https://github.com/psi4/psi4/pull/3098,2,"['avail', 'reboot']","['available', 'reboot']"
Availability,"## Description. This is No. 7 of the DDD series, #1351. ## Todos; - [x] test both old `run_json` and new `run_qcschema` modes and access patterns in the basic addons testing.; - [x] I don't remember in what order it came about, but `driver_util.py` had a function `negotiate_derivative_type` that was a simpler version (returned `analytic` and `1_0` for analytic and findif gradient, respectively) of the trio of functions in ddd (returns `(1, 1)` and `(1, 0)` for analytic and findif gradient, respectively) and was tested in `test_dertype.py` and was never run. This unused fn and its testing was removed and replaced by the ddd version.; - [x] the new `negotiate_derivative_type` function probes managed methods earlier than before, so it happens that the exact error names (not the text) expected by stdsuite change.; - [x] the new `negotiate_derivative_type` function is called early, so it now handles the methodname typo helper (""Did you mean?"") that FAE added. The independent `_method_exists()` fn removed.; - [x] the former function `_set_convergence_criterion` where you passed in 5 integers for the different E/D_CONVERGENCE values has been rewritten as `negotiate_convergence_criterion` where you pass in a tuple of the case (e.g., `(2, 1)` is Hessian by findif of gradients). In actual `driver.py`, the function calls have been switched out. The values set are the same, but the arguments like `(1, 0)` aren't necessarily appropriate in this non-ddd driver code routing.; - [x] the former function `_find_derivative_type` has been replaced by three functions headed up by `negotiate_derivative_type`. For both, the goal is to take a method name, the target derivative, and any user modifications and return the appropriate analytic or findif strategy or produce a helpful error. sounds simple, but managed methods and cbs specs complicate things. In ddd, this function is called early, not piecemeal throughout the driver, so more probing has been consolidated into the new function. In ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2536:765,error,error,765,https://psicode.org,https://github.com/psi4/psi4/pull/2536,1,['error'],['error']
Availability,"## Description. smooth user interactions with mp2 & cepa so that minimal inputs have a chance of working (esp. w/grad) and the same call to different modules returns the same answer.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] `cepa(0)`/`ocepa(0)` in occ/dfocc called more specifically as `lccd`/`olccd`. psivars adjusted accordingly.; - [x] meanwhile, `cepa(0)` in fnocc called more specifically as `lccsd` (alias `cepa(0)`) or w/o singles as `lccd`. psivars and managed methods adjusted accordingly.; - [x] fixed defaulting of grad to findif of energies for managed methods. it had broken b/c just tested availability of analytic grad on `procedures['gradient']` and for managed methods that doesn't tell the full story. now probe the managed method in proc.py to see if gradient available.; - [x] alter default algorithms for scf for fnocc and dfocc. we've always said that the scf default for df post-HF methods was df, but only actually did algorithm switching for dfmp2 and sapt. now we really do it. in particular, so long as you don't set scf_type to the contrary, this will make a conv mp2 gradient run conv+conv and a df mp2 gradient run df+df.; ## Minor Todos; - [x] test cases build and run all the plugin templates; - [x] let ppl know how to access rohf mp3 & mp4 for toy problems; ## Questions; - [x] @edeprince3 should look over my changes to fnocc procedures in proc.py to make sure the scf algorithm flipping is sensible.; - [x] ditto, @bozkaya for occ/dfocc; ## Status; - [x] Ready to go, after @edeprince3 and @bozkaya sign off on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/306:653,avail,availability,653,https://psicode.org,https://github.com/psi4/psi4/pull/306,2,['avail'],"['availability', 'available']"
Availability,"## Description; #2476 and #2594 indicate a major problem in Psi's SCF code: the simplistic formula `nalphapi = doccpi + soccpi` and `nbetapi = doccpi` is incapable of describing references where there are more beta than alpha orbitals of a given irrep. This occurs in MOM (where we instead use ugly hacks) and in UHF (where we crash). Furthermore, storing all of these irrep quantities is redundant. This PR remedies the situation by only storing `nalphapi` and `nbetapi`. `doccpi` and `soccpi` can be computed from these when needed. The Py-side API is unchanged `doccpi(), soccpi()`, while the C-side API changes from `doccpi_, soccpi_` to `doccpi(), soccpi()`. While we are doing some extra work to compute docc and socc every time they're needed, the computational cost is negligible in comparison to Fock diagonalizations, integral transforms, and tensor contractions. . To prevent scope creep, this PR aims solely to change the wavefunction. **This is a major undertaking and should not be done lightly.** A subsequent PR will fix the linked issues (if not fixed by this PR) and add them as test cases once the fix is confirmed. Obligatory @susilehtola ping. ## Todos; - [x] DOCC and SOCC are now computed rather than stored; - [x] MOM simplified; - [x] Lots of docc/socc replaced with alphapi/betapi where more appropriate; - [x] More auto; - [x] More dimension, fewer raw arrays . ## Checklist; - [x] Passes ctest and pytest (all, except addons). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2619:389,redundant,redundant,389,https://psicode.org,https://github.com/psi4/psi4/pull/2619,2,"['ping', 'redundant']","['ping', 'redundant']"
Availability,"## Description; **Currently a work-in-progress**. **Currently requires intel compiler**. Implements the simint two-electron integral library into Psi4. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [X] Implement ENABLE_SIMINT option; - [X] Download & build via ExternalProject_Add; - [ ] Download & use precompiled library; - [X] Simint is being used rather than libint; - [ ] Batching interface to interface classes in libmints (partially done); - [ ] Use batching in JK objects (partially done); - [ ] Fix some GCC issues in simint; - [ ] Port new batching interface to libint & erd; - [ ] Higher AM, or split between simint and erd; - [ ] Derivatives (WIP in simint...). * **User-Facing for Release Notes**; - [ ] Hmmm. ## Questions; - [ ] Where to put tarballs (that is more permanent for psi4). Git is probably not a good idea. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/533:305,Down,Download,305,https://psicode.org,https://github.com/psi4/psi4/pull/533,2,['Down'],['Download']
Availability,"## Description; **What?** This PR creates the `IrrepedVector` class template. The `Vector` and `IntVector` classes now inherit from this, adding on methods that only make sense for that particular template instance. **Why?** During a refactor of the MOM code, I had to use `Vector` and `IntVector` features heavily and found this synchronization of the classes necessary to keep my sanity. **Who cares?** Obligatory pings to @hokru (who may want to create `FloatVector` for faster `dfocc` operations) and @lothian (who may want to create `ComplexVector` for magnetic spectroscopies). No reviews required. **How do I review this?** The changes to `export_mints.cc`, `vector.h`, `vector.cc`, `intvector.cc`, and `test_vector.py` are the heart of this PR. The rest are either compatibility changes or general code cleanup. Be warned that `iota` and the `sort` functions are needed for my upcoming MOM changes and are currently unused, and I've changed some functions to not use pointers. ## Todos; - [x] Created `IrrepedVector<T>`; - [x] `Vector` and `IntVector` inherit from `IrrepedVector<T>`; - [x] `Vector` and `IntVector` now have identical code logic; - [x] `iota` and `sort` methods are added; - [x] `IntVector` now has more functionality; - [x] Added bounds checking to several `IrrepedVector<T>` methods.; - [x] Increased test coverage of `Vector`; - [x] Added test coverage of `IntVector`; - [x] Silenced compiler warning about missing override; - [x] Removed several pointers from parameter types; - [x] Removed several pointers from return types; - [x] Changed convention from ""irreped"" to ""irrepped"". ## Checklist; - [x] Full ctest passed (before some trivial edits); - [x] `test_vector.py` passed . ## Status; - [x] Ready for review; - [x] Ready for merge **SQUASH**; Jet approval **required** before merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2628:416,ping,pings,416,https://psicode.org,https://github.com/psi4/psi4/pull/2628,1,['ping'],['pings']
Availability,"## Description; **work in progress**; Enables basic linear algebra in single-precision (FP32).; For now rather a rough proof-of-principle implementation for perturbative triples correction in single-precision. Any help is welcome and perhaps even needed for clean C++ and/or smart implementations. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Most of BLAS in single-precision; - [x] SharedTensor analogues for FP32 in `dfocc` module; - [x] basic version of (T)-correction in FP32 for `dfocc` module working. (50% faster on my workstation over FP64, error below 1e-11 for benzene-methane complex at VTZ); - [ ] tidy up; - [ ] template for double-to-float conversion of SharedTensor (currently manual loops); - [ ] documentation; - [ ] ... ## Questions/Notes; - general comments and directions welcome! Also on general conventions. . ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1261:602,error,error,602,https://psicode.org,https://github.com/psi4/psi4/pull/1261,1,['error'],['error']
Availability,"## Description; - Adds the popular `return_energy` field so that downstream programs can always easily obtain this quantity instead of trying to parse the level of theory and keyword.; - Now correctly updates the geometry of the output result if a molecule orientation is changed by Psi4.; - Psi4 may reorder atoms for non-contiguous fragments, schema input now throws if this is the case. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1011:65,down,downstream,65,https://psicode.org,https://github.com/psi4/psi4/pull/1011,1,['down'],['downstream']
Availability,"## Description; - [x] Package build on Windows was getting the error below. From https://numpy.org/doc/stable/user/basics.types.html, I think this'll fix it. (Also probing whether an Azure error in another PR is repeatable.). ```; Tests failed for psi4-1.8a1.dev6+758d3af-py38_0.tar.bz2 - moving package to C:\tools\miniconda3\conda-bld\broken; WARNING:conda_build.build:Tests failed for psi4-1.8a1.dev6+758d3af-py38_0.tar.bz2 - moving package to C:\tools\miniconda3\conda-bld\broken; E File ""%PREFIX%\lib\site-packages\psi4\driver\qcdb\bfs.py"", line 80, in BFS. E radii = _get_covalent_radii(elem). E File ""%PREFIX%\lib\site-packages\psi4\driver\qcdb\bfs.py"", line 155, in _get_covalent_radii. E covrad = np.fromiter((covalent_radii_lookup[caps[at]] for at in range(nat)), dtype=np.float, count=nat). E File ""%PREFIX%\lib\site-packages\numpy\__init__.py"", line 284, in __getattr__. E raise AttributeError(""module {!r} has no attribute "". E . E AttributeError: module 'numpy' has no attribute 'float'. E . E Printing out the relevant lines from the Psithon --> Python processed input file:. E [10, 33], . E [11, 34, 35], . E [17], . E [18]] . E qmol = qcdb.Molecule.from_string(iceIh, dtype='xyz'). E --> frag, arrs, bmols, bmol = qmol.BFS(seed_atoms=[[3,16], [21]], return_arrays=True, return_molecule=True, return_molecules=True). E compare_integers(frag == ref_fragmentation, 1, 'Q: BFS from qcdb.Molecule') . E compare_arrays(qmol.geometry(np_out=True)[[1, 14, 19]], arrs[0][3], 4, 'Q: geom back from BFS') . E compare_integers(15, bmol.nfragments(), 'Q: nfrag') . E compare_values(qmol.nuclear_repulsion_energy(), bmol.nuclear_repulsion_energy(), 4, 'Q: nre') . E compare_arrays(qmol.geometry(np_out=True)[[2, 13, 20]], bmols[4].geometry(np_out=True), 4, 'Q: frag geom back from BFS') ; ```; - [x] The docs-pr build has been failing on several PRs due to the docs.yaml env not solving. It solves locally for me on conda, but apparently not on the mamba setup we have in the GHA. I've switched tha",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2845:63,error,error,63,https://psicode.org,https://github.com/psi4/psi4/pull/2845,2,['error'],['error']
Availability,"## Description; - [x] fixes #1798 At least make all the def2 orbital and rifit basis sets parseable. These have been read through diff_gbs.py so I know all the elements parse now. Variety of errors found.; - [x] helps #1804 by redirecting def2-*-jkfit specifications toward the universal files. only took about four files to find a satisfactory and minimally disruptive place for a simple map-and-warn :-(; - [x] helps plugins like v2rdm_casscf that are adding internal pb11 by attaching the found Python headers location to the plugin target. This should be merged close to #1804 . This one only hits def2 orbital and RI, while that one hits JFIT and JKFIT, so I think the only conflict should be in the NOTES file. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1806:191,error,errors,191,https://psicode.org,https://github.com/psi4/psi4/pull/1806,1,['error'],['errors']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] #2775 I guess wasn't up-to-date with master so the combination of it and some intervening changes broke the build. ~Hopefully this fixes it, and the weird L2 error I'm getting locally is nothing.~ An explicit destructor was needed, too. Thanks to https://stackoverflow.com/a/34073221 for guidance.; - [x] Analogous to #2845 for the master docs build should fix that; - [x] A couple old copyrights. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2855:478,error,error,478,https://psicode.org,https://github.com/psi4/psi4/pull/2855,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Some setups were using a BLAS that doesn't support the extension AXPBY, so #2887 caused runtime can't-find-symbol errors. Most notably, this occurred for Mac users linking to Accelerate. This bypasses the trouble by rerouting to dscal+daxpy; - [x] clarifies who's getting scaled in the export docs.; - Note that the CI error was due to ongoing changes in QCArchive `next` branch. I've pinned the dep back a release so that psi4's interface to it can be fixed later. ## Questions; - [ ] Can someone confirm this works with the Accelerate setup? Below is a quick test.; ```; import psi4; import numpy as np. vecX = np.array([1., 1., 1.]); pvecX = psi4.core.Vector.from_array(vecX); print(pvecX.np) # 1. vecY = np.array([5., 5., 5.]); pvecY = psi4.core.Vector.from_array(vecY); print(pvecY.np) # 5. pvecX2 = pvecX.clone(); pvecX2.axpy(2.0, pvecY); print(pvecX2.np) # 11. pvecX2 = pvecX.clone(); pvecX2.axpby(2.0, 1.0, pvecY); print(pvecX2.np) # 11. pvecX2 = pvecX.clone(); pvecX2.axpby(2.0, 3.0, pvecY); print(pvecX2.np) # 13; ```. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2895:434,error,errors,434,https://psicode.org,https://github.com/psi4/psi4/pull/2895,2,['error'],"['error', 'errors']"
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] cmake to 3.19 in preparation for einsums; - [x] Einsums 0.5 to fix CI; - [x] bump mem to fix error in fsapt1 test. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3162:413,error,error,413,https://psicode.org,https://github.com/psi4/psi4/pull/3162,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Collect enough extra docstrings and tweak enough references to functions so that all the links in the docs resolve.; - [x] Ended up needing mild to moderate docs renovation through whole QCA stack; - [x] Now can turn on Sphinx warnings-to-errors and nitpicky so that docs remain healthy; - [x] Added new doc extension dependency, https://github.com/mansenfranzen/autodoc_pydantic, so that Pydantic models (as introduced in #2575) now get superior, rather than inferior, autodoc compared to classes.; - [x] Add in a few more `__all__`s to driver files. ## Checklist; - ~Tests added for any new features~; - [x] Full tests run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2597:426,error,errors,426,https://psicode.org,https://github.com/psi4/psi4/pull/2597,1,['error'],['errors']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Libxc 5.1.2 required. actually 5.1.0 is fine with Psi4, but 5.1.1 _isn't_ for at least OP fctls like BOP; - thanks to @susilehtola for fixing up libxc so we could have a clean test suite again; - [x] lgtm, which only has old cmake available, can't use `Python::Module`, so providing workaround.; - [x] linux and mac conda packages are ready; - [x] win conda package should be published shortly. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests) full test suite run with 5.1.2. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2113:418,avail,available,418,https://psicode.org,https://github.com/psi4/psi4/pull/2113,1,['avail'],['available']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Nowadays, ctest (quick) followed by pytest (quick) runs a lot of duplicate tests (unless the latter uses ""quick and api""). Let's not do that. This switches Azure to ctest(smoke) followed by pytest (quick).; - before: ; - W: 1h30m; - L: 41-57m; - after:; - W: 1h5m; - L: 34-38m; - In working on dfocc, I found some stdsuite updates that hadn't been ported from qcng to psi4 and some general improvements.; - [x] better check expected vs intended modules. (can catch if the default compute module for a method+circs changes.); - [x] `test_*_default` in stdsuite changed meaning slightly. now PASSED means get final method answer correctly and XFAIL means known NYI. formerly, inputs that got the final method answer correctly but were not able to supply some submethod (like same-spin mp2 for ccsd) also got the XFAIL result.; - [x] have a mini ref file so can add reference data w/o waiting for a new qcengine release; - [x] regex and human-directed error messages to simplify and consolidate NYI methods testing. ## Checklist; - [x] Tests added for any new features; - [x] full stdsuite runs. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2632:1136,error,error,1136,https://psicode.org,https://github.com/psi4/psi4/pull/2632,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] cast in DFTensor memory estimation so that one can perform a fno-df-cc on 6 heavy atoms with aqz in 31 GiB of memory, not 17179869183.261 GiB . (How did this bug live this long?) Improve printing to match DFHelper; - [x] start converting existing mem printing to GiB from mega. afaict, the fnocc values were already mebibytes, though labeled MB; - change in printing for identical calc below:. ```; < The DF Tensor (Qso) construction requires 31.261 GiB of memory. ; ---; > DFTensor Memory: Qso construction needs 31.261 GiB; user supplied 35.390 GiB. ; ```; ```; < Total memory available: 38146.97 mb; < CCSD memory requirements: 35113.77 mb; < 3-index integrals: 10081.38 mb; < CCSD intermediates: 25032.39 mb; < (T) algorithm: 9055.34 mb (low-memory); ---; > Total memory available: 37.253 [GiB]; > CCSD memory requirements: 34.291 [GiB]; > 3-index integrals: 9.845 [GiB]; > CCSD intermediates: 24.446 [GiB]; > (T) algorithm: 8.843 [GiB] (low-memory); ```. ## Checklist; - ~Tests added for any new features~; - ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2673:766,avail,available,766,https://psicode.org,https://github.com/psi4/psi4/pull/2673,2,['avail'],['available']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switch gcp interface to QCEngine; - [x] add dftd4 interface calling QCEngine; - [x] update types return for disp. engine can handle ndarray, so leave arrays as np and shaped rather than flat lists; - [x] more tests -- psiapi, parameters extend func; - [x] add docs; - [x] note min qcng version, prob. v0.19; - [x] this passes cleanly locally but that's with custom engine and dftd4, so several PRs ahead of this one; - [x] allow doi as citations for dft; - [x] note that for `Mol.run_dftd4`, func overrides parameters in keeping with dftd4 API behavior, whereas in dftd3, parameters extend or override func. ## Questions; - [x] @jeffschriber should fisapt grab 2-body disp analysis or total disp analysis; - [x] a couple of the interface updates should be in v1.4 but d4 itself can be in v1.5. so this can get split after upstream settles down. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Aug 2021 Notes; - [x] rebased. the only thing that's left of the original PR checklist is dftd4 itself. gcp and dftd3 updates were pulled in in #2180.; - [x] note that it's not the dftd4 exe that this (that is, qcng) needs; rather, it's the dftd4 pymod that's needed.; - [x] one _can_ use the c-f `dftd4-python` conda package if you know how to set up your env to install both it and psi4 deps. But for linux only, I've prepared a `dftd4` conda package (not in final build form) off `-c psi4/label/dev`. ## Status; - [x] Ready for review; - [x] Ready for merge. EDIT: closes #1710",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2142:1026,down,down,1026,https://psicode.org,https://github.com/psi4/psi4/pull/2142,1,['down'],['down']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; - [x] Allow psi4 to be used with pydantic v1 or v2. ## Dev notes & details; - [x] still using pydantic v1 API but now tolerant of a v1 or v2 pydantic environment. qcel v0.26 and qcng v0.27 have recieved the same treatment. This is that part that's worthy of backport. It's already available on the c-f 1.8.1 build number `_2` conda packages, having been applied by patch.; - [x] bump qcel and qcng versions. for local build cases, switch from `python setup.py` to `pip install` from src. the latter is preferred as setup.py gets phased out, and, in any case, was necessary for qcel, which has transitioned from a setuptools to poetry build backend. this only handles the module, so if a module comes with an executable (e.g., `bin/qcengine` from qcng, that doesn't end up in the right place. ; - [x] fix docs GHA by constraining pb11 to 2.10 for the docs build spec. https://github.com/pybind/pybind11/pull/4679 seems to be the culprit. It's a good and standards-conforming change, but other tooling and/or typing stores on the internet to which sphinx refers all need time to adapt.; - [x] generalize a few cmake config dir locations for addons.; - [x] remove youtube links to F/I SAPT tutorials that have been taken private.; - [x] some build docs I had lying around. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3019:233,toler,tolerant,233,https://psicode.org,https://github.com/psi4/psi4/pull/3019,2,"['avail', 'toler']","['available', 'tolerant']"
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] fix bug where final findif and nbody quantities are computed and probe-able but not printed or logged.; - [x] update CI for c-f based; - [x] add docs warnings about out-of-dateness for build; - [x] work around windows console not liking strikethrough; - [x] psi4.addons() isn't the definitive word on ecosys availability -- testing.using is -- but it's simpler. This updates the Grimme addons to detect the favored distributions. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2959:795,avail,availability,795,https://psicode.org,https://github.com/psi4/psi4/pull/2959,1,['avail'],['availability']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Allow the use of upstream master for Libint2. The L2 build that v1.8 required also still works. ## Dev notes & details; - [x] Very recent L2 upstream master (after [10ca429217977bc2baac78fdaf3ac8d4f8aa05d9](https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9) on 24 Nov) has everything Psi4 needs to run, namely Windows compatibility and runtime solid harmonic order (sho) switching. 🎉 ; - [x] However, for *this* L2 changeover, there's no particular reason to demand users switch from the L2 (loriab branch) you've been using since 8 May & v1.8. The runtime internals are all the same.; - [x] So the goal of this PR is to make Psi4 compatible with both L2 branches: May 2023 loriab and Nov 2023 upstream. The differences are:; - [x] there's a different components scheme, so max_am_eri=5 energy is represented as `eri_c4_5_d0` for May but `None` (if not patched) or `eri_hhhh_d0` (patched) for Nov. This PR makes sure psi4 can process both schemes for outfile printout and to redirect to findif if Hessian ints aren't available.; - [x] `find_package(Libint2 COMPONENTS eri_... cxx_ho ss.)` on May properly checks components but for Nov it's not picky. Only thing to do is be aware.; - [x] Note that upstream master has Jonathon's erfc nuclear fix, so a time is coming soon when your May 2023 L2 branches will have to be retired. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3047:1302,avail,available,1302,https://psicode.org,https://github.com/psi4/psi4/pull/3047,1,['avail'],['available']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] I think CI is hitting a brownout to deprecate the non-redundant mambaforge, so completing the switch. I've done it at other repos; - [x] windows nightly builds are in great demand, I don't have much more to delete to create space for them, and I'm tired of build always looking like it's failing at master. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3233:307,redundant,redundant,307,https://psicode.org,https://github.com/psi4/psi4/pull/3233,1,['redundant'],['redundant']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] While not recommended to use a `/` character in your molecule labels, if you do, at least now it won't segfault if density fitting is involved. Thanks to @bennybp for the bug report. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Error can be triggered with below. Shows up in `DFHelper::put_tensor()`. ```; import psi4. mymol = psi4.Molecule.from_arrays(geom=[0, 0, 0, 2, 0, 0], elem=[""h"", ""h""], name=""h2/mol""). # segfaults if any DF (that is, following line commented). runs if DF suppressed (following line active); #psi4.set_options({""scf_type"": ""pk"", ""df_basis_guess"": ""false""}). ene = psi4.energy(""b3lyp/cc-pvtz"", molecule=mymol); print(ene); ```. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2984:676,Error,Error,676,https://psicode.org,https://github.com/psi4/psi4/pull/2984,1,['Error'],['Error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:747,error,error,747,https://psicode.org,https://github.com/psi4/psi4/pull/3186,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. GXX 7.5 from conda is throwing bizarre assembly-level errors during libmints compile like `open CFI”` and `Error: .size expression for does not evaluate to a constant`. This compiler is working fine locally and the conda env hasn't changed since it was working fine on GHA. Searching suggests things like running of of memory for compile or binutils patches. conda has moved from 7.5 to 11.2 pinning, so that's probably a good next step. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2644:134,error,errors,134,https://psicode.org,https://github.com/psi4/psi4/pull/2644,2,"['Error', 'error']","['Error', 'errors']"
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. `Molecule::atom_at_position` is supposed to return the index of the atom found in a specified radius of a specified point in 3D space, or -1 if no atom is found in the radius. The current implementation assumes there is never more than one atom within the given radius, and returns the index of the first atom found to be within the tolerance.; This can hypothetically happen in two ways: the atoms are either extremely close, or the tolerance is set to a large value. The new implementation behaves more like one would expect it to behave: under the aforementioned extreme circumstances it throws an exception and informs the user with an error message. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Detect corner case and throw error if encountered; - [x] Update docstrings to better describe implementation. ## Questions; - [x] Apparently, `qcdb.Molecule` has its own independent Python implementation of `atom_at_position`. As is, this PR means that calling `qcdb.Molecule.atom_at_position` and `psi4.core.Molecule.atom_at_position` from a Python program may return different results for the same geometry, if the aforementioned corner case happens.; Not sure what to do about this, at first glance it would be neater if both `qcdb.Molecule.atom_at_position` and `psi4.core.Molecule.atom_at_position` ended up calling the same C++ implementation, but I am not sure how feasible that would be.; Thoughts?. ## Checklist; - [x] No new features; - [x] `ctest -j24` and `make pytest` both passed locally. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2465:413,toler,tolerance,413,https://psicode.org,https://github.com/psi4/psi4/pull/2465,4,"['error', 'toler']","['error', 'tolerance']"
Availability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; - [x] Fix issue in syntax highlighting for psithon code snippets - there are bits that are invalid python and we don't want highlighted as errors.; - [x] Add tabbing between Psithon and PsiAPI code snippets in the tutorial on input files.; ; ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3123:219,error,errors,219,https://psicode.org,https://github.com/psi4/psi4/pull/3123,1,['error'],['errors']
Availability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; - fix [E101](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes); - fix [E502](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes); - fix [E703](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes); - fix [E711](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes); - fix [E712](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes); - fix [E713](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes); - fix [E722](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes); - fix [W605](https://github.com/PyCQA/pycodestyle/blob/2.8.0/docs/intro.rst#error-codes). ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->. ## Questions. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2428:156,error,error-codes,156,https://psicode.org,https://github.com/psi4/psi4/pull/2428,8,['error'],['error-codes']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; A lot of error exits in `libdpd` are implemented with `exit(1)` or equivalent. This makes debugging harder, and results in less informative error messages when a test fails in the CI environment. This PR modernizes all `exit(1)` error exits in `libdpd` into `throw PSIEXCEPTION`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now prints more detailed error messages if an error happens in its DPD module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] All `exit(1)` and `exit(PSI_RETURN_FAILURE)` calls in `libdpd` have been replaced with a `throw PSIEXCEPTION`. ## Checklist; - [x] No new features; - [x] CI tests are failing only due to libint being in flux. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3117:89,error,error,89,https://psicode.org,https://github.com/psi4/psi4/pull/3117,5,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; A preliminary implementation of new functionalities in intramolecular SAPT proposed by Du Luu and Konrad Patkowski in [https://doi.org/10.1021/acs.jpca.2c06465](https://doi.org/10.1021/acs.jpca.2c06465). The code is coauthored by @dluu12. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - The new available options for `FISAPT_LINK_ASSIGNMENT` are `SAO0, SAO1, SAO2, SIAO0, SIAO1, SIAO2`. The `SIAO1` variant is the recommended one that solves some serious issues of the default `FISAPT_LINK_ASSIGNMENT=C` variant and, after some more testing, will hopefully take over as the production ISAPT scheme.; - A couple minor options for the new variant (orthogonalization of link orbitals, making cube files) have been added and documented in the manual.; - After quite a bit of effort, FISAPT (that is, the F-SAPT partitioning of ISAPT) seems to be working fine.; - A suitable fragment in the manual and two tests (isapt-siao1 and fisapt-siao1) have been added. ## Questions; - The code does what it is supposed to, but certainly needs extensive general cleanup.; - Not tested with external potentials.; - Presently, there are two functions that produce different cube files: `FISAPT::raw_plot()` and `FISAPT::do_cubes()`. They have different capabilities but should probably be merged into one. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2899:563,avail,available,563,https://psicode.org,https://github.com/psi4/psi4/pull/2899,1,['avail'],['available']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; A small addition needed for an F12 code to work Python-side. Adds the ability to call; ```; ao_f12g12(exp_coeff, Basis1, Basis2, Basis3, Basis4); ao_double_commutator(exp_coeff, Basis1, Basis2, Basis3, Basis4); ```; with an arbitrary combination of 4 bases (some combinations require `SCREENING == 'NONE'` - see #2973). The other kinds of F12 integrals, e.g. `ao_f12()`, already have this functionality and just the two above types were missing. ## Dev notes & details; This minor PR should be completely orthogonal to the recent PRs from @EricaCMitchell. All of these PRs will be needed for the upcoming F12 codes. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run] `ctest -L quick` passes with no errors. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2987:833,error,errors,833,https://psicode.org,https://github.com/psi4/psi4/pull/2987,1,['error'],['errors']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Addressing Issue #2226, changing the gemm() method in Matrix.cc. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calculates row and column totals from rowspi_ and colspi_; - [x] Throws a Psi exception error if the dimensions don't match up. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2729:651,error,error,651,https://psicode.org,https://github.com/psi4/psi4/pull/2729,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds SAPT0-D and FISAPT-D routines, continuation of #1786. This code only works with the latest QCEngine commit, so it will fail the tests until the next QCEngine release. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [X] Add SAPT0-D and FISAPT0-D, for any -D variant available to HF; - [X] Enable access to pairwise dispersion decomposition from dftd3; - [x] Adapt fsapt.py analysis to use -D dispersion info. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [x] Test fsaptdiff.py. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2081:405,avail,available,405,https://psicode.org,https://github.com/psi4/psi4/pull/2081,1,['avail'],['available']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; As discussed in #2997 and #3117, no debugging information is produced in many places in Psi4. I believe this is because of improper calls to `exit()`, which is a remnant of the C history of Psi. #3117 replaces the calls to `exit()` with `throw`s in libdpd. This PR replaces the calls in the rest of Psi4. Sorry for the verbose changes; I ran clang-format on the files since my editor's indentation doesn't match that in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Obsoleted calls to `exit()` have been replaced by exceptions, which should better guarantee the passing of error messages to the end user. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Spurious calls to `exit()` have been removed in favor of exceptions, which should better guarantee error messages getting through to the user. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3118:786,error,error,786,https://psicode.org,https://github.com/psi4/psi4/pull/3118,2,['error'],['error']
Availability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; Closes #2712. Please do not use C-style casting for complicated types. ## Release Notes Delta; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] **Bugfix:** Seeding an SCF gradient with a ref_wfn that isn't SCF now raises an error rather than a segfault. ## Checklist; - [x] `grad` and `hess` ctests pass. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2714:352,error,error,352,https://psicode.org,https://github.com/psi4/psi4/pull/2714,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3168:115,error,error,115,https://psicode.org,https://github.com/psi4/psi4/pull/3168,5,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3215:106,error,error,106,https://psicode.org,https://github.com/psi4/psi4/pull/3215,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; For some poorly understood confluence of reasons, for some users error messages can _sometimes_ get completely lost when Psi4 exits with a `PSIEXCEPTION`, especially when a PSIO error happens.; This can be observed in recent bug reports, see:. - https://github.com/psi4/psi4/issues/2970; - https://forum.psicode.org/t/sapt0-calculation-crashes-pointer-error/2839. In both of these cases the users were only seeing the error message that has been written to `cerr`, but not the string that `PSIEXCEPTION` should have printed. IIRC when I tried to research this quite a while ago, I have found this may be a bug in some versions of libstdc++. This PR adds a simple workaround: the exception message is also printed to `cerr` in `psio_error`. The only side effect, is that some users, who are currently not affected by the lost message problem, may start getting the same error message twice when a PSIO error happens. Spammy error exits are not great, but PSIO errors are not supposed to happen too often, and when they do loosing the error message is more annoying than having it be duplicated. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] PSIO error messages are now also printed to `cerr`, fixing an issue where (under some circumstances) large parts of the error message would never reach the user, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] The same error message that gets passed to `PSIEXCEPTION` is now printed to `cerr` before throwing in `psio_error`. ## Checklist; - [x] There is no easy way to add tests for ""are error messages getting delivered or not?""; - [x] Tests run by the CI ar",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2997:145,error,error,145,https://psicode.org,https://github.com/psi4/psi4/pull/2997,6,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I think whoever brought up the new ""warnings"" in the sphinx log was on the right track. We do have the treat-warnings-as-errors flag on. It's the treat-broken-links-as-errors flag that we can't enable yet. Between that and the 9800 PR in the newest sphinx changelog released 17 Jan https://www.sphinx-doc.org/en/master/changes.html#release-4-4-0-released-jan-17-2022, I bet that's what's causing our docsbuild fail. Hopefully I haven't added any new syntax errors. - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2422:201,error,errors,201,https://psicode.org,https://github.com/psi4/psi4/pull/2422,3,['error'],['errors']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; It is done. The beast lays slain.; This PR replaces the last calls of the `sq_rsp` function in the `dfoccwave::Tensor2d::diagonalize` overloads with the new DSYEV wrappers, and removes the function and its file. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` function `void sq_rsp(int nm, int n, double **array, double *evals, int matz, double **evecs, double toler)` has been removed. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Merge `dfoccwave::Tensor2d::diagonalize` overloads to minimize code dupliaction; - [x] Add machine-readable docstrings in the header file; - [x] `dfoccwave::Tensor2d::diagonalize` overloads now throw on non-square matrices or diagonalizer failure; - [x] Replace calls of `sq_rsp` with `DSYEV_ascending` and `DSYEV_descending`; - [x] Delete `sq_rsp` function and file. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2928:587,toler,toler,587,https://psicode.org,https://github.com/psi4/psi4/pull/2928,2,"['failure', 'toler']","['failure', 'toler']"
Availability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; Looks like there is a small error in the VMFC Hessian. The `sign` variable is changed for VMFC but it is not used to multiply the Hessian. Compare this with the gradient above and the energy in line 661. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2389:108,error,error,108,https://psicode.org,https://github.com/psi4/psi4/pull/2389,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Much like PR #2804, this PR is mostly about eliminating `sprintf`-related compiler warnings and modernizing C-style string handling to C++, this time in libmints' `BasisSet::print_detail_cfour`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Modernized `BasisSet::print_detail_cfour()`, highlights:; - [x] No longer uses `sprintf` and a fixed-size char array; - [x] Variables are made `const` wherever reasonable; - [x] Use of `std::find` on doubles is replaced by new functions (`none_of_equal` and `fpeq`) that implement a fuzzy compare with a default tolerance of 1E-14. Probably no behaviour change in practice (unless someone has basis fns which differ in exponent by >0 but <1E-14), but it is usually not recommended to use == on FP types, which is what `std::find` does.; - [x] The `slater.chemie.uni-mainz.de` URL has succumbed to link rot. Replaced with one that points to the latest version that is being preserved by the Internet Archive, both in the C++ and Python implementations.; - [x] Ran clang-format on `basisset.cc` and `basisset.h`. ## Questions; - [x] The new functions `none_of_equal` and `fpeq` are just living in `basisset.cc` and `basisset.h` right now. Would some other file be a better place to put them?. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing; - [x] I do not have CFOUR, so I cannot really test if this breaks something. It should not, but the `std::find` change _is_ behaviour-altering, albeit only in a corner case. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2937:827,toler,tolerance,827,https://psicode.org,https://github.com/psi4/psi4/pull/2937,1,['toler'],['tolerance']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3222:1148,avail,available,1148,https://psicode.org,https://github.com/psi4/psi4/pull/3222,1,['avail'],['available']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3216:124,avail,available,124,https://psicode.org,https://github.com/psi4/psi4/pull/3216,1,['avail'],['available']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Psi4 has wrappers for seven LAPACK functions which have been marked as deprecated by the LAPACK devs for a long time. These functions have also been marked as deprecated within Psi4. Luckily they are not marked as `PSI_API`, nor are they used by Psi4. This PR removes them. Note that the default git diff algorithm is getting confused by the repetitive text in `lapack_intfc.cc` and incorrectly indicates that some lines were added. The correct diff can be obtained with `--diff-algorithm=minimal` :; ```; $ git diff --stat --diff-algorithm=minimal master remove_deprecated_lapack; psi4/src/export_blas_lapack.cc | 7 -; psi4/src/psi4/libmints/psimath.cc | 50 --; psi4/src/psi4/libmints/psimath.h | 27 -; psi4/src/psi4/libqt/CMakeLists.txt | 19 -; psi4/src/psi4/libqt/lapack_intfc.cc | 1021 -----------------------------; psi4/src/psi4/libqt/lapack_intfc_mangle.h | 35 -; psi4/src/psi4/libqt/qt.h | 25 -; 7 files changed, 1184 deletions(-); ```. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now requires the LAPACK library to provide `DGGSVD3` and `DGGSVP3`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fortran, C and C++ style wrappers for `DGEGS`, `DGEGV,` `DGELSX,` `DGEQPF,` `DGGSVD,` `DGGSVP` and `DTZRQF` are removed.; - [x] CMake checks for the availability of `DGGSVD3` and `DGGSVP3` are removed. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2823:1660,avail,availability,1660,https://psicode.org,https://github.com/psi4/psi4/pull/2823,1,['avail'],['availability']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Remove c++ optking. Add new python optking driver. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] RN 1 The fixed_* optimization keywords have been changed to ranged_* options; - [x] RN 2 output will be changed. Check output.dat for simple convergence / step info. output.log for detailed info; - [x] RN 3 IRC convergence behavior different for minima and substep. ; - [x] Downstream plugin users who were still getting wfn from globals will find it has now departed. Please follow the advice it's been issuing for years to do wfn passing. [LAB added]. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New optimizer. Most of driver is very similar; - [x] Hessian Updating and optimization logic is in optking as much as possible; - [x] Restarting optimizations now supported. Optking can write entire state to disc (json); - [x] Driver attempts to symmetrize geometries; - [x] New keywords added. Some removed / updated. ; - [x] old optking removed from CMakeLists.txt from `/psi4/src/psi4`; - [x] optking py_funcs removed from core.cc; - [x] All tests have been verified for equal or better convergence. (except opt-irc-2); - [x] globals legacy gradient, wfn, and molecule removed [LAB added]. ## Questions; - [ ] A document describing differences between the optimzers may be necessary; - [ ] Unclear if I have fully removed old optking and building with new optking is fully working. ## Checklist; - [x] test15 tests restart; - [x] Can remove old deprecated set_gradient; - [x] ctest -L opt run. ## Status; - [x] Ready for review; - [ ] Ready for merge. For documentation on the new optimizer please see",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727:577,Down,Downstream,577,https://psicode.org,https://github.com/psi4/psi4/pull/2727,1,['Down'],['Downstream']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The common thread of this PR is be more explicit in what calculations Psi4 can do and conveying that to the user at runtime and through the docs. In practice, this involves expanding the coverage of stdsuite, using those results to autogenerate docs tables, reconciling hand-generated docs tables, referring to all in runtime errors, and cleaning stuff up along the way. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] MRCC now called with `set qc_module mrcc` rather than ""mr"" prefix onto method; - [x] Many NYI messages, whether from ManagedMethodError, MissingMethodError, or plain ValidationError from run_* fns have changed their wording and added content. On the whole, this should be helpful, but if you're searching for particular phrasing, you'll likely need to adjust regexes.; - [x] New tables in the docs with details on accessible methods.; - [x] Arbitrary-order MPn no longer runable with ROHF. Arbitrary-order ZAPTn no longer runable with RHF.; - [x] Running DF through CCENERGY (experimental, expert only) may now require `set qc_module ccenergy`. ## Dev notes & details; - [x] running stdsuite writes a storage file, and a new document_capabilities script turns the storage file into various tables that newly (1) include all-electron/frozen-core info (notated ""aefc"" in places), (2) show default modules and default e.g., mp2_type, (3) cover most single-ref ground-state total-energy methods, (4) are proven to honor return val and qcvar contracts. details of how and why this works are at [psi4/share/psi4/scripts/merge_stdsuite.py](https://github.com/psi4/psi4/pull/2731/files#diff-4a81ee0fb4705fe6acd6ac7f6417f5a899437a93780329a5f647a94eea425c24R8) . If you want to suggest changes to notation, keep in mind that main-body cell contents must be expressible in a single unicod",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:406,error,errors,406,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['error'],['errors']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The version of ADCC that the Psi4 CMake system currently requires (and tries to build if not found) is incompatible with C++17, and thus always fails to build. See https://github.com/adc-connect/adcc/issues/131 for the error message. This error was also mentioned in issue #2572.; This has been resolved by the ADCC/libtensor devs since, so bumping the required/built ADCC version to the latest release should fix _this particular_ issue with the ADCC build process. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now requires ADCC version 0.15.13 or newer.; - [x] Fixed issue where building Psi4 from source with the ADCC plugin enabled-but-not-found resulted in a build failure with the error message `ISO C++17 does not allow dynamic exception specifications`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] CMake now looks for ADCC 0.15.13 or newer, if not found the 0.15.13 tarball is downloaded and built. ## Checklist; - [x] No new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2785:299,error,error,299,https://psicode.org,https://github.com/psi4/psi4/pull/2785,5,"['down', 'error', 'failure']","['downloaded', 'error', 'failure']"
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; These functions are relics from Psi3 (or before?) and they have many issues, unfortunately one of them is their function signature. Stemming from the awful interface, users of `rsp(...)` and `sq_rsp(...)` never check if the diagonalization failed, because they _cannot_. To keep the promise of not randomly breaking API without fair warning, this PR deprecates said functions but keeps them usable. After #2776, `rsp(...)` has no internal callers left. As for `sq_rsp(...)`:. - many former callers of `sq_rsp(...)` have turned out to be unused functions and have been removed; - If #2686 is merged the vast majority of remaining callers are migrated to a new wrapper around DSYEV; - The remaining call sites of `sq_rsp(...)` will all be in `dfocc`, which is not touched for the time being to avoid causing merge conflicts for the many pending PRs for that module. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `PSI_API` function `void rsp(int nm, int n, int nv, double *array, double *evals, int matz, double **evecs, double toler)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` function `void sq_rsp(int nm, int n, double **array, double *evals, int matz, double **evecs, double toler)` is deprecated and 1.7 will be the last release with it present. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Added deprecation notices to `rsp(...)` and `sq_rsp(...)`. ## Checklist; - [x] No new features; - [x] Tests pass as per Lori. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2798:1232,toler,toler,1232,https://psicode.org,https://github.com/psi4/psi4/pull/2798,2,['toler'],['toler']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR aims to improve the Dimension object in various ways, by adding machine-readable (for eg. VSCode) docstrings, adding const to arguments, replacing `int` with `size_t` to match `std::vector::operator[](std::size_t)` and cautiously deprecating member functions that deal with pointers. Not only are pointers more error-prone, they are currently involved in some strange interaction between `Dimension` and `Matrix` objects, resulting in awkward roundabout initialization/construction that I hope to untangle before Psi4 1.11? (1.11, or maybe 1.12?).; Please let me know if you feel the three deprecations in this PR would be too disruptive or otherwise undesirable, this PR is very much a ""request for comments"". ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] API change: The custom assignment operator for `Dimension` objects (`Dimension& operator=(const int*)`) is being deprecated. Unless someone speaks up, 1.10 may be the last release to have it.; - [x] API change: Cast-to-pointer operators for `Dimension` objects (`operator int*()` and `operator const int*() const`) are being deprecated. Unless someone speaks up, 1.10 may be the last release to have them.; - [x] Minor API change: Several constructors and member functions of `Dimension` are now using `size_t` instead of `int` for indexing:; −`Dimension::Dimension(int, const std::string&)` is now `Dimension::Dimension(size_t, const std::string&)`; −`void Dimension::init(int, const std::string&)` is now `void Dimension::init(size_t, const std::string&)`; −`int Dimension::n() const` is now `size_t Dimension::n() const`; −`int& Dimension::operator[](int)` is now `int& Dimension::operator[](size_t)`; −`const int& Dimension::operator[](int) const` is now `const int& Dimension::operator[](size_t) const`; −`const int& Dimensi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2953:399,error,error-prone,399,https://psicode.org,https://github.com/psi4/psi4/pull/2953,1,['error'],['error-prone']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR builds upon the functions added in #2711 and #2700 to provide more informative error messages if a `SYSTEM_READ`, `SYSTEM_WRITE` or `SYSTEM_LSEEK` fails, including the OS-provided error message, which may have clues for the cause of the error (disk is full, no permission, etc). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] Error messages related to some IO errors are now more specific and detailed. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New function: `psio_compose_err_msg`. This helps composing PSIO error messages without too much code duplication. It can optionally take an errno value and tack on the error message provided by the OS.; - [x] `psio_volseek` has been reworked to handle any errors internally by calling `psio_error`, instead of returning -1 on error. Appropriate error message generation and some `const` qualifiers were added.; - [x] `PSIO::rw` has been adapted to the changes to `psio_volseek` and error message generation was added after each read/write/seek.; - [x] Functions in `toclen.cc` are now also using `psio_compose_err_msg` to generate messages. ## Checklist; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756:167,error,error,167,https://psicode.org,https://github.com/psi4/psi4/pull/2756,11,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR fixes #3147 . Basically the psithon way of defining molecules converted _initial_cartesian on parsing.; When adding an external potential this was used as; molecule.set_geometry(clone_molecule._initial_cartesian).; set_geometry applies the conversion again. The two python ways I found, which set initial_cartesian did not do the conversion leading to incorrect geometries, when using external_potential and molecules defined as unit=angstrom. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixes #3147: Parsing molecules with angstrom units and using external_potential from python was broken. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixes #3147: Parsing molecules from psithon and python left mol._initial_cartesian in a different unit. This aligns the units. Downstream this had the effect of breaking using molecules with angstrom units with an external_potential from python. ## Questions; - [x] Question1. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3148:1176,Down,Downstream,1176,https://psicode.org,https://github.com/psi4/psi4/pull/3148,1,['Down'],['Downstream']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR fixes a bug that @swarthout and I ran into while running psi4 on AWS. . A non-negligible fraction of our psi4 calculations that run through qcschema (e.g. many body, cbs) result in the following non-deterministic error:; ```; Traceback (most recent call last):; File ""/opt/conda/lib/python3.10/site-packages/psi4/driver/schema_wrapper.py"", line 459, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/opt/conda/lib/python3.10/site-packages/psi4/driver/schema_wrapper.py"", line 721, in run_json_qcschema; json_data[""native_files""] = {fl: flpath.read_text() for fl, flpath in files.items() if flpath.exists()}; File ""/opt/conda/lib/python3.10/site-packages/psi4/driver/schema_wrapper.py"", line 721, in <dictcomp>; json_data[""native_files""] = {fl: flpath.read_text() for fl, flpath in files.items() if flpath.exists()}; File ""/opt/conda/lib/python3.10/pathlib.py"", line 1135, in read_text; return f.read(); File ""/opt/conda/lib/python3.10/codecs.py"", line 322, in decode; (result, consumed) = self._buffer_decode(data, self.errors, final); UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe1 in position 47: invalid continuation byte; ```; This error tells us that psi4 is unable to read its own `timer.dat` file. . Upon further examination of these problematic `timer.dat` files, we noticed that the ""host"" field appears to be corrupted. Here is one such corrupted header of a `timer.dat` file, represented w/ a latin-1 encoding (since it can't be read w/ the standard utf-8 encoding):; ```; Host: ip-172-31-XX-XXX.us-east-2.compute.interá^X. Timers On : Sat Sep 2 14:14:18 2023; Timers Off: Sat Sep 2 14:14:18 2023. Wall Time: 0.52 seconds. Time (seconds); Module User System Wall Calls. --------------------------------------------------------------------------------------; ```; In all of these problematic timer.dat files, the host name is truncated ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3043:301,error,error,301,https://psicode.org,https://github.com/psi4/psi4/pull/3043,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR implements level shifts. Closes #2216. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Level shifts in restricted methods; - [x] Level shifts in unrestricted methods; - [x] Level shifts in constrained unrestricted methods; - [x] Level shifts in restricted open shell methods. ## Questions; - [ ] Should the level shift be turned on by default? Since Psi4 does not have EDIIS/ADIIS, it will often fail to reach the convergence radius of DIIS. Level shifts may slow down convergence somewhat, but if they're turned off at large residual gradient (e.g. 1e-2) then the slowdown should be negligible in most cases. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2225:611,down,down,611,https://psicode.org,https://github.com/psi4/psi4/pull/2225,1,['down'],['down']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This PR removes the `rsp` diagonalizer which was deprecated in #2798, and its supporting functions `tqli` and `tred2`, which are not used anywhere else.; These can be preserved in psi4attic after this PR is merged. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` function `void rsp(int nm, int n, int nv, double *array, double *evals, int matz, double **evecs, double toler)` is removed. ## Checklist; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2838:594,toler,toler,594,https://psicode.org,https://github.com/psi4/psi4/pull/2838,1,['toler'],['toler']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This corresponds to L2 at https://github.com/evaleev/libint/pull/233 . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switches psi4 to use a Libint2 forked from upstream in 2022, not in 2019; - [x] changes a couple cmake knobs and changes the required components to EFV's preferred syntax (`g5` -> `eri_c4_d1_l5`); - [x] avoided grid points discrepancies that I had hit by implementing Holger's suggestion.; - [x] I and others have reported needing `pybind11::headers` in extra places, so adding those; - [x] The defines `INT_NCART` and `INT_CARTINDEX` in psi https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/integral.h#L46-L64 are also in L2. They used to be `#define` in the current/2019 fork of L2, but now in L2 master, it’s an inline function. To avoid errors like the below, they're namespaced and inlined here now, too. ```; < namespace libint2 {; < inline int INT_NCART(int am) { return ((am + 2) * (am + 1)) >> 1; }; < }; < LIBINT_DEPRECATED(""please use libint2::INT_NCART instead""); < inline int INT_NCART(int am) { return libint2::INT_NCART(am); }; ---; > #define INT_NCART(am) ((((am)+2)*((am)+1))>>1); ```; With that situation (define in psi and inlined in L2), I get lots of; ```; In file included from /psi/gits/hrw-pybind/psi4/src/psi4/libmints/integral.cc:28:; /psi/gits/libint2-efv/install-p01/include/libint2/cgshell_ordering.h:104:12: error: expected unqualified-id before 'int'; 104 | inline int INT_CARTINDEX(unsigned int am, int i, int j) {; | ^~~~~~~~~~~~~; ```; I can fix the problem by renaming in psi to `INT_NCART_PSI` and `INT_CARTINDEX_PSI`. What's a cleaner solution than renaming? Should we inline? Or add to the `psi {}` namespace?. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-sub",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2413:913,error,errors,913,https://psicode.org,https://github.com/psi4/psi4/pull/2413,1,['error'],['errors']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is an implementation of the fitted version of the SAP guess, described in [J. Chem. Phys. 152, 144105 (2020)](https://doi.org/10.1063/5.0004046). The repulsive potential on every atom is fit in terms of error function potentials, which means that the guess can be evaluated with few two-electron integrals; namely. $$ {\bf F}^\text{SAP} = {\bf H} + {\bf V}^\text{SAP} $$. $$ V_{\mu \nu}^\text{SAP} = \sum_{A} (A|\mu \nu) $$. where $A$ is a fully contracted $1s$ function on each atom. I have no idea how the integrals work in Psi4. I followed [a Psi4Numpy example](https://github.com/psi4/psi4numpy/blob/master/Moller-Plesset/DF-MP2_NAF.py) @loriab hinted me at. The appears to compile; the only problem being the final assembly, i.e. the sum over the 3-center integrals. If anyone can tell me what I should be doing, help would be appreciated... Closes #2054 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Implement scheme and get something that matches ERKALE; - [ ] Use optimal storage. ## Questions; - [ ] Is the basis build call correct? Should I also add a new basis role somewhere?. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3036:288,error,error,288,https://psicode.org,https://github.com/psi4/psi4/pull/3036,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is an implementation of the fitted version of the SAP guess, described in [J. Chem. Phys. 152, 144105 (2020)](https://doi.org/10.1063/5.0004046). The repulsive potential on every atom is fit in terms of error function potentials, which means that the guess can be evaluated with few two-electron integrals; namely. $$ {\bf F}^\text{SAP} = {\bf H} + {\bf V}^\text{SAP} $$. $$ V_{\mu \nu}^\text{SAP} = \sum_{A} (A|\mu \nu) $$. where $A$ is a fully contracted $1s$ function on each atom. The implementation is not optimal, since I use `ao_eri` to compute the integrals. An optimal implementation would accumulate the auxiliary functions' integrals on-the-fly; however, optimization can be safely left to a later stage... Closes #2054 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Implement scheme and get something that matches ERKALE. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3039:288,error,error,288,https://psicode.org,https://github.com/psi4/psi4/pull/3039,1,['error'],['error']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is picked out of #2413 as independent. Depending on the version of l2, this'll either issue warnings (psi4 l2 fork where `INT_NCART` is still macro) or errors (l2 master where `INT_NCART` now inline fn) when building psi4. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2429:237,error,errors,237,https://psicode.org,https://github.com/psi4/psi4/pull/2429,1,['error'],['errors']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is something I was working on in the spring to find docs problems earlier (currently we'll maybe notice if they break in master) and to remove docs building responsibilities from PR submitters. It looks to still be in working order. The main contentions are likely to be how to phrase the auto-posts so that PR submitters aren't freaked out and inspired to jumble their git histories beyond repair. Below is a screenshot of what it posts to a PR. I can already see things I'd change. Opening this PR to start discussion on how the auto-post should read. <img width=""939"" alt=""Screen Shot 2021-11-23 at 2 49 00 PM"" src=""https://user-images.githubusercontent.com/2314730/143094958-32829f3e-feea-49f3-9601-cc87093276c0.png"">. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2364:476,repair,repair,476,https://psicode.org,https://github.com/psi4/psi4/pull/2364,1,['repair'],['repair']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; This is the continuation of my previous MOInfo PR #3112, with the following general themes:. - Adding new docstrings and making existing ones machine readable for VS Code (and probably also Doxygen); - Rebalancing the class hierarchy by sinking things that get reused to the base class, and hoisting things up in the inheritance chain that only get used in one derived class; - Reducing visible and mutable state, as well as the contact surface of the classes. This is achieved by making data and functions as private as possible, providing access to data through getters returning `const&` when necessary, and making a few data members `const`. Having `const` members in classes is sometimes considered to be bad form, but AFAIK all of the downsides are already incurred on account of `MOInfoBase` having reference members. The git history on this branch is admittedly a bit messy, I changed my mind about a couple of things. LMK if that is a problem.; The next PR in this series will get to what I originally wanted to achieve and remove uses of the ugly ""cast Dimension object to pointer"" operators (see #2953) from `libmoinfo.`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No API changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused function `MOInfoBase::correlate` is removed; - [x] The only thing the `MOInfoBase` dtor does is call `MOInfoBase::cleanup()`, an empty function. Removed both.; - [x] Moved the contents of `MOInfo::free_memory()` into its only caller, the `MOInfo` dtor; - [x] Added a lot of new machine-readable docstrings, moved some existing ones; - [x] Some ""obsolet",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3155:821,down,downsides,821,https://psicode.org,https://github.com/psi4/psi4/pull/3155,1,['down'],['downsides']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; While testing PR https://github.com/psi4/psi4/pull/2756, I have discovered a regression introduced by an earlier PR (#2700) of mine.; Before `throw`ing, `psio_error()` tries to write some data to the scratch files. But if `psio_error()` is called due to a write error, and the scratch disk is completely full, then this write will also fail, leading to `psio_error()` getting called again, and an infinite recursion ensues. The source of the regression is that `psio_tocwrite()` ends up calling `wt_toclen()`, which has been enhanced in #2700 to use `psio_error()` if it fails.; This PR resolves the issue by not trying to write anything to scratch if `psio_error()` is called due to a write failure. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None? This regression was new enough that no release suffered from it. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Do not call `psio_tocwrite()` in `psio_error()` if `errval == PSIO_ERROR_WRITE`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2773:342,error,error,342,https://psicode.org,https://github.com/psi4/psi4/pull/2773,2,"['error', 'failure']","['error', 'failure']"
Availability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; Yearly maintenance -- update copyright. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2394:87,mainten,maintenance,87,https://psicode.org,https://github.com/psi4/psi4/pull/2394,1,['mainten'],['maintenance']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; closes #2939 . ## User API & Changelog headlines; - [x] fix bug where `optimize(..., engine=""geometric"", molecule=mol)` would not run; - [x] undo some hack fixes and make distributed driver runs through QCFractal ""next"" branch more reliable by making array qcvars shaped numpy arrays. Works with QCFractal >=v0.50beta10. Show examples of using `get_psi_results()` to prepare the results of distributed driver runs in ""normal"" psi4 way. ## Dev notes & details; - [x] In the early days (before ddd entered psi4), all array-like pieces of AtomicResults came back as flat lists, so we had to ""plump"" them into e.g., (nat, 3) for gradient. Then, by the time of v1.6 and QCFractal master v15.8, the AtomicResults preserved all that, so we stopped using the plumper. Now in qcfractal next, they're back to lists again _and_ qcvars have been mingled with other properties, so both separation and plumping are required.; - [x] promote `get_psi_results` as a drop-in replacement after running distributed. It sets up a dummy wfn and qcvariables, just like an internal run, so one doesn't have to deal with picking results off the AtomicResult QCSchema.; - [x] Added labels to tests (mostly findif) so that one can catch all ddd-using tests with `pytest -m ""findif and cbs and nbody""`; - [x] set up a mechanism where can parameterize both pytests and ctests with a snowflake with minimum clutter. ## Questions; - [x] This won't work with current qcf release. I'll ask @bennybp to mint a beta10, then this should work. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review (for review, the 4th commit has the material changes. 3rd are test changes. 1st & 2nd are labeling and syntax.); - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2929:312,reliab,reliable,312,https://psicode.org,https://github.com/psi4/psi4/pull/2929,1,['reliab'],['reliable']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; fixes a couple full tests. with these and the ones Jonathon fixed, full tests should be clean again. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] the nbody-vmfc-hessian has one element of value 0.85 above reference by 1.2e-8 caused by adiis. not a big deal, so convcrit loosened from 1e-8 to 2e-8.; - [x] the new molden writer tests are nicely structured, but they use r_convergence=12 a lot for SCF, which doesn't tighten the criteria for SCF. so the new adiis tipped one test over the failure limit. (see below the original (r_conv=12) and tight (e_conv=12) SCF cycles w/ diis and adiis.) I've regenerated the reference molden.refs with e_convergence 12 and plain diis, then relaxed the convergence for normal running. no trouble with adiis. sound ok, @sgoodlett?; - [ ] @hokru, on the new dft_blocking_schemes test, I'm getting `OCTREE GRID POINTS:: computed value (293260.0) does not match (293259) by difference (1.0).` Is it reasonable to test for 293259 +/- 2 or so?. ```. Total Energy Delta E RMS |[F,P]|. @RHF iter SAD: -672.15146809832379 -6.72151e+02 0.00000e+00; @RHF iter 1: -672.63084564264716 -4.79378e-01 9.00814e-03 DIIS; @RHF iter 2: -672.71442224758289 -8.35766e-02 5.30043e-03 DIIS; @RHF iter 3: -672.74379684057214 -2.93746e-02 5.52535e-04 DIIS; @RHF iter 4: -672.74452788784220 -7.31047e-04 1.91489e-04 DIIS; @RHF iter 5: -672.74459677446487 -6.88866e-05 5.52833e-05 DIIS; @RHF iter 6: -672.74460689141483 -1.01169e-05 1.01025e-05 DIIS; @RHF iter 7: -672.74460730536885 -4.13954e-07 1.76374e-06 DIIS; @RHF iter 8: -672.74460731378190 -8.41305e-09 7.61045e-07 DIIS; Energy and wave function converged. @RHF iter SAD: -672.15146809832379 -6.72151e+02 0.00000e+00; @RHF iter 1: -672.63084564264716 -4.79378e-01 9.00814e-03 DIIS; @RHF iter 2: -672.71442224758289 -8.35766e-02 5.30043e-03 DIIS; @RHF iter 3: -672.74379684057214 -2.93746e-02 5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2446:629,failure,failure,629,https://psicode.org,https://github.com/psi4/psi4/pull/2446,1,['failure'],['failure']
Availability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; ~for now must enable with `-D ENABLE_IntegratorXX=ON`. recc installing catch2 first to avoid downloading each time.~. ~CI will fail because I added a integratorxx header to a file for trial, but haven't enabled the addon in the buildsys everywhere.~. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] optionally build integratorXX with `-D ENABLE_IntegratorXX=ON`. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3041:173,down,downloading,173,https://psicode.org,https://github.com/psi4/psi4/pull/3041,1,['down'],['downloading']
Availability,"## Description; @andysim added the `dcft` module to Psi in 2010, as its pilot implementation. As the method was developed, @ssh2 decided that it was best to drop the `f` and name it `dct`. The abbreviation `dcft` hasn't been used in papers since 2012, and DCT papers since last year have just called the method density cumulant theory, cutting out the `f` entirely. This PR brings Psi up-to-the-present and calls the method `dct` everywhere. Now that we know what the method _is called_, this PR fixes a bug reported on the forums, where the method's density fitting basis set wasn't picked up by the input parser. This was the motivation for this massive PR, and it took one whole line of code. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Replaces `dcft` and `DCFT` with `dct` and `DCT`, throughout all C- and Py- side code; - [x] Added UpgradeHelper errors for users who try `energy('dcft')` and some such; - [x] Added PsiException errors for users who try a dcft option block; - [x] Added PsiException errors for users who try a dcft option; - [x] Updates the tests; - [x] Updates the samples; - [x] Updates the documentation (abbreviations kept when they are part of a paper title); - [x] Removed debug options which the code didn't even use anymore; - [x] Adds the one line of code needed to fix the instigating bug. ## Checklist; - [x] Every `ctest` test calling DCT is run and passes (14 dedicated DCT tests plus four additional tests); - [x] I've confirmed that you encounter the various errors when expected; - [x] I've manually checked the documentation. The only thing not working is the link to the `dct` folder, which won't exist until _after_ the PR is accepted. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1719:906,error,errors,906,https://psicode.org,https://github.com/psi4/psi4/pull/1719,4,['error'],['errors']
Availability,"## Description; @hokru recently reported that when he attempted to use `dfomp2` through `dfocc` to compute dipoles, he was not able to reproduce ORCA's RI-OMP2 to within even 0.01 a.u. I determined by comparison to my own Psi4Numpy implementation of DF-OMP2 that this was an error in the `dfocc` module and eventually tracked it down to `dfocc` sending the wrong orbitals to `OEProp`. The primary purpose of this PR was to fix that and get density-fitted orbital optimized properties hooked up to the driver. ...Unfortunately, adding a test that the remaining dipoles are correct required me to fix some other standing `dfocc` issues that prevent users from setting tight convergence (#1143). That in turn required quite a few test changes. While working through that, I also solved #1509. The 0.7 mHartree difference I was seeing was due to another bug in `dfocc`. It computed the MP2.5/MP3 energy by adding to the _SCF reference_ and not the current determinant. Those are different things in orbital-optimized methods. When you add in the correct reference energy, the disagreement reported in #1509 goes away. In brief, this PR fixes #1143 and fixed #1509. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix a bug where `dfocc` properties were incorrect; - [x] Add a test that the `dfocc` properties are now correct; - [x] Hook up `dfocc` properties to the driver; - [x] Fix a bug where DFOMP2.5/DFOMP3 energies could be incorrect depending on convergence settings; - [x] Simplified/Sanitized handling of convergence criteria in `dfocc`; - [x] Modified `dfocc` tests due to above. ## Checklist; - [x] `ctest -L dfo` and `ctest -L cdo` pass; - [x] `test_dipole.py` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1772:275,error,error,275,https://psicode.org,https://github.com/psi4/psi4/pull/1772,2,"['down', 'error']","['down', 'error']"
Availability,"## Description; A typo in the overlap integral second derivatives caused errors in the analytic hessians. The error seems to be confined to one of the three contributions to matrix elements where the angular momentum in the bra and ket differ, and only when the derivatives both refer to the same perturbation; which is why the code made it through the initial tests. I'm still trying to wrap my head around exactly why those tests work, so I'd like a day or two before this is ready to merge. My sincere apologies to all whom this bug inconvenienced. Fixes #791 and #901. ## Todos; Notable points that this PR has either accomplished or will accomplish. * **User-Facing for Release Notes**; - [ ] Fixed a bug in the analytic Hessian code. ## Questions; - [x] Which extra tests do you have in mind, @loriab?. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/903:73,error,errors,73,https://psicode.org,https://github.com/psi4/psi4/pull/903,2,['error'],"['error', 'errors']"
Availability,"## Description; According to [clang source](http://llvm.org/svn/llvm-project/cfe/trunk/lib/Frontend/InitPreprocessor.cpp) (about half way down the page), clang always reports version 4.2.1 when using ```__GNUC__```, ```__GNUC_MINOR__```, ```__GNUC_PATCHLEVEL__```. This PR updates the version tester to use ```__clang_major__```, ```__clang_minor__```, ```__clang_patchlevel__``` when clang is detected. This issue appeared when using Intel compilers on a Mac. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/579:138,down,down,138,https://psicode.org,https://github.com/psi4/psi4/pull/579,1,['down'],['down']
Availability,"## Description; Accumulated docs improvements. Update samples. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Add download/install notes for Windows; - [x] Update header and doc citation to JCTC article. Add licensing blurb.; - [x] Fix and document building plugins from conda on Mac; - [x] Make X2C input and output consistent. @fevangelista, is this what you wanted?; - [x] Fix `basisset_ = basisset_;` typo noticed by CDS; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go **Everyone**, stop review when you hit ""samples/""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/703:182,down,download,182,https://psicode.org,https://github.com/psi4/psi4/pull/703,1,['down'],['download']
Availability,"## Description; Add rotational strength as new property, which has become available in adcc 0.14.3. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [X] Rotational strength for all ADC methods from adcc; - [x] Velocity gauge for oscillator strength. ## Questions; - [x] Adcc now allows oscillator strengths to be computed in both velocity and length gauge. What is the canonical way to expose this in Psi4?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1892:74,avail,available,74,https://psicode.org,https://github.com/psi4/psi4/pull/1892,1,['avail'],['available']
Availability,"## Description; Added and tested the following functionals. For the last two, unfortunately no bench value is provided.; ```; Functional: libxc : rob qchem; Comparison SOGGA11: -76.3720792686 : nan 3.84e-05 ; Comparison SOGGA11-X: -76.3569745367 : nan 1.10e-05 ; Comparison M06-L: -76.3766432198 : nan 1.95e-06 ; Comparison MN12-L: -76.3109178757 : nan 3.84e-05 ; Comparison MN15-L: -76.3001901669 : nan 5.49e-06 ; Comparison MN15: -76.3017521834 : nan nan ; Comparison PBE0-DH: -76.1613318950 : nan nan ; ```. Added worker functions for SCAN family of functionals, however without XC_MGGA_C_SCAN (which is available in LibXC 3.0.1) they won't work - commented out. See http://forum.psicode.org/t/libxc-density-functionals/589/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/904:607,avail,available,607,https://psicode.org,https://github.com/psi4/psi4/pull/904,1,['avail'],['available']
Availability,"## Description; Added core BrianQC functionality; - psi4 can now be compiled with the USING_BrianQC switch; - when compiled with BrianQC, several operations can be computed on the available GPUs through the BrianQC module, including Fock building and diagonalization. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1893:180,avail,available,180,https://psicode.org,https://github.com/psi4/psi4/pull/1893,1,['avail'],['available']
Availability,## Description; Added missing existence check for each symmetry sub matrix in the advanced Matrix::gemm. (The first Matrix::gemm in matrix.cc). . ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Function no longer triggers segmentation fault for empty submatrix. ## Questions; - [ ] Question1. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/935:302,fault,fault,302,https://psicode.org,https://github.com/psi4/psi4/pull/935,1,['fault'],['fault']
Availability,"## Description; Adds ECP capabilities by interfacing the integrals written @robashaw. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] ECP SCF energies.; - [x] ECP gradients by finite differences in Python.; - [x] Test case(s) and documentation.; - [x] Make sure frozen core code doesn't add contributions from ECP bearing atoms.; - [x] Add / document more basis sets, and add ECP info to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - Effective Core Potentials available for SCF energies and gradients, as well as post-SCF energies.; - Def2 family of basis sets available for all atoms supported by those basis sets. Followup projects include:; - Add fully analytic when derivative integrals are available.; - Add CPHF terms and consolidate the OE derivatives from scfgrad and mp2grad.; - Try to clean up Python/C++ parsing and processing of basis sets. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/681:564,avail,available,564,https://psicode.org,https://github.com/psi4/psi4/pull/681,3,['avail'],['available']
Availability,## Description; Adds NumPy to the psi4-dev environment as it is 1) required to build gau2grid and 2) required to run Psi4. We also need to install deep-diff here as well which is only available on pip/conda-forge. Should this be: `conda create -n p4dev python=x.x psi4-dev numpy deep-diff -c psi4 -c conda-forge`; ; ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/970:184,avail,available,184,https://psicode.org,https://github.com/psi4/psi4/pull/970,1,['avail'],['available']
Availability,"## Description; Adds a few functionals (SCAN0, revSCAN0, SCAN, revSCAN, BMK, revM06-L).; ~Enables `dft_bench_i*` tests for SCAN, SCAN0, revPBE, SOGGA, SOGGA11, MN12-SX, MGGA_MS2h, MN12-L, BMK, N12, MGGA_MVS, PKZB, MN15-L, PBE50, MGGA_MVSh, SOGGA11-X, M06-L, N12-SX, PBEOP, MPW1LYP and GAM.~; Enables all reference values in `dft_bench_i*` tests, now sorted alphabetically. Functionals not present in Psi4 are automatically ~marked with `xfail`~ skipped - this currently includes B3TLAP, BP86VWN, LRC-BOP, PBEsol, t-HCTH, t-HCTHh, wM05-D and wM06-D3, in addition to wB97X-D3 which was already marked `xfail`. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] adds SCAN and SCAN0; - [ ] tests for revSCAN, revSCAN0, revM06-L are missing - if anyone has access to these in other codes, I'd appreciate reference values!. ## Checklist; - [x] Tests added for functionals, where available; - [x] `dft_bench_interaction` and `dft_bench_ionization` pass. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1597:920,avail,available,920,https://psicode.org,https://github.com/psi4/psi4/pull/1597,1,['avail'],['available']
Availability,"## Description; Adds a generalized Davidson solver to solvers.py. Issue #886. @dgasmith @amjames . ## Todos; * **Developer Interest**; - [x] General Davidson solver in python, takes an arbitrary number of roots, the convergence tolerance and maximum number of guess vectors. ## Questions; - [ ] Should the solver do all operations with psi4.core.Matrix functions? Currently, I’m using a QR decomposition in numpy to orthogonalize the added guess vectors with respect to the previous guess vectors. - [ ] I also need to change the code to handle a list of psi4.core.Matrix objects. Can I assume that this would be a list of guess vectors, with their second dimension being 1?. - [ ] Since this is a general solver, should I be worrying about irreps?. ## Checklist; - [ ] Currently takes in and returns numpy arrays, needs to take in and return a list of Psi4.core.Matrix objects; - [ ] May implement RHF stability analysis as a test case. ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1080:228,toler,tolerance,228,https://psicode.org,https://github.com/psi4/psi4/pull/1080,1,['toler'],['tolerance']
Availability,"## Description; Adds ability for psi4.set_memory() to take unit-containing string as an argument, so that; `psi4.set_memory('30 GB')` behaves as would be expected. ## Todos; * **User API Changes**; - `int`, `float`, and `str` argument types supported; - `int` and `float` type arguments taken literally as number of bytes of memory to be set; - `str` type arguments must have units attached, e.g., `'20 mb'`, and are case-insensitive; - Added return of the amount of memory set; - renamed underlying fn to `psi4.core.set_memory_bytes(); - Arranged for inputparser to use the same psi4.set_memory() as psiapi, so now kib/mib/gib/tib avail. in input; - Correct the Psi4 and SCF headers which were computing MB and labeling MiB; - Add and test some bad examples of mem setting; - Add a minimum memory (250 MiB), adjust the default mem to 500 MiB. ## Questions; - [x] Currently, arguments of type `str` **MUST** have units. Should we allow users to input unitless numbers as `str`, to be taken literally? Or, if they wish to do that, should they just input as `int` or `float`? Consensus is, No, string args must have unit. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/641:632,avail,avail,632,https://psicode.org,https://github.com/psi4/psi4/pull/641,1,['avail'],['avail']
Availability,"## Description; Adds hostname printing to output file header, and stop time to output file ""footer"" before success/failure beer/coffee message. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/947:115,failure,failure,115,https://psicode.org,https://github.com/psi4/psi4/pull/947,1,['failure'],['failure']
Availability,"## Description; Adds minao Br. Update CheMPS2 upstream. Remove Fort checking. Whiteli……st Cfour parallelism variable. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Remove copied-in CMake CheckFortranCompilerFlag module now that min cmake is 3.3 which always provides it. Also echo-target, which was more of a devel utility.; - [x] Fixed the suggest-near-option-match for py3.; - [x] Whitelist CFOUR_NUM_CORES envvar for Cfour, closing psi4/psi4#661, fix `psi4 -s` not handling relpaths property with Cfour.; * **User-Facing for Release Notes**; - [x] Pull CheMPS2 from upstream v1.8.3-12, now that the lapack & hdf5 cmake target have been included upstream.; - [x] From Rob, add Br to cc-pvtz-minao.gbs; - [x] Adjusted the molecule name parsing in inputparser. Now allow practically any name through the `molecule ... {...}`, then test if valid Py object name, printing error msg if not. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/672:345,echo,echo-target,345,https://psicode.org,https://github.com/psi4/psi4/pull/672,2,"['echo', 'error']","['echo-target', 'error']"
Availability,"## Description; Adds regression tests which ensure consistency between different `qc_module`s for `cc_type`= `conv`. Should finish off #714?. ## Questions; - [x] What lists should this test be on? Currently listed as `psi;quicktests;cc` because I copied and minimally modified from `CMakeLists.txt` in the mp2-module test. ; - [x] Managed methods [table](http://psicode.org/psi4manual/master/notes_c.html#table-managedmethods) lists DETCI as a possible choice for conventional CCSD with RHF/ROHF reference, but I errors from the driver trying these combinations.; ```python; set qc_module DETCI; energy('ccsd'). RuntimeError:; FatalError: DETCI: The CC module is not currently enabled. ; ```; ## TODO; - [x] ~Add ROHF/RHF CCSD checks against DETCI if they apply (pending feedback about 2nd point above)~ Remove indications that DETCI can do CCSD from the table; - [x] Add checks between fnocc and dfocc; - [x] Add non-frozen-core tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/966:513,error,errors,513,https://psicode.org,https://github.com/psi4/psi4/pull/966,1,['error'],['errors']
Availability,"## Description; Adds the DLPNO-MP2 method to Psi4. Callable as `energy('dlpno-mp2')`. DLPNO-MP2 (or domain-based local pair natural orbital MP2) is the method described in the following paper:. [Pinski, Peter, et al. ""Sparse maps—A systematic infrastructure for reduced-scaling electronic structure methods. I. An efficient and simple linear scaling local MP2 method that uses an intermediate basis of pair natural orbitals."" The Journal of chemical physics 143.3 (2015): 034108](https://doi.org/10.1063/1.4926879); ; DLPNO-MP2 recovers about 99.9% of the DF-MP2 correlation energy, and scales much better in both time and memory. The following graph compares this implementation with Psi4's DF-MP2 code on linear alkanes (18 core i9-10980XE, 200 GB, cc-pVTZ basis):. ![alkanes](https://user-images.githubusercontent.com/16376046/105784584-b38e7180-5f3e-11eb-97ce-9e5d05896d82.png). ## Todos; - [x] Implement DLPNO-MP2; - [x] Add tests; - [x] Add docs. ## Questions; - [x] Are there any other ways that this calculation should be routed? In particular, should `DLPNO` be an option for the `MP2_TYPE` keyword? Should DLPNO be an option for `QC_MODULE`?; - [x] Related to the previous question, suppose a user wants to run a SCS DLPNO-MP2 calculation. How should that be parsed? Not a big deal if that isn't supported.; - [x] How best to handle DLPNO options? There are many thresholds associated with this method, but the error and cost of the method are primarily controlled by just two of them: `T_CUT_DO` and `T_CUT_PNO`. Should the other options be user-facing at all? For now, I've marked them expert. Opinions from anyone with experience running local correlation methods are welcome here. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2093:528,recover,recovers,528,https://psicode.org,https://github.com/psi4/psi4/pull/2093,2,"['error', 'recover']","['error', 'recovers']"
Availability,## Description; All credit to @hokru . This fixes runtime errors seen on Mac with clang 10. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2017:58,error,errors,58,https://psicode.org,https://github.com/psi4/psi4/pull/2017,1,['error'],['errors']
Availability,"## Description; Allow access to wfn (incl. geom) after optking errors. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; * **User-Facing for Release Notes**; - [x] If optking fails internally or through exceeding max cycles and throws a `ConvergenceError`, you can now catch it with:. ```; try:; optimize('hf'); except psi4.ConvergenceError as err:; gotcha = err.wfn; print(gotcha.molecule().nuclear_repulsion_energy()); ```. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/881:63,error,errors,63,https://psicode.org,https://github.com/psi4/psi4/pull/881,1,['error'],['errors']
Availability,"## Description; Apparently UKS Meta-GGA's have been wrong since the LibXC patch. I have fixed this error and get quite a nice agreement across our test set. I have changed the `dft1` test to cover these cases and be a bit more specific in what we are testing. I have also started on UKS VV10; however, I am not quite confident it is correct. The VV10 energy is certainly correct, but the gradient might not be scaled correctly. This is the last chance I have to look at it for several weeks so it will need to wait. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/897:99,error,error,99,https://psicode.org,https://github.com/psi4/psi4/pull/897,1,['error'],['error']
Availability,"## Description; As it turns out I need these for an upcoming project so I started looking into them. This was quite a hurdle with @andysim rederiving the equations and worked on this in parallel. In the end a simple line fix in `eribase.cc` would have fixed this. There are quite a few simplifications that were due to desperation of trying to find the error. These can be removed, but I think this enhances the clarity of the GradDFJK code. Happy to go either way. Fixes #867 . Psi4NumPy script can be found [here](https://gist.github.com/dgasmith/999f5a100e38968457898ecb1e2c22fe). ## Todos; - [x] UKS Gradients need re-fixing. Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Enables range-seperated gradients for density fitting JK objects. ## Questions; - [x] @andysim @jturney Are the `eribase.cc` tweaks fine?. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1043:353,error,error,353,https://psicode.org,https://github.com/psi4/psi4/pull/1043,1,['error'],['error']
Availability,"## Description; As the title says. PSIO errors now give suggestions on how to fix the observed PSIO issue. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] PSIO errors now provide advice on how to rerun the calculation to fix the PSIO issue. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adjusts PSIO error printout so that advice is now given on how to rerun calculations to fix the observed PSIO issue. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3139:40,error,errors,40,https://psicode.org,https://github.com/psi4/psi4/pull/3139,3,['error'],"['error', 'errors']"
Availability,"## Description; At long, long, long last fixes #1777 and fixes #1793. We now DIIS on the combined vector of orbital rotation amplitudes and T2 amplitudes. This is the approach taken by the orbital-optimized DCT code, which has not had nearly the problems that the `occ` module has had with orbital convergence. `occ` should now have much more robust convergence and _not_ be one of the banes of the test suite. In addition, full tests now pass, minus things involving conda dependencies. `v2rdm_casscf` was (unsurprisingly) segfaulting, and I was getting an error with `mp2d` that seems to trace back to me having an outdated version of QCEngine. I had to make some changes to `opt-irc-2` to get the test suite working. See #1793 for my diagnosis of the problem. In brief, the IRC in Psi can overshoot the endpoint, causing some numerical instability in the steps post-overshoot. This is a problem to fix in PyOptking, so I just changed the test value. This concludes the OCC's Open-Heart Surgery series. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Coupled orbital and amplitude DIIS for improved convergence in `occ`; - [x] Validated every `occ` test with OMP2, OMP3, OMP2.5, OCEPA that uses no spin-scaling against Psi4Numpy implementations converged with obsessive tightness. ## Checklist; - [x] Full tests pass, except for conda dependencies. That means `ctest` and `pytest`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1846:343,robust,robust,343,https://psicode.org,https://github.com/psi4/psi4/pull/1846,2,"['error', 'robust']","['error', 'robust']"
Availability,"## Description; At the risk of gaining a reputation for single-character PR's, I think I have a fix for #1596. The extra character in the error message looked suspicious, so I nuked it and the `adc` tests still pass. I'll show the output of the OP's calculation below. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix a probable typo in ADC, which introduced a bug. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1599:138,error,error,138,https://psicode.org,https://github.com/psi4/psi4/pull/1599,1,['error'],['error']
Availability,"## Description; Attempts to restore the docs. Previously, we were getting warnings:; ```; 2022-03-10T17:32:55.6518847Z /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/notes_c.rst:66: ERROR: Unexpected indentation.; 2022-03-10T17:32:55.6519492Z /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/notes_c.rst:67: WARNING: Block quote ends without a blank line; unexpected unindent.; 2022-03-10T17:32:55.6520109Z /home/runner/work/psi4/psi4/code/objdir/doc/sphinxman/source/notes_c.rst:70: WARNING: Bullet list ends without a blank line; unexpected unindent.; ```. Wouldn't GHA docs auto-build be nice...?. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2468:196,ERROR,ERROR,196,https://psicode.org,https://github.com/psi4/psi4/pull/2468,1,['ERROR'],['ERROR']
Availability,## Description; Avert travis failures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1659:29,failure,failures,29,https://psicode.org,https://github.com/psi4/psi4/pull/1659,1,['failure'],['failures']
Availability,"## Description; Ben Pritchard has been extensively revamping QCFractal/QCArchive. It has reached the point that the QCFractal `master` branch (latest release v0.15.8) will get no more support, and the `next` branch (no releases or conda packages) is in beta testing. This PR switches Psi4 distributed driver from `master` to `next` interfaces. It shouldn't affect many, if any. Only affects ppl running Psi4 and have `client = FractalClient(...)` in their inputs. User-side, was:; ```; from qcfractal.interface import FractalClient; client = FractalClient(""localhost:7777"", verify=False); ...; plan = gradient('scf', dertype=0, return_plan=True); plan.compute(client); ret = plan.get_results(client); ```. User-side, now:; ```; from qcportal import PortalClient; client = PortalClient(""http://localhost:7777"", verify=False); ...; plan = gradient('scf', dertype=0, return_plan=True); plan.compute(client); ret = plan.get_results(client); ```. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Updates interface for QCFractal `next`. Core snippet written by Ben.; - [x] ADDED: Also, updated to `task_config` from `local_options`. This isn't urgently needed, but it'll silence a repeated warning, at the cost of requiring latest qcng and hence latest qcel. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [x] I've tested it on GT cluster. Various calls were changed out for new ones. I'm not sure if error handling is any worse or better. ## Status; - [x] Ready for review; - [ ] Ready for merge, no particular hurry",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2645:1601,error,error,1601,https://psicode.org,https://github.com/psi4/psi4/pull/2645,1,['error'],['error']
Availability,"## Description; Ca & Ga-Kr basis set fixes. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Extend non-additivity from cc-pwCVXZ to cc-pCVXZ; * **User-Facing for Release Notes**; - [x] Repair Ca cc-pCV5Z (and 5+d) from Peterson's website (wrong on EMSL); - [x] Add Ca cc-pwCV5Z (and 5+d) from Peterson's website; - [x] Extend Ga-Kr basis and polarization for 6-31G. <img width=""1096"" alt=""screen shot 2017-08-23 at 12 08 07 am"" src=""https://user-images.githubusercontent.com/2314730/29598495-38232b30-8797-11e7-8f76-a8d5349ecd4a.png"">. ## Questions; - [x] @CDSherrill may want to examine. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/788:252,Repair,Repair,252,https://psicode.org,https://github.com/psi4/psi4/pull/788,1,['Repair'],['Repair']
Availability,"## Description; Changes a setting in the COSX JK algorithm to a more conservative default. Previously, the incremental fock option (`cosx_incfock`) was enabled by default. This gave a minor speedup, but it came at the risk of possible SCF convergence issues when using diffuse basis sets. This PR disables this option, so the COSX algorithm will be slightly slower, but more robust by default. ## Todos; - [x] Changed `cosx_incfock` default. ## Checklist; - [x] COSX tests still pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2689:375,robust,robust,375,https://psicode.org,https://github.com/psi4/psi4/pull/2689,1,['robust'],['robust']
Availability,"## Description; Cleans up CMake so that external dependencies can be linked to libraries in `psi4/src/psi4` and then inherited by `core` without invoking `target_link_libraries`/`target_include_directories` again. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Bump CMake minimum requirement to 3.8; - [x] Rewrote `psi4_add_module` CMake macro. Now it takes `bin` or `lib` argument, name of module, and list of sources. Note that the macro:; - Now defines **two** global lists of libraries `core` will link to, one for `bin`s and one for `lib`s. This is needed because `lib`s need to appear last in the link line to avoid missing symbols.; - Sets source file properties to generate position-independent code with symbols hidden by default.; - [x] Rewrote downstream `CMakeLists.txt` so that: ; - Sources are in a list, with one source file per line, for easier diff inspection.; - External dependencies are linked where they are used first.; - [x] Reordered `include`s in _some_ files according to the hierarchy: ; - For class implementation sources: header corresponding to current source file first (_.i.e._ `#include ""myself.h""` in `myself.cc`); - C++ standard headers, including `<omp.h>`; - Psi4 higher-level headers, _i.e._ `psi4/psifiles.h` &co.; - Psi4 headers in subdirectories _i.e._ `psi4/libmints/matrix.h` &co.; - Headers in current directory _without full path_.; - [x] `psi4/src/psi4/liboptions/liboptions_python.h` moved to `psi4/src/python_data_type.h` and ; `psi4/src/psi4/liboptions/python.cc` moved to `psi4/src/python_data_type.cc`. These are now compiled and linked as part of `core`, rather than `liboptions`. ## Questions; I note that `mrcc.cc` and `civect.h` include `pybind11.h`. It might be a good idea to move those bindings one level up, directly into `core` without spreading the dependency too deep in the code. Opinions?. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1358:806,down,downstream,806,https://psicode.org,https://github.com/psi4/psi4/pull/1358,1,['down'],['downstream']
Availability,"## Description; Closes #1673. This PR fixes an indexing error causing the wrong orbitals to be scaled during fractional occupation, when there are multiple irreps. Now that the SCF module has its correctness errors fixed, I can get to some convergence improvements. ## Todos; - [x] Fixed a bug causing incorrect energies during fractional occupation for systems with point group symmetry. ## Checklist; - [x] Tests added for any newly working features; - [x] frac tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2280:56,error,error,56,https://psicode.org,https://github.com/psi4/psi4/pull/2280,2,['error'],"['error', 'errors']"
Availability,"## Description; Closes #1872. . CEPA Conventions Now:; `dct`: Does not know about CEPA(0), per #1873 ; `occ`: Every use of CEPA or CEPA(0) is now converted to LCCD. The section header and the final results section include [CEPA(0)] in parentheses. The same applies to the orbital optimized methods. The string ""OCEPA"" is still used internally as a wavefunction type when referring to LCCD, but that part of `occ` could use refactoring anyways, so I'm not going to spend the time to change it for something that relatively minor.; `dfocc`: Unchanged, because it always said `lccd` anyways. Bozkaya changed his preferred name for the method from CEPA to LCCD between `occ` and `dfocc`; `fnocc`: For consistency with the other CEPA methods, this still uses CEPA(0) to refer to both LCCD and LCCSD for the final results, but the start of the computation writes out Linearized CCD or Linearized CCSD.; Driver: This is unchanged. `cepa(0)` means LCCSD. Obligatory ping to notify @edeprince3. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Standardizes CEPA terminology in Psi output. ## Checklist; - [x] Quick tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1909:958,ping,ping,958,https://psicode.org,https://github.com/psi4/psi4/pull/1909,1,['ping'],['ping']
Availability,"## Description; Closes #2192 : a correctness error in threaded correlated DF gradients accidentally introduced during my refactoring. I recommend making a new release candidate sooner rather than later. Sorry, Lori. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Fix DF gradient paralellization error . ## Lessons Learned; - [ ] We could _really_ use a threaded pass of quicktests as part of the test suite; - [ ] The difficulty of compiling Psi4 can be a bottleneck in the dev process. In particular, the instructions to get Psi source-compiled on Linux don't work out of the box, and Mac clang compilers are still choking on programs that are five lines of code. ## Checklist; - [x] Threaded quicktests pass. @hokru found the only failure was the bug which this PR fixed, and the failing test cases pass now. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2193:45,error,error,45,https://psicode.org,https://github.com/psi4/psi4/pull/2193,3,"['error', 'failure']","['error', 'failure']"
Availability,"## Description; Closes #2310 - an error message is more helpful than a segfault, in my opinion. ## Checklist; - [x] Tests added for any newly trapped keywords; - [x] cc test still pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2450:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/pull/2450,1,['error'],['error']
Availability,## Description; Closes #2779. (@susilehtola). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Raise an error when a user requests more roots of `detci` than there are determinants. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2780:228,error,error,228,https://psicode.org,https://github.com/psi4/psi4/pull/2780,1,['error'],['error']
Availability,## Description; Closes issue #2559 . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Removed redundant work in parallel TwoBodyAOInt construction. ## Questions. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2581:152,redundant,redundant,152,https://psicode.org,https://github.com/psi4/psi4/pull/2581,1,['redundant'],['redundant']
Availability,"## Description; Conda and management docs, various fixes. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Much addition and modernizing of conda, management, versioning docs; - [x] Allows, I expect, building plugins from conda on Mac; * **User-Facing for Release Notes**; - [x] Fixes `set properties_origin [""COM""]` error noticed by @lazaroid [here](http://forum.psicode.org/t/set-properties-origin-currently-broken-for-com-or-variables-as-values/503). ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/689:383,error,error,383,https://psicode.org,https://github.com/psi4/psi4/pull/689,1,['error'],['error']
Availability,"## Description; Consider this a hacked bare minimum. Needs work. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] They are _still_ playing about with fctls so xc_funcs.h is still changing and having to be copied over into our file. I've pinned the commit for the moment so you won't get stray ""can't find libxc fctl"" errors.; - [x] From https://gitlab.com/libxc/libxc/commit/21ee6588bb8039c3c83e5b39d01b2ee4234fe5e3 , I think they've changed over 'set_params' to 'ext_params'. Haven't figured out how to do so psi-side. Not all the set_params lived so the funcs that got dropped are now commented in LibxcFunctionals.cc; - [x] They seems to have dropped lda_set_params entirely. I saw at least one commit msg indicating it was duplicate functionality; - [x] All tests but 4 (+ scf-covereage for me) pass. Fails are of the type below. ```RuntimeError: ; Fatal Error: Matrix::power: C_DSYEV failed; Error occurred in file: /home/psilocaluser/gits/hrw-dgas/psi4/src/psi4/libmints/matrix.cc on line: 2584; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Matrix::power(double, double); psi::DIISManager::extrapolate(int, ...); psi::scf::HF::iterations(); psi::scf::HF::compute_energy(); ```. ### April 2018 updates; - [x] psi's fork of Libxc resides in a branch on GH:loriab/libxc . I'd transfer that repo to psi4/libxc except then all the present cmake pulls (to the 3.0 master in that repo) would break.; - [x] added in M05, M052X, M06, M062X, M06HF, M08SO, M08HF, M11; - [x] M11 close (0.00035 E_h) but broken; - [x] MGGA_MVSh & MGGA_MVS broken; - [x] otherwise, test suite is clean; - [x] Need https://gitlab.com/libxc/libxc/merge_requests/65 to go through and hopefully 4.0.5 tag made, then pull over to GH and re-point this PR. ## Status; - [x] Ready to go. Absolutely not",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/802:383,error,errors,383,https://psicode.org,https://github.com/psi4/psi4/pull/802,3,"['Error', 'error']","['Error', 'errors']"
Availability,"## Description; Continues from psi4/psi4#850 in getting sns-mp2 integrated into psi as an endorsed plugin. Also various infrastructure additions to accommodate downstream and python projects. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] First downstream project buildable during superbuild; - [x] First pure python project buildable during superbuild. That is, `setup.py`, not `addonConfig.cmake`, so opt-in/detect-from machinery a lot shakier. Have to use FindPythonModule adapted from internet, rather than sturdy `find_package()`. For where-module?, relying totally on :envvar:PYTHONPATH. Seems to be behaving sensibly, but report oddities.; - [x] Add some dev docs for how to do workflows with addons; - [x] Adapt some snsmp2 test to work with psi ctest and pytest; - [x] Fix up tests/pytest/test_numpy_views so that it runs with pytest and doesn't interfere when `memory_profiler` not installed; - [x] ~Until https://github.com/DEShawResearch/sns-mp2/pull/2 goes in, pulling from my fork~; - [x] Adds some (mildly tested) versioning capabilities to FindPythonModule; * **User-Facing for Release Notes**; - [x] Enable [sns-mp2](https://github.com/DEShawResearch/sns-mp2) to be built at build-time via `cmake -DENABLE_snsmp2=ON`. Can also detect it if you put an external snsmp2 in PYTHONPATH (but as it's an optional runtime dependency, latter's only really useful for testing); - [x] Fix nasty bug that made the number of points computed for cube file dependent on rounding error. Could show up as differences in cube files btwn compilers. Tightened down cubefile checking. ## Questions; - [x] @rmcgibbo, I'd still like to know about getting the version from the imported plugin. Also, it'd be nice to get pytest in the sns-mp2 repo working in its own right.; - [x] @shannonhouck, there'll probably be a few more docs to add, if you don't mind. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/865:160,down,downstream,160,https://psicode.org,https://github.com/psi4/psi4/pull/865,4,"['down', 'error']","['down', 'downstream', 'error']"
Availability,## Description; Corrects additional JK logic edge cases found and increases the verbosity of the error messages. At the same time we should continuously discourage users to set a `SCF_TYPE` to anything besides `DF`. `MEM_DF` and `DISK_DF` are truly expert user options and I believe have been marked as such in a variety of places. Also added a throw if someone requests dlDF+D gradients as these have never been implemented. . Fixes #1021. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1023:97,error,error,97,https://psicode.org,https://github.com/psi4/psi4/pull/1023,1,['error'],['error']
Availability,## Description; Cramming a few more deprecations into v1.2. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] `Wavefunction.reference_energy()` --> `Wavefunction.energy()` in keeping with grad/hess and because reference is not apt. py-side was already plain `energy()`.; - [x] deprecate the c-side `Wavefunction.frequencies` member data and getter/setter. getter now reads off the py-side member data. setter will go away entirely. ## Questions; - [ ] can one suppress compile-time deprecation warnings for two lines? the export_mints legacy_freq lines are properly throwing errors and disrupting the clean build. ## Checklist; - [ ] ~Tests added for any new features~; - [x] ran the freq tests with earlier v of code. ## Status; - [x] Ready for review. ~This has got bits of #1454 and #1449 in it. I'll rebase once they're in.~; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1455:623,error,errors,623,https://psicode.org,https://github.com/psi4/psi4/pull/1455,1,['error'],['errors']
Availability,"## Description; Currently, COSX in Psi4 uses a two-grid scheme to complete the SCF - the SCF is first converged on a smaller grid, and then a single iteration is performed on a larger grid, a scheme proposed by Neese. This scheme works quite well for energies; but since the SCF isn't converged on the larger grid, it may not be as ideal if wavefunction properties (e.g., gradients) are desired. This PR fixes that by adding a new keyword, `COSX_MAXITER_FINAL`, an integer that determines the maximum number of SCF iterations to run on the final COSX grid. By default, this keyword is set to 1, mimicking the current behavior of the code. A more detailed description of behavior can be broken down as follows:. - If `COSX_MAXITER_FINAL` < 0; the SCF will attempt to fully converge on the final COSX grid (within the constraints provided by `MAXITER`, of course).; - If `COSX_MAXITER_FINAL` == 0; the SCF will not run on the final grid at all, effectively turning the COSX algorithm into a single-grid implementation.; - If `COSX_MAXITER_FINAL` > 0; the SCF will run on the final grid for a maximum number of iterations specified by the keyword. ; - If the SCF converges on the final grid before the iteration count specified by `COSX_MAXITER_FINAL`, the SCF will exit upon convergence.; - If the iteration count specified by `COSX_MAXITER_FINAL` is reached before the SCF is converged on the final grid, the SCF will exit, treated as a success.; - If the `MAXITER` SCF iteration limit is hit before the `COSX_MAXITER_FINAL` limit is reached, the calculation will fail. Also of note, this PR changes CompositeJK so that early_screening is disabled for LinK-based composite methods. Practically, this means that LinK-based methods do not run the extra post-early-screening SCF iteration that is present in COSX-based methods. ## User API & Changelog headlines; - [X] Adds a new keyword, `COSX_MAXITER_FINAL`, for controlling the maximum number of SCF iterations to run on the final COSX grid. ## Dev not",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2981:693,down,down,693,https://psicode.org,https://github.com/psi4/psi4/pull/2981,1,['down'],['down']
Availability,"## Description; DCT's `cepa0` capabilities are removed. Per #1872, Psi has a problem with being consistent about what `cepa0` is. DCT has `cepa0` and is contributing to the problem. The best option is to just get rid of it. We only have it for testing purposes, but that's a Psi4Numpy task nowadays. The documentation even said don't use it for production. Besides, `cepa0`'s days as a useful point of comparison to `dct` are numbered. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Removed `cepa0` functionality from `dct` module. Use `occ`, `dfocc`, or `fnocc` instead.; - [x] Removed test checking for consistency between `fnocc` and `dct` CEPA because `dct` no longer has `CEPA`. ## Questions; - [ ] One procedural concern: At what point are we pulling the plug on getting new PRs into 1.4? I do not want keeping up with my PRs to take time that core devs should be spending moving 1.4 forward. ## Checklist; - [x] `ctest -L quick` passes; - [x] `ctest -L dct` passes; - [x] Documentation updated; - [x] Error message added. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1873:1059,Error,Error,1059,https://psicode.org,https://github.com/psi4/psi4/pull/1873,1,['Error'],['Error']
Availability,## Description; DFT-D plus the use of a guess basis set produced an error because of a typo in setting the dispersion energy: set_variables -> set_variable. . ## Status; - [X] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/769:68,error,error,68,https://psicode.org,https://github.com/psi4/psi4/pull/769,1,['error'],['error']
Availability,"## Description; DFT-NL (=non-local) adds the VV10 correlation energy to arbitrary DFT functionals using functional specific vv10_b parameter. Conceptually similar to DFT-D. DOI: 10.1021/ct200644w. Fixes https://github.com/psi4/psi4/issues/870. * **User-Facing for Release Notes**; - [x] SCF option `DFT_VV10_B` enables and adds VV10 correlation according to DFT-NL scheme (fixed `vv10_c`, user-supplied `vv10_b`). ; - [x] `DFT_VV10_C` also gives access to the C parameter.; - [x] `NL_DISPERSION_PARAMETERS` similar to `DFT_DISPERSION_PARAMETERS`; - [x] `energy('functional-nl')` sets pre-defined vv10_b parameters for over 15 functionals. Recommended usage for most users.; - [X] `DFT_VV10_POSTSCF` enables a post-scf VV10 calculation. Large gain in speed with minimal loss of VV10 correlation energy.; - [x] added documentation. . * **Developer notes**; - [x] rebase+adjustment to PR https://github.com/psi4/psi4/pull/922; - [x] figure out DSD variant and param citations; - [x] re-integrate tests. * ** Notes**; * forcing pure HF with VV10 will seg. fault. (no integration grid). Only `energy('hf')` with `set DFT_VV10_B` is caught, not `energy('scf')` to allow custom access to the scf.; * NL parameters were entered manually, someone please check over them for strange values or typos; * tests are kept short, but we also don't test every dispersion dash parameter out there.; * for double-hybrids with multiple versions, the frozen core and/or D3BJ parent variant was chosen for a sensible consistency. . ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/914:1052,fault,fault,1052,https://psicode.org,https://github.com/psi4/psi4/pull/914,1,['fault'],['fault']
Availability,"## Description; Deprecates ways of calling derivatives that are, as best as I can tell, artifacts of legacy code that were never removed. If anybody downstream of us needs these, we're giving them a chance to prevent us. Otherwise, less code, less problems. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2423:149,down,downstream,149,https://psicode.org,https://github.com/psi4/psi4/pull/2423,1,['down'],['downstream']
Availability,"## Description; Described in great detail [here](https://github.com/psi4/psi4/issues/1736). ## Todos; I see this PR occurring in six major stages.; - [x] Introducing the OPDM/Lagrangian Tech; - [ ] Introducing the Conventional TPDM Tech; - [ ] Migrating Psi to new-style gradients; - [ ] Adding deprecation warnings for old-style gradients; - [ ] Miscellaneous revision corrections. ## Technical Discussions: May be tl;dr. ### Step One: OPDM/Lagrangian Tech; This PR introduces a new file, `integraltransform_opdm_lagrangian.cc`, to perform this backtransformation. This was previously done by `integraltransform_oei.cc:trans_one`. As this function has other responsibilities, `trans_one` is preserved. Compared to the previous interface, there are three key changes.; 1. Callers can pass in blocks of the OPDM/Lagrangian. This gives callers flexibility to pass in `oo` and `vv` and `ov` and `vo` blocks separately if available, and to not pass in a block that is conjugate to another block already passed in. This is frequently the case.; 2. Callers pass in these blocks as a map from orbital space labels to a SharedMatrix containing the relevant block and are responsible for attaching this to the wavefunction object via the `Da`, `Db`, and `X` member variables. This is the most important point for this section! All codes except `cc` already store the OPDM/Lagrangian as `SharedMatrix` objects, so this is the path of least resistance. The one holdout predates `libmints` and instead uses a `libmints` `Matrix`-like structure. (See discussion in Step Four.) Existing code had to perform many an astounding number of type conversions to ultimately convert back to the type we had originally. `dct`, for instance, went `SharedMatrix` -> `file2` -> QTOrdered Block Matrix -> PSIO Entry -> Lower Triangle -> Block Matrix -> Lower Triangle -> PSIO Entry -> `SharedMatrix`. We now stay in a `SharedMatrix` the entire time. This type change is why `integraltransform_oei.cc:trans_one` is not used in th",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1745:918,avail,available,918,https://psicode.org,https://github.com/psi4/psi4/pull/1745,1,['avail'],['available']
Availability,## Description; Docs cleanup. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] allows building docs w/o psi-sphinx-theme (though you lose psivar indexing); - [x] makes sure all the tests (incl. psiapi/json) get copied to samples; - [x] fixes up misc. options-referencing errors. ## Checklist; - [x] built with alabaster sphinx theme. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1044:337,error,errors,337,https://psicode.org,https://github.com/psi4/psi4/pull/1044,1,['error'],['errors']
Availability,"## Description; Does exactly what it says. I tested for correctness not only by comparison to basis sets that are on EMSL, but also by reproducing the G2 energy of SO2 reported by Brown and Barber (DOI: 10.1021/j100020a034) within 2E-5 hartrees. The G2 method requires this basis set. I get the same error margin when I try to reproduce their CO2 energies, so I attribute this to them not having converged their geometry tightly. Many thanks to @loriab for guidance with Psi's basis set parser. ## Status; - [x] Ready for review; - [X] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1531:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/1531,1,['error'],['error']
Availability,## Description; Drop string expansion of variables which breaks down when they are empty strings.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/652:64,down,down,64,https://psicode.org,https://github.com/psi4/psi4/pull/652,1,['down'],['down']
Availability,"## Description; During review of the ADIIS PR, it was suggested that Psi raise an error if the BFGS doesn't meet the target convergence criteria. This PR changes that, so the error will be raised _if BFGS is very far from meeting the convergence criteria_. 1e-6 would be nice, but 1e-3 is good enough for our purposes. @loriab, these are the last of the Psi tests on my list to heal. ## Checklist; - [x] Failing tests Lori pointed out work; Can't cause tests that previously passed to fail. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2445:82,error,error,82,https://psicode.org,https://github.com/psi4/psi4/pull/2445,2,['error'],['error']
Availability,"## Description; During the 'inversion' we accumulated some duplicate machinery for handling basis sets in the C++ and Python sections of the code; this PR aims to streamline the process. My goal is to keep the flexible Python parser, have it create a Python ShellInfo object, and use that to pass fixed-format information into the C++ basis set construction routines. The superfluous code in the Python and C++ layers should then be nuked. I also want to clean up the horrible mess I made when implementing ECPs. Very much a work in progress with feedback welcomed, especially from @loriab, @jturney and @rmcgibbo. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Pass pre-formatted data structure to C++ basis set constructor.; - [x] Get rid of unused `center` info from ShellInfo and GShell.; - [x] Remove unneeded code:-; - [x] C++ basis set parser.; - [x] Python GaussianShell.; - [x] C++ ShellInfo.; - [x] Tolerate integers where floats are expected in basis set input.; - [x] Fold ECPs into BasisSet objects.; * **User-Facing for Release Notes**; - [x] Fixed bug that prevented integers in basis set exponents/coefficients from being handled correctly, and another that truncated them to 8 digits after the decimal. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/734:977,Toler,Tolerate,977,https://psicode.org,https://github.com/psi4/psi4/pull/734,1,['Toler'],['Tolerate']
Availability,"## Description; During the course of one of my projects, where I was attempting to perform very tight optimizations of nonbonded clusters with DFT, I encountered some very strange noise in the DF-M05-2X analytic gradients with Psi4. The noise actually prevented us from successfully converging several optimizations to `g_convergence interfrag_tight`. I've attached [this file](https://github.com/psi4/psi4/files/1908011/summary.txt) which contains a variety of gradients, computed using a new-ish version of Psi4 (1.2a1), pre-inversion Psi4 (PSI 4.0.0-beta5) and Q-Chem 4.4, but I'll summarize the results here. Modern Psi4 (1.2a1):; - Density fitting errors in M05-2X yield gradient noise of around 10^{-6} in analytic gradients vs. direct; - Increasing the grid density from the standard (72, 302) to (150, 434) can result in differences as large as 10^{-3} for DF-M05-2X vs. 5pt FD; - Neither direct- nor DF-M05-2X match either 3- or 5-point numerical gradients, which match each other to < 10^{-7}; - DF-B97/cc-pVDZ analytic vs. 5-point FD grad match to ~10^{-5}, and DF-RHF/cc-pVDZ, direct-RHF/cc-pVDZ, & FD(5pt)-RHF/cc-pVDZ all match to < 10^{-7}. Psi4 Beta5:; - Analytic DF-M05-2X gradients vs 5pt FD exhibit differences as large as 10^{-4}; - Similarly small density fitting error vs direct as in modern Psi4; - DF-RHF analytic grads match 5pt FD nearly perfectly, density fitting differences of < 10^{-5}. vs. Q-Chem 4.4 (apples-to-apples comparisons):; - Psi4 1.2a1 analytic direct-M05-2X w/ dense grids, analytic direct-RHF both agree w/ Q-Chem to 10^{-5}; - Psi4 Beta5 analytic direct-M05-2X w/ dense grids matches to ~10^{-5}, with direct-RHF matching to 10^{-7}. I'm unsure if this is an issue in the FINDIF code which may be fortuitously resolved by #884 or more of the same strange behavior noted by @CDSherrill in #867, but we thought it strange enough to want to bring it to the greater community's attention.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/962:653,error,errors,653,https://psicode.org,https://github.com/psi4/psi4/issues/962,2,['error'],"['error', 'errors']"
Availability,"## Description; During the switch over to the super build the `ENABLE_{ASAN,TSAN,UBSAN}` flags stopped working. This PR fixes them. To use these sanitizers you must compile a copy of Python with the corresponding flags added. If you do not then you'll receive runtime errors. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845:268,error,errors,268,https://psicode.org,https://github.com/psi4/psi4/pull/845,1,['error'],['errors']
Availability,"## Description; Ensures that the `Ct_` array is built when using initial guesses with ROHF Wavefunctions. Thereby fixing `GUESS READ` for ROHF Wavefunctions. As a note this still wont quite work for CUHF as we do not have a full orthogonal basis available. However, it works much better than for ROHF and generally stays in the same minima. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/570:246,avail,available,246,https://psicode.org,https://github.com/psi4/psi4/pull/570,1,['avail'],['available']
Availability,"## Description; Errors in PSIO should probably be handled by calling `psio_error(...)`, instead of printing the error messages from the function where the error happens. This PR renovates this function to something more C++-style, and adds a new string argument that defaults to the empty string. This allows the callers of the function to prepend their own error messages to the text that eventually ends up in the error box, such as OS supplied error messages when a read/write/lseek system call fails. This should make it easier to clean up `wt_toclen` etc. (see #2700). ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] `psio_error(...)` can now take a string argument that will be printed first; - [x] Unnecessary includes are removed; - [x] Fixed size char array and C-style string manipulation is gone. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2711:16,Error,Errors,16,https://psicode.org,https://github.com/psi4/psi4/pull/2711,6,"['Error', 'error']","['Errors', 'error']"
Availability,"## Description; Exactly what it says in the title. New `libmints` functions mean a @jturney ping, and new functions messing with integrals mean an @andysim ping. Also, a positive LoC PR. Sad. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Metric derivatives and derivative of the 3-center integrals are now available to Python. ## Checklist; - [x] I've tested that P4N DF-OMP2 gradients using these new functions match `dfocc` gradients to 6 decimal places, but that isn't suitable for the test suite. I'm open to suggestions on tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2088:92,ping,ping,92,https://psicode.org,https://github.com/psi4/psi4/pull/2088,3,"['avail', 'ping']","['available', 'ping']"
Availability,"## Description; Extracts the `Exception`-based error message and prints it out in an attention-seeking box. ## Checklist; - [x] few manual tests. ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Example:; ```; Cleaning optimization helper files. PsiException: Could not converge geometry optimization in 1 iterations. Traceback (most recent call last):; File ""/Users/kruse/qc/psi4.bin/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 29, in <module>; File ""/Users/kruse/qc/psi4.bin/lib/psi4/driver/driver.py"", line 1201, in optimize; raise OptimizationConvergenceError(""""""geometry optimization"""""", n - 1, wfn). psi4.driver.p4util.exceptions.OptimizationConvergenceError: Could not converge geometry optimization in 1 iterations. Printing out the relevant lines from the Psithon --> Python processed input file:; """""",""LiF2m""); core.IO.set_default_namespace(""LiF2m""); core.set_global_option(""BASIS"", ""minix""); core.set_global_option(""SCF_TYPE"", ""pk""); core.set_global_option(""GEOM_MAXITER"", 1); --> optimize('hf'). !----------------------------------------------------------- !; ! !; ! Could not converge geometry optimization in 1 iterations. !; ! !; !----------------------------------------------------------- !. Psi4 stopped on: Thursday, 09 April 2020 10:17AM; Psi4 wall time for execution: 0:00:00.77. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1862:47,error,error,47,https://psicode.org,https://github.com/psi4/psi4/pull/1862,2,['error'],['error']
Availability,"## Description; FIxes the `fcidump` function for C1 symmetry. The looping over irreps was done incorrectly and the tests did not catch it. ; As noted by @loriab, the UHF FCIDUMP files seem erratic when it comes to the number of nonzero two-electron integrals printed out. ~I am tracking down the problem in issue #980 This PR disables the generation of integral dumps from UHF references.~. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fix `fcidump` function for C1 symmetry.; - [x] More robust testing facilities for FCIDUMP. Headers are compared and integrals are used to recompute the SCF one-, two-electron, total electronic and MP2 correlation energies. These are compared to the values computed by Psi4. This also fixes #980 Thanks @dgasmith!. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/957:287,down,down,287,https://psicode.org,https://github.com/psi4/psi4/pull/957,2,"['down', 'robust']","['down', 'robust']"
Availability,"## Description; First we had to constrain einsums to the openblas variant on linux to get the env to solve b/c the most recent libblas wasn't available for MKL 2023. Then that got fixed on c-f and we could use the mkl variant. But that as a constraint, of course, won't work on Mac Silicon, which doesn't have MKL. It'd be cleanest if the solver handled it, so I'm giving the no-constraint a try. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3163:142,avail,available,142,https://psicode.org,https://github.com/psi4/psi4/pull/3163,1,['avail'],['available']
Availability,"## Description; First, this PR cleans up some manual memory management in `libscf_solver`, including a memory leak of an `nao`-by-`nso` matrix created once per call to the SCF code. During the course of fixing that, I uncovered a correctness error in `libmints`: the `dgemv` function was using rows rather than cols for an argument. The original choice was correct in Fortran-style indexing but not C-style indexing and disagreed with every other `C_DGEMV` call in Psi. It didn't cause any issues because `Vector::dgemv` is almost never used in Psi. The one other time I found it used was for a Hermitian matrix, which of course won't have problems. ## Questions; - [x] Jet, please double-check my claim of a bug in `libmints`. ## Checklist; - [x] Quick tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2347:242,error,error,242,https://psicode.org,https://github.com/psi4/psi4/pull/2347,1,['error'],['error']
Availability,## Description; Fix #2330. There was a unit error when the molecule is specified in Bohr. Now the fisapt-ext-abc test case and the modified script in #2330 give the same answer. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2331:44,error,error,44,https://psicode.org,https://github.com/psi4/psi4/pull/2331,1,['error'],['error']
Availability,## Description; Fix a little error in conditional statement in driver_nbody.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/924:29,error,error,29,https://psicode.org,https://github.com/psi4/psi4/pull/924,1,['error'],['error']
Availability,"## Description; Fix a minor logic error in DLPNO-MP2 code, where Mulliken charges are used for determining local density fitting domains, also cleans up variable names (removes underscores from variables that are not instance variables). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2707:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/pull/2707,1,['error'],['error']
Availability,## Description; Fix an error message which I [invalidated](https://github.com/psi4/psi4/pull/1949) last year. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2358:23,error,error,23,https://psicode.org,https://github.com/psi4/psi4/pull/2358,1,['error'],['error']
Availability,## Description; Fix memory bug in libtrans for large cases. ## Todos; - [X] bucketSize was overflowing int storage causing psio write error. ## Status; - [X] Ready to merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2027:134,error,error,134,https://psicode.org,https://github.com/psi4/psi4/pull/2027,1,['error'],['error']
Availability,"## Description; Fix the mismatch issue on Github (#2258) and on the forum [http://forum.psicode.org/t/slight-mismatching-of-casscf-between-total-mcscf-energy-and-mcscf-root-0-energy/1693/4](http://forum.psicode.org/t/slight-mismatching-of-casscf-between-total-mcscf-energy-and-mcscf-root-0-energy/1693/4).; A more efficient way to obtain the CI coefficients after a redundant orbital rotation would be a direct transformation without solving the CI again, see [https://doi.org/10.1063/1.479573](https://doi.org/10.1063/1.479573). There might be two related issue:; - `H0block_` in DETCI keeps filling up during the MCSCF macro iteration. This will lead to repeated entries during the MCSCF iterations and sometimes lead to uncertain numerical behavior.; - The `""DFILE""` CI guess for the CI after orbital canonicalization is directly related to this issue. Using this guess leads to very slow convergence for the CI. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2259:366,redundant,redundant,366,https://psicode.org,https://github.com/psi4/psi4/pull/2259,1,['redundant'],['redundant']
Availability,## Description; Fixed a few lgtm errors. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1568:33,error,errors,33,https://psicode.org,https://github.com/psi4/psi4/pull/1568,1,['error'],['errors']
Availability,"## Description; Fixes #1288. The trouble was that Bozkaya's code used libtrans to transform integrals, and those were written to disk in their antisymmetrized, redundancy-free form, as libtrans does. The DCT code gets different integrals from libtrans but then sorts those to get the same blocks as Bozkaya wrote earlier in the redundant form. Because the DCT-sorted integral block had antisymmetry redundancies, it was larger than the libtrans block that did not have those redundancies. Fixed by changing the code to use a block without those redundancies. I imagine this is of interest to @amjames and @ssh2. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fixes 1288. ## Checklist; - [x] DCFT tests run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1336:328,redundant,redundant,328,https://psicode.org,https://github.com/psi4/psi4/pull/1336,1,['redundant'],['redundant']
Availability,"## Description; Fixes #1290 by wrapping calls to deprecated (and removed in Netlib's LAPACK 3.8.0) with appropriate replacements. **UPDATE**; I have added a `PSI_DEPRECATED` macro in `pragma.h` to be used to deprecate functions, classes, variables. It will emit a warning at compile-time. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Added a `PSI_DEPRECATED` macro; - [x] Wrap call to `DGEGS` with `DGGES`. Deprecate `C_DGEGS`.; - [x] Wrap call to `DTZRQF` with `DTZRZF`. Deprecate `C_DTZRQF`.; - [x] Wrap call to `DGEGV` with `DGGEV`. Deprecate `C_DGEGV`; - [x] Wrap call to `DGELSX` with `DGELSY`. Deprecate `C_DGELSX`; - [x] Wrap call to `DGEQPF` with `DGEQP3`. Deprecate `C_DGEQPF`; - [x] Check whether `DGGSVD3` and `DGGSVP3` are available in `tgt::lapack`. Fence off their use accordingly based on the `LAPACK_HAS_DGGSVD3` and `LAPACK_HAS_DGGSVP3` preprocessor variables, respectively. ; - [x] Wrap call to `DGGSVD` with `DGGSVD3`, if the latter is available. Deprecate `C_DGGSVD`.; - [x] Wrap call to `DGGSVP` with `DGGSVP3`, if the latter is available. Deprecate `C_DGGSVP`. ## Checklist; None of these subroutines were used in Psi4, so I only ran smoketests locally.; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge **SQUASH**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1314:788,avail,available,788,https://psicode.org,https://github.com/psi4/psi4/pull/1314,3,['avail'],['available']
Availability,"## Description; Fixes #1353 by raising an error that DF was never implemented with the QC algorithm in `dcft`. Per discussions with @ssh2, I also added a message that the QC algorithm employs the hessian for DC-06, as the others haven't been implemented yet. ## Checklist; - [x] `ctest -R dcft` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1518:42,error,error,42,https://psicode.org,https://github.com/psi4/psi4/pull/1518,1,['error'],['error']
Availability,"## Description; Fixes #1370 and cleans up some code relating to orbital occupations. `scf_iterator.py` is yapf-ified, the occupation printing code is now Py-side, and two variables specifying the same thing (`nirreps` and `nirrep_`) in the HF initialization have been condensed into a single variable. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] An error message is now raised when the electron count from DOCC and SOCC is inconsistent with the molecule's electron count. ## Checklist; - [x] `scf` and `findif` tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1637:403,error,error,403,https://psicode.org,https://github.com/psi4/psi4/pull/1637,1,['error'],['error']
Availability,## Description; Fixes a PCM test failure when running `psi4 --test`. The bug was pointed out by @loriab in #697 . Closes #697. ## Questions; - [x] Should I also modify `tests/pytest/test_addons.py` to mirror the contents of `pcmsolver/scf/input.dat` so that it doesn't rely on `P::e.globals`? Both methods to get `PCM POLARIZATION ENERGY` are now tested. See discussion in #697 . ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/701:33,failure,failure,33,https://psicode.org,https://github.com/psi4/psi4/pull/701,1,['failure'],['failure']
Availability,"## Description; Fixes a bug that occurs when one runs `psi4 --qcschema` and requests that the wavefunction is returned. . Before the orbitals / fock matrix / etc. are returned, all AO-indexed tensors are sorted according to CCA ordering: `Ca` and `Cb` are dimension [AO x MO], so their rows are sorted. `Fa`, `Fb`, `Da`, and `Db` are all dimension [AO x AO], so they are sorted by both row and column. `epsilon_a` and `epsilon_b` are not AO-indexed, so they shouldn't be sorted at all. As an example, the following HF calculation has fewer MOs than AOs because of linear dependencies, and Psi4 will throw an error when `epsilon_a` is treated as if it were of length AO:; ```; import psi4. ret = psi4.schema_wrapper.run_qcschema({; ""molecule"": {; ""geometry"": [; 0.0, 0.0, -0.1294769411935893,; 0.0, -1.494187339479985, 1.0274465079245698,; 0.0, 1.494187339479985, 1.0274465079245698; ], ; ""symbols"": [""O"", ""H"", ""H""],; }, ; ""driver"": ""energy"",; ""model"": {; ""method"": ""hf"",; ""basis"": ""d-aug-cc-pvqz"" # larger basis -> more lin deps; }, ; ""keywords"": {; ""scf_type"": ""df"",; ""s_tolerance"" : 1e-4, # loosen lin dep cutoff; }, ; ""protocols"": {; ""wavefunction"" : ""orbitals_and_eigenvalues"",; } ; ; }); print(ret.error); ```. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2112:608,error,error,608,https://psicode.org,https://github.com/psi4/psi4/pull/2112,2,['error'],['error']
Availability,## Description; Fixes an error in `detci` printing. This one is so obscure that it can easily come in for 1.5. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2245:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/pull/2245,1,['error'],['error']
Availability,## Description; Fixes an error involving a FNO-(T) delta correction for CBS as in `energy('fno-ccsd/cc-pVDZ+D:fno-ccsd(t)/cc-pVDZ'`. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1377:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/pull/1377,1,['error'],['error']
Availability,"## Description; Fixes an issues where VV10 occasionally seg faults due to improperly sized temporary arrays. Also, spot the error of why the Naive grid blocker has been seg faulting for years in [#9575ede](https://github.com/dgasmith/psi4/commit/9575ede082c5287be1c176a13299829317b3b719). Highly recommend we stop using raw pointers and C functions. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/832:60,fault,faults,60,https://psicode.org,https://github.com/psi4/psi4/pull/832,3,"['error', 'fault']","['error', 'faulting', 'faults']"
Availability,## Description; Fixes bug reported [here](http://forum.psicode.org/t/fixed-dihedral-optimization-error/323). I was sloppy and apparently no one had tried a 0 degree fixed angle before. * **User-Facing for Release Notes**; - [ ] Fixes bug preventing fixed (target) values of exactly zero. ## Status; Passed HOOH at 0 degrees. Still need to run other psi standard tests. ; - [ ],MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/535:97,error,error,97,https://psicode.org,https://github.com/psi4/psi4/pull/535,1,['error'],['error']
Availability,"## Description; Fixes issue #1093, where the use of density fitting caused a crash when computing frequencies. As for why these fixes are necessary:. Previously, the clone function would have separate memory addresses for elements of the two lists, which would be fixed by update_geometry assuming that coordinate reinterpretation was allowed. This is precisely what the driver does not allow when getting a findif hessian. The basis set setting code assumed that the memory addresses were the same. This assumption failing led to the originally reported error with setting basis sets. As this seems a rather sane assumption to me, it is Now enforced. This uncovered a second error when ZMAT coordinates were used: energies at displacements would be off by ~4 hartrees. When the molecule is cloned in the process of getting a c1 wavefunction, I found that the coordinates of the cloned molecules differed from those of the original molecule, right before the basis sets were set. Telling the basis sets that the atoms are not what they actually are seems like the kind of thing that would lead to garbage energies, though I didn't get a detailed mechanism for this. To get the geometries consistent, I had to change the atom cloning procedure. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Molecule clone now guarantees that each elements of the atom_ list is identical to some element of the full_atom_ list.; - [x] Atom clone now guarantees that ZMATs with computed coordinates carry the computed coordinates over to the clone.; * **User-Facing for Release Notes**; - [x] Fixed a bug where using density fitting for a frequency computation would cause an error unless the symmetry was explicitly set to c1. ## Questions; - [x] Symmetry is used for the purposes of generating displacements, but not for labeling normal modes. Even if we can't take advantage of symmetry for the energetics, we should be able to use symmetry for dis",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1108:555,error,error,555,https://psicode.org,https://github.com/psi4/psi4/pull/1108,2,['error'],['error']
Availability,"## Description; Fixes many compiler warnings by no longer passing redundant arguments to Matrix constructors. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixes 83 compiler warnings, 81 of which were coming from `dct`. ## Checklist; - [x] quick tests and dct tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3175:66,redundant,redundant,66,https://psicode.org,https://github.com/psi4/psi4/pull/3175,1,['redundant'],['redundant']
Availability,"## Description; Fixes the ""decimal point of death for Zn"" BS radius that leads to likely wrong DFT results (and bad SCF convergence).; Relevant for MBIS PR ( #1961) test systems, where the error became apparent. ZnO molecule with PBE0/def2-SVP and 434 spherical grid points:; | radial points | old N(electrons) | old E | new N(electrons) | new E |; |---------|--------------------|---------------------|--------------------|---------------------|; | 75 | 42.38542254742733 | -1867.6992099879865 | 37.999997369772665 | -1853.8406995133948 |; | 99 | 35.70883041483774 | -1843.0139920380993 | 37.99999898528541 | -1853.8406965374315 |; | 200 | 37.996233783694734 | -1853.8819221398608 | 37.99999900043764 | -1853.8406976562953 |. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] fixes Zn radius (2551 -> 2.551) !!. ## Checklist; - [x] manual Zn tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2000:189,error,error,189,https://psicode.org,https://github.com/psi4/psi4/pull/2000,1,['error'],['error']
Availability,"## Description; Fixes up the OpenMP problems. This still needs some tidying, but you can start to take a look. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Mostly this polishes the new OpenMP/Math interface/detection by expanding it to C/CXX/Fortran (thanks, v2rdm, for playing your persistent role of complicating things) and making sure vars are propagated among the externalprojects. Key cmake option is `OpenMP_LIBRARY_DIRS` which is a `;`-sep PATH-like var to search for omp libs if not naturally found. closes #1041 ; - [x] fix a few DISK_DF in driver and add some long-awaited (really, look at the milestone history for that ticket) freq docs in #350 ; - [x] fatal_error's ERD; - [x] bump various upstream/downstream; - [x] get ambit back (can't readily test it except by building plugin). ## Questions; - [x] Roberto and Radovan should look over the CMake. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1053:783,down,downstream,783,https://psicode.org,https://github.com/psi4/psi4/pull/1053,1,['down'],['downstream']
Availability,"## Description; For large systems it's often sensible to freeze HF orbitals, rather than dumping a very large FCIDUMP file, only to be slowly read in again and frozen in the downstream program. However, I noticed that the `fcidump` functionality isn't handling the frozen keywords in the expected way (the MO slice goes from `frzcpi` to `active_mopi`, when it should obviously go to `frzcpi+active_mopi`). I've also added a test in `tests/fcidump/input.dat` to check this. The added test would fail on the current master. Additionally, for some reason the patch in #2277 stopped working, and in the current master, the 1/0 e integrals are again 1 space wider than the 2e integrals. This patch also fixes it. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2545:174,down,downstream,174,https://psicode.org,https://github.com/psi4/psi4/pull/2545,1,['down'],['downstream']
Availability,## Description; Fractional SAD now honors the atomic ground spin state. A guess with spin-restricted occupations is also available. The fractional code now supports all elements up to Og. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1452:121,avail,available,121,https://psicode.org,https://github.com/psi4/psi4/pull/1452,1,['avail'],['available']
Availability,"## Description; Frozen Natural Orbitals were implemented for DF-CCSD and DF-CCSD(T) energies. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] FNOs are implemented for MP2.5, MP3, LCCD, CCD, CCSD, CCSD(T), and CCSD(AT).; - [] Both DF and CD options are available (only for RHF ref for now).; - [] The required changes were made in proc.py and proc_table.py. ; - [] Relevant doc files are revised.; * **User-Facing for Release Notes**; - [ ] Feature2. ## Questions; - [ ] Question1. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/824:319,avail,available,319,https://psicode.org,https://github.com/psi4/psi4/pull/824,1,['avail'],['available']
Availability,"## Description; Get Ambit back. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] This includes some changes I salvaged from the old clean-python branch.; - [x] Ambit builds with `ENABLE_ambit` as directed from the `external/upstream/ambit/CM`.; - [x] Ambit _does not_ link into Psi4, as Psi4 doesn't use it. So it's more like Psi4's build system carries it along.; - [x] The ambit plugin template _is_ in working build order (if you check out the plugin manually; the skeleton plugins are _not_ in working order). It detects the ambit package and links it in. It _doesn't_ however run. See error below that I bet @jturney can patch up in no time.; - [x] This is associated with branch `cmakelab2` in the main Jet ambit repo. If you haven't already hunted it down, below is the way to work on psi4 repo and ambit repo locally simultaneously. ```; #GIT_REPOSITORY https://github.com/jturney/ambit; #GIT_TAG cmakelab2; DOWNLOAD_COMMAND """"; SOURCE_DIR ""/path/to/ambit-directclone""; ```. * **User-Facing for Release Notes**. ## Questions; - [x] This is not ambit in full working order. This is ambit reintegrated to the point that ambit people can patch it up a bit and return it to full working order. ; - [x] @jturney, I didn't renovate the ambit CMake like on some other external projects. If you've a mind to do so, CheMPS2 is quite similar to Ambit in build artifacts and [my CheMPS2 branch config6](https://github.com/loriab/CheMPS2/tree/config6) is current state of the art. ```; Attention! This SCF may be density-fitted.; Traceback (most recent call last):; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/lib//psi4/driver/driver.py"", li",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/593:656,error,error,656,https://psicode.org,https://github.com/psi4/psi4/pull/593,2,"['down', 'error']","['down', 'error']"
Availability,"## Description; Honestly, this started as just updating pybind11 to detect via config. It got out of hand, but to good results. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `exception.message` --> `str(exception)` since former sometimes raises an error in the course of handling another.; - [x] fix python/json testing when PYMOD_INSTALL_LIBDIR is non-default.; - [x] export psi4::core target. use it in plugin. much simplify the psi4Config. tidy up the share installs.; - [x] flatten install dir structure. no more `external/`; - [x] shift importing of official plugins. rename psi4 --plugin* options. add cmake -C line. update CM templates.; - [x] switch over Py detection to PythonLibsNew. Beautify components printing. ; - [x] Move threads detection to target.; - [x] start testing the plugin templates again; - [x] standardize `Psi4Macros` --> `psi4OptionsTools`.; - [x] Correct CXX comp names in autocmake_static_lib (@robertodr, I copied this from you, so you may have it wrong, too). Check enabled langs properly rather than compilers defined so OptionsTools usable to other projects with diff enabled langs.; - [x] switch pybind11 to upstream source. better handle c++ std wrt pybind. `PSI4_CXX_STANDARD` --> `psi4_CXX_STANDARD`.; - [x] compile test of gcc version able to account for -gcc-name/-gxx-name (@bennybp, here's the code for what we talked about once in `custom_cxxstandard.cmake`); - [x] convert restrict test to write its own file.; - [x] kill off LAB and @jturney config files. replace with `cmake -C psi4PluginCache.cmake` suited config file.; - [x] `psi4pasture` --> `pasture`.; - [x] always whole-archive dpd and qt; - [x] `external` --> `external/upstream`, `internals` --> ``external/downstream`; - [x] remove old Find*cmake files. * **User-Facing for Release Notes**; - [x] We changed our python detection module to the one used by NumPy. Also changed so that not actually using libpython anywhere.; - ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/554:317,error,error,317,https://psicode.org,https://github.com/psi4/psi4/pull/554,1,['error'],['error']
Availability,## Description; Humor the Sphinx by specifying _exactly_ what error is raised by a function that was promoted to a Wavefunction method in the A/EDIIS PR. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2436:62,error,error,62,https://psicode.org,https://github.com/psi4/psi4/pull/2436,1,['error'],['error']
Availability,## Description; I forgot the `threading/CMakeLists.txt`. Now included. Error found by @schiebermc. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/620:71,Error,Error,71,https://psicode.org,https://github.com/psi4/psi4/pull/620,1,['Error'],['Error']
Availability,"## Description; I hit a system that was raising [putenv and setenv not avail](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/process.cc#L136). Rather than solve it, decided (with support) to clean environment variables out of `P::e`. Only active uses were PSI_SCRATCH and PSIDATADIR. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Replaced all the PSI_SCRATCH with calls directly to psio.get_default_path(). Also cleared that fn out so it truly defaults to `/tmp/`, not TMP, TEMP, TMPDIR, then /tmp/.; - [x] Once all the parsing's py-side might be able to drop PSIDATADIR entirely. But for now, moved it to its own slot as `P::e.[gs]et_datadir()`; - [x] Can't tell if you're dealing with Clang or AppleClang by `#defines`, so lowered cxxstandard cutoff to permit Intel + !AppleClang to pass.; - [x] `FindOpenMP.cmake` attaches a lib to try_run that isn't needed just to extract versions. Shift OMP detection so cxxstandard doesn't complain about unfindable lib; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/826:71,avail,avail,71,https://psicode.org,https://github.com/psi4/psi4/pull/826,1,['avail'],['avail']
Availability,"## Description; I need to give `psimrcc` a wavefunction for the upcoming `libtrans` refactor. Step one is to take the existing `compute_energy`-like functions and make them conform to the normal `Wavefunction::compute_energy` API. No arguments. Returns a double. A follow-up PR will be needed to actually give `psimrcc` a wavefunction. I'm hopeful this will not be another long series like the `occ` one. I don't care whether this is in 1.4 or not. Pinging @fevangelista and @andysim, the two people who have some chance of remembering how this code works. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Conform `psimrcc`'s myriad `Wavefunction::compute_energy`-like functions to the `Wavefunction` interface, as prep for the next PR.; - [x] Removed unpublished ""perturbative CBS"" capabilities from `psimrcc` and adds appropriate warnings. ## Questions; - [x] @fevangelista, can you explain what the ""perturbative CBS"" is? Those should be added to the current energy somehow, but I can't tell which of the three flavors to add, or even what this is. ## Checklist; - [x] `ctest -R psimrcc` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1854:449,Ping,Pinging,449,https://psicode.org,https://github.com/psi4/psi4/pull/1854,1,['Ping'],['Pinging']
Availability,"## Description; I tracked down a seg fault during a largish cc2 calculation to an integer overflow in the value of `size` in DPD::buf4_scmcopy(). I think it was triggered because I allocated a large amount of RAM so a huge chunk of data was to be copied in one go rather than in bits. In my case,; `size = rowtot*coltot = 47252*47252 = -2062215792`; Funnily enough, memcpy wasn't very happy being called with a negative size to copy!. It's a simple case of `int*int` being larger than an int!. Changing `size` to a `long int` and adding some casts matches other sections of the file (although perhaps replacing them all with `size_t` might be better?). ## Questions; This fix got my calculation past the point where it caused the seg fault (although it's still running: it might take a few days!). This bug probably only got triggered by large jobs with a lot of RAM so the in-core copy was performed: there could be similar overflows to track down (similar to that [recently found in the SAPT code](http://forum.psicode.org/t/sapt2-calculation-segmentation-fault-during-exch12-computation/415/6)). I guess a safer option would be test the values for overflow (I've not thought how it behaves 32 vs 64 bit!). ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/685:26,down,down,26,https://psicode.org,https://github.com/psi4/psi4/pull/685,5,"['down', 'fault']","['down', 'fault', 'fault-during-']"
Availability,## Description; I was getting an error of off one grid point count on local box for 1.e-16 tolerance. So relaxed the count. ## Questions; - [ ] Is this a good way to handle this?. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1668:33,error,error,33,https://psicode.org,https://github.com/psi4/psi4/pull/1668,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"## Description; Implements a basic . ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ *] Adds a smart solver class that can easily share data with a wfn object during SCF iterations. ; - [ *] Provides a platform for quickly adding new smart solving capabilities.; - [ *] With a metric for detecting oscillation, a dynamic damping function can be turned on to limit changes in Drms to a target value. * **User-Facing for Release Notes**; - [ *] With SMART_SCF set to `true`, SOSCF is automatically turned on when trailing convergence is detected, the initial oscillations in SAD, GWH, and CORE guess are damped at 70%. ## Questions; - [ *] What can be changed about the structure of the smart_solver class for ease of readability and use?; - [ *] This code leaves out 'macroiterations', i.e. restarting the SCF upon failure with updated initial conditions and options. Do we want this functionality in this PR, or another?; ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ *] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1134:879,failure,failure,879,https://psicode.org,https://github.com/psi4/psi4/pull/1134,1,['failure'],['failure']
Availability,"## Description; Implements the linear exchange matrix build (LinK) algorithm for Direct SCF.; Reference: C. Ochsenfeld, C.A. White, and M. Head-Gordon, J. Chem. Phys. 109, 1663 (1998); (https://aip.scitation.org/doi/10.1063/1.476741). NOTE: The J build already has density screening implemented (see #2155). ![wc_linK_errors_updated_06_04_21](https://user-images.githubusercontent.com/60559795/120875167-7c793e00-c578-11eb-83d2-b2b2e197d788.jpg); ![wc_linK_timings_hornet_06_04_21](https://user-images.githubusercontent.com/60559795/120875169-7d11d480-c578-11eb-8315-642e4ee0510c.jpg). ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Builds the K matrix of large molecular systems in O(N) time; - [x] Errors are minimal when compared to approximations like Density Fitting. ## Questions; - [ ] This code is currently in DirectJK, should I make a new JK module for fast methods like LinK, since a fast K algorithm would be really useful for density fitting?. ## Checklist; - [x] Tested accuracy and speed of method on a 3D system of growing water clusters. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2187:760,Error,Errors,760,https://psicode.org,https://github.com/psi4/psi4/pull/2187,1,['Error'],['Errors']
Availability,"## Description; In C++, the destructor for a templated class should not include the template parameter in the destructor's name. This is not a problem for C++17 and earlier standards, but with C++20 compilers it raises an error. This PR fixes one instance of this problem in psi4. ## User API & Changelog headlines; - [x] API should now be compatible with both C++17 and C++20. ## Dev notes & details; - [x] Change one line. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3061:222,error,error,222,https://psicode.org,https://github.com/psi4/psi4/pull/3061,1,['error'],['error']
Availability,"## Description; In accordance with https://github.com/MolSSI/QCElemental/pull/275, return certain files in qcschema to be pruned down by user protocols. Bump qcel to 0.24.0 (and qcng to 0.23.0 once it's minted). Note that this can't handle the wfn file b/c binary. And it can't handle `timer.dat` b/c there's no fixed place it lands (I can get it to save calling schema_wrapper directly but not for QCEngine calling psi4). ## Checklist; - [x] Tests added for any new features -- tested at qcengine test_canonical_fields; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2361:129,down,down,129,https://psicode.org,https://github.com/psi4/psi4/pull/2361,1,['down'],['down']
Availability,"## Description; In preparation for allowing `detci` to support symmetry broken displacements for frequencies, this PR streamlines the active space setting logic used by `detci`. Nothing should have changed except function signatures and code clarity. Obligatory ping to @fevangelista, since this touches on active space specifications. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Streamline `ras_set`; - [x] Adds `Dimension::copy` @jturney ; - [x] Fewer raw pointers, more `Dimension` . ## Checklist; - [x] `ctest -L ci` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3208:262,ping,ping,262,https://psicode.org,https://github.com/psi4/psi4/pull/3208,1,['ping'],['ping']
Availability,"## Description; Includes Joe's psi4/psi4#772, since the original point of this was to do properly the hacks needed to get the normco into the Wfn. This includes py-side vibrational analysis, thermo, and small-system reordering. Also fixes Hessian symmetrization (py-side; haven't moved it back c-side). ~This isn't a final product. I only re-hooked-back-up one conventional freq test case. There's plenty of organizational, naming, storage (want both freq and normco in Wfn? and if so, only vibs, not RT? and how ID imag freq if we're float and don't want `-`?) choices yet. What this does have is a substantial py test case with 6 Hessian readouts from Cfour and 6 matching p4 findif-by-grad vibrational analyses to help debug some analytic Hessian errors at wwdc.~. ~And watch out – any change to `findif.h` recompiles most of psi.~. In the end, this added a py-side vib analysis, identified two Hessian bugs, upgraded the two Molecule classes, added Molecule serialization everywhere except initial string input parsing, added alignment and BFS tools, and lots more – see below. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - This PR includes Joe's psi4/psi4#772; - adds an optional history object to the optimize output. This object contains energies, gradients, and coordinates for the molecule at each step of the optimization. Hooked up to MDT.; - ~adds normalmode displacement export to the api and optional saving of normal modes to the wavefunction.~; - Adds handling of several one-electron properties to the API and saves them to the wavefunction.; - `qcdb.Molecule`; - Fix some bugs, including C3/D3 symmetry detection w/o verbose and printing for Q-Chem when dummy (or ghost?, don't remember which) present; - Simplify rotational_constants, add rotational_symmetry_number, add axis_representation (probably should double-check this with a spectroscopy book); - Optimize instantiation (really, update_geometry) of large syst",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:750,error,errors,750,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['error'],['errors']
Availability,"## Description; Issue #846 has been fixed, so a contraction set where all primitives have a coefficient of 0 will remain untouched. While I was poking around the file, I decided to clean up some other things. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [X] 0 coefficient primitives will no longer be normalized. This should prove useful to planned ECP changes.; - [X] Miscellaneous code cleanup. ## Questions; - [ ] ECP team, I assume you're happy with this? ; - [ ] In the zero coefficient case, do we want to explicitly check this is an ECP by checking radial powers? If so, what would we do otherwise, raise some error?; - [ ] I also assume that I'm within the Psi4 coding style here?. ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/849:683,error,error,683,https://psicode.org,https://github.com/psi4/psi4/pull/849,1,['error'],['error']
Availability,"## Description; It looks like errors like #2080 happen when `throw` called from within threaded code in C++. From non-threaded code, Pybind11 catches them and turns them into nicely behaved `RuntimeError`s but from threaded, it just segfaults. This PR averts a few, but there could be far more throughout codebase. closes #2080 . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] cleans up namespace markings in libfock. also adds `namespace psi` into a formerly anonymous namespace; - [x] pre-clears SG0 and SG1 atoms before entering the threaded grid build proper. the non-SG0 and SG1 block had some throws, too, but I couldn't trigger them. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2082:30,error,errors,30,https://psicode.org,https://github.com/psi4/psi4/pull/2082,1,['error'],['errors']
Availability,"## Description; Last summer, I discovered that the energy _increased_ along the IRC for my complex formation coordinate. I eventually tracked this down to a bug where the molecule did not displace the initial geometry correctly, which this PR fixes. Since that time, those of us at UGA have found this fix essential to follow modes <200i. I discuss this in more detail [here](https://github.com/psi-rking/optking/issues/19). I updated a test to reflect the fact that the IRC can go a bit further when it displaces correctly. I didn't bother updating the reference files, as I expect it'll be invalidated soon anyways. The whole reason I'm submitting this PR now is to eliminate this bug from consideration when I send @psi-rking the _latest_ IRC bug I found. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix IRCs. ## Checklist; - [x] All IRC tests run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1663:147,down,down,147,https://psicode.org,https://github.com/psi4/psi4/pull/1663,1,['down'],['down']
Availability,"## Description; Longawaited maintenance on physconst and duplicate naming. ## Todos; * **Developer Interest**; - [x] There was dir driver/procedures and dict procedures['energy']... Renamed the former to procrouting to avoid future trouble. Note that all plugins will need [this line](https://github.com/edeprince3/v2rdm_casscf/blob/master/pymodule.py#L28) fixed by `procedures` --> `procrouting`.; - [x] Move i/fsapt test cases higher in list, so they can backfill.; * **User-Facing for Release Notes**; - [x] Physical constants in PsiAPI are now `psi4.constants.amu2kg` instead of `psi4.p4const.psi_amu2kg`. In Psithon, still `psi_amu2kg`. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/632:28,mainten,maintenance,28,https://psicode.org,https://github.com/psi4/psi4/pull/632,1,['mainten'],['maintenance']
Availability,"## Description; Lots o' stuff. **I recommend reviewing commit-by-commit.**. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fix ""write() argument must be str, not bytes"" error that occurs in new NumPy; - [x] QCDB: migrate Hungarian alg from hungarian module to hacked scipy. now ""align"" tests should pass w/o incident or add'l software; - [x] Mol: migrate Molecule.to_string() back from QCDB. not used, but may as well be handy.; - [x] QCDB: squash some printing. migrate some changes back from QCDB.; - [x] AddOns: Don't let scipy missing (for snsmp2) pass silently.; - Discovered faulty logic where snsmp2 will rebuild more than necessary b/c detection involves ""import psi4"" which probably doesn't exist at the start of a psi4 build. not fixed.; - [x] AddOns: Bump pybind11 to 2.2.3; - [x] AddOns: renegotiate the psi vs. libefp options compromise. We generally try to follow addon's naming conventions unless they directly contradict our own. For SAPT we do have our own, but when libefp was implemented, we used our sapt for two (elst & exch) and let libefp win on (pol). I've since put a translation of input and printing system into pylibefp. that isn't active here, but thought may as well change keywords now.; ```; 'psi': {; 'elec': 'elst',; 'pol': 'ind',; 'xr': 'exch',; 'elec_damp': 'elst_damping',; 'pol_damp': 'ind_damping',; 'disp_damp': 'disp_damping',; 'pol_driver': 'ind_driver',; 'ai_elec': 'ai_elst',; 'ai_pol': 'ai_ind',; 'ai_xr': 'ai_exch',; ```; - [x] Add warnings accumulated so far -- ECP, DFT-SAPT, DFT; - [x] set up plugins via native conda gxx; - [x] AddOns: bump libefp to 1.5.0, chemps2 to 1.8.7; - [x] returns align tests to quicktest; - [x] adds `psi4 --test` to travis to test psiapi and addons coverage; - [x] switches MINIX to spherical as advocated [here](https://github.com/psi4/psi4/pull/961#issuecomment-385644036). ## Questions; - [ ] I took the warn DFT functionals from tests and notes, not o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/993:237,error,error,237,https://psicode.org,https://github.com/psi4/psi4/pull/993,2,"['error', 'fault']","['error', 'faulty']"
Availability,"## Description; MKL 2020.1 often selects a different basis fn set than 2019.4 or 2020.0, so answers often differ by 1.14e-8. This relaxes tolerance to 2.e-8. Alternative is to add `mkl!=2020.1` to `conda create` line, but this would be disruptive to conda packaging. * **Note** A definitive test of above statement that returns to 1.e-8 but bans 2020.1 is running at https://dev.azure.com/psi4/psi4/_build/results?buildId=1969&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a , but I'll get a head start and submit this PR. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1896:138,toler,tolerance,138,https://psicode.org,https://github.com/psi4/psi4/pull/1896,1,['toler'],['tolerance']
Availability,"## Description; Make `back_transform` consistent across the various signatures and better behaved for more ""exotic"" cases. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] Improved `Matrix::back_transform`'s ability to handle edge cases. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] All `back_transform` signatures now trickle down to a single function; - [x] All `back_transform` signatures resize the target matrix if necessary (only one did this previously, DGEMM error otherwise); - [x] All `back_transform` signatures handle symmetry correctly (at least some would error previously). ## Checklist; - [x] `back_transform` passing tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2745:645,down,down,645,https://psicode.org,https://github.com/psi4/psi4/pull/2745,3,"['down', 'error']","['down', 'error']"
Availability,"## Description; Make `psi4.test()` safe to run. And beer safe to grep. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] The psi4 vs numpy threading test is more likely to work if run first, so moved it there. But since that's still no guarantee, made it an expected failure, so it doesn't count against pytest either way.; - [x] with `ENABLE_GENERIC`, blas/lapack detection looks for dynamic libm.; * **User-Facing for Release Notes**; - [x] Geometry optimizations that exceed maxiter no longer just print a warning and exit successfully (beer). Now they exit unsuccesfully (coffee) and raise a `psi4.ConvergenceError`. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/638:332,failure,failure,332,https://psicode.org,https://github.com/psi4/psi4/pull/638,1,['failure'],['failure']
Availability,"## Description; Make `transform` consistent across the various signatures and better behaved for more ""exotic"" cases. Sister PR to #2745. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] Improved `Matrix::transform`'s ability to handle edge cases. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] All `transform` signatures now trickle down to a single function; - [x] All `transform` signatures resize the target matrix if necessary (only one did this previously, DGEMM error otherwise); - [x] All `transform` signatures handle symmetry correctly (at least some would error previously). ## Checklist; - [x] `transform` passing tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2748:650,down,down,650,https://psicode.org,https://github.com/psi4/psi4/pull/2748,3,"['down', 'error']","['down', 'error']"
Availability,"## Description; Make psi safe for py38. The basic conda pkg does build, but I haven't done full stack yet. For practical reasons, no use turning on a CI lane for 38 until conda pkg available. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] req'd mods for python 3.8; - [x] avoid ""DeprecationWarning: In future, it will be an error for 'np.bool_' scalars to be interpreted as an index"" in `Molecule.from_dict`; - [x] more killing off travis. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1776:181,avail,available,181,https://psicode.org,https://github.com/psi4/psi4/pull/1776,2,"['avail', 'error']","['available', 'error']"
Availability,"## Description; Make tests run reliably and a bit cleaner. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] @JonathonMisiewicz, @amjames so the continuation of the `cc3` saga is that it continued flaky, usually running clean but sometimes throwing PSIO errors at first findif freq, sometimes throwing PSIO errors at second findif freq. Finally figured out that the G0 calc was leaving scratch files before findif launched and findif was only cleaning _after_ each displacement. Previously this was nearly always safe b/c G0 had full symmetry and first findif displacement was totally symmetric (bet we were never testing partial freq on a susceptible mol). But now findif displacements appear in random order, and if the first one up has a lower irrep, it doesn't like those totally symmetric leftovers, so PSIO error. There's any number of places one could put the `clean` -- I chose least obtrusive.; - [x] `gcp` calcs weren't deleting their directories in scratch, so made them. ## Checklist; - [ ] ~Tests added for any new features~; - [x] full tests less bench run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1326:31,reliab,reliably,31,https://psicode.org,https://github.com/psi4/psi4/pull/1326,4,"['error', 'reliab']","['error', 'errors', 'reliably']"
Availability,"## Description; Make v2rdm_casscf work with psi in the v2.2.2 pybind11 era. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] ~half~ done adding `PSI_API` to psi where v2rdm wants it; - [x] corresponding v2rdm repo change is https://github.com/loriab/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff. ## Questions; - [x] @jturney, @edeprince3, I intended to finish this, but I'm confused by `C_DDOT`. `core.so` has the symbol that `v2rdm_casscf.so` wants, but the test file complains about DDOT anyway. Maybe there's some more complicated place that `PSI_API` needs to be inserted that I'm not seeing from simple pattern following. So consider this work a start and a puzzle.; ```; >>> ../hrw-qcdb/objdir/stage/usr/local/psi4/bin/psi4 tests/v2rdm3/input.dat ; H3 / cc-pvdz / D+D3 vs full CI, scf_type = PK; /home/psilocaluser/miniconda3/envs/idp35p4/bin/python: symbol lookup error: /home/psilocaluser/gits/hrw-qcdb/objdir/stage/usr/local/psi4/lib/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZN3psi6C_DDOTEmPdiS0_i; >>> nm v2rdm_casscf.so | grep DDOT; U _ZN3psi6C_DDOTEmPdiS0_i; >>> nm ../hrw-qcdb/objdir/stage/usr/local/psi4/lib/psi4/core.so | grep DDOT; 00000000006013c0 t _ZN3psi6C_DDOTEmPdiS0_i; 00000000017384d0 t _ZN3psi8PSI_DDOTEimSt10shared_ptrINS_6VectorEEiS2_i; ```; - [x] if https://github.com/edeprince3/v2rdm_casscf/pull/26 gets merged quickly, then I should re-point the cmake back to Eugene; - [ ] should we export _all_ lapack in https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libqt/lapack_intfc.cc ?. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/955:953,error,error,953,https://psicode.org,https://github.com/psi4/psi4/pull/955,1,['error'],['error']
Availability,"## Description; Misc. ## Todos; * **Developer Interest**; - [x] CI: Removes align tests that require hungarian package from quicktests; - [x] Allow basis set blocks to be names ""custom"", ""special"", ""general"" w/o spewing a page of errors at you.; - [x] CMake: upgrade versioner to avoid hard-coded project version. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/974:230,error,errors,230,https://psicode.org,https://github.com/psi4/psi4/pull/974,1,['error'],['errors']
Availability,"## Description; Misc. cleanup related to SCF densities. Marking function returns const, removing redundant class members, and condensing variable declarations and variable definitions. ## Checklist; - [x] Quicktests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2425:97,redundant,redundant,97,https://psicode.org,https://github.com/psi4/psi4/pull/2425,1,['redundant'],['redundant']
Availability,"## Description; Miscellaneous substantive changes short of moving vars from globals to wfn. ## Todos; - [x] for FINDIF, renamed some functions for easier comprehension (e.g., `compute_gradient_from_energy` --> `compute_gradient_from_energies`). speak up, @JonathonMisiewicz if I've misinterpreted anything (it won't count in GH's reckoning, but you're always welcome to review).; - [x] `core.get_gradient`/`core.set_gradient` aren't regularly set, even in v1.2, being used only in internal communication for OPTKING. I consider this effectively a silent deprecation in 1.2, so made that official (in case downstream using it), and renamed to `legacy_gradient` internally, until the demise of C-optking.; - [x] de-py2-adapted `psi4.driver.p4util`; - [x] fixed bug where in `driver_fn(..., kwargvar=None)`, `kwargvar` turned into `False`; - [x] deprecated many old fns in p4util -- see if you agree. Most for v1.4 but a few for v1.3.; - [x] added tolerance field to `compare_wavefunctions`; - [x] renamed and `_`-prefixed many functions in python_helpers.py so connection to demangled fn name easier to track and the `import *` doesn't contaminate namespace; - [x] for dfmp2, energy was starting the timer _after_ `scf_helper`, gradient was starting timer _before_ SCF, and properties wasn't timing at all. changed the latter two to match the first.; - [x] added `set_energy` to Wfn; - [x] `psi4 --fulltest -n NTHREAD` available to run full pytest test suite. Parallel only available if `pytest-xdist` installed (`conda install pytest-xdist`). ## Checklist; - [ ] ~Tests added for any new features~; - [x] quick tests is fine at this PR. full tests of this + other commits is fine. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1394:605,down,downstream,605,https://psicode.org,https://github.com/psi4/psi4/pull/1394,4,"['avail', 'down', 'toler']","['available', 'downstream', 'tolerance']"
Availability,"## Description; Modifies how one electron properties are computed to allow the `properties` kwarg to behave consistently with other modules. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] CCDENSITY no longer calls into OEPROPs this is now done in the python layer. ; - [x] After calling CCDENSITY the `wfn.arrays['CC ROOT {n} D{a|b}']` can be used to access the OPDM for excited states in the SO basis as in the convention for matrix quantities set on the wfn. ; * **User-Facing for Release Notes**; - [x] Excited state OPDMs are now set in the wfn.arrays, so that they can be used to compute 1e properties for all roots requested in EOM-CC* calls.; - [x] Now additional valid one electron properties can be passed as part of the `properties=[]` list. These would previously cause a validation error. Valid one electron properties are now:; - dipole *; - quadrupole *; - mulliken_charges **; - lowdin_charges; - mayer_indices; - wiberg_lowdin_indices; - no_occupations **; - [x] The previous behavior was such that requesting the properties marked with * above would lead to all * -ed properties and additional (**) properties being computed automatically. The new logic implemented in the driver still has this behavior so existing workflows do no need to change, at least for now. . ## Questions; - [x] @loriab The block of code that I removed from CCDENSITY had comments that were used to trigger documentation of some psivars. Where should these go now? . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - I ran all of the CC tests and there were no errors. The new logic changes where in the output file the 1 electron properties appear, but the perl script still finds them since they are labeled/formatted the same way. . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/995:862,error,error,862,https://psicode.org,https://github.com/psi4/psi4/pull/995,2,['error'],"['error', 'errors']"
Availability,"## Description; Modify the download location away from the (temporarily?) defunct tddft.org, back to gitlab. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1688:27,down,download,27,https://psicode.org,https://github.com/psi4/psi4/pull/1688,1,['down'],['download']
Availability,"## Description; Much misc. ## Todos; - [x] Better error msg for MathOpenMP, mostly when GCC+MKL and can't find iomp5; - [x] Fix items in p4c4 interface; - [x] ccsd(t) grad in cfour v1 (came down to an unneeded `\s*`). test-suite-wise, approx works equally well with v1 or v2; - [x] DROPMO handling; - [x] backport a lot of the parsing changes from github.com/qcdb/qcdb to here; - [x] modernize Molecult.init_with_xyz(); - [ ] @JonathonMisiewicz, if you hit can't-align errors, let me know, and I'll switch it out to new mech; - [x] I forgot to obfuscate the global variable names used in pylibefp in #953, so do that here; - [x] fix [forum 1009](http://forum.psicode.org/t/nameerror-name-wfn-is-not-defined/1009/2?u=loriab); - [x] update a bunch of docs items that had accumulated; - [x] officially make python 2.7 unacceptable to the build system. ## Checklist; - [ ] ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1122:50,error,error,50,https://psicode.org,https://github.com/psi4/psi4/pull/1122,3,"['down', 'error']","['down', 'error', 'errors']"
Availability,"## Description; New feature to compute the explicitly correlated MP2 energy. Only computes the specific case of MP2-F12/3C(FIX) which has been shown to be the most robust of all versions of MP2-F12. Includes conventional and density-fitted versions of the code and also allows choice between a in-core and disk implementation. Relies on the tensor library Einsums. Equations come from:; [Werner, Adler, and Manby](https://pubs.aip.org/aip/jcp/article/126/16/164102/905556/General-orbital-invariant-MP2-F12-theory); [Kong, Bischoff, and Valeev](https://pubs.acs.org/doi/10.1021/cr200204r); [Manby](https://pubs.aip.org/aip/jcp/article/119/9/4607/817158/Density-fitting-in-second-order-linear-r12-Moller). ### Example Input; ```; molecule {; 0 1; C 0.000000000 0.000000000 0.000000000; H 1.185992116 1.185992116 1.185992116; H 1.185992116 -1.185992116 -1.185992116; H -1.185992116 1.185992116 -1.185992116; H -1.185992116 -1.185992116 1.185992116. units bohr; symmetry c1; }. set {; BASIS cc-pvtz-f12; FREEZE_CORE true; E_CONVERGENCE 1.e-10; }. set mp2-f12 {; CABS_BASIS cc-pvtz-f12-optri; DF_BASIS_F12 aug-cc-pvtz-ri; F12_TYPE df; CABS_SINGLES true; }. energy('mp2-f12'); ```. ### Timings; Timings and maxvmem are an average over 50 runs.; Orbital basis set (OBS) is cc-pVTZ-F12 (VTZ-F12) and CABS is cc-pVTZ-F12-OPTRI. For DF, auxiliary basis set (AUX) is aug-cc-pVTZ-RI. Timings and Max RAM Usage for MP2-F12/3C(FIX):; VTZ-F12 | NOBS | NCABS | Total (s) | Total (min) | maxvmem (GB); -- | -- | -- | -- | -- | --; CH4 | 125 | 239 | 176.48 | 2.94 | 27.554; NH3 | 107 | 198 | 96.64 | 1.61 | 15.060; H2O | 89 | 157 | 53.02 | 0.88 | 7.828; HF | 71 | 116 | 17.96 | 0.30 | 4.081. Timings and Max RAM Usage for DF-MP2-F12/3C(FIX):; VTZ-F12 | NOBS | NCABS | NAUX | Total (s) | maxvmem (GB); -- | -- | -- | -- | -- | --; CH4 | 125 | 239 | 290 | 6.24 | 3.219; NH3 | 107 | 198 | 244 | 4.91 | 2.763; H2O | 89 | 157 | 198 | 2.13 | 2.282; HF | 71 | 116 | 152 | 1.18 | 2.128. ### VTune Analysis for MP2-F12/3C(FIX); ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3110:164,robust,robust,164,https://psicode.org,https://github.com/psi4/psi4/pull/3110,1,['robust'],['robust']
Availability,"## Description; No new features were added. This is a bugfix for a minor problem described in issue #1485. The MoldenWriter::write method was appending output to an existing Molden file, if present. This is not the desired behavior since the appended part is not read by post-processing tools, nor is it part of the definition of the file format. This becomes especially confusing when doing a test calculation, where one is trying to get a psi4 input file to work as intended with some trial and error. All results from previous trials are kept in the Molden file and only the first one is read by a post-processing tool, not the last one. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Truncate an existing Molden file, instead of appending. ## Questions; None. ## Checklist; - No new tests added; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1506:497,error,error,497,https://psicode.org,https://github.com/psi4/psi4/pull/1506,1,['error'],['error']
Availability,## Description; Non-urgent stuff I found this week. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Expand my collection of Windows problems and solutions after Tuesday's fun with #2624 ; - [x] Update supported Py versions in README; - [x] Fix a test that wasn't declaring its dependencies; - [x] Make non-optional the use of `git --atomic` for versions/tags/CI conda; - [x] Expand logic on whether to build conda-pkg or not to include the 1.N.x maintenance branches. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2629:505,mainten,maintenance,505,https://psicode.org,https://github.com/psi4/psi4/pull/2629,1,['mainten'],['maintenance']
Availability,## Description; NumPy linked DSYEV was not robust enough under certain conditions. Switches to Psi4 power inversion to fix this issue. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/610:43,robust,robust,43,https://psicode.org,https://github.com/psi4/psi4/pull/610,1,['robust'],['robust']
Availability,"## Description; Occasionally we had issues cropping up where users were assigning views that were not tied to the Matrix object. Consider the following:. ```; mat = Matrix(5, 5); view = mat.np; del mat; ```. Previously, `mat` and `view` lifetimes were not tied together. The NumPy array would point to deleted memory in the above example. With this PR, the object lifetime are tied together and `mat` is not actually deleted in this example (just a handle to it) so that the `view` remains valid. This also allows operations like `view = Matrix(5, 5).np` and `Cocc = wfn.Ca_subset(""AO"", ""OCC"").np` to work without issue. A small downside is that the views cannot be cached as this would lead to circular nurse/patient relationships and prevent the objects from ever being garbage collected. This makes the `.np` accessors take slightly more time (~2-5us depending on number of irreps vs 0.5us). However, unless you are looping over individual indices and setting values this really shouldn't matter and the `mat.get/mat.set` functionality can be used for this with the ~0.4us latency. There is a chance this is fixable and we can revisit if it comes an issue. I also was able to delete a great deal of rather hideous code which makes me quite happy. Special thanks to @rmcgibbo for poking me about this and helping with idea and also to the PyBind11 team for ""fixing"" this a few months ago (doh!). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Can now obtain stand-alone views with correct reference counting (`view = Matrix(5, 5).np`).; - [x] Dimension objects can now be built python-side from list `Dimension([5, 5, 5])`.; * **User-Facing for Release Notes**; - [x] The NumPy interface is now more robust. . ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/751:629,down,downside,629,https://psicode.org,https://github.com/psi4/psi4/pull/751,2,"['down', 'robust']","['downside', 'robust']"
Availability,"## Description; OpenMP detection is very finely balanced to compensate for LAPACK demands, `libgomp` self aggrandizement, and psi4's need to sanely and transparently impose the psi4-compile-omp status on any derived plugins. Unfortunately, #1348 disturbed some of that for the particular case of plugins with fewer active languages than their parent psi4. A plugin (dfmp2) wasn't inheriting openmp from psi4 and thus was giving unknown openmp pragma warnings upon compile. This wasn't getting caught on linux because I was only checking that iomp5/gomp/omp weren't mixing, not that at least one was present. By happenstance, this did trigger an error on Mac in the course of building `psi4-dev`. This seems to patch things up on Linux. Will use this branch to try out Mac again. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1520:645,error,error,645,https://psicode.org,https://github.com/psi4/psi4/pull/1520,1,['error'],['error']
Availability,"## Description; Optimizes the integral transformation step of SAPT(DFT), in which the transformed MO needs to be written to the disk. The `STORE` scheme in `src/psi4/lib3index/dfhelper.cc` has problem in writing blocks of integrals efficiently, and this PR changes it to `direct_iaQ` to optimize the writing process. Also fixed a few memory related bugs and modified a few timer tags.; The deafult scaling scheme of SAPT(DFT) exchange-dispersion energy is now changed from `DISP` to `FIXED`. It scales the uncoupled Exch-Disp2 by 0.769848. Deeper details are discussed in the paper [Y. Xie, D. G. A. Smith, and C. D. Sherrill, J. Chem. Phys. **157**, 024801 (2022)].; The SAPT(DFT) procedure is also optimized for the case that `SAPT_DFT_FUNCTIONAL = HF`, i.e. running SAPT0 with the SAPT(DFT) driver, to avoid redundant SCF calculations. ## Todos. - [ ] Optimization of disk I/O in SAPT(DFT) integral transformation; - [ ] Fixed minor memory related bugs and modified timer tags; - [ ] Switched default exch-disp scaling scheme to FIXED (default factor 0.769848); - [ ] Optimization of SAPT(HF) procedure. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481:811,redundant,redundant,811,https://psicode.org,https://github.com/psi4/psi4/pull/2481,1,['redundant'],['redundant']
Availability,"## Description; PR #2022 labeled _ground-state_ properties with the method name... even when the method name included ""EOM-"". So even though `ccsd` and `eom-ccsd` compute the same ground state dipole, they weren't given the same name. This PR fixes that. More fixes to come, but the next PR will be heftier. Obligatory @bgpeyton ping. ## Checklist; - [x] `eom` tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2533:329,ping,ping,329,https://psicode.org,https://github.com/psi4/psi4/pull/2533,1,['ping'],['ping']
Availability,"## Description; PR 1 / ? of global diagonalizer cleanup (#2642); This is a subset of #2642, and the rest of #2642 will be broken up into new PRs after this is merged. `sq_rsp.cc` contained an entire commented out diagonalizer function, and some comments related to that, from 2010. (?); Deleted. rsp.cc still used its own implementation of a diagonalizer, now it has been rewritten to use the LAPACK routine instead.; This has allowed the deletion of tred2.cc and tqli.cc. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Remove unused code from sq_rsp.cc; - [x] Rewrite rsp.cc. ## Questions; - [ ] The **only** user of rsp(...) is fine with ascending order results: https://github.com/psi4/psi4/blob/ad2063594a88fd9f60d5a122398bf2f6ae2102a9/psi4/src/psi4/detci/diag_h.cc#L245; Based on this, I have not reimplemented the old function's support for reordering the results (`matz > 1`), so this will be a change in behaviour and rsp(...) is marked as `PSI_API`. Is this objectionable? It now fails with an error message if someone tries to ask for the eigenvalues in descending order.; - [x] It is not documented if the packed lower-triangular matrix on the input is supposed to be row-major-packed or column-major-packed. Based on the call site above, I guessed it is row-major packed. Is this correct? LAPACK expects column-major-packed, so I am transforming the array to be just so.; - [ ] I _think_ I got everything right, but I am not entirely sure if the DETCI test suite is thorough enough to find out if I did not. Codecov suggests the call site is not covered (https://app.codecov.io/gh/psi4/psi4/blob/master/psi4/src/psi4/detci/diag_h.cc), but the last coverage measurement seems to have been a year ago. ## Checklist; - [x] No new features; - [x] All or relevant fraction of full tests run, see [test.log](https://github.com/psi4/psi4/files/9162565/test.log). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2637:1063,error,error,1063,https://psicode.org,https://github.com/psi4/psi4/pull/2637,1,['error'],['error']
Availability,"## Description; PSIMRCC has a wavefunction now. This is **not** the last PR in the PSIMRCC series. Another brief PR will be needed for clang format and to finish moving the responsibility of keeping track of ""free memory"" to the wavefunction. You'll notice that at present, the `free_memory_` variable isn't modified. That used to be ""done"" by myriad allocate/release statements, which were removed in #1901. This is a very long PR as it is, so I'm moving that task to a separate PR. Obligatory pings: @loriab, @fevangelista, @andysim. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] PSIMRCC has a wavefunction!. ## Checklist; - [x] Quick tests and psimrcc tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1949:495,ping,pings,495,https://psicode.org,https://github.com/psi4/psi4/pull/1949,1,['ping'],['pings']
Availability,"## Description; PSIO toclen errors are extremely cryptic, making them even more difficult to debug,; I have recently ran into another input that produces the error in #2261 so decided to try taking a look.; I have not debugged the actual issue, but made some changes to the function raising the error to hopefully make the error messages more informative. The `read`/`write`/`lseek` syscalls deposit an OS-defined error code in `errno`, which can be decoded to an OS-provided, human-readable (possibly non-English) error message. This should at least tell the person seeing it vaguely what is wrong, ie. is the disk full, does the file not exist, etc. The toclen functions have been renovated in general, `const` added where appropriate, common code factored out, etc. Error conditions now properly use `psio_error(...)` and pass the OS-provided message to it. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Error messages from `PSIO::rd_toclen` and `PSIO::wt_toclen` are now more informative; - [x] The new function `decode_errno(int)` is now available for use after system calls to decode `errno`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2700:28,error,errors,28,https://psicode.org,https://github.com/psi4/psi4/pull/2700,9,"['Error', 'avail', 'error']","['Error', 'available', 'error', 'errors']"
Availability,"## Description; Partial fix to #2634. thanks, @TiborGY, for that report. The mrcc interface beyond single-points was another casualty of distributed driver. The Allen test needs a further fix that involves moving a dictionary. In the meantime, this heals all the ctests. Update: I've got all parts fixed locally, and one of these changes is no longer necessary. I'll leave this open until the other PR available, in case someone needs a quick fix. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2638:402,avail,available,402,https://psicode.org,https://github.com/psi4/psi4/pull/2638,1,['avail'],['available']
Availability,"## Description; Per discussion on the conference call, this PR gives some error messages for cases where using a serialized wavefunction would give a segfault. 1851 is still an issue, but one that shouldn't hold up 1.4 or eat my time to straighten out `dfocc`. I'm modernizing enough modules in Psi as it is... ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Replace some segfaults from #1851 with actual error messages. ## Checklist; - [x] Tested that all four error modules used to segfault and now give an error message. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1858:74,error,error,74,https://psicode.org,https://github.com/psi4/psi4/pull/1858,4,['error'],['error']
Availability,"## Description; Prints out the MBIS valence charges. These were already being computed, just not exposed to the user. Tests were added for the new output, and all tests pass. There is no impact on runtime because it is just exposing values already being computed. Addresses https://github.com/psi4/psi4/issues/3140. ## User API & Changelog headlines; - [x] MBIS valence charges are now exposed and printed in MBIS output; - [x] The wfn array_variable `MBIS VALENCE CHARGES` is now available to be retrieved. ## Dev notes & details; - [x] Saves the MBIS valence charges to it's own little matrix; - [x] And exposes those charges on the python side as the wfn variable `MBIS VALENCE CHARGES`; - [x] Updates the relevant tests. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3226:481,avail,available,481,https://psicode.org,https://github.com/psi4/psi4/pull/3226,1,['avail'],['available']
Availability,"## Description; Provide a brief description of the PR's purpose here. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] fix ""<built-in method X of PyCapsule object at Y> returned NULL without setting an error"" (http://forum.psicode.org/t/frequency-calculations-result-in-built-in-method-x-of-pycapsule-object-at-y-returned-null-without-setting-an-error/1436) by following jcerezo's advice.; - [x] change `compare_vibinfo` to always be `atol`, not `digits`.; - [x] check DF Hessian calcs to PK refs at looser tols; - [x] test atom Hessian (analytic only; fix findif in ddd). ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1845:251,error,error,251,https://psicode.org,https://github.com/psi4/psi4/pull/1845,2,['error'],['error']
Availability,"## Description; Provides and exposes a `matrix` method to check if two matrices are the same, within a given tolerance. This may allow for some simplifying of the test infrastructure, but I don't know the test infrastructure nearly well enough to say. ## Checklist; - [x] `test_matrix.py` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2395:109,toler,tolerance,109,https://psicode.org,https://github.com/psi4/psi4/pull/2395,1,['toler'],['tolerance']
Availability,"## Description; Psi4 is currently using the RMS norm to check for wave function convergence. However, it's well known that the RMS norm isn't as robust as the absolute error in some pathological cases: even though the RMS error is small, you may still have significant gradients for a few orbitals. This PR implements the maximum absolute norm for DIIS in SCF calculations, which can be toggled by setting ```DIIS_RMS_ERROR false```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Implemented absolute error criterion for DIIS. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1460:145,robust,robust,145,https://psicode.org,https://github.com/psi4/psi4/pull/1460,4,"['error', 'robust']","['error', 'robust']"
Availability,"## Description; Rebase through of qcel v0.4.0 (not yet released). ## Todos; - [x] moved `tests/pytest` to `tests/pytests` so latter can be a module w/o confusing ""import pytest""; - [x] migrated to use which, which_import, parse_version from qcl; - [x] removed alignment code that migrated to QCElemental. - [x] derived testing fns from qcel, rather than scattering and duplicating in psi4/qcdb; * there's two conflicting APIs going on:; * Psi4: `compare_something(expected, computed, significant_digits, label, verbose=1)`; * QCEl: `compare_something(expected, computed, label=None, atol=1.e-6, quiet=False)`; * and there's two sets of fn names:; * Psi4: `compare_integers`, `compare_strings`, `compare_arrays`, `compare_values`, `compare_matrices`; * QCEl: `compare` (for exact comparison scalars or np-castable arrays), `compare_values` (for floating point comparison scalaurs or np-castable arrays), `compare_recursive` (for iterables containing any of the previous); * Basically, now in psi4 or qcdb, you can use the qcel fns and the psi4 fns and the psi4 API or the qcel API. And their failure response is localized in a fn that can be switched out. ; * A few highly specialized comp fns (like `compare_molrecs` have been deprecated or psi4 API deprecated, but there should be enough UpgradeHelper guides to raise a problem and suggest solution.; * EDIT: whether using psi4 or qcel APIs, `label` is no longer required -- it'll default to the calling fn name (or `<module>` in a script). - [x] added link to binder image and fix tutorial cmd that didn't work in binder. ## Questions; - [ ] Someone should look at the old/new `compare_matrices` fns to check that the values comparison is still catching any detailed uses of the `^` operator. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1644:1091,failure,failure,1091,https://psicode.org,https://github.com/psi4/psi4/pull/1644,1,['failure'],['failure']
Availability,## Description; Recent changes to the cmake build systems introduced an issue when compiling psi4 plugins and Forte on a Mac. Compilation fails at the linking stage with the error; ```; ld: can't link with bundle (MH_BUNDLE) only dylibs (MH_DYLIB); ```. This PR reverts two changes. ## Questions; - [ ] Is there a better solution that still uses `pybind11_add_module(core MODULE NO_EXTRAS core.cc)`?. ## Checklist; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1640:174,error,error,174,https://psicode.org,https://github.com/psi4/psi4/pull/1640,1,['error'],['error']
Availability,## Description; Redirects the PSIO errors from `stderr` to exception message (stderr and normal output).; Essentially addressing #2019 and #1965. Example print:. ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO_ERROR: 5 (open call failed) !; ! Check the location of your scratch directory which can be !; ! specified via the $PSI_SCRATCH environment variable or in !; ! the $HOME/.psi4rc file. !; ! Please note that the scratch directory must exist and be !; ! writable by Psi4 !; ! Error occurred in file: /Users/kruse/qc/psi4/psi4/src/psi4/libpsio/error.cc on !; ! line: 133 !; ! The most recent 2 function calls were: !; ! !; !----------------------------------------------------------------------------------!; ```. ## Feature; - [x] PSIO errors to stderr and normal output. ## Checklist; - [x] limited manual testing by deleting files; - tests not applicable . ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2030:35,error,errors,35,https://psicode.org,https://github.com/psi4/psi4/pull/2030,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,## Description; Remaining LGTM errors/warnings for libsapt_solver addressed (mostly size_t related).Print statements in optking also fixed. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1651:31,error,errors,31,https://psicode.org,https://github.com/psi4/psi4/pull/1651,1,['error'],['errors']
Availability,"## Description; Repercussions from trying to fix #1986 . I think this fixes #1939, fixes #1978, fixes #2011. ## Todos; - [x] standardize pytests on `@using(""<addon>"")` rather than `@using_<addon>`. addon detection is more runtime than compiletime; - [x] start a smoke tests suite of running through `psi4 --qcschema` to live alongside psithon and psiapi; - [x] finally fix the need for pe/pcm to manually set fix_com/fix_reorient. I have a strategy locally.; - [ ] expand `Mol._initial_cartesian` to other ways to construct a Mol; - [x] snsmp2 1.0.4; - [x] pybind11 2.6.1; - [x] pcmsolver ~1.3.?~ 1.3 having some numerical issues with psi, so going back to a patched v1.2.1. ## Questions; - [ ] Opening the discussion to how to deal with methods that needs no_com/no_reorient/symmetry c1 _from_the_beginning_. Many of our present symmetry tolerant methods just need their parts consistent (e.g., dimer, monoA, monoB); whereas, cppe needs the exact input Cart to match the potfile. (Fun fact: a Mol can go from fix_com T -> F but not the reverse.) The sol'n in this PR is to carry the input Cartesians along as `Mol._initial_cartesians` (so long as not a variable or zmat Mol), which can then be used to reset through `set_geometry()` if the method demands it. This member is akin to the `Mol.EFP` object that gets carried along. Presently this is implemented for just the molecule constructors that psithon/psiapi `psi4.geometry()` and qcsk `Mol.from_schema()` use, but should probably be expanded if adopted. Thoughts on whether this is the best way to solve the problem?; - [ ] @robertodr PCMSolver: I'm only imposing c1, not fix_com/orient based on your slack reply. ok? I've removed all those lines from your ctest and pytest examples (except for alpha that needed it for matching). There's a new pcm mode test in test_addons_qcschema.py. It's writing the input file for pcm input, which is a little questionable in the schema-running world, but it's working for now. Any concerns?; - [ ] @maxsche",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2037:839,toler,tolerant,839,https://psicode.org,https://github.com/psi4/psi4/pull/2037,1,['toler'],['tolerant']
Availability,"## Description; Replaces #824: Frozen Natural Orbitals were implemented for DF-CCSD and DF-CCSD(T) energies. ## Todos; - [x] FNOs are implemented for MP2.5, MP3, LCCD, CCD, CCSD, CCSD(T), and CCSD(AT).; - [x] Both DF and CD options are available (only for RHF ref for now). ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1390:236,avail,available,236,https://psicode.org,https://github.com/psi4/psi4/pull/1390,1,['avail'],['available']
Availability,"## Description; Requiring libefp was rather a holdover from the early days of code-in-repo add-ons. This PR makes it slightly easier on packagers and enables us to have only three required compile-in dependencies in the figure in the paper (libint, blas/lapack, pybind11). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `#ifdef`-ing the EFP code probably could have been done to varying degrees of thoroughness. But since EFP is tied into `P::e` _and_ Molecule _and_ it's own interface, none of which I wanted to rexamine, this is the one that requires a minimum of recompilation if you change `ENABLE_libefp` ON/OFF. When OFF, the EFP object still exists, but only the constructor, destructor, and nfragments method (that returns 0 fragments). This way the driver needs no mods (which is a good thing, since we can't `#ifdef` python).; - If you build w/o libefp and try an efp-containing molecule, throws a runtime error with text `EFP fragments detected but are not available`.; - [x] slight fix of passing `pybind11_DIR` to plugin cache. helps with mixed install/staged psi4/pybind11. we'll see how this goes, as I'm not sure it's the best fix.; - [x] more thoroughly test cmake variable for PCMSolver path (`if ""@ENABLE_PCMSolver@"".upper() in [""1"", ""ON"", ""YES"", ""TRUE"", ""Y""]`); - Hope this helps a bit on packaging, @susilehtola ; * **User-Facing for Release Notes**; - [x] Psi4 can be build without libefp add-on. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/623:984,error,error,984,https://psicode.org,https://github.com/psi4/psi4/pull/623,2,"['avail', 'error']","['available', 'error']"
Availability,## Description; Resolved typo in code which would have given syntax error if copied verbatim. ## Todos; - [x] Fix typo. ## Status; - [x] Ready to go. Corrected print statement in NumPy Views section that was missing a `)'.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/495:68,error,error,68,https://psicode.org,https://github.com/psi4/psi4/pull/495,1,['error'],['error']
Availability,## Description; SCF: Add SCFConvergence Error such that the error will have the wavefunction as a member. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130:40,Error,Error,40,https://psicode.org,https://github.com/psi4/psi4/pull/1130,2,"['Error', 'error']","['Error', 'error']"
Availability,## Description; See below. ## User API & Changelog headlines; - [x] `Matrix::set_block` can be used on matrices that are not totally symmetric. ## Dev notes & details; - [x] `Matrix::set_block` can be used on matrices that are not totally symmetric.; - [x] `Matrix::set_block` now raises an explicit error when the symmetry of the target and block matrices disagree. ## Checklist; - [x] New test working. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2734:300,error,error,300,https://psicode.org,https://github.com/psi4/psi4/pull/2734,1,['error'],['error']
Availability,"## Description; Sept/Oct 2017 someone fixed up 5-zeta Dunning orbital basis sets for Li/Be. Those were only parts of the relevant publications, so I scraped up the rest. Below is summary. Only reason these didn't get posted 18 mo ago was that I was confused about the deleted Na/Mg from cc-pcv5z-dk.gbs, and I didn't have time to follow up and detangle why. All the same, I have confidence, if not conviction, about these bases, so they may as well be available for use. This file is the guide to what has changed (blue is new, yellow is changed, red is deleted); [basissets_libenamg_PR.pdf](https://github.com/psi4/psi4/files/2903308/basissets_libenamg_PR.pdf). ```; [43] From Peterson alkali paper website: http://tyr0.chem.wsu.edu/~kipeters/basissets/alkal-nr.html. Added Be to cc-pV6Z (basis-cc-pv6z); Added Na & Mg to cc-pV(X+d)Z X=DTQ5 (basis-cc-pv_xpd_z); Replaced Li, Be, Na, Mg exponents for tight functions for cc-pCVXZ X=DTQ; from ones from EMSL to the ones from Peterson website (corevalence-cc-pcvxz, as separable); Replaced Na & Mg to cc-pCVXZ X=5; (non-separable so deleted from corevalence-cc-pcv5z and added to partial-basis-cc-pcv5z); Replaced Li, Be, Na, Mg exponents for diffuse of aug-cc-pvXZ X=DTQ; from ones from EMSL (lacking citation) to the ones from Peterson website (diffuse-aug-cc-pvxz); Added Na & Mg to diffuse of aug-cc-pVXZ X=5 (Li & Be added in [42]) (diffuse-aug-cc-pv5z); Added Na & Mg to aug-cc-pV(X+d)Z X=DTQ5 (diffuse-aug-cc-pv_xpd_z). Propagated diffuse fns to hold-diffuse-[jun|may|apr|mar]-cc-pv[dtq5]z.gbs and _[dtq5]pd_z; ```. ### Basis sets present now in last commit. If you value your sanity, do not try to comprehend the diff of the last commit. #### Just to show how crazily these basis sets compose, the diff of the basis set progenitors (even including copying to the months) is `+2015 -633` but `36,655 −13,419` for the actual final basis sets. ## Checklist; - [ ] ~Tests added for any new features~; - [x] full tests clean. ## Status; - [ ] Ready f",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1559:452,avail,available,452,https://psicode.org,https://github.com/psi4/psi4/pull/1559,1,['avail'],['available']
Availability,"## Description; Set the minimum required C++ standard to C++14. Lower bounds on compilers can be found [here](https://en.cppreference.com/w/cpp/compiler_support#cpp14). Also addresses a bug in the SAPT code that resulted in a double free. ## About the SAPT bug; The Iterator class in SAPT contained an `int *` array that was cleaned up by the class's destructor. Iterator objects are constructed by a builder routine that first creates a local Iterator object, fills it, then returns it by value. The C++98 behavior of this design is problematic; a copy of the local temp Iterator is made and that copy is returned to the caller. When that copy is made, both the local temp and its copy have `int *` pointers that point to the same pool of memory because no deep-copy copy constructor exists for Iterator. Upon returning, the local temp object is destroyed, triggering the memory pointed to by the `int *` to be freed, causing the returned object to point to freed memory which is undefined behavior. When that returned object eventually goes out of scope, it will try to free the memory again, leading to the double free memory error we observed. Because we use C++11 most compilers appear to be able to correctly elide the copy, by implementing move semantics, so we haven't seen this before. The switch to C++14 with GCC5.4 caused consistent segfaults, revealing the issue. The fix is simple; don't use raw `int *`, but `std::vector<int>` instead; the lifetime of these is correctly managed automatically and the various move constructor/copy constructor/destructor can be generated correctly by the compiler. RAII for the win!. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix C++14 compliance CMake-side; - [x] Fix memory bug in SAPT code; - [x] Move Travis to Xenial. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1398:1129,error,error,1129,https://psicode.org,https://github.com/psi4/psi4/pull/1398,1,['error'],['error']
Availability,"## Description; Sets up Ruff to replace yapf & isort. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Should not affect end-users,; - [x] Will affect open PRs once `main` is re-formatted and ruff is enforced on the CI level, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] aligns code formatting convention to [Ruff](https://docs.astral.sh/ruff/formatter/), replacing yapf & isort,. ## Questions; - [ ] Should pre-commit run in the CI? It could run to let know PR might not be following the style, but the failure might not be blocking. It's something like a warning for a maintainer/PR issuer. ## Checklist; - [x] No new tests are required for that,; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3234:825,failure,failure,825,https://psicode.org,https://github.com/psi4/psi4/pull/3234,1,['failure'],['failure']
Availability,## Description; Several bug fixes and enhancements promised for 1.3. Primary goal for these changes is to localize the estimation of DF memory in a single location to prevent some odd errors. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Remove class method attribute for `Wavefunction.to_file`.; - [x] Reworks SCF `save_orbitals` to use canonical Wavefunction serialization.; - [x] `JK.name()` returns the name of the JK object.; - [x] `JK.memory_estimate()` attempts to estimate the amount of in-core memory required.; - [x] Reworks DFT cache size logic to account for Schwarz screening.; - [x] Removes SCF initialize JK from C++ for better initialization control; - [x] Attempts to close #1218. ## Questions; - [ ] Can we get better estimates on PK memory usage @jgonthier.; - [ ] Does IWL use virtually zero memory? @andysim . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1446:184,error,errors,184,https://psicode.org,https://github.com/psi4/psi4/pull/1446,1,['error'],['errors']
Availability,"## Description; Small bug fix that prevents adding local options to a module. This error shows only for `string` and `int` type options, but I potentially also in `array` and `python` data types. This PR addresses all four cases. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix option reading bug. ## Questions; - In the following part of the code one can potentially encounter the same problem. This can be fixed by adding `module` to the list of parameters passed to this function. Any reason why there is no `std::string module` in the parameter list? Adding it would also make this function consistent with other `set_local_x` functions.; https://github.com/psi4/psi4/blob/396b4c51d6902301baeed41386c49ccb9099a30b/psi4/src/core.cc#L705-L707. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1412:83,error,error,83,https://psicode.org,https://github.com/psi4/psi4/pull/1412,1,['error'],['error']
Availability,"## Description; Small improvements to the TDDFT solver. This one should be merged after #1885. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [X] Document; - [x] Handle computation of triplets properly; - [x] Implement transition moments and spectroscopic observables:; - [x] Electric dipole moment, length representation; - [x] Electric dipole moment, velocity representation; - [x] Magnetic dipole moment; - [x] Oscillator strengths, length representation; - [x] Oscillator strengths, velocity representation; - [x] Rotatory strengths, length representation; - [x] Rotatory strengths, velocity representation; - [x] Robustness fix: `states_per_irrep` sometimes fails with an obscure out-of-bounds error.; - [x] Usability fix: verbosity should be slightly higher, to let the user know stuff is being done (currently, only printout is at convergence); - [x] Implement functions to plot electronic absorption (EAS) and eletronic circular dichroism (ECD) spectra; - [x] Remove warning on potential inaccuracy of results.; - [X] Check convergence only against the norm of the residual (`r_tol`). The `e_tol` parameter has been completely removed. ## Follow-up; - The solver stalls when very tight convergence (`r_tol = 1e-8`) is requested. I am not quite sure if this is a fundamental issue with the algorithm. That convergence threshold is insanely tight, I am not even sure if this should be considered a real problem... ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [X] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814:665,Robust,Robustness,665,https://psicode.org,https://github.com/psi4/psi4/pull/1814,2,"['Robust', 'error']","['Robustness', 'error']"
Availability,## Description; Small tweak to SAPT(DFT) to help eliminate small ~30cal/mol wiggles in the PES. Tracked this down to issues in allowing the derivatives of very small densities leading to quite spurious results. This was changed to the same tolerance as the V derivative builds. Does change the result by ~1cal/mol for a test case- this is lost in the noise of DFT. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/840:109,down,down,109,https://psicode.org,https://github.com/psi4/psi4/pull/840,2,"['down', 'toler']","['down', 'tolerance']"
Availability,"## Description; So in the course of working on DDD/pydantic, a fix I needed triggered the dreaded ""circular import"" error, which anyone who's tried to alter the driver's fragile import structure has probably seen, too. Being sick of this, I located https://medium.com/brexeng/avoiding-circular-imports-in-python-7c35ec8145ed with advice to do `from .driver import energy`, not `from psi4.driver.driver import energy`. So that's the first pass on the driver imports. This fixes my circular import problem and makes it easier to find others. Since all the imports are churned anyways, I set up `isort` (that is, you can run isort on the repo, not that it's enforced on the repo). This is a utility (https://pycqa.github.io/isort/index.html) that sorts all the imports at the top of the file into stdlib, third_party, and first_party blocks and then alphabetizes the imports within. It also effectively tests the fragility of the import structure by jumbling them all into alphabetical order. Attempts in past years to run isort led to circular imports and a retreat. This time I was able to fix the single one that came about. Third pass is that I ran `autoflake` on the driver to remove unused stdlib imports. It also removed some `pass` on empty fns that weren't needed because the docstring suffices for the syntax. ## User notes; - [x] the import structure has changed. you might need to add standard library imports to your input files if you use them (e.g., `import math` before `math.pi`) that previously were preloaded by psi4. ## Dev notes & details; - [x] switched import style to relative imports, ran isort, ran autoflake; - [x] actual material changes:; * stop importing `molutil` into `sapt_proc`. this is the main one that allows killing off the embarrassing `temp_circular_import_blocker` fn. https://github.com/psi4/psi4/compare/master...loriab:psi4:import_slayer?expand=1#diff-f3e93ffa6125dd1f79abad7630bbf259bb1daeee89e983d2889b68af6038875aL35; * delay loading fisapt_proc until runti",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3033:116,error,error,116,https://psicode.org,https://github.com/psi4/psi4/pull/3033,1,['error'],['error']
Availability,"## Description; Some Psi4-side fixes to getting @bennybp's simint AddOn added. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Includes all commits of #533 ; - [x] Temporarily based off private repo https://github.com/loriab/simint branch config6 until the integration settles down, and we can return to tarballs. Note that if you want to test this branch, you may need to supply your GH credentials during the build to clone simint.; - [x] Adds all the pre-built detection, target referencing, docs, standardized variable names, tests that we expect from an addon to simint; - [x] Continued general documentation on addons.; - [x] Modestly tested- static and dynamic on Linux, dynamic on Mac; * **User-Facing for Release Notes**; - [x] New integral library available with `-DENABLE_simint`. ## Questions for @bennybp ; - [ ] There's some questions in external/upstream/simint/CMakeLists.txt; - [ ] I've made the simint on my acct private and just added you and some core developers who may want to test it. If you don't mind it being public, as a temp repo, that'd be a little easier.; - [ ] There are spots where I supply at most separate home, docs, and source links for addons. I've got your website, http://www.bennyp.org/research/simint/, for all three at the moment, so let me know if there are more specifics.; - [ ] I filled in the installing and configuring sections of simint.rst according to the template. Other addons (http://psicode.org/psi4manual/master/interfacing.html) often have middle sections about interacting with the code. Fill in anything you like.; - [ ] Got the following unexpected failing test cases on Linux and partially confirmed on Mac, all segfaulted. Could you take a look? None are in quicktests.; ```; The following tests FAILED:; 	 16 - cbs-xtpl-wrapper (Failed); 	144 - dft-b2plyp (Failed); 	269 - pywrap-checkrun-rhf (Failed); 	270 - pywrap-checkrun-rohf (Failed); 	271 - pywrap-checkrun-uhf (F",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625:344,down,down,344,https://psicode.org,https://github.com/psi4/psi4/pull/625,2,"['avail', 'down']","['available', 'down']"
Availability,"## Description; Some info about module-level provenance of a Wfn would be handy. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] add `Wavefunction.module_` member data and export; - [x] add setting to most modules (not psimrcc or fockci); - [x] incorporate into stdsuite testing. ## Questions; - [x] @dgasmith I've given mcscf its own name. prefer ""detci""?; - [x] @maxscheurer I edited a couple error messages to ADCC from ADC. ok?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1935:445,error,error,445,https://psicode.org,https://github.com/psi4/psi4/pull/1935,1,['error'],['error']
Availability,"## Description; Some miscellaneous code cleanup from my first attempt at fixing #2560. There will be a follow-up PR that renames many variables in this code before I can resume the attempt. Note that although I create Same-Spin and Opposite-Spin matrices, those are currently unused, but will be needed for the #2560 fix. Quick review appreciated, so I can continue the `fnocc` push. Obligatory @edeprince3 ping. ## Todos; - [x] Code cleanup; - [x] Introduced framework for modernizing pair energies in `fnocc`. ## Checklist; - [x] `fnocc` tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2561:407,ping,ping,407,https://psicode.org,https://github.com/psi4/psi4/pull/2561,1,['ping'],['ping']
Availability,"## Description; Suggestion for #1711; Moves the `nmo` table to a place after the orbital guess, so that it actual contains all the information. Adds a reduced `nmo` table for SAD together with a note that no occupations are available. _Formatting details up to debate_. Perhaps especially the placement of the `Pre-Iterations` line. Edit: See updated examples in thread below. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1713:224,avail,available,224,https://psicode.org,https://github.com/psi4/psi4/pull/1713,1,['avail'],['available']
Availability,## Description; Switch to adcc main channel and update the fallback version downloaded from github. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1827:76,down,downloaded,76,https://psicode.org,https://github.com/psi4/psi4/pull/1827,1,['down'],['downloaded']
Availability,"## Description; Test case cc46 was removed after it was noticed to be failing (#1002 ), it was determined that the failure was not indicating a bug, so it was temporarily removed so pre-release pakages wouldn't be reporting a failure. This PR reactivates the test with modifications so that it is passing again. . * **Developer Interest**; - cc46 checks GS and excited state Dipole/Quadrupole components against reference values generated by psi. ; - Was failing because calling `properties=['oscillator_strength']` prior to #995 was the only way to force ccdensity to make a call to OEProp for each excited state. Post #995 this does not compute one electron properties for excited states so the computed values were all zero.; - Correcting the driver call `properties=['dipole','quadrupole']` is not enough; - The test values were generated using `oscillator_strength` which triggers EOM/Lambda convergence thresholds to be reduced.; - The computed values are 'too good' and comparison with the older reference values fails in the 4th decimal place for some quadrupole components of excited states.; - *Final Solution*; - I dropped the convergence thresholds manually in the test-input to what the were set to by the driver at the time that the reference data was generated. . Side Note:; - Personally I don't think the savings achieved by this over ride of the convergence thresholds are significant enough to justify potentially confusing situations. ; - If a user sets those values manually and requested `oscilator_strength` and/or `rotational_strength` the user-set values are overridden.; - Commenting out the [relevant lines](https://github.com/psi4/psi4/blob/72c30b536201a25171fa6426c8f319e2abdbb1cb/psi4/driver/procrouting/proc.py#L2647-L2649) all cc tests still pass. Including this one (with my changes). ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for rev",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1070:115,failure,failure,115,https://psicode.org,https://github.com/psi4/psi4/pull/1070,2,['failure'],['failure']
Availability,"## Description; The CdSalcList code is made fully accessible to the Python layer, per #884. This code does that and makes a few other changes to clean up code I found while trying to write the documentation for Pybind. Pinging @loriab and @dgasmith by request. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Moves the factory argument from the CdSalcList constructor to an argument of the method that uses it, getting rid of several null pointers and also meaning that a list of displacements no longer needs to care about orbital irreps.; - [x] Adds missing `const` declarations; - [x] The documentation no longer tells developers to use the non-existent SimpleMatrix class; - [x] Other misc. cleanup, from removing an overloaded term to simplification; * **User-Facing for Release Notes**; - [x] Exposed `CdSalcList` to Python; - [x] Made the needed irreps for Cartesian displacements more readable. ## Questions; - [x] ~~I am playing with reworking the print function. needed_irreps displays as an integer, so that part of the output is unintelligible to people who do not know that it is internally a bitstring. Would this be worth changing?~~ Changed!. ## Status; - [x] Ready to go!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/895:219,Ping,Pinging,219,https://psicode.org,https://github.com/psi4/psi4/pull/895,1,['Ping'],['Pinging']
Availability,"## Description; The DCT density, when available, is now on the wavefunction. If you are an orbital optimized method, the density matrices can be computed without solving response equations. This is done in the new `construct_density_oo_UHF` method and its RHF sibling. This allowed me to migrate some code out of `compute_oe_properties`, which was only ever implemented for UHF.; If you are not an orbital optimized method, the density matrices must be computed after solving response equations (if implemented in Psi). This is done in the `compute_ewdm_dc` method, which was already responsible for assembling the OPDM in this case. Obligatory @hokru ping, as this should clean up #1884. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] DCT densities (when available) are now on the wavefunction. ## Checklist; - [x] `ctest -L dct -j4` and `ctest -L quick -j4` pass on my Mac. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1963:38,avail,available,38,https://psicode.org,https://github.com/psi4/psi4/pull/1963,3,"['avail', 'ping']","['available', 'ping']"
Availability,"## Description; The `JK_deriv2` function exists to compute the overlap-derivative-times-TEI part of the right side of the CPHF equation. It's a J-term and a K-like term. with overlap derivative integrals instead of a density.[1] The previous algorithm to do this first computed the alpha spin part in one function call, and then the beta spin part in another function call. This approach was redundant. The first function call had all the intermediates _necessary_ to compute the beta part, but didn't use them. As a result, the function re-computed JK. This PR refactors `JK_deriv2` so it computes both spin cases in a single function call. [1] = There's also a Vx term, but its implementation was both unused and buggy. Now it's just unused. Trying to use it in the _old_ way would be even more redundant. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The UHF hessian algorithm has been slightly adjusted, which should lead to slightly faster computations. Please report any errors. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Refactored `JK_deriv2` to compute both spin cases in a single function call.; - [x] Makes UKS LDA hessians much less ugly.; - [x] Makes `JK_deriv2` comply with `compute_Vx`'s expected function signature . ## Checklist; - [x] `ctest -R scf-hess` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2994:392,redundant,redundant,392,https://psicode.org,https://github.com/psi4/psi4/pull/2994,3,"['error', 'redundant']","['errors', 'redundant']"
Availability,"## Description; The first iteration energy in SAD is at best non-variational (RHF, UHF), and at worst completely nonsensical (ROHF, CUHF). As neither a DIIS error can be formed in the lack of a proper density matrix, this PR sets the first iteration energy to zero, so that only sensical energies are printed out. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Guess energy correctly evaluated in ROHF and CUHF; - [x] Guess energy properly labeled. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1493:157,error,error,157,https://psicode.org,https://github.com/psi4/psi4/pull/1493,1,['error'],['error']
Availability,"## Description; The formatted checkpoint files currently produced by Psi4 misname the orbital coefficient and the density matrix fields. This PR (re)establishes the expected behavior, as well as fixes other bugs in the code. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix labels of MO energies and coefficients; - [x] Fix labels of density matrices; - [x] Fix printout of number of linearly independent functions; - [x] Don't print the MO coefficients into the log file; - [x] Only print out beta orbs and spin density if wave function is not spin-restricted.; - [ ] Identify if density is correlated; if it is, print out both SCF and correlated density. Otherwise only print out SCF density. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1475:30,checkpoint,checkpoint,30,https://psicode.org,https://github.com/psi4/psi4/pull/1475,1,['checkpoint'],['checkpoint']
Availability,"## Description; The goal of this PR is to expand test coverage of the DFJCOSK and DFJLinK JK subclasses within Psi4 by including their testing within the scf5 test. The scf5 test in Psi4 tests a variety of combinations of SCF_TYPE and SCF reference for singlet and triplet O2. As it were, the COSX and LinK SCF_TYPES were missing from the list of methods analyzed within this test. This PR simply adds COSX and LinK to the list of methods tested in scf5, expanding testing of these two methods beyond what was previously present. NOTE TO REVIEWERS: This PR is a general JK maintenance/cleanup/improvement PR and is independent of the developments occurring regarding CompositeJK and its direct implementation into Psi4. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Adds COSX and LINK to the list of SCF_TYPEs tested in the scf5 test option. ## Questions; - [ ] Is the methodology by which COSX and LinK tested acceptable? Unfortunately, the reference energies used in scf5 are either canonical (i.e., non-DF) or DF, neither of which fully describe the COSX and LINK methods. The approach I took is to compare each COSX and LINK energy to the corresponding canonical energy with an atol of 1E-4. Any feedback on this particular approach to testing COSX and LINK would be appreciated. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768:573,mainten,maintenance,573,https://psicode.org,https://github.com/psi4/psi4/pull/2768,1,['mainten'],['maintenance']
Availability,## Description; The main script (`run_psi4.py` in the source tree or `psi4` when installed) was importing qcelemental before it had a chance to modify the Python search path. If you didn't already have a copy of qcelemental in your Python search path would cause an error. Encountered this on our cluster while trying to run the tests. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1925:266,error,error,266,https://psicode.org,https://github.com/psi4/psi4/pull/1925,1,['error'],['error']
Availability,"## Description; The most important part of this PR is the changes to `occ/mograd.cc`. The previous formula for the RMS MO gradient was incorrect, causing it to be too large by a factor of `sqrt(occ*vir)`. Even for systems in the test suite, this can be as large as a factor of 10. **As a result, under this PR, orbital-optimized `occ` computations will take more iterations; it was not actually achieving the accuracy it claimed previously.** We may loosen the default convergence criteria as a result of this, but exploring that is deferred to the standard suite pass in #1980. Also included in this PR is commenting and removing some unused (not even compiled!) `dfocc` code found while investigating issues tangential to #1980. Obligatory @loriab ping for #1980. Obligatory @ssh2 ping for OMP convergence changes. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix the RMS orbital residual calculation in `occ`; - [x] Remove 1100+ lines of dead code from `dfocc`. ## Checklist; - [x] `ctest -R ""^omp|^olccd""` and `pytest -k test_olccd` pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1988:750,ping,ping,750,https://psicode.org,https://github.com/psi4/psi4/pull/1988,2,['ping'],['ping']
Availability,"## Description; The old instability following procedure Trotterized a matrix exponential. Now we compute it (more or less) exactly. Obligatory @susilehtola ping. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Modified the orbital instability following procedure. This should be a minor change for most applications: contact developers if you notice a problem. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Change the algorithm we use to approximate a matrix exponential when instability following from a Trotter approximation to that of the build-in `expm` function.; - [x] Added documentation for the rationale for the orbital rotation step. ## Questions; - [ ] **Warning!** None of our tests cover instability following. I've run a check that the old and new codes mostly agree for the particular instability I'm trying to track. Is this an issue?. ## Status; - [x] Ready for review; - [ ] Ready for merge after discussion",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2758:156,ping,ping,156,https://psicode.org,https://github.com/psi4/psi4/pull/2758,1,['ping'],['ping']
Availability,"## Description; The primary purpose of this PR is to correct some errors in density-fitted DCT. In brief, none of the nuclear gradient, orbital residual, or amplitude residual could be derived by differentiating the density-fitted DCT energy functional. All deviations were in different ways. This PR changes the energy functional to have a simpler density-fitted energy functional and correct all of its derivatives (orbital, amplitude, and nuclear geometry). _Unfortunately_, this is a gargantuan PR, and I owe all reviewers some beer. Simplifying some code requires adding new code that best belonged in other modules, there was a lot of new technology needed to get DCT in working order, DCT needed to be hooked up to properties in order to get tests properly working, and I did a lot of code reorganizing to make finding bugs a touch easier for me. ## Todos; - [x] DF-DCT energies, properties, density matrices, and gradients are all now correct; - [x] DCT supports one-electron properties for methods that support gradients; - [x] Adds a new libmints SaveType: ThreeIndexLowerTriangle.; - [x] Adds utility functions to `libdpd` and `libmints` with slightly different arguments/return types.; - [x] Eliminates many unneeded pointers from `dct`.; - [x] clang format DCT; - [x] DCT variables are now written to the wavefunction rather than globals; - [x] Eliminated the special procedure to get a DCT Molden file.; - [ ] There's still some cleanup to do, but it can be a new PR. This one is already very big. (I'm looking at you, incomplete use of the new SaveType, and explicit construction of the VVVV block of the TPDM.). ## Questions; - [ ] Any deprecation warnings necessary? This is an unusual case, to put it lightly. ## Checklist; - [x] Dipole and gradient finite difference tests created and _passing_.; - [x] `dct` tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2100:66,error,errors,66,https://psicode.org,https://github.com/psi4/psi4/pull/2100,1,['error'],['errors']
Availability,"## Description; The resurrection of #2543. This PR refactors my LinK code (#2359) and Zach's semi-numerical K (#2567) code into the CompositeJK framework (to allow mixing and matching of J and K types). The DirectDFJ implementation here is derived from Zach's semi-numerical K PR. This framework is robust and allows for the rapid development of new J/K methods and combinations in the future, and avoids code duplication. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Creates composite JK framework to allow for mixing and matching of different J/K types; - [x] Makes LinK usable with the DirectDFJ algorithm. ## Questions; - [x] To call my LinK code, `SCF_TYPE` is set to `LINK`, should it be `DFJ_LINK` instead?. ## Checklist; - [x] Tests added for any new features; - [x] Passing pytests for COSK (from Zach) and LinK; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2588:299,robust,robust,299,https://psicode.org,https://github.com/psi4/psi4/pull/2588,1,['robust'],['robust']
Availability,"## Description; The support for matrices with `symmetry() != 0` is flawed in several places in the matrix class. While *some* operations are only valid if the matrix is totally symmetric, most do not have this requirement. . These issues have long gone unnoticed because the majority of places where the object is used the quantity will be totally symmetric. I started noticing these flaws while working on TDDFT which will require most of the changes made here in order to work properly. ## FYI; - Comments/error messages/variables names have been updated to make meaning more precise.; - In general the non-zero block of the matrix found at `matrix_[h]` has shape `{rowspi_[h], colspi_[h^symmetry_]}` **not** `{rowspi_[h], colspi_[h]}`. The two are coincidentally the same when `symmetry_ == 0` (This was the cause of many segfaults/incorrectly raised errors).; - I have aggressively applied DRY to avoid issues. Example (`add`, `subtract`, and `axpy`) all lead to different calls to `C_DAXPY`, however `axpy` computed the size incorrectly and led to a segfault. ; - I have added unit tests for the matrix class to avoid reintroducing any of the bugs I root out. ## Todos; - [x] python bindings for non-totally symmetric constructor; - [x] consolidate `axpy` type operations, fix size issue; - [x] consolidate `gemm` type operations, fix A/B/C block logic. ## Questions; - [ ] If anyone has noticed problems, missing/bugged functionality that I have missed now is a good time to point them out. . ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1383:508,error,error,508,https://psicode.org,https://github.com/psi4/psi4/pull/1383,2,['error'],"['error', 'errors']"
Availability,"## Description; The user-supplied occupation arrays weren't sanity checked, which caused segfaults. This PR makes psi4 give an error message instead. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/602:127,error,error,127,https://psicode.org,https://github.com/psi4/psi4/pull/602,1,['error'],['error']
Availability,"## Description; There was a report that the slack link gave ""an error"". fwiw, when I regenerated the link, it was different. Link replaced and new paper partially added. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1869:64,error,error,64,https://psicode.org,https://github.com/psi4/psi4/pull/1869,1,['error'],['error']
Availability,"## Description; There were a few more `set dft_functional fctl` in the full test suite. This should polish it off. ## Accomplished; - [x] Pin pybind11 to 2.0.0 so psi doesn't pick up any incompatible newer versions lying around; - [x] long tests all pass. ## Questions; - [ ] @dgasmith, should `gradient('scf', dft_functional='bp86')` work?. tests/dftd3/grad/input.dat; ```; ...; grad = gradient('bp86-d2gr'); compare_matrices(ref, grad, 7, ""Outsourced dft gradients called by name"") #TEST; clean(). grad = gradient('scf', dft_functional='bp86-d2gr'); compare_matrices(ref, grad, 7, ""Outsourced dft gradients called by options"") #TEST; ```; ```; 	Outsourced dft gradients called by name...........................PASSED; Traceback (most recent call last):; File ""stage/usr/local/psi4/bin/psi4"", line 260, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/home/psilocaluser/gits/hrw-matt/objdir/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 606, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psilocaluser/gits/hrw-matt/objdir/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 2055, in run_scf_gradient; grad = core.scfgrad(ref_wfn). RuntimeError: ; Fatal Error: V: RKS should have only one D Matrix; Error occurred in file: /home/psilocaluser/gits/hrw-matt/psi4/src/psi4/libfock/v.cc on line: 915; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::RV::compute_gradient(); psi::scfgrad::SCFGrad::compute_gradient(); psi::scfgrad::scfgrad(std::shared_ptr<psi::Wavefunction>, psi::Options&); py_psi_scfgrad(std::shared_ptr<psi::Wavefunction>); ```. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/811:1260,Error,Error,1260,https://psicode.org,https://github.com/psi4/psi4/pull/811,2,['Error'],['Error']
Availability,## Description; There's a memory leak _somewhere_ in the SCF code. This PR replaces some of the manual memory management with `new`/`delete` in `libmints` to cut down the number of places where it could be coming from. (I'd like to start from a zero-leak baseline for DIIS profiling.). I'll probably need to use `valgrind` to track this down further... ## Checklist; - [x] Quicktests pass. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2346:162,down,down,162,https://psicode.org,https://github.com/psi4/psi4/pull/2346,2,['down'],['down']
Availability,"## Description; Think of the default orbital optimization algorithm in OCC with the following pseudocode:; ```; orbital_gradient = compute_orbital_gradient(); try:; orbital_step = compute_NR_step_via_PCG_with_HF_MO_hessian(orbital_gradient); except ConvergenceError:; orbital_step = compute_step_with_crude_diagonal_MO_hessian(orbital_gradient); diis_step(); ```. I traced a test failure in an upcoming PR (ocepa-grad2) to a failure in the approximate NR step. Five failures, in fact.; 1. The HF MO Hessian couples alpha and beta IDPs. You need a single alpha, not a different alpha for each spin.; 2. For the same reason, you need a single beta.; 3. The Fock term assumed semicanonical orbitals. OCC does not use semicanonical orbitals.; 4. The Fock matrix was acting on the wrong vector.; 5. One of the tensor contractions involving TEI was incorrect. After fixing those five bugs, I observed three things:; 1. After accounting for whether you index by (v,o) or (o, v), the matrix-vector products of the new occ implementation match those of the SOUHF P4N tutorials,; 2. The X (kappa) converged to does satisfy Ax=b; 3. The orbital equations refuse to converge. My conclusion is that the implementation of the algorithm is now correct, but it's not a good way to generate orbital steps. The off-diagonal terms can end up being significant for the open-shell systems that would lead you to use an orbital-optimized method. This didn't cause obvious problems before because the previous errors rendered the PCG procedure non-convergent, so you would always fall back to the crude diagonal step _unless_ your orbital gradient was so low that you didn't need to iterate at all. So what we expect to see from this bug is difficulties converging occ tightly, which has been my experience. To remedy the situation, the default orbital step is now the crude semicanonical step. The next PR should be the final one in the series. I'll just need to rebase it onto this one, repair the two tests I mentioned on",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1829:380,failure,failure,380,https://psicode.org,https://github.com/psi4/psi4/pull/1829,3,['failure'],"['failure', 'failures']"
Availability,"## Description; This PR adds a new psivar for the length gauge origin-dependence of the specific rotation, to aid in migration of the CC tests. `cc29` now tests this psivar. Once the psivar is accepted, I can resume porting tests over. This is PR 6 in an ongoing series to make `ccdensity` compatible with the standard `Matrix` and `Wavefunction` machinery used elsewhere in Psi. Obligatory @lothian and @loriab ping for new `cc` psivars. For TDC's benefit, you can go to the ""Files changed"" tab, ""Review changes"", and then mark to approve if things look good to you. ## Checklist; - [x] Newly added psivar is tested. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2451:412,ping,ping,412,https://psicode.org,https://github.com/psi4/psi4/pull/2451,1,['ping'],['ping']
Availability,"## Description; This PR adds the [psi4fockci plugin](https://github.com/shannonhouck/psi4fockci) as an endorsed plugin, allowing people to perform generalized spin-flip and IP/EA calculations. ([Related to Issue #1838 here](https://github.com/psi4/psi4/issues/1838).). ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Added psi4fockci to endorsed_plugins.py; - [x] Added documentation; - [x] Added tests. ## Questions; - [x] The addition of the psi4fockci tests seem to be breaking test_psi4_cas; it fails with a ""Fatal Error: CIWavefunction: Iterations did not converge!"" error. I presume this is because I'm somehow not cleaning variables correctly; I'm calling core.clean(), core.clean_options(), and core.clean_variables(). Is there one I'm missing?. ## Checklist; - [x] Tests added for psi4fockci; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1855:569,Error,Error,569,https://psicode.org,https://github.com/psi4/psi4/pull/1855,2,"['Error', 'error']","['Error', 'error']"
Availability,"## Description; This PR aims to expose useful functions from _detci_ and _libpsio_ to the python side:; - libpsio needs **read()**, **write()**, **read_entry()**, and **write_entry()** functions available in python to be actually useful to the user who intends to use Psi4 intermediate files, containers and buffers.; - There are publicly accessible _get_opdm()_ and _get_tpdm()_ functions in _detci_ but for the active-space only. This PR tries to bring the **opdm_add_inactive()** function to the public scope as well and expose it to the python side.; - Members of the **psio_address** structure are also exposed that can be adopted as arguments in _libsio_'s _read()/write()_ function calls. ## Todos. * Having a spatial symmetry-imposed bock-structured sparse TPDM as a result of get_tpdm() instead of the dense format only is desirable.; * Adding _opdm_add_inactive()_'s counterpart in order to complete the full structure of TPDM [such as **tpdm_add_inactive()**] will be extremely useful. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1821:195,avail,available,195,https://psicode.org,https://github.com/psi4/psi4/pull/1821,1,['avail'],['available']
Availability,"## Description; This PR aims to implement computation of multipole potential integrals up to a desired; order. Such integrals are used for EFP and PE (#1401), where for EFP, the integrals; are already implemented, but are always computed through third order (octupoles). For PE, often parameters are only available up to quadrupoles, so I'd like to avoid computation; of higher order integrals all the time. ~~The code is copied from `efpmultipolepotential`, so probably one should decide on whether; to keep `efpmultipolepotential` or to use the new code to avoid code duplication.~~. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] enable octupole moments as well; - [x] change ordering of cartesian components to Cartesian; - [x] use `multipolepotential` for EFP (`ao_efp_multipole_potential` calls `ao_multipole_potential` and does the remapping of components in `mintshelper.cc`); - [x] remove `efpmultipolepotential.{hh,cc}`; - [x] tests of the actual integrals using finite differences. ## Questions; - [x] ~~Switch to `multipolepotentials` for EFP in another PR?~~. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1657:305,avail,available,305,https://psicode.org,https://github.com/psi4/psi4/pull/1657,1,['avail'],['available']
Availability,"## Description; This PR brings (hopefully!) to a close the PCM-changes-directory saga noted in issue #817 and partially alleviated in PR #818. ; This change needed an API update PCMSolver-side, hence the minimum required version bump to its 1.1.12 version. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] PCMSolver updated to its v1.1.12; * **User-Facing for Release Notes**; - [x] Parsing PCM directory _no longer_ changes directory. ## Questions; - As (probably not very clearly) noted in the manual, **analytical gradients including PCM are NOT available**. Should there be a stop in the code when such a request is made or should the code be routed to use a numerical gradient?. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/896:615,avail,available,615,https://psicode.org,https://github.com/psi4/psi4/pull/896,1,['avail'],['available']
Availability,"## Description; This PR changes the code to fix the majority of combinations of `SCF_TYPE`/`SCF_SUBTYPE`/`SCREENING` keywords which were previously broken. It was discovered that there were a lot of combinations of `SCF_TYPE`, `SCF_SUBTYPE`, and `SCREENING` keywords (e.g., `SCF_TYPE = {CompositeJK}` with `SCREENING = NONE`) that would break upon use, either with an exception or with a hard error such as a segfault. PR https://github.com/psi4/psi4/pull/2978 added testing to detect these broken combinations. This PR actually fixes the broken combinations detected through the added test. The most notable change as a result of fixing these issues is the handling of how certain variables within the `TwoBodyAOInt` class are initialized. To enable universal support of JK builds with `SCREENING = NONE`, an option has been added to manually call the `TwoBodyAOInt::create_sieve_pair_info()` function via the new wrapper function `TwoBodyAOInt::initialize_sieve()`. Multiple JK builds rely on values of variables initialized via `create_sieve_pair_info()` , and `initialize_sieve()` is now used to initialize the required variables if `SCREENING = NONE` is set. In this way, `SCREENING = NONE` can exist with the benefits it provides, while still working with all JK builds. Also, changes are made to ensure that no screening actually occurs in JK builds when `SCREENING` is set to `NONE`. In line with the above, some tests have been expanded. `test_comprehensive_jk_screening.py` has been changed to account for the `SCF_TYPE`/`SCF_SUBTYPE`/`SCREENING` combinations that were fixed. `test_erisieve.py` has been updated to more thoroughly test `SCREENING=NONE`. It is worth noting that, unfortunately, `TwoBodyAOInt::initialize_sieve()` must be defined per integral engine, and so the fixes of this PR only work with Libint2. The issues this PR tries to fix, still persist if Simint is used instead. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new function to",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3060:393,error,error,393,https://psicode.org,https://github.com/psi4/psi4/pull/3060,1,['error'],['error']
Availability,"## Description; This PR closes #1916 and corrects a bug causing third-decimal errors in gradients computed by `dfmp2` with the frozen virtual approximation. See the commit marked ""Bugfix!"" to see exactly what the issue was. There was a sign error, and Rob was looping over frozen core orbitals when he meant to loop over frozen virtual orbitals. More importantly for me, this code inserts many, many comments into Rob's code, so I know what I'm doing when I modify it throughout the rest of this PR series. This includes uncovering a very devious computational trick, that as far as I know is unpublished, and also some errors in the original papers. Many thanks to Francesco and Shuhe for the DSRG-PT2 paper, which formed part of the Rosetta Stone for figuring out how this code works. Several explicit types are now `auto`. Reviewers, double-check that I didn't accidentally remove a pass-by-reference or `const` declaration when doing so. Lastly, `test_gradients.py` has been added to pytests to confirm the accuracy of `dfmp2` gradients. This PR series will culminate with the addition of DF-ODC-12 to `test_gradients.py`. Currently, DF-ODC-12 would fail due to #1579. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Corrects a critical bug causing errors in frozen virtual gradients computed with the `dfmp2` module; - [x] Adds many comments to `dfmp2`; - [x] Replaces a lot of explicit type with `auto`. ## Checklist; - [x] Tests added for newly working features; - [x] `dfmp2` tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1923:78,error,errors,78,https://psicode.org,https://github.com/psi4/psi4/pull/1923,4,['error'],"['error', 'errors']"
Availability,"## Description; This PR closes #2120. The user-side problem is that when there are linear dependencies in the molecule, `fnocc` reports uncontrolled energies, iteration-by-iteration. The mechanism for this is as follows:. * `run_fnocc` requests an SCF computation. `nmopi_ < nsopi_` due to linear dependencies.; * `fnocc` is incompatible with point group symmetry, so calls `c1_deep_copy` to transform the solution to a c1 solution. For concreteness, we'll assume RHF, although all HF subclasses have the same problem.; * `RHF::c1_deep_copy` calls `Wavefunction::c1_deep_copy`. The resulting wavefunction has `nmo_` equal to `nmopi_.sum()` of the previous wavefunction, as desired.; * `RHF::c1_deep_copy` calls the RHF constructor on the new wavefunction, which calls to `HF::common_init`, which initializes `nmopi_ = nsopi_`, under assumption that the subsequent SCF will call `form_Shalf`, which is _actually_ responsible for first eliminating linear dependencies and then determining `nmopi_`.; * There is no subsequent SCF, so `nmopi_ = nsopi_` at the time `fnocc` begins.; * Garbage In, Garbage Out. `fnocc` is given a garbage wavefunction and gives garbage energies. The remedy here is to no longer have `common_init` put suspect information on the wavefunction. Obligatory ping to @edeprince3. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] `c1_deep_copy` no longer leads to a wrong `nmopi_` in case of linear dependency. This fixes problems with linear dependencies observed in the `fnocc` module. ## Questions; - [ ] What does this PR mean for #1545? Holger confirmed the bug there was symmetry related, and the system does have a linear dependency... It's probably worth re-investigating after this gets merged in. ## Checklist; - [x] Tests added for any newly working features; - [x] `ctest -j4` is 490/490. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2302:1280,ping,ping,1280,https://psicode.org,https://github.com/psi4/psi4/pull/2302,1,['ping'],['ping']
Availability,"## Description; This PR eliminates 600+ duplicate lines of code from `dfocc`, as well as two functions. This cleans up a near-future PR of mine. Obligatory @loriab ping. ## Todos; - [x] `dfocc` repeats itself a little bit less. ## Checklist; - [x] `ctest -L df$` and `test_standard_suite.py` pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2067:164,ping,ping,164,https://psicode.org,https://github.com/psi4/psi4/pull/2067,1,['ping'],['ping']
Availability,"## Description; This PR enables CCSD calculations with the PCM in the [PTE (Perturbation-To-Energy) approximation](http://dx.doi.org/10.1063/1.3245400). The CCSD amplitude equations are solved using the solvated Fock matrix and MOs, _i.e._ running SCF with PCM and then using the solvated SCF determinant as the reference.; It boils down to adding the PCM polarization energy in the reference energy used in the CC modules. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] CCSD with the PCM in the PTE approximation. ## Questions; - [x] Accessing the PCM polarization energy of the reference with `Process::environment.globals[""PCM POLARIZATION ENERGY""]` is probably not the cleanest solution. Are there alternatives?; - [x] This PR lacks documentation. Where should I add some notes about this?. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/683:333,down,down,333,https://psicode.org,https://github.com/psi4/psi4/pull/683,1,['down'],['down']
Availability,"## Description; This PR entirely removes the Obara-Saika code for one-electron integrals. Note that, as explained in #2473, the *unique* `PseudoSpectralInt` functionality (erf integrals) is not used anywhere in Psi right now, so it can be safely removed. Once the problems with L2 (which currently put #2473 on hold) are sorted out, this functionality will become available. **Merge button click** reserved for @andysim. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Remove `osrecur.{cc,h}`; - [x] Remove `PseudoSpectralInt` (will be reconciled in #2473). ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2517:364,avail,available,364,https://psicode.org,https://github.com/psi4/psi4/pull/2517,1,['avail'],['available']
Availability,"## Description; This PR exposes `Vector.clone()` to the Python layer, a generally useful function and one I specifically need for PyDIIS. Sadly, positive LoC this time. The cast to `shared_ptr` is necessary for the clone to be available Py-side because when we pybound `Vector`, we specified `std::shared_ptr<Vector>` as its holder type. I imagine this is an example of ""[holder types must be applied consistently](https://pybind11.readthedocs.io/en/stable/advanced/smart_ptrs.html#std-shared-ptr.)."" Let's not talk about how long it took for me to implicate holder types in my test originally failing. ## Todos; - [x] `Vector.clone` available on the Python layer. ## Checklist; - [x] Tests added for any new features. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2375:227,avail,available,227,https://psicode.org,https://github.com/psi4/psi4/pull/2375,2,['avail'],['available']
Availability,"## Description; This PR fixes Example 1 of #2231, some GEMM errors in the DCT module in the presence of linear dependencies. There's more debugging to do, but this is a perfectly good standalone bugfix. I also refactored the offending function. Less code duplication, less gratuitous pointers, and eliminated an offset. This PR is anodyne, so getting this in for 1.4 would be appreciated. ## Checklist; - [x] No tests to add? The old code completed successfully because there was a back-up algorithm when the one that was acting up errored out.; - [x] `ctest -R dct` passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2232:60,error,errors,60,https://psicode.org,https://github.com/psi4/psi4/pull/2232,2,['error'],"['errored', 'errors']"
Availability,"## Description; This PR fixes a bug introduced in #1749, where `MemDFJK` handling of range-separated functional was incorrect in the asymmetric case. This incorrect handling lead to incorrect TD-DFT excitation spectra for range-separated functionals when `MemDFJK` was used. This PR hence closes #2431. In the symmetric case, either swapping the contraction order had no effect, or it was corrected by a hermitivitize call later on, so no error was observed. I strongly recommend backporting this PR (or at least the two characters needed to fix the bug). The rest of the PR other than those two characters is tests and commenting. Credit to @hokru for tag-team debugging. . ## Checklist; - [x] Tests added for newly working features. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2435:439,error,error,439,https://psicode.org,https://github.com/psi4/psi4/pull/2435,1,['error'],['error']
Availability,## Description; This PR fixes a bug where a coupled cluster computation that diverges triggers a further bug in the timer system. A fatal error is now triggered instead. Closes #1864. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2150:138,error,error,138,https://psicode.org,https://github.com/psi4/psi4/pull/2150,1,['error'],['error']
Availability,"## Description; This PR fixes a docs fail caused by the previous PR in the series and also adapts a few more tests. Test `cc29` needs another adaptation, but as that will require a new psivar, I'm saving that for the next PR. This is PR 5 in an ongoing series to make `ccdensity` compatible with the standard `Matrix` and `Wavefunction` machinery used elsewhere in Psi. Obligatory @lothian ping for `cc` and obligatory @loriab ping for fixing the docs. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2447:390,ping,ping,390,https://psicode.org,https://github.com/psi4/psi4/pull/2447,2,['ping'],['ping']
Availability,## Description; This PR fixes a line in cookbook-rohf-orb-rot test that was previously causing a failure. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Fixes previously failing tests; * **User-Facing for Release Notes**; - Not sure if this is applicable?. ## Questions; - No questions at this time. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/841:97,failure,failure,97,https://psicode.org,https://github.com/psi4/psi4/pull/841,1,['failure'],['failure']
Availability,## Description; This PR fixes some typos in `cc29` which reduced test coverage and also migrates `cc30` and `cc31` from autotest to ctest. `cc32` and `cc33` are good as written. This is PR 7 in an ongoing series to make ccdensity compatible with the standard `Matrix` and `Wavefunction` machinery used elsewhere in Psi. Obligatory @lothian and @loriab pings - reviews appreciated but not mandatory. ## Checklist; - [x] Changed tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2456:352,ping,pings,352,https://psicode.org,https://github.com/psi4/psi4/pull/2456,1,['ping'],['pings']
Availability,## Description; This PR fixes the segmentation fault of `CCEnergyWavefunction::rotation()` when there are frozen virtual orbitals. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1887:47,fault,fault,47,https://psicode.org,https://github.com/psi4/psi4/pull/1887,1,['fault'],['fault']
Availability,"## Description; This PR fixes three bugs in Psi's NBOWriter.; 1. The AO->MO matrix was previously put in the transpose way to how NBO expected it.; 2. MO coefficients for non-totally symmetric irrep were transformed from SOs to AOs incorrectly, leading to #1566. Closes #1566.; 3. The map from angular momentum functions in Psi to labels for NBO was wrong. For instance, p0 was previously px instead of pz. Due to point 3, **all previous NBO computations from Psi-generated NBO files are suspect.** I very nearly published wrong results due to that, so I advocate backporting this to 1.3. **NEW**; Linear dependencies and angular momentum up to _h_ is now handled properly. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix critical errors in NBOWriter. ## Tests of Correctness; I compared the overlap, density, and Fock matrices for nearly-cis diazene from file47's from Psi and QChem. After accounting for the fact that they order the AOs differently, they match almost perfectly. The density matrix was off in the last decimal place for a few entries. The NAO energies, NAO occupations, and perturbative analysis matched as well. I repeated for my instigating case, cis-sulfurous acid. QChem matches Psi with symmetry matches Psi without symmetry for NAO energies, NAO occupations, and perturbative analysis. Finally, to verify the molecular orbitals, I had both QChem and Psi report the MOs in the basis of NBOs. Apart from ordering the NBOs differently, the two match to within the last decimal place. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1602:785,error,errors,785,https://psicode.org,https://github.com/psi4/psi4/pull/1602,1,['error'],['errors']
Availability,"## Description; This PR follows the change of PR #2064. To avoid compilation errors for any downstream packages, `Lagrangian()` and `X()` in the `Wavefunction` class have been marked deprecated instead of removing them. Future code should use lowercase `lagrangian()` and `set_lagrangian()` to obtain and set the orbital Lagrangian matrix (both C++ and Python), respectively. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2066:77,error,errors,77,https://psicode.org,https://github.com/psi4/psi4/pull/2066,2,"['down', 'error']","['downstream', 'errors']"
Availability,"## Description; This PR implements the partial Cholesky orthogonalization procedure I've recently described in https://arxiv.org/abs/1911.10372, which can be used to avoid pathological linear dependencies in the basis set. This is the simple version of the algorithm which just hides the pathological functions; the more sophisticated one is already available in ERKALE but it is limited to fixed geometries. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Partial Cholesky decomposition implemented; - [x] Calculation of basis function extents via `r^2` value implemented; - [x] Basis functions sorted so that steep ones get treated first by the decomposition. ## Questions; - [x] How to handle the sorting of basis functions in the presence of symmetry? AFAIK each SO basis functions is a superposition of identical functions on different atoms; this means that the corresponding symmetry-blocked `r^2` values could just be one of these.; - [x] Although matrix.cc already implements pivoted Cholesky, it's also available in LAPACK as `dpstrf()`. Maybe the implementation should be replaced with a call to LAPACK?; - [ ] Would it be possible to make Psi4 drop the irrelevant shells altogether from the basis set to make calculations more efficient? This would need to be done at every geometry... ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760:350,avail,available,350,https://psicode.org,https://github.com/psi4/psi4/pull/1760,2,['avail'],['available']
Availability,"## Description; This PR is an effort to move towards canonical C++11 usage: ; 1. it removes use of `new` when creating `std::shared_ptr`s in favor of `std::make_shared`.; 2. it uses `auto` on the left-hand side of the `std::shared_ptr` declarations.; 3. it replaces occurrences of `NULL`, signalling the null pointer, with `nullptr`.; These are changes suggested by the modern C++ best-practices and are explained in detail in Scott Meyers' [Effective Modern C++]. . ## Why?; #### Prefer `std::make_shared` to direct use of `new`; Using `std::make_shared`:; 1. Reduces code verbosity, especially when coupled with `auto`:; ```; std::shared_ptr<Matrix> F = std::shared_ptr<Matrix>(new Matrix(""Fock matrix"", nso, nso)); // Type information written down 3 TIMES!!!; std::shared_ptr<Matrix> F = std::make_shared<Matrix>(""Fock matrix"", nso, nso); // So much typing...; auto F = std::make_shared<Matrix>(""Fock matrix"", nso, nso); // Much better!!!!; ```; 2. Ensures exception safety and prevents resource leaks.; 3. Improves efficiency:; ```; // Performs TWO allocations; std::shared_ptr<Matrix> F = std::shared_ptr<Matrix>(new Matrix(""Fock matrix"", nso, nso)); ; // Performs ONE allocation; auto F = std::make_shared<Matrix>(""Fock matrix"", nso, nso); ; ```. _Reference_: Item 21 in [Effective Modern C++].; #### Prefer `auto` to explicit type declarations; Using `auto` reduces and/or avoids:; 1. Verbosity in variable declarations:; ```; std::shared_ptr<Matrix> F = std::make_shared<Matrix>(""Fock matrix"", nso, nso); // So much typing...; auto F = std::make_shared<Matrix>(""Fock matrix"", nso, nso); // Much better!; ```; 2. Problems with uninitialized variables. `auto` works like template type deduction, hence the right-hand side of the declaration **needs to have** an initializer:; ```; int x1; // fine, but initialized :(; auto x2; // WON'T COMPILE!!!; auto x3 = 1; // fine and initialized; ```; 3. Problems with unintended type casts and type mismatches that are hard to impossible to catch:; ```; s",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/836:746,down,down,746,https://psicode.org,https://github.com/psi4/psi4/pull/836,1,['down'],['down']
Availability,"## Description; This PR is designed to enable testing of a wide variety of combinations of `SCF_TYPE`, `SCF_SUBTYPE`, and `SCREENING` keywords available in Psi4. Of the currently-available JK tests, scf5 covers a wide variety of build methods, but only at a single screening type per method (density or csam, depending on the method). Meanwhile, `test_erisieve.py`, after the updates introduced in https://github.com/psi4/psi4/pull/2973, tests a wide variety of screening types, but with limited testing in conjunction with different JK builds (the only tests that don't use the Python interface of `TwoBodyAOInt` directly, use `SCF_TYPE=DIRECT` or `DF` as the JK method for screening comparisons). This leaves a lot of untested JK build+screening combos, which may be potentially broken and uncaught by the CI as a result. As a matter of fact, such cases actually do exist in the code currently (e.g., CompositeJK methods + no screening). This PR adds a new pytest module, `test_comprehensive_jk_screening.py`. It is effectively an expanded version of the scf5 test module, testing one of the scf5 systems (singlet oxygen) with the same basis set, but also including different screening methods and algorithmic subtypes available in Psi4. Screening is assumed to have an insignificant impact on energy within the tolerance used, so all screening types for a given method use the same reference energy. Some combinations of method and screening type throw an exception by design; this is accounted for in the test by testing that such combinations do indeed throw an exception as expected. Other combinations of method and algorithm are broken at the moment and error out; these are simply skipped for now. They are all logged in the same spot, and can and will be addressed in future PRs. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new pytest module to Psi4, `test_comprehensive_jk_screening.py` , to test different combinations of JK build algorithms and ERI ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2978:143,avail,available,143,https://psicode.org,https://github.com/psi4/psi4/pull/2978,2,['avail'],['available']
Availability,"## Description; This PR is intended to implement VV10 gradients and cache collocation matrices to prevent reconstruction every iteration. The VV10 gradient is on hold until I build a new Grid that uses only atom-centered blocks rather than blocks that possibly contain functions from multiple centers. This is due to the fact that the VV10 nuclear gradient has a component which requires a gradient with respect to centers and not just with respect to the density as there are explicit `1/r` dependance in the VV10 energy. ## Todos; - [x] Cache collocation matrices to remove DFT bottleneck for small molecules.; - [x] Figure out how many blocks to store based on available memory.; - [ ] Implement VV10 gradients; - [x] Orbital VV10 gradient piece implemented; - [ ] Nuclear VV10 gradient piece implemented; - [ ] A DFT Grid that uses only Atom centered blocks. ## Questions; - [ ] Anyone have thoughts on how to figure out how much memory JK and grid caching should receive?. Timing for a small molecule without a cache using TPSS (a MGGA):; ```; | UV: Form V : 22.583u 1.117s 13.702w 15 calls; | | Properties : 12.333u 0.883s 7.756w 10530 calls; | | Functional : 5.617u 0.033s 3.217w 10530 calls; | | V_xc : 4.400u 0.117s 2.567w 10530 calls; ```. With a cache:; ```; | UV: Form V : 13.750u 0.967s 8.316w 15 calls; | | Properties : 4.083u 0.783s 2.422w 10530 calls; | | Functional : 4.950u 0.000s 3.186w 10530 calls; | | V_xc : 4.383u 0.100s 2.564w 10530 calls; ```. Note DFT V matrix takes a good portion of JK time up to ~2k basis functions with our DF code, though this depends on the density of the grid. Cache sizes:. Grid (99, 302); ```; LDA - 6MB/atom; GGA - 24MB/atom; MGGA - 60MB/atom; ```. Grid (120, 590); ```; LDA - 16MB/atom; GGA - 48MB/atom; MGGA - 160MB/atom; ```. A cache of every block point seems to make the computation 40-80% faster. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/bui",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233:664,avail,available,664,https://psicode.org,https://github.com/psi4/psi4/pull/1233,1,['avail'],['available']
Availability,"## Description; This PR is the _first part_ of migrating EOM variables to the new standard for variable names, introduced in #2462. Among other things, the new standard gets rid of a longstanding grievance of TDC's: you no longer need to mix up all the irreps. This PR is content to migrate energy variable names. Other EOM variables go through `oeprop`, which will be a follow-up PR. A comprehensive test of EOM naming conventions is deferred to Pt. 2. This PR also contains misc. minor EOM cleanup I did while trying to understand the big picture of the code. More cleanup is possible, but you need to give EOM a wavefunction first, which is far outside the scope of this PR. Obligatory pings to @loriab and @lothian. ## Todos; - [x] Improve cc docs; - [x] Rename EOMCC energy variables to new standard ; - [x] Creates new EOM tag for tests . ## Checklist; - [x] All cc tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2475:689,ping,pings,689,https://psicode.org,https://github.com/psi4/psi4/pull/2475,1,['ping'],['pings']
Availability,"## Description; This PR is the first in a series of planned PRs designed to remove density screening from the TwoBodyAOInt object and into the JK object. Having density screening available in TwoBodyAOInt runs the risk of applying density screening to algorithms where density screening doesn't make sense. Thus, it would be a good idea to move the logic of density screening to where it is more correctly applied, i.e., the JK object. This PR solves two issues simultaneously:. 1. The primary purpose of this PR is to change the test_erisieve.py tests to work with the planned future density screening refactor. One issue that moving density screening from TwoBodyAOInt to JK currently brings up, is that it causes the tests on density screening within the pytest test_erisieve.py to fail. These failures occur because test_erisieve.py performs its screening tests directly using an ERI object generated by IntegralFactory. With density screening being removed from the TwoBodyAOInt object, this method of density screening testing can no longer be done. The current PR is designed to address this issue for when the density screening refactor happens. The aforementioned issue is addressed by implementing a new variable to the HF wavefunction, computed_shells_per_iter_, which keeps track of the number of shell quartets computed per SCF iteration. The computed_shells_per_iter_ variable is accessible to the user via Python, and thus can be used to conduct screening tests. In this way, density screening tests can be performed without the need for an ERI object. 2. As a bonus from the changes introduced by this PR, the DirectJK algorithm no longer has a need to print computed shell quartet counts to bench.dat. Bench.dat is used exclusively by the DirectJK object to dump the number of shell quartets computed per SCF iteration somewhere. That data is now accessible to the user in a cleaner fashion - it can be accessed through Python, in a manipulatable format. ## Notes; 1. Note that the ch",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2547:179,avail,available,179,https://psicode.org,https://github.com/psi4/psi4/pull/2547,2,"['avail', 'failure']","['available', 'failures']"
Availability,"## Description; This PR is the second in a series of planned PRs designed to remove density screening from the TwoBodyAOInt object and into the JK object, with PR #2547 being the first such PR. Having density screening available in TwoBodyAOInt runs the risk of applying density screening to algorithms where density screening doesn't make sense. Thus, it would be a good idea to move the logic of density screening to where it is more correctly applied, i.e., the JK object. The primary purposes of this PR are twofold:; 1. First, this PR introduce the shell_significant() framework to the JK class. The shell_significant() framework starts with a shell_significant() virtual function that exists in the base JK class. The shell_significant() function can then be redefined specifically for different JK derived classes as needed. The existence of shell_significant() provides a unified framework for performing screening for any JK method, and it also provides the method by which density screening can be added directly to the relevant JK classes.; 2. Second, this PR uses the shell_significant() framework to reimplement screening for certain JK methods. Most significantly, as implied in the first point, the biggest change in this regard was the removal of shell_significant_density() from TwoBodyAOInt into the domain and its reimplementation into the DirectJK shell_significant() definition. With this change, density screening is now the domain of individual JK classes rather than the TwoBodyAOInt class, which was one of the primary goals of this overall refactor PR set in the first place. Additionally, another method that was subject to slight changes from the shell_significant() framework was the Yoshimine PKJK algorithm, in which its test for shell significance was implemented using the shell_significant() framework. ## Notes; I wanted to outline what the next steps were for this chain of PRs, since this one accomplishes one of the main goals of the refactor in the first place:;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2695:219,avail,available,219,https://psicode.org,https://github.com/psi4/psi4/pull/2695,1,['avail'],['available']
Availability,## Description; This PR migrates 8 of the `cc` tests from using `autotest` to using standard `compare_values`. The 13 `cc` tests that still use `autotest` are all more delicate (usually because they involve properties) and are deferred to another PR. This PR handles the easy cases. This is PR 3 in an ongoing series to make `ccdensity` compatible with the standard `Matrix` and `Wavefunction` machinery used elsewhere in Psi. Review requested from Lori for all things testing. Obligatory @lothian ping. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2440:498,ping,ping,498,https://psicode.org,https://github.com/psi4/psi4/pull/2440,1,['ping'],['ping']
Availability,"## Description; This PR moves the `dfocc` technology for density-fitted gradients out of `dfocc` and into the `libmints` module for use by other modules. Obligatory @jturney and @loriab pings. **Q:** Can other modules use this code?; **A:** I can personally promise that `dct` will be using this soon, and Forte can use this for its DF-CASSCF gradients. If you want to use this code, just send me a message! However, the other modules in Psi that currently support DF gradients shouldn't use this. The range-separated gradients mean that SCF can't use this, and DFT gradients are varied enough anyways that we shouldn't try to generalize them. Rob's DFMP2 implementation separates out the Coulomb and Exchange contributions from the derivative. The Coulomb terms allow a performance optimization which prevents this generalized solution from applying. **Q:** Do we _really_ need to create a `compute_df` function separate from `compute` for gradients?; **A:** I'd say yes, for two reasons. First, in the DF case, it's not obvious which DF integrals you're using (`df_basis_scf` is probably one, but is the other `df_basis_mp`, `df_basis_dct`, `df_basis_cc`?), so you need to explicitly supply this. One can imagine ways to circumvent this, but those require other infrastructure changes. Second, the `compute` function is rather complicated due to its use of three different ""algorithms"". Combining the two functions would make them more complicated. Simplifying the `compute` function, while an important task and one I will probably need to do before I can fully put my graduate projects behind me, is outside of the scope of this PR. Do you _really_ want to review something even larger?. **Q:** How stable is the interface?; **A:** Changes aren't _necessary_, and I plan to keep this stable at least until after the `dfocc` resync. However, I may make some interface changes if I find they're convenient for non-`dfocc` modules that use this. The big change I'm considering is taking the `dfmp2` a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2079:186,ping,pings,186,https://psicode.org,https://github.com/psi4/psi4/pull/2079,1,['ping'],['pings']
Availability,"## Description; This PR provides a more useful error message when the issue described in https://github.com/psi4/psi4/issues/2890 is encountered. In short, the COSX K build method breaks with certain grid configurations - specifically, grid configurations which result in negative grid weights. How to best handle that issue - removing such grid configurations from Psi4 entirely, handling negative grid weights differently within COSX itself - is still under discussion, and this PR is _not_ meant to be a final fix to the aforementioned issue. Rather, this PR is meant to provide a more informative error message in the case that an end user _does_ encounter this error. Currently, when this error is encountered, it shows up as either a DGESV error (if the initial COSX grid has negative weights) or an ADIIS minimization error (if the final COSX grid has negative weights). These error outputs don't help the end user figure out what is wrong at all. So, what this PR does, is add sanity checks to ensure that the COSX grids don't have negative weights, and throw an exception if they do. The sanity check exceptions explain to the user what the error is and how they can fix it (i.e., changing the grid pruning scheme and/or number of spherical points). Again, I want to emphasize that this is _not_ intended to be a full fix to https://github.com/psi4/psi4/issues/2890. Rather, it is an intermediate step that is designed to better help end users avoid the problem if they run into it themselves. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Add sanity checks to COSX to ensure that neither of the COSX grids have negative grid weights. An exception is thrown if either of the grids do. ## Questions; - [x] Probably better discussed on https://github.com/psi4/psi4/issues/2890, but how do we want to officially solve this problem? There has been some discussion on simply removing grid configurations which lead to negative weights, as well as discussions on reformulati",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906:47,error,error,47,https://psicode.org,https://github.com/psi4/psi4/pull/2906,7,['error'],['error']
Availability,"## Description; This PR provides access to T1/T2 python side for other packages using psi4 as a library. Amplitudes will be available for symmetry C1 calculations only as the numpy shape on the T2 matrices can't be set correctly (This is similar to how mintshelper does not provide bindings for SO basis ERIs). All spin combinations of T1/T2 wil be loaded into memory, so you do not want to use this method when there is not enough memory to hold these quantities in core. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] UHF ; - [x] RHF; - [x] ROHF; - [x] Check that nirrep > 1 will raise meaningful errors. ## Checklist; - [x] UHF Test; - [x] RHF Test; - [x] ROHF Test. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1344:124,avail,available,124,https://psicode.org,https://github.com/psi4/psi4/pull/1344,2,"['avail', 'error']","['available', 'errors']"
Availability,"## Description; This PR refactors the existing `PseudospectralInts` (untested, unused, but maybe needed at some point, see #2414); with some refactoring: The ""old"" `PseudospectralInts` did compute `<p| 1/R |q>` *or* `<p| erf(omega*R)/R |q>` with `R = |r -r_c|` for some given point/origin `r_c`. . - The class `PseudospectralInts` is removed. To compute the ""normal"" Coulomb potential at a given origin, one can use either `MultipolePotentialInt` (with `max_k=0`) *OR* `ElectrostaticInt`.; - To compute the erf-attenuated Coulomb potential, I created a new class named `PotentialErfInt` to better reflect the actual ""property integral"" being computed. For testing purposes, I also added the erfc-attenuated Coulomb potential (`PotentialErfComplementInt`), maybe they're also useful at some point. Both use L2 under the hood.; - The point `r_c` is canonically set with `set_origin`.; - I've added the new integrals to `MintsHelper` and the Python API.; - Tests are added. (`erf(infinity*R)/R = 1/R`, `erfc(0*R)/R = 1/R`, and `1/R - erf(R)/R - erfc(R)/R = 0`). This is a preparation to get rid of most of the remaining OS86 code as discussed in #2414.; Ping @loriab @zachglick @andysim . ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2473:1151,Ping,Ping,1151,https://psicode.org,https://github.com/psi4/psi4/pull/2473,1,['Ping'],['Ping']
Availability,"## Description; This PR removes some convergence checks in the `dct` module that are redundant (when formulated correctly) and currently not implemented correctly. In the current `dct` code, my threaded computations with near linear dependencies were taking a variable number of iterations to converge, due to the condition `update_scf_density_RHF() < orbitals_threshold_` being false. That check is _intended_ to enforce convergence of the orbitals, which change iteration-to-iteration. `update_SCF_density_RHF` returns a measure of how much the reference density changed but does not treat it with an orthogonalizer, so in the near linearly-dependent case, numerical noise leads to the computation proceeding even after all other convergence metrics are flat. Given the choice between fixing the check or removing it, this PR removes it.; * In the case where orbitals are optimized to _satisfy a commutator equation_, all of our orbital convergence metrics are motivated by SCF. We already have the SCF check for small orbital residual elsewhere in the code. We don't check that the absolute change in the density is small in the SCF case, so we shouldn't check it here, either.; * In the case where orbitals are optimized to _minimize the energy_, there is no theoretical justification for this check. We have existing checks that the residual of the orbital gradient is small. ## Todos; - [x] Removes an unnecessary, buggy `dct` convergence metric. ## Checklist; - [x] `dct` tests still pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2381:85,redundant,redundant,85,https://psicode.org,https://github.com/psi4/psi4/pull/2381,1,['redundant'],['redundant']
Availability,"## Description; This PR replaces all def2 jfit sets with the universal jfit sets from the Basis Set Exchange, and the jkfit sets with the universal jkfit set. At present, there are some inconsistencies between the jfit sets; ```; b=( def2*jfit.gbs ); for((ib=0;ib<${#b[@]};ib++)); do for((jb=0;jb<ib;jb++)); do echo -n ""${b[ib]} vs ${b[jb]}: ""; diff ${b[ib]} ${b[jb]}| wc -l;done;done; def2-qzvpp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-sv_p_-jfit.gbs vs def2-qzvp-jfit.gbs: 101; def2-sv_p_-jfit.gbs vs def2-qzvpp-jfit.gbs: 54; def2-svp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-svp-jfit.gbs vs def2-qzvpp-jfit.gbs: 0; def2-svp-jfit.gbs vs def2-sv_p_-jfit.gbs: 54; def2-tzvp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-tzvp-jfit.gbs vs def2-qzvpp-jfit.gbs: 0; def2-tzvp-jfit.gbs vs def2-sv_p_-jfit.gbs: 54; def2-tzvp-jfit.gbs vs def2-svp-jfit.gbs: 0; def2-tzvpp-jfit.gbs vs def2-qzvp-jfit.gbs: 47; def2-tzvpp-jfit.gbs vs def2-qzvpp-jfit.gbs: 0; def2-tzvpp-jfit.gbs vs def2-sv_p_-jfit.gbs: 54; def2-tzvpp-jfit.gbs vs def2-svp-jfit.gbs: 0; def2-tzvpp-jfit.gbs vs def2-tzvp-jfit.gbs: 0; ```; and the jkfit sets as well; ```; b=( def2*jkfit.gbs ); for((ib=0;ib<${#b[@]};ib++)); do for((jb=0;jb<ib;jb++)); do echo -n ""${b[ib]} vs ${b[jb]}: ""; diff ${b[ib]} ${b[jb]}| wc -l;done;done; def2-qzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 4; def2-sv_p_-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1727; def2-sv_p_-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1723; def2-svp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvpp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvpp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvpp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-tzvp-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1804:311,echo,echo,311,https://psicode.org,https://github.com/psi4/psi4/pull/1804,1,['echo'],['echo']
Availability,"## Description; This PR strives to implement an interface of psi4 to the [ddX library](https://github.com/ACoM-Computational-Mathematics/ddX), which implements solvation models (COSMO, PCM, linearised Poisson-Boltzmann) following a domain-decomposition approach. At its current stage I open the PR to get some feedback from devs about the suggested changes and structure and to finalise the upstream python interface of ddX. Note that this PR Is currently deliberately done on top of an outdated master, since any commit after #2388 introduces segfaults (details see below), which so far I have not yet been able to trace down. Any help on that would be much appreciated. ## User API & Changelog headlines; - Implementation of PCM and COSMO solvation models based on the ddx library. ## Dev notes & details; - Introduction of a NumIntHelper class to compute some integrals numerically using a DFT grid; - Introduction of ddx solvation model and new ddx options. ## Reproducer for the mysterious segfault; As part of rebasing against the current master I encountered a really strange segfault. I managed to produce a minimal example, which has really nothing to do with ddx and only adds a python interface to a simple numerical electrostatic integral. See here for a [trimmed-down diff](https://github.com/psi4/psi4/compare/master...mfherbst:psi4:segfault). On my machine checking out this `segfault` branch with `0_configure.sh`, building and running the `mytests/runtests.sh` script gives a segfault inside the numerical integration in the `PCMPotentialInt` class. Note that the code I added *is not even called*, the call to `PCMPotentialInt` happens from the pcm code *which I have not modified*. Now, commenting out; ```c++; PrintIntegralsFunctor printer;; potential_integrals_->compute(printer);; ```; the segfault disappears. I'm getting the weird feeling I'm doing something really stupid here and I just missed it. ## Questions; - [x] Thoughts on the NumIntHelper?; - [x] Is D -> D_cart neede",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767:622,down,down,622,https://psicode.org,https://github.com/psi4/psi4/pull/2767,1,['down'],['down']
Availability,"## Description; This PR was motivated by a comment by @andyj10224 in PR https://github.com/psi4/psi4/pull/3150, pointing out that implementing method-specific setters/getters in `SplitJK` could more elegantly and sensibly be performed via downcasting. While the comment in that PR addressed knobs specific to `snLinK`, it is also applicable to other methods within the CompositeJK framework. This PR fixes that, replacing all instances of method-specific setters/getters in the base `SplitJK` class with downcasting to call the needed function at the derived-class level. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Renames `COSK::set_COSX_grid` and `COSK::get_COSX_grid` functions to `COSK::set_grid` and `COSK::get_grid`, respectively.; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions. . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Removes `SplitJK::set_COSX_grid` and `SplitJK::get_COSX_grid` functions, localizing their presence to the `COSK` class.; - [X] Replaces utilizations of the above with usage of downcasting in the `CompositeJK::set_COSX_grid` and `CompositeJK::get_COSX_grid` functions. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3183:239,down,downcasting,239,https://psicode.org,https://github.com/psi4/psi4/pull/3183,3,['down'],['downcasting']
Availability,"## Description; This autobuilds the docs and deploys them to a netlify site, https://psi4manual.netlify.app/index.html. It also starts correcting all the format and bad link warnings. Started with ~300 and down to 15, so ready to start reviewing. Once clean, we can turn on warnings->errors and avert future beaks. This hasn't started looking at docs content, only docs format errors. No linkchecker run yet either. GHA-wise, this is for every master commit. There'll be other GHA to run similarly on PRs so that ppl can preview docs changes or note when changes broke docs. But that'll need different permissions. This seems a good place to start. I don't think this needs minute review -- save your energies for real code. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Any rst files added that I shouldn't have?. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge SQUASH",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2144:206,down,down,206,https://psicode.org,https://github.com/psi4/psi4/pull/2144,3,"['down', 'error']","['down', 'errors']"
Availability,"## Description; This code is an implementation of the CFMM Method (C.A. White et. al 1994) for linear-scaling building of the J matrix, used in HF, DFT, and SAPT. Reference Paper: https://www.sciencedirect.com/science/article/pii/0009261494011281. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implements a Low Scaling J matrix build that is competitive with traditional DirectJK J matrix build, giving a complementing linear scaling algorithm to Linear Exchange (LinK).; - [x] Implements a new and more efficient multipoles library in Psi4 (in libfmm as multipoles_helper). ## Questions; - [ ] Do we need to make a new JK class to handle new methods like CFMM and LinK? (Like LinearJK : public JK). ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge. ## Data; (Comparing the J build in CFMM (Waterclusters, 6-31G*) to a traditional DirectJK build of the J and K matrices); ![Comparative CFMM Watercluster Results 10-02-2021](https://user-images.githubusercontent.com/60559795/135762894-9a9eb837-731e-4f12-92d7-932b4918c602.png). (Looking at the CFMM errors over system size (using multipole order 10, only considering systems that converge within 8 iterations); ![CFMM Errors (New CFMM Code)](https://user-images.githubusercontent.com/60559795/135762954-e672f7cb-e818-439a-b2bf-3d84dc1aaa7e.png). (Looking how the CFMM total J time compares to the total wall time [No LinK is used]); (NOTE: The near field calculations take up a majority of the J build time, as multipoles are relatively free); ![CFMM Watercluster Results 10-02-2021](https://user-images.githubusercontent.com/60559795/135762959-71ec2078-79bc-48d8-b418-5689f1045e48.png)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2311:1311,error,errors,1311,https://psicode.org,https://github.com/psi4/psi4/pull/2311,2,"['Error', 'error']","['Errors', 'errors']"
Availability,"## Description; This is No. 5 of the DDD series, #1351. ## Todos; - [x] Add `psi4 --module` for find pymod. qcng already tries to use it; - [x] Add another mode to `prepare_options_for_modules` that instead of figuring out what options are active in a module (mediated mode, used previously for sow/reap, I think) now records the settings for reset (state mode, used in DDD). Added a context manager to ""hold and restore"" the options state.; - [x] Add `run_qcschema(..., postclean)` option that handles the trouble when this is called *from Psi4* of deleting the parent session's output file.; - [x] Be tolerant of missing files when cleaning numpy files. I don't remember why/if this was necessary, but on the whole, a missing numpy file isn't worth erroring on.; - [x] Aboid extra '/' in paths from psio. I don't remember if this was fixing an error or just aesthetic.; - [x] docstrings; - [x] ADDED: another attempt to fix Win conda package. ## Checklist; - [x] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2530:603,toler,tolerant,603,https://psicode.org,https://github.com/psi4/psi4/pull/2530,3,"['error', 'toler']","['error', 'erroring', 'tolerant']"
Availability,"## Description; This is a first step towards DFT Hessians. The code seems to be correct based on initial tests, but this needs a lot more stress testing. The emphasis here is correctness over efficiency, and I just want to get all of the nasty CPKS infrastructure in place before worrying about making it fast and memory efficient. The symmetric stretch of water is off by 2.8cm-1 (less than 1%), but there are a number of possible causes: 1) noise in the finite difference reference, which is unlikely given my experiments with 5 point FDs and different step sizes 2) the lack of grid weight derivatives, also unlikely because the error doesn't decrease when I use a huge grid 3) the filtering of the functional derivatives in areas of small density. I think number 3) is most likely, but it's also possible that there's something wrong in the code still. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Adds analytic DFT hessians for LSDA functionals (RKS wavefunctions only). ## Questions; - [x] How should we handle the procrouting? We could explicitly list all LSDA type functionals, but that would not be good for custom functionals. I'm sure there's a better way that I'm just not familiar with. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run]; ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1664:632,error,error,632,https://psicode.org,https://github.com/psi4/psi4/pull/1664,1,['error'],['error']
Availability,"## Description; This is a more elegant solution to the test failures fixed in #2445. When doing ADIIS/EDIIS, you need to solve a constrained quadratic programming problem. Hu and Yang's ADIIS paper solved the equations by doing a change of variables and throwing the problem at BFGS. Instead, I threw the constrained problem at SLSQP, which is naturally able to incorporate these constraints. All tests pass with no modifications now, and not including the variable transformation simplifies the equations. _What About Other Packages?_; PySCF follows Hu and Yang, and it isn't consistently able to solve the equations. Our friends at HORTON have [a custom solver for such problems](https://github.com/theochem/horton/blob/master/horton/meanfield/scf_ediis.py#L137-L150), but as this problem isn't positive or negative semi-definite, their solver is on the expensive side. ## Checklist; - [x] Passes `ctest` locally. Test suite will cover `pytest. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2449:60,failure,failures,60,https://psicode.org,https://github.com/psi4/psi4/pull/2449,1,['failure'],['failures']
Availability,"## Description; This is a part of *Psi4* porting to Windows (#933). The last element of `array` is `array[n-1]`, so the access of `array[n]` is not correct:; https://github.com/psi4/psi4/blob/62bb956ccfb38cad1bef7e6227aac70ddb1172f7/psi4/src/psi4/libmoinfo/moinfo_base.cc#L281-L285; It is better to use pointer arithmetics: `array + n`. This is not a bug, just it gives a false positive in memory error detection. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix memory error in `MOInfoBase::convert_int_array_to_vector`. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1480:397,error,error,397,https://psicode.org,https://github.com/psi4/psi4/pull/1480,2,['error'],['error']
Availability,"## Description; This is a part of *Psi4* porting to Windows (#933). The size `ref_wfn.frzcpi()` is not `nirreps_ref` in `psimrcc-fd-freq2` test:; https://github.com/psi4/psi4/blob/5c0e495bdd3042795d8e39fe250ec153c4d236e9/psi4/src/psi4/libmoinfo/moinfo.cc#L257; It makes `convert_int_array_to_vector` to access invalid memory. In the past, I replaced `nirreps` with `nirreps_ref` to solve another problem #1427 and this one became visible after fixing #1480. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Demonstrate a memory error in `psi::MOInfo::read_mo_spaces`; - [x] Fix the memory error in `psi::MOInfo::read_mo_spaces`. ## Questions; - [x] I'm lacking enough understanding of the code to fix, so just highlighting the problem. Who could help?. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1521:577,error,error,577,https://psicode.org,https://github.com/psi4/psi4/pull/1521,2,['error'],['error']
Availability,"## Description; This is a part of *Psi4* porting to Windows (#933). The size of `aQT_` is `nmo_`. In `cookbook-rohf-orb-rot` test, `aPitzerCount` exceeds it:; https://github.com/psi4/psi4/blob/96296f1e3740b348bd207aa2ed0e3568e723a5a1/psi4/src/psi4/libtrans/integraltransform_moinfo.cc#L209-L212. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Demonstrate memory error in `psi::IntegralTransform::process_spaces`; - [x] Fix memory error in `psi::IntegralTransform::process_spaces`. ## Questions; - [x] I don't know how to fix this, just highlighting the problem. Who could help? . ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1488:413,error,error,413,https://psicode.org,https://github.com/psi4/psi4/pull/1488,2,['error'],['error']
Availability,"## Description; This is a part of Psi4 porting to Windows (#933). `tensor_rr` is `double***`, so it needs double dereferencing to have a pointer to data: ; https://github.com/psi4/psi4/blob/c9be896dd4b4c550b6f7ac792cf11a1274a9a038/psi4/src/psi4/cc/ccresponse/roa.cc#L238; I guess, it should be like here:; https://github.com/psi4/psi4/blob/c9be896dd4b4c550b6f7ac792cf11a1274a9a038/psi4/src/psi4/cc/ccresponse/roa.cc#L289. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix memory error in `psi::ccresponse::roa`. ## Questions; - [x] I don't real know what that part of code is doing. The fix has to be verified by someone who does. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1476:531,error,error,531,https://psicode.org,https://github.com/psi4/psi4/pull/1476,1,['error'],['error']
Availability,"## Description; This is a start to addressing #2272 . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] `MBIS_CHARGES` and `MBIS_VOLUME_RATIOS` are now separate oeprop tasks to the user but still reusing code.; - [ ] `oeprop(wfn, ""MBIS_VOLUME_RATIOS"")` should be fine (indep oeprop fn), but `set scf_properties mbis_volume_ratios; energy(""scf"")` will still fail as #2272 reported because those are `OEProp` class instantiations called from proc.py, and the free atom volumes aren't available. The oeprop.cc code could exit gracefully when free atom volumes aren't available, but having different properties lists for the two calling routes isn't good.; - [ ] so why not add the loc from oeprop() to `OEProp`s in proc.py so that atom volumes are available? nice thought, but the fn that produces them itself calls oeprop() and energy() and descends into endless recursion. I haven't sought the logic that makes this all work together.; - [ ] add tests. probably some of the existing ones will break for only calling one mbis property but checking volrat. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2273:539,avail,available,539,https://psicode.org,https://github.com/psi4/psi4/pull/2273,3,['avail'],['available']
Availability,"## Description; This is an intermediary PR to https://github.com/psi4/psi4/pull/3060. Reviews on that PR have made me reconsider some design decisions as implemented in that PR. At the same time, I want to ensure that no end user runs into any hard failures due to broken `SCF_TYPE` + `SCF_SUBTYPE` + `SCREENING` combinations in v1.9. So this PR goes and simply throws exceptions for every hard failure case as logged in `test_comprehensive_jk_screening.py`. Tests are updated to match, and there's some small refactoring of how JK type + screening exceptions are handled in `jk.cc.` . ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [x] Broken combinations of `SCF_TYPE` + `SCF_SUBTYPE` + `SCREENING` now throw an exception, instead of running to failure. ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3081:249,failure,failures,249,https://psicode.org,https://github.com/psi4/psi4/pull/3081,3,['failure'],"['failure', 'failures']"
Availability,## Description; This is part of *Psi4* porting to Windows (#933). ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [ ] Fix memory error in `psi::sapt::SAPTDFInts`; - [ ] Fix memory error in `psi::sapt::Iterator`; - [x] Update passing Windows tests. ## Checklist; - [x] ~~Tests added for any new features~~; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1238:175,error,error,175,https://psicode.org,https://github.com/psi4/psi4/pull/1238,2,['error'],['error']
Availability,"## Description; This is part of *Psi4* porting to Windows (#933). ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix a filesystem error in `psi.driver.cbs`. Windows does not support `*` in filenames.; - [x] Fix `cbs-parser` test on Windows. ## Questions; - [x] How *Psi4* is suppose to sanitize filenames? Have I missed some function? --> That suppose to be removed in 1.4, so just a quick fix for now. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1442:181,error,error,181,https://psicode.org,https://github.com/psi4/psi4/pull/1442,1,['error'],['error']
Availability,## Description; This is part of *Psi4* porting to Windows (#933). ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix vector indexing error in `psi::IntegralTransform::process_spaces`; - [x] Update passing Windows tests. ## Questions; - [x] The offending line is commented out. Does a more sophisticated fix is need here? --> @andysim will find a better fix. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220:184,error,error,184,https://psicode.org,https://github.com/psi4/psi4/pull/1220,1,['error'],['error']
Availability,## Description; This is part of *Psi4* porting to Windows (#933). ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix vector indexing error in `psi::PKMgrDisk::batch_sizing`; - [x] Update passing Windows tests. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237:184,error,error,184,https://psicode.org,https://github.com/psi4/psi4/pull/1237,1,['error'],['error']
Availability,"## Description; This is part of *Psi4* porting to Windows (#933). ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Repeat `ci-property` test to catch random failures; - [x] Remove memory error in `psi::MultipolePropCalc::compute_mo_extents`.; - [x] Fix `ci-property` test on Windows. ## Questions; - [x] Removed some dead code, including the part with `C_DDOT`, which was segment-faulting. Could you check, it was really a dead code, not some incomplete implementation? --> Dead!. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1440:206,failure,failures,206,https://psicode.org,https://github.com/psi4/psi4/pull/1440,3,"['error', 'failure', 'fault']","['error', 'failures', 'faulting']"
Availability,## Description; This is part of *Psi4* porting to Windows (#933). ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Switch MSVC to LLVM compiler; - [x] Fix linkage errors; - [x] Update passing Windows tests. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264:212,error,errors,212,https://psicode.org,https://github.com/psi4/psi4/pull/1264,1,['error'],['errors']
Availability,"## Description; This is part of *Psi4* porting to Windows (#933). From MKL 2019.0, the packaging of Windows packages has changed. Import libraries (.lib) have been moved to separate `mkl-devel` package (https://github.com/ContinuumIO/anaconda-issues/issues/10154), which follows the changes in Intel channel (https://anaconda.org/intel). The same happened to `intel-openmp`, but `intel-openmp-devel` package has not been created. *Clang* needs an import library `libiomp5md.lib` to link with `libiomp5md.dll`. Interestingly, MKL installer from *Intel* (https://software.intel.com/en-us/mkl/choose-download/windows) has that library. This obsoletes #1408 . ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix the missing Intel OpenMP import file; - [x] Update to MKL 2019.1; - [x] Improve CMake message. ## Questions; - [x] This is hackish, but makes things to work. Ideally, we need `intel-openmp-devel`, so hopefully *Intel* decides to make it. ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1571:597,down,download,597,https://psicode.org,https://github.com/psi4/psi4/pull/1571,1,['down'],['download']
Availability,## Description; This is part of *Psi4* porting to Windows (#933). The problem was already reported in #1255. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix a memory error in `psi::MOInfo::read_mo_spaces`; - [x] Fix `psimrcc-fd-freq2` test on Windows. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1427:220,error,error,220,https://psicode.org,https://github.com/psi4/psi4/pull/1427,1,['error'],['error']
Availability,"## Description; This is part of *Psi4* porting to Windows (#933). `EaT_RHF.cc` and `ET_RHF.cc` contain incompatible declarations of `psi::cctriples::thread_data`. During compilation, templates (i.e. `std::vector<psi::cctriples::thread_data>`) are generated once and reused, while memory access instructions to `psi::cctriples::thread_data` are generate at each translation unit. That results into an overflow:; ```; ==29447==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60800007a380 at pc 0x7fa994502627 bp 0x7fffc3cb6560 sp 0x7fffc3cb6558; WRITE of size 4 at 0x60800007a380 thread T0; #0 0x7fa994502626 in psi::cctriples::EaT_RHF() /home/raimis/prj/psi4.git/psi4/src/psi4/cc/cctriples/EaT_RHF.cc:206; #1 0x7fa993ee2cec in psi::cctriples::cctriples(std::shared_ptr<psi::Wavefunction>, psi::Options&) /home/raimis/prj/psi4.git/psi4/src/psi4/cc/cctriples/triples.cc:154; #2 0x7fa993dfd890 in psi::cclambda::CCLambdaWavefunction::compute_energy() /home/raimis/prj/psi4.git/psi4/src/psi4/cc/cclambda/cclambda.cc:324; #3 0x7fa9937cfa84 in py_psi_cclambda(std::shared_ptr<psi::Wavefunction>) /home/raimis/prj/psi4.git/psi4/src/core.cc:382; #4 0x7fa9938b8a3c in std::shared_ptr<psi::Wavefunction> pybind11::detail::argument_loader<std::shared_ptr<psi::Wavefunction> >::call_impl<std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::Wavefunction> (*&)(std::shared_ptr<psi::Wavefunction>), 0ul, pybind11::detail::void_type>(std::shared_ptr<psi::Wavefunction> (*&)(std::shared_ptr<psi::Wavefunction>), std::integer_sequence<unsigned long, 0ul>, pybind11::detail::void_type&&) /home/raimis/opt/conda/envs/psi4/include/python3.6m/pybind11/cast.h:1874; #5 0x7fa9938a441c in std::enable_if<!std::is_void<std::shared_ptr<psi::Wavefunction> >::value, std::shared_ptr<psi::Wavefunction> >::type pybind11::detail::argument_loader<std::shared_ptr<psi::Wavefunction> >::call<std::shared_ptr<psi::Wavefunction>, pybind11::detail::void_type, std::shared_ptr<psi::Wavefunction> (*&)(std::shared_ptr<psi::Wa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1438:425,ERROR,ERROR,425,https://psicode.org,https://github.com/psi4/psi4/pull/1438,1,['ERROR'],['ERROR']
Availability,## Description; This is part of Psi4 porting to Windows (#933). ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fix hard-code paths; - [x] Guard against importing not available packages . ## Checklist; - [x] ~~Tests added for any new features~~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091:234,avail,available,234,https://psicode.org,https://github.com/psi4/psi4/pull/1091,1,['avail'],['available']
Availability,"## Description; This is the make-dfocc-work-reliably and bring-dfocc-testing-to-normal-level step of mega-dfocc-remp. All the former by @behnle. ~**REVIEW COMMIT 3 ONLY** I'll get the first two merged and out of the way shortly.~. This is PR No. 3 in the mega-dfocc-remp series. ## Todos; - [x] no new methods; - [x] coupled DIIS ported from OCC! fixes #2215. now dfocc can be converged tightly enough that 5-pt findif gradient matches analytic gradient; - [x] potential integer overflows fixed which may lead to wrong memory demand estimates for large molecules; - [x] stdsuite testing added for plain RHF DF/CD a-ccsd(t) energies and DF/CD energies and DF gradients for OO methods omp2, omp2.5, omp3, & olccd. attendantly, qcvar handling in the managers brought up to modern standards, with most saving on wfn, and freebie methods saved and checked; - [x] update run_dfocc in driver to dict/director syntax (works b/c `cc_lambda_` now set in dfocc.cc) and uniform P::e/wfn handling of qcvars; - [x] tightened convergence so that default conditions match values to 1e-6; - [x] tightened base rms_mograd_convergence from 4 to 6.5 for oo methods (matches occ, which had to be tightened from 6 to 6.5); - [x] tightened r_convergence to same on the basis of e_conv for non-oo methods; - [x] added an extra check that difference in orbitals at convergence not too big a step. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2669:44,reliab,reliably,44,https://psicode.org,https://github.com/psi4/psi4/pull/2669,1,['reliab'],['reliably']
Availability,"## Description; This produces a docs build with no warnings or errors, either overt (`make html -W`), external links (`make linkcheck`), or internal links (`make html -n`). requires a qcel docs update. hopefully this will provide a clean docs base moving forward. This PR is the controversial part of the docs technical refresh. I think there was some technical debt left over from the 2016 inversion in the module structure of the driver. What I think was happening was that the `psi4/driver/driver.py` was the nexus, and any wrappers or utilites that it happened to import became the API. The folder psi4/driver didn't really function as a module, and any `psi4.driver` was referring to driver.py, not psi4/driver/. Then for psithon, a few extras like frac got added in in the import preamble. Only problem with the structure (besides ppl who know python finding it irregular) is that it made some functions in the driver impossible to access (i.e., run `help()` on) and link to in the docs. https://towardsdatascience.com/whats-init-for-me-d70a312da583 outlines a few strategies for structuring python packages. There's the mostly-toplevel strategy of numpy (https://github.com/numpy/numpy/blob/main/numpy/__init__.py#L150-L156 and https://github.com/numpy/numpy/blob/main/numpy/core/__init__.py#L72-L90) and the subpackage strategy of scipy (https://github.com/scipy/scipy/blob/master/scipy/__init__.py and https://github.com/scipy/scipy/blob/master/scipy/optimize/__init__.py#L400-L423). I don't have a clear vision on how to do the driver right for psi4, but i've followed the numpy approach of both building up the top-level deliberately with `__all__` and building out the namespaced structure (`from . import x`), and it's doing what the docs linking needs, and I think it's more rational and provides much better coverage for the API docs. Also allows the only difference btwn psithon and psiapi to be whether `core.*` are at top-level. The only tests that have needed change are ""cookbook"" ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2166:63,error,errors,63,https://psicode.org,https://github.com/psi4/psi4/pull/2166,1,['error'],['errors']
Availability,"## Description; This pull request aims to properly update energy, orbital energies, densities etc of the wave function for (conventional and density-fitted Mp2) and density-fitted CCSD calculations, so as to ensure proper checkpointing using FCHK interface. ; Also, there seems to be a problem in using FCHKWriter for conventional mp2 gradient calculations as I get a segmentation fault. This PR is meant to fix these problems which was pointed out by abdale on the psi4 forum. http://forum.psicode.org/t/problems-with-wavefunction-object-and-fchk-interface/532. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/747:222,checkpoint,checkpointing,222,https://psicode.org,https://github.com/psi4/psi4/pull/747,2,"['checkpoint', 'fault']","['checkpointing', 'fault']"
Availability,"## Description; This separates all the additional Molecule work, including py-side parsing, out from the py-side SCF/PCM/EFP PR. I recommend this go into 1.2 so that 1.2 Mol isn't half-baked. This **does not switch Mol parsing py-side**. I can, but that's an extra step to pull out of py-side SCF/PCM/EFP and a more drastic change to Psi. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] `qcdb.Molecule` constructor learned to take, str (psi4, xyz, xyz+, psi4+), dict, or arrays and pass things on to `from_string`, `from_dict`, or `from_arrays` accordingly. In fact, these fns are simply different entry points. `from_arrays` validates arguments then calls `from_dict`. `from_string` parses into arrays then calls `from_arrays`. The three `from_*` methods are also available for `psi4.core.Molecule` (completely bypassing `create_molecule_from_string`), but the primary c-side Mol constructor in molutil.py is still using `c_m_f_s`.; - [x] py-side & c-side Molecule & CoordEntry classes learned `A` or `mass_number`. Pretty much this is a pass-through/holder slot for info populated in PQ Mol JSON. `set_mass` voids `A`.; - [x] `*.Molecule` learned `add_unsettled_atom` for adding `ZMatrixEntry`s analogous to `add_atom` `CartesianEntry`s for the zmat extension.; - [x] `qcdb.BasisSet.pyconstruct` learned to act on anything it can make a `qcdb.Molecule` of: Mol, str, or dict. It also learned to return BasisSet object or dict based on `return_dict` value, not on type of molecule-ish entity passed in.; - [x] changed some output unit labels to be more specific or use known abbr; - [x] In keywords (`read_options`), remove global `UNITS` since unused and covered by Mol parser; - [x] Write `.hess`, `.normal_modes_molden`, and a proto-JSON for vib/thermo analysis py-side. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.ht",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/965:832,avail,available,832,https://psicode.org,https://github.com/psi4/psi4/pull/965,1,['avail'],['available']
Availability,"## Description; This should follow directly after #1393 (for the moment, includes it) because otherwise users will get all the deprecation warnings not only from their own input files but from the driver itself. Think of how many times `get_variable` is called, and you'll see the magnitude. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] updates syntax py-side and c-side and example-side so that if all the deprecated functions went away (obviously, this is how I tested it), Psi4 would still work nicely. ## Notes; - snsmp2 raises a warning b/c it's using the `get_variable`. but that's the purpose of deprecation warnings -- to allow downstream to exist with multiple versions of upstream.; - I'll still need to investigate whether the ""culprit line"" is right, given our psithon/psiapi and namespace promotion complications. ## Checklist; - [ ] ~Tests added for any new features~; - [x] full test suite, less a few addons. ## Status; - [x] Ready for review **look only at ""update driver for PsiPEP002"" commit. Previous are #1393 and following is just the tests**; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1402:689,down,downstream,689,https://psicode.org,https://github.com/psi4/psi4/pull/1402,1,['down'],['downstream']
Availability,"## Description; This will upgrade our ECP engine from the native implementation to the superior [standalone library](https://github.com/robashaw/libecpint), also written by Rob Shaw. That library also provides gradient and Hessian terms, which will greatly improve performance. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Hook up external build; - [x] Get energies working; - [x] Get gradients working; - [x] Get Hessians working; - [x] Remove old native implementation; - [x] Make all tests / references to ECPs conditional depending on libECP activation. LAB: conditional build marked by `USING_ecpint` compile definition. This turned out uglier than should strictly be needed because as soon as you ifdef the ao_ecp declarations in integrals.cc, all calcs, w/ or w/o ecp segfault. Possibly I'm missing something, but present ifdef pattern is working stably.; - [x] Linux and Mac conda packages are available off psi4/label/dev. Windows untested. These packages have stylistic problems, but they'll do for now. There are also Linux and Mac conda packages off conda-forge. At least the Linux works fine. Installation is mildly involved with the mixed base channels, so the psi4 packages exist for simplicity of availability.; - [x] NYI message on stability code added to close #2577 ; - [ ] build docs will be in a separate PR. ## Questions; - Can anyone think of how one might access code with ecp ifdefs _without_ building a psi4 BasisSet (besides zerobasis)? Particularly though some non-driver mintshelper API call? This is important because the nearly sole whoa-your-mol+basis-needs-ecp-but-libecpint-not-built warning happens at the BasisSet build in export_mints. If users get around that, they'll be surprised by missing electrons b/c ecp code is deactivated. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135:964,avail,available,964,https://psicode.org,https://github.com/psi4/psi4/pull/2135,1,['avail'],['available']
Availability,"## Description; Tries to set the correct density label and solves some bugs with writing the incorrect densities. Relates issue: #1272 . ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] deducts density label (`|SCF|MP2|CC|CI|DCT`) for the FCHK file from the method.; - [x] allows PSI4 method names as density label with option `strict_label=False`; - [x] related issue [1886](https://github.com/psi4/psi4/issues/1886) is handled within the FCHK driver.; - [x] new pytests for FCHK files that check if the correct SCF density and SCF orbital coefficients is set.; - [x] No densities available from `occ` gradients. FCHK driver exists with a warning.; - [x] DCT, DFOCC densities available; - [x] exposes `Vector.copy()` to python; - [x] better ECP support. Fixes #2021.; - [x] adds a 'compare_fchkfiles` function. ## Checklist; - [x] docs changed to reflect that the high-level `fchk()` should be called (instead of `FCHKWriter()` directly); - [x] new test passes; - [x] manual inspect of various fchk files using this (ugly) script: https://gist.github.com/hokru/f1b00a87665ac345415b4ad3e0006f1d. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1884:631,avail,available,631,https://psicode.org,https://github.com/psi4/psi4/pull/1884,2,['avail'],['available']
Availability,"## Description; Try to get PCMSolver reintegrated. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] This is atop lapack and ambit PR's, so you'll want to look only at 410be6f; - [x] Switched to PCMSolverConfig imported target.; - [x] Based on https://github.com/loriab/pcmsolver.git branch config6; - [x] target `PCMSolver::PCMSolver` --> `PCMSolver::pcm`; - [x] no longer using pcm_placeholder, instead add to path in run_psi4.py; - [x] I'd rather have pcmsolver as a proper module containing __init__, pcmsolver, getkw, etc., but that would mess with other codes use of pcmsolver, I suspect; - [ ] This runs into trouble in libpsipcm, where the signatures don't match up. What's missing is the dreaded HostWriter at the end. I daresay that's a change upstream that @robertodr understands. ```; /theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/psi4/src/psi4/libpsipcm/psipcm.cc(133): error: argument of type ""void (*)(const char *, int)"" is incompatible with parameter of type ""HostWriter""; symmetry_info, &host_input, &host_writer);; ^. /theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/psi4/src/psi4/libpsipcm/psipcm.cc(136): error #165: too few arguments in function call; symmetry_info, &host_input);; ^; ```. * **User-Facing for Release Notes**. ## Questions; - [ ] @robertodr, you'll take a look at this? I can certainly answer any ""why"" questions. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/594:947,error,error,947,https://psicode.org,https://github.com/psi4/psi4/pull/594,2,['error'],['error']
Availability,"## Description; Two bug fixes. First is wrong projected energy change in P-RFO transition state optimization.; Second, is an i/o error that occured because the file1 was not always deleted when the ""dynamic level"" changed. Default behavior should be unaffected.; ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; Should resolve issue #789 ; ; ## Questions; None; ## Status; Should be ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/798:129,error,error,129,https://psicode.org,https://github.com/psi4/psi4/pull/798,1,['error'],['error']
Availability,## Description; Updates plugins to work with the new Python module based Psi4. This required changes to ```__init__.py``` and ```pymodule.py```. It also moves to a CMake build system. ## Todos; Notable points that this PR has either accomplished or will accomplish.; - [x] New CMake based plugins. If you install Psi4 to non-standard location you may need to set ```CMAKE_PREFIX_PATH``` to your Psi4's ```CMAKE_INSTALL_PREFIX``` before configuring your new plugin. Failure to set may result in the plugin not finding Psi4.; - [x] Updates provided plugin templates to use the new architecture. The method of specifying the template has changed to the ```--new-plugin-template templatename``` command line option.; - [x] Adds DF-MP2 plugin template for best practices. ## Status; - [ ] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/489:465,Failure,Failure,465,https://psicode.org,https://github.com/psi4/psi4/pull/489,1,['Failure'],['Failure']
Availability,"## Description; Use a centralized function to determine the scratch name associated with scratch files, to make sure they're being read and written consistently. Fixes `cookbook-rohf-orbrot`, which was writing the modified orbitals to a location other than what the SCF code expects, resulting in them being ignored. ## Checklist; - [x] Cleaned up `cookbook-rohf-orbrot` input file; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); The following (unrelated) failures persist, but are fixed in #1494 .; ```; The following tests FAILED:; 223 - mints8 (Failed); 291 - opt-irc-1 (Failed); ```. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1495:548,failure,failures,548,https://psicode.org,https://github.com/psi4/psi4/pull/1495,1,['failure'],['failures']
Availability,"## Description; Uses `clang-tidy` to find and fix uses of redundant `void` argument in functions. Fixes applied with:; ```; cd <build-dir>/psi4-core-prefix/src/psi4-core-build; run-clang-tidy.py -header-filter='.*' -checks='-*,modernize-redundant-void-arg' -fix; ```; Based on #1312 . ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] `clang-tidy` find and fix with `modernize-redundant-void-arg`. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1317:58,redundant,redundant,58,https://psicode.org,https://github.com/psi4/psi4/pull/1317,3,['redundant'],"['redundant', 'redundant-void-arg']"
Availability,"## Description; When computing a gradient through the `cc` mega-module, the reference wavefunction's density would be overwritten with the correlated wavefunction's density. This was because the CCEnergyWavefunction's `Da_` and `Db_` were exactly the same objects as the reference wavefunction's. Of course changing the object associated with one variable name would change the object associated with the other variable name. They're the same object. This PR makes them different objects, to stop this aberrant behavior. Obligatory @lothian ping to confirm this shouldn't create other problems in the `cc` mega-module.; Obligatory @hokru ping because this should allow eliminating `recompute_scf_density` from #1884. Fixing up the DCT density is next. Developers, please tag as bugfix and 1.4. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fixed a bug where the `cc` mega-module would set the reference wavefunction's density. ## Checklist; - [x] `ctest -L ^cc -j4` and `ctest -L quick -j4` pass on my Mac. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1962:541,ping,ping,541,https://psicode.org,https://github.com/psi4/psi4/pull/1962,2,['ping'],['ping']
Availability,"## Description; When running a simple RHF calculation and computing cube files, I was experiencing seg faults or orbitals that look like:; ![image](https://user-images.githubusercontent.com/9198329/38570936-0b5815e4-3cbd-11e8-93ce-f7cf4a57b46e.png); after updating my Psi for the first time in a while. After a bit of digging, I think I've tracked the problem--no more seg faults and my orbitals look like:; ![image](https://user-images.githubusercontent.com/9198329/38570995-3f7b156a-3cbd-11e8-8dbd-b8a2423033be.png). Not sure why the cubeprop test (which was passing) didn't catch this. ## Todos; - [X] Fix copy call in points.cc. ## Questions; - [x] Should I add another cubeprop test?. ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/951:103,fault,faults,103,https://psicode.org,https://github.com/psi4/psi4/pull/951,2,['fault'],['faults']
Availability,"## Description; While working on a _different_ PR for the dcft code, I stumbled across a bug that I had accidentally introduced in #1310. DCFT previously allowed you to use the amplitudes from a previous computation as your guess for the next one by setting `dcft_guess dcft`. Key to this mechanism was the fact that the LibDPD files persisted after the computation... which is precisely what I changed in #1310 to fix #1309, where intermediate files would interfere with the amplitude guess. The primary purpose of this PR is to both keep the guess feature working and keep issue #1309 fixed. This is accomplished by checking if `dcft_guess` is `dcft` at the time of `compute_energy` and choosing whether or not to nuke previous files. So past intermediate files will interfere only when you want them to. There are also some related changes: adding a helpful error message to replace the PSIO error that appears when the past files don't exist, adding a test case to prevent a repeat of this little mess, removing some dead code, and per discussions with @jturney, moving some tensors from the libtrans libdpd to the dcft libdpd if they were more than integrals. The other `dcft` PR will be coming as soon as this one is merged in: another bugfix, and (finally!) the transition from `dcft` to `dct`. Obligatory @ssh2 notification. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Restore `dcft_guess dcft` functionality; - [x] Move tensors (DCT's amplitudes and ""generalized"" Fock matrix) from the `libtrans` dpd buffer to the `dcft` buffer; - [x] Add a test for `dcft_guess`; - [x] Eliminate one obnoxious PSIO_ERROR. ## Checklist; - [x] Tests added for any newly working features; - [x] All 14 `dcft` tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1717:861,error,error,861,https://psicode.org,https://github.com/psi4/psi4/pull/1717,2,['error'],['error']
Availability,"## Description; While working on a fix to #1777, I encountered bug #1808, which blocks my fix. This PR fixes #1808 and condenses some of the relevant code. The bug is discussed in detail at https://github.com/psi4/psi4/issues/1808. Briefly, OMP2.5 theory has two sets of amplitudes, T2(1) and T2(2). Compared to the very similar OMP3 theory, it halves certain terms. OCC implemented this by halving the T2(2) amplitudes instead of halving intermediates that use them. While the intermediates will be correct, this has the side-effect of changing the T2(2) amplitudes from their current values, so they do not converge. This PR changes the implementation so the necessary terms are halved, but not the T2(2) amplitudes. Now they converge properly and agree better with my Psi4Numpy implementation of OMP2.5. Disclaimer that @bozkaya has yet to comment. While I'm confident I've implemented the theory correctly, he is more familiar with OMP2.5 than I am. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fixes a bug causing small (~fifth decimal place) errors in OMP2.5 gradients with conventional integrals.; - [x] Condenses OMP2 and OMP2.5/OMP3's functions for the first order T2 amplitudes. . ## Checklist; - [x] Quick tests pass. `^omp2p5` passes. `^omp3` passes with the exceptions noted in #1793. . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1809:1101,error,errors,1101,https://psicode.org,https://github.com/psi4/psi4/pull/1809,1,['error'],['errors']
Availability,"## Description; With Intel compiler, current master throws:. ```; /psi/gits/hrw-pybind/psi4/src/psi4/libfock/DirectJK.cc(1015): internal error: null pointer; }; ^. compilation aborted for /psi/gits/hrw-pybind/psi4/src/psi4/libfock/DirectJK.cc (code 4); ```. ~The `size_t` is in the header, so I don't know why it should need it again, but it seems to want it. All the below fail, too. I'm glad to try any more rational variations.~; ```; # out-of-date # all throw with above; # out-of-date num_computed_shells_ = 0L;; # out-of-date num_computed_shells_ = 0;; # out-of-date num_computed_shells_ = std::size_t{ 0 };; ```. FYI @andyj10224 who has also hit this and @davpoolechem since it came about in #2547. ~EDIT: nevermind, this only lets it build but kills off the threading and doesn't count ints. Ignore PR for now.~. EDIT: ok, this works, though I don't see why Intel should have complained about the original. Throw seen on 2021.4 and 2021.6, btw. ## Checklist; - Tests added for any new features; - [x] ~ran smoke~ ran full tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2625:137,error,error,137,https://psicode.org,https://github.com/psi4/psi4/pull/2625,1,['error'],['error']
Availability,"## Description; XC quadrature weights can become very small and thus their contributions are negligible. This PR introduces a cutoff for small weights. The grid points with small weights are not included in the final grid. Such a cutoff is a standard procedure in many programs. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] expert option `DFT_WEIGHTS_TOLERANCE` keyword (current default `1e-14`).; - [x] small error overview added; - [x] together with pruning ca. 40% faster calculation for C60 compared to `v1.3` :-); - [x] simple test added. ## Questions; - [x] which default value? -> `1e-15` conservative or `1e-14` like in ORCA. ## Checklist; - [x] all `ctest -L dft` pass. ## Status; - [x] Ready for review; - [x] Ready for merge. ------; water dimer (RKS total energy): `PBE/aug-cc-pVTZ (99,520)` econv=1e-10 dconv=1e-8. | tolerance | error | #points |; | --- | --- | ---|; | off | 0.0 | 350460 | ; | 1e-30 | 1.36e-12 | 349417 |; | 1e-25 | 1.65e-12 | 348670 |; | 1e-20 | 1.65e-12 | 346918 |; | 1e-18 | 1.68e-12 | 345747 |; | 1e-16 | 1.63e-11 | 340646 |; | 1e-15 | 2.74e-11 | 339647|; | 1e-14 | 5.73e-09 | 335089 |; | 1e-13 | 3.65e-08 | 331285 |; | 1e-12 | 3.18e-07 | 326462 |. c2 sym. C60 isomer (RKS total energy): `PBE/aug-cc-pVDZ (75,302)` econv=1e-10 dconv=1e-8. | tolerance | error | #points |; | --- | --- | ---|; | off | 0.0 | 1359000 | ; | 1e-30 -| 3.17e-10| 1229846|; | 1e-25 | -5.34e-10| 1209622|; | 1e-20 | 5.94e-10 |1183674|; | 1e-18 | 5.41e-10 |1171102|; | 1e-16 | -6.25e-10 |1156776|; | 1e-15 | 2.48e-09| 1131228|; | 1e-14 | 3.54e-09| 1123018|; | 1e-13 | 1.25e-07 |1110668 |; | 1e-12 |1.07e-06 |1085824 |. -----. *further timings*; C60 fullerene (C2h) :PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; comparison to `v1.3.1`; * pruning `ROBUST`=1.33 // `1361880/1953000` grid points // dE=2E-11; * pruning `TREUTLER=1.36`// `1064520/1953000` grid points // dE=-4E-05; * pruning `ROBUST` + `screening(1e-14)` = 1.39; `1070388/195",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1581:463,error,error,463,https://psicode.org,https://github.com/psi4/psi4/pull/1581,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"## Description; [My](https://github.com/psi4/psi4/pull/2824) [previous](https://github.com/psi4/psi4/pull/2832) [PRs](https://github.com/psi4/psi4/pull/2834) fixed the bugs making UKS TDDFT and stability analysis incorrect, so let's enable them. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Stability analysis is now supported for unrestricted GGAs.; - [x] TDDFT is now supported for unrestricted GGAs. . ## Dev notes & details; - [x] The prohibition against VV10 is not added to this PR, but its enforcement is. The old code would have given incorrect results. ## Checklist; - [x] Tests _mostly_ pass. `test_tdscf_excitations.py` has this PR covered. The one complication is that we're failing the TDA and RPA tests for CH2 with HCTH93. My investigations lead me to suspect the fault is bad reference data, probably involving pruned integration grids. @bgpeyton has confirmed pruning as the issue and volunteered to re-generate proper data. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2849:907,fault,fault,907,https://psicode.org,https://github.com/psi4/psi4/pull/2849,1,['fault'],['fault']
Availability,"## Description; `LEOM_CCSD` is included in the list of EOM methods, but I can find no evidence that this method exists in Psi, other than as an option. This PR removes the option entirely. This brings the EOM methods to create variables for down to EOMCCSD, EOMCC2, and EOMCC3. Per Lori observation, the `LOCAL_GHOST` option is removed as unused. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2467:241,down,down,241,https://psicode.org,https://github.com/psi4/psi4/pull/2467,1,['down'],['down']
Availability,"## Description; `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. This PR seems way too easy. @brianz98, please let me know if there are issues. Obligatory @fevangelista and @dnascimento13 pings. ## User API & Changelog headlines. - [x] `RelPotentialInt` and associated integral classes now expose all four W integral types instead of just the W0 integrals. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Changes `RelPotentialInt` to expose W0, Wx, Wy, and Wz integrals. ## Questions; - [x] Any objections to changing an existing integral type rather than creating a new one?; - [x] Any documentation edits needed?; - [x] Do any of the users need the derivative integrals?. ## Checklist; - [ ] Are any tests necessary?; - [x] `ctest -L x2c` passes, in addition to standard tests. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3174:260,ping,pings,260,https://psicode.org,https://github.com/psi4/psi4/pull/3174,1,['ping'],['pings']
Availability,"## Description; `cc` now uses `Matrix` rather than `block_matrix` for the OPDM and Lagrangian. During the course of this transition, I discovered an indexing bug in the conversion of the UHF densities to Matrix. This dates [back to 2016](https://github.com/psi4/psi4/commit/d4bbb98291afe4b500476d0d46c87ded3821bed6). As-is seen from the test values that had to change, this can lead to dramatic errors in properties. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixed a bug where UHF-CCSD properties were incorrect when some orbitals were singly occupied. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `cc` now stores its Lagrangian and OPDM as `Matrix` objects rather than block_matrices rather than write them to disk; - [x] `cc` now uses the wfn based interface, rather than the disk interface, to gradients ; - [x] Adds a finite difference correctness test to UHF-CCSD one-electron properties; - [x] Much heavier use of slice technology . ## Questions; - [x] Lori, does the test look okay to you?; - [x] Should I do another check on the dipole that changed the most in our test? That change is _massive_. ## Checklist; - [x] `cc` tests pass; - [x] Edited test with incorrect reference values . ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2818:395,error,errors,395,https://psicode.org,https://github.com/psi4/psi4/pull/2818,1,['error'],['errors']
Availability,"## Description; `sq_rsp(...)` is an ancient diagonalizer function from Psi3 with many issues. While its innards could be improved, the function signature is horrid. It should be deprecated and replaced with something better.; Stemming from the awful interface, users of `sq_rsp(...)` never check if the diagonalization failed, because they _cannot_. This is now rectified by adding failure checks wherever the new DSYEV wrappers are called.; Checks against non-square matrices are also added where there is both a row and column count at the call site. Some of the call sites would be dfocc territory, this PR does not include them to avoid conflicts with the dfocc overhaul.; This is another shard of the https://github.com/psi4/psi4/pull/2642 mega-PR that can be merged after PR #2678 and #2738 are in. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `li",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:382,failure,failure,382,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"## Description; avoid Win/Linux filesystem conventions by moving selected operations to python. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Moves fisapt driver py-side; - [x] Moves writing arrays and filesystem parts of fisapt py-side; - [x] There were some options with names `sSAPT`. There's machinery that thinks all option names are all-caps, so that wasn't good.; - [x] Moves filesys in libcubeprop/cubeprop.cc py-side; - [x] ~Currently can't run cmake multiple times w/o hitting `fsapt/` dir exists~ Now just overwrites existing dirs; - [x] Adds Molecule docstrings and fixes spelling mistakes. ## Questions; - [x] @jturney what’s this supposed to do when directory already exists? https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfilesystem/path.cc#L53 According to `mkdir` docs, it should throw `EEXIST` error? that’s the behavior i’ve imitated in python. but if that’s the case, how has ctest be working on re-run all this time.; - [ ] Rob was exporting `FISAPT.scalars()` as direct map. I changed to map& to match FISAPTSCF. Rob was never using this in code, but since it was exported to python, possibly scirpts are affected?. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1098:892,error,error,892,https://psicode.org,https://github.com/psi4/psi4/pull/1098,1,['error'],['error']
Availability,"## Description; getting intermittant errors < 3.e-9, so relaxing fchk tolerances a bit. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2063:37,error,errors,37,https://psicode.org,https://github.com/psi4/psi4/pull/2063,2,"['error', 'toler']","['errors', 'tolerances']"
Availability,"## Description; heals up the remaining broken test cases except for cookbook-rohf-rot. ## Todos; - [x] ecp: now assert Z on molecule when ordinary basis applied, not just E… …; - [x] df: df_fitting_condition was defaulting to 1e-12 unless explicitly set; - [x]better format error and also print to terminal. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1494:274,error,error,274,https://psicode.org,https://github.com/psi4/psi4/pull/1494,1,['error'],['error']
Availability,"## Description; https://github.com/psi4/psi4/issues/1439#issuecomment-455799123 is a good idea prototyped here. Instead of always defaulting the cast-up basis to 3-21g, choose from within family. Here, only def2 is rolled out. Also, not integrated with basis blocks, so active for `set basis def2-tzvpp`, not `basis {assign I def2-tzvppd}` in original example. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] basis guess default Dunning, Petersson (zapa), and Jensen families to `pcseg-0`, which is 3-21g sized. none of these are ECP; - [x] basis guess default Karlsruhe to `def2-sv(p)`, so that ECP present for both orbital and fitting; - [x] remainder (incl. Pople and any custom) default to 3-21g. EDIT: Pople explicitly defaulting to 3-21g; - [x] EDIT: replaced DUAL in [this table](http://psicode.org/psi4manual/master/basissets_byfamily.html) with GUESS. - [x] I got `str not a callable fn` in error handling, so fixed up the error/trackback handling a bit. now prints to screen, too. EDIT: I think this got added elsewhere. ### contains #1494 (urgent fixes from this PR) so will need rebasing before final consideration. ## Testing; - [x] full ctest and pytest passes (except for dcft8, but that's a known issue). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1484:950,error,error,950,https://psicode.org,https://github.com/psi4/psi4/pull/1484,2,['error'],['error']
Availability,## Description; misc. ## Todos; - [x] one more change to get psi4-dev package working on mac; - [x] make mbis-3 a reliable test. credit to @zachglick for the diagnosis and fix. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2005:114,reliab,reliable,114,https://psicode.org,https://github.com/psi4/psi4/pull/2005,1,['reliab'],['reliable']
Availability,## Description; misc. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] one more nix py35; - [x] try to get around below in https://lgtm.com/projects/g/psi4/psi4/logs/languages/lang:cpp. ```; [2019-03-04 21:34:07] [build] Scanning dependencies of target libxc_external; [2019-03-04 21:34:07] [build] [ 2%] Creating directories for 'libxc_external'; [2019-03-04 21:34:07] [build] [ 4%] Performing download step (git clone) for 'libxc_external'; [2019-03-04 21:34:07] [build] Cloning into 'libxc_external'...; [2019-03-04 21:34:10] [build] fatal: could not read Username for 'https://gitlab.com': No such device or address; [2019-03-04 21:34:10] [build] fatal: The remote end hung up unexpectedly; [2019-03-04 21:34:10] [build] Cloning into 'libxc_external'...; [2019-03-04 21:34:11] [build] fatal: could not read Username for 'https://gitlab.com': No such device or address; [2019-03-04 21:34:12] [build] fatal: The remote end hung up unexpectedly; [2019-03-04 21:34:12] [build] Cloning into 'libxc_external'...; [2019-03-04 21:34:13] [build] fatal: could not read Username for 'https://gitlab.com': No such device or address; [2019-03-04 21:34:13] [build] fatal: The remote end hung up unexpectedly; [2019-03-04 21:34:13] [build] -- Had to git clone more than once:; [2019-03-04 21:34:13] [build] 3 times.; [2019-03-04 21:34:13] [build] CMake Error at /opt/src/_lgtm_build_dir/external/upstream/libxc/libxc_external-prefix/tmp/libxc_external-gitclone.cmake:66 (message):; [2019-03-04 21:34:13] [build] Failed to clone repository: 'https://gitlab.com/libxc/libxc.git'; ```. ## Checklist; - [ ] ~Tests added for any new features~; - [x] ran quicktests from libxc tarball. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1567:444,down,download,444,https://psicode.org,https://github.com/psi4/psi4/pull/1567,2,"['Error', 'down']","['Error', 'download']"
Availability,"## Description; non-final PR while we work out merge order. this is a docs build with no warnings or errors, either overt (`make html -W`), external links (`make linkcheck`), or internal links (`make html -n`). requires a qcel docs update. hopefully this will provide a clean docs base moving forward. this would be non-controversial except that I think there was some technical debt left over from the 2016 inversion in the module structure of the driver. What I think was happening was that the `psi4/driver/driver.py` was the nexus, and any wrappers or utilites that it happened to import became the API. The folder psi4/driver didn't really function as a module. Then for psithon, a few extras like frac got added in in the import preamble. Only problem with the structure (besides ppl who know python thinking it a little irregular) is that it made some functions in the driver impossible to access (i.e., run `help()` on) and link to in the docs. https://towardsdatascience.com/whats-init-for-me-d70a312da583 outlines a few strategies for structuring python packages. There's the mostly-toplevel strategy of numpy (https://github.com/numpy/numpy/blob/main/numpy/__init__.py#L150-L156 and https://github.com/numpy/numpy/blob/main/numpy/core/__init__.py#L72-L90) and the subpackage strategy of scipy (https://github.com/scipy/scipy/blob/master/scipy/__init__.py and https://github.com/scipy/scipy/blob/master/scipy/optimize/__init__.py#L400-L423). I don't have a clear vision on how to do the driver right for psi4, but i've followed the numpy approach of both building up the top-level deliberately with `__all__` and building out the namespaced structure (`from . import x`), and it's doing what the docs linking needs, and I think it's more rational and provides much better coverage for the API docs. Also allows the only difference btwn psithon and psiapi to be whether `core.*` are at top-level. The only tests that have needed change are ""cookbook"" types that were outlining driver code in ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2162:101,error,errors,101,https://psicode.org,https://github.com/psi4/psi4/pull/2162,1,['error'],['errors']
Availability,"## Description; part III of let there be conda after the recent merge flurry. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] As it is, downstream plugins won't find Python.h . This passes the right include dir so they can and prompts updating cmake so new detection can be used. naturally, v2rdm showed this up.; - [x] bump minimum gcc to 6. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2096:195,down,downstream,195,https://psicode.org,https://github.com/psi4/psi4/pull/2096,1,['down'],['downstream']
Availability,## Description; provide immediate warning of upstream or downstream integration failures. ## Todos; - [ ] Feature1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1555:57,down,downstream,57,https://psicode.org,https://github.com/psi4/psi4/pull/1555,2,"['down', 'failure']","['downstream', 'failures']"
Availability,"## Description; set_Ca treats Cb_so_ incorrectly in the same orbs case.; I did not trigger the bug actively, but it looks like a clear bug to me. The bug won't have triggered in any meaningful code, because every algorithm queries same orbs and therefore only uses Ca_so_ if(same_orbs). However it should be fixed regardless. Please review carefully. ## Checklist; - [ ] Tests added for any new features; ctest -L quick ran through without errors. ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1128:440,error,errors,440,https://psicode.org,https://github.com/psi4/psi4/pull/1128,1,['error'],['errors']
Availability,"## Description; technical improvements to docs, part 2. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] **bug fix and energy change** these changes to RI basis for sto-3g, sto-6g, 3-21g https://github.com/psi4/psi4/pull/2146/files#diff-343949bff4fe0802df72641969d7aceb07a122625e5b70d95c6e2757e4ee3c92R435 now refer to a real basis set, so in practice, calcs will use the svp now rather than the qzvpp. tests sapt-ecp and nbody-levels have been tweaked to pass. this will lead to real numbers changes in psi4 runs, though hopefully they'll be a little quicker, too. apparently hunting docs ref errors can fix real bugs; - [x] docs now pass `sphinx-build -b linkcheck`, meaning that all the external hyperlinks in the docs are ok or redirect, none broken (except for a few that are excused in conf.py.in). 300 -> 0 broken links!; - [x] started on the `sphinx-build -b html -n` nitpicky mode. 1300 -> 1000; - [x] fixed all the `docstring of psi4.core.PyCapsule.dfh:: WARNING: py:class reference target not found: psi::DFHelper`; - these happen when exports use or return a class that hasn't yet been pb11 exported, https://pybind11.readthedocs.io/en/stable/advanced/misc.html?highlight=docstring#avoiding-c-types-in-docstrings; - `OneBodySOInt` and `psio_entry` added; - a couple docstrings edited to figure out how parser wants str enums in docstring; - all other export_ and core.cc changes are rearrangements only. ## Checklist; - [ ] ~Tests added for any new features~; - [x] full tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge **SQUASH**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2146:652,error,errors,652,https://psicode.org,https://github.com/psi4/psi4/pull/2146,1,['error'],['errors']
Availability,"## Description; ~Mostly a code demo, so I'll cancel the CI. upstream master isn't quite ready yet, but this works locally on linux.~. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Add Einsums as optional build dependency via the usual `-D ENABLE_Einsums=ON` arg.; - [x] Added a dummy module that uses Einsums both as a model and so we have something to check in tests w/o imposing on fnocc. Conda packages are available for Linux & Mac (Intel & Silicon); - [x] Tried some docs tweaks again. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3050:537,avail,available,537,https://psicode.org,https://github.com/psi4/psi4/pull/3050,1,['avail'],['available']
Availability,"## Description; ~adds electric dipole polarizability, optical rotation, and electric dipole / magnetic dipole tensors to the `can_do_properties_` list so that they are correctly passed into `ret.extras` during a `run_qcshema` call. @loriab told you I'd ping you soon.~. both `omega` and `gauge` are picked up properly from Atomic Input keywords as well. . UPDATE: `_can_do_properties` was really acting as more of a ""default properties"" list, so the logic in `run_qcschema` had to be changed instead. . ## Todos; - [x] `_can_do_properties` -> `_default_properties`; - [x] remove can-do filter from `run_qcschema` (kept default properties); - [x] `run_qcschema` checks for `properties` list in `json['kwargs']` now instead of `json['model']`; - [x] new test . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2126:253,ping,ping,253,https://psicode.org,https://github.com/psi4/psi4/pull/2126,1,['ping'],['ping']
Availability,"## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fix obvious bug in `UV::compute_X`; - [x] `UV::compute_Vx` is still not production-ready, sadly. While the function is correct _to within screening tolerance_, the screening procedure breaks the hermiticity of the exchange-correlation hessian. I've observed matrix elements <x_i | V'' | x_j> and <x_j | V'' | x_i> disagreements on the order of 1e-5. This leads to errors in converging Davidson algorithm tightly for TD-UKS. The problems are there for both LDA and GGA, but more severe for GGA because there are more terms to screen. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2832:604,error,errors,604,https://psicode.org,https://github.com/psi4/psi4/pull/2832,1,['error'],['errors']
Availability,"## Information:. I have two versions of boost installed on my system. ; - I installed boost 1.59 in a conda env using the ([recipe](https://github.com/conda/conda-recipes/tree/b9570c14d5a25ac88b98c6c597365bfcba4174ce/boost)) from the condo/conda-recipies repo ( before the boost recipe was upgraded to 1.60.0). Installed in `$HOME/anaconda/envs/psi4-py2.7` ; - Hombrew boost 1.60.0 installed in `/usr/local/Cellar` and linked by hombrew to `/usr/local`; - I am using CMake 3.2.2; ## Problem:; 1. If I pass the setup args `--boost-libdir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //B",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313:762,error,errors,762,https://psicode.org,https://github.com/psi4/psi4/issues/313,1,['error'],['errors']
Availability,"## OEProp bug fix. Some OEProp routines contracted Cartesian density matrices with spherical harmonic integrals, which is bad (and caused by me, I believe). Thanks to Coleman Howard in @lothian's group for pointing this out. For Cartesian basis sets, there was never a problem. For spherical harmonics, the multipoles were bad only if the origin was chosen such that it broke symmetry; spherical harmonic fields and ESPs were all wrong. I added a test for the multipoles, because they're available in Psi vars (reference values confirmed by Molpro). I also confirmed the ESP and Fields on a small grid against Molpro values, but they're not available in Psi vars, so are harder to test.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/447:488,avail,available,488,https://psicode.org,https://github.com/psi4/psi4/pull/447,2,['avail'],['available']
Availability,"## Todos; - [x] This prevents partial frequencies from hanging (causing ctest timeout) when analytic freq are available and user hasn't specified a findif.; - [x] Clarifies extrapolations syntax with e.g., aug-cc-pv(d+d)z basis sets used; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/451:110,avail,available,110,https://psicode.org,https://github.com/psi4/psi4/pull/451,1,['avail'],['available']
Availability,## Todos; - [x] bump qcel to 0.5.0; - [x] bump qcng to 0.8.2; - [x] bump pb11 to 2.3.0; - [x] update FindPythonLibsNew.cmake from upstream (pb11); - [x] try to fix 0-bit Python travis error -- ended up averting Win problem and letting Lin upstream fix itself. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1697:184,error,error,184,https://psicode.org,https://github.com/psi4/psi4/pull/1697,1,['error'],['error']
Availability,"## Todos; - [x] modernizes `run_json` to the level of the ddd branch; - sets all options at once and allows module-level options (`scf__reference` --> `set scf reference`); - shifts `json['psi4:qcvars']` --> `json['extras']['qcvars']`; - `json['extras']['wfn_qcvars_only']` collects qcvars only from wfn, not from `P::e`; - uses molecule dtype=2, qcschema one-word, and new error format; - [x] adds more psivars; - `HF TOTAL HESSIAN`; - removes scs-mp2 ss/os psivars in dfmp2 that were getting autovivified. thereby also corrects printing of 0s; - in cc* modules, defines psivars on wfn that I'm confident will endure. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1578:374,error,error,374,https://psicode.org,https://github.com/psi4/psi4/pull/1578,1,['error'],['error']
Availability,"## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Add a GHA to build the docs for every PR; * gives us advance warning if the docs break, rather than having to watch master; * advance warning is particularly necessary since the warnings-to-errors and nitpicky flags are on. these make sure links (functions, options, etc) aren't dead and that lists don't end up as mushed text.; * unlike #2364, this isn't ambitious by building a website preview and writing a comment to the PR. but it does provide a tarball of the docs as a GHA artifact, so you can download, unpack, and view it locally in a browser. this happens whether the build succeeds or fails.; * the new docs-pr.yml file looks so close to docs.yml, that you could argue for merging them. However, I think they could develop differently, with the master one also doing samples commits and auto-formatting, while the PR one does linting like add-a-comment-to-that-test or reformat warnings.; - [x] a filesystem.py file could be easily replaced by pathlib. ## Checklist; - ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests) Plugin tests generate and run. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2607:297,error,errors,297,https://psicode.org,https://github.com/psi4/psi4/pull/2607,2,"['down', 'error']","['download', 'errors']"
Availability,"## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] conventional only (not orbital optimized) MP2.5 and MP3 are now density-fit by default, fixes #1801 ; - [x] note that this bifurcates the role of `mp_type`, with the above cases imposed in proc.py, leaving the keyword unchanged for others -- omp2.5, omp3, mp4, adc2; - [x] in occ, LCCD and OLCCD energies were often failing (to match to 1.e-6) with default convcrit. though there's a `abs(DE) < e_conv` test for iterations, the actual progressing of DE through the iterations has a lot of energy increases, so often a small energy increase satisfies the test. I reduced the energy test by an order of magnitude to allow a little more settling of iterations. obligatory @JonathonMisiewicz ping, who may be rightly appalled. it does fix up energy and 5-point findif gradient by energy convergence across the std suite.; - [x] in dfocc, most DF analytic gradients from MP2 to CCSD were failing with default convcrit w/o tightening pcg_convergence by an order of magnitude. so, I tied pcg_convergence to e_convergence if not specified. again, Jonathon's input welcome.; - [x] I maybe should write a warning to output if these methods run w/o mp_type specified so the change isn't wholly unmarked (besides release notes and docs); - [x] bump qcel and qcng to v0.16. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1980:786,ping,ping,786,https://psicode.org,https://github.com/psi4/psi4/pull/1980,1,['ping'],['ping']
Availability,## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Feature1; Added printout for memory availability in DFHelper; ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1097:151,avail,availability,151,https://psicode.org,https://github.com/psi4/psi4/pull/1097,1,['avail'],['availability']
Availability,"## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] The Dimension C++ updating of #574 / #571 needed to be done for the CheMPS2 interface code also. This does it.; - [x] test `cbs-xtpl-func` was unsuccessfully comparing analytic- and findif-computed values (as found by Daniel) after analytic ccsd(t) grads available. This forces findif comparison.; - [x] fixed MRCC interface probably broken since CMR-KtB-INV. Looks like we don't have to close and reopen outfile anymore, so simplified procedure func. tested with normal and `-o stdout` operation under py27 and py35.; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/576:370,avail,available,370,https://psicode.org,https://github.com/psi4/psi4/pull/576,1,['avail'],['available']
Availability,"## User API & Changelog headlines; - [x] A segfault in `Matrix::transpose` for matrices that are not totally symmetric now performs the transpose.; - [x] A segfault in `Matrix::transpose_this` for matrices that are not totally symmetric now raises an error message. . ## Dev notes & details; - [x] All the above, plus...; - [x] Tests that the above works!; - [x] Removing variable declarations before initialization.; - [x] Reorganized logic in symmetric case for clarity. . ## Checklist; - [x] Tests added for any new features. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2740:251,error,error,251,https://psicode.org,https://github.com/psi4/psi4/pull/2740,1,['error'],['error']
Availability,"## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Provided a more informative error message when SAD crashes due to an atom having more core electrons than basis functions. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed typos in comments; - [x] Fixed buggy print information. ## Questions; - [ ] Is it worth testing for the error message explicitly?. ## Checklist; - [x] Confirmed I get the expected error message upon running the example from #2853. ## Status; - [x] Ready for review; - [x] Ready for merge upon @susilehtola approval",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2859:201,error,error,201,https://psicode.org,https://github.com/psi4/psi4/pull/2859,3,['error'],['error']
Availability,"## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The `LINEQ_SOLVER` option for `occ` has been removed. ## Dev notes & details; - [x] `occ` now uses LAPACK to solve Ax=b rather than the `pople` or `flin` algorithms. `LAPACK` just might be more reliable. This was an extremely obscure option, so I'm not worried about breaking anybody's input. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2778:367,reliab,reliable,367,https://psicode.org,https://github.com/psi4/psi4/pull/2778,1,['reliab'],['reliable']
Availability,"### System Specs:; ```; OS: MacOS Monterey 12.5.1; 2,6 GHz 6-Core Intel Core i7; 32 GB 2667 MHz DDR4; IDE: PyCharm 2022.3.2 (Community Edition); ```. ### Software Specs:; ```; Virtual Env: Conda env ; Conda version: 23.1.0; Python version: 3.6.13 and 3.7.16 (same error on both versions); PSI4 version: 1.5+e9f4d6d ; PSI4 build: py37ha809fef_0 ; Installed PSI4 using: conda install -c psi4 psi4; ```. ### Minimum reproducible example script:; ```; import psi4; psi4.set_memory('500 MB'); h2o = psi4.geometry(""""""; O; H 1 0.96; H 1 0.96 2 104.5; """"""); print(psi4.energy('scf/cc-pvdz')); ```. ### Complete traceback :; ```; /Users/vandanrevanur/anaconda3/envs/psi4_env_36/bin/python /Users/vandanrevanur/personal/codes/chemistry/psi4_stuff/psi4_testing.py . Memory set to 476.837 MiB by Python driver. Scratch directory: /tmp/. Scratch directory: /tmp/. *** tstart() called on Temps-MacBook-Pro.local; *** at Mon Apr 24 13:23:21 2023. => Loading Basis Set <=. Name: CC-PVDZ; Role: ORBITAL; Keyword: BASIS; atoms 1 entry O line 198 file /Users/vandanrevanur/anaconda3/envs/psi4_env_36/share/psi4/basis/cc-pvdz.gbs ; atoms 2-3 entry H line 22 file /Users/vandanrevanur/anaconda3/envs/psi4_env_36/share/psi4/basis/cc-pvdz.gbs . ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; RHF Reference; 1 Threads, 476 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c2v; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.065775570547 15.994914619570; H 0.000000000000 -0.759061990794 0.521953018286 1.007825032230; H 0.000000000000 0.759061990794 0.521953018286 1.007825032230. Running in c2v symmetry. Rotational constants: A = 27.26297 B = 14.51533 C = 9.47217 [cm^-1]; Rotational constants: A = 817",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2930:264,error,error,264,https://psicode.org,https://github.com/psi4/psi4/issues/2930,1,['error'],['error']
Availability,"########################################################; ### ###; ### DMRG-SCF ###; ### ###; ### CheMPS2 by Sebastian Wouters ###; ### https://github.com/SebWouters/CheMPS2 ###; ### Comput. Phys. Commun. 185 (6), 1501-1514 (2014) ###; ### ###; ###########################################################. Number of variables in the x-matrix = 342; CheMPS2 output is temporarily written to the file output.dat.chemps2 and will be copied here.; iwl_buf_init: Can't open file 33; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 80, in <module>. File ""/global/home/groups-sw/mhg/psi4/install/share/psi4/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/global/home/groups-sw/mhg/psi4/install/share/psi4/python/procedures/proc.py"", line 2686, in run_dmrgci; dmrg_wfn = psi4.dmrg(ref_wfn). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /global/home/groups-sw/mhg/psi4/psi4.git/src/lib/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::IWL::fetch(); psi::DiskJK::compute_JK(); ```. when I try to run a calculation with. ```; numOrbitals = [ 47 , 9 ]; R(O)HF DOCC = [ 28 , 4 ]; R(O)HF SOCC = [ 0 , 1 ]; frozen_docc = [ 9 , 0 ]; active = [ 38 , 9 ]; virtual = [ 0 , 0 ]; nElectrons = 65; nEl. active = 47; ```. I'm having trouble seeing why this would fail. First of all, the scratch partition on the node has over 2 TB of free space, and second, there are only 65 basis functions in the system, so even if one didn't use any kind of symmetries for the repulsion integrals, one would still only need 143MB of storage. All the jobs smaller than above run succesfully, and all the jobs larger than above fail with a similar error.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/464:1174,error,error,1174,https://psicode.org,https://github.com/psi4/psi4/issues/464,2,['error'],['error']
Availability,"#849, #825 ; - Adam Abbott (@adabbott) - #761; - Thomas Sexton (@tsexton) - #780 ; - Tianyuan Zhang (@tyzhang1993) - #743 ; - Dom Sirianni (@dsirianni) - #776, #952; - Asim Alenaizan (@alenaizan) - #956 . # Performance Optimizations; - Density Fitted 3-index AO->MO transformation significantly improved.; - MemDFJK module up to 2x as fast as original DFJK for in-core operations.; - DFT XC kenels threaded with a more efficient vectorization.; - DFT collocation matrix generation vectorized and exploits cache-level localization.; - All matrix and vector operations threaded for MIC and large Xeon/EPYC nodes to avoid bottlenecks. # Psi Developer Upgrade Guide; * The driver method `property(...)` has moved to`properties(...)` to avoid python namespace conflicts.; * If you have a (non-py-only) plugin, ; * Add `PSI_API` to your plugin code in [this pattern](https://github.com/edeprince3/v2rdm_casscf/commit/7d4507d8979b61b3333fc6ceab450a61392836ff); * If, upon rebuilding against psi4, you get symbol not found errors, run `c++filt` on the mangled symbol name, then add `PSI_API` to the psi4 repo to make sure the `core.so` you're linking against is exporting the symbol you need. See example [here](https://github.com/psi4/psi4/pull/955). Or just file an issue with your lost symbol.; * Note that anyone wanting to re-use an objdir will need to **thoroughly** remove the old pybind11 v2.0.0 from detectability. This means:; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/includes/pybind11`; * `<objdir> rm -rf stage/<TAB-TAB-...-TAB>/share/cmake/pybind11`; * `<objdir> rm -rf external/upstream/pybind11`; * Intel 2016 is no longer a valid compiler (doesn't work with py11 >=2.2.1). # Developer Interests; - Now uses LibXC for DFT XC kernels (#698); - Reworked the building of superfunctionals to use dictionaries (#922); - SCF Wavefunctions can now do Hessian-Vector builds see `RHF.Hx` and `RHF.solve` for examples. (#760); - The DFT V Potential object now has Hessian-Vector functionality. (#698);",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/959:3382,error,errors,3382,https://psicode.org,https://github.com/psi4/psi4/issues/959,1,['error'],['errors']
Availability,"': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated)) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1125; #50 0x00007faabd6e0783 in run_mod (mod=<optimized out>, filename=<optimized out>, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:17184,error,error,17184,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), flags=0x7ffdc830ce40); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1034; #52 0x00007faabd6c3bf6 in builtin_exec_impl (module=<optimized out>, ; ```; Looks like the problem occurs within OpenBLAS, but it might be a good idea to double-check the Psi4 code at; ```; #11 0x00007faaaedd82ae in psi::scfgrad::DFJKGrad::build_Amn_terms (this=0x5589d8f4c660) at /home/work/psi4/psi4.susi/psi4/src/psi4/scfgrad/jk_grad.cc:461; ```; i.e.; https://github.com/psi4/psi4/blob/f9ccef7676ce0549f5d18b82d9e13ae83c99532e/psi4/src/psi4/scfgrad/jk_grad.cc#L461. since raw calls to BLAS routines are easy to mess up... maybe ther",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:21730,error,error,21730,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), flags=<optimized out>, arena=<optimized out>); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1147; #51 0x00007faabd6ddffd in PyRun_StringFlags (str=<optimized out>, start=257, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7fa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:19436,error,error,19436,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"'python' may not be available, use the same Python to run the tests",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3216:20,avail,available,20,https://psicode.org,https://github.com/psi4/psi4/pull/3216,1,['avail'],['available']
Availability,"(3), acpf, aqcc, ccd, bccd, bccd(t), cc2, cc3, and some representative DFTs (svwn, pbe, b3lyp, wb97x, b2plyp) to standard suite testing to nail down their capabilities. Added some advice to the stdsuite so that others can perhaps edit it.; * all but cepa(1), cepa(3), acpf, aqcc, svwn, and wb97x are verified against external programs (for qcdb's and qcengine's good, not because I distrusted longstanding Psi4 implementations), usually cfour, nwchem, gamess; * ROHF DETCI doesn't match gamess/cfour for CISD or FCI, but doubtless that's implementation choice that I haven't identified. Anyway, that's why those are separate entries (away from qcng) in `standard_suite_ref_local.py`; * In filling out the capabilities tables for Hessians, I tried to collect CD Hessians for HF and SVWN by FD of energies. They failed the per-element CD result ~= CONV result check. Not surprising since CD thresh is set at 1e-4. I didn't do anything about the failure (ref values deleted and tests are not active), so this is just to bring up that CD threshold is untuned for dertype or E_/D_/R_CONVERGENCE.; * refuted first two thirds of a prominent footnote: `DFT gradients only implemented for SCF type DF. LRC-DFT gradients not implemented yet. DH-DFT gradients not implemented.`; - [x] upgraded stdsuite runner to catch up with qcdb and qcengine last year by (1) implementing per-dertype and abs/rel comparison checks (nothing is actually loosened) and (2) dropping a dict summary of each test to a record file.; - [x] arranged for available `td-{dft}` calls to show up in the energy table, https://psicode.org/psi4manual/master/energy.html; - [x] fixed `energy(""psimrcc_scf"")` to use regular SCF as ref for PSIMRCC and added a test; - [x] rehabilitated `energy(""qchf"")` (which never had its initialism expanded in the whole of the codebase, btw) so it runs. added a test. it probably ought to be better integrated with regular SCF module. Regular SCF has a qchf option that is unused.; - [x] adjusted some qcvars",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:11008,failure,failure,11008,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['failure'],['failure']
Availability,"(PSI4 1.1); water_opt -7.606667516613838e+01; water+_homo -7.566072290801020e+01; water+_homo-1 -7.558091679634278e+01; water+_homo-2 -7.541230326047109e+01; water+_homo-3 -7.423771580655676e+01; water+_homo-4 -5.571830715553878e+01. Noticeably, pulling an electron from the homo-3 and homo-4 require some crafty work, but **I have managed to converge this calculations with several basis sets and in DFT, too, using damping and other tricks, all in PSI4 1.1. Energies are qualitatively the same alway**s. All the output files are attached, in psython mode (I could not make MOM to work from python). Now then, I wanted to check some things, so I printed the density matrices from .fchk files and plugged them to PySCF, projecting them properly and so on, just to evaluate the energy with UHF on top of those density matrices. I get the same energies for the neutral molecule and the homo, homo-1 and homo-2 cations. I get VERY different energies from the homo-3 and homo-4 states. Now thats weird, because the energies above make sense. So I assumed, okay, maybe there's something odd with the .fchk writer module. I've seen its been updated, so lets try a newer version of PSI4. So I got the 1.4a2.dev78 and tried to run my calculations using the newest available dev release, from scratch. I get exactly the same energies, except for the homo-4 state, for which I get some very funky results:. [psi4_14.tar.gz](https://github.com/psi4/psi4/files/3469641/psi4_14.tar.gz). (Psi4 1.4a2...); water_opt -7.606667516615393e+01; water+_homo -7.566072290809453e+01; water+_homo-1 -7.558091679647397e+01; water+_homo-2 -7.541230326053801e+01; water+_homo-3 -7.423771580754870e+01; water+_homo-4 **9.360901611130924e+00**. And that's the story! I would try to read the .fchk files and see if I can evaluate the UHF energy on top of them with Psi4 intead of PySCF next, but this thing appeared and I guess some checks are due to know what is going on. Thank you for your patience! I hope its nothing serious!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1692:1829,avail,available,1829,https://psicode.org,https://github.com/psi4/psi4/issues/1692,1,['avail'],['available']
Availability,(Rather than adding to and probably reopening #1041): v2rdm_casscf suffers from the same problem that gpu_dfcc did.; It needs `-DOpenMP_LIBRARY_DIRS=${OpenMP_LIBRARY_DIRS}` adding to CMAKE_ARGS in `external/downstream/gpu_dfcc/CMakeLists.txt` for it to build within a psi4 build.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1063:207,down,downstream,207,https://psicode.org,https://github.com/psi4/psi4/issues/1063,1,['down'],['downstream']
Availability,(from http://forum.psicode.org/t/scaled-opposite-spin-sos-not-changing-orbital-optimized-mp2-omp2/1596); It appears that the spin-scaled OMP2 methods like `sos-omp2` do not apply spin-scaling to the MP-L functional. Instead spin-scaling is done in a post-scf fashion on the `omp2` results.; This is not necessarily what one would expect from the method name. Pinging both @bozkaya and @JonathonMisiewicz ; Could you have a look please? What is suppose to happen?. Test input:; [test.txt](https://github.com/psi4/psi4/files/3825609/test.txt),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1751:359,Ping,Pinging,359,https://psicode.org,https://github.com/psi4/psi4/issues/1751,1,['Ping'],['Pinging']
Availability,"(most recent call last):; File ""/software/all/PSI4/1.3.2-foss-2020b/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 38, in <module>; File ""/software/all/PSI4/1.3.2-foss-2020b/lib//python3.8/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/software/all/PSI4/1.3.2-foss-2020b/lib//python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/software/all/PSI4/1.3.2-foss-2020b/lib//python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/software/all/PSI4/1.3.2-foss-2020b/lib//python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 84, in scf_compute_energy; self.initialize(); File ""/software/all/PSI4/1.3.2-foss-2020b/lib//python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; mints.one_electron_integrals(). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /lscratch/software_build/easybuild/build/PSI4/1.3.2/foss-2020b/psi4-1.3.2/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::open(unsigned long, int); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); psi::MintsHelper::one_electron_integrals(). Printing out the relevant lines from the Psithon --> Python processed input file:; no_reorient; no_com; """"""); core.IO.set_default_namespace(""""); core.set_global_option(""BASIS"", ""sdzhf""); --> E, wfn = energy('WB97X-D', return_wfn=True); wfn.to_file(""mol.wfn""). Psi4 stopped on: Tuesday, 31 October 2023 05:02PM; Psi4 wall time for execution: 0:01:45.79; ```; Can anyone explain in more detail what is happening here and how i can solve this?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3069:2719,Error,Error,2719,https://psicode.org,https://github.com/psi4/psi4/issues/3069,4,"['Error', 'error']","['Error', 'error']"
Availability,"(s). Additionally this PR changes the Bragg-Slater (BS) radii and completes the Treutler-Ahlrichs integration code with the recommended mapping values. Old radii were of unknown origin. _Because of the updated BS radii, this PR will impact the total energies of any DFT calculation and can change how many grid points are generated **even without pruning**._ . ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] updated BS radii and extended to 104 elements; - [x] implementation of missing Treutler-Eta mapping parameter; - [x] `DFT_NUCLEAR_SCHEME=SBECKE` ('smooth Becke' after: 10.1063/1.5049435. Better for weak interactions, but no time savings/no screening); - [x] extends `DFT_PRUNING_SCHEME` keyword with:; - [x] Treutler grid pruning ``TREUTLER``; - [x] a more robust grid pruning variant of it ``ROBUST``; - [x] new variables: ``XC GRID TOTAL POINTS``, ``XC GRID SPHERICAL POINTS``, ``XC GRID RADIAL POINTS``; - [x] `print > 2` adds (existing but unused) debug grid print out; - [x] tight DFT tests are updated with new values due to the new Bragg-Slater radii used; - [x] testing and error overview; - [x] option to properly disable all pruning (currently only indirect way); - [x] tests below indicate a reduction of the grid size by 30 and 45% using `ROBUST` and `TREUTLER` pruning, respectively. This leads to a 15-20% speed up for small molecules.; - [x] the following tests have been updated because of the new BS radii: `dft-b3lyp`; `dft-custom-mgga`, `dft-grad-lr1`, `dft-grad-lr3`, `dft-grad-meta`, `dft-grad1`, `dft-grad2`, `dft-omega`, `dft-psivar`, `dft-vv10`, `dft1`, `dftd3-grad`, `dftd3-version`, `frac-traverse`, `opt13`, `pcmsolver-dft`, `pcmsolver-dipole`; - [x] new test: `dft-pruning`. ## Questions; - Pruning enabled by default? -> not this PR, but after further testing yes. ## Checklist; - [x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_plannin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:1207,robust,robust,1207,https://psicode.org,https://github.com/psi4/psi4/pull/1591,4,"['ROBUST', 'error', 'robust']","['ROBUST', 'error', 'robust']"
Availability,"(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""double const& Section::get<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getDbl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""int const& Section::get<int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Section::getInt(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const in libpcm.a(Input.cpp.o); ""Section::getSect(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const"", referenced from:; Input::reader(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) in libpcm.a(Input.cpp.o); ""_crc32"", referenced from:; void cnpy::npz_save<unsigned int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); void cnpy::npz_save<double>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, double const*, unsigned int const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool) in libpcm.a(Cavity.cpp.o); ld: symbol(s) not found for architecture x86_64; clang: error: linker command failed with exit code 1 (use -v to see invocation); make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/207:4879,error,error,4879,https://psicode.org,https://github.com/psi4/psi4/issues/207,3,"['Error', 'error']","['Error', 'error']"
Availability,") result in the following non-deterministic error:; ```; Traceback (most recent call last):; File ""/opt/conda/lib/python3.10/site-packages/psi4/driver/schema_wrapper.py"", line 459, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/opt/conda/lib/python3.10/site-packages/psi4/driver/schema_wrapper.py"", line 721, in run_json_qcschema; json_data[""native_files""] = {fl: flpath.read_text() for fl, flpath in files.items() if flpath.exists()}; File ""/opt/conda/lib/python3.10/site-packages/psi4/driver/schema_wrapper.py"", line 721, in <dictcomp>; json_data[""native_files""] = {fl: flpath.read_text() for fl, flpath in files.items() if flpath.exists()}; File ""/opt/conda/lib/python3.10/pathlib.py"", line 1135, in read_text; return f.read(); File ""/opt/conda/lib/python3.10/codecs.py"", line 322, in decode; (result, consumed) = self._buffer_decode(data, self.errors, final); UnicodeDecodeError: 'utf-8' codec can't decode byte 0xe1 in position 47: invalid continuation byte; ```; This error tells us that psi4 is unable to read its own `timer.dat` file. . Upon further examination of these problematic `timer.dat` files, we noticed that the ""host"" field appears to be corrupted. Here is one such corrupted header of a `timer.dat` file, represented w/ a latin-1 encoding (since it can't be read w/ the standard utf-8 encoding):; ```; Host: ip-172-31-XX-XXX.us-east-2.compute.interá^X. Timers On : Sat Sep 2 14:14:18 2023; Timers Off: Sat Sep 2 14:14:18 2023. Wall Time: 0.52 seconds. Time (seconds); Module User System Wall Calls. --------------------------------------------------------------------------------------; ```; In all of these problematic timer.dat files, the host name is truncated and ends with a random assortment of bytes. In the above example, the full host name should be `ip-172-31-XX-XXX.us-east-2.compute.internal`. We then examined how psi4 determines and processes the host name. It turns out, psi4 uses the `gethostname` functi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3043:1165,error,errors,1165,https://psicode.org,https://github.com/psi4/psi4/pull/3043,2,['error'],"['error', 'errors']"
Availability,") with conventional integrals added to `occ` module, as originally proposed in #2354; - [ ] note that this uses a specialty QCEngine for reference values. https://github.com/MolSSI/QCEngine/pull/375 It'll build by itself. I'll need to mint a QCEngine patch release before building conda packages with this PR in master.; - [x] docs-wise, I picked off a bit and included it in this PR. on the whole, let's defer docs edits until the dfocc PR; - [x] reworked the run_occ* driver functions a bit so that method defs are localized and there's less risk of missing an internal setting when adding new methods.; - [x] added stdsuite testing for new methods remp2 energy and oremp2 energy and gradient. added stdsuite testing for existing E & G for omp2, omp2.5, omp3, oremp2, olccd and filled in some gaps for ccsd, ccsd(t), a-ccsd(t). all conventional ints. fixed up some mis-set byproducts uncovered by stdsuite testing: OO ROHF was printing and setting wrong plain MP2 energies, OMP3 & OMP2.5 wasn't setting right `Wfn.energy_`, stop setting ROHF MP3 and MP2.5 out of caution.; - [x] tightened the min rms_mograd_convergence from 6.0 to 6.5 so that stdsuite (3 mol/basis sets) could reliably compute energies, gradients, and findif gradients to 1e-6. ## Questions; - [x] sometimes the non-OO value (e.g., MP2, LCCD) is available as an early byproduct of the OO calc (e.g., OMP2, OLCCD). this wasn't the case with REMP, and some QCVariables that stored a purported non-OO REMP had to be removed. @behnle, please confirm that this sounds right.; - @behnle, sorry for the long delay and scrambling of your PR. please feel free to comment and PR to this to modify.; - @bozkaya, this adds pretty cleanly onto your `occ` code, but do look it over if you want. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2653:2265,reliab,reliably,2265,https://psicode.org,https://github.com/psi4/psi4/pull/2653,2,"['avail', 'reliab']","['available', 'reliably']"
Availability,")$ (the same as the first bullet point in the reformulation above), and $X_{\text{alt},\kappa g} = \text{sign}(w_{g}) \sqrt{|w_{g}|} \kappa(r_{g})$. Essentially, $S_{N}$ now uses two variants of the $X$ matrix in its formulation, one of which folds the grid weight sign into itself. ## User API & Changelog headlines; - [X] COSX can now be used with a wider variety of grids, as a bug preventing COSX to be used with specific grid configurations has been fixed.; ## Dev notes & details; - [X] The COSX implementation has been reformulated to enable calculations with grids containing negative grid weights. ## Questions; - [x] Is the current way of handling computation of the numerical overlap matrix acceptable? Currently, two X matrices are used to form the numerical overlap matrix. One goal of folding the grid weight sign into the formation of G was to prevent the use of multiple X matrices. However, I don't think that can be done here without removing the call to `linalg::doublet` in the `compute_numeric_overlap` function. One could probably do a slightly-modified, manually-implemented matrix multiply with the grid weight folded in, and construct $S_{N}$ with a single $X$ matrix that way. But that comes at the cost of not utilizing BLAS. What does everyone consider preferable?; - [ ] What, exactly, is the best way to test this? I would like to add a test to `test_dfjcosk.py` for a new grid weight option with negative weights. Unfortunately, it seems that other codes that have COSX just don't have grid options that lead to negative grid weights. For now, I've been comparing against Psi4 COSX calculations using similar grid sizes and ensuring the calculations have similar energies, but I certainly wouldn't consider that robust. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2931:3412,robust,robust,3412,https://psicode.org,https://github.com/psi4/psi4/pull/2931,1,['robust'],['robust']
Availability,")'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:751: undefined reference to `CheMPS2::CASSCF::calcNOON(CheMPS2::DMRGSCFindices*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:767: undefined reference to `CheMPS2::CASSCF::rotate2DMand1DM(int, int, double*, double*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:768: undefined reference to `CheMPS2::DMRGSCFunitary::rotateActiveSpaceVectors(double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:776: undefined reference to `CheMPS2::DMRGSCFunitary::saveU(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:793: undefined reference to `CheMPS2::CASSCF::buildFmat(CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:794: undefined reference to `CheMPS2::CASSCF::buildWtilde(CheMPS2::DMRGSCFwtilde*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFintegrals const*, double*, double*)'; /home/seba/software/psi4-0.5/src/bin/dmrg/dmrgscf.cc:795: undefined reference to `CheMPS2::CASSCF::augmentedHessianNR(CheMPS2::DMRGSCFmatrix const*, CheMPS2::DMRGSCFwtilde const*, CheMPS2::DMRGSCFindices const*, CheMPS2::DMRGSCFunitary const*, double*, double*, double*)'; collect2: error: ld returned 1 exit status; src/bin/psi4/CMakeFiles/psi4.dir/build.make:617: recipe for target 'bin/psi4' failed; make[2]: *** [bin/psi4] Error 1; CMakeFiles/Makefile2:4698: recipe for target 'src/bin/psi4/CMakeFiles/psi4.dir/all' failed; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/264:24070,error,error,24070,https://psicode.org,https://github.com/psi4/psi4/issues/264,4,"['Error', 'error']","['Error', 'error']"
Availability,"); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the e",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5332,down,download,5332,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"* Advertised Version: 1.4; * Continuous Version: 1.4; * Release Date: 08 03 2021; * Documentation: http://psicode.org/psi4manual/1.4.0/; * Availability: Public, GitHub source, CMake build, [Conda binary installers](https://psicode.netlify.com/installs/v14/); * Span: [437 PRs](https://github.com/psi4/psi4/milestone/5?closed=1), roughly 1559-2264. ## Obtaining; - Binary installers: see link above; - Python Anaconda: `conda install psi4 -c psi4`.; - Windows conda packages available (#1560); - Dropped dependencies: deepdiff, Libint1; - Added dependencies: QCEngine, Libint2. ## New Methods; - Add ability to call Axilrod-Teller-Muto (ATM) 3-body dispersion correction from Grimme's DFTD3. Note that this is for dftd3 call, not energy call (#1491); - MP2D energies and gradients with help of external program (#1661); - SCAN functionals – SCAN0, revSCAN0, SCAN, revSCAN, BMK, revM06-L (#1597); - hybrid LDA functionals – CAM-LDA0, LDA0 (when Libxc puts them in a release) (#1645); - FISAPT-D (#1670); - Superposition of atomic potentials (SAP) guess (#1665, #1700); - Implementation of partial Cholesky orthogonalization (#1760, #1817, #1824 #1842) ; - Overlap half-derivative integrals (#1895) ; - TDDFT for HF, LDA, and GGA SCF wave functions (#1349, #1885, #1814, #2156) ; - UHF Hessians and gradients (#842) ; - LIBxc density screening (#1860) ; - Add MBIS charge partitioning (#1961, #2035, #2056, #2127) ; - External potentials to CP-SCF solver (#2006) ; - FMM and PE(ECP) (#2025) ; - SAPT(DFT) supports hybrid XC kernel in dispersion (#1865) ; - SAPT0-D routines, includes interface (#2081) ; - Electrostatic embedding to FSAPT (#2131); - Implement level shifts in RHF, UHF, CUHF, ROHF (#2225, #2237) . ## New External Libraries; - [QCEngine](https://github.com/MolSSI/QCEngine) - A QCSchema runner is now a required dependency since we use it for several interfaces (#1577); - DFTD3; - MP2D; - gCP; - CPPE - Polarizable embedding with environment modeled by multi-center multipole expansion w",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:139,Avail,Availability,139,https://psicode.org,https://github.com/psi4/psi4/issues/1562,2,"['Avail', 'avail']","['Availability', 'available']"
Availability,"**Note:** Migrated from my comment on #798 to expedite merging of that PR. When running OPTKING with the dynamic level turned on, i.e., with the module option:; ```; set optking {; dynamic_level = 1 # Can start dynamic level at any 1 - 7; }; ```; Optimization failure occurs if a bad-step exception occurs in the highest dynamic level (7), e.g.,; ```; The BAD_STEP_EXCEPTion handler:; Energy has increased in a minimization. Dynamic level is 7.; Consecutive backsteps is 1.; The INTCO_EXCEPTion handler:; Too many bad steps.; Dynamic level is 7.; exc.g_really_quit() is 0. **** Optimization has failed! (in 9 steps) ****; --------------------------; OPTKING Finished Execution; --------------------------; ```; However, the error isn't translated to a PsiException, and the program prints the ""Buy a developer a beer!"" successful exit message even though the optimization has, in fact, failed. This should raise some error, akin to the new `ConvergenceError` PsiException, so that the output does not fly under the radar as being successful.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/800:260,failure,failure,260,https://psicode.org,https://github.com/psi4/psi4/issues/800,3,"['error', 'failure']","['error', 'failure']"
Availability,"**TL;DR** If conda psi4 is acting up, update libint, too: `conda update libint -c psi4/label/dev`. If locally compiled psi4 is acting up, trigger a partial recompile: `cd objdir && rm -rf external/upstream/libint/ && make`. We've been planning for a while to distribute conda psi4 with libint compiled at `MAX_AM_ERI` 8, not 6. I have rebuilt the `libint` package and now the `v1.3rc1` will be the first `psi4` package with extended AM. Unfortunately, both **libint of different AM are not hot-swappable** and **AM not detectable at runtime**. That is, a built psi4 is perfectly happy to link (in the `ldd` sense) to a `libint.so` that is inconsistent with fixed data dimensions in psi4 _libmints_, and libmints can't even throw an error for enlightenment. . I could throw additional constraints on the psi4 pkg to make sure it picked the right libint build, but that would be misusing the tools a bit, would constrain things in future, and would only solve a third of the problem. I believe you can handle this transition manually with a couple commands. ### which `libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:732,error,error,732,https://psicode.org,https://github.com/psi4/psi4/issues/1533,1,['error'],['error']
Availability,", `MP2 TOTAL ENERGY`) from `energy('fnoccsd')`; - [x] routing; - [x] I think we got the logic of `check_disk_df` off a little in proc.py in that we were checking if correlated method type was `DISK_DF` (my fault) and along the way forbidding `PK` refs with `DF` correlated. I think I fixed this for dfocc but haven't done df with fnocc yet.; - [x] Also corrected logic that was letting through mixed ref+corl derivatives (e.g., pk+df) that had gotten lost. See #245 for much discussion. tl;dr we have none, so let's not continue to let psi proceed with calculations that give beer + wrong answers; - [x] CISD is a poor way to calculate MP2, and it's not like we don't have other modules for RHF & ROHF besides DETCI. And @CDSherrill has allowed that we're unlikely to get to the bottom of it, so closes #311 . And the mp2 detci code is unsteady for multiple-detci-single-psi4 calcs, so it's not smooth to test.; - [x] qcvars; - [x] Newly sets `<mtd> TOTAL GRADIENT` from findif in driver on wfn and P::e; - [x] Newly sets `MP2 SINGLES ENERGY` and `MP2 DOUBLES ENERGY` in C++ where available.; - [x] Fixes up the conventional CCSD qcvars in ccenergy, including closes #1702 ; - [x] Fixes up CD/DF-CCSD qcvars in fnocc, dfocc; - [x] Moves qcvars in fnocc from P::e.globals to wfn; - [x] Adds fc/ae aspects to managed method for gradient mp2. Old behavior for fc conv mp2 grad was to stop with an informative message. New behavior is to hop into finite difference. Users who definitely want to avoid finite difference for compute time or accuracy should run `gradient(..., dertype=1)` to get psi to stop instead. ## Questions; - [ ] ~Organization of tests is not finalized. qcng does 6 tests per method (r/u/ro x ae/fc) (https://github.com/MolSSI/QCEngine/blob/master/qcengine/programs/tests/test_standard_suite_ccsd.py), which is nice, but in psi, it's nice to keep all the modules together. I'm undecided.~; - [ ] @JonathonMisiewicz, did you ever get the impression that `pcg_convergence` should be tig",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850:2102,avail,available,2102,https://psicode.org,https://github.com/psi4/psi4/pull/1850,1,['avail'],['available']
Availability,", i, j) (((i) == (am)) ? 0 : (((((am) - (i) + 1) * ((am) - (i))) >> 1) + (am) - (i) - (j))); | ; In file included from build/stage/include/libint2/engine.h:1019,; from psi4/src/psi4/libmints/shellpair.h:8,; from psi4/src/psi4/libmints/eri.h:42,; from psi4/src/export_mints.cc:54:; build/stage/include/libint2/./engine.impl.h:35:11: fatal error: boost/preprocessor.hpp: No such file or directory; 35 | # include <boost/preprocessor.hpp>; | ^~~~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; [11/1097] Building CXX object src/CMakeFiles/core.dir/read_options.cc.o; ninja: build stopped: subcommand failed.; FAILED: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build ; cd build/psi4-core-prefix/src/psi4-core-build && /usr/bin/cmake --build .; ninja: build stopped: subcommand failed.; ```. https://github.com/psi4/psi4/blob/2e3b0f2039ff0e9a968f964ede868adf790ca54e/psi4/src/CMakeLists.txt#L55-L61. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following part:; ```cmake; if (BUILD_SHARED); add_library (int-shared SHARED $<TARGET_OBJECTS:int-obj>); target_link_libraries (int-shared INTERFACE Eigen3::Eigen); set_target_properties (int-shared PROPERTIES SOVERSION ${LIBINT_MAJOR_SOVERSION}; MACOSX_RPATH ON; OUTPUT_NAME ""int2""; EXPORT_NAME ""cxx""); target_include_directories(int-shared INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>); endif(). if (BUILD_STATIC); add_library (int-static STATIC $<TARGET_OBJECTS:int-obj>); target_link_libraries (int-static INTERFACE Eigen3::Eigen); set_target_properties (int-static PROPERTIES OUTPUT_NAME ""int2""; EXPORT_NAME ""cxx""); target_include_directories(int-static INTERFACE $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>); endif(); ```; which seems to come from https://github.com/loriab/libint/blob/6c3a9ce2ef01b6beb7c2804318699c8ba50065d6/src/lib/libint/CMakeLists.txt.export#L117-L133. Here, the dependency on Eigen is properly set, but that on boost is not, resulting in build failure.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2427:4367,failure,failure,4367,https://psicode.org,https://github.com/psi4/psi4/issues/2427,1,['failure'],['failure']
Availability,", line 81, in <module>; File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/driver.py"", line 548, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/proc.py"", line 685, in select_lccd; return func(name, **kwargs); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/proc.py"", line 2095, in run_dfocc; dfocc_wfn = core.dfocc(ref_wfn); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 375, in extrapolate; coeffs = self.diis_coefficients(); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 254, in diis_coefficients; B[i, j] = self.get_dot_product(i, j); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 198, in get_dot_product; dot_product += Rix.vector_dot(Rjx). RuntimeError: ; Fatal Error: Matrix::vector_dot: Dimensions do not match!. Error occurred in file: /home/tu/tu_tu/tu_ctibc01/prog/psi4/psi4/psi4/src/psi4/libmints/matrix.cc on line: 1703; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Matrix::vector_dot(psi::Matrix const*). Printing out the relevant lines from the Psithon --> Python processed input file:; energy('scf',write_orbitals='scf_mos'); Avals=[0.00, 0.05, 0.10, 0.12, 0.15, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00]; for A in Avals:; psi4.core.print_out(""running step %5.2f"" % A); core.set_global_option(""REMP_A"", A); --> energy('oremp',restart_file='scf_mos'); core.set_global_option(""MO_READ"", ""true""); psi4.core.print_out(""""). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::vector_dot: Dimens",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2591:1990,Error,Error,1990,https://psicode.org,https://github.com/psi4/psi4/issues/2591,1,['Error'],['Error']
Availability,"- [ ] Examine the autofunction signatures in energy, opt, freq, prop.rst in doc/sphinxman/source. These have arguments in the correct order. Rearrange the argument order in the docstrings of the respective functions in share/python/driver.py; - [ ] modify section ""PSI variables & return values"" in doc/sphinxman/source/psithoninput.rst; - separate out the last paragraph into a new section ""return values""; - include in it the gist of the signatures description at http://forum.psicode.org/t/detecting-optimization-failure/203/4?u=loriab .; - also mention getting G & H back as return values or extracting them from Wavefunction and a couple things you can do with them like print_out(), rms(), convert to np.array",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/352:516,failure,failure,516,https://psicode.org,https://github.com/psi4/psi4/issues/352,1,['failure'],['failure']
Availability,"- [x] PSI_API doesn't work for gnu compiler and pointer returning fns whe not at start of decl. Affects `v2rdm_casscf/tests/v2rdm6/input.dat`; - [x] Adds to python module, `psi4.executable` returning the psithon script/binary/executable. Also cleaned up main psi4 namespace by deleting some intermediate strings.; - [x] To the `psi4Config.cmake` consumed by downstream, defines `psi4_SYS_PATH` which is the full path needed to be added to `sys.path` in order to `import psi4`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1034:358,down,downstream,358,https://psicode.org,https://github.com/psi4/psi4/pull/1034,1,['down'],['downstream']
Availability,"- [x] bump cmake to 3.15 from 3.8 (to get decent FindPython with NumPy); - [x] switch out Python detection to fix #2060. note that all the CM vars now start `Python_`, not `PYTHON_`; - [x] use prebuilt g2g for Windows Azure; - [x] bump g2g to 2.0.7; - [ ] ~added some fn redefs for Windows in psi4-dec.h . right place?~; - [x] get windows conda package building through azure. Ok, Windows conda package was the original aim of this PR, but that's also in the Libxc5 PR that uses prebuilt g2g & libxc & libint2. This PR switched to using the new Python detection advocated by pb11: https://pybind11.readthedocs.io/en/stable/compiling.html#findpython-mode . This means we're not using the FindPythonLibsNew that psi4 has a copy of from pb11 and which in turn we install for the benefit of plugins. Of course that means we need to use cmake 3.15+ (released July 2019). That's quite a leap from the 3.8+ we had before, and lgtm doesn't have it, hence that failure. We can drop a lot of explicit properties on `core` since pb11 is providing them (see https://github.com/pybind/pybind11/blob/master/tools/pybind11NewTools.cmake and https://github.com/pybind/pybind11/blob/master/tools/pybind11Common.cmake), but I'm not sure if this is the right time to make the leap. I'm also a bit surprised that `add_library(... MODULE)` seems to be working with the plugin tests where before we used `SHARED` to appear like a linux lib. Glad of opinions here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2048:952,failure,failure,952,https://psicode.org,https://github.com/psi4/psi4/pull/2048,1,['failure'],['failure']
Availability,"- [x] integrate proper (non-WSL) Windows downloads; - [ ] integrate some options like base env/conda env and how-to-update instructions into guide so can retire reST docs; - [ ] reST docs should become like traditional `INSTALL` documents to be read only by ppl who want to build psi from source with their choice of compilers, etc. and who relish details, not by everyday user or dev.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1840:41,down,downloads,41,https://psicode.org,https://github.com/psi4/psi4/issues/1840,1,['down'],['downloads']
Availability,"- [x] need to redirect docs latest and master on sirius to on psicode. Many ways how here: https://css-tricks.com/redirect-web-page/ . Perhaps Apache best? I know that's installed. Want to redirect rather than shutdown so that google and co. don't reset the popularity ratings.; - [x] need to tarball the trac website and stuff it somewhere. Not everything was transferred to the wiki, but most everything _useful_ migrated. Should sirius be decommissioned someday,; - [x] tarball up all the old (beta2 onwards) docs builds, establish them on godaddy or something, and relink on psicode.; - [x] shut down trac page",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/112:600,down,down,600,https://psicode.org,https://github.com/psi4/psi4/issues/112,1,['down'],['down']
Availability,"-- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Try OpenMP Fortran flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -fopenmp ; -- Math lib search order is MKL;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- No BLAS/LAPACK implementation found, but explicit libraries specified; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /usr/lib64/librt.so ; -- Found libdl: /usr/lib64/libdl.so ; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /cluster/apps/python/2.7.6/x86_64/bin/python (found version ""2.7.6"") ; -- Found Python: /cluster/apps/python/2.7.6/x86_64/lib64/libpython2.7.so ; -- Boost version: 1.55.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- CheMPS2 not found. The pre-packaged version will be built.; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- DKH in LibMints ENABLED; -- GDMA is ENABLED; -- PCMSolver not found. The pre-packaged version will be built.; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeOutput.log"".; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeError.log"".; ```. How can I disable the copying of the test files ? Any help is appreciated. Best regards. Sam",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:12992,error,errors,12992,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['error'],['errors']
Availability,"---------------------------------!; ! !; ! Fatal Error: Matrix::diagonalize: DSYEV failed! !; ! Error occurred in file: !; ! /theoryfs2/ds/dpoole34/Documents/Codes/psi4/psi4/src/psi4/libmints/matrix.cc !; ! on line: 1715 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Matrix::diagonalize(psi::Matrix&, psi::Vector&, psi::diagonalize_order) !; ! !; !----------------------------------------------------------------------------------!; ```. Various things can be switched, with equally varying effects:; * Switching the COSX_PRUNING_SCHEME from ROBUST to TREUTLER fixes these calculations.; * Switching from 146 spherical points to either 110 or 170 fixes these calculations.; * Switching from 50 radial points to either 55 or 45 does _not_ fix these calculations.; * Switching from water to benzene does _not_ fix these calculations. Finally, from my observation, the problem seems to be localized specifically to COSX. Consider the following input:; ```; molecule mol {; 0 1; O; H 1 0.96; H 1 0.96 2 104.5; symmetry c1; no_reorient; no_com; }. set {; scf_type direct; df_scf_guess false; basis aug-cc-pVDZ; e_convergence 1.0e-10; incfock true; incfock_full_fock_every 4; ints_tolerance 1.0e-12; dft_spherical_points 146; dft_radial_points 50; dft_vv10_spherical_points 146; dft_vv10_radial_points 50; dft_pruning_scheme robust; mbis_spherical_points 146; mbis_radial_points 50; mbis_pruning_scheme robust; }. energy, wfn = energy('b3lyp-nl', return_wfn=True); oeprop(wfn, ""MBIS_CHARGES"", ""MBIS_VOLUME_RATIOS""); ```. This calculation uses other components of Psi4 (DFT, VV10, MBIS) which enable specification of grid points and/or pruning schemes. This calculation, using 146 spherical points and a ROBUST pruning scheme where allowable, runs fine. . Given that this issue is localized to COSX seemingly, I will further explore this and see what I find.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890:3324,robust,robust,3324,https://psicode.org,https://github.com/psi4/psi4/issues/2890,3,"['ROBUST', 'robust']","['ROBUST', 'robust']"
Availability,"---------; @IRC 1 1 -549.84523511 -1.42e-05 o 3.60e-03 9.91e-04 4.76e-03 2.20e-03 ~; -----------------------------------------------------------------------------------------------------------. Successfully symmetrized geometry.; Writing optimization data to binary file.; Structure for next step:; Cartesian Geometry (in Angstrom); O 0.0000000000 0.0006522925 -3.0256582351; H 0.0000000000 -0.7545860178 -2.4217783475; O 0.0000000000 0.0004273016 0.0969091320; H 0.0000000000 0.7536033792 -2.4213898491; S 0.0000000000 -0.0000969555 1.6158069683; --------------------------; OPTKING Finished Execution; --------------------------. Structure for next step:; Molecular point group: cs; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 3:. O; H 1 r1; O 1 r2 2 a1; H 1 r1 3 a1 2 d1; S 1 r3 2 a1 4 d2. a1 = 51.3453210949; d1 = -180.0000000000; d2 = -0.0000000000; r1 = 0.9654406358; r2 = 3.1225673752; r3 = 4.6414652638. gradient() will perform analytic gradient computation. ... ==> Geometry <==. Molecular point group: cs; Full point group: C2v. Geometry (in Angstrom), charge = 0, multiplicity = 3:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -3.024634427518 15.994914619560; H 0.000000000000 -0.753936469287 -2.421595936667 1.007825032070; O 0.000000000000 0.000000000000 0.097932947678 15.994914619560; H 0.000000000000 0.753936469287 -2.421595936667 1.007825032070; S 0.000000000000 0.000000000000 1.616830836315 31.972070999000; ```. Even though the step clearly lowers my symmetry to the expected Cs, I get back to C2v symmetry in my subsequent computation. _NOTE: This geometry is optimized at CCSD(T), and the method used is B3LYP. That shouldn't cause an error like this. I observe the error when I optimize with CCSD(T) via p4c4 as well, but I've lowered the method for simplicity. I also can't imagine the initial hessian mattering either, but I can supply it if helpful._",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1126:2809,error,error,2809,https://psicode.org,https://github.com/psi4/psi4/issues/1126,2,['error'],['error']
Availability,--test error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1902:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/1902,1,['error'],['error']
Availability,"-312.91138860100165 1.97759e+00 3.74941e-01 DIIS; @DF-RHF iter 13: -313.42095297268111 -5.09564e-01 3.75328e-01 DIIS; @DF-RHF iter 14: -314.00208386703940 -5.81131e-01 3.74845e-01 DIIS; @DF-RHF iter 15: -313.82934050347035 1.72743e-01 3.74976e-01 DIIS; @DF-RHF iter 16: -315.89990741359236 -2.07057e+00 3.76160e-01 DIIS; @DF-RHF iter 17: -313.12609734973461 2.77381e+00 3.74988e-01 DIIS; @DF-RHF iter 18: -312.92378783647285 2.02310e-01 3.74498e-01 DIIS; @DF-RHF iter 19: -317.24645796226451 -4.32267e+00 3.77492e-01 DIIS; @DF-RHF iter 20: -317.60418344797176 -3.57725e-01 3.78088e-01 DIIS; @DF-RHF iter 21: -316.25416490484400 1.35002e+00 3.76492e-01 DIIS; @DF-RHF iter 22: -315.51131292261630 7.42852e-01 3.75711e-01 DIIS; @DF-RHF iter 23: -315.37233230819385 1.38981e-01 3.75579e-01 DIIS; @DF-RHF iter 24: -315.37427315424492 -1.94085e-03 3.75585e-01 DIIS; @DF-RHF iter 25: -315.36730485039720 6.96830e-03 3.75579e-01 DIIS; @DF-RHF iter 26: -315.36589297460404 1.41188e-03 3.75578e-01 DIIS; @DF-RHF iter 27: -315.36543355687996 4.59418e-04 3.75578e-01 DIIS; @DF-RHF iter 28: -315.36456132195099 8.72235e-04 3.75577e-01 DIIS; @DF-RHF iter 29: -315.36496171844306 -4.00396e-04 3.75577e-01 DIIS; @DF-RHF iter 30: -315.36444779551914 5.13923e-04 3.75577e-01 DIIS; @DF-RHF iter 31: -315.36454935016326 -1.01555e-04 3.75577e-01 DIIS; @DF-RHF iter 32: -315.36429506717400 2.54283e-04 3.75577e-01 DIIS; @DF-RHF iter 33: -315.36492875519383 -6.33688e-04 3.75577e-01 DIIS; @DF-RHF iter 34: -315.36475459725352 1.74158e-04 3.75577e-01 DIIS; @DF-RHF iter 35: -315.36472123328099 3.33640e-05 3.75577e-01 DIIS; @DF-RHF iter 36: -315.36482066630248 -9.94330e-05 3.75577e-01 DIIS; ```; The DIIS error hangs around the same number as with the new version of the SAD guess. The above output is especially weird, since the energy error becomes small while the DIIS error is large. Could the ECP contribution to the Fock matrix asymmetric? This can yield an energy that appears converged but a large orbital gradient.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1433:2765,error,error,2765,https://psicode.org,https://github.com/psi4/psi4/issues/1433,3,['error'],['error']
Availability,"-input-7-95f03e942086> in <module>; 9 ; 10 psi4.set_options({'reference': 'uhf','basis': basis_set}); ---> 11 e, wfn = psi4.energy('hf',return_wfn=True); 12 ; 13 print(""energy ="",e,"" and number of basis functions ="", wfn.basisset().nbf()). /usr/local/psi4/lib/psi4/driver/driver.py in energy(name, **kwargs); 568 shutil.copy(item, targetfile); 569 ; --> 570 wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); 571 ; 572 for postcallback in hooks['energy']['post']:. /usr/local/psi4/lib/psi4/driver/procrouting/proc.py in run_scf(name, **kwargs); 2180 ; 2181 ; -> 2182 scf_wfn = scf_helper(name, post_scf=False, **kwargs); 2183 returnvalue = scf_wfn.energy(); 2184 . /usr/local/psi4/lib/psi4/driver/procrouting/proc.py in scf_helper(name, post_scf, **kwargs); 1511 ); 1512 ; -> 1513 e_scf = scf_wfn.compute_energy(); 1514 for obj in [core, scf_wfn]:; 1515 for pv in [""SCF TOTAL ENERGY"", ""CURRENT ENERGY"", ""CURRENT REFERENCE ENERGY""]:. /usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py in scf_compute_energy(self); 81 self.initialize_jk(self.memory_jk_); 82 else:; ---> 83 self.initialize(); 84 ; 85 try:. /usr/local/psi4/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py in scf_initialize(self); 195 mints.set_rel_basisset(self.get_basisset('BASIS_RELATIVISTIC')); 196 ; --> 197 mints.one_electron_integrals(); 198 self.initialize_jk(self.memory_jk_, jk=jk); 199 if self.V_potential():. RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /home/billy/Python_stuff/psi4/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1794:2775,Error,Error,2775,https://psicode.org,https://github.com/psi4/psi4/issues/1794,4,"['Error', 'error']","['Error', 'error']"
Availability,"-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic,",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3437,ROBUST,ROBUST,3437,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3; -- Fortran compiler flags: -fcray-pointer -DVAR_GFORTRAN -DVAR_MFDS -fno-range-check -fautomatic -fPIC -fimplicit-none -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -funroll-all-loops -w -ftree-vectorize; -- Libraries : /cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so;/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CX",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7946,Error,Error,7946,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi4-1.0]$; ```; At the end of the output of the setup script, the user is pointed to CMake log files:. ```; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeOutput.log"".; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeError.log"".; ```; These log files do not exist:; ```. [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/objdir/CM",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:1341,Error,Error,1341,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,". For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/mol (0.5 % of a reaction energy of 188 kcal/mol !); * speed-ups: `ROBUST=1.33 `; `TREULTER=1.36`. _abso",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3838,ROBUST,ROBUST,3838,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,".0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:4838,down,download,4838,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,".3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1); ```; * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. ### Notes; * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux binary but throw an angular momentum error on mac binary.; * `simint` max is AM7 both past and near future. Only `libint` is changing.; * Between higher AM and optimizing for multiple architectures, the new libint pkg is _heavy_, >120mb zipped. For psi4 CI, I'm planning to pull the old AM6 to lessen the strain on Travis. This won't help downstream projects that summon a built psi4 to test their addon.; * I haven't posted the AM8 package yet, as I want the stack to finish building, and I wanted to give you all a heads-up. I'll post to this issue when the package goes up. Will only be in `-c psi4/label/dev` for now, not `-c psi4`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:3104,error,error,3104,https://psicode.org,https://github.com/psi4/psi4/issues/1533,2,"['down', 'error']","['downstream', 'error']"
Availability,".6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3645,down,download,3645,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,".81057 2.57479; H -0.26633 0.85763 1.80344; H 2.16195 0.28247 -0.96305; H 1.24281 1.54792 -0.09693; H -1.24645 -1.58985 0.04960; H -2.69979 -0.44218 0.33707; H -1.53347 1.35513 -0.87676; }. nrg, wfn = energy('M06-2X', return_wfn=True); wfn.to_file(""test_restart""); ```. This creates a ""test_restart.npy"" file. I then try to compute the energy for the same molecule using this test_restart.npy file and a different input file:. ```py; set_num_threads(8); basis {; assign def2-SVP; }. molecule {; 0 1; C 1.13408 -0.39513 0.82671; C 0.24384 -0.10727 1.77918; C 1.25947 0.48184 -0.37564; C -1.70320 -0.60897 -0.07371; C -1.08313 0.35853 -0.75350; O 0.15798 0.21455 -1.28105; H 1.61155 -1.37871 0.79725; H -0.00411 -0.81057 2.57479; H -0.26633 0.85763 1.80344; H 2.16195 0.28247 -0.96305; H 1.24281 1.54792 -0.09693; H -1.24645 -1.58985 0.04960; H -2.69979 -0.44218 0.33707; H -1.53347 1.35513 -0.87676; }. nrg, wfn = energy('M06-2X', return_wfn=True, restart_file=""test_restart""); ```. However, I get the following error :. ```; Traceback (most recent call last):; File ""/home/tony/psi4conda/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/driver.py"", line 599, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2390, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1520, in scf_helper; old_wfn = core.Wavefunction.from_file(read_filename); File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/p4util/python_helpers.py"", line 196, in _core_wavefunction_from_file; basisset = core.BasisSet.build(molecule, 'ORBITAL', basis_name, puream=basis_puream); File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/p4util/python_h",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2571:1664,error,error,1664,https://psicode.org,https://github.com/psi4/psi4/issues/2571,1,['error'],['error']
Availability,".95802 -2.84738 2.22072; H -0.62594 -1.95593 2.43463; H -0.25639 -4.56534 1.39064; C -3.89573 -1.47663 1.11455; H -2.84685 -1.21526 1.24711; O -3.96785 -2.64213 0.26554; C -3.25927 -2.48505 -0.9528; H -3.38296 -3.42013 -1.49634; C -3.83016 -1.30519 -1.76284; H -4.84213 -1.57034 -2.07564; O -3.08657 -1.08539 -2.95725; H -2.16485 -0.88813 -2.71436; C -3.89865 -0.04023 -0.90552; H -2.87924 0.29308 -0.69629; O -4.61098 1.01217 -1.56224; H -4.00729 1.44319 -2.17836; C -4.59468 -0.30612 0.4222; H -5.64733 -0.55648 0.23973; O -4.51034 0.8485 1.2693; H -4.69798 1.62621 0.72518; C -4.47115 -1.85465 2.46592; H -5.33699 -2.50924 2.30958; O -3.50744 -2.49324 3.3135; H -2.76983 -2.83605 2.77919; H -4.81526 -0.95879 2.98516; O 2.01537 -1.70774 -1.89652; H 1.17126 -1.21952 -1.9851; units angstrom. }; set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }. energy('sapt0'); energy('sapt0-ct'); ```. User reported error message:; ```; Traceback (most recent call last):; File “/home/think/psi4conda/bin/psi4”, line 248, in; exec(content); File “”, line 147, in; File “/home/think/psi4conda/lib//python3.6/site-packages/psi4/driver/driver.py”, line 460, in energy; wfn = procedures[‘energy’][lowername](lowername, molecule=molecule, **kwargs); File “/home/think/psi4conda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py”, line 3278, in run_sapt; e_sapt = core.sapt(dimer_wfn, monomerA_wfn, monomerB_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits, std::allocator >, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::rw(unsigned int, char*, psi::psio_address, unsigned long, int); psi::sapt::SAPT::zero_disk(int, char const*, int, int); psi::sapt::SAPT0::df_integrals(); ```. @loriab reported being able to reproduce ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1328:3624,error,error,3624,https://psicode.org,https://github.com/psi4/psi4/issues/1328,1,['error'],['error']
Availability,".bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3914,down,download,3914,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"/"", return_wfn=True); print(""converting energy ...""); kcal_energy = energy * psi4.constants.hartree2kcalmol; print(""energy {:.2f} kcal/mol"".format(kcal_energy)); ```; Specifically the output I get is ; ```; set output file path; create molecule...; calculate energy...; Segmentation fault: 11; ```; I tried to attach the .dat file, but github wouldn't let me, but this is end of it:; ```; ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: MINIX; Blend: MINIX; Number of shells: 42; Number of basis functions: 64; Number of Cartesian functions: 64; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (MINIX AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 8 entry O line 318 file /Users/cbannan/miniconda3/envs/baby_env/share/psi4/basis/def2-universal-jkfit.gbs; atoms 2-5, 7, 9, 14-15 entry C line 198 file /Users/cbannan/miniconda3/envs/baby_env/share/psi4/basis/def2-universal-jkfit.gbs; atoms 6 entry N line 258 file /Users/cbannan/miniconda3/envs/baby_env/share/psi4/basis/def2-universal-jkfit.gbs; atoms 10-13, 16-20 entry H line 18 file /Users/cbannan/miniconda3/envs/baby_env/share/psi4/basis/def2-universal-jkfit.gbs; ```. If I use a conda environment I built a few weeks ago the script runs fine. This is the same as we are seeing on our cloud platform on AWS. Docker images built 2 weeks ago (on May 23) are running fine. But the ones we make this week (on May 31) are failing with seg faults. . Now, I realize you all have moved on to 1.6, but we are too late in our development cycle to upgrade a dependency and our last package was built around psi4 1.3 so that is the only other version we've validated. So unfortunately if I can't track this down ASAP we will have to downgrade (even though we've seen performance improvement with the new version)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2593:4177,fault,faults,4177,https://psicode.org,https://github.com/psi4/psi4/issues/2593,3,"['down', 'fault']","['down', 'downgrade', 'faults']"
Availability,"/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_python.so -DBoost_REGEX_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_regex.so -DBoost_SERIALIZATION_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_serialization.so -DBoost_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:6968,Error,Error,6968,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](ht",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:4632,down,download,4632,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find this function, I took a lucky guess that Psi4 had some kind of cleanup function since independent calculations succeeded. Instead, this should probably be in: https://psicode.org/psi4manual/master/psiapi.html. I am fully willing to submit a PR with this documentation, but I don't have much experience with Psi4/QC knowledge in genera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:2010,Error,Error,2010,https://psicode.org,https://github.com/psi4/psi4/issues/3164,2,"['Error', 'error']","['Error', 'error']"
Availability,"/home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory '/home/work/psi4/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:647: CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```. I configured psi4 with; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBRARIES=""-lopenblaso"" -DENABLE_AMBIT=OFF -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_PCMSolver=OFF -DCMAKE_INSTALL_PREFIX=/home/work/psi4/install -DCMAKE_AR=""/usr/bin/gcc-ar"" -DCMAKE_RANLIB=""/usr/bin/gcc-ranlib"" -DCMAKE_BUILD_TYPE=RelWithDebInfo ..; ```; and started with a clean build directory. I am on the current master, commit 42016c2a4462b6d7e9f030df4e75e7d81b50b9a8. This is on Fedora 28 with; ```; $ gcc --version; gcc (GCC) 8.1.1 20",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:3908,Error,Error,3908,https://psicode.org,https://github.com/psi4/psi4/issues/1256,2,['Error'],['Error']
Availability,"/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: intel-linux; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - not found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - not found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -qopenmp -g -O0 -debug -DDEBUG -Wall -Wuninitialized -Wno-unknown-pragmas; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -qopenmp -O0 -g -w3 -vec-report -Wall -Wuninitialized ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-openmp;-Wl,--end-group;-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_lapack95_lp64.a;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_intel_lp64.so;-openmp;-Wl,--end-group; -- Definitions :",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:4136,avail,available,4136,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['avail'],['available']
Availability,"/master, but it completed okay with psi4/v1.3.2. This is due to the default integral screening threshold (`INTS_TOLERANCE`) changing from 0.0 to 1e-12 for the SCF module. The calculation converges fine when `INTS_TOLERANCE` is reset to 0.0:. ```; memory 64 GB. molecule mol {; 0 1 ; O -1.43902644 2.20001916 0.52666667; C -0.23262529 0.21202727 0.63286928; N -1.24873102 -2.11271381 0.47828968; C -3.7777515 -2.85877768 0.08730535; C -4.46145441 -5.34849185 0.74152853; C -2.56341349 -7.19739989 1.87800982; C -6.94682221 -6.16901094 0.3643392; C -8.75094374 -4.55140537 -0.66556154; C -8.08273658 -2.09627319 -1.33509151; C -5.61324248 -1.25402226 -0.96753978; C 2.6282311 0.28062433 1.05654588; C 3.98467651 2.83553405 0.63381414; N 6.54374363 2.70155247 -0.40515728; C 8.61979675 2.25141971 0.96961847; O 8.56480572 1.89615119 3.26884825; H -0.04232987 -3.54814977 0.82014114; H -3.42815216 -8.99585225 2.39447197; H -1.03934937 -7.57742382 0.54424112; H -1.71851694 -6.40333698 3.5817869; H -7.49559868 -8.07309898 0.86738429; H -10.66693706 -5.20506164 -0.95166608; H -9.47697652 -0.84262888 -2.14880758; H -5.16216486 0.65044373 -1.5435283; H 3.24390387 -0.55898099 2.83213254; H 3.51375676 -1.09698602 -0.19445282; H 3.04888413 3.57366108 -1.05446718; H 3.38827894 4.41440023 1.82490852; H 6.75331425 3.01713673 -2.28241121; H 10.34700643 2.24329388 -0.20333453; symmetry c1; no_com; no_reorient; units bohr; }. # set ints_tolerance 0.0 # uncomment to fix. energy('pbe0/aug-cc-pv_tpd_z'); ```; ~~[screen_zero.out.txt](https://github.com/psi4/psi4/files/5984125/screen_zero.out.txt)~~; ~~[screen_default.out.txt](https://github.com/psi4/psi4/files/5984126/screen_default.out.txt)~~; [failed_jobs.zip](https://github.com/psi4/psi4/files/5985739/failed_jobs.zip). I can post additional similar systems that fail at the same level of theory. Does this warrant changing the `INTS_TOLERANCE` default to a more conservative value? Or is this something that would be fixed by a more robust SCF solver?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2114:2048,robust,robust,2048,https://psicode.org,https://github.com/psi4/psi4/issues/2114,1,['robust'],['robust']
Availability,"/psi4-09-26-22/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 33, in <module>; File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/util.py"", line 72, in oeprop; free_atom_volumes(wfn); File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/prop_util.py"", line 121, in free_atom_volumes; psi4.oeprop(at_wfn, 'MBIS_CHARGES', title=a_sym + "" "" + method, free_atom=True); File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/util.py"", line 74, in oeprop; oe.compute(). RuntimeError: ; Fatal Error: Atomic Number 53 unsupported by MBIS; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1657298395608/work/psi4/src/psi4/libmints/oeprop.cc on line: 1871; The most recent 5 function calls were:. psi::OEProp::compute_mbis_multipoles(bool); psi::OEProp::compute(). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""SCF_TYPE"", ""df""); core.set_global_option(""BASIS"", ""DZVP""); core.set_global_option(""E_CONVERGENCE"", 8); core.set_global_option(""D_CONVERGENCE"", 8); e, wfn = energy('scf', return_wfn=True); --> oeprop(wfn, ""MBIS_VOLUME_RATIOS"", 'MBIS_CHARGES', title='CH3I-dzvp'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Atomic Number 53 unsupported by MBIS !; ! Error occurred in file: /scratch/psilocaluser/conda- !; ! builds/psi4-multiout_1657298395608/work/psi4/src/psi4/libmints/oeprop.cc on !; ! line: 1871 !; ! The most recent 5 function calls were: !; ! psi::OEProp::compute_mbis_multipoles(bool) !; ! psi::OEProp::compute() !; ! !; !----------------------------------------------------------------------------------!; ```. It works fine with `def2-svp`, I doubt whether this is related to an earlier fix for auxiliary basis set for DZVP (https://github.com/psi4/psi4/pull/2134). . Best,; Pavan. Edit: Old PR updated to 2134",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2728:1969,Error,Error,1969,https://psicode.org,https://github.com/psi4/psi4/issues/2728,2,['Error'],['Error']
Availability,"/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2236,Error,Error,2236,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1599,error,error,1599,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cub",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3119,Error,Error,3119,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"/tree/master) any point after https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9 | 3Dec23, after #3047, v1.9 (see also A') | [libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:2972,down,download,2972,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"0 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 239042; Total Blocks = 1831; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 9 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-8, 10-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.162 GiB; user supplied 0.162 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.161 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5610928795E-04.; Reciprocal condition number of the overlap matrix is 9.8342984140E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -39.70316824232670 -3.97032e+01 0.00000e+00 ; @DF-RKS iter 1: -43.27234536758360 -3.56918e+00 3.69413e-03 ADIIS/DIIS; @",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:9807,Mask,Mask,9807,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['Mask'],['Mask']
Availability,0 hdf63c60_0 ; libint 1.2.1 hb4a4fd4_6 psi4; libstdcxx-ng 8.2.0 hdf63c60_1 ; libxc 4.3.4 h7b6447c_0 psi4; metis 5.1.0 hf484d3e_4 ; mkl 2019.3 199 ; mkl_fft 1.0.12 py37ha843d7b_0 ; mkl_random 1.0.2 py37hd81dba3_0 ; more-itertools 7.0.0 py37_0 ; ncurses 6.1 he6710b0_1 ; networkx 2.3 pypi_0 pypi; numpy 1.16.3 py37h7e9f1db_0 ; numpy-base 1.16.3 py37hde5b4d6_0 ; openfermion 0.9 py37hd763080_1 psi4; openfermionpsi4 0.4 py37h934b37d_0 psi4; openssl 1.1.1b h7b6447c_1 ; pcmsolver 1.2.1 py37h142c950_0 psi4; pint 0.9 py37_2 psi4; pip 19.1.1 py37_0 ; pluggy 0.11.0 pypi_0 pypi; psi4 1.3.2+ecbda83 py37h31b3128_0 psi4; psi4-rt 1.3.2 py37ha6b60c8_0 psi4; py 1.8.0 py37_0 ; pycosat 0.6.3 py37h14c3975_0 ; pycparser 2.19 py37_0 ; pydantic 0.23 py37_0 psi4; pylibefp 0.4+f42ffb8 py37h7adc81b_1 psi4; pyopenssl 19.0.0 py37_0 ; pysocks 1.7.0 py37_0 ; pytest 4.5.0 py37_0 ; python 3.7.3 h0371630_0 ; qcelemental 0.4.0 pypi_0 pypi; readline 7.0 h7b6447c_5 ; requests 2.21.0 py37_0 ; resp 0.7 py37ha93d1a2_0 psi4; ruamel_yaml 0.15.46 py37h14c3975_0 ; scipy 1.2.1 py37h7c811a0_0 ; setuptools 41.0.1 py37_0 ; simint 0.7 h642920c_1 psi4; six 1.12.0 py37_0 ; snsmp2 1.0.3 py37he403277_2 psi4; sqlite 3.28.0 h7b6447c_0 ; suitesparse 5.2.0 h9e4a6bb_0 ; tbb 2019.4 hfd86e86_0 ; tk 8.6.8 hbc83047_0 ; urllib3 1.24.2 py37_0 ; v2rdm_casscf 0.8 py37hc3560e4_6 psi4; wcwidth 0.1.7 py37_0 ; wheel 0.33.4 py37_0 ; xz 5.2.4 h14c3975_4 ; yaml 0.1.7 had09818_2 ; zlib 1.2.11 h7b6447c_3 ; ```. `echo $PATH` gives; `/opt/gridware//mpi/gcc/openmpi/3.1.4/bin/:/opt/gridware//compilers/gcc/6.2.0//bin/:/users/grte2001/psi4conda/bin:/users/grte2001/psi4conda/condabin:/usr/lib64/qt-3.3/bin:/opt/gridware/ge/bin/lx24-amd64:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/users/grte2001/Multiwfn_3.7_dev_bin_Linux:/users/grte2001/bin`. `echo $PYTHONPATH` gives nothing ; `echo $LD_LIBRARY_PATH` gives; `/opt/gridware//mpi/gcc/openmpi/3.1.4/lib/:/opt/gridware//compilers/gcc/6.2.0//lib:/opt/gridware//compilers/gcc/6.2.0//lib64`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792:2706,echo,echo,2706,https://psicode.org,https://github.com/psi4/psi4/issues/1792,3,['echo'],['echo']
Availability,"0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 225, in nbody_gufunc; component_results = compute_nbody_components(func, method_string, metadata); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 411, in compute_nbody_components; current_mol = molecule.extract_subsets(list(pair[0]), ghost). RuntimeError: ; Fatal Error: Coordinates have been set in the wrong order; Error occurred in file: /home/vulcan/vadmin/programs/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 239 ; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::operator=(psi::Molecule const&); psi::Molecule::Molecule(psi::Molecule const&); ```. Given that the user's problem is failure for the SCF to converge, I can only assume some change since the 1.2.1 release is at fault. I've been able to get the crash with the following simplified input file:; ```; molecule dimer {; 1 1; C1 0.000000 0.513942 0.000000; N2 0.628754 1.703580 0.000000; H3 0.109407 2.571793 0.000000; H4 1.638743 1.762759 0.000000; N5 -1.342220 0.473050 0.000000; H6 -1.890262 1.323784 0.000000; H7 -1.839824 -0.407373 0.000000; N8 0.700723 -0.623756 0.000000; H9 1.712010 -0.555355 0.000000; C10 0.085273 -1.957243 0.000000; H11 0.892679 -2.697454 0.000000; H12 -0.522596 -2.104233 0.905528; H13 -0.522596 -2.104233 -0.905528; --; -1 1; I N8 3.6 H9 90.0 C1 90.0; }. basis {. assign H def2-tzvpd; assign C def2-tzvpd; assign N def2-tzvpd. assign I def2-tzvpd; }. set guess sad; set scf_type df; set maxiter 500; set soscf true; set soscf_max_iter 15; set soscf_conv 1.e-4; set freeze_core false ## false for ions. energy(""mp2"", bsse_type = ""cp""); ```; This can probably be simplified further. It would be worth investigating whether this is a consequence of mixing Cartesian and ZMAT coordinat",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325:1753,fault,fault,1753,https://psicode.org,https://github.com/psi4/psi4/issues/1325,1,['fault'],['fault']
Availability,"0.754159895630; C 0.705817366890 -0.292132845559 -0.060119676721; H 1.697771204799 1.493890140835 -0.841405738393; H 2.809791237804 0.316266152249 -0.104120355409; H 1.780184254006 1.337108071239 0.927741879375; C 1.808370373970 0.768135672436 -0.017435993935; }. # Now generate torsion scan . steps = 36; start_angle = 0.001; step_size = 10. table = Table(rows=[""D""], cols=[""E(SCF)""]). for counter in range(0, steps):; # set smaller basis for geometry optimization; set{; basis 6-31G*; scf_type df; guess sad; }. dihedral = 1.0 * counter * step_size + start_angle; dihedral_string = ""4 7 10 14 %.5f"" % dihedral. set optking{; frozen_dihedral = """"; fixed_dihedral = $dihedral_string; }. optimize('scf') #geometry optimization with HF; geom = c4h10.geometry(); geom.print_out() # Print out optimized geometry. # Print to screen; print('-------------------------------------------'); print('| Optimized geometry for dihedral %.2f |' % dihedral); print('-------------------------------------------'); geom_py = mat2arr(geom); print(geom_py). for atom in range(c4h10.natom()):; print(""""""{:4} {:4} {:12} {:8.4f} {:12.6f} {:12.6f} {:12.6f} {:12.6f}"""""".format(; c4h10.Z(atom), # atomic number; c4h10.symbol(atom), # element symbol; c4h10.label(atom), # input element label; c4h10.charge(atom), # element charge; c4h10.x(atom), # x-coordinate; c4h10.y(atom), # y-coordinate; c4h10.z(atom), # z-coordinate; c4h10.mass(atom), # mass; )). energy('scf') # HF single point energy; escf = get_variable('SCF TOTAL ENERGY'); table[dihedral] = [escf]. print('------------------------'); print(' Table of Energies '); print('------------------------'); print table; relative = table.copy(); relative.absolute_to_relative(); print('Relative table (Kcal/mol)'); print relative; ```. I used a start angle of 0.001 instead of zero because when the angle was exactly 0 I got the following error:. ```; Format of dihedral entry is ""D atom_1 atom_2 atom_3 atom_4 (eq_val)""; Dynamic level is 0.; exc.g_really_quit() is 0.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/647:2545,error,error,2545,https://psicode.org,https://github.com/psi4/psi4/issues/647,1,['error'],['error']
Availability,"0000 -1.230622098778; C -1.421000000000 0.000000000000 0.000000000000; H 1.254500000000 0.000000000000 -2.172857738095; H -1.254500000000 0.000000000000 2.172857738095; H 2.509000000000 0.000000000000 0.000000000000; H 1.254500000000 0.000000000000 2.172857738095; H -1.254500000000 0.000000000000 -2.172857738095; H -2.509000000000 0.000000000000 0.000000000000; }. set basis sto-3g. energy('cisd', molecule=benzene); ```; Psi4 returned the following error:; ```; Traceback (most recent call last):; File ""/usr/local/psi4/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 36, in <module>; File ""/usr/local/psi4/lib/psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 949, in select_cisd; return func(name, **kwargs); File ""/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 4238, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn). RuntimeError: ; Fatal Error: ndocc must be less than nvirt; Error occurred in file: /home/shouck/psi4/psi4/src/psi4/fnocc/ccsd.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::fnocc::CoupledCluster::common_init(); psi::fnocc::CoupledCluster::CoupledCluster(std::shared_ptr<psi::Wavefunction>, psi::Options&); psi::fnocc::CoupledPair::CoupledPair(std::shared_ptr<psi::Wavefunction>, psi::Options&); psi::fnocc::fnocc(std::shared_ptr<psi::Wavefunction>, psi::Options&); ```; The CISDT and CISDTQ methods run with no problems, so it seems like the issue is just in the CISD method. The exception appears to be thrown from [here in the ccsd.cc program](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/fnocc/ccsd.cc#L144). It only breaks for small toy systems, and using DETCI provides a nice work-around, but I thought I should mention this anyway. Thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828:1458,Error,Error,1458,https://psicode.org,https://github.com/psi4/psi4/issues/828,2,['Error'],['Error']
Availability,"000000 -0.170000; C 0.007000 1.210000 0.523000; C 0.000000 1.205000 1.904000; C 0.000000 0.000000 2.592000; C 0.000000 -1.205000 1.904000; C -0.007000 -1.210000 0.523000; C 0.000000 0.000000 -1.643000; H -0.019000 2.146000 -0.006000; H -0.011000 2.134000 2.442000; H 0.000000 0.000000 3.666000; H 0.011000 -2.134000 2.442000; H 0.019000 -2.146000 -0.006000; N -0.741000 -0.864000 -2.296000; N 0.741000 0.864000 -2.296000; H 0.721000 0.947000 -3.291000; H 1.404000 1.427000 -1.808000; H -1.404000 -1.427000 -1.808000; H -0.721000 -0.947000 -3.291000; }. set optking { dynamic_level = 1; geom_maxiter = 250; print_trajectory_xyz_file = True }. set { scf_type direct }; energy, wfn = optimize('SCF', dft_functional='wB97X-D', dertype='gradient', return_wfn=True). import os; os.chdir(os.environ['HTMD_PSI4_WORKDIR']). oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', 'MULLIKEN_CHARGES'). with open('psi4out.xyz', 'w') as f:; f.write('18 ' ); f.write('%.12f\n' % energy); f.write(MOL.save_string_xyz()); ```. This errors with:. ```; Traceback (most recent call last):; File ""/home/damasj02/software/psi4dev/bin/psi4"", line 260, in <module>; exec(content); File ""<string>"", line 55, in <module>; File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1054, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/driver.py"", line 606, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2051, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 1989, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/damasj02/software/psi4dev/lib//python3.6/site-packages/psi4/driver/procrou",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948:3237,error,errors,3237,https://psicode.org,https://github.com/psi4/psi4/issues/948,1,['error'],['errors']
Availability,"0000000 -3.007607968024; }; mol.update_geometry(); mol.symmetrize(0.01). set reference rks; set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True). set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.12, 0.12, 0.12]; cubeprop(wfn); ```; give this in cube header:. > Sum of electrons: 58527.1 number of electrons: 101.135. from the chargemol program; > nvalence = 90.0000; pixelvolume = 1.7280E-03; numerically integrated valence density = 1.0113E+02; sum_valence_occupancy_correction = 0.0000E+00; checkme = 1.1135E+01; The electrons are not properly accounted for.; Either the grid in your electron density input file is too coarse, you have specified the incorrect net charge in the chargemol_job.m file, or t$; Program will terminate. Further testing by changing on the grid spacing (worst case here above):; ```; grid:0.2, error:5.2489 ; grid:0.19, error:4.5155 ; grid:0.18, error:2.4477 ; grid:0.17, error:3.6323 ; grid:0.16, error:2.3993 ; grid:0.15, error:2.8355 . grid:0.14, error:2.4962 ; grid:0.138, error:4.6381; grid:0.136, error:0.8501; grid:0.134, error:1.4051; grid:0.132, error:1.2419; grid:0.13, error:0.58084; grid:0.128, error:1.5786; grid:0.126, error:1.0912; grid:0.124, error:0.25624; grid:0.122, error:4.2158; grid:0.12, error:11.538; grid:0.118, error:3.1169; grid:0.116, error:1.4544; grid:0.114, error:1.4049; grid:0.112, error:1.502; grid:0.11, error:0.29599; grid:0.108, error:1.1679; grid:0.106, error:0.73735; grid:0.104, error:1.9971; grid:0.102, error:0.6448; grid:0.1, error:0.92615. grid:0.09, error:1.1189; grid:0.08, error:0.3121; grid:0.07, error:0.2545; grid:0.06, error:0.20924; grid:0.05, error:0.047781; ```; I guess the interpolation of the density values for each point take place in the add_density function but I am not sure how I can minimize this behaviour to be sure get a more correct total electron density also with larger grid spacing, as a grid spacing of 0.05 gives VERY large fi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311:2094,error,error,2094,https://psicode.org,https://github.com/psi4/psi4/issues/1311,1,['error'],['error']
Availability,"00000000 -7.94755100 0.00000000; H -2.14658900 -6.70243100 0.00000000; H -2.14648500 -4.22841800 0.00000000. }. set scf_type df; set basis aug-cc-pVTZ; set reference uks. mol.update_geometry(); mol.symmetrize(1e-3). energy('b3lyp'); ```. I observe; ```; ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; Ag 160 160 ; B1g 130 130 ; B2g 63 63 ; B3g 84 84 ; Au 63 63 ; B1u 84 84 ; B2u 160 160 ; B3u 130 130 ; -------------------------; Total 874 874; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UKS iter SAD: -538.61970612101391 -5.38620e+02 0.00000e+00 . Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/bin//psi4"", line 338, in <module>; exec(content); File ""<string>"", line 53, in <module>; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 2455, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 1670, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 429, in scf_iterate; self.form_C(). RuntimeError: ; Fatal Error: Count 49 alpha electrons, expected 48.; This is a bug. Please file a report.; Error occurred in file: /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libscf_solver/hf.cc on line: 482; ```. Quick counting says that 48 is the expected number of alpha electrons for this system.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2594:2666,Error,Error,2666,https://psicode.org,https://github.com/psi4/psi4/issues/2594,2,['Error'],['Error']
Availability,"0007F6CF6C18FC9 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C1713D Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C18FC9 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C19158 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C1919B Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C40C5A Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C0C27D Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6B8FD99 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C184A6 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C18FC9 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C19158 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C1919B Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C3E410 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C3FA03 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C5ACE7 Unknown Unknown Unknown; python 0000000000400BBD Unknown Unknown Unknown; libc.so.6 00000034CEC1ED5D Unknown Unknown Unknown; python 0000000000400999 Unknown Unknown Unknown; ```; This is the error message. The node memory is 256 GB. I have run another system with a similar number of atoms at the same level of theory and it finished normally on this node. I have run this system at sSAPT0 level, which has also finished normally. Here is a copy of the input file; ```; memory 256 GB. molecule dimer {; 0 1; C	33.53728	36.41505	90.62589; C	33.90406	36.81886	89.19581; O	35.09473	36.87670	88.87973; H	32.47104	36.21876	90.76503; H	34.11454	35.52935	90.89115; H	33.84377	37.22581	91.29056; N	32.90475	37.13782	88.34874; C	33.15782	37.60052	86.97934; C	33.86886	38.96454	87.03422; O	34.80991	39.18532	86.28033; C	31.84528	37.71848	86.17268; C	32.03912	38.31152	84.79977; C	32.40330	37.64936	83.66144; C	31.91466	39.69401	84.43479; N	32.47754	38.52922	82.60241; C	32.22560	39.79734	83.05872; C	31.60991	40.86835	85.14938; C	32.23753	41.02592	82.38040; C	31.61276	42.08300	84.47411; C	31.93451	42.15430	83.10915; H	31.95003	36.90694	88.59560; H	33.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1828:3318,error,error,3318,https://psicode.org,https://github.com/psi4/psi4/issues/1828,1,['error'],['error']
Availability,"02) ; - Psi4dev package working on mac (#2005) ; - Patches to FNOCC and DFOCC (#2013) ; - Fix QCSchema interface (#2014) ; - Fix VV10 for clang (#2017) ; - Plugins work with pybind11 v2.6.0 (#2028) ; - Fix memory bug in libtrans (#2027) ; - Fix to large DF-MP2 (#2033) ; - Make sure psi populates qcschema wfn with orbital occupations (#2036) ; - Options reading ignores spaces (#2051) ; - Fix to Treutler grid call (#2044) ; - Fix diffuse external potential after L2 (#2068) ; - Fixes to PCM/qcschema (#2037) ; - Bug in ccresponse (#2077) ; - Fix error throwing in some threaded blocks (#2082) ; - Better error printing (#2083) ; - Fix in EOM CC3 (#2085) ; - Deprecate Matrix::Savetype::Full (#2092) ; - Fix getting of CC amplitudes in frozen core jobs (#2095) ; - QCSchema export bug fix (#2112) ; - Fix TD-SCF computations when using DF and symmetry (#2124) ; - Fix DF-DCT energy, grad, properties, and densities (#2100) ; - Fix bug by closing DPD file in DF grad (#2137) ; - Fix method/basis bug when using DiskDF (#2141) ; - Fix bug by triggering error in CC code (#2150) ; - Fix indexing bug in DCT (#2165) ; - Fix gcc-related bug (#2175) ; - Fix stability of mcscf test (#2173) ; - Citation type fix in dft builder (#2176) ; - Keep internal coordinate files in optking (#2188) ; - Bugfix in parallelization of DF gradients (#2193) ; - Fix bug in qcvars for nbody computations (#2191) ; - Use correct libxc functional for wB97X-D3 (#2207) ; - Fix shell core freezing with ECPs (#2222) ; - Fix linear dependency bugs in DCT (#2232, #2233) ; - Return correct energy for ccsd(at) (#2241) ; - Bug in detci printing (#2245); - Fix bug whereby MP2 cube files through OCC segfaulted (#2249); - Increase likelihood a misformatted basis set file will error instead of passing silently (#2254); - Fix normalization issue in Molden files (#2229); - Fix longstanding limitation where `phi_ao` function only returned correctly for Cartesian basis sets (#2210, #2262) . ## Known Bugs; - Find them and tell us",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:13658,error,error,13658,https://psicode.org,https://github.com/psi4/psi4/issues/1562,4,['error'],['error']
Availability,"023. Wall Time: 0.52 seconds. Time (seconds); Module User System Wall Calls. --------------------------------------------------------------------------------------; ```; In all of these problematic timer.dat files, the host name is truncated and ends with a random assortment of bytes. In the above example, the full host name should be `ip-172-31-XX-XXX.us-east-2.compute.internal`. We then examined how psi4 determines and processes the host name. It turns out, psi4 uses the `gethostname` function from the C API to get up to the first 40 bytes of the host name, and then it writes those bytes to `timer.dat`. The host name of this particular compute cluster is over 40 chars/bytes. This is unsafe because if a host name has more than 40 characters, the null byte (`\0`) won't be written to `timer.dat` to signify the end of the string, and psi4 will continue to write whatever is in memory past the 40 chars/bytes until it hits a null byte. This also explains the original error, b/c writing random bytes to a file can lead to non-utf-8-compliant files. It turns out that [linux defines a maximum host name length of 64](https://man7.org/linux/man-pages/man2/gethostname.2.html), so the easy fix here is to just increase the size of the host name buffer from 40 to 65 (== 64 + 1 for the null byte at the end). I have no idea why this length was previously limited to 40. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fix bug resulting in `UnicodeDecodeError` and corrupted `timer.dat` files. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] increase the buffer size used to retrieve the host name and enforce that the host name ends in a null byte before writing to `timer.dat`. ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3043:2736,error,error,2736,https://psicode.org,https://github.com/psi4/psi4/pull/3043,1,['error'],['error']
Availability,"02aaaad0dd557 in py_psi_optking () at /home/laz/build/psi4/psi4/psi4/src/core.cc:239; #8 0x00002aaaad118e95 in pybind11::detail::argument_loader<>::call_impl<int, int (*&)()>(int (*&)(), pybind11::detail::index_sequence<>) (this=0x7fffffffc667, f=@0x5555560adc28: 0x2aaaad0dd4f4 <py_psi_optking()>); ... [Pythony bits snipped]; ```; In v3d_axpy(const double a, const double *X, const double *Y, double *Z), X and Y are undefined in my case and cause the seg fault. I've not dug into this in any depth yet but it looked like the linear bends of Frag 2 were added to Frag 1, so that it dies when the internal coordinates of Frag 1 are printed to the output because the internal coords refer to atoms not in that fragment. Or something along those lines. This job gives a seg fault with current git:; ```; molecule dimer {; C 0.824239 0.890517 1.696513; C 1.957325 0.070553 1.693001; C 1.813738 -1.320699 1.693796; C 0.537119 -1.892037 1.698103; C -0.595966 -1.072073 1.701616; C -0.452379 0.319180 1.700821; H 2.954752 0.516900 1.689636; H 0.424971 -2.979016 1.698724; H -1.593394 -1.518419 1.704981; H -1.337645 0.959804 1.703565; H 0.936388 1.977496 1.695892; C 2.947914 -2.141449 1.690280; N 3.874050 -2.836596 1.687416; --; C 0.717503 0.537187 -1.697308; C 0.049935 -0.691858 -1.697308; C -1.348233 -0.728319 -1.697309; C -2.078861 0.464332 -1.697309; C -1.411293 1.693378 -1.697308; C -0.013127 1.729838 -1.697308; H 1.809881 0.565636 -1.697308; H 0.620767 -1.623659 -1.697309; H -1.869768 -1.688580 -1.697309; H -3.171240 0.435884 -1.697309; H 0.508409 2.690100 -1.697308; C -2.142628 2.887174 -1.697308; N -2.730222 3.885021 -1.697308; symmetry c1; }. set optking {; frag_mode multi; }; set basis cc-pVDZ; optimize('blyp-d3bj'); ```; Running the same job with ""frag_mode single"", or with ""frag_mode multi"" with ""opt_coordinates cartesian"", ran for multiple opt steps (until I killed it) without giving a seg fault. I'll dig further but suspect others might have more of an idea of where to look.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680:3596,fault,fault,3596,https://psicode.org,https://github.com/psi4/psi4/issues/680,1,['fault'],['fault']
Availability,"04296831956 1.503991149589; CL -0.000000000000 2.604296831956 1.503991149589; CL -0.000000000000 0.000000000000 -3.007607968024; }; mol.update_geometry(); mol.symmetrize(0.01). set reference rks; set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True). set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.12, 0.12, 0.12]; cubeprop(wfn); ```; give this in cube header:. > Sum of electrons: 58527.1 number of electrons: 101.135. from the chargemol program; > nvalence = 90.0000; pixelvolume = 1.7280E-03; numerically integrated valence density = 1.0113E+02; sum_valence_occupancy_correction = 0.0000E+00; checkme = 1.1135E+01; The electrons are not properly accounted for.; Either the grid in your electron density input file is too coarse, you have specified the incorrect net charge in the chargemol_job.m file, or t$; Program will terminate. Further testing by changing on the grid spacing (worst case here above):; ```; grid:0.2, error:5.2489 ; grid:0.19, error:4.5155 ; grid:0.18, error:2.4477 ; grid:0.17, error:3.6323 ; grid:0.16, error:2.3993 ; grid:0.15, error:2.8355 . grid:0.14, error:2.4962 ; grid:0.138, error:4.6381; grid:0.136, error:0.8501; grid:0.134, error:1.4051; grid:0.132, error:1.2419; grid:0.13, error:0.58084; grid:0.128, error:1.5786; grid:0.126, error:1.0912; grid:0.124, error:0.25624; grid:0.122, error:4.2158; grid:0.12, error:11.538; grid:0.118, error:3.1169; grid:0.116, error:1.4544; grid:0.114, error:1.4049; grid:0.112, error:1.502; grid:0.11, error:0.29599; grid:0.108, error:1.1679; grid:0.106, error:0.73735; grid:0.104, error:1.9971; grid:0.102, error:0.6448; grid:0.1, error:0.92615. grid:0.09, error:1.1189; grid:0.08, error:0.3121; grid:0.07, error:0.2545; grid:0.06, error:0.20924; grid:0.05, error:0.047781; ```; I guess the interpolation of the density values for each point take place in the add_density function but I am not sure how I can minimize this behaviour to be sure get a more corr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311:1990,error,error,1990,https://psicode.org,https://github.com/psi4/psi4/issues/1311,1,['error'],['error']
Availability,"06/work"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in run_sapt_dft; sapt_dft(dimer_wfn, wfn_A, wfn_B, sapt_jk=sapt_jk, data=data, print_header=False); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_16206",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:1906,ERROR,ERROR,1906,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"07607968024; }; mol.update_geometry(); mol.symmetrize(0.01). set reference rks; set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True). set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.12, 0.12, 0.12]; cubeprop(wfn); ```; give this in cube header:. > Sum of electrons: 58527.1 number of electrons: 101.135. from the chargemol program; > nvalence = 90.0000; pixelvolume = 1.7280E-03; numerically integrated valence density = 1.0113E+02; sum_valence_occupancy_correction = 0.0000E+00; checkme = 1.1135E+01; The electrons are not properly accounted for.; Either the grid in your electron density input file is too coarse, you have specified the incorrect net charge in the chargemol_job.m file, or t$; Program will terminate. Further testing by changing on the grid spacing (worst case here above):; ```; grid:0.2, error:5.2489 ; grid:0.19, error:4.5155 ; grid:0.18, error:2.4477 ; grid:0.17, error:3.6323 ; grid:0.16, error:2.3993 ; grid:0.15, error:2.8355 . grid:0.14, error:2.4962 ; grid:0.138, error:4.6381; grid:0.136, error:0.8501; grid:0.134, error:1.4051; grid:0.132, error:1.2419; grid:0.13, error:0.58084; grid:0.128, error:1.5786; grid:0.126, error:1.0912; grid:0.124, error:0.25624; grid:0.122, error:4.2158; grid:0.12, error:11.538; grid:0.118, error:3.1169; grid:0.116, error:1.4544; grid:0.114, error:1.4049; grid:0.112, error:1.502; grid:0.11, error:0.29599; grid:0.108, error:1.1679; grid:0.106, error:0.73735; grid:0.104, error:1.9971; grid:0.102, error:0.6448; grid:0.1, error:0.92615. grid:0.09, error:1.1189; grid:0.08, error:0.3121; grid:0.07, error:0.2545; grid:0.06, error:0.20924; grid:0.05, error:0.047781; ```; I guess the interpolation of the density values for each point take place in the add_density function but I am not sure how I can minimize this behaviour to be sure get a more correct total electron density also with larger grid spacing, as a grid spacing of 0.05 gives VERY large files. Regards",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311:2120,error,error,2120,https://psicode.org,https://github.com/psi4/psi4/issues/1311,27,['error'],['error']
Availability,"0; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 4249; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding transition dipole moment from ground sta",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61:1632,error,error,1632,https://psicode.org,https://github.com/psi4/psi4/issues/61,1,['error'],['error']
Availability,"0>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), flags=<optimized out>, arena=<optimized out>); at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1147; #51 0x00007faabd6ddffd in PyRun_StringFlags (str=<optimized out>, start=257, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawText",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:20681,error,error,20681,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"1 | 2.763; H2O | 89 | 157 | 198 | 2.13 | 2.282; HF | 71 | 116 | 152 | 1.18 | 2.128. ### VTune Analysis for MP2-F12/3C(FIX); Memory consumption is most egregious in the `form_teints` where the allocation of the AO ERI is quite large with the largest AO being (NOBS, NOBS, NRI, NRI) e.g. CH4 would be (125, 125, 364, 364); ![image](https://github.com/psi4/psi4/assets/52012150/7483bfd5-b2ec-4a32-a5a8-1f905d745054). CPU Time all goes back to the `form_teints` function and specifically the `two_body_ao_computer`; ![image](https://github.com/psi4/psi4/assets/52012150/07eedb8d-5e89-4614-a4f3-315a7f669f27). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] MP2-F12 single-point energy. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Computes in-core MP2-F12/3C(FIX) energy; - [X] Computes disk MP2-F12/3C(FIX) energy; - [X] Computes in-core DF-MP2-F12/3C(FIX) energy; - [X] Computes disk DF-MP2-F12/3C(FIX) energy. ## Questions; - [ ] I am unsure if I have done the disk implementation correctly.; - [ ] The max RAM usage for the conventional is quite large. I could use some suggestions on how to get this down.; - [ ] The conventional MP2-F12/3C(FIX) is not as usable as I would like with the high max RAM usage and slow integral computation. DF-MP2-F12/3C(FIX) is recommended over the conventional.; - [ ] This version of DF-MP2-F12/3C(FIX) uses a more robust scheme than ORCA and MPQC for the density-fitting. . ## Checklist; - [x] Documentation; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3110:3298,down,down,3298,https://psicode.org,https://github.com/psi4/psi4/pull/3110,2,"['down', 'robust']","['down', 'robust']"
Availability,"1, in cubeprop; cp.compute_properties(). RuntimeError: ; Fatal Error: FRONTIER_ORBITALSis an unrecognized PROPERTY_TASKS value; Error occurred in file: /build/psi4-XGp1km/psi4-1.1/psi4/src/psi4/libcubeprop/cubeprop.cc on line: 196; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::CubeProperties::compute_properties(); pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<void, psi::CubeProperties, , pybind11::name, pybind11::is_method, pybind11::sibling, char [10]>(void (psi::CubeProperties::*)(), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [10])::{lambda(psi::CubeProperties*)#1}, void, psi::CubeProperties*, pybind11::name, pybind11::is_method, pybind11::sibling, char [10]>(pybind11::cpp_function::initialize<void, psi::CubeProperties, , pybind11::name, pybind11::is_method, pybind11::sibling, char [10]>(void (psi::CubeProperties::*)(), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [10])::{lambda(psi::CubeProperties*)#1}&&, void (*)(psi::CubeProperties*), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [10])::{lambda(pybind11::detail::function_record*, pybind11::handle, pybind11::detail::function_record*, pybind11::detail::function_record*)#3}::_FUN(pybind11::detail::function_record, pybind11::detail::function_record*, pybind11::detail::function_record*, pybind11::detail::function_record*); pybind11::cpp_function::dispatcher(_object*, _object*, _object*)`. I have tried running a smaller molecule with no cubeprop_task specified which runs fine and produces lots of cube files correctly. Sadly I do not have the disk space to do this for larger molecules. I'll dig around into the problem myself but thought it a good idea to point this out here. Feel free to close if I have missed a glaring error.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1722:2606,error,error,2606,https://psicode.org,https://github.com/psi4/psi4/issues/1722,1,['error'],['error']
Availability,"1.30113970569431E+01 1.19978051198750E+01; H 1.44424504488042E+01 1.30589832954827E+01 1.29686420001814E+01; H 1.51761320099903E+01 1.34867010754835E+01 1.16393171667026E+01; }. set {; freeze_core true; scf_type df; mp_type df; basis aug-cc-pvtz; DF_BASIS_MP2 cc-pVQZ-RI; }. energy('mp2.5'); ```. Failure:. ```; ==============================================================================; ==============================================================================; ==============================================================================. DF-MP2.5; Program Written by Ugur Bozkaya; Latest Revision September 9, 2017. ==============================================================================; ==============================================================================; ==============================================================================. MO spaces... FC OCC VIR FV; ----------------------; 15 60 1305 0. Number of basis functions in the DF-CC basis: 2970. Available memory : 810623.17 MB; Memory requirement for 3-index ints : 40445.15 MB; Memory requirement for DF-CC int trans: 24244.87 MB; Memory requirement for CC contractions: 56027.91 MB; Total memory requirement for DF+CC int: 96473.07 MB; Memory requirement for Wabef term : 75373.62 MB. Traceback (most recent call last):; File ""/home/416653/PSI4/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/home/416653/PSI4/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/416653/PSI4/lib/psi4/driver/procrouting/proc.py"", line 456, in select_mp2p5; return func(name, **kwargs); File ""/home/416653/PSI4/lib/psi4/driver/procrouting/proc.py"", line 1607, in run_dfocc; dfocc_wfn = core.dfocc(ref_wfn). MemoryError: std::bad_array_new_length. Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""FREEZE_CORE"", ""true""); core.set_glob",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1679:3831,Avail,Available,3831,https://psicode.org,https://github.com/psi4/psi4/issues/1679,1,['Avail'],['Available']
Availability,"12 0.000000; }. set basis def2-sv(p). optimize('pbe0'). With the lastest numpy 1.16.3 from conda, I get ""; Traceback (most recent call last):; File ""/home/psi4/envs/psi4/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 27, in <module>; File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/psi4/driver/driver.py"", line 691, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2064, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 1289, in scf_helper; old_wfn = core.Wavefunction.from_file(read_filename); File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/psi4/driver/p4util/python_helpers.py"", line 156, in _core_wavefunction_from_file; wfn_data = np.load(wfn_data).item(); File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/numpy/lib/npyio.py"", line 447, in load; pickle_kwargs=pickle_kwargs); File ""/home/psi4/envs/psi4/lib//python3.6/site-packages/numpy/lib/format.py"", line 692, in read_array; raise ValueError(""Object arrays cannot be loaded when "". ValueError: Object arrays cannot be loaded when allow_pickle=False; "". When I downgrade to 1.16.2, I get no error. Release note of numpy 1.16.3: ; ""The most noticeable change in this release is that unpickling object arrays; when loading *.npy or *.npz files now requires an explicit opt-in.; This backwards incompatible change was made in response to; CVE-2019-6446 <https://nvd.nist.gov/vuln/detail/CVE-2019-6446>_.""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1610:1758,down,downgrade,1758,https://psicode.org,https://github.com/psi4/psi4/issues/1610,2,"['down', 'error']","['downgrade', 'error']"
Availability,"171 -0.50652361 -8.79096870; symmetry c1; }. set basis aug-cc-pvdz; set reference rohf; set ints_tolerance 1e-14; set d_convergence 5e-9; set e_convergence 1e-10; set ccenergy maxiter 2. energy('BCCD(T)'); ```. Tail of the produced output:; ```; Solving CC Amplitude Equations; ------------------------------; Iter Energy RMS T1Diag D1Diag New D1Diag D2Diag; ---- --------------------- --------- ---------- ---------- ---------- --------; 0 -0.533075915819886 0.000e+00 0.006541 0.000000 0.000000 0.000000; 1 -0.556071307119493 7.982e-02 0.013677 0.000000 0.000000 0.000000; 2 -0.568751401183405 2.374e-02 0.014574 0.000000 0.000000 0.000000. ** Wave function not converged to 1.0e-07 ** . Traceback (most recent call last):; File ""/home/jzz/psi4conda/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/home/jzz/psi4conda/lib//python3.7/site-packages/psi4/driver/driver.py"", line 570, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/jzz/psi4conda/lib//python3.7/site-packages/psi4/driver/procrouting/proc.py"", line 2673, in run_bccd; ref_wfn = core.ccenergy(ref_wfn). RuntimeError: ; Fatal Error: Timer ccenergy is not on.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1584239292352/work/psi4/src/psi4/libqt/timer.cc on line: 1143; The most recent 5 function calls were:. psi::timer_off(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""rohf""); core.set_global_option(""INTS_TOLERANCE"", 1e-14); core.set_global_option(""D_CONVERGENCE"", 5e-9); core.set_global_option(""E_CONVERGENCE"", 1e-10); core.set_local_option(""CCENERGY"", ""MAXITER"", 2); --> energy('BCCD(T)'). Psi4 stopped on: Friday, 10 April 2020 10:27PM; Psi4 wall time for execution: 0:00:27.38. *** Psi4 encountered an error. Buy a developer more coffee!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1864:1706,Error,Error,1706,https://psicode.org,https://github.com/psi4/psi4/issues/1864,3,"['Error', 'error']","['Error', 'error']"
Availability,"2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; ===== End fort.56 input for MRCC ======; **********************************************************************; MRCC program system; **********************************************************************. Written by; Mihaly Kallay, Peter R. Nagy, David Mester, Zoltan Rolik, Gyula Samu,; Jozsef Csontos, Jozsef Csoka, P. Bernat Szabo, Laszlo Gyevi-Nagy,; Bence Hegely, Istvan Ladjanszki, Lorant Szegedy, Bence Ladoczki,; Klara Petrov, Mate Farkas, Pal D. Mezei, and Adam Ganyecz. Department of Physical Chemistry and Materials Science; Budapest University of Technology and Economics; Budapest P.O.Box 91, H-1521 Hungary. www.mrcc.hu. Release date: February 22, 2020. ************************ 2020-04-12 06:03:22 *************************; Executing minp... Reading input from MINP... Input file:. Checking keyword combinations... Basis set is not specified!. Fatal error in exec minp.; Program will stop. ************************ 2020-04-12 06:03:22 *************************; Error at the termination of mrcc.; **********************************************************************; ```. As it so happens, I was running `mrccsdt` not too long ago on the CCQC cluster. What I see looks like ; ```; Generating fort.55 integral file...done.; Generating fort.56 input file...done. *** tstop() called on n081 at Sun Mar 8 14:10:25 2020; Module time: ; user time = 1.90 seconds = 0.03 minutes; system time = 0.87 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes; Total time: ; user time = 164.68 seconds = 2.74 minutes; system time = 15.26 seconds = 0.25 minutes; total time = 2719 seconds = 45.32 minutes. ===== Begin fort.56 input for MRCC ======; 3 1 0 0 1 0 0 1 0 1 1 1 0 0 0 6 0 0 0.00 0 60000 ; ex.lev,nsing,ntrip, rest,CC/CI, dens,conver, symm, diag, CS,spatial, HF,ndoub, nacto, nactv, tol,maxex, sacc, freq,dboc, mem; 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1866:1969,Error,Error,1969,https://psicode.org,https://github.com/psi4/psi4/issues/1866,1,['Error'],['Error']
Availability,"2.48505 -0.9528; H -3.38296 -3.42013 -1.49634; C -3.83016 -1.30519 -1.76284; H -4.84213 -1.57034 -2.07564; O -3.08657 -1.08539 -2.95725; H -2.16485 -0.88813 -2.71436; C -3.89865 -0.04023 -0.90552; H -2.87924 0.29308 -0.69629; O -4.61098 1.01217 -1.56224; H -4.00729 1.44319 -2.17836; C -4.59468 -0.30612 0.4222; H -5.64733 -0.55648 0.23973; O -4.51034 0.8485 1.2693; H -4.69798 1.62621 0.72518; C -4.47115 -1.85465 2.46592; H -5.33699 -2.50924 2.30958; O -3.50744 -2.49324 3.3135; H -2.76983 -2.83605 2.77919; H -4.81526 -0.95879 2.98516; O 2.01537 -1.70774 -1.89652; H 1.17126 -1.21952 -1.9851; units angstrom. }; set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }. energy('sapt0'); energy('sapt0-ct'); ```. User reported error message:; ```; Traceback (most recent call last):; File “/home/think/psi4conda/bin/psi4”, line 248, in; exec(content); File “”, line 147, in; File “/home/think/psi4conda/lib//python3.6/site-packages/psi4/driver/driver.py”, line 460, in energy; wfn = procedures[‘energy’][lowername](lowername, molecule=molecule, **kwargs); File “/home/think/psi4conda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py”, line 3278, in run_sapt; e_sapt = core.sapt(dimer_wfn, monomerA_wfn, monomerB_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits, std::allocator >, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::rw(unsigned int, char*, psi::psio_address, unsigned long, int); psi::sapt::SAPT::zero_disk(int, char const*, int, int); psi::sapt::SAPT0::df_integrals(); ```. @loriab reported being able to reproduce this, but was interrupted working on the bug and never got around to it. This may just be a case of the disk filling up, in which case, all we can do is write a better error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1328:4148,Error,Error,4148,https://psicode.org,https://github.com/psi4/psi4/issues/1328,5,"['Error', 'error']","['Error', 'error']"
Availability,"2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3; -- Fortran compiler flags: -fcray-pointer -DVAR_GFORTRAN -DVAR_MFDS -fno-range-check -fautomatic -fPIC -fimplicit-none -ftree-vectorize -m",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7544,Error,Error,7544,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"24, @psi-rking, @SimonBoothroyd, @yxie326, @VHchavez, @nlk36701, @edeustua, @leeping, @mquevill, @lazaroid, @sgoodlett. ## Performance Optimizations; - omega exchange can now be computed with `MemJK` algorithm. By not having to shunt range-separated functionals to `DiskJK` even when they'd fit in memory, 30-40% performance improvements seen (#1749); - Big performance improvement to DF SCF Hessian (#1805) ; - Omega combine algorithm for computing exchange terms (#1911) ; - Optimize linalg::triplet (#2053) ; - Thread external charge potential (#1946) . ## Developer Interests; - Improves [QCSchema](https://github.com/MolSSI/QCSchema); - Handle module-level options: `scf__reference` equivalent to `set scf reference` (#1578); - `psi4 --qcschema` instead of `psi4 --json` (#1723); - arrays losslessly transmitted in binary if `msgpack` installed (#1723); - new CC properties collected (#1723), dipole returned in au (#1728) ; - basisset and wavefunction schema returned (#1728); - New DFT grid pruning schemes, Treutler and robust accessed through `set dft_pruning_scheme` (not yet engaged by default) (grid points reduced by 30–45%) (#1591); - `SCS-MP2 OPPOSITE-SPIN CORRELATION ENERGY` and `SCS-MP2 SAME-SPIN CORRELATION ENERGY` have been removed, as have ""MP2"" variables from double-hybrid DFT final return (#1445); - `SCS-MP2 * ENERGY` now are defined (6/5, 1/3) quantities. For the user-influenceable vars, it's `CUSTOM SCS-MP2 * ENERGY` (#1445); - Dunning basis updates for Li, Be, Na, Mg (#1559); - S^Inf 2nd-order Dispersion and Exchange-Dispersion for SAPT (#1490); - Enable LGTM static analysis; - Add qcvars to wavefunction (not just globals) for CI, CheMPS2, PsiMRCC, DFT, scf_helper, DFMP2, OEPROP, DETCI. Add functional-including qcvars for DFT (#1570, #1445); - Add option `PARENT_SYMMETRY` to replace a global. Don't use it directly (#1575); - Driver sow/reap for optimize, database which never worked for py3 removed (#1583); - Add 6-311G(2df, <any>) for 2nd row atoms (#1531); -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:3938,robust,robust,3938,https://psicode.org,https://github.com/psi4/psi4/issues/1562,1,['robust'],['robust']
Availability,"282482; }; mol.update_geometry(); mol.symmetrize(0.001). set reference rks; set scf_type df; set basis def2-SV(P); set DYNAMIC_LEVEL 1. E = optimize('pbe'). ```. final output:; ```; 			-----------------------------------------; 			 OPTKING 2.0: for geometry optimizations ; 			 - R.A. King, Bethel University ; 			-----------------------------------------; At level 1: Red. Int., RFO, no backsteps, dynamic trust; 	At level 1: Red. Int., RFO, no backsteps, dynamic trust. 	Internal coordinates to be generated automatically.; 	Detected frag 1 with atoms: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20; 	---Fragment 1 Bond Connectivity---; 	 1 : 2 3; 	 2 : 1 3 5; 	 3 : 1 2; 	 4 : 5 6 9; 	 5 : 2 4 8; 	 6 : 4 10 11; 	 7 : 8 10 14; 	 8 : 5 7 15; 	 9 : 4 12 16; 	 10 : 6 7 17; 	 11 : 6 13 18; 	 12 : 9 13 19; 	 13 : 11 12 20; 	 14 : 7; 	 15 : 8; 	 16 : 9; 	 17 : 10; 	 18 : 11; 	 19 : 12; 	 20 : 13. BEND::BEND() Atoms defining bend are not unique.; forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libgdma.so 00007F7B32CCF0DC for__signal_handl Unknown Unknown; libpthread-2.27.s 00007F7B36A4A890 Unknown Unknown Unknown; core.cpython-37m- 00007F7B34813B00 Unknown Unknown Unknown; core.cpython-37m- 00007F7B34811B65 Unknown Unknown Unknown; core.cpython-37m- 00007F7B33D0BACD Unknown Unknown Unknown; core.cpython-37m- 00007F7B33D2109A Unknown Unknown Unknown; core.cpython-37m- 00007F7B3383BB3F Unknown Unknown Unknown; python3.7 000055AADA9716E4 _PyMethodDef_RawF Unknown Unknown; python3.7 000055AADA971801 _PyCFunction_Fast Unknown Unknown; python3.7 000055AADA9CD2BC _PyEval_EvalFrame Unknown Unknown; python3.7 000055AADA90E4F9 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055AADA970A27 _PyFunction_FastC Unknown Unknown; python3.7 000055AADA9C8846 _PyEval_EvalFrame Unknown Unknown; python3.7 000055AADA90E4F9 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055AADA90F3C4 PyEval_EvalCodeEx Unknown Unknown; python3.7 000055AADA90F3EC PyEval_EvalC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1703:2078,fault,fault,2078,https://psicode.org,https://github.com/psi4/psi4/issues/1703,1,['fault'],['fault']
Availability,"296831956 1.503991149589; CL -0.000000000000 0.000000000000 -3.007607968024; }; mol.update_geometry(); mol.symmetrize(0.01). set reference rks; set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True). set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.12, 0.12, 0.12]; cubeprop(wfn); ```; give this in cube header:. > Sum of electrons: 58527.1 number of electrons: 101.135. from the chargemol program; > nvalence = 90.0000; pixelvolume = 1.7280E-03; numerically integrated valence density = 1.0113E+02; sum_valence_occupancy_correction = 0.0000E+00; checkme = 1.1135E+01; The electrons are not properly accounted for.; Either the grid in your electron density input file is too coarse, you have specified the incorrect net charge in the chargemol_job.m file, or t$; Program will terminate. Further testing by changing on the grid spacing (worst case here above):; ```; grid:0.2, error:5.2489 ; grid:0.19, error:4.5155 ; grid:0.18, error:2.4477 ; grid:0.17, error:3.6323 ; grid:0.16, error:2.3993 ; grid:0.15, error:2.8355 . grid:0.14, error:2.4962 ; grid:0.138, error:4.6381; grid:0.136, error:0.8501; grid:0.134, error:1.4051; grid:0.132, error:1.2419; grid:0.13, error:0.58084; grid:0.128, error:1.5786; grid:0.126, error:1.0912; grid:0.124, error:0.25624; grid:0.122, error:4.2158; grid:0.12, error:11.538; grid:0.118, error:3.1169; grid:0.116, error:1.4544; grid:0.114, error:1.4049; grid:0.112, error:1.502; grid:0.11, error:0.29599; grid:0.108, error:1.1679; grid:0.106, error:0.73735; grid:0.104, error:1.9971; grid:0.102, error:0.6448; grid:0.1, error:0.92615. grid:0.09, error:1.1189; grid:0.08, error:0.3121; grid:0.07, error:0.2545; grid:0.06, error:0.20924; grid:0.05, error:0.047781; ```; I guess the interpolation of the density values for each point take place in the add_density function but I am not sure how I can minimize this behaviour to be sure get a more correct total electron density also with larger grid sp",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311:2042,error,error,2042,https://psicode.org,https://github.com/psi4/psi4/issues/1311,1,['error'],['error']
Availability,"2; cosx_spherical_points_final 146; cosx_radial_points_final 50; cosx_pruning_scheme robust; }. energy = energy('scf'); ```. A simple expansion of the final COSX grid compared to default. This calculation breaks upon entering the final SCF iteration (where the tight grid is used) with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! ADIIS minimization failed. File a bug, and include your entire input and output !; ! files. !; ! !; !----------------------------------------------------------------------------------!; ```. The following input, an expansion of both the initial and final grids, also fails:; ```; molecule mol {; 0 1; O; H 1 0.96; H 1 0.96 2 104.5; symmetry c1; no_reorient; no_com; }. set {; scf_type cosx; df_scf_guess false; basis aug-cc-pVDZ; e_convergence 1.0e-10; incfock true; incfock_full_fock_every 4; ints_tolerance 1.0e-12; cosx_spherical_points_initial 146 ; cosx_radial_point_initial 50 ; cosx_spherical_points_final 302; cosx_radial_points_final 75 ; cosx_pruning_scheme robust; }. energy = energy('scf'); ```. This one fails in the SAD-guess iteration, with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::diagonalize: DSYEV failed! !; ! Error occurred in file: !; ! /theoryfs2/ds/dpoole34/Documents/Codes/psi4/psi4/src/psi4/libmints/matrix.cc !; ! on line: 1715 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Matrix::diagonalize(psi::Matrix&, psi::Vector&, psi::diagonalize_order) !; ! !; !----------------------------------------------------------------------------------!; ```. Various things can be switched, with equally varying effects:; * Switching the COSX_PRUNING_SCHEME from ROBUST to TREUTLER fixes these calculations.; * Switching from 146 sphe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890:1691,robust,robust,1691,https://psicode.org,https://github.com/psi4/psi4/issues/2890,1,['robust'],['robust']
Availability,"2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3781,down,download,3781,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"3.6 -DPYTHON_INCLUDE_DIR=/usr/local/include/python3.6m -DPYTHON_LIBRARY=/usr/local/lib/libpython3.6m.so -DPSI4_ROOT=/usr/ports/science/psi4/work/psi4-1.3-60-ga5d3586e9 -DENABLE_ambit=OFF -DENABLE_CheMPS2=OFF -DENABLE_dkh=OFF -DENABLE_libefp=OFF -DENABLE_erd=OFF -DENABLE_simint=OFF -DENABLE_gdma=OFF -DENABLE_PCMSolver=OFF -DENABLE_OPENMP=ON -DTargetLAPACK_DIR=/usr/ports/science/psi4/work/.build/stage/share/cmake/TargetLAPACK -DTargetHDF5_DIR= -Dambit_DIR= -DCheMPS2_DIR= -Ddkh_DIR= -Dlibefp_DIR= -Derd_DIR= -Dgau2grid_DIR=/usr/local/share/cmake/gau2grid -Dgdma_DIR= -DLibint_DIR= -DPCMSolver_DIR= -Dpybind11_DIR=/usr/local/share/cmake/pybind11 -Dpylibefp_DIR= -Dsimint_DIR= -DLibxc_DIR= -DFortran_ENABLED= -DLIBC_INTERJECT= -DRESTRICT_KEYWORD= -DFC_SYMBOL=2 -DOpenMP_LIBRARY_DIRS= -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -C/usr/ports/science/psi4/work/.build/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake ""-GUnix Makefiles"" /usr/ports/science/psi4/work/psi4-1.3-60-ga5d3586e9/psi4; loading initial cache file /usr/ports/science/psi4/work/.build/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL=, LANG=CXX, C/CXX/Fortran=Clang/Clang/; -- Found OpenMP_CXX: -fopenmp=libomp ; -- Found OpenMP: TRUE found components: CXX ; -- Using LAPACK: /usr/local/lib/libopenblas.so;...; -- Disabled HDF5; -- Using pybind11: /usr/local/include (version 2.2.4 for Py3.6.8 and -std=c++14); -- Using Python 3.6: /usr/local/bin/python3.6; -- Disabled ambit; -- Disabled CheMPS2; -- Disabled dkh; -- Disabled libefp; -- Disabled erd; -- Using gau2grid: /usr/local/lib/libgg.so.1 (version 1.3.1); -- Disabled gdma; CMake Error at CMakeLists.txt:132 (find_package):; Could not find a package configuration file provided by ""Libint"" (requested; version 1.2.0) with any of the following names:. LibintConfig.cmake; libint-config.cmake; ```. I have both ```libint-1.2.1_1``` and ```libint2-2.5.0.b.2.20_3``` installed, but neither of them provide cmake files. OS: FreeBSD 11.2.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1588:2642,Error,Error,2642,https://psicode.org,https://github.com/psi4/psi4/issues/1588,1,['Error'],['Error']
Availability,"3896681495E+01; H 1.74208808173953E+01 9.58447870262053E+00 1.16469328356722E+01; O 2.10924406367978E+01 1.68832684376857E+01 1.20029556700182E+01; H 2.11724374304327E+01 1.69344491039565E+01 1.29747092928667E+01; H 2.19127120650509E+01 1.73649867268274E+01 1.16495241352093E+01; O 1.66001175009873E+01 1.68847213502115E+01 1.20018639379116E+01; H 1.66863065463536E+01 1.69318387695251E+01 1.29733879832984E+01; H 1.74208858618342E+01 1.73652789519844E+01 1.16468995475923E+01; O 1.88431375700750E+01 1.30109988980166E+01 1.19983531520136E+01; H 1.89282402555765E+01 1.30611209267480E+01 1.29697750466024E+01; H 1.96664898627493E+01 1.34868752802308E+01 1.16416190108971E+01; O 1.43526763532959E+01 1.30113970569431E+01 1.19978051198750E+01; H 1.44424504488042E+01 1.30589832954827E+01 1.29686420001814E+01; H 1.51761320099903E+01 1.34867010754835E+01 1.16393171667026E+01; }. set {; freeze_core true; scf_type df; mp_type df; basis aug-cc-pvtz; DF_BASIS_MP2 cc-pVQZ-RI; }. energy('mp2.5'); ```. Failure:. ```; ==============================================================================; ==============================================================================; ==============================================================================. DF-MP2.5; Program Written by Ugur Bozkaya; Latest Revision September 9, 2017. ==============================================================================; ==============================================================================; ==============================================================================. MO spaces... FC OCC VIR FV; ----------------------; 15 60 1305 0. Number of basis functions in the DF-CC basis: 2970. Available memory : 810623.17 MB; Memory requirement for 3-index ints : 40445.15 MB; Memory requirement for DF-CC int trans: 24244.87 MB; Memory requirement for CC contractions: 56027.91 MB; Total memory requirement for DF+CC int: 96473.07 MB; Memory requirement for Wabef term : 75373.62 MB. Traceback (most recen",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1679:3140,Failure,Failure,3140,https://psicode.org,https://github.com/psi4/psi4/issues/1679,1,['Failure'],['Failure']
Availability,"4 sapt.in . QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for role JKFIT among:; Shell Entries: [u'N']; Basis Sets: [(u'1', u'1', None)]; File Path: /home/toon/sapt, /home/toon/sapt, /home/toon/.local/share/psi4/basis; Input Blocks: . Traceback (most recent call last):; File ""/home/toon/.local/bin/psi4"", line 161, in <module>; exec(content); File ""<string>"", line 53, in <module>; File ""/home/toon/.local/bin/../lib/psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 3133, in run_sapt; dimer_wfn = scf_helper('RHF', molecule=sapt_dimer, **kwargs); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 1199, in scf_helper; ref_wfn = scf_wavefunction_factory(core.get_option('SCF', 'REFERENCE'), base_wfn); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 1028, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/home/toon/.local/lib/psi4/driver/p4util/python_helpers.py"", line 60, in pybuild_basis; key, target, fitrole, other, return_atomlist=return_atomlist); File ""/home/toon/.local/bin/../lib/psi4/driver/qcdb/libmintsbasisset.py"", line 631, in pyconstruct; return_atomlist=return_atomlist); File ""/home/toon/.local/bin/../lib/psi4/driver/qcdb/libmintsbasisset.py"", line 805, in construct; (at + 1, role, text2)); psi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for role JKFIT among:; Shell Entries: [u'N']; Basis Sets: [(u'1', u'1', None)]; File Path: /home/toon/sapt, /home/toon/sapt, /home/toon/.local/share/psi4/basis; Input Blocks: ; ```. Unlike the test cases that come with PSI4, this input explicitly refers to a basis set for the initial guess: cc-pvdz. (That may seem a heavy-handed choice but we found it to be more robust when processing databases of molecular dimers.)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/484:2351,robust,robust,2351,https://psicode.org,https://github.com/psi4/psi4/issues/484,1,['robust'],['robust']
Availability,"4); - [x] Delete unused function overloads from `libmints`: `Matrix::diagonalize` (PR #2693); - [x] Delete commented out code, an unused `extern FILE*` and unused `#include`s from `mcscf::SCF::energy` (PR #2678). ### New DSYEV wrappers, anti-`sq_rsp(...)` crusade; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2217,failure,failure,2217,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"5 -3.7952513694763184 -0.9667707681655884; H -1.818267822265625 -2.5147225856781006 -1.3233563899993896; C -0.2652755677700043 -0.47430306673049927 -1.2846300601959229; C 0.5650341510772705 0.6324429512023926 -1.1073341369628906; H 1.0022953748703003 1.1210383176803589 -1.9738258123397827; H -0.46503451466560364 -0.8350303173065186 -2.2904675006866455; H -0.9999359846115112 -1.117483139038086 1.977584958076477; H 0.46812179684638977 0.8390328884124756 2.2878639698028564; H 1.9390827417373657 2.4920878410339355 -0.5236388444900513""""""); molecule.set_molecular_charge(0); molecule.set_multiplicity(1); psi4.set_options({""reference"":""uhf""}). print(""calculate energy...""); energy, wfn = psi4.energy(""HF3c/"", return_wfn=True); print(""converting energy ...""); kcal_energy = energy * psi4.constants.hartree2kcalmol; print(""energy {:.2f} kcal/mol"".format(kcal_energy)); ```; Specifically the output I get is ; ```; set output file path; create molecule...; calculate energy...; Segmentation fault: 11; ```; I tried to attach the .dat file, but github wouldn't let me, but this is end of it:; ```; ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12. ==> Primary Basis <==. Basis Set: MINIX; Blend: MINIX; Number of shells: 42; Number of basis functions: 64; Number of Cartesian functions: 64; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (MINIX AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 8 entry O line 318 file /Users/cbannan/miniconda3/envs/baby_env/share/psi4/basis/def2-universal-jkfit.gbs; atoms 2-5, 7, 9, 14-15 entry C line 198 file /Users/cbannan/miniconda3/envs/baby_env/share/psi4/basis/def2-universal-jkfit.gbs; atoms 6 entry N line 258 file /Users/cbannan/miniconda3/envs/baby_env/share/psi4/basis/def2-universal-jkfit.gbs; atoms 10-13, 16-20 entry H line 18 file /Users/cbannan",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2593:2826,fault,fault,2826,https://psicode.org,https://github.com/psi4/psi4/issues/2593,1,['fault'],['fault']
Availability,"5 ; (n = 1): 275 ; Row and column block dimensions of B; (n = 1): 276 ; (n = 1): 275 ; Row and column block dimensions of C; (n = 1): 275 ; (n = 1): 275 ; Asym: 0, Bsym: 0, Csym: 0; Mismatch in index Ha = 0; ```. Additionally, the following error message is given:; ```; Traceback (most recent call last):; File ""/oasis/tscc/scratch/ebullvul/projects/POPC/timings/debug/psi4test/psi4_ccsdt.py"", line 28, in <module>; e = psi4.energy(model, molecule=mol); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/driver.py"", line 526, in energy wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 989, in select_ccsd_t_ return func(name, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 2898, in run_ccenergy core.cctransort(ref_wfn); RuntimeError: ; Fatal Error: Matrix::gemm error: Number of rows and columns do not match.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1670993662927/work/psi4/src/psi4/libmints/matrix.cc on line: 1389The most recent 5 function calls were:. psi::Matrix::gemm(bool, bool, double, psi::Matrix const*, psi::Matrix const*, double); psi::Matrix::transform(psi::Matrix const&, psi::Matrix const&, psi::Matrix const&); ```. I am not technically knowledgeable enough to interpret the information about the 'A', 'B', and 'C' matrices in the log file, but it seems like the problem is that their dimensions do not match. Additionally, I can also report that the calculation works if ANY of the following changes are made to the input:; 1) The ghost atoms are removed.; 2) The non-augmented basis set is used. (cc-pvtz rather than aug-cc-pvtz); 3) If {'cc_type': 'df'} is passed to psi4.set_options() to do density-fitted coupled cluster. I installed the stable branch of psi4 through anaconda, I have version ""1.7+6c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916:2629,Error,Error,2629,https://psicode.org,https://github.com/psi4/psi4/issues/2916,2,"['Error', 'error']","['Error', 'error']"
Availability,"5000 1.241852000 8.156885000; H 1.485477000 1.176688000 9.116348000; C 3.332840000 1.154673000 7.834922000; H 4.206519000 0.999649000 8.462845000; N 1.311649000 1.424993000 6.973626000; C 2.188563000 1.435214000 5.957752000; H 1.944614000 1.560136000 4.907488000; N 3.421451000 1.288054000 6.467033000; C 4.624491000 1.154329000 5.644658000; H 4.896627000 0.092348000 5.590783000; H 4.378873000 1.527036000 4.641881000; H 5.430033000 1.755038000 6.090598000; C -0.139438000 1.464529000 6.788437000; H -0.534567000 0.445964000 6.893963000; H -0.329914000 1.835298000 5.773051000; H -0.575851000 2.145114000 7.533419000; F 2.193639000 -1.420051000 6.719505000; B 1.853598000 -1.602720000 5.368653000; F 1.684676000 -2.933106000 5.022169000; F 2.887295000 -1.000476000 4.545917000; F 0.639066000 -0.856861000 5.091564000; }; set globals {; basis aug-cc-pVDZ; scf_type direct; freeze_core True; guess sad; basis_guess 3-21G; }; energy('mrccsd(t)_l'); ```. End of output. ```; *** tstart() called on r3584; *** at Mon Feb 17 12:17:52 2014. PSI4 interface to MRCC:; Generating inputs for CCSD(T)_L. Automatically determined settings:; method 4; exlevel 3; fullname CCSD(T)_L. Orbital Information:. Frozen Core [ 24]; Active DOCC [ 70]; SOCC [ 0]; Frozen Virtual [ 0]. Total MOs [ 690]. Beginning integral transformation.; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 5; ```. Stderr. ```; iwl_buf_init: Can't open file 33; PSIO_ERROR: Can't find TOC Entry IWL Buffers; PSIO_ERROR: unit = 33, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 72, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2111, in run_mrcc; psi4.mrcc_generate_input(level); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 116; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/35:2913,Error,Error,2913,https://psicode.org,https://github.com/psi4/psi4/issues/35,2,"['Error', 'error']","['Error', 'error']"
Availability,"506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in run_sapt_dft; sapt_dft(dimer_wfn, wfn_A, wfn_B, sapt_jk=sapt_jk, data=data, print_header=False); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 421, in sapt_dft; fdds_disp = sapt_mp2_terms.df_fdds_dispersion(primary_basis, aux_ba",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:2095,ERROR,ERROR,2095,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"6, in _core_wavefunction_from_file; basisset = core.BasisSet.build(molecule, 'ORBITAL', basis_name, puream=basis_puream); File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/p4util/python_helpers.py"", line 84, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(mol.to_dict(),; File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/qcdb/libmintsbasisset.py"", line 696, in pyconstruct; bs, msg, ecp = BasisSet.construct(parser, mol,; File ""/home/tony/psi4conda/lib//python3.8/site-packages/psi4/driver/qcdb/libmintsbasisset.py"", line 918, in construct; raise BasisSetNotFound('BasisSet::construct: Unable to find a basis set for atom %d for key %s among:\n%s' % \. psi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['C']; Basis Sets: [('ANONYMOUS5AA41DFC', 'ANONYMOUS5AA41DFC', None)]; File Path: /home/tony/test_psi4_jobs/test_restart, /home/tony/test_psi4_jobs/test_restart, /home/tony/psi4conda/share/psi4/basis; Input Blocks:. Printing out the relevant lines from the Psithon --> Python processed input file:; H -1.24645 -1.58985 0.04960; H -2.69979 -0.44218 0.33707; H -1.53347 1.35513 -0.87676; """"""); core.IO.set_default_namespace(""""); --> nrg, wfn = energy('M06-2X', return_wfn=True, restart_file=""test_restart""). !----------------------------------------------------------------------------------!; ! !; ! BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among: !; ! Shell Entries: ['C'] !; ! Basis Sets: [('ANONYMOUS5AA41DFC', 'ANONYMOUS5AA41DFC', None)] !; ! File Path: /home/tony/test_psi4_jobs/test_restart, !; ! /home/tony/test_psi4_jobs/test_restart, !; ! /home/tony/psi4conda/share/psi4/basis !; ! Input Blocks: !; ! !; !----------------------------------------------------------------------------------!; ```. The documentation indicates that this should work. I've tried it with ""scf"" instead of M06-2X, and I get the same error.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2571:4442,error,error,4442,https://psicode.org,https://github.com/psi4/psi4/issues/2571,1,['error'],['error']
Availability,"6355; C 3.05053 -0.99330 -1.18650; C 3.20741 -2.40360 -1.74586; C 2.55026 -3.52443 -0.96032; F 3.17228 4.13514 -0.00592; F 1.27554 3.06932 0.32664; F 3.66787 0.59838 2.12267; F 1.67182 0.43073 1.22024; F 3.82500 -0.17529 -1.99644; F 1.75160 -0.57213 -1.38634; F 3.25533 -3.78096 0.19399; F 1.27730 -3.18683 -0.58308; H 2.25306 4.32050 2.37079; H 3.76241 3.37061 2.47326; H 2.19469 2.57073 2.72526; H 4.35180 1.97066 0.10411; H 2.92157 1.70418 -0.89385; H 4.54579 -0.84429 0.31346; H 3.04476 -1.57689 0.88214; H 4.27328 -2.63006 -1.82364; H 2.78870 -2.38708 -2.75512; H 2.50060 -4.45608 -1.52780; --; 0 1; C -3.87349 2.91061 -1.65876; N -2.75856 1.99410 -1.41455; C -1.50263 2.33407 -0.94691; C -0.83120 1.17172 -0.73344; C -2.84151 0.66484 -1.47790; N -1.68346 0.14262 -1.07953; C -1.46679 -1.28577 -0.78728; C -1.38542 -1.51827 0.72247; C -1.59684 -2.99357 1.06458; C -1.46598 -3.24276 2.56923; H -3.87594 3.66326 -0.86989; H -3.76218 3.38868 -2.63477; H -4.79884 2.33892 -1.60023; H -1.20045 3.35521 -0.79404; H 0.15181 0.98994 -0.34830; H -3.72834 0.10789 -1.72147; H -0.55449 -1.60196 -1.29485; H -2.32462 -1.81798 -1.19641; H -0.41387 -1.17340 1.09480; H -2.16763 -0.92438 1.19970; H -0.87575 -3.61428 0.52075; H -2.59984 -3.27619 0.72873; H -0.46552 -2.96983 2.92459; H -2.19613 -2.64103 3.11964; H -1.63860 -4.29508 2.81528; B -4.99249 -0.20013 0.53015; F -4.36607 -1.36290 -0.02014; F -5.60912 0.50296 -0.55477; F -3.96502 0.63394 1.05703; F -5.91416 -0.53978 1.49939. units angstrom; no_reorient; symmetry c1; }. set{ basis 6-311+G(d,p); scf_type df. DF_BASIS_SAPT 6-311+G(d,p); SAPT_DFT_FUNCTIONAL B3LYP-D. }; energy('sapt2', molecule=AP_BMIMBF4); ```. I received an error message that I ran out of memory. The output file indicates failure occurred during the SAPT2 part, which reported `Estimated memory usage: 64566.6 MB`. Its estimate is off by at least 30 GB, which is not good. The user didn't specify the version they were using beyond `conda`, but I observed this on `1.3a2.dev122`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1361:2096,error,error,2096,https://psicode.org,https://github.com/psi4/psi4/issues/1361,2,"['error', 'failure']","['error', 'failure']"
Availability,"685693; O 2.81552768 -0.50840706 -1.42180252; O 3.61564541 1.27844179 0.09948727; O 2.95557380 -0.82533526 1.00298083; C 2.03019476 -1.93245912 1.04782605; C -1.66037059 -1.05786431 -0.87382233; C -1.39498496 -1.19960129 -2.34816003; C -2.65299201 -1.76249051 -0.27337471; H -2.37740040 -0.54585648 2.90523863; H 2.38954139 -2.56465364 1.84992540; H 1.02863634 -1.57685304 1.27002537; H 2.04236674 -2.46241236 0.09951447; H -2.15541649 -1.82673633 -2.80763054; H -0.41234738 -1.64107180 -2.50716877; H -1.37758315 -0.22482435 -2.83713913; H -3.27599978 -2.43724084 -0.84607768; S -0.34233722 2.35735393 -1.83532763; C 1.36095190 2.94818139 -1.81407535; H 1.71979201 3.09855604 -0.79815280; H 2.02802634 2.25554347 -2.32132745; H 1.39841688 3.90181231 -2.33199310; H 0.52648693 0.85272557 2.39744759; H -0.38901252 2.05630112 1.52833438; H -1.06736839 1.33094835 2.99083304; }. set {; pcm true; pcm_scf_type total; }. pcm = {; Units = Angstrom; Medium {; SolverType = IEFPCM; Solvent = Water; }. Cavity {; RadiiSet = UFF; Type = GePol; Scaling = False; Area = 0.3; Mode = Implicit; }; }. gradient(""b97-3c""); ```. And here's what happens when I run the calculation:. ```shell; $ psi4 input.dat; PCMSolver fatal error.; In function computeS at line 51 of file /Users/runner/miniforge3/conda-bld/pcmsolver-split_1696645993753/work/src/bi_operators/IBoundaryIntegralOperator.cpp; S matrix is not positive-definite!; Consider changing the average area of the cavity finite elements.; Please report this issue: https://github.com/PCMSolver/pcmsolver/issues; ```. If I delete the PCM sections, the B97-3c gradient runs just fine. The molecule looks normal:. <img width=""600"" alt=""image"" src=""https://github.com/user-attachments/assets/afa2ecd1-9890-4dc5-bf99-a1d7ae898d11"">. All calculations run on a MacBook Pro using Psi4 1.9.1 from conda-forge. (I know the message says to report this to [PCMSolver](https://github.com/PCMSolver/pcmsolver/issues) but that repository hasn't had any updates in 3+ years...)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3202:1645,error,error,1645,https://psicode.org,https://github.com/psi4/psi4/issues/3202,1,['error'],['error']
Availability,"6ccacb77bf8944a3dcf6c097f2/psi4/__init__.py#L47-L48. The full error is below:; ```; [2024-01-25 07:17:41 EST] INFO: qcfractalcompute.config: Reading configuration data from configs/config.3049902-1.yaml; Traceback (most recent call last):; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <module>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <dictcomp>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/lila/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/psi4/__init__.py"", line 64, in <module>; raise KeyError(f""Unable to read the Psi4 Python folder - check the PSIDATADIR environmental variable - current value is {str(data_dir)}""); KeyError: 'Unable to read the Psi4 Python folder - check the PSIDATADIR environmental variable - current value is /lila/home/conda/feedstock_root/build_artifacts/psi4_1696426865911/work/build/stage/share/psi4'; ``` . To decode this output a little, the failure results from qcarchive trying to get the version of psi4. The specific qcarchive code is here: https://github.com/MolSSI/QCFractal/blob/32a29a86d6673b0ea1a743b02d3af314c2fd164c/qcfractalcompute/qcfractalcompute/run_scripts/qcengine_list.py#L12. The code to query ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3126:1349,Error,Error,1349,https://psicode.org,https://github.com/psi4/psi4/issues/3126,2,['Error'],['Error']
Availability,"7 -2.64002e-06 2.86336e-06 SOSCF, nmicro=5; @DF-ROHF iter 14: -1928.51831487022673 -2.51935e-06 1.14965e-06 SOSCF, nmicro=5; @DF-ROHF iter 15: -1928.51831729563537 -2.42541e-06 2.74681e-06 SOSCF, nmicro=5; @DF-ROHF iter 16: -1928.51831963922041 -2.34359e-06 1.10840e-06 SOSCF, nmicro=5; @DF-ROHF iter 17: -1928.51832191065023 -2.27143e-06 2.65960e-06 SOSCF, nmicro=5; @DF-ROHF iter 18: -1928.51832411656915 -2.20592e-06 1.07467e-06 SOSCF, nmicro=5; @DF-ROHF iter 19: -1928.51832626156192 -2.14499e-06 2.58541e-06 SOSCF, nmicro=5; @DF-ROHF iter 20: -1928.51832834999686 -2.08843e-06 1.04450e-06 SOSCF, nmicro=5; @DF-ROHF iter 21: -1928.51833038416635 -2.03417e-06 2.51779e-06 SOSCF, nmicro=5; @DF-ROHF iter 22: -1928.51833236735638 -1.98319e-06 1.01620e-06 SOSCF, nmicro=5; @DF-ROHF iter 23: -1928.51833430059696 -1.93324e-06 2.45380e-06 SOSCF, nmicro=5; @DF-ROHF iter 24: -1928.51833618656428 -1.88597e-06 9.89026e-07 SOSCF, nmicro=5; @DF-ROHF iter 25: -1928.51833802564261 -1.83908e-06 2.39210e-06 SOSCF, nmicro=5; @DF-ROHF iter 26: -1928.51833982011476 -1.79447e-06 9.62693e-07 SOSCF, nmicro=5; @DF-ROHF iter 27: -1928.51834157004896 -1.74993e-06 2.33205e-06 SOSCF, nmicro=5; @DF-ROHF iter 28: -1928.51834327746201 -1.70741e-06 9.37124e-07 SOSCF, nmicro=5; @DF-ROHF iter 29: -1928.51834494231707 -1.66486e-06 2.27333e-06 SOSCF, nmicro=5; @DF-ROHF iter 30: -1928.51834656639858 -1.62408e-06 9.12295e-07 SOSCF, nmicro=5; @DF-ROHF iter 31: -1928.51834814968470 -1.58329e-06 2.21577e-06 SOSCF, nmicro=5; ```. We are well within the quadratic region, and although the energy is monotonically decreasing, it is decreasing very slowly, and with the error bouncing back and forth between two numbers: one around 2e-6 and one around 9e-7. That should never happen within the quadratic region. We see the same pattern if you try the SCF with conventional integrals. There are similar problems when you don't use SOSCF, so the error may not be SOSCF specific. I strongly suspect the ECPs are somehow at fault.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1716:3227,error,error,3227,https://psicode.org,https://github.com/psi4/psi4/issues/1716,3,"['error', 'fault']","['error', 'fault']"
Availability,"7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the end; * https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L25 for libint2 build constraints for Psi4. Steps toward Psi4 using a upstream Libint2 release in common with other open-source QC programs:; * step 2 — 20 Nov 2020 — #1721; * step 3 — 11 Mar 2022 — #2388; * post 3 — 16 Mar 2022 — #2474, #2482, #2484; * step C — 21 March 2022 — #2489; * step C — 21 March 2022 — #2483; * step B — 23 March 2022 — #2413; * post B — 23 March 2022 — #2494 ; * step C — 2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5825,down,download,5825,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"73100000 -0.000000000; C 1.934600000 -0.213400000 -0.000000000; H 2.475000000 -0.380600000 0.924600000; H 2.475400000 -0.380100000 -0.924300000; H -0.756100000 1.624500000 0.000500000; H -2.368000000 -0.187400000 0.878900000; H -1.437400000 -1.407900000 -0.000100000; H -2.368300000 -0.187200000 -0.878700000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVTZ; dft_spherical_points 434; dft_radial_points 85; }. set_memory(24000000000); try:; optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); set guess read; optimize('pwpb95-d3bj'); E, wfn = frequency('pwpb95-d3bj', return_wfn=True); print(wfn.frequencies().get(0, 0)); ```. The program starts the optimization and produces an error:. ```; Performing finite difference calculations; 49 displacements needed ... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007FB2D549510F for__signal_handl Unknown Unknown; libpthread-2.27.s 00007FB2DA9F68A0 Unknown Unknown Unknown; libc-2.27.so 00007FB2DA631F47 gsignal Unknown Unknown; libc-2.27.so 00007FB2DA6338B1 abort Unknown Unknown; core.cpython-37m- 00007FB2D7A0D3D7 Unknown Unknown Unknown; core.cpython-37m- 00007FB2D6563E2D Unknown Unknown Unknown; core.cpython-37m- 00007FB2D657D2C1 Unknown Unknown Unknown; core.cpython-37m- 00007FB2D6040FF6 Unknown Unknown Unknown; python3.7 000055D7E213E914 _PyMethodDef_RawF Unknown Unknown; python3.7 000055D7E213EA31 _PyCFunction_Fast Unknown Unknown; python3.7 000055D7E21AAEBD _PyEval_EvalFrame Unknown Unknown; python3.7 000055D7E20ED829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055D7E213E107 _PyFunction_FastC Unknown Unknown; python3.7 000055D7E21A64B6 _PyEval_EvalFrame Unknown Unknown; python3.7 000055D7E20ED829 _PyEval_EvalCodeW Unknown Unk",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2020:1296,error,error,1296,https://psicode.org,https://github.com/psi4/psi4/issues/2020,1,['error'],['error']
Availability,"77, -108.48893387244806, -108.4885456753569, -108.48825797751267, -108.48802517925705, -108.48783928065005, -108.48769318174477, -108.48758038259001, ; -108.48749538322693, -108.48743328369225, -108.48738988401745, -108.4873615842295, -108.4873453843509, -108.48733858440185, -108.48733918439734, -108.48734528435165, -108.487544082862,; -108.4875574827616, -108.48757248264921, -108.48758858252856, -108.48760498240567, -108.48762118228429, -108.48763708216514, -108.48765208205275, -108.4876661819471, ; -108.48767918184969, -108.48769108176053, -108.4877016816811, -108.48771108161066, -108.48771918154995, -108.48772618149751, -108.48773188145479, -108.48773658141958, ; -108.48774018139261, -108.48774268137387, -108.48774438136114, -108.48774518135515, -108.48774518135515, -108.48774438136114, -108.48774298137162, -108.48774098138661, ; -108.48773838140609, -108.48773538142858, -108.48720108543215]. psi4.diatomic.anharmonicity(r,eng,'result.out'); ```. But when I run it with Psi4, I'm getting the following error:; ```; m1: 14.00307400443, m2: 14.00307400443; d2: -0.02414940264774275, mu: 1.1626325532182573e-26; invalid value encountered in sqrt; invalid value encountered in sqrt; Traceback (most recent call last):; File ""/home/martin/miniconda/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 41, in <module>; File ""/home/martin/miniconda/lib//python3.7/site-packages/psi4/driver/diatomic.py"", line 194, in anharmonicity; roots2 = np.roots(coefs2); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/lib/polynomial.py"", line 245, in roots; roots = eigvals(A); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/linalg/linalg.py"", line 1059, in eigvals; _assertFinite(a); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/linalg/linalg.py"", line 219, in _assertFinite; raise LinAlgError(""Array must not contain infs or NaNs""). numpy.linalg.LinAlgError: Array must not contain infs or NaNs. Printing out the relevant lines f",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600:2727,error,error,2727,https://psicode.org,https://github.com/psi4/psi4/issues/1600,1,['error'],['error']
Availability,"79752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:4499,down,download,4499,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"80/#) in conversion_factor(self, base_unit, conv_unit); 310 # Add a little magic in case the incoming values have scalars; 311 ; --> 312 from pint import quantity; 313 ; 314 factor = 1.0. [/usr/local/lib/python3.7/site-packages/pint/__init__.py](https://localhost:8080/#) in <module>(); 12 """"""; 13 ; ---> 14 from .context import Context; 15 from .errors import ( # noqa: F401; 16 DefinitionSyntaxError,. [/usr/local/lib/python3.7/site-packages/pint/context.py](https://localhost:8080/#) in <module>(); 13 from collections import ChainMap, defaultdict; 14 ; ---> 15 from .definitions import Definition, UnitDefinition; 16 from .errors import DefinitionSyntaxError; 17 from .util import ParserHelper, SourceIterator, to_units_container. [/usr/local/lib/python3.7/site-packages/pint/definitions.py](https://localhost:8080/#) in <module>(); 11 from collections import namedtuple; 12 ; ---> 13 from .converters import LogarithmicConverter, OffsetConverter, ScaleConverter; 14 from .errors import DefinitionSyntaxError; 15 from .util import ParserHelper, UnitsContainer, _is_dim. [/usr/local/lib/python3.7/site-packages/pint/converters.py](https://localhost:8080/#) in <module>(); 10 ; 11 ; ---> 12 from .compat import HAS_NUMPY, exp, log # noqa: F401; 13 ; 14 . [/usr/local/lib/python3.7/site-packages/pint/compat.py](https://localhost:8080/#) in <module>(); 161 # xarray (DataArray, Dataset, Variable); 162 try:; --> 163 from xarray import DataArray, Dataset, Variable; 164 ; 165 upcast_types += [DataArray, Dataset, Variable]. [/usr/local/lib/python3.7/dist-packages/xarray/__init__.py](https://localhost:8080/#) in <module>(); 1 import pkg_resources; 2 ; ----> 3 from . import testing, tutorial, ufuncs; 4 from .backends.api import (; 5 load_dataarray,. [/usr/local/lib/python3.7/dist-packages/xarray/tutorial.py](https://localhost:8080/#) in <module>(); 11 import numpy as np; 12 ; ---> 13 from .backends.api import open_dataset as _open_dataset; 14 from .backends.rasterio_ import open_rasterio as _o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2510:4884,error,errors,4884,https://psicode.org,https://github.com/psi4/psi4/issues/2510,1,['error'],['errors']
Availability,"8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 238643; Total Blocks = 1822; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 3-8 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2, 9-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.163 GiB; user supplied 0.163 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.0% of DFT collocation blocks in 0.155 [GiB]. Minimum eigenvalue in the overlap matrix is 5.5224744543E-04.; Reciprocal condition number of the overlap matrix is 8.7845130506E-05.; Using symmetric orthogonalization. ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo ; -------------------------; A 111 111 ; -------------------------; Total 111 111; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RKS iter SAD: -40.20742626722070 -4.02074e+01 0.00000e+00 ; @DF-RKS iter 1: -41.85372076056422 -1.64629e+00 4.64946e-03 DIIS/ADIIS; @",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:22202,Mask,Mask,22202,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['Mask'],['Mask']
Availability,"8640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3571,ROBUST,ROBUST,3571,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,"94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\ground_state_solvers\ground_state_eigensolver.py in solve(self, problem, aux_operators); 80 # note that ``aux_ops`` contains not only the transformed ``aux_operators`` passed by the; 81 # user but also additional ones from the transformation; ---> 82 second_q_ops = problem.second_q_ops(); 83 ; 84 main_operator = self._qubit_converter.convert(. ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\problems\second_quantization\electronic\electronic_structure_problem.py in second_q_ops(self); 62 operator, and (if available) x, y, z dipole operators.; 63 """"""; ---> 64 self._molecule_data = cast(QMolecule, self.driver.run()); 65 self._molecule_data_transformed = cast(QMolecule, self._transform(self._molecule_data)); 66 . ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\drivers\psi4d\psi4driver.py in run(self); 131 os.close(file_fd); 132 try:; --> 133 PSI4Driver._run_psi4(input_file, output_file); 134 if logger.isEnabledFor(logging.DEBUG):; 135 with open(output_file, 'r') as file:. ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\drivers\psi4d\psi4driver.py in _run_psi4(input_file, output_file); 186 logger.error(lines[i]); 187 errmsg += lines[i] + ""\n""; --> 188 raise QiskitNatureError('{} process return code {}\n{}'.format(; 189 PSI4, process.returncode, errmsg)). QiskitNatureError: 'psi4 process return code 1\nTraceback (most recent call last):\n File ""C:\\Users\\user\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\Scripts\\psi4-script.py"", line 3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:2532,avail,available,2532,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['avail'],['available']
Availability,": 0); | ; In file included from build/stage/include/libint2/solidharmonics.h:38,; from build/stage/include/libint2/cxxapi.h:39,; from build/stage/include/libint2/engine.h:48,; from psi4/src/psi4/libmints/shellpair.h:8,; from psi4/src/psi4/libmints/eri.h:42,; from psi4/src/export_mints.cc:54:; build/stage/include/libint2/cgshell_ordering.h:93: warning: ""INT_CARTINDEX"" redefined; 93 | #define INT_CARTINDEX(am,i,j) ( (((((am) - (i) + 1)*((am) - (i)))>>1) + (am) - (i) - (j)) ); | ; In file included from psi4/src/export_mints.cc:48:; psi4/src/psi4/libmints/integral.h:64: note: this is the location of the previous definition; 64 | #define INT_CARTINDEX(am, i, j) (((i) == (am)) ? 0 : (((((am) - (i) + 1) * ((am) - (i))) >> 1) + (am) - (i) - (j))); | ; In file included from build/stage/include/libint2/engine.h:1019,; from psi4/src/psi4/libmints/shellpair.h:8,; from psi4/src/psi4/libmints/eri.h:42,; from psi4/src/export_mints.cc:54:; build/stage/include/libint2/./engine.impl.h:35:11: fatal error: boost/preprocessor.hpp: No such file or directory; 35 | # include <boost/preprocessor.hpp>; | ^~~~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; [11/1097] Building CXX object src/CMakeFiles/core.dir/read_options.cc.o; ninja: build stopped: subcommand failed.; FAILED: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build ; cd build/psi4-core-prefix/src/psi4-core-build && /usr/bin/cmake --build .; ninja: build stopped: subcommand failed.; ```. https://github.com/psi4/psi4/blob/2e3b0f2039ff0e9a968f964ede868adf790ca54e/psi4/src/CMakeLists.txt#L55-L61. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following part:; ```cmake; if (BUILD_SHARED); add_library (int-shared SHARED $<TARGET_OBJECTS:int-obj>); target_link_libraries (int-shared INTERFACE Eigen3::Eigen); set_target_properties (int-shared PROPERTIES SOVERSION ${LIBINT_MAJOR_SOVERSION}; MACOSX_RPATH ON; OUTPUT_NAME ""int2""; EXPORT_NAME ""cxx""); target_include_directories(int-shared IN",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2427:2713,error,error,2713,https://psicode.org,https://github.com/psi4/psi4/issues/2427,1,['error'],['error']
Availability,"://localhost:8080/#) in to_schema(self, dtype, units); 1542 ; 1543 molrec = self.to_dict(np_out=True); -> 1544 schmol = qcel.molparse.to_schema(molrec, dtype=dtype, units=units); 1545 return schmol; 1546 . [/usr/local/lib/python3.7/site-packages/qcelemental/molparse/to_schema.py](https://localhost:8080/#) in to_schema(molrec, dtype, units, np_out, copy); 47 geom = geom * molrec[""input_units_to_au""]; 48 else:; ---> 49 geom = geom * constants.conversion_factor(molrec[""units""], units); 50 ; 51 nat = geom.shape[0] // 3. [/usr/local/lib/python3.7/site-packages/qcelemental/physical_constants/context.py](https://localhost:8080/#) in conversion_factor(self, base_unit, conv_unit); 310 # Add a little magic in case the incoming values have scalars; 311 ; --> 312 from pint import quantity; 313 ; 314 factor = 1.0. [/usr/local/lib/python3.7/site-packages/pint/__init__.py](https://localhost:8080/#) in <module>(); 12 """"""; 13 ; ---> 14 from .context import Context; 15 from .errors import ( # noqa: F401; 16 DefinitionSyntaxError,. [/usr/local/lib/python3.7/site-packages/pint/context.py](https://localhost:8080/#) in <module>(); 13 from collections import ChainMap, defaultdict; 14 ; ---> 15 from .definitions import Definition, UnitDefinition; 16 from .errors import DefinitionSyntaxError; 17 from .util import ParserHelper, SourceIterator, to_units_container. [/usr/local/lib/python3.7/site-packages/pint/definitions.py](https://localhost:8080/#) in <module>(); 11 from collections import namedtuple; 12 ; ---> 13 from .converters import LogarithmicConverter, OffsetConverter, ScaleConverter; 14 from .errors import DefinitionSyntaxError; 15 from .util import ParserHelper, UnitsContainer, _is_dim. [/usr/local/lib/python3.7/site-packages/pint/converters.py](https://localhost:8080/#) in <module>(); 10 ; 11 ; ---> 12 from .compat import HAS_NUMPY, exp, log # noqa: F401; 13 ; 14 . [/usr/local/lib/python3.7/site-packages/pint/compat.py](https://localhost:8080/#) in <module>(); 161 # xarray (DataArr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2510:4254,error,errors,4254,https://psicode.org,https://github.com/psi4/psi4/issues/2510,1,['error'],['errors']
Availability,":1001 ] Searching for CHRONO_LIBRARY_RELEASE: boost_chrono-mt-1_59;boost_chrono-mt;boost_chrono-mt-1_59;boost_chrono-mt;boost_chrono; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1037 ] Searching for CHRONO_LIBRARY_DEBUG: boost_chrono-mt-d-1_59;boost_chrono-mt-d;boost_chrono-mt-d-1_59;boost_chrono-mt-d;boost_chrono-mt;boost_chrono; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1001 ] Searching for THREAD_LIBRARY_RELEASE: boost_thread-mt-1_59;boost_thread-mt;boost_thread-mt-1_59;boost_thread-mt;boost_thread; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1037 ] Searching for THREAD_LIBRARY_DEBUG: boost_thread-mt-d-1_59;boost_thread-mt-d;boost_thread-mt-d-1_59;boost_thread-mt-d;boost_thread-mt;boost_thread; -- [ /usr/local/Cellar/cmake/3.2.2/share/cmake/Modules/FindBoost.cmake:1088 ] Boost_FOUND = 1; ```. ... after this point if hombrew boost _is unlinked_:. ```; -- Could NOT find Boost ; Could not find the following static Boost libraries:; boost_filesystem; boost_regex; boost_serialization; boost_system; boost_timer; boost_chrono; boost_thread; ```. ... and if hombrew boost _is linked_: . ```; Boost version: 1.59.0 ; Boost include path: /Users/admin/anaconda/envs/psi4-py2.7/include; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; ```. My main concern is CMake reporting Boost version 1.59.0, but then using library paths that point to a different version. I don't know if I would have been able to figure out what was going on if I didn't recognize the linker errors as the boost 1.60.0 incompatibility issue. ; (Good thing I have been reading the issues I guess! :tongue: ). But since `Boost_FOUND = 1` is set in both cases, why is the prepackaged boost being built? ; ### Temporary workaround. Using `-DBUILD_CUSTOM_BOOST=ON` will avoid the issue completely and still build successfully.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313:10793,error,errors,10793,https://psicode.org,https://github.com/psi4/psi4/issues/313,1,['error'],['errors']
Availability,":56) ; [GCC 4.8.2 20140120 (Red Hat 4.8.2-15)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import sys; >>> sys.executable; '/home/xxx/data/applications/anaconda3/envs/p4env/bin/python'; >>> sys.path; ['', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python36.zip', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/lib-dynload', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages']; >>> import psi4; /home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; ```. If I run inside a notebook, `sys.path` and `sys.executable` are the same, but when I `import psi4`, I get a message ""The kernel appears to have died. It will restart automatically."" In the terminal, I see: ; ```; [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:1642,ERROR,ERROR,1642,https://psicode.org,https://github.com/psi4/psi4/issues/862,1,['ERROR'],['ERROR']
Availability,":56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in your program's main thread (unlikely but; ==98805== possible), you can try to increase the size of the; ==98805== main thread stack using the --main-stacksize= flag.; ==98805== The main thread stack size used in this run was 8388608.; ==98805== ; ==98805== HEAP SUMMARY:; ==98805== in use at exit: 20,461,418 bytes in 40,150 blocks; ==98805== total heap usage: 393,696 allocs, 353,546 frees, 108,089,532 bytes allocated; ==98805== ; ==98805== LEAK SUMMARY:; ==98805== definitely lost: 0 bytes in 0 blocks; ==98805== indirectly lost: 0 bytes in 0 blocks; ==98805== possibly lost: 480,565 bytes in 454 blocks; ==98805== still reachable: 19,980,817 bytes in 39,694 blocks; ==98805== suppressed: 36 bytes in 2 blocks; ==98805== Rerun with --leak-check=full to see details of leaked memory; ==98805== ; ==98805== For lists of detected and suppressed errors, rerun with: -s; ==98805== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0); Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3200:4510,error,errors,4510,https://psicode.org,https://github.com/psi4/psi4/issues/3200,4,"['ERROR', 'error', 'fault']","['ERROR', 'errors', 'fault']"
Availability,"::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/Lib",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3677,error,error,3677,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"; CL -0.000000000000 2.604296831956 1.503991149589; CL -0.000000000000 0.000000000000 -3.007607968024; }; mol.update_geometry(); mol.symmetrize(0.01). set reference rks; set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True). set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.12, 0.12, 0.12]; cubeprop(wfn); ```; give this in cube header:. > Sum of electrons: 58527.1 number of electrons: 101.135. from the chargemol program; > nvalence = 90.0000; pixelvolume = 1.7280E-03; numerically integrated valence density = 1.0113E+02; sum_valence_occupancy_correction = 0.0000E+00; checkme = 1.1135E+01; The electrons are not properly accounted for.; Either the grid in your electron density input file is too coarse, you have specified the incorrect net charge in the chargemol_job.m file, or t$; Program will terminate. Further testing by changing on the grid spacing (worst case here above):; ```; grid:0.2, error:5.2489 ; grid:0.19, error:4.5155 ; grid:0.18, error:2.4477 ; grid:0.17, error:3.6323 ; grid:0.16, error:2.3993 ; grid:0.15, error:2.8355 . grid:0.14, error:2.4962 ; grid:0.138, error:4.6381; grid:0.136, error:0.8501; grid:0.134, error:1.4051; grid:0.132, error:1.2419; grid:0.13, error:0.58084; grid:0.128, error:1.5786; grid:0.126, error:1.0912; grid:0.124, error:0.25624; grid:0.122, error:4.2158; grid:0.12, error:11.538; grid:0.118, error:3.1169; grid:0.116, error:1.4544; grid:0.114, error:1.4049; grid:0.112, error:1.502; grid:0.11, error:0.29599; grid:0.108, error:1.1679; grid:0.106, error:0.73735; grid:0.104, error:1.9971; grid:0.102, error:0.6448; grid:0.1, error:0.92615. grid:0.09, error:1.1189; grid:0.08, error:0.3121; grid:0.07, error:0.2545; grid:0.06, error:0.20924; grid:0.05, error:0.047781; ```; I guess the interpolation of the density values for each point take place in the add_density function but I am not sure how I can minimize this behaviour to be sure get a more correct total electron densit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311:2016,error,error,2016,https://psicode.org,https://github.com/psi4/psi4/issues/1311,1,['error'],['error']
Availability,"= 179.050978 0.000006 0.918241 179.969219; 	 458 D(80,79,81,82) = -0.723483 -0.000001 0.699743 -0.023740; 	 459 R(1,57) = 4.556972 0.028391 82.812579 87.369551; 	 460 R(1,59) = 4.234547 -0.016108 88.866233 93.100780; 	 461 R(1,61) = 5.234532 -0.079923 136.786876 142.021408; 	 462 R(3,10) = 4.421241 -0.017502 87.218679 91.639920; 	 463 R(3,59) = 3.917839 0.129694 117.366756 121.284594; 	 464 R(26,42) = 5.126758 -0.254383 106.705426 111.832184; 	 465 R(27,42) = 5.013692 -0.066414 135.796477 140.810169; 	 466 R(27,43) = 3.922541 0.040579 56.026763 59.949304; 	 467 R(31,42) = 4.773179 -0.049073 86.931871 91.705050; 	 468 R(36,42) = 5.289417 -0.215249 119.067163 124.356580; 	 469 R(38,42) = 4.228544 -0.108830 108.926322 113.154866; 	 470 R(38,48) = 3.625076 0.487672 45.283805 48.908881; 	 471 R(40,42) = 3.912528 0.142787 93.032857 96.945385; 	 472 R(40,43) = 3.961431 -0.231133 75.232676 79.194108; 	 473 R(43,51) = 4.402298 -0.008954 137.557753 141.960051; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007FB33148410F for__signal_handl Unknown Unknown; libpthread-2.31.s 00007FB3362A83C0 Unknown Unknown Unknown; libc-2.31.so 00007FB3360E718B gsignal Unknown Unknown; libc-2.31.so 00007FB3360C6859 abort Unknown Unknown; core.cpython-37m- 00007FB3339FF4C7 Unknown Unknown Unknown; core.cpython-37m- 00007FB332555F1D Unknown Unknown Unknown; core.cpython-37m- 00007FB33256F3B1 Unknown Unknown Unknown; core.cpython-37m- 00007FB3320330E6 Unknown Unknown Unknown; python3.7 000055D780EDE114 _PyMethodDef_RawF Unknown Unknown; python3.7 000055D780EDE231 _PyCFunction_Fast Unknown Unknown; python3.7 000055D780F42A5D _PyEval_EvalFrame Unknown Unknown; python3.7 000055D780E976F9 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055D780EDD917 _PyFunction_FastC Unknown Unknown; python3.7 000055D780F3F0A6 _PyEval_EvalFrame Unknown Unknown; python3.7 000055D780E976F9 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055D780E985F4 PyEval_EvalCodeEx Unknown Unknown",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1921:48087,error,error,48087,https://psicode.org,https://github.com/psi4/psi4/issues/1921,1,['error'],['error']
Availability,"=1, kws=0x28d54e8, kwcount=0, defs=0x0, defcount=0, kwdefs=0x0, closure=0x0) at Python/ceval.c:3433; #29 0x00007ffff514b004 in fast_function (nk=<optimized out>, na=1, n=<optimized out>, pp_stack=0x7fffffffe160, func=<optimized out>) at Python/ceval.c:4161; #30 call_function (oparg=<optimized out>, pp_stack=0x7fffffffe160) at Python/ceval.c:4084; #31 PyEval_EvalFrameEx (f=f@entry=0x28d5360, throwflag=throwflag@entry=0) at Python/ceval.c:2679; #32 0x00007ffff514d265 in PyEval_EvalCodeEx (_co=_co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0, ; args=args@entry=0x0, argcount=argcount@entry=0, kws=kws@entry=0x0, kwcount=kwcount@entry=0, defs=defs@entry=0x0, defcount=defcount@entry=0, ; kwdefs=kwdefs@entry=0x0, closure=closure@entry=0x0) at Python/ceval.c:3433; #33 0x00007ffff514d33b in PyEval_EvalCode (co=co@entry=0x7ffff7f22150, globals=globals@entry=0x7ffff7ed07a0, locals=locals@entry=0x7ffff7ed07a0); at Python/ceval.c:771; #34 0x00007ffff51669e4 in run_mod (mod=<optimized out>, filename=filename@entry=0x7ffff51bde72 ""<string>"", globals=globals@entry=0x7ffff7ed07a0, ; locals=locals@entry=0x7ffff7ed07a0, flags=flags@entry=0x0, arena=arena@entry=0x28ca640) at Python/pythonrun.c:1981; #35 0x00007ffff5168335 in PyRun_StringFlags (str=<optimized out>, start=257, globals=0x7ffff7ed07a0, locals=0x7ffff7ed07a0, flags=0x0); at Python/pythonrun.c:1914; #36 0x00007ffff66a3f45 in boost::python::exec(boost::python::str, boost::python::api::object, boost::python::api::object) (); from /usr/lib/libboost_python3.so.1.54.0; #37 0x00000000006fcad7 in psi::Python::run (this=<optimized out>, input=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/python.cc:1446; #38 0x000000000069a8ae in main (argc=2, argv=<optimized out>) at /home/james/projects/psi4/src/bin/psi4/psi4.cc:111; ```. Any suggestions on what I could do to track this down further? I looked in ccenergy/pair_energies.cc and there was nothing immediately obvious. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12:7409,down,down,7409,https://psicode.org,https://github.com/psi4/psi4/issues/12,1,['down'],['down']
Availability,"==========; _____________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py ______________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py:7: in <module>; from qcengine.testing import using_mp2d; E ImportError: cannot import name 'using_mp2d' from 'qcengine.testing' (/root/miniconda3/envs/psi4/lib//python3.7/site-packages/qcengine/testing.py); ______________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py _______________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py:7: in <module>; from qcengine.testing import using_mp2d; E ImportError: cannot import name 'using_mp2d' from 'qcengine.testing' (/root/miniconda3/envs/psi4/lib//python3.7/site-packages/qcengine/testing.py); _________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py _________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py:10: in <module>; from qcengine.testing import is_program_new_enough, using_dftd3, using_dftd3_321, using_psi4, using_qcdb, using_mp2d; E ImportError: cannot import name 'using_dftd3' from 'qcengine.testing' (/root/miniconda3/envs/psi4/lib//python3.7/site-packages/qcengine/testing.py); ```. Transfer to a lower verion qcengine 0.12.0, all would be OK.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1782:1488,ERROR,ERROR,1488,https://psicode.org,https://github.com/psi4/psi4/issues/1782,1,['ERROR'],['ERROR']
Availability,"=========================. DF-MP2.5; Program Written by Ugur Bozkaya; Latest Revision September 9, 2017. ==============================================================================; ==============================================================================; ==============================================================================. MO spaces... FC OCC VIR FV; ----------------------; 15 60 1305 0. Number of basis functions in the DF-CC basis: 2970. Available memory : 810623.17 MB; Memory requirement for 3-index ints : 40445.15 MB; Memory requirement for DF-CC int trans: 24244.87 MB; Memory requirement for CC contractions: 56027.91 MB; Total memory requirement for DF+CC int: 96473.07 MB; Memory requirement for Wabef term : 75373.62 MB. Traceback (most recent call last):; File ""/home/416653/PSI4/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/home/416653/PSI4/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/416653/PSI4/lib/psi4/driver/procrouting/proc.py"", line 456, in select_mp2p5; return func(name, **kwargs); File ""/home/416653/PSI4/lib/psi4/driver/procrouting/proc.py"", line 1607, in run_dfocc; dfocc_wfn = core.dfocc(ref_wfn). MemoryError: std::bad_array_new_length. Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""FREEZE_CORE"", ""true""); core.set_global_option(""SCF_TYPE"", ""df""); core.set_global_option(""MP_TYPE"", ""df""); core.set_global_option(""BASIS"", ""aug-cc-pvtz""); core.set_global_option(""DF_BASIS_MP2"", ""cc-pVQZ-RI""); --> energy('mp2.5'). Psi4 stopped on: Thursday, 02 May 2019 01:23PM; Psi4 wall time for execution: 0:18:04.56; ```. Looks like the error is somewhere around [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dfocc/manager.cc#L2546). The `std::bad_array_new_length` is usually (but not always) thrown for negative lengths. @bozkaya any ideas?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1679:5147,error,error,5147,https://psicode.org,https://github.com/psi4/psi4/issues/1679,1,['error'],['error']
Availability,"@bozkaya While running geometry optimizations on a test set of molecules, the MP2.5 and MP3 codes both crash specifically for 2 electron systems without any clear error messages. Input and output files for H2 and Helium geometry optimizations using MP2.5 or MP3 method, respectively.; [h2_input.txt](https://github.com/psi4/psi4/files/1635881/h2_input.txt); [h2_output.txt](https://github.com/psi4/psi4/files/1635895/h2_output.txt); [he_input.txt](https://github.com/psi4/psi4/files/1635897/he_input.txt); [he_output.txt](https://github.com/psi4/psi4/files/1635899/he_output.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/893:163,error,error,163,https://psicode.org,https://github.com/psi4/psi4/issues/893,1,['error'],['error']
Availability,"@bwb314 : Your recent update (a5facd8) to libpsio/filemanager.cc causes a build error with icpc 15.3:. ```; /home/crawdad/src/psi4/src/lib/libpsio/filemanager.cc(82): error: more than one instance of overloaded function ""std::to_string"" matches the argument list:; function ""std::to_string(long long)""; function ""std::to_string(unsigned long long)""; function ""std::to_string(long double)""; argument types are: (int); std::string filenum = std::to_string(fileno);; ```. std::to_string is C++11 and **should** accept an `(int)` argument, so I'm wondering if this is an inconsistent implementation in the Intel 15+ compiler.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/220:80,error,error,80,https://psicode.org,https://github.com/psi4/psi4/issues/220,2,['error'],['error']
Availability,"@loriab asked me for 1.1 showstoppers. Here's one: the formatted checkpoint files don't work. . With the input; ```; molecule {; symmetry c1; H 0.0 0.0 0.0; H 0.0 1.0 0.0; H 0.0 0.0 1000.0; H 0.0 1.0 1000.0; }. set basis 6-31G; scf_e, scf_wfn = energy('s_x', return_wfn=True). fchk(scf_wfn, ""scf.fchk""); ```; I get a formatted checkpoint file, which I load to IQmol or Avogardo. The result is: I see no nuclei!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/708:65,checkpoint,checkpoint,65,https://psicode.org,https://github.com/psi4/psi4/issues/708,2,['checkpoint'],['checkpoint']
Availability,"A [long-requested feature](http://forum.psicode.org/t/scf-level-shift/938): implement level shifts in Psi4. This is an even simpler to implement than [GDM](#2214). What is needed is to edit the `form_C()` functions in RHF, UHF, and ROHF by replacing e.g.; ```; diagonalize_F(F_, C_, epsilon_);; ```; with the diagonalization of an effective Fock matrix `Feff = F + shift S*Cvirt*Cvirt.T*S` where `shift` is the level shift (should be `0.5` by default), when the DIIS error is larger than the set threshold. This would also make the SCF solver smarter, see #888.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2216:467,error,error,467,https://psicode.org,https://github.com/psi4/psi4/issues/2216,1,['error'],['error']
Availability,"A [recent PR](https://github.com/psi4/psi4/pull/2780#event-7959038316) changed `detci` so that it crashes when the user specified more roots than the basis set allows. @susilehtola proposed that instead, `detci` take as many roots as possible. What do we want to do?. I'll quote Lori's analysis of our options. > 1. Focus on segfault -> error msg first, as Jonathon has done and as eomcc should do. no contracts violated. compute time wasted.; > ; > 2. Reset nroots as needed. Change read_options descriptions to ""max roots sought; may be adjusted downwards for small basis sets"". nroots contract violated. could be troublesome for machine returned results since roots array length != nroots requested. good for throughput calcs & no compute time wasted. (resetting nroots may not be so easy if arrays are allocated based on option.); > ; > 3. Same as (2) but py-side it detects nroots change and throws a specialized error (like we do for convergence) with full output and completed wfn attached, so no compute or results lost. no contracts violated. automated runs can recover.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2825:337,error,error,337,https://psicode.org,https://github.com/psi4/psi4/issues/2825,4,"['down', 'error', 'recover']","['downwards', 'error', 'recover']"
Availability,"A few suggestions for the documentation based on a recent interaction of a new user with Psi4 that I could observe:. - The Psi4 manual is kinda ""hard to find"". The user searched for ""manual"" on psicode.org, and despite the ""Docs"" link in the top bar, was puzzled when no hits were found. Maybe just a brighter colour for the tabs on top.; - Unknown keywords (using Psithon) should print a warning. Not sure this is easy to do or whether we even want it, as it might mess with python functionality...; - The PCMsolver docs page should show available solvents somewhere - currently one has to go to PCMsolver's github, then docs, then manual, which is kinda tedious. A direct link in Psi4's PCMsolver page to the solvent table in PCMsolvers own docs would do the job, IMO.; - Search on the docs page is quite tough to deal with. Is it possible to sort the results to list hand-written pages before autogenerated ones?. Obligatory ping to #2109",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2138:539,avail,available,539,https://psicode.org,https://github.com/psi4/psi4/issues/2138,2,"['avail', 'ping']","['available', 'ping']"
Availability,"A fresh compile of psi4 1.9.1 on Fedora (yay, finally updating from 1.3.2!) fails to run; all the tests fail with the error; ```; /usr/include/c++/14/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = double; _Alloc = std::allocator<double>; reference = double&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; Exit Status: overall (1); ```; which suggests that there is critical path code that is accessing a `std::vector` out-of-bounds. All Fedora packages are compiled with the following default optimization flags; ```; -O2 -flto=auto -ffat-lto-objects -fexceptions -g -grecord-gcc-switches -pipe -Wall -Wno-complain-wrong-lang -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -fstack-protector-strong -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -march=x86-64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3214:118,error,error,118,https://psicode.org,https://github.com/psi4/psi4/issues/3214,1,['error'],['error']
Availability,"A place to stash ""next-release"" items that come up that don't fit elsewhere. Who knows what the next release will be called — ""1.3"" shall be used as placeholder. This is for opinions as well as consensus, so don't read this and consider anything BDFL-PEP-Approved. Similarly, if you're posting for more than yourself, try to convey a notion of the breadth of agreement. Also, separate issues by post so up/downvotes have a chance to mean something.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/972:406,down,downvotes,406,https://psicode.org,https://github.com/psi4/psi4/issues/972,1,['down'],['downvotes']
Availability,"A recent [forum issue](http://forum.psicode.org/t/error-in-running-on-centos-undefinted-name-true/1727/2) traced back to a user writing `return_wfn=true` rather than `return_wfn=True`. Can we teach the parser to automatically correct this, or at least print a better error message?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1859:50,error,error-in-running-on-centos-undefinted-name-true,50,https://psicode.org,https://github.com/psi4/psi4/issues/1859,2,['error'],"['error', 'error-in-running-on-centos-undefinted-name-true']"
Availability,"A recent [forum issue](http://forum.psicode.org/t/fatal-error-wavefunction-unable-to-obtain-mo-coefficients/2204/14) about obtaining dipoles has been complicated by the question of what the name of the variable to call them is. For example:. ```; wfn = psi4.properties(""scf"", properties=['dipole'], return_wfn=True)[1]; prop_dipole = wfn.variable(""SCF DIPOLE""). wfn = energy(""scf"", return_wfn=True)[1]; psi4.oeprop(wfn, ""DIPOLE""); oeprop_dipole = wfn.variable(""DIPOLE""); ```. These two methods of obtaining the dipole save it to the wavefunction under different names. Is there some way to make this more standardized?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2203:56,error,error-wavefunction-unable-to-obtain-mo-coefficients,56,https://psicode.org,https://github.com/psi4/psi4/issues/2203,1,['error'],['error-wavefunction-unable-to-obtain-mo-coefficients']
Availability,"A recent [forum report](http://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206) has a user encountering the error message ""PSIOManager cannot get a mirror file handle"". Liberal use of `psi.core.clean` isn't fixing anything, and Holger and I can't figure out what the error message means. We need to figure out what the message means, how the user should respond, and put that into the error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2224:138,error,error,138,https://psicode.org,https://github.com/psi4/psi4/issues/2224,3,['error'],['error']
Availability,"A simple input fails to run:; ```; # Any line starting with the # character is a comment line; #! Sample HF/cc-pVDZ H2O computation. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; energy('scf'); ```; a; And here is the error message:. ```; [henrique@localhost ~] $ psi4 teste.dat ; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 7, in <module>. File ""/usr/share/psi4/python/driver.py"", line 45, in <module>; import driver_util. File ""/usr/share/psi4/python/driver_util.py"", line 30, in <module>; from procedures import *. File ""/usr/share/psi4/python/procedures/__init__.py"", line 1, in <module>; from proc_table import procedures, hooks, energy_only_methods. File ""/usr/share/psi4/python/procedures/proc_table.py"", line 198, in <module>; for ssuper in proc.superfunctional_list():. File ""/usr/share/psi4/python/procedures/functional.py"", line 3605, in superfunctional_list; sup = superfunctionals[key](key, 1, 1). File ""/usr/share/psi4/python/procedures/functional.py"", line 1953, in build_b3lypd1_superfunctional; sup = build_b3lyp_superfunctional(name, npoints, deriv). File ""/usr/share/psi4/python/procedures/functional.py"", line 1224, in build_b3lyp_superfunctional; sup = psi4.SuperFunctional.blank(). TypeError: No to_python (by-value) converter found for C++ type: boost::shared_ptr<psi::SuperFunctional>. ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/531:257,error,error,257,https://psicode.org,https://github.com/psi4/psi4/issues/531,2,['error'],['error']
Availability,"A user on the forums [reported](http://forum.psicode.org/t/psio-error-during-adc-2/1338) a PSIO error when using ADC(2). The input file is; ```; #! ADC/def-2SVP on BODIPY-Phe . molecule bodphe {; 0 1 ; N 0.07895 0.63049 2.21156; N 0.40701 -1.77253 2.18386; C 0.85975 -1.61894 0.87368; C 1.93462 -2.51476 0.66009; C 0.25153 -0.54266 0.07529; C 0.60747 0.60802 0.92030; C 1.47746 1.72071 0.77028; C 1.38234 2.45311 1.95195; C 2.07438 -3.24863 1.84094; C 0.53652 1.71840 2.84134; C 1.13424 -2.73093 2.77791; H 2.76916 -4.06657 2.02914; H 0.98002 -2.99119 3.82431; H 2.46553 -2.64393 -0.28198; H -0.76107 1.52726 -1.36025; C -0.87740 0.55157 -1.84231; C -0.42668 -0.61486 -1.17553; C -0.59367 -1.86931 -1.81442; H -0.24902 -2.77578 -1.30769; C -1.18278 -1.94632 -3.07591; H -1.30041 -2.92327 -3.55316; C -1.60723 -0.78659 -3.74115; H -2.04665 -0.85123 -4.73942; C -1.45720 0.45654 -3.10859; H -1.78685 1.36634 -3.61791; B -0.55985 -0.69534 2.82439; F -0.40573 -0.68314 4.19154; H 0.27433 1.92595 3.87885; H 1.84952 3.41187 2.17639; H 2.03049 1.96835 -0.13399; F -1.84936 -0.86321 2.39539; symmetry c1 ; }. set {; reference rhf; basis def2-svp; freeze_core true; guess auto ; roots_per_irrep [2] ; }. ref_energy = -906.2735763050857258 ; adc_energy = energy('adc'); ```. The (OV|VV) integral transformation completes, and then `file4_mat_irrep_rd_block` raises the following error:; ```; PSIO_ERROR: Can't find TOC Entry MO Ints V1243); PSIO_ERROR: unit = 61, errval = 13; PSIO_ERROR: 13 (no such TOC entry); ```. This may be a large system, but user's tests indicate scratch usage is at 10% at the time of the crash, and this error message isn't what PSIO normally displays during a memory problem.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1596:64,error,error-during-adc-,64,https://psicode.org,https://github.com/psi4/psi4/issues/1596,4,['error'],"['error', 'error-during-adc-']"
Availability,"A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the end; * https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L25 for libint2 build constraints for Psi4. Steps toward Psi4 using a upstream Libint2 release in common with other open-source QC programs:; * step 2 — 20 Nov 2020 — #1721; * step 3 — 11 Mar 2022 — #2388; * post 3 — 16 Mar 2022 — #2474, #2482, #2484; * step C —",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5685,down,download,5685,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"About time to start patch notes again. As always please modify or comment as permissions allow. Please understand that these notes are not complete.; ## . The Psi4 1.1 update contains large changes to the internal infrastructure. The primary result of the internal changes is that Psi4 is now a normal Python module instead of a executable that calls Python. While these changes are substantial it should be stressed that the current Psi4 input including calling the executable `/bin/psi4` should behave in an identical way to the Psi4 1.0 release. A discussion and overview of the current changes can be found [here](https://github.com/psi4/psi4/issues/468). Points of interest:; - Psi4 is now a Python module (e.g. `python -c ""import psi4""`). [details](https://github.com/psi4/psi4/pull/481); - The build system has been rewritten to allow for more flexibility for external projects in the future. [details](https://github.com/psi4/psi4/pull/442). # New Features; - High-spin open-shell SAPT0 computations are now available.; - MCSCF now has Augmented Hessian as an additional convergence option.; - If Psi4 fails, users are now suggested to purchase developers coffee instead of beer. # Developer notes; - Psi4 now requires C++ 11 to compile (GCC 4.9+, clang 3.3+, Apple clang 6.1+, ICC 2016+). Note that ICC requires GCC and therefore GCC 4.9+.; - The fundamental restructuring of Psi4 is complete. There are no large changes currently being considered. ; - Boost has been completely removed from Psi4 in favor of using C++ 11.; - Boost::python has been replaced with PyBind11. Note that PyBind11 adheres more to C-style than Python-style when it comes to references and pointer counting. As such, several functions required deep changes as internal references from C-side are no longer manipulatable Python-side.; - Python functions are no longer called from C++, several functions have had to be reworked.; - BasisSets are now exclusively built in Python and passed into C side by the `Wavefunct",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/485:1016,avail,available,1016,https://psicode.org,https://github.com/psi4/psi4/issues/485,1,['avail'],['available']
Availability,"According to the docs (https://psicode.org/psi4manual/master/autodir_options_c/module__ccenergy.html#cachelevel), the maximum value of cachelevel is 6. This is wrong, trying to use a cachelevel of 6 or 5 results in an invalid cachelevel error message. The largest cachelevel that appears to work is 4.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2701:237,error,error,237,https://psicode.org,https://github.com/psi4/psi4/issues/2701,1,['error'],['error']
Availability,Added virtual functions to UKS and RKS to override the soscf_update of UHF and RKS. The result is that calling soscf_update on these functions will now fail with an error message instead of a set fault. Also cleaned up the SOSCF logic a bit. This PR is ready to be merged if everything passes. Fixes #256.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/258:165,error,error,165,https://psicode.org,https://github.com/psi4/psi4/pull/258,2,"['error', 'fault']","['error', 'fault']"
Availability,"Adds std::log10, SUPPORT file, tests more addons, -fno-openmp for int……el icpc, final psi4 1.1 citation, fix mints3 as mentioned in psi4/psi4#761. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] updates psi4 citation; - [x] adds `std::log10` as Andy advised; - [x] removed dead code as AJ advised; - [x] adds SUPPORT file as [github advised](https://github.com/blog/2400-support-file-support); - [x] revises Travis to test all add-ons (except CheMPS2) and from proper channels and to count the travis downloads; - [x] with MKL, gcc on Mac _must_ have iomp5, gcc on Linux can have either iomp5 or gomp, icpc must have iomp5 but moreover, we want to allow gcc plugins built from icpc psi4 to handle omp consistently, so adding `-fno-openmp` to catch downstream gcc plugins; - [x] the thing Adam mentioned in psi4/psi4#761 about create_matrix was making mints3 fail, so ameliorated (didn't totally fix) that; * **User-Facing for Release Notes**. ## Status; - [x] Ready to go (if passing, RTG. squash, I think)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/770:568,down,downloads,568,https://psicode.org,https://github.com/psi4/psi4/pull/770,2,['down'],"['downloads', 'downstream']"
Availability,Adjust printout for PSIO errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3139:25,error,errors,25,https://psicode.org,https://github.com/psi4/psi4/pull/3139,1,['error'],['errors']
Availability,"After #1233 removed memory padding, test case opt13 started failing b/c it was borderline in-core/disk and chose ... poorly. See details https://github.com/psi4/psi4/pull/1233#issuecomment-428754862. First stage question is: Are we willing to have more jobs pass through the in-core/disk choice stage with a false negative and instead hit the error further on? I'm thinking that's not good. This particular case is readily fixed by upping the memory user-side or (as @dgasmith suggests) adding in another buffer `required += naux_ * naux_;` [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/lib3index/dfhelper.cc#L228-L232). But there's a lot of estimates, and it'd be good to centralize memory apportionment.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1283:343,error,error,343,https://psicode.org,https://github.com/psi4/psi4/issues/1283,1,['error'],['error']
Availability,"After a recent [forum report](http://forum.psicode.org/t/sapt0-d3mbj-error-writing-to-file/2474/6), @zachglick had the excellent suggestion of having _some_ way to warn the user when the user doesn't set the scratch space. What exactly this should look like is unclear. Suggestions that have been raised:. * Auto-exit if scratch hasn't been set and memory demand is large; * Print warning to output file when scratch hasn't been set and memory demand is large; * Edit the PSIO errors for read/write when scratch hasn't been set",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2573:69,error,error-writing-to-file,69,https://psicode.org,https://github.com/psi4/psi4/issues/2573,2,['error'],"['error-writing-to-file', 'errors']"
Availability,"After a recent git pull, psi4 failed to compile. It seems that the error was likely introduced in commit 0d0d1f9 ""Reworked exception printing in Psi so all Python Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile. . If it helps, I'm running Ubuntu, with gnu compilers. . Here's the error message: . `/home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed; make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt; Makefile:127: recipe for target 'all' failed; make[3]: *** [all] Interrupt; CMakeFiles/psi4_core.dir/build.make:111: recipe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536:67,error,error,67,https://psicode.org,https://github.com/psi4/psi4/issues/536,4,['error'],['error']
Availability,"After each exit of any run the following crash happens:. ``` bash; Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data =",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/8:113,fault,fault,113,https://psicode.org,https://github.com/psi4/psi4/issues/8,1,['fault'],['fault']
Availability,"After installing the psi4, I ran a simple test. By looking at the output file, I found that the program seemed to stop after reading the contents of the input file, the program did not stop, but it did not continue and did not report an error. Also, there were no errors during the compilation of psi4, and it's not clear to me what went wrong.; ![1678955019941](https://user-images.githubusercontent.com/99332231/225558169-d53d12b0-5c8b-4f6e-86e7-bb18e630ec4e.jpg)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2900:237,error,error,237,https://psicode.org,https://github.com/psi4/psi4/issues/2900,2,['error'],"['error', 'errors']"
Availability,"All the symmetry detection in the Molecule class is through `tol` arguments for individual methods. For the Molecule as a whole, this is controlled by `DEFAULT_SYM_TOL`, which is compiled in. This means one can't just dial down the symmetry tolerance for an entire optimization. For this ticket, make the `tol` parameter not a preprocessor option but a bit of member data. Make a set function for this. Export it to python.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/232:223,down,down,223,https://psicode.org,https://github.com/psi4/psi4/issues/232,2,"['down', 'toler']","['down', 'tolerance']"
Availability,"All was well on psi4/psi4 circa 7913b38 early morning 15 Nov, but after pub/priv sync, by early morning 16 Nov, fresh recursive clones (`git clone --recursive https://github.com/psi4/psi4.git`) are giving errors; like below. @robertodr, could you check that the current submodule reference is what it ought it be? Thanks. ```; Cloning into 'psi4'...; ...; Resolving deltas: 100% (80379/80379), done.; Submodule 'interfaces/pcmsolver' (https://github.com/PCMSolver/pcmsolver.git) registered for path 'interfaces/pcmsolver'; Cloning into 'interfaces/pcmsolver'...; ...; Resolving deltas: 100% (13625/13625), done.; fatal: reference is not a tree: 9bc8e049f14260a4c1b4b2bda898a16850907b1c; Unable to checkout '9bc8e049f14260a4c1b4b2bda898a16850907b1c' in submodule path 'interfaces/pcmsolver'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/189:205,error,errors,205,https://psicode.org,https://github.com/psi4/psi4/issues/189,1,['error'],['errors']
Availability,"An error which is very high on my to-fix list, but where the fix is very involved. DF-DCT properties as present are not correct. I've tested against my own Python code and the Psi code and found disagreements in the fifth and sixth decimal place between finite difference and analytic properties. I've spoken with the code authors, and we are aware of two sources of disagreement.; 1. For gradients, the RDMs are contracted against the conventional derivative integrals, not the density fitted derivative integrals.; 2. Due to a subtle point in the derivation, the DF-DCT cumulant stationarity conditions are not variational minimization of the energy, as they are in conventional DCT. Accordingly, you're missing a cumulant response term for gradients and other properties. The fix for point 1 will hopefully just be marking the wavefunction as density fitted and leave the contractions to the `Deriv` object. However, DCT at present interferes with RDM processing in `libtrans`, so the fix will be likely be more involved. The fix for point 2 is not clear. I'm aware of three options:; * Change the DF-DCFT stationarity conditions to be variational minimization of the energy; * Change which terms are to be contracted against JKFIT integrals and which against RIFIT integrals, so the stationarity conditions are ""fixed"" automatically; * Add a cumulant response term. (Please don't make me do this.). I favor option B, but it'll take time to see what B does to energies.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1579:3,error,error,3,https://psicode.org,https://github.com/psi4/psi4/issues/1579,1,['error'],['error']
Availability,"An implementation for #1375 PsiPEP 002. ## Todos; - [x] Standardizes function names surrounding scalar and array variables in globals & Wfn. Fills in missing methods.; - [x] C-side deprecates old names for Wfn variable access (compile-time for C-API downstream); - [x] Py-side deprecates old names for global and Wfn variable access (run-time for Py-API downstream, incl. Psithon inputs); - [x] New set of functions (reuse of many of the old fn names) for uniform access; - [x] Wfn variable access now case insensitive and storage always uppercase (as globals always has); - [x] array variable getters/setters now return _copies_ of the arrays; - [x] globals now throws instead of autovivifying to 0 when getter called for non-existant key (as Wfn always has); - [x] Py-side (and hence all globals access) resists giving the same key to a scalar and an array variable. This check is not in place for C-side Wfn, but shouldn't be a problem given our habit of labeling with E/G/H, etc.; - **ALERT** this generates oodles of `FutureWarning`s b/c to keep this PR focussed on the substantive changes, I haven't updated the fn names w/i the codebase. That will be a separate PR hard after this gains approval, and should probably be merged in sequence, lest users go batty. I've worked on other topics beyond this one, and I'm confident the deprecation warnings are allowing the unhindered use of old syntax.; - [x] Deprecation Warnings look like the below in PsiAPI and PSIthon modes, respectively. For the latter, I had to suppress printing of offending line b/c it was very wrong (usually part of the LGPL license).; ```; psiapi.py:8: FutureWarning: Using `psi4.core.get_variable` instead of `psi4.core.variable` (or ; `psi4.core.scalar_variable` for scalar variables only) is deprecated, and in 1.4 it will stop working. print(psi4.get_variable('current energy')); ```; ```; Using `psi4.core.get_variable` instead of `psi4.core.variable` (or `psi4.core.scalar_variable` for scalar variables only) is dep",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1393:250,down,downstream,250,https://psicode.org,https://github.com/psi4/psi4/pull/1393,2,['down'],['downstream']
Availability,An running error in fsapt.py,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2281:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/2281,1,['error'],['error']
Availability,"Any computation that attempts to compute frequencies of a density fitted method will crash unless the symmetry is explicitly set to c1. Gradients do not have this problem. The below input file demonstrates the problem and has been taken from the test cases. The only modifications are changing gradients to frequencies and CCSD(T) to MP2. The bug is there with both methods, and also CCSD. I haven't checked other DF methods. ```; #! DF-MP2 cc-pVDZ energy for the H2O molecule. molecule h2o {; 0 1; o; h 1 0.958; h 1 0.958 2 104.4776 ; }. set {; basis cc-pvdz; df_basis_scf cc-pvdz-jkfit; df_basis_cc cc-pvdz-ri; scf_type df; guess sad ; freeze_core true; cc_type df; qc_module occ ; }. frequencies('mp2', dertype=0); ```; The crash gives the following error message:; ```; Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 36, in <module>; File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 1774, in frequency; H, wfn = hessian(lowername, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 1595, in hessian; E, wfn = energy(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1608, in run_dfocc; ""RIFIT"", core.get_global_option(""BASIS"")); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/p4util/python_helpers.py"", line 99, in pybui",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1093:753,error,error,753,https://psicode.org,https://github.com/psi4/psi4/issues/1093,1,['error'],['error']
Availability,"As @PeterKraus points out we have the following missing tests:. ```; missing = ['B1WC', 'B2GPPLYP', 'B2PLYP', 'B3LYPs', 'B86B95', 'B86BPBE', ; 'B96B95', 'B97-1p', 'B97-GGA1', 'BHandH', 'BHandHLYP', 'CAMY-B3LYP', ; 'CAMY-BLYP', 'CAP0', 'CORE-DSD-BLYP', 'DSD-BLYP', 'DSD-PBEB95', 'DSD-PBEP86', ; 'DSD-PBEPBE', 'HCTH407P', 'HCTHP14', 'HF', 'HJS-B97X', 'HJS-PBE', 'HJS-PBE-SOL',; 'HPBEINT', 'HSE03', 'HSE06', 'KSDT', 'KT2', 'LCY-BLYP', 'LCY-PBE', 'LRC-WPBE', ; 'MB3LYP-RC04', 'MN15', 'MOHLYP', 'MOHLYP2', 'OP-PBE', 'PBE0-13', 'PBE0-2', ; 'PBE0-DH', 'PBE1W', 'PBELYP1W', 'PTPSS', 'PW86B95', 'PW86PBE', 'PWPB95', ; 'RPBE', 'SB98-1a', 'SB98-1b', 'SB98-1c', 'SB98-2a', 'SB98-2b', 'SB98-2c', 'SVWN', ; 'TETER93', 'TH-FC', 'TH-FCFO', 'TH-FCO', 'TH-FL', 'TH1', 'TH2', 'TH3', 'TH4', ; 'TPSSLYP1W', 'TUNED-CAM-B3LYP', 'XLYP', 'ZLP', ; 'mPW1PW', 'mPW3LYP', 'mPW3PW', 'mPWLYP1', 'mPWLYP1M', ; 'mPWLYP1W', 'mPWPW', 'revB3LYP', 'wPBE', 'wPBE0', ""X1B95"", ""XB1K""]. skip = [""HCTHP76"", # scf fail; ""HJS-B88"", # C_DSYEV failed; ""FT97"", # C_DSYEV failed; ]; ```. Several functionals like B2PLYP are tested outside `dft-bench-*` tests and are covered. In general, we have good coverage of the different runs of functionals at this point and we should rely somewhat that LibXC tests individual functionals well. So functionals purely defined by LibXC should be fine in general. The primary concerning points above are the `*wPBE*` series and `SVWN` are not well tested and are curated by us. This issue will be closed by hunting down references and adding tests for the above. FT97 and co have historically been problematic for us. I would be curious if this is due to instabilities in FT97 or something on our end.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1266:1504,down,down,1504,https://psicode.org,https://github.com/psi4/psi4/issues/1266,1,['down'],['down']
Availability,"As discussed in #2204, Psi's current second-order SCF technology is the straightforward Newton-Raphson approach. This is prone to fail in cases where the MO hessian has a small, negative eigenvalue near the minimum, and it would be good if we had a modified second-order method that could handle this. As a test case, this eigenstructure problem causes the convergence failure of. ```; molecule {; 0 2; Mg; F 1 3.0; }. set reference uhf ; set soscf true ; set soscf_print true ; set soscf_max_iter 10; set stability_analysis follow. energy('hf/cc-pvdz'); ```. as confirmed by running the system with the Psi4Numpy SOSCF code. @susilehtola suggested a level shift as a possible fix, but I'm open to alternatives.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2212:369,failure,failure,369,https://psicode.org,https://github.com/psi4/psi4/issues/2212,1,['failure'],['failure']
Availability,"As noted by @loriab, the UHF FCIDUMP files seem erratic when it comes to the number of nonzero two-electron integrals printed out. I am tracking down the problem.; The current FCIDUMP functionality is a rewrite of the plugin @jsspencer wrote for Psi4 1.1 [available here](https://github.com/hande-qmc/fcidump) I have a reference UHF/cc-pVDZ output file and integral dump for Ne and I notice that the current incarnation of the functionality prints 300 MO TEIs _less_ than the original plugin. Looking at the output files I see the following output from `MintsHelper`:; - **Reference**; ```; Computing two-electron integrals...done; Computed 861 non-zero two-electron integrals.; Stored in file 33.; ```; [ne.in.log](https://github.com/psi4/psi4/files/1947119/ne.in.log); [NE.CC-PVDZ.UHF.PLUGINDUMP.ref.log](https://github.com/psi4/psi4/files/1947108/NE.CC-PVDZ.UHF.PLUGINDUMP.ref.log); [ne.ref.log](https://github.com/psi4/psi4/files/1948145/ne.ref.log); - **Current implementation**; ```; Computing two-electron integrals...done; Computed 794 non-zero two-electron integrals.; Stored in file 33.; ``` ; [input.py.log](https://github.com/psi4/psi4/files/1947121/input.py.log); [Ne.cc-pVDZ.UHF.INTDUMP.log](https://github.com/psi4/psi4/files/1947113/Ne.cc-pVDZ.UHF.INTDUMP.log); [Ne.cc-pVDZ.UHF.dat.log](https://github.com/psi4/psi4/files/1947114/Ne.cc-pVDZ.UHF.dat.log). I cannot see how the two calculations differ. Does anybody have a clue @jturney @dgasmith?. **EDIT** I've cut the reference output to only include the problematic calculation: Ne, cc-pVDZ, UHF reference, with symmetry.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/980:145,down,down,145,https://psicode.org,https://github.com/psi4/psi4/issues/980,2,"['avail', 'down']","['available', 'down']"
Availability,"As the title stated, I want to perform fsapt calculation on a system that contains iodine atoms. At the begining I used the aug-cc-tzvp but it didn't contain the parameter for iodine.So I use the basis set def2-tzvp which contains the parameter for iodine. But when I run the calculation, it sent out such error message:; ```; Traceback (most recent call last):; File ""/pubhome/zchen02/miniconda3/envs/psi4/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 141, in <module>; File ""/pubhome/zchen02/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/pubhome/zchen02/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/procrouting/proc.py"", line 3631, in run_fisapt; core.get_global_option(""MINAO_BASIS"")); File ""/pubhome/zchen02/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/p4util/python_helpers.py"", line 80, in _pybuild_basis; mol.to_dict(), key, resolved_target, fitrole, other, return_dict=True, return_atomlist=return_atomlist); File ""/pubhome/zchen02/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/qcdb/libmintsbasisset.py"", line 679, in pyconstruct; verbose=verbose); File ""/pubhome/zchen02/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/qcdb/libmintsbasisset.py"", line 897, in construct; (at + 1, key, text2)). psi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 106 for key BASIS among:; Shell Entries: ['I']; Basis Sets: [('CC-PVTZ-MINAO', 'CC-PVTZ-MINAO', None)]; ```; Is there any method to solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2291:306,error,error,306,https://psicode.org,https://github.com/psi4/psi4/issues/2291,1,['error'],['error']
Availability,Assertion error when using SAPT0-D3 and SAPT0-D3mbj,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2914:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/issues/2914,1,['error'],['error']
Availability,"At long last, some gradient refactoring. Supersedes [my previous attempt](https://github.com/psi4/psi4/pull/1745). Only the OPDM and Lagrangian are a 1.7 target. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Orbital-optimized `occ` densities now available on the wavefunction; - [x] DC-06 densities now symmetrized. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Conventional gradients now check whether the density and Lagrangian are set on the wavefunction. If so, it uses those rather than reading MO-basis quantities from disk. `dct` and `occ` use this new system. `cc` will use it in the next PR. The old system will be removed for 1.8. Old system vs new system is toggled by the `reset_oneel` flag. ## Questions; - [x] How to create a warning that plugin developers should use new-style gradients?. ## Checklist; - [x] All `dct`, `omp`, `mp`, `olccd`, lccd`, `cepa`, and `cc` tests pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2788:373,avail,available,373,https://psicode.org,https://github.com/psi4/psi4/pull/2788,1,['avail'],['available']
Availability,"At this stage, I have a reminder to look into this, rather than a full report. We had a user on the forum [report](http://forum.psicode.org/t/question-on-oscillator-strength-calculation-using-python-api/1036/2) getting the error message that ""Must provide roots_per_irrep vector in input."" during a EOM computation via PythonAPI. The user did provide `roots_per_irrep` in `set_options`... Just as a string rather than a list. A smarter API would have either tried to coerce the string to the actual type, a list, or have raised an error that a string wasn't valid for that argument. If Psi is already supposed to do this, why didn't it? If Psi isn't already supposed to do this, which one do we want to take?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1137:223,error,error,223,https://psicode.org,https://github.com/psi4/psi4/issues/1137,2,['error'],['error']
Availability,"Attempting frequency() for atomic species fails irrespective of charge, multiplicity, and reference type. Typical error message:. > 1 displacements needed.; > 1; > ; > An error has occurred. Traceback:; > <type 'exceptions.IndexError'>: basic_string::replace: File ""<string>"", line 26, in <module>; > ; > File ""/home/drhaney/miniconda/share/psi4/python/driver.py"", line 1840, in frequency; > psi4.thermo(wfn, wfn.frequencies()). Thanks,; -drhaney, -- that's ""D. R."", not Doctor. Typical input file attached (C atom, neutral triplet).; [C.txt](https://github.com/psi4/psi4/files/198782/C.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/332:114,error,error,114,https://psicode.org,https://github.com/psi4/psi4/issues/332,2,['error'],['error']
Availability,"Attempts to use both density fitting and the quadratically convergent algorithm in DCT crash Psi. In particular, the following input file. ```; molecule adduct {; O; H 1 1 ; H 1 1 2 104.5; }. set {; basis sto-3g; reference uhf ; dcft_type df; }. set dcft {; algorithm qc; }. energy('dcft'); ```. raises the following error. ```; Traceback (most recent call last):; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/bin/psi4"", line 272, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/procrouting/proc.py"", line 1489, in run_dcft; dcft_wfn = core.dcft(ref_wfn). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /home/vulcan/vadmin/programs/psi4/psi4/src/psi4/libpsio/error.cc on line: 128 ; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::read(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::IWL::fetch(); ```. Public Enemy No. 2, we meet again... My hunch is that this was never implemented, and an error just needs to be raised until it is implemented. However, it may actually be implemented, but just suffering from a bug. I'll be leaving this error message here until I can figure out which - that will take a while.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1353:317,error,error,317,https://psicode.org,https://github.com/psi4/psi4/issues/1353,7,"['Error', 'error']","['Error', 'error']"
Availability,Bandaid over 1851... Segfault to error message.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1858:33,error,error,33,https://psicode.org,https://github.com/psi4/psi4/pull/1858,1,['error'],['error']
Availability,Based off the forums and a few issues there are a few tests that are not quite robust enough to test the code rather than a operational tweaks.; - `props2` - The new orientation code requires that this be moved to the COM at every step.; - `props3` - Overall convergence needs to be tightened to move flutter in 64-pole below test threshold.; - `scf-cov` - Convergence needs to be tightened in addition to not using a C2v molecule during a orientation check.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/808:79,robust,robust,79,https://psicode.org,https://github.com/psi4/psi4/pull/808,1,['robust'],['robust']
Availability,Better Error Message for Issue #2890,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906:7,Error,Error,7,https://psicode.org,https://github.com/psi4/psi4/pull/2906,1,['Error'],['Error']
Availability,Better visible PSIO errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2030:20,error,errors,20,https://psicode.org,https://github.com/psi4/psi4/pull/2030,1,['error'],['errors']
Availability,"Both PCMSolver (in `pcmsolver.h`) and psi (in `src/lib/libpsipcm/psipcm.cc`) defined a `extern ""C""` function called:. ``` c++; extern ""C"" void host_writer(const char * message, int message_length);; ```. The fails to build of course (icpc 16.0.1):. ```; error: more than one instance of overloaded function ""host_writer"" has ""C"" linkage; ```. Please rename or adjust the function.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/417:254,error,error,254,https://psicode.org,https://github.com/psi4/psi4/issues/417,1,['error'],['error']
Availability,Build error psi4::Options,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:6,error,error,6,https://psicode.org,https://github.com/psi4/psi4/issues/3006,1,['error'],['error']
Availability,Build error with gcc 7.0.1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631:6,error,error,6,https://psicode.org,https://github.com/psi4/psi4/issues/631,1,['error'],['error']
Availability,"Build error(s) with intel 2017 compilers, gcc 5.4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:6,error,error,6,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['error'],['error']
Availability,Build fails on FreeBSD 12.3:; ```; /wrkdirs/usr/ports/science/psi4/work/psi4-0889d6d34/psi4/src/psi4/libpsio/rw.cc:86:33: error: use of undeclared identifier 'errno'; const int saved_errno = errno;; ^; /wrkdirs/usr/ports/science/psi4/work/psi4-0889d6d34/psi4/src/psi4/libpsio/rw.cc:97:33: error: use of undeclared identifier 'errno'; const int saved_errno = errno;; ^; /wrkdirs/usr/ports/science/psi4/work/psi4-0889d6d34/psi4/src/psi4/libpsio/rw.cc:119:37: error: use of undeclared identifier 'errno'; const int saved_errno = errno;; ^; /wrkdirs/usr/ports/science/psi4/work/psi4-0889d6d34/psi4/src/psi4/libpsio/rw.cc:131:37: error: use of undeclared identifier 'errno'; const int saved_errno = errno;; ^; ```. It looks like ```#include <errno.h>``` is missing.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2810:122,error,error,122,https://psicode.org,https://github.com/psi4/psi4/issues/2810,4,['error'],['error']
Availability,"Build failure (current rev. f03a896): undefined reference to `pow', etc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/853:6,failure,failure,6,https://psicode.org,https://github.com/psi4/psi4/issues/853,1,['failure'],['failure']
Availability,Build failure (version 1.1): cannot initialize return object of type ...,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/852:6,failure,failure,6,https://psicode.org,https://github.com/psi4/psi4/issues/852,1,['failure'],['failure']
Availability,"Build the shared library with `make psi4so`, and it builds just fine but then segfaults when you try to set options. @bennybp, Boost/fpic notwithstanding, I know you've got a shared library of psi4 in working order. Could you send me or post the `src/bin/psi4/CMakeLists.txt` and any changes to the `MAKE_PYTHON_MODULE` sections? I didn't see that you had a fork of psi4 with changes. ``` python; Python 2.7.10 |Anaconda 2.1.0 (x86_64)| (default, May 28 2015, 17:04:42) ; [GCC 4.2.1 (Apple Inc. build 5577)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; Anaconda is brought to you by Continuum Analytics.; Please check out: http://continuum.io/thanks and https://binstar.org; >>> import sys; >>> sys.path.insert(1, '/Users/loriab/linux/psihub/publicface/psi4/objdir/bin'); >>> import psi4; >>> psi4.set_global_option('BASIS', 'CC_PVDZ'). Error: option BASIS is not contained in the list of available options.; Assertion failed: (px != 0), function operator->, file /Users/loriab/linux/psihub/publicface/psi4/objdir/boost/include/boost/smart_ptr/shared_ptr.hpp, line 648.; Abort trap: 6; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/251:875,Error,Error,875,https://psicode.org,https://github.com/psi4/psi4/issues/251,2,"['Error', 'avail']","['Error', 'available']"
Availability,CASSCF failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1693:7,failure,failure,7,https://psicode.org,https://github.com/psi4/psi4/issues/1693,1,['failure'],['failure']
Availability,"CCSD calculations on the N and F atoms result in segmentation faults for me (gcc 4.8.1, boost 1.53, python 3.3.2). I used the input file:. ```; molecule f { ; f 0.00 0.00 0.00; }; set basis cc-pVTZ; set scf reference uhf ; energy('ccsd'); ```. (and similarly for N). I tried increasing the memory and changing basis set to no avail (some basis sets caused a back trace rather than just a segmentation fault). Curiously CCSD calculations with a UHF reference on the rest of the period 2 atoms ran without a problem. Running psi4 through gdb and the backtraces indicate the problem is with freeing an invalid pointer when closing a dpd buffer in ccenergy/pair_energies.cc. Full backtrace from gdb:. ```; (gdb) where; #0 0x00007ffff45e62a4 in free () from /usr/lib/libc.so.6; #1 0x000000000136b8bc in psi::free_int_matrix (array=0x29d1fc0) at /home/james/projects/psi4/src/lib/libciomr/int_array.cc:134; #2 0x00000000012edea5 in psi::DPD::buf4_close (this=<optimized out>, Buf=Buf@entry=0x7fffffffd630); at /home/james/projects/psi4/src/lib/libdpd/buf4_close.cc:50; #3 0x000000000082dbf8 in psi::ccenergy::pair_energies (epair_aa=epair_aa@entry=0x7fffffffd7c8, epair_ab=epair_ab@entry=0x7fffffffd7d0); at /home/james/projects/psi4/src/bin/ccenergy/pair_energies.cc:99; #4 0x000000000086b797 in psi::ccenergy::ccenergy (options=...) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:307; #5 0x000000000086f4a5 in psi::ccenergy::CCEnergyWavefunction::compute_energy (this=0x293b760) at /home/james/projects/psi4/src/bin/ccenergy/ccenergy.cc:171; #6 0x00000000007004f4 in py_psi_ccenergy () at /home/james/projects/psi4/src/bin/psi4/python.cc:429; #7 0x00000000007080f7 in invoke<boost::python::to_python_value<double const&>, double (*)()> (rc=..., f=<optimized out>); at /usr/include/boost/python/detail/invoke.hpp:75; #8 operator() (args_=<optimized out>, this=<optimized out>) at /usr/include/boost/python/detail/caller.hpp:223; #9 boost::python::objects::caller_py_function_impl<boost::python::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12:62,fault,faults,62,https://psicode.org,https://github.com/psi4/psi4/issues/12,3,"['avail', 'fault']","['avail', 'fault', 'faults']"
Availability,CCSD(T) Fatal Error: Matrix::gemm error: Number of rows and columns do not match,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916:14,Error,Error,14,https://psicode.org,https://github.com/psi4/psi4/issues/2916,2,"['Error', 'error']","['Error', 'error']"
Availability,CI runtime error in conda package,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/764:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/764,1,['error'],['error']
Availability,CIWave: Fixes strange ICC 2015 compiler error with certain vectorization options,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/316:40,error,error,40,https://psicode.org,https://github.com/psi4/psi4/pull/316,1,['error'],['error']
Availability,"CL -0.000000000000 0.000000000000 -3.007607968024; }; mol.update_geometry(); mol.symmetrize(0.01). set reference rks; set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True). set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.12, 0.12, 0.12]; cubeprop(wfn); ```; give this in cube header:. > Sum of electrons: 58527.1 number of electrons: 101.135. from the chargemol program; > nvalence = 90.0000; pixelvolume = 1.7280E-03; numerically integrated valence density = 1.0113E+02; sum_valence_occupancy_correction = 0.0000E+00; checkme = 1.1135E+01; The electrons are not properly accounted for.; Either the grid in your electron density input file is too coarse, you have specified the incorrect net charge in the chargemol_job.m file, or t$; Program will terminate. Further testing by changing on the grid spacing (worst case here above):; ```; grid:0.2, error:5.2489 ; grid:0.19, error:4.5155 ; grid:0.18, error:2.4477 ; grid:0.17, error:3.6323 ; grid:0.16, error:2.3993 ; grid:0.15, error:2.8355 . grid:0.14, error:2.4962 ; grid:0.138, error:4.6381; grid:0.136, error:0.8501; grid:0.134, error:1.4051; grid:0.132, error:1.2419; grid:0.13, error:0.58084; grid:0.128, error:1.5786; grid:0.126, error:1.0912; grid:0.124, error:0.25624; grid:0.122, error:4.2158; grid:0.12, error:11.538; grid:0.118, error:3.1169; grid:0.116, error:1.4544; grid:0.114, error:1.4049; grid:0.112, error:1.502; grid:0.11, error:0.29599; grid:0.108, error:1.1679; grid:0.106, error:0.73735; grid:0.104, error:1.9971; grid:0.102, error:0.6448; grid:0.1, error:0.92615. grid:0.09, error:1.1189; grid:0.08, error:0.3121; grid:0.07, error:0.2545; grid:0.06, error:0.20924; grid:0.05, error:0.047781; ```; I guess the interpolation of the density values for each point take place in the add_density function but I am not sure how I can minimize this behaviour to be sure get a more correct total electron density also with larger grid spacing, as a grid spacing o",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311:2068,error,error,2068,https://psicode.org,https://github.com/psi4/psi4/issues/1311,1,['error'],['error']
Availability,CMake Error Overhaul,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/82:6,Error,Error,6,https://psicode.org,https://github.com/psi4/psi4/issues/82,1,['Error'],['Error']
Availability,COSX Grid Issues with 146 Spherical Grid Points + ROBUST Grid Pruning Scheme,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890:50,ROBUST,ROBUST,50,https://psicode.org,https://github.com/psi4/psi4/issues/2890,1,['ROBUST'],['ROBUST']
Availability,Calcium Basis Set Error?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1271:18,Error,Error,18,https://psicode.org,https://github.com/psi4/psi4/issues/1271,1,['Error'],['Error']
Availability,"Carlos is going to look into writing us a few test cases that make sure that all MP2 methods and all CC methods in Psi4 give consistent energies. - [ ] DF-MP2: Rob's code vs dfnocc is already in test case test/fnocc4, at the end. Split this part out to a new test case that compares these two as well as from the occ module. set qc_module occ will run Ugur's code (give it method 'mp2').; - [ ] Conventional MP2: Crawford's code vs fnocc vs occ; - [ ] DF-CCSD and DF-CCSD(T): Eugene's code with no FNO (df-fnocc), Ugur's code; - [ ] CCSD and CCSD(T): fnocc vs Crawford's code (ccenergy); - [ ] CEPA comparison: energy('cepa(0)') vs LCCD if available for non-OO, and vs DCFT [FYI some CEPA definitions have singles, others don't]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/714:640,avail,available,640,https://psicode.org,https://github.com/psi4/psi4/issues/714,1,['avail'],['available']
Availability,"Carried forward from [forum](http://forum.psicode.org/t/fatal-error-wavefunction-unable-to-obtain-mo-coefficients/2204). Psi currently does not support getting properties with BSSE corrections. This should be a simple matter of taking the properties with each BSSE component and doing the same operation to them you do to get the energies. (Thank you, linearity of derivatives!) There are two parts to this:. 1. `properties` should know to do this. At present, it ignores any BSSE keywords.; 2. When a user passes a wfn computed from BSSE to `OEProp`, it should give the user a clear error message telling it that OEProp is not designed for multi-component property computations. At present, it returns that it can't find the orbitals. While this response is perfectly reasonable, it's opaque.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2196:62,error,error-wavefunction-unable-to-obtain-mo-coefficients,62,https://psicode.org,https://github.com/psi4/psi4/issues/2196,2,['error'],"['error', 'error-wavefunction-unable-to-obtain-mo-coefficients']"
Availability,"Carried forward from [forum](http://forum.psicode.org/t/fatal-error-wavefunction-unable-to-obtain-mo-coefficients/2204/12). Even with SOSCF, I'm not able to converge MgF at 3 Angstroms. Several of the iterations display non-monotonic decrease of the residual, sometimes increasing after PCG iterations. This is surprising but I don't think mathematically inpossible, if the MO Hessian isn't positive semi-definite, in which case, CG methods fail. If that was all, we should look into alternate SOSCF methods. But even when convergence is monotonic, one sees an energy improvement on the order of 1e-4 hartrees, and negligible drop in the residual. What's going wrong here? I have a memory that the SOSCF step isn't being taken correctly (by exponentiation), so that's worth looking into. Probably a weekend project for me...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2204:62,error,error-wavefunction-unable-to-obtain-mo-coefficients,62,https://psicode.org,https://github.com/psi4/psi4/issues/2204,1,['error'],['error-wavefunction-unable-to-obtain-mo-coefficients']
Availability,"Carried forward from [forums](http://forum.psicode.org/t/cfour-outfile-inconsistent-with-cfour-grd/1642). I haven't run this myself, but the output file the reporter gave is from 1.3.2 release, and I don't think the CFOUR driver has been touched since then. @loriab, correct me if I'm wrong. See the following input file:; ```; memory 2 gb. molecule co2 {; C; O 1 1.163; O 1 1.163 2 180; }. set basis aug-cc-pvdz; set CFOUR_ABCDTYPE AOBASIS; set CFOUR_CC_PROGRAM ecc; set cfour_anharmonic VIBROT; set cfour_vibration findif. optimize('c4-ccsd(t)'); ```. Psi will do a sanity check at the end of the computation, that the nuclear repulsion energy harvested from CFOUR output agrees with the same as computed from CFOUR's GRD file. In this case, they disagree. The output harvested quantity is the _undisplaced geometry_, where the GRD harvest is the last displacement to run, which is a _displaced geometry_. Unsurprisingly, the nuclear repulsion energies disagree between the two, and Psi reports a [validation error](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/cfour.py#L597).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1784:1011,error,error,1011,https://psicode.org,https://github.com/psi4/psi4/issues/1784,1,['error'],['error']
Availability,"Carried forward from [forums](http://forum.psicode.org/t/psi4-crashes-abort-trap-signal-with-no-information/1806/5). The following input file; ```; molecule { ; -1 1; N 1.105000 0.080000 -0.002000; O 0.484000 -0.993000 -0.081000; O 0.484000 1.153000 0.078000; O 2.347000 0.080000 -0.002000; }; set {; g_convergence GAU_LOOSE; geom_maxiter 3; }; memory 700MB; optimize('wb97x/6-31G*'); ```; leads optking to abort the computation on [this line](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/optking/optking.cc#L578). It looks like an error was raised somewhere else, but there's no indication of where.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1924:542,error,error,542,https://psicode.org,https://github.com/psi4/psi4/issues/1924,1,['error'],['error']
Availability,"Carried forward from [the forums](http://forum.psicode.org/t/a-roots-per-irrep-value-crashes-cc3/1826). The following input file. ```; molecule radical {; 0 2; O 0.0000000000 0.0000000000 0.1081705869; H 0.0000000000 0.0000000000 -0.8651605869; units angstrom; symmetry C1; }; set {; basis ""6-31+G(d)""; reference ""uhf""; freeze_core true; roots_per_irrep [3] ; }; energy('eom-cc3'); ```. gives the error `Parameter 3 was incorrect on entry to DGEBAL.` and then segfaults. Initial debugging attempts indicate that at the time [this line is executed](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/cc/cceom/diag.cc#L555) `G[0][0] = NaN`, causing the subsequent matrix diagonalization to fail. Determining why `G[0][0] = NaN` will require expert attention. If there is some legitimate reason for the failure, a more helpful error message should be printed instead. The only one I can think of is if we were capturing only one state of a degenerate pair. But as the original poster remarked, setting `roots_per_irrep` to other numbers like 2 or 4 worked just fine, and when I set `roots_per_irrep` to 4, none of the roots had the same EOM energy. That seems to eliminate the ""degenerate pair"" hypothesis.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1931:397,error,error,397,https://psicode.org,https://github.com/psi4/psi4/issues/1931,3,"['error', 'failure']","['error', 'failure']"
Availability,"Carrying forward from [the forums](http://forum.psicode.org/t/problem-when-passing-a-reference-wavefunction-to-df-ccsd-in-the-fnocc-module/1346). . The following input file leads to a PSIO error:; ```; molecule {; O; H 1 r; H 1 r 2 a. r=0.958; a=104.5. symmetry c1; }. set scf_type df; set cc_type df; set df_ints_io save; eng, wfn = psi4.energy('hf/cc-pvdz', return_wfn=True); cc_eng = psi4.energy('ccsd/cc-pvdz', ref_wfn=wfn); ```. The following workaround input file runs fine:; ```; molecule {; O; H 1; H 1 r 2 a; r=0.958; a=104.5; symmetry c1; }. set basis cc-pvdz; set scf_type df; set cc_type df; set df_ints_io save; eng, wfn = psi4.energy(‘hf’, return_wfn=True); cc_eng = psi4.energy(‘ccsd’, ref_wfn=wfn); ```. Still, it would be good to figure out what is differing between these two cases.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1604:189,error,error,189,https://psicode.org,https://github.com/psi4/psi4/issues/1604,1,['error'],['error']
Availability,Catch Basis Set Errors in Parse Step,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1332:16,Error,Errors,16,https://psicode.org,https://github.com/psi4/psi4/issues/1332,1,['Error'],['Errors']
Availability,"Check for working C compiler: /home/amjames2/.conda/envs/py3/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /home/amjames2/.conda/envs/py3/bin/python (found version ""3.5.2"") ; -- Found PythonLibs: /home/amjames2/.conda/envs/py3/lib/libpython3.so; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; CMake Error at CMakeLists.txt:35 (find_package):; Could not find a package configuration file provided by ""libefp"" with any; of the following names:. libefpConfig.cmake; libefp-config.cmake. Add the installation prefix of ""libefp"" to CMAKE_PREFIX_PATH or set; ""libefp_DIR"" to a directory containing one of the above files. If ""libefp""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; ```. It seems that if I add two lines to the `CMAKE_ARGS` section of `ExternalProject_Add(psi4_core…` . ```; -Dlibint_DIR=${libint_DIR}; -Dlibefp_DIR=${libefp_DIR}; ```. Then the arguments that I pass on the command line are correctly fed into the psi4_core build. Currently they are not passed in but the step that would download/build them was skipped since they were detected in the initial CMake pass. The `CMAKE_PREFIX_PATH` option for detecting them works since that argument is currently passed through. The documentation should be edited to r",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/516:2361,Error,Error,2361,https://psicode.org,https://github.com/psi4/psi4/issues/516,1,['Error'],['Error']
Availability,"Clean up #includes, macros, unnecessary array init, error exits, and other miscellaneous things in libmoinfo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3112:52,error,error,52,https://psicode.org,https://github.com/psi4/psi4/pull/3112,1,['error'],['error']
Availability,"Commit e6916b7b14ee873e1218de36bab6fb60e99abf3d gives a compilation error. The PsiAPI directory is missing:. ```; CMake Error at CMakeLists.txt:286 (add_subdirectory):; add_subdirectory given source ""PsiAPI"" which is not an existing directory.; ```. This should be an easy fix.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/205:68,error,error,68,https://psicode.org,https://github.com/psi4/psi4/issues/205,2,"['Error', 'error']","['Error', 'error']"
Availability,"Commits prior to PR 65c0921213e6fe2979733f6c316915f79051f558 seem to have broken some tests that I suspect are not checked by our CI system:; ```; 	255 - ocepa-freq1 (Failed); 	259 - ocepa2 (Failed); 	260 - ocepa3 (Failed); 	273 - omp3-2 (Failed); 	278 - omp3-grad2 (Failed); 	320 - pywrap-checkrun-rhf (Failed); 	321 - pywrap-checkrun-rohf (Failed); 	322 - pywrap-checkrun-uhf (Failed); ```. The following are known to fail due to poor convergence of the occ module; ```; 	260 - ocepa3 (Failed); 	263 - omp2-3 (Failed); 	274 - omp3-3 (Failed); ```. The error message for `pywrap-checkrun-rhf` is also consistent with convergence issues:; ```; 45 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 3.01e-15; 46 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 1.73e-15; 47 -75.0144633211 -1.42e-14 1.85e-05 1.42e-04 9.95e-16; 48 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 5.65e-16; 49 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 3.27e-16; 50 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 1.88e-16; ======================== OCEPA IS NOT CONVERGED IN 50 ITERATIONS ============; Traceback (most recent call last):; File ""/Users/fevange/Source/psi4/objdir-Debug/stage/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 54, in <module>; File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/driver.py"", line 711, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/procrouting/proc.py"", line 752, in select_olccd_gradient; return func(name, **kwargs); File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/procrouting/proc.py"", line 2147, in run_occ_gradient; occ_wfn = core.occ(ref_wfn); RuntimeError:; Fatal Error: OCC iterations did not converge; Error occurred in file: /Users/fevange/Source/psi4/psi4/src/psi4/occ/occ_iterations.cc on line: 363; The most recent 5 function calls were:; Printing out the relevant lines from the Psithon --> Python processed input fil",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793:554,error,error,554,https://psicode.org,https://github.com/psi4/psi4/issues/1793,1,['error'],['error']
Availability,Compilation error (libfrag),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,Compilation error (missing PsiAPI),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/205:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/issues/205,1,['error'],['error']
Availability,Compilation error with icc 18.0.1,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/923:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/issues/923,1,['error'],['error']
Availability,Compilation failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404:12,failure,failure,12,https://psicode.org,https://github.com/psi4/psi4/issues/404,1,['failure'],['failure']
Availability,Compilation failure with GCC 8,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1013:12,failure,failure,12,https://psicode.org,https://github.com/psi4/psi4/issues/1013,1,['failure'],['failure']
Availability,Compile error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/536,1,['error'],['error']
Availability,Compiler error PK_workers.cc file with the Intel 14 compiler,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/398:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/398,1,['error'],['error']
Availability,Compiling Psi4 I got this error:; .; .; .; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/nao.cc.o; [ 60%] Building CXX object src/lib/libchkpt/CMakeFiles/chkpt.dir/am2canon_shell_order.cc.o; [ 60%] Linking CXX static library ../../../lib/libchkpt.a; [ 60%] Built target chkpt; Scanning dependencies of target cubeprop; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/csg.cc.o; [ 60%] Building CXX object src/lib/libcubeprop/CMakeFiles/cubeprop.dir/cubeprop.cc.o; [ 60%] Linking CXX static library ../../../lib/libcubeprop.a; [ 60%] Built target cubeprop; Scanning dependencies of target git_update; fatal: Not a git repository (or any of the parent directories): .git; make[2]: **\* [src/lib/libpsipcm/CMakeFiles/git_update] Error 128; make[1]: **\* [src/lib/libpsipcm/CMakeFiles/git_update.dir/all] Error 2; make: **\* [all] Error 2. ---. The git and cmake version from macports is 2.5.3 and 3.3.3 respectively. I used the setup command:; ./setup --plugins --fc gfortran-mp-4.8 --accelerate objdir. I was wondering if you can provide me some input to solve the problem. Thank you.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/183:26,error,error,26,https://psicode.org,https://github.com/psi4/psi4/issues/183,4,"['Error', 'error']","['Error', 'error']"
Availability,Compiling error: lib/libmints/matrix.cc (icpc 16.0.3),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/444:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/issues/444,1,['error'],['error']
Availability,"Compiling psi4 on -O3 with icc 18.0.1 seems to trigger a crash in the compiler. The crash is not observed with the icc 17.0.2 with -O3, nor is it observed with icc 18.0.1 if I turn the optimization flag down to -O1. ```; /u/nyc/mcgibbon/gerrit/psi4-gerrit/psi4/src/psi4/dcft/dcft_gradient_UHF.cc(3903) (col. 72): internal error: 20000_6805. [ 85%] Building CXX object src/psi4/optking/CMakeFiles/optking.dir/opt_data_io.cc.o; compilation aborted for <prefix>/psi4/src/psi4/dcft/dcft_gradient_UHF.cc (code 4); make[5]: *** [src/psi4/dcft/CMakeFiles/dcft.dir/dcft_gradient_UHF.cc.o] Error 4; make[4]: *** [src/psi4/dcft/CMakeFiles/dcft.dir/all] Error 2; make[4]: *** Waiting for unfinished jobs....; ```. With 18.0.1, I can fix the error by turning down the optimization flag for that file in particular by adding the following snippet to psi4/src/psi4/dcft/CMakeLists.txt:; ```; if (CMAKE_CXX_COMPILER_ID STREQUAL ""Intel"" AND; CMAKE_CXX_COMPILER_VERSION VERSION_LESS 18.1 AND; CMAKE_CXX_COMPILER_VERSION VERSION_GREATER_EQUAL 18.0). message(WARNING ""Intel C++ (ICC) 18.0 fails to compile dcft_gradient_UHF.cc with aggressive optimization flags""); set_source_files_properties(dcft_gradient_UHF.cc PROPERTIES; COMPILE_FLAGS -O1); endif (); ```. Has anyone else tried using icc 18.0.1? Is there precedent for adding compiler- and file-specific flags in the CMakeLists? I'm not sure if this is suitable as a PR.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/923:203,down,down,203,https://psicode.org,https://github.com/psi4/psi4/issues/923,6,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,"Compute numerical and analytical gradients with **wB97X** functional:; ```python; import psi4. print(psi4.__version__). psi4.geometry('H -.5 0 0\nH .5 0 0'); psi4.gradient('wb97x/3-21g', dertype=0); psi4.gradient('wb97x/3-21g', dertype=1); ```. The numerical gradient works, but analytical one crashes:; ```; 1.2a1.dev681; gradient() will perform gradient computation by finite difference of analytic energies. ... skipped ... ## F-D gradient (Symmetry 0) ##; Irrep: 1 Size: 2 x 3. 1 2 3. 1 -0.08957282148820 0.00000000000000 0.00000000000000; 2 0.08957282148820 0.00000000000000 0.00000000000000. Traceback (most recent call last):; File ""test.py"", line 7, in <module>; psi4.gradient('wb97x/3-21g', dertype=1); File ""/home/raimis/opt/miniconda3/envs/ani_test/lib/python3.6/site-packages/psi4/driver/driver.py"", line 549, in gradient; dertype = min([_find_derivative_type('gradient', method, user_dertype) for method in cbs_methods]); File ""/home/raimis/opt/miniconda3/envs/ani_test/lib/python3.6/site-packages/psi4/driver/driver.py"", line 549, in <listcomp>; dertype = min([_find_derivative_type('gradient', method, user_dertype) for method in cbs_methods]); File ""/home/raimis/opt/miniconda3/envs/ani_test/lib/python3.6/site-packages/psi4/driver/driver.py"", line 103, in _find_derivative_type; % (method_name, str(dertype), alternatives)); psi4.driver.p4util.exceptions.ValidationError: Derivative method 'name' wb97x and derivative level 'dertype' 1 are not available. Did you mean? b97 wb97 wb97x wb97x-v wb97x-d; ```. Also, the error message is self-contradicting:; ```; psi4.driver.p4util.exceptions.ValidationError: Derivative method 'name' wb97x and derivative level 'dertype' 1 are not available. Did you mean? b97 wb97 wb97x wb97x-v wb97x-d; ```. According to https://gitlab.com/libxc/libxc/wikis/Functionals-list-3.0.0, **libXC** supports **wB97X** and I don't see any notes that the analytical gradient is not implemented. So I guess, the problem is somewhere in **Psi4**.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867:1461,avail,available,1461,https://psicode.org,https://github.com/psi4/psi4/issues/867,3,"['avail', 'error']","['available', 'error']"
Availability,"Consider the following input file:; ```; molecule = geometry(""""""; H; H 1 1.0 ; """"""). set basis sto-3g. wfn = energy('b3lyp', return_wfn=True)[1]; assert isinstance(wfn, core.RHF). c1_molecule = molecule.clone(); c1_molecule.reset_point_group('c1'); c1_molecule.fix_orientation(True); c1_molecule.fix_com(True); c1_molecule.update_geometry(); c1_basis = core.BasisSet.build(c1_molecule, ""ORBITAL"", core.get_global_option('BASIS'), quiet=True). new_wfn = wfn.c1_deep_copy(c1_basis); ```. The computation crashed with an error message about the functional being ""unpolarized for UV reference."" The problem is on [this line](https://github.com/psi4/psi4/blob/c57375a3f02b6b339e028516ea44c6911c2e9e22/psi4/src/psi4/libscf_solver/hf.cc#L271). The reference is RHF, not RKS, so the if-statement makes the wrong choice.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2335:518,error,error,518,https://psicode.org,https://github.com/psi4/psi4/issues/2335,1,['error'],['error']
Availability,"Consider the following input file:; ```; molecule h2o {; symmetry c1; 0 1 ; O; H 1 0.957119; H 1 0.957119 2 104.225; }. set {; basis cc-pVDZ; freeze_core true; pair_energies_print true; cachelevel 1; }. energy('ccsd'); energy('ccsd'); ```. The second time the MP2 orbital energies are printed, they use the CCSD values. This is because the MP2 values are initialized from the [tau amplitudes](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/cc/ccenergy/pair_energies.cc#L69), but those initialize to the values from the first computation. I attempted to fix this by changing the line in question to read amplitudes from the DPD file ""tauIjAb (MP2)"", but this caused a test failure for low values of `cachelevel`, as the MP2 amplitudes are not saved, but the CCSD amplitudes were, for reasons that are unclear to me. The correct fix is also unclear to me.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2457:680,failure,failure,680,https://psicode.org,https://github.com/psi4/psi4/issues/2457,1,['failure'],['failure']
Availability,"Consider the following input file:; ```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. set scf_type pk; set basis 6-31+G(d); set r_convergence 12. energy, wfn = energy('hf', return_wfn = True); NBOWriter(wfn).write('input.47'); ```. This is the NBO test case, except I have replaced the basis set with a Pople basis. When I run the produced input file through NBO, the result I get does not match QChem. The fault is with Psi. Just look at the unphysical energy gap in the d NAOs:; ```; 15 O 1 dxy Ryd( 3d) 0.00000 0.22545; 16 O 1 dxz Ryd( 3d) 0.00196 0.22862; 17 O 1 dyz Ryd( 3d) 0.00518 0.52493; 18 O 1 dx2y2 Ryd( 3d) 0.00125 2.36883; 19 O 1 dz2 Ryd( 3d) 0.00227 2.02191; ```. For comparison, QChem gives; ```; 15 O 1 dxy Ryd( 3d) 0.00000 2.02907; 16 O 1 dxz Ryd( 3d) 0.00518 2.71710; 17 O 1 dyz Ryd( 3d) 0.00196 2.05762; 18 O 1 dx2y2 Ryd( 3d) 0.00125 2.36883; 19 O 1 dz2 Ryd( 3d) 0.00227 2.02191; ```. I suspect the error has to do with Pople basis sets being defined in cartesians and not spherical. This is the only reason I can think of for agreement with QChem being basis-set dependent, and it also agrees nicely with the fact that ""Input basis functions are not normalized; fixed"" appears in the Psi-NBO output file. While I'll likely end up fixing this, this is very low on my priority list. If anybody else wants to take this, feel free. Just post here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1698:407,fault,fault,407,https://psicode.org,https://github.com/psi4/psi4/issues/1698,2,"['error', 'fault']","['error', 'fault']"
Availability,"Consider the following simple input file:; ```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. set basis cc-pvdz. prop('mp2', properties=[""multipole(4)""]); prop('ccsd', properties=[""multipole(4)""]); ```. The MP2 property computation runs fine, but the CCSD property computation does not, as Psi complains that `The following properties are not currently supported: ['MULTIPOLE(4)']`. . This is almost certainly the result of bad logic in `procrouting/proc.py:run_cc_property`. It looks like `run_cc_property` has a _lot_ of custom logic, so it's not surprising that something was missed. This should be added to the allowed list of CC properties, and the logic should be simplified if at all possible. It's not a good sign when methods can't agree about what properties Psi supports. Obligatory @bgpeyton ping.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2219:803,ping,ping,803,https://psicode.org,https://github.com/psi4/psi4/issues/2219,1,['ping'],['ping']
Availability,"Continuation of #2012 . Users report large errors with the default frozen core settings because the ""core"" orbitals we freeze are at the energy of ""valence"" orbitals. (simply put). Valuable comments from other issue:; https://github.com/psi4/psi4/issues/2012#issuecomment-702870857; https://github.com/psi4/psi4/issues/2012#issuecomment-702811354. Possibly we want what `freeze_core -2` does for all alkali metals?; Same for the earth alkali?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2343:43,error,errors,43,https://psicode.org,https://github.com/psi4/psi4/issues/2343,1,['error'],['errors']
Availability,Correct copy-paste error message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1811:19,error,error,19,https://psicode.org,https://github.com/psi4/psi4/pull/1811,1,['error'],['error']
Availability,"Creating a conda environment with `psi4-dev` makes it really easy to get a source build going, which is great. But I have noticed that conda adds some questionable compiler flags to the following environmental variables:. ```; echo $CFLAGS; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtim",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:227,echo,echo,227,https://psicode.org,https://github.com/psi4/psi4/issues/2416,4,['echo'],['echo']
Availability,"Currently the OCC/DFOCC page of the docs makes no mention of frozen core.; DFOCC seems to default to all-electron, but _does_ seem to run with `set freeze_core true`.; OCC throws a RuntimeError, and claims that ""Frozen core/virtual not implemented in Orbital-optimized methods"". I can see two issues here:. 1. The error message from OCC suggests that none of the orbital-optimized methods in Psi4 support FC. This is either wrong and misleading (if DFOCC really does support FC) or DFOCC should also throw the same error.; 2. Regardless of the answer to 1, [the relevant doc page](http://www.psicode.org/psi4manual/master/occ.html) ought to have a few words about FC support or the lack thereof.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1863:314,error,error,314,https://psicode.org,https://github.com/psi4/psi4/issues/1863,2,['error'],['error']
Availability,"Currently the `Molecule.xyz()` method does not check the length of the array that it is getting. ```; >>> import psi4; >>> mol = psi4.geometry(""He 0 0 0\nHe 0 0 5""); >>> mol.xyz(3); [1] 26521 segmentation fault python; ```. This should be capped and provide a nice error message to the user. This should be a straightforward fix, the relevant file is [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1675:205,fault,fault,205,https://psicode.org,https://github.com/psi4/psi4/issues/1675,2,"['error', 'fault']","['error', 'fault']"
Availability,"Currently, PCM settings can not be set via QCEngine using the schema interface, passing a task like this from QCEngine results in an error ; ```python; {'schema_name': 'qcschema_input',; 'schema_version': 1,; 'molecule': Molecule(name='H2O', formula='H2O', hash='941bd29'),; 'driver': 'energy',; 'model': {'method': 'SCF', 'basis': 'sto-3g'},; 'protocols': {'wavefunction': 'orbitals_and_eigenvalues'},; 'keywords': {'scf_type': 'df',; 'pcm_scf_type': 'total',; 'pcm': {'Units': 'Angstrom',; 'Medium': {'SolverType': 'IEFPCM', 'Solvent': 'Water'},; 'Cavity': {'RadiiSet': 'UFF',; 'Type': 'GePol',; 'Scaling': False,; 'Area': 0.3,; 'Mode': 'Implicit'}}}}; ```; as it tries to pass the dictionary of settings to the `core.set_global` function. . Extending the `set_options` function [here](https://github.com/psi4/psi4/blob/5de566ed7d4bf51816c673c4ea1def449e4e8618/psi4/driver/p4util/python_helpers.py#L423) to handle the `pcm` keyword should fix this issue. tagging @loriab following the slack discussion.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1986:133,error,error,133,https://psicode.org,https://github.com/psi4/psi4/issues/1986,1,['error'],['error']
Availability,"D/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src -isystem /usr/include/python3.6m -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -fopenmp -DUSING_CheMPS2 -O2 -DNDEBUG -fPIC -std=c++11 -std=gnu++11 -o CMakeFiles/psio.dir/aio_handler.cc.o -c /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc: In member function 'long unsigned int psi::AIOHandler::read(unsigned int, const char*, char*, psi::ULI, psi::psio_address, psi::psio_address*)':; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc:91:48: error: 'bind' is not a member of 'std'; thread_ = std::make_shared<std::thread>(std::bind(&AIOHandler::call_aio,this));; ^~~~; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc:91:48: note: suggested alternative: 'find'; thread_ = std::make_shared<std::thread>(std::bind(&AIOHandler::call_aio,this));; ^~~~; find; ```. Note that I've defined; ```; -DCUSTOM_C_FLAGS=-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -std=c11 -DNDEBUG' '-DCUSTOM_CXX_FLAGS=-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -std=c++11 -DNDEBUG'; ```; which already includes the C++11 standard, but the build system seems to append this with -std=gnu++11 which is probably the reason why the build is broken. It's funny though, that the",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631:1403,error,error,1403,https://psicode.org,https://github.com/psi4/psi4/issues/631,1,['error'],['error']
Availability,"DCT gradients fail with the traceback below when ROHF starting orbitals are used. The same result is obtained for all DCT functionals w/ analytic gradients (ODC-13, ODC-12, ODC-06, DC-06). The calculation runs fine with UHF starting orbitals. Furthermore identical energies are obtained for the UHF calculation and the ROHF calculation, but the ROHF calculation fails out before computing the gradient. . ``` Molecular point group: c2v; Full point group: C2v. Geometry (in Bohr), charge = 0, multiplicity = 1:. Center X Y Z; ------------ ----------------- ----------------- -----------------; O 0.000000000000 0.000000000000 -0.124297814551; H 0.000000000000 -1.434419280484 0.986348258811; H 0.000000000000 1.434419280484 0.986348258811. Traceback (most recent call last):; File ""/home/mmd01986/anaconda3/envs/psi4/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/mmd01986/anaconda3/envs/psi4/lib//python3.6/site-packages/psi4/driver/driver.py"", line 638, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/mmd01986/anaconda3/envs/psi4/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 1501, in run_dcft_gradient; grad = derivobj.compute(). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1532493090788/work/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PSIO::read(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::read_entry(unsigned long, char const*, char*, unsigned long). Psi4 stopped on: Friday, 18 January 2019 09:58AM; Psi4 wall time for execution: 0:00:01.14. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1482:1287,Error,Error,1287,https://psicode.org,https://github.com/psi4/psi4/issues/1482,5,"['Error', 'error']","['Error', 'error']"
Availability,DCT: Faulty Advice from Output File... Any Good Replacements?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1354:5,Fault,Faulty,5,https://psicode.org,https://github.com/psi4/psi4/issues/1354,1,['Fault'],['Faulty']
Availability,"DDFT/TDHF. ; - The Restricted reference engine `TDRSCFEngine` also expects a flag to determine if products are spin adapted for singlet or triplet excitations.; - It appears as best as I can tell that the `UV::compute_Vx` method is not implemented correctly for GGA functionals so UKS excitations are only correct for LDA functionals and pure HF; - It also appears that the `RV::compute_Vx` provides the singlet spin adapted product as RKS singlet excitations are correct for LDA/GGA Hybrids and LRC, but not for the triplet. Looking in the literature and at the implementation in pyscf I am pretty sure that for the triplet product a spin polarized XC kernel is required with some of the terms dropped. See [this paper](https://ac.els-cdn.com/000926149600440X/1-s2.0-000926149600440X-main.pdf?_tid=7899ff46-2714-433b-ba61-196b62ca0e51&acdnat=1547482655_c87a35aa638ca9a2423c76a904b200e5) for spin adapted expressions.; - I have implemented tests for All combinations of [Restricted(singlet/triplet)/Unrestricted-RPA/TDA-LDA/GGA/Hybrids/LRC/HF] and marked the cases for known failures. ; - The tests do not use symmetry because with these small systems the savings due to PG symmetry are negligible and finding roots that transform as different irrep require multiple passes through the solver. So turning symmetry on makes each test take about 4x as long. I have verified that it works though. ; - I marked the HF tests as quick for CI as they are fast, the DFT tests take a bit longer, that can be adjusted as needed. ; - The test output below summarizes which Reference/functional combinations work and don't work. ```; psi4/tests/test_tdscf_excitations.py::test_tdscf[UHF-SVWN-RPA-cc-pvdz] PASSED [ 3%]; psi4/tests/test_tdscf_excitations.py::test_tdscf[UHF-SVWN-TDA-cc-pvdz] PASSED [ 6%]; psi4/tests/test_tdscf_excitations.py::test_tdscf[RHF-1-SVWN-RPA-cc-pvdz] PASSED [ 10%]; psi4/tests/test_tdscf_excitations.py::test_tdscf[RHF-1-SVWN-TDA-cc-pvdz] PASSED [ 13%]; psi4/tests/test_tdscf_excitations",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1349:2419,failure,failures,2419,https://psicode.org,https://github.com/psi4/psi4/pull/1349,1,['failure'],['failures']
Availability,DF-MP2.5 failure for large inputs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1679:9,failure,failure,9,https://psicode.org,https://github.com/psi4/psi4/issues/1679,1,['failure'],['failure']
Availability,DF-MP2: Put energies in variables_ so that they are available in Python,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/643:52,avail,available,52,https://psicode.org,https://github.com/psi4/psi4/pull/643,1,['avail'],['available']
Availability,DFT: Fix VV10 timer error and quickens test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/889:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/pull/889,1,['error'],['error']
Availability,"Dear Developers, . I compiled successfully psi4-0.5 but obtain an error when running psi4 :. ```; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (no tag) Driver. Git: Rev {detached?} 8e01b1f . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Psi4 started on: Thu Feb 18 17:21:00 2016. Process ID: 63254; PSI4DATADIR: /home/LUCA/psi-master/psi4public/lib; Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # ! Sample UHF/6-31G*\* CH2 computation. memory 250 mb. molecule ch2 {; 0 3; C ; H 1 R; H 1 R 2 A. R = 1.075; A = 133.93; }. set basis 6-31G**; set reference uhf; energy ('scf'). ---. Memory set to 250.000 MiB by Python script. An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(boost::shared_ptrpsi::Wavefunction, _object_, _object_): File ""<string>"", line 29, in <module>. File ""/home/LUCA/psi-master/psi4public/lib/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 932, in run_scf; scf_helper(name, **kwargs). File ""/home/LUCA/psi-master/psi4public/lib/python/proc.py"", line 1138, in scf_helper; e_scf = psi4.scf(precallback, postcallback). Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266:66,error,error,66,https://psicode.org,https://github.com/psi4/psi4/issues/266,2,['error'],['error']
Availability,"Dear Developers,. I would like to perform counterpoise-corrected DBOC computations at the CCSD level, using psi4-1.9.1. For this purpose, I wrote the following input:. ```; molecule dimer {; 0 1; N 1.608094757 -0.561155368 0.000000000; N 2.389700473 0.210989439 0.000000000; --; 0 1; N -2.389700473 -0.210989439 0.000000000; N -1.608094757 0.561155368 0.000000000; }. set globals {; cfour_dboc on; basis cc-pvdz; d_convergence 11; }. e_cp = energy('c4-ccsd',bsse_type='cp', return_total_data=True); ```. When I tried to run this input, I received a segmentation fault, without any further information. If I replace `c4-ccsd` with `c4-hf`, then there occurs another segmentation fault, which is more verbose than the previous one:. `QcdbException: Psi4/Cfour gradients with ghost atoms no longer supported. Use QCEngine or QCDB where they are.`. There is a simple warning, as well, which I am not sure what to do with:. `Using qcdb.align.B787instead ofqcelemental.molutil.B787 is deprecated, and as soon as 1.5 it will stop working`. Could you please help me how to modify this input for a successful execution?. Thank you in advance for your help. Best regards,. Roland",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3217:562,fault,fault,562,https://psicode.org,https://github.com/psi4/psi4/issues/3217,2,['fault'],['fault']
Availability,"Dear PSI4 developers,; the current state of the master branch (last included commit: 97761b111b68c56e3763ad7b471ec603da90ed25) of psi4 fails to build at the linking step. The last lines of the output of `make` are; ```/usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_0_cxx.cxx.o): relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC; /usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_1811_cxx.cxx.o): warning: relocation against `CR_aB_h010__0___CartesianMultipole_sB_0_c_0_c_0_Sb__p100__0___Ab__up_' in read-only section `.text'; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:408: src/core.cpython-39-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_X",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:786,error,error,786,https://psicode.org,https://github.com/psi4/psi4/issues/2572,2,"['Error', 'error']","['Error', 'error']"
Availability,"Dear Pis4 developers. I've got in issue when link psi4 binary:. ```; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tmpnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7515: warning: the use of `tmpnam_r' is dangerous, better use `mkstemp'; /usr/local/lib/libpython2.7.a(posixmodule.o): In function `posix_tempnam':; /home/kbob/bin/Python-2.7.5/./Modules/posixmodule.c:7462: warning: the use of `tempnam' is dangerous, better use `mkstemp'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `boost::python::converter::(anonymous namespace)::slot_rvalue_from_python<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, boost::python::; builtin_converters.cpp:(.text+0x1286): undefined reference to `PyUnicodeUCS4_AsWideChar'; /home/kbob/git/psi4release/build/boost/lib/libboost_python-1_57.a(builtin_converters.o): In function `encode_string_unaryfunc':; builtin_converters.cpp:(.text+0x455): undefined reference to `PyUnicodeUCS4_FromEncodedObject'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Ошибка 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Ошибка 2; make: *** [all] Ошибка 2; ```. I'm running on Ubuntu 14.04 with cmake installed from ppa:george-edison55/cmake-3.x. Since the default version available in 14.04 is boost-1.54, used to compile boost_1_57_0.tar.bz2 that included in distro.; http://packages.ubuntu.com/trusty/libboost-all-dev. My python interpreter support UCS-4. python -c ""import sys; print(sys.maxunicode)""; returns 1114111. python3 -c ""import sys; print(sys.maxunicode)""; returns 1114111. Could you clarify my issue or can I compile Psi4 without puthon support to avoid this issue?; in particular, I only need to generate MOLDEN file from SCF calculations. With respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/94:1067,error,error,1067,https://psicode.org,https://github.com/psi4/psi4/issues/94,2,"['avail', 'error']","['available', 'error']"
Availability,"Dear Psi4 developer, ; I'm using v1.4rc2. I find very convenient to use the QCSchema for submitting my `energy` calculations, but it is not clear to me what is currently implemented for this input method.; Using `{""basis"": ""aug-cc-pv[tq]z"", ""method"": ""MP2""}`, results in the error; ```; npsi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: ; Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['N']; Basis Sets: [('AUG-CC-PV[TQ]Z', 'AUG-CC-PV[TQ]Z', None)]; ```; which makes me think that CompeteBasisSet (CBS) extrapolations are not yet implemented.; My goal would be to submit even more advanced extrapolation protocols like `mp2/cc-pv[tq]z + D:ccsd(t)/cc-pvdz`.; Is there a way to do this with the current implementation of the QCSchema? Or do you see it possible in a near-future release?. Thank you very much for your help!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2198:275,error,error,275,https://psicode.org,https://github.com/psi4/psi4/issues/2198,1,['error'],['error']
Availability,"Dear Psi4 developers,. I recently created a new conda env and found that a code that previously has been working gave me segmentation fault. I added break points in my code and found the errors came from ERI. The simplified version of the codes (I only extracted the minimal part to reproduce the error) is below:; ```; import sys; import numpy as np; import psi4. basisname = ""def2-tzvp""; auxbasis = ""def2-tzvp""; theory = ""scf"". psi4.set_memory('4 GB'); psi4.set_num_threads(1); psi4.core.set_output_file('output.dat', False). ang2bohr = 1.88973; bohr2ang = 1/ang2bohr. molstr = ""H -0.5187926292419434 7.475999355316162 -5.560068130493164\nH 0.8894014358520508 6.672944068908691 -4.7793121337890625\nO 0.4382983446121216 7.725281715393066 -4.912882328033447\nsymmetry c1\nno_reorient\nno_com""; mol = psi4.geometry(molstr). print(""Computing "" + theory + "" gradient...""); grad, wfn = psi4.gradient('{}/{}'.format(theory,basisname), return_wfn=True). orbital_basis = wfn.basisset(); aux_basis = psi4.core.BasisSet.build(mol, ""DF_BASIS_SCF"", """", ""JKFIT"", auxbasis); print(aux_basis.nbf()). zero_basis = psi4.core.BasisSet.zero_ao_basis_set(); mints = psi4.core.MintsHelper(orbital_basis). abQ = mints.ao_eri(orbital_basis, orbital_basis, aux_basis, zero_basis) # This line causes the error; ```. Previously I was using psi4=1.3.2+ecbda83 and psi4=1.4a2.dev723+fb499f4. The current version that gives me segmentation fault is psi4=1.5+e9f4d6d. The error is; ```; forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source; libgdma.so 00007F9CA744F17B for__signal_handl Unknown Unknown; libpthread-2.17.s 00007F9CC324B630 Unknown Unknown Unknown; libgdma.so 00007F9CA744ED5C for__signal_handl Unknown Unknown; libpthread-2.17.s 00007F9CC324B630 Unknown Unknown Unknown; ```. Could you let me know what may cause this error and what changes may be ascribed to it?. Best regards,; Chenru",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2542:134,fault,fault,134,https://psicode.org,https://github.com/psi4/psi4/issues/2542,8,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"Dear Sir, ; I am trying to find out higher roots(i.e excited states) and then finding transition dipole moment from ground state to these excited states. My Job automatically dies after some time (two and half our). I am not getting any error. . output file; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. ```; J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; -----------------------------------------------------------------------. Process ID: 11169; PSI4DATADIR: /usr/local/psi4/share/psi. Using LocalCommunicator (Number of processes = 1). Memory level set to 256.000 MB; ```. ==> Input File <==. ---; # Finding of 30 higher roots(i.e excited states) and then finding transition dipole moment from ground state to these excited states; # for Graphyne using basis cc-pvdz. psi4_io.set_default_path('./'). memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; freeze_core true; scf_type out_of_core; dipmom true",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/62:237,error,error,237,https://psicode.org,https://github.com/psi4/psi4/issues/62,1,['error'],['error']
Availability,"Dear all, . I added a new plugin into PSI4 (the newest psi-master code from github) (dmrgscf plugin), but ; when running psi4 on the input.dat file, i obtain the following error :; ## symbol lookup error: /home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so: undefined symbol: _ZN7CheMPS26Irreps12getGroupNameEi; ## my input file is :. molecule O2 {; O 0.0 0.0 0.0; O 0.0 0.0 3.0 ; units au; }. plugin_load(""/home/luca/psi-master/psi4public/plugins/mypsi4plugins/dmrgscf/dmrgscf.so""). set basis cc-pVDZ; set reference rhf. set dmrgscf wfn_irrep 0; set dmrgscf wfn_multp 1; set dmrgscf frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrgscf active [ 2 , 0 , 2 , 2 , 0 , 2 , 2 , 2 ]. set dmrgscf dmrg_states [ 500, 1000, 1000 ]; set dmrgscf dmrg_econv [ 1e-10, 1e-10, 1e-10 ]; set dmrgscf dmrg_maxsweeps [ 5, 5, 10 ]; set dmrgscf dmrg_noiseprefactors [ 0.05, 0.05, 0.0 ]; set dmrgscf dmrg_print_corr false; set dmrgscf mps_chkpt false. set dmrgscf dmrgscf_convergence 1e-6; set dmrgscf dmrgscf_store_unit true; set dmrgscf dmrgscf_do_diis true; set dmrgscf dmrgscf_diis_branch 1e-2; set dmrgscf dmrgscf_store_diis true. set dmrgscf dmrgscf_max_iter 100; set dmrgscf dmrgscf_which_root 2 # First excited state; set dmrgscf dmrgscf_state_avg true; set dmrgscf dmrgscf_active_space NO # INPUT; NO; LOC; set dmrgscf dmrgscf_loc_random false. scf(). plugin(""dmrgscf.so""). ---. Best wishes; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/96:172,error,error,172,https://psicode.org,https://github.com/psi4/psi4/issues/96,2,['error'],['error']
Availability,"Dear all, . I am trying to compile the latest version of the PSI4 package on a cluster with OpenSuse; however I end up with the following linking error : . Linking CXX shared library core.so; /usr/bin/ld: BFD (GNU Binutils; openSUSE 12.3) 2.23.1 internal error, aborting at ../../bfd/reloc.c line 444 in bfd_get_reloc_size. /usr/bin/ld: Please report this bug. collect2: error: ld returned 1 exit status; make[5]: *** [src/core.so] Error 1; make[5]: *** Deleting file `src/core.so' ; make[4]: *** [src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ; -----------------------------------------------------------------------------------------------------------------------------------------; Any idea how to get rid of it?. Best,; LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/785:146,error,error,146,https://psicode.org,https://github.com/psi4/psi4/issues/785,9,"['Error', 'error']","['Error', 'error']"
Availability,"Dear all, . I try to compile PSI4 from github with intel 2017 compiler; CXX=icpc CC=icc cmake .. , however i get some errors.; Please see the attached file.; [psi4_error.txt](https://github.com/psi4/psi4/files/601557/psi4_error.txt). LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522:118,error,errors,118,https://psicode.org,https://github.com/psi4/psi4/issues/522,1,['error'],['errors']
Availability,"Dear all, . when using eom-ccsd module, i get the following error : . -----------------------------------------------------------------------------------------------; Seeking states with multiplicity of 1; Obtaining initial guess from singles-singles block of Hbar...Done. Iter=1 L=8 Out-of-core algorithm not yet coded for NN or TT DGEMM.; Error in: contract444; -----------------------------------------------------------------------------------------------. however, when i increase the number of frozen virtual orbitals, the error disappears !. here the input for which i get the error : . molecule pentamer { ; O -2.611 -0.00565 0.45789 ; O -1.30452 2.25724 -0.45568 ; O -2.611 4.51335 0.45789 ; O 1.30257 2.25385 0.45789 ; O -1.301 2.2647 -3.22291 ; H -2.63261 -0.00107 1.44733 ; H -2.63261 4.51793 1.44733 ; H 1.28096 2.25843 1.44733 ; H -1.31578 2.28044 -2.23347 ; H -1.7735 3.07887 -3.52876 ; H 0.36131 2.25462 0.1513 ; H -3.55226 -0.00488 0.1513 ; H -3.55226 4.51412 0.1513 ; H -1.78841 3.05064 -0.11356 ; H -1.78963 1.46139 -0.12277; units ang; SYMMETRY C1; }. set basis aug-cc-pvdz ; set scf_type df; set guess sad; set reference rhf; set e_convergence 1e-05; set d_convergence 1e-05; set ints_tolerance 1e-08. set FROZEN_DOCC [10]; set frozen_uocc [15]. #set freeze_core true; set roots_per_irrep [8]; set maxiter 100000; property('eom-ccsd', properties=['oscillator_strength'])",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/523:60,error,error,60,https://psicode.org,https://github.com/psi4/psi4/issues/523,4,"['Error', 'error']","['Error', 'error']"
Availability,"Dear all,. I am new at psi4, and I want to run sapt using the mid-bonds. I pick up the sapt3 example to test it, but I got the following error . Memory set to 953.674 MiB by Python driver.; SAPT does not make use of molecular symmetry, further calculations in C1 point group. Traceback (most recent call last):; File ""/opt/psi4/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 43, in <module>; File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/opt/psi4/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 3151, in run_sapt; raise ValidationError('SAPT requires active molecule to have 2 fragments, not %s.' % (nfrag)). ValidationError: SAPT requires active molecule to have 2 fragments, not 3. Can somebody tell me what I am doing wrong?. Thanks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936:137,error,error,137,https://psicode.org,https://github.com/psi4/psi4/issues/936,1,['error'],['error']
Availability,"Dear all,. I am trying to compile psi4 on a supercomputer, which i don't have a root access to. It is based on Xeons and has the following software avaliable: . gcc/5.2.0, pgi/12.9. intel/13.1.0, intel/15.0.090. mkl/4.0.2.146, mkl/11.2.0. impi/4.0.3, impi/4.1.0-32bit, impi/4.1.0, impi/4.1.0-ofa, impi/5.0.1, impi/5.0.1-ofa. openmpi/1.5.5-gcc, openmpi/1.5.5-icc, openmpi/1.8.4-gcc, openmpi/1.8.4-icc, openmpi/1.6.5-gcc, openmpi/1.6.5-icc. I choosed impi/5.0.1 and mkl/11.2.0.; I have tried to use both intel compiler versions to compile ""master"" and ""0.3 release from 5 Aug 2015"" versions. All times I have failed. With the intel/15.0.090 compilers it even fails on the ./setup script as follows:. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Debug/cmTC_e39a7; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11 _regex/CMakeFiles/CMakeTmp/Development/cmTC_e39a7. And with the intel/13.1.0 compilers ./setup runs successfully. To avoid crushes I have changed -std=g++98 to -std=c++11 in the CMAKE_CXX_FLAGS:STRING in the CMakeCache.txt and followed the post http://forum.psicode.org/t/undefined-git-version/61/3 in case of ""0.3 release"". Thus in case of both versions of psi4 using the intel/13.1.0 compilers I have ended with:. ..........; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_efp.cc.o; [ 99%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/export_cubeprop.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/clean.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/create_new_plugin.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/script.cc.o; [100%] Building CXX object src/bin/psi4/CMakeFiles/psi4.dir/set_memory.cc.o; [",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:704,Error,Error,704,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['Error'],['Error']
Availability,"Dear all,. I just made a clone of the psi4public. However, I got the error message ""Cannot find source file sapt_dft.cc"" when trying to compile psi4 (in a directory ""psi4public/build"") by either ""../configure.cmake"" or ""cmake .."". Is it a bug in psi4? Thank you. Cheers; Gao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/55:69,error,error,69,https://psicode.org,https://github.com/psi4/psi4/issues/55,1,['error'],['error']
Availability,"Dear all,. ```; I tried to install the latest PSI4 on my PC, whose operating system is Fedora 14. I have passed the steps ""./configure --with-opt=-O2"" and ""make"" successfully according to PSI4's manual. However, I met a trouble in ""make tests"". One of the error report is pasted below:; ```. ---. echo ""Testing omp2_5-grad1...""; Testing omp2_5-grad1...; make -C omp2_5-grad1; true; make[2]: Entering directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'; PSIO_ERROR: unit = 32, errval = 5; PSIO_ERROR: 5 (file not open or open call failed); Traceback (most recent call last):; File ""<string>"", line 38, in <module>; File ""/usr/local/src/psi4/lib/python/driver.py"", line 671, in gradient; procedures['gradient'][lowername](lowername, **kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 459, in run_omp2_5_gradient; run_omp2_5(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 440, in run_omp2_5; scf_helper(name, *_kwargs); File ""/usr/local/src/psi4/lib/python/proc.py"", line 757, in scf_helper; e_scf = psi4.scf(precallback, postcallback); RuntimeError: PSIO Error; file: /usr/local/src/psi4/src/lib/libpsio/error.cc; line: 116P; make[2]: **\* [omp2_5-grad1.passed] Error 1; ## make[2]: Leaving directory `/usr/local/src/psi4/objdir/tests/omp2_5-grad1'. There are also many other error report which are similar to this. I am wondering what cause these errors and how can I fix them. Can you help me to install PSI4 successfully? . Looking forward to any comments and suggestions! Many thanks!. Best Regards; Xin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/56:256,error,error,256,https://psicode.org,https://github.com/psi4/psi4/issues/56,7,"['Error', 'echo', 'error']","['Error', 'echo', 'error', 'errors']"
Availability,"Dear colleagues,. first, please let me again send your whole team a big, big, „Thank you!“ for making this excellent software available to the whole scientific community without barriers like money etc. Then, it seems I hit a bug:. I ran PSI4 (see attached input and output files for details) on a Linux cluster and reproduced the problem in detail on my MacBook. Non-relativistic:. CCSD/def2-SVP OK; CCSD/Jorge-DZP-DKH OK; DF-CCSD/def2-SVP			OK; CD-CCSD/def2-SVP			OK; CD-CCSD/Jorge-DZP-DKH		OK. FNO-CCSD/def2-SVP OK; FNO-CCSD/Jorge-DZP-DKH OK; DF-FNO-CCSD/def2-SVP		OK; CD-FNO-CCSD/def2-SVP		OK; CD-FNO-CCSD/Jorge-DZP-DKH	OK. Relativistic: set relativistic dkh. CCSD/def2-SVP				OK; CCSD/Jorge-DZP-DKH			OK; DF-CCSD/def2-SVP			crashed; CD-CCSD/def2-SVP			crashed; CD-CCSD/Jorge-DZP-DKH		crashed. FNO-CCSD/def2-SVP			OK; FNO-CCSD/Jorge-DZP-DKH 		OK; DF-FNO-CCSD/def2-SVP		crashed; CD-FNO-CCSD/def2-SVP		crashed; CD-FNO-CCSD/Jorge-DZP-DKH	crashed. Hope, you find this helpful. With best regards. Ludger Palm; ludger.palm@gmx.de. Jorge-DZP-DKH from https://www.basissetexchange.org. [jorge-dzp-dkh.gbs.txt](https://github.com/psi4/psi4/files/4133158/jorge-dzp-dkh.gbs.txt). [h2.in.txt](https://github.com/psi4/psi4/files/4133171/h2.in.txt); [h2.out.txt](https://github.com/psi4/psi4/files/4133175/h2.out.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1791:126,avail,available,126,https://psicode.org,https://github.com/psi4/psi4/issues/1791,1,['avail'],['available']
Availability,"Dear developers,; I am doing optimization of geometry, but I got this error. ""ERROR: ERI - Libint cannot handle angular momentum this high (6) for first derivatives.; Rebuild Libint with MAX_AM_ERI at least 7."". Could you please show me how to fix it? PSI4 1.1 was installed from miniconda. Thank you. Kind regards,. Hassenky",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/744:70,error,error,70,https://psicode.org,https://github.com/psi4/psi4/issues/744,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Dear devs,. I've been running some dihedral-constrained optimizations on capped dipeptides, and a small percentage of them fail. Examples are attached. In the first example, the optimizer takes a huge step and ends up in a crazy geometry. I worked around it by setting `intrafrag_step_limit 0.1`. Unfortunately I lost the .intco file, but the output file shows that two dihedrals have been constrained. https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize.xyz. In the second example, the energy oscillates with periodicity 3. . https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.dat; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.out; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.xyz; https://dl.dropboxusercontent.com/u/5381783/psi4-opt/optimize-1.THR.intco. I'll try to work around this by using `step_type nr`, but thought it was worth reporting nonetheless. Thanks,; - Lee-Ping Wang (Postdoc, Stanford)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/18:1070,Ping,Ping,1070,https://psicode.org,https://github.com/psi4/psi4/issues/18,1,['Ping'],['Ping']
Availability,Dipole polarizabilities error when linear dependencies are removed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1998:24,error,error,24,https://psicode.org,https://github.com/psi4/psi4/issues/1998,1,['error'],['error']
Availability,"Discovered while remedying test cases where reference numbers needed to be changed due to my upcoming #1143 fix. DFOCC gradients are not symmetrized. If you'd like an example, just look in the [reference output files](https://github.com/psi4/psi4/blob/master/tests/dfomp3-grad2/output.ref#L603-L604)! Symmetry of the overlap gradient is broken in the seventh decimal place. The other terms have some errors, but much smaller. That the overlap gradient is most afflicted is unsurprising, since the overlap integrals are contracted against one of the many ""generalized Fock matrices"". This one depends on the 1RDM and 2RDM, which are not currently symmetrized. I'm hoping to include this in 1.3 with the #1143 fix, since this bug could lead to optimizations failing, as we saw with DFMP2 two weeks ago (#1483). Because individual terms are printed, the individual terms need to be symmetrized, and it may take me some time to find where the `symmetrize` calls need to be placed. If it takes too long, I'm fine with delaying to 1.4.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1504:400,error,errors,400,https://psicode.org,https://github.com/psi4/psi4/issues/1504,1,['error'],['errors']
Availability,"Discovered yet again when trying to reproduce an issue reported on the forums. When I defined a custom basis set but forgot to include the final quadruple asterisk, the error message appeared when I attempted the scf and did not leave me any clues about what was wrong in the basis set. Such errors should be caught in the basis set input phase, where a usual error message can be printed. It would be useful to try a few other basis inputs that break the parser and verify that a useful error message is printed in the parsing phase.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1332:169,error,error,169,https://psicode.org,https://github.com/psi4/psi4/issues/1332,4,['error'],"['error', 'errors']"
Availability,Documentation fails to build with perl 5.22 and reports the following error:. Can't use 'defined(%hash)' (Maybe you should just omit the defined()?); at /build/psi4-0.3/doc/sphinxman/document_options_c.pl line 150.; doc/sphinxman/CMakeFiles/sphinxman.dir/build.make:106: recipe for; target 'doc/sphinxman/source/autodoc_abbr_options_c.rst' failed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/200:70,error,error,70,https://psicode.org,https://github.com/psi4/psi4/pull/200,1,['error'],['error']
Availability,Documentation maintenance for 1.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2109:14,mainten,maintenance,14,https://psicode.org,https://github.com/psi4/psi4/issues/2109,1,['mainten'],['maintenance']
Availability,Documentation: Obtaining Maintenance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2125:25,Mainten,Maintenance,25,https://psicode.org,https://github.com/psi4/psi4/issues/2125,1,['Mainten'],['Maintenance']
Availability,"During an optimization where an initial hessian by finite difference is requested, the gradient is requested at the starting geometry _twice_. Once by the optimizer and once to determine what modes should be projected in the finite difference treatment. The SCF and final energies agree, but for some reason, the estimated MP2 energies disagree, and the RMS lambda errors don't match either. In this example, the MP2 correlation energy the first time is -0.018978215515226, but the MP2 correlation energy the second time is -0.017979235543976. An MP2 computation agreed with the first correlation energy. Minimal input file below. I've seen this bug on systems with UHF and systems of C1 symmetry. I want this fixed ASAP, just in case the bug does affect energies in some way I haven't seen, so I'll take this myself.; ```; molecule mol {; 0 1 ; units bohr; H; H 1 1.8 ; }. set {; reference rhf ; basis sto-3g; scf_type pk; dcft_functional odc-12; full_hess_every 0; }. optimize('dcft'); ````",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1309:365,error,errors,365,https://psicode.org,https://github.com/psi4/psi4/issues/1309,1,['error'],['errors']
Availability,ECP Convergence Failures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1338:16,Failure,Failures,16,https://psicode.org,https://github.com/psi4/psi4/issues/1338,1,['Failure'],['Failures']
Availability,EOM-CC3 Diagonalization Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1931:24,Failure,Failure,24,https://psicode.org,https://github.com/psi4/psi4/issues/1931,1,['Failure'],['Failure']
Availability,EOM-CCSD error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/523:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/523,1,['error'],['error']
Availability,ERROR: ERI - Libint cannot handle angular momentum this high (6) for first derivatives.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/744:0,ERROR,ERROR,0,https://psicode.org,https://github.com/psi4/psi4/issues/744,1,['ERROR'],['ERROR']
Availability,"Edit: from forum post: http://forum.psicode.org/t/error-for-sapt-dmp2-calculation/1691; running `psi4 -p myprefix <input_file>` for a delta_mp2 SAPT calculations results in:. ```; PSIO_ERROR: Can't find TOC Entry DFMP2 Jm12; PSIO_ERROR: unit = 97, errval = 13; PSIO_ERROR: 13 (no such TOC entry); ```. uncommenting [this](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/change_namespace.cc#L69) , applied [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L3918) reveals (at least); the 97 file (the Jm12 metric) still uses the default prefix (`psi`):. ```; /Users/kruse/scratch/PSI4/psi.44624.dimer.97; /Users/kruse/scratch/PSI4/psi.44624.monomerA.97; ```. ---; example input; ```; molecule water_dimer {; 0 1; O -0.003244 1.511274 0.000000; H 0.070125 0.540684 0.000000; H 0.900899 1.845934 0.000000; --; 0 1; O -0.003244 -1.375885 0.000000; H -0.459556 -1.734864 0.771839; H -0.459556 -1.734864 -0.771839. units angstrom; no_reorient; symmetry c1; }; set basis sto-3g; energy('sapt2+(3)dmp2'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1874:50,error,error-for-sapt-,50,https://psicode.org,https://github.com/psi4/psi4/issues/1874,1,['error'],['error-for-sapt-']
Availability,"Either both of the below attempts to read a wfn in for an SCF gradient should be trapped by an error, or neither should. Right now, the first works fine, but the bottom segfaults. ```; h2o = psi4.geometry(""""""; O ; H 1 0.96; H 1 0.96 2 104.5; """"""); wfn=psi4.energy('scf/def2-svp', molecule=h2o, return_wfn=True)[1]; # No segfault with the un-serialized wfn.; psi4.gradient('scf/def2-svp', molecule=wfn.molecule(), ref_wfn=wfn). wfn.to_file('my_wfn'); wfn_new = psi4.core.Wavefunction.from_file('my_wfn'); # Segfault with the un-serialized wfn.; psi4.gradient('scf/def2-svp', molecule=wfn_new.molecule(), ref_wfn=wfn_new) # Segfault here.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2712:95,error,error,95,https://psicode.org,https://github.com/psi4/psi4/issues/2712,1,['error'],['error']
Availability,Error Extraction Mangles Message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1920:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/1920,1,['Error'],['Error']
Availability,Error about pybind11 in cmake while creating a new psi4 plugin,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/775:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/775,1,['Error'],['Error']
Availability,Error computing atomization energy of Al atom,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2858:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/2858,1,['Error'],['Error']
Availability,Error in normalization of h basis functions,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1574:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/1574,1,['Error'],['Error']
Availability,Error when compiling on a supercomputer; ld: cannot find -lboost_mpi-1_57,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['Error'],['Error']
Availability,Error when making libmints,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/188:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/188,1,['Error'],['Error']
Availability,Error when trying to use CP-corrected DBOC with Psi4/CFour,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3217:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/3217,1,['Error'],['Error']
Availability,Error with X2C and Decontracted Basis Set Input,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/662:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/662,1,['Error'],['Error']
Availability,Error with make -j on MacBook Air,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/396:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/396,1,['Error'],['Error']
Availability,Error: “Unable to find a basis set…” with CFOUR,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608:0,Error,Error,0,https://psicode.org,https://github.com/psi4/psi4/issues/2608,1,['Error'],['Error']
Availability,"Every link I've tried on the [home page](https://psicode.org/psi4manual/master/index.html) gives me a ""Page Not Found"" error. Here's just one example: https://psicode.org/introduction. If I add /psi4manual/master between psicode.org and /introduction, I can get the correct page: https://psicode.org/psi4manual/master/introduction. I also tried the links in the releases page, and all of them also gave ""Page Not Found"" errors:; - https://psicode.org/psi4manual/1.8.1/; - https://psicode.org/psi4manual/1.7.0/; - https://psicode.org/psi4manual/1.6.1/; - https://psicode.org/psi4manual/1.6.0/. The links for 1.4 and 1.5 actually do work, so maybe everything before that does too.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3042:119,error,error,119,https://psicode.org,https://github.com/psi4/psi4/issues/3042,2,['error'],"['error', 'errors']"
Availability,"Example input below. Seems method and integral-type independent. Using `ref_wfn` with an existing wfn works. The issue thus seems caused by the writing or reading. I tested few other modules (fnocc, ccenergy, dfmp2) and those seem fine. (found through http://forum.psicode.org/t/post-scf-with-custom-matrices/1701). ```; molecule water6 {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; symmetry c1; }. memory 2 GiB; set {; ints_tolerance 1e-10; basis def2-SVP; }. set mp2_type df; set cc_type df; set qc_module occ; set scf_type df; e,wfn=energy('scf',return_wfn=True); wfn.to_file('my_wfn'); wfn_new = Wavefunction.from_file('my_wfn'); energy('mp2',ref_wfn=wfn_new); #energy('MP2',ref_wfn=wfn) # <-- works; ```. results in segmentation fault after printing the MO space.; For example for conventional MP2:; ```; IRREP FC OCC VIR FV; ==============================; A 0 5 19 0; ==============================. Memory is 2147 MB; Cost of iabc is 0 MB; Cost of abcd is 0 MB; Switching to the incore algorithm for iabc..; Switching to the incore algorithm for abcd.. /Users/kruse/bin/psi4dev: line 1: 80585 Segmentation fault: 11 /Users/kruse/qc/psi4.bin/bin/psi4 -s . $@; ```. as per wish, pinging @JonathonMisiewicz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1851:790,fault,fault,790,https://psicode.org,https://github.com/psi4/psi4/issues/1851,3,"['fault', 'ping']","['fault', 'pinging']"
Availability,"Example:; ```; frame_metadata = {; 'system_name': '{C#N}_O'; }. molecule {; 0 1; C 0.0000000000 0.0000000000 0.0000000000; N -0.3650589000 0.4281249000 1.0136910000; H 0.2430928700 -0.5101510800 -0.9168319000. symmetry c1; no_com; no_reorient; }. energy(""hf""); ```. The psithon interpreter turns this into ; ```; import psi4; from psi4 import *; from psi4.core import *; from psi4.driver.diatomic import anharmonicity; from psi4.driver.gaussian_n import *; from psi4.driver.aliases import *; from psi4.driver.driver_cbs import xtpl_highest_1, scf_xtpl_helgaker_2, scf_xtpl_helgaker_3, corl_xtpl_helgaker_2; from psi4.driver.wrapper_database import database, db, DB_RGT, DB_RXN; from psi4.driver.wrapper_autofrag import auto_fragments; from psi4.driver.constants.physconst import *; psi4_io = core.IOManager.shared_object(); psi4_io.set_default_path(""/state/partition1/tmp/""); geometry(""""""; 0 1; H; H 1 0.74; """""",""blank_molecule_psi4_yo""); frame_metadata = {; 'system_name': '{; }; core.efp_init(); geometry(""""""; 0 1; C 0.0000000000 0.0000000000 0.0000000000; N -0.3650589000 0.4281249000 1.0136910000; H 0.2430928700 -0.5101510800 -0.9168319000. symmetry c1; no_com; no_reorient; """"""); core.IO.set_default_namespace(""""); energy(""hf""); ```. Which unsurprisingly gives a syntax error.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/655:1276,error,error,1276,https://psicode.org,https://github.com/psi4/psi4/issues/655,1,['error'],['error']
Availability,"Excerpt of a density-fitted calculation; ```; ==> Integral Setup <==. DFHelper Memory: AOs need 5.003 GiB; user supplied 19.539 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: No; wK tasked: No; OpenMP threads: 4; Memory [MiB]: 20008; Algorithm: Disk; Schwarz Cutoff: 1E-12; Mask sparsity (%): 35.4523; Fitting Condition: 1E-10; ```; That is, there's two bugs here: the code is not using in-core AOs, and the printout doesn't match what the code is actually doing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666:322,Mask,Mask,322,https://psicode.org,https://github.com/psi4/psi4/issues/1666,1,['Mask'],['Mask']
Availability,"Explanation:; When attempting to run gradients with CC2 or CC3 using density fitting (but not CCD, CCSD, or CCSD(T), the computation fails when attempting to initialize a new DPD instance, as the old one was not properly freed. When testing with BCCD, it failed due to the DF_BASIS_CC not being automatically set (and it didn't seem to accept my attempts to set it). Version: 1.4rc1; Installation source: conda install psi4 -c psi4/label/dev. Error message; ```; Traceback (most recent call last):; File ""/Users/jvandezande/progs/Anaconda3/envs/cc/bin/psi4"", line 337, in <module>; exec(content); File ""<string>"", line 24, in <module>; File ""/Users/jvandezande/progs/Anaconda3/envs/cc/lib//python3.7/site-packages/psi4/driver/driver.py"", line 675, in gradient; return driver_cbs._cbs_gufunc(gradient, name, ptype='gradient', **kwargs); File ""/Users/jvandezande/progs/Anaconda3/envs/cc/lib//python3.7/site-packages/psi4/driver/driver_cbs.py"", line 1960, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/jvandezande/progs/Anaconda3/envs/cc/lib//python3.7/site-packages/psi4/driver/driver.py"", line 716, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jvandezande/progs/Anaconda3/envs/cc/lib//python3.7/site-packages/psi4/driver/procrouting/proc.py"", line 2731, in run_ccenergy_gradient; grad = derivobj.compute(). RuntimeError:; Fatal Error: Attempting to initialize new DPD instance before the old one was freed.; Error occurred in file: /Users/github/builds/conda-builds/psi4-multiout_1615423313523/work/psi4/src/psi4/libdpd/init.cc on line: 68; The most recent 5 function calls were:; ```. Minimal example; ```; molecule {; H; H 1 1; }. set cc_type df. gradient('CC2/cc-pVDZ'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2136:443,Error,Error,443,https://psicode.org,https://github.com/psi4/psi4/issues/2136,3,['Error'],['Error']
Availability,"FAILED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_cas <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_psi4.py FAILED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_cc <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_psi4.py FAILED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_psi4.py FAILED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_psi4.py FAILED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_psi4.py FAILED. ==================================================================== FAILURES ====================================================================; ____________________________________________________________________ test_erd ____________________________________________________________________. @using_erd; def test_erd():; """"""erd/scf5""""""; ; psi4.set_options({'integral_package': 'ERD'}); > _test_scf5(). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py:617: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; /home/joao/miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py:487: in _test_scf5; E = psi4.energy('scf', molecule=singlet_o2); /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/driver.py:460: in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1942: in run_scf; scf_wfn = scf_helper(name, **kwargs); /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/pr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:5442,FAILURE,FAILURES,5442,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['FAILURE'],['FAILURES']
Availability,"FF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:1920,Error,Error,1920,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"FF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; fil",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:1802,Error,Error,1802,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"Fails on methyl chloride, succeeds on diatomic chlorine.; Did not test larger alkyl groups.; CH3Cl was pre-optimized at HF/6-31G(d). ; Attempted RHF single point energy failed to converge with these basis sets:. > 6-311g(3df); > 6-311g(3df,p); > 6-311g(3df,2p); > 6-311g(3df,2pd); > 6-311g(3df,3pd); > aug-cc-pV(D+d)Z; > aug-cc-pV(Q+d)Z; > aug-cc-pV(T+d)Z; > g3mp2large. They all have at least 3df polarization, some more. Not all heavily polarized 6-311G(*) basis sets contain both C, Cl so these basis sets are only 5 of the 51 6-311?G(etc) sets. Doubtless, the other 10 sets with diffuse functions (e.g., 6-311++G(3df)) will fail but take longer at it. Though large, the 7152 Mb memory allocation requirement did not exhaust available shared memory. G3(MP2) method requires the g3mp2large basis set and the Wilson Group's cc-CA methods require the aug-cc-pV([DQT]+d)Z basis sets. Minimal test case attached.; [CH3Cl-3df-fail.zip](https://github.com/psi4/psi4/files/214171/CH3Cl-3df-fail.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/340:728,avail,available,728,https://psicode.org,https://github.com/psi4/psi4/issues/340,1,['avail'],['available']
Availability,Failure on compiling plugins,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/565:0,Failure,Failure,0,https://psicode.org,https://github.com/psi4/psi4/issues/565,1,['Failure'],['Failure']
Availability,Fatal Error in core.so,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1984:6,Error,Error,6,https://psicode.org,https://github.com/psi4/psi4/issues/1984,1,['Error'],['Error']
Availability,"File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181:2909,Error,Error,2909,https://psicode.org,https://github.com/psi4/psi4/issues/3181,2,['Error'],['Error']
Availability,File Not Found Error for scratch json_out file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/944:15,Error,Error,15,https://psicode.org,https://github.com/psi4/psi4/issues/944,1,['Error'],['Error']
Availability,"First reported [on forums](http://forum.psicode.org/t/polarizability-error-radical-anion/2240). The following MWE crashes:; ```; molecule {; O; H 1 1.0; H 1 1.0 2 104.5; }. set reference uhf. psi4.properties(""scf/cc-pVDZ"", properties=[""DIPOLE_POLARIZABILITIES""]); ```. Errors are. ```; Fatal Error: UHF::onel_Hx expect incoming vector to alternate A/B; ```. and. ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: UHF::onel_Hx expect incoming vector to alternate A/B !; ! Error occurred in file: !; ! /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libscf_solver/uhf.cc on line: !; ! 744 !; ! The most recent 5 function calls were: !; ! !; !----------------------------------------------------------------------------------!; ```. It looks like an easy case of arguments not being passed correctly.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2265:69,error,error-radical-anion,69,https://psicode.org,https://github.com/psi4/psi4/issues/2265,5,"['Error', 'error']","['Error', 'Errors', 'error-radical-anion']"
Availability,Fix GEMM errors in presence of linear dependencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2232:9,error,errors,9,https://psicode.org,https://github.com/psi4/psi4/pull/2232,1,['error'],['errors']
Availability,Fix PCM test failure in psi4 --test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/701:13,failure,failure,13,https://psicode.org,https://github.com/psi4/psi4/pull/701,1,['failure'],['failure']
Availability,Fix a filesystem error in psi.driver.cbs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1442:17,error,error,17,https://psicode.org,https://github.com/psi4/psi4/pull/1442,1,['error'],['error']
Availability,Fix a memory error in psi::MOInfo::read_mo_spaces,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1427:13,error,error,13,https://psicode.org,https://github.com/psi4/psi4/pull/1427,2,['error'],['error']
Availability,Fix buffer overflow error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3215:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/pull/3215,1,['error'],['error']
Availability,Fix compilation error for C++20,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3061:16,error,error,16,https://psicode.org,https://github.com/psi4/psi4/pull/3061,1,['error'],['error']
Availability,Fix error in MBE VMFC Hessian,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2389:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/pull/2389,1,['error'],['error']
Availability,Fix error in libtrans,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2857:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/pull/2857,1,['error'],['error']
Availability,"Fix for issue #231 . When I made the linear bend code more robust recently, I tightened up enforcement of nonsense torsions. In #231, the crash appears to be bad luck mostly, as a dozen iterations into the back-transformation on geometry step 3, we just happen to hit a bogus bend. Turns out this only happened after the iterative procedure started diverging anyway, so I am adding just a test that gives up faster.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/233:59,robust,robust,59,https://psicode.org,https://github.com/psi4/psi4/pull/233,1,['robust'],['robust']
Availability,Fix inconsistencies in formatted checkpoint files,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1475:33,checkpoint,checkpoint,33,https://psicode.org,https://github.com/psi4/psi4/pull/1475,1,['checkpoint'],['checkpoint']
Availability,Fix libxc download location,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1688:10,down,download,10,https://psicode.org,https://github.com/psi4/psi4/pull/1688,1,['down'],['download']
Availability,Fix memory error in MOInfoBase::convert_int_array_to_vector,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1480:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/pull/1480,1,['error'],['error']
Availability,Fix memory error in psi::IntegralTransform::process_spaces,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1488:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/pull/1488,1,['error'],['error']
Availability,Fix memory error in psi::MultipolePropCalc::compute_mo_extents,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1440:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/pull/1440,1,['error'],['error']
Availability,Fix memory error in psi::ccresponse::roa,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1476:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/pull/1476,1,['error'],['error']
Availability,Fix memory error in psi::detci::CIWavefunction,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1250:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/pull/1250,1,['error'],['error']
Availability,Fix some memory errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1248:16,error,errors,16,https://psicode.org,https://github.com/psi4/psi4/pull/1248,1,['error'],['errors']
Availability,Fix type conversion error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2245:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/pull/2245,1,['error'],['error']
Availability,Fix vector index error in psi::PKMgrDisk::batch_sizing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237:17,error,error,17,https://psicode.org,https://github.com/psi4/psi4/pull/1237,1,['error'],['error']
Availability,Fix vector indexing error in psi::IntegralTransform::process_spaces,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/pull/1220,1,['error'],['error']
Availability,Fixed the error in E(30)ind (1677),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1803:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/pull/1803,1,['error'],['error']
Availability,"Fixes #1196. As an example, the following input file:; ```; memory 600 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; energy('scf'). foo = [1, 2]; print(foo[3]); ```. ...now prints the following upon termination... ```; *** tstop() called on Jonathons-MacBook-Pro.local at Tue Sep 4 13:22:51 2018; Module time:; user time = 0.52 seconds = 0.01 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; Total time:; user time = 0.52 seconds = 0.01 minutes; system time = 0.05 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes. Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdirfindif/stage/usr/local/psi4/bin/psi4"", line 270, in <module>; exec(content); File ""<string>"", line 30, in <module>. IndexError: list index out of range. Printing out the relevant lines from the post-processed input file:; """""",""h2o""); core.IO.set_default_namespace(""h2o""); core.set_global_option(""BASIS"", ""cc-pVDZ""); energy('scf'); foo = [1, 2]; --> print(foo[3]). Psi4 stopped on: Tuesday, 04 September 2018 01:22PM; Psi4 wall time for execution: 0:00:00.78. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. ## Todos; - [x] Fixes #1196 - if an error occurs Py-side, the post-processed line of output that called it is displayed, plus five back and forwards, for context. ## Checklist; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1214:1159,error,error,1159,https://psicode.org,https://github.com/psi4/psi4/pull/1214,2,['error'],['error']
Availability,"Fixes #1638 . ## Description; Corrects some small errors in the documentation of the molden writer, plus improved formatting. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1641:50,error,errors,50,https://psicode.org,https://github.com/psi4/psi4/pull/1641,1,['error'],['errors']
Availability,Fixes #2940. Closes #2921. @mnottoli Could you quickly give this a second pair of eyes to check what I'm doing [here when I'm lowering the tolerance](https://github.com/psi4/psi4/blob/6173fba2dc820bba05918f3dfa599550704de4f5/tests/pytests/test_ddx.py#L112) is reasonable --- I'm thinking this is the escaped charge problem for this small system. Maybe we should just remove the test alltogether?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2952:139,toler,tolerance,139,https://psicode.org,https://github.com/psi4/psi4/pull/2952,1,['toler'],['tolerance']
Availability,"Fixes a bug reported by @hokru, where PSIO errors would result for large DFMP2 gradient computations. I forgot to rename a PSIO entry during #1923. . This bug wasn't any more serious because it would only trigger when a block-based algorithm requested multiple blocks. For DFMP2, this would be a large computation indeed. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2033:43,error,errors,43,https://psicode.org,https://github.com/psi4/psi4/pull/2033,1,['error'],['errors']
Availability,Fixes os.environ error in setup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/329:17,error,error,17,https://psicode.org,https://github.com/psi4/psi4/pull/329,1,['error'],['error']
Availability,"Footnote [2] of the capabilities table in the manual is a little unclear about what methods are available:. RHF and UHF reference are available, however the latter one should be; requsted from DFOCC module. DF-MP2 is recommended as a faster; alternative. Update and revise manual. Check with Ugur about ROHF. Make appropriate defaults.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/106:96,avail,available,96,https://psicode.org,https://github.com/psi4/psi4/issues/106,2,['avail'],['available']
Availability,"For Psi4 1.0.54 [Git: Rev {master} 8d4cec3 dirty]; Hi,. When executing `energy(cbs,...)` and `delta_basis` equals a `corl_basis`, then the final MP2/CBS value is clearly wrong, and as a result the CBS value as well. Either E(CBS) will be too large or too small.; A typical output:. ```; ---------------------------------------------------------------------------------------------------------; scf hf / jun-cc-pvqz -152.13112737 xtpl_highest_1; corl mp2 / jun-cc-pv[tq]z 110.40871391 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / jun-cc-pvtz -0.02698189 xtpl_highest_1; total CBS -41.74939535 ; -----------------------------------------------------------------------------------; ```. The previous values (""Stages"", ""Components"") all look ok at a glance. ```; Eg:; molecule test {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; O -1.551007 -0.114520 8.000000; H -1.934259 0.762503 8.000000; H -0.599677 0.040712 8.000000; }. memory 55 GB. set global {; cc_type df; INTS_TOLERANCE 1e-11; freeze_core true; }. # ok; #energy(cbs,scf_basis='jun-cc-pVQZ',corl_wfn='mp2', corl_basis='jun-cc-pv[tq]z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='fno-ccsd(t)',delta_basis='jun-cc-pVDZ'). # print error; energy(cbs,scf_basis='jun-cc-pVQZ',corl_wfn='mp2',corl_basis='jun-cc-pv[tq]z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='fno-ccsd(t)',delta_basis='jun-cc-pVTZ'). # error2, although this calc makes less sense...; #energy(cbs,scf_basis='aug-cc-pVQZ',corl_wfn='mp2',corl_basis='jun-cc-pv[tq]z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='fno-ccsd(t)',delta_basis='jun-cc-pVQZ'). ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/528:1242,error,error,1242,https://psicode.org,https://github.com/psi4/psi4/issues/528,1,['error'],['error']
Availability,"For a simple S2 molecule I get a failure to converge (in the default 100 iterations at least) when using XC functionals (tested with PBE and BP86), but not with hybrid (tested with PBE0). [S2_PBE.log](https://github.com/psi4/psi4/files/2131171/S2_PBE.log). sample input file:; ```; molecule mol {; 0 1; S 0.0000000000 0.0000000000 -0.9555689065; S 0.0000000000 0.0000000000 0.9555689065; }. mol.update_geometry(); mol.symmetrize(0.01). set scf_type df; set basis pcsseg-1. set DYNAMIC_LEVEL 1; #E, wfn = optimize('PBE0',return_wfn=True) # works; E, wfn = optimize('PBE',return_wfn=True) # fails; ```; Any ideas to why this happens, and what I can do to help avoid this problem?. (also tested on v1.2-rc3, same issue)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1054:33,failure,failure,33,https://psicode.org,https://github.com/psi4/psi4/issues/1054,1,['failure'],['failure']
Availability,For example [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsi4util/PsiOutStream.cc#L46) it doesn't mention the file name and the system error that has occurred.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2799:155,error,error,155,https://psicode.org,https://github.com/psi4/psi4/issues/2799,1,['error'],['error']
Availability,"For fitting basis sets, SAPT mostly uses `DF_BASIS_SAPT`, which defaults to RI (http://psicode.org/psi4manual/master/sapt.html#df-basis-sapt). The Elst10 and Exch10 are governed by `DF_BASIS_ELST`, which defaults to `DF_BASIS_SAPT` (which defaults to RI). However, this can go awry for heavy elements, whereupon it is recommended to use JK for `DF_BASIS_ELST`. An important bit of the reasoning behind this is that for the small basis sets used for SAPT0, RI is smaller than JK (for cc-pVDZ, 28 to 46). If we're going to change the defaults so that everything works at its best without intervention, now is the time to do it.; - [ ] Run a A·T 0/jadz with SAPT/ELST RI/RI, RI/JK, JK/JK to see if there's significant time penalties; - [ ] If that's not significant, should ELST always be JK to suppress failure mode?; - [ ] Do we want consistent fitting basis used across all terms?; - [ ] If any changes made, update Note in docs about changes in Spring 2016. sapt2 is the most relevant test case",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/317:801,failure,failure,801,https://psicode.org,https://github.com/psi4/psi4/issues/317,1,['failure'],['failure']
Availability,"For historical reasons, Mk-MRCC was only implemented in Psi4 assuming small active spaces, and `psimrcc` rightly gives you [two](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/psimrcc/main.cc#L114-L124) [warnings](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/psimrcc/main.cc#L130-L143) that the equations it is using are not the exact Mk-MRCC equations if your active space is any larger. If you use Mk-MRPT2, the first warning fires, but the second does not. Further, the error message is specific to Mk-MRCC and says nothing about Mk-MRPT2. Is the Mk-MRPT2 procedure implemented in `psimrcc` exact or approximate? If it's exact, we need to stop the first warning from firing for Mk-MRPT2. If it's approximate, we need to make sure the second warning does fire for Mk-MRPT2. I checked the original paper, but couldn't find a clear statement either way, and I'd rather not learn Mk-MRCC theory just to fix this error message. I'm going to get back to giving `psimrcc` a wavefunction, so I'll fix this as part of that PR. I need to touch this part of the logic anyways. @fevangelista? @andysim?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1877:491,error,error,491,https://psicode.org,https://github.com/psi4/psi4/issues/1877,2,['error'],['error']
Availability,"For the `fnocc` modules, [`cepa(0)` means `lccsd`](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L4655-L4660). I have only ever heard of `cepa(0)` meaning `lccd`. It is `lccd` in the `dct` module, it is `lccd` in the `occ` module, and it is `lccd` in the `dfocc` module. Can we make this consistent, or at least print a warning?. CEPA(0) is very important to my own research, and I had only ever heard of it as `lccd`. After doing some more digging, I've come across some sources that equate CEPA(0) and `lccsd`, but it seems to me to be a minority position. . Making this even more complicated, all requests for `cepa(0)` go to `fnocc`. `occ` and `dfocc` require `lccd`. `dct` also requires `cepa0`, but as a keyword rather than the energy name. Obligatory ping of @edeprince3 for `fnocc` issues and @loriab for defining methods consistently across modules and @jturney because this has been causing problems at CCQC.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1872:785,ping,ping,785,https://psicode.org,https://github.com/psi4/psi4/issues/1872,1,['ping'],['ping']
Availability,Formatted checkpoint files don't work,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/708:10,checkpoint,checkpoint,10,https://psicode.org,https://github.com/psi4/psi4/issues/708,1,['checkpoint'],['checkpoint']
Availability,"From forum: http://forum.psicode.org/t/polarizability-error-ao-mux-has-an-unrecognized-shape/1916/3. The error is `ERROR: ""AO Mux"" has an unrecognized shape. Must be either (36, 36) or (5, 31)`; https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/response/scf_response.py#L176; The `vector` here, has still the original size. DIdn't trace it any further. Made up example for testing:; ```; molecule mol {; 0 1; O 0.44260 -0.88720 -0.29490; H 0.73940 -0.26640 -0.96690; H 0.79240 -0.54630 0.53350; }. basis {; assign verydiff; [verydiff]; spherical; ****; H 0; S 4 1.00; 1.301000D+01 1.968500D-02; 1.962000D+00 1.379770D-01; 4.446000D-01 4.781480D-01; 1.220000D-01 5.012400D-01; S 1 1.00; 1.220000D-01 1.000000D+00; S 1 1.00; 0.0297400 1.0000000; P 1 1.00; 7.270000D-01 1.0000000; P 1 1.00; 0.1410000 1.0000000; ****; O 0; S 9 1.00; 1.172000D+04 7.100000D-04; 1.759000D+03 5.470000D-03; 4.008000D+02 2.783700D-02; 1.137000D+02 1.048000D-01; 3.703000D+01 2.830620D-01; 1.327000D+01 4.487190D-01; 5.025000D+00 2.709520D-01; 1.013000D+00 1.545800D-02; 3.023000D-01 -2.585000D-03; S 9 1.00; 1.172000D+04 -1.600000D-04; 1.759000D+03 -1.263000D-03; 4.008000D+02 -6.267000D-03; 1.137000D+02 -2.571600D-02; 3.703000D+01 -7.092400D-02; 1.327000D+01 -1.654110D-01; 5.025000D+00 -1.169550D-01; 1.013000D+00 5.573680D-01; 3.023000D-01 5.727590D-01; S 1 1.00; 3.023000D-01 1.000000D+00; S 1 1.00; 0.0189600 1.0000000; P 4 1.00; 1.770000D+01 4.301800D-02; 3.854000D+00 2.289130D-01; 1.046000D+00 5.087280D-01; 2.753000D-01 4.605310D-01; P 1 1.00; 2.753000D-01 1.000000D+00; P 1 1.00; 0.0185600 1.0000000; D 1 1.00; 0.1000 1.0000000; D 1 1.00; 0.1000 1.0000000; ****; }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1998:54,error,error-ao-mux-has-an-unrecognized-shape,54,https://psicode.org,https://github.com/psi4/psi4/issues/1998,3,"['ERROR', 'error']","['ERROR', 'error', 'error-ao-mux-has-an-unrecognized-shape']"
Availability,Gaussian FCHK Errors and Inefficiencies,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1272:14,Error,Errors,14,https://psicode.org,https://github.com/psi4/psi4/issues/1272,1,['Error'],['Errors']
Availability,General maintenance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/736:8,mainten,maintenance,8,https://psicode.org,https://github.com/psi4/psi4/pull/736,1,['mainten'],['maintenance']
Availability,Geometry optimization failures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/18:22,failure,failures,22,https://psicode.org,https://github.com/psi4/psi4/issues/18,1,['failure'],['failures']
Availability,Get useful info back after optimizer errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/881:37,error,errors,37,https://psicode.org,https://github.com/psi4/psi4/pull/881,1,['error'],['errors']
Availability,Getting SIGSEGV error on cc-pvdz calculation of simple ethanol molecule,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2930:16,error,error,16,https://psicode.org,https://github.com/psi4/psi4/issues/2930,2,['error'],['error']
Availability,"Greetings friends,; As per the developer wish list ( #402) it was decided that boost should be removed from Psi4 as there is little point in keeping it around when all the needed features are in C++11. When removing boost we gain:; - Fewer dependencies; - More canonical operations through C++ standards; - Simpler and more expressive python bindings; - Fewer python lib issues (in theory); - You will no longer get six pages of error messages when boost templates fail in some way; - Build simplification and faster compiler time; - Fewer compiler warning (lots from boost); - Less CI hassle; - There will be a party with cake and burning of a boost effigy (streamed and tweeted); ## . My primary goal is to tackle boost python and convert all existing code to PyBind11. Through this I will tackle the following boost libraries: python, tuple, lexical, shared_ptr, and math. I have a reasonable plan to accomplish this and initial tests show that I should be able to pull it off.; ## . However, there are other libraries that I could use help converting either in the form ideas or some of the grunt work. These are:. Boost filesystem:; - [x] `bin/fisapt/fisapt.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/create_new_plugin.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/create_new_plugin.cc:#include <boost/filesystem/operations.hpp>`; - [x] `bin/psi4/export_plugins.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/psi_start.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/python.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libcubeprop/csg.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libcubeprop/cubeprop.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libefp_solver/efp_solver.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libmints/basisset.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libplugin/load_plugin.cc:#include <boost/filesystem.hpp>`. For most of these we would likely let Python handle the filesystem paths and just pass them into C-side as a `std::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/450:429,error,error,429,https://psicode.org,https://github.com/psi4/psi4/issues/450,1,['error'],['error']
Availability,"Greetings to all. I've build the latest v1.7 release successfully but met some problem when running the test suites.; Test 243 failed with the following error:. ```bash; 243: psi4.driver.p4util.exceptions.TestComparisonError: root; 243: Arrays differ.	_compare_recursive: computed value does not match to atol=1e-06 (o-e: RMS 5.0e-01, MAX 1.6e+00, RMAX 2.0e+00).; 243: Expected:; 243: [[ 0.0291933 -0.3287121 0.7914111 -0.5145527]; 243: [ 0.1791863 -0.7419178 0.1002281 0.6382825]; 243: [ 0.5820757 -0.3705022 -0.5095786 -0.5140483]; 243: [ 0.7926083 0.4519231 0.3224164 0.2521612]]; 243: Observed:; 243: [[-0.029193323165 0.328712055763 -0.791411145833 0.514552749997]; 243: [ 0.179186290535 -0.741917790628 0.100228136947 0.638282528194]; 243: [ 0.582075699497 -0.370502185067 -0.509578634502 -0.514048272222]; 243: [ 0.792608291164 0.451923120902 0.322416398582 0.252161169688]]; 243: Difference (passed elements are zeroed):; 243: [[-0.058386623165 0.657424155763 -1.582822245833 1.029105449997]; 243: [ 0. 0. 0. 0. ]; 243: [ 0. 0. 0. 0. ]; 243: [ 0. 0. 0. 0. ]]; ```. It seems the first row is completely negated?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2828:153,error,error,153,https://psicode.org,https://github.com/psi4/psi4/issues/2828,1,['error'],['error']
Availability,"H, wfn2 = psi4.hessian('b3lyp', return_wfn=True); wfn2.to_file(). Traceback (most recent call last):; File ""/root/.pycharm_helpers/pydev/pydevconsole.py"", line 364, in runcode; coro = func(); File ""<input>"", line 1, in <module>; File ""/opt/anaconda3/envs/py310/lib/python3.10/site-packages/psi4/driver/p4util/python_helpers.py"", line 360, in _core_wavefunction_to_file; 'Ca': wfn.Ca().to_array() if wfn.Ca() else None,; RuntimeError: ; Fatal Error: Wavefunction::Ca: Unable to obtain MO coefficients.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1683589981287/work/psi4/src/psi4/libmints/wavefunction.cc on line: 804; The most recent 5 function calls were:; psi::Wavefunction::Ca() const. this error doesn't happen when calculating energy",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3068:442,Error,Error,442,https://psicode.org,https://github.com/psi4/psi4/issues/3068,3,"['Error', 'error']","['Error', 'error']"
Availability,HEAD build failure with gcc 4.4.6,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/85:11,failure,failure,11,https://psicode.org,https://github.com/psi4/psi4/issues/85,1,['failure'],['failure']
Availability,"Have been going through the psi4 build in preparation for our new supercomputer and found a ""glitch"" in that all the psi4numpy tests failed with:; ImportError: No module named numpy; which puzzled me momentarily.; Chased it down to:; tests/runtest.py: pyexitcode = backtick([""python"", infile, "" > "", outfile]); Our python3 doesn't equivalence to python, and alias (which I usually use to get round this) didn't carry through though it may have if I put it in my dot files. Anyway the Q&D of python-> python3 did the trick but our system guys have pointed out:; [https://developers.redhat.com/blog/2019/05/07/what-no-python-in-red-hat-enterprise-linux-8/](https://developers.redhat.com/blog/2019/05/07/what-no-python-in-red-hat-enterprise-linux-8/); Something to keep in mind?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1708:224,down,down,224,https://psicode.org,https://github.com/psi4/psi4/issues/1708,1,['down'],['down']
Availability,"Hello PSI4 Developers,. I am able to compile PSI4, but the compilation fails when it tries to build a plugin. . Here is the error output:. ==> Created plugin files (in skeleton as basic): ; CMakeLists.txt, input.dat, pymodule.py, __init__.py, plugin.cc, doc.rst; loading initial cache file /home/kannon/src/psi4_cmake/Build_Debug/stage/home/kannon/src/psi4_cmake/Install_Debug/shar e/cmake/psi4/psi4PluginCache.cmake; -- The CXX compiler identification is unknown; CMake Error at CMakeLists.txt:38 (project):; The CMAKE_CXX_COMPILER:. @CXX@. is not a full path and was not found in the PATH. Tell CMake where to find the compiler by setting either the environment; variable ""CXX"" or the CMake cache entry CMAKE_CXX_COMPILER to the full path; to the compiler, or to the compiler name if it is in the PATH. -- Configuring incomplete, errors occurred!. The compilers are correctly identified when cmake is first called. Do you all have any ideas how to fix this?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/565:124,error,error,124,https://psicode.org,https://github.com/psi4/psi4/issues/565,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"Hello Psi4!; First of all, thank you for your hard work on improving the Psi.; This is not a bug report but rather a possible enhancement: we have recently developed a wave function format called [TREXIO](https://github.com/TREX-CoE/trexio) with the focus on self-consistence and I/O performance. The format comes with a C library and an API to interact with the data: it has a text (ASCII-based) and HDF5 (binary) back ends for I/O. Bindings in Python, Fortran and OCaml are available. Sparse data like 2e integrals or CI coefficients are stored in a sparse data representation (similar to FCIDUMP) which significarntly improved the performance of the I/O (especially in the HDF5 case). The source code can be found [here](https://github.com/TREX-CoE/trexio) and a detailed description of the format and an API can be found [here](https://trex-coe.github.io/trexio/trex.html). Would it be interesting to have TREXIO as an alternative I/O back end in Psi4? The library is packaged for both PyPI and conda (via conda-forge). I am one of the core developers and can help/contribute.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2847:476,avail,available,476,https://psicode.org,https://github.com/psi4/psi4/issues/2847,1,['avail'],['available']
Availability,"Hello Psi4,. I am running a geometry optimisation for a small molecule with a chlorium atom (see the Psi4 input at the bottom of this page) and get the following error. It comes from the fact that the atomic symbols are uppercased by Psi4 (e.g. `CL` for chlorium) while `geometric` engine expects them capitalized (e.g. `Cl`). I have a one-liner fix for this which should go in the `driver.py` module. I can open a PR or communicate the fix here, whatever you prefer. ```; Traceback (most recent call last):; File ""/opt/conda/envs/psi4-env/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 50, in <module>; File ""/opt/conda/envs/psi4-env/lib//python3.9/site-packages/psi4/driver/driver.py"", line 1152, in optimize; return optimize_geometric(name, **kwargs); File ""/opt/conda/envs/psi4-env/lib//python3.9/site-packages/psi4/driver/driver.py"", line 918, in optimize_geometric; optimizer.prepareFirstStep(); File ""/opt/conda/envs/psi4-env/lib//python3.9/site-packages/geometric/optimize.py"", line 376, in prepareFirstStep; self.H0 = self.IC.guess_hessian(self.coords); File ""/opt/conda/envs/psi4-env/lib//python3.9/site-packages/geometric/internal.py"", line 3457, in guess_hessian; Hprim = self.Prims.guess_hessian(coords); File ""/opt/conda/envs/psi4-env/lib//python3.9/site-packages/geometric/internal.py"", line 2730, in guess_hessian; elem1 = min(Elements.index(self.elem[ic.a]), Elements.index(self.elem[ic.b])). ValueError: 'CL' is not in list. Printing out the relevant lines from the Psithon --> Python processed input file:; 'coordsys' : 'tric',; 'convergence_set' : 'GAU_LOOSE',; 'convergence_energy' : 1e-4,; }; core.set_global_option(""GEOM_MAXITER"", 5); --> optimize('mp2', engine='geometric', optimizer_keywords=geometric_keywords); ```. Versions:; - geometric 1.0; - psi4 1.7+6ce35a5; - python 3.9. Psi4 input file:; ```; memory 14000 MB; molecule ligand {; 0 1; Cl -1.0833 -0.2140 0.0000 ; O -0.3456 1.2535 0.0000 ; O 1.0833 1.2535 0.0000 ; N 1.0362 -0.4689 0.0000 ; N -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2871:162,error,error,162,https://psicode.org,https://github.com/psi4/psi4/issues/2871,1,['error'],['error']
Availability,"Hello!. I'm trying to compile Psi4 on my laptop and I have a problem. As described here [https://github.com/psi4/psi4/wiki/3_Building#builddetailed], I've run setup script, then I've entered $top/objdir and typed 'make -j8'. Compilation was successful, but I've got a linking error. Operating system is ArchLinux 4.2.5. I have Python2.7 and Python3.5 both installed on my computer, LAPACK, BLAS, boost, perl are also installed. It seems like ld cannot link psi4 with boost::regex. When I didn't specified usage of Python2 in the setup script command line, there were linking errors due to different versions of python in Psi (python3) and python in boost (python2). Without specifying '--chemps2 off' the compilation also fails to start. To help setup script in detecting boost libraries on my computer, I've tried to run setup with '--boost-incdir=/usr/include --boost-libdir=/usr/lib' options. I've also tried to find in automatically generated makefiles the invocation of ld (I wanted to add option '-lboost_regex' to linker), but I have not found.; Could you tell me, please, what is wrong? How can I fix this problem?. Thank you very much!; Alexander. Output of the 'setup' script:; [piton@avo psi4]$ ./setup --chemps2 off --python=/usr/bin/python2; cmake -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DPYTHON_INTERPRETER=/usr/bin/python2 -DCMAKE_INSTALL_PREFIX=/usr/local/psi4 -DCMAKE_BUILD_TYPE=release /home/piton/gitdir/psi4. -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=**restrict** -DFUNDERSCORE=1 -fPIC -fopenmp -O3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/312:276,error,error,276,https://psicode.org,https://github.com/psi4/psi4/issues/312,2,['error'],"['error', 'errors']"
Availability,"Hello, ; I work at OpenEye Scientific Software where we use psi4 in a couple of our products. This week one of our development packages started failing for no reason I could identify. We have been working with version 1.5, planning to deploy our packages with that next week (upgrading to 1.6 next time). Despite no changes I can find on your end something in the last week seems to make it impossible to build a conda environment with psi4 1.5 anymore. . I get the same failures with a very minimal conda environment that we do on our more complex cloud platform. @zachglick is interning with my team this summer and was also able to replicate this. ; Below is the commands we used to build a new conda enviroment:; `conda create -n test_env -c conda-forge -c psi4 -c psi4 python=3.7 psi4==1.5+e9f4d6d dftd3==3.2.1 --yes`; (note, I've tried python 3.7, 3.7.12, and 3.8 on my mac). This script results in a segmentation fault ; ```; import psi4. # make output file; psi4_output = ""minimal_env.dat""; print(""set output file path""); psi4.set_output_file(psi4_output). # make molecule; print(""create molecule...""); molecule = psi4.geometry(""""""O 1.6406245231628418 2.186539888381958 0.3502783477306366; C 0.8303495645523071 1.106687068939209 0.17728924751281738; C 0.26523858308792114 0.47432053089141846 1.2845896482467651; C -0.5650492906570435 -0.6324407458305359 1.1073246002197266; C -0.8302973508834839 -1.1067066192626953 -0.17723894119262695; N -1.6608778238296509 -2.2135820388793945 -0.3546023368835449; C -2.3128416538238525 -2.9721903800964355 0.626854419708252; O -2.283581256866455 -2.8034048080444336 1.8416125774383545; C -3.1216139793395996 -4.092474460601807 0.022369852289557457; H -2.5071558952331543 -4.992997646331787 -0.06683211773633957; H -3.9806551933288574 -4.315130233764648 0.6616312265396118; H -3.4815473556518555 -3.7952513694763184 -0.9667707681655884; H -1.818267822265625 -2.5147225856781006 -1.3233563899993896; C -0.2652755677700043 -0.47430306673049927 -1.284630060195",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2593:471,failure,failures,471,https://psicode.org,https://github.com/psi4/psi4/issues/2593,2,"['failure', 'fault']","['failures', 'fault']"
Availability,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188:12,down,downloaded,12,https://psicode.org,https://github.com/psi4/psi4/issues/3188,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hello,. I am working on a university project and want to confirm that Psi4 is running correctly. When I run the test that the binary installation guide specifies I get the following error:. ![image](https://cloud.githubusercontent.com/assets/26287438/24625066/cd1d8af4-187b-11e7-8cf9-ff6d285895e3.png)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/675:182,error,error,182,https://psicode.org,https://github.com/psi4/psi4/issues/675,1,['error'],['error']
Availability,"Hello,. I realize that there is a warning about PCM failing with symmetry point groups however, it would be nice to add like a 1-3 line error message that would go a long way to helping out any user that has not read all of the docs very carefully.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1939:136,error,error,136,https://psicode.org,https://github.com/psi4/psi4/issues/1939,1,['error'],['error']
Availability,"Hello,. It seems that there may be a problem with the normalization of the contraction coefficients in the molden wavefunction format for d functions (and higher). An example computation on an test molecule (NH3) where exactly the same basis sets were given to ORCA and PSI4 can be downloaded here:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. The molden files are almost the same, except for the contraction coefficients of the D functions. Is there an authoritative source that can tell us what the correct normalization of the contraction coefficients in the molden file should be? Having different variants of the same format is a pain in terms of post-processing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/60:282,down,downloaded,282,https://psicode.org,https://github.com/psi4/psi4/issues/60,1,['down'],['downloaded']
Availability,"Hello,. Somehow the `pytest` module is imported during the DFT calculation with dispersion correction and crashes Psi4 if `pytest` is missing. It can be fixed simply by installing the missing module, but I thought that it's worth reporting still in order to patch the packaging. Psi4: v.1.8 from `conda-forge` (installed in a clean env using ` conda install psi4 python=3.10 -c conda-forge/label/libint_dev -c conda-forge `). Code to reproduce:. ```python; molecule {; 0 1; O 0.0 0.5 0.0; H 0.5 0.0 0.0; H -0.5 0.0 0.0. no_reorient; symmetry c1; }. memory 8GB; set_num_threads(2); set freeze_core True. E, wfn = energy('wb97x-d/6-311g**',return_wfn=True); ```. Fails with the following error:. ```; Traceback (most recent call last):; File ""/home/q-posev/miniconda3/envs/psi4-v18/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/q-posev/miniconda3/envs/psi4-v18/lib/python3.10/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/q-posev/miniconda3/envs/psi4-v18/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 2574, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/q-posev/miniconda3/envs/psi4-v18/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/q-posev/miniconda3/envs/psi4-v18/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 1430, in scf_wavefunction_factory; superfunc, _disp_functor = build_functional_and_disp(name, restricted=(reference in [""RKS"", ""RHF""]), **kwargs); File ""/home/q-posev/miniconda3/envs/psi4-v18/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 1407, in build_functional_and_disp; _disp_functor = empirical_dispersion.EmpiricalDispersion(name_hint=superfunc.name(),; File ""/home/q-posev/mi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3003:686,error,error,686,https://psicode.org,https://github.com/psi4/psi4/issues/3003,1,['error'],['error']
Availability,"Hello,. We have developed software around psi4 to perform potential energy scans. We submit psi4 jobs to our cluster. Our cluster architecture is allocated where each node has 64 cores with each core having 1 thread enabled. My psi4 is installed pythonically. . When I submit jobs I request how many predicted cores I need:. ```bash; -pe smp 64; ```. Initially, when I submitted the jobs, I would pass this flag into `psi4.set_num_threads` but since each core has 1 thread it only used 1 the whole scan. Which would not work for our purpose, it's too slow. . When reading the documentation I can set the OMP and MKL flags prior to running the script. ```bash; export MKL_NUM_THREADS=48; export OMP_NUM_THREADS=48; ```. I saw that psi4 started spreading the loads across the cores but it looks like there are spikes where it clocks over the 48 requested cores that I thought is what tell psi4 what is available to it. . We record our results on ganglia on the performance and here are the screenshots down below:. ![n131](https://user-images.githubusercontent.com/11812946/195706024-72bf740f-be03-4348-8a08-8f7e5d90178c.png). So my question is how do I control pythonically psi4, it's allocation to cores, and set the limit where it doesn't spike a node. If that makes sense?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2747:900,avail,available,900,https://psicode.org,https://github.com/psi4/psi4/issues/2747,2,"['avail', 'down']","['available', 'down']"
Availability,"Hello,; This is Jason from Monash Uni again. Thought I'd post my issue here instead of emailing everyone. I'm getting a PSIO error for some FNO-CD-CCSD(T) calculations and I'm hoping someone could help solve my problem. See below for the details. Cheers,; Jason. Input. ```; memory 126 Gb; molecule complex {; *** Atomic coordinates omitted ***; }. set globals {; basis aug-cc-pVDZ; scf_type df; df_basis_cc cholesky; freeze_core True; guess sad; basis_guess 3-21G; }; energy('fno-df-ccsd(t)'); ```. End of calculation output. ```; *** at Mon Feb 10 13:17:33 2014. *******************************************************; * *; * DF-CCSD *; * Density-fitted CCSD *; * *; * Eugene DePrince *; * *; *******************************************************. ==> 3-index integrals <==. Generating Cholesky vectors ...; Cholesky decomposition threshold: 1.00e-04; Number of Cholesky vectors: 2784. ==> Frozen Natural Orbitals <==. Doubles contribution to MP2 energy in full space: -4.157303195170. Cutoff for significant NO occupancy: 1.000e-06. Number of virtual orbitals in original space: 678; Number of virtual orbitals in truncated space: 640. ==> Memory <==. Total memory requirements: 78825.79 mb; 3-index integrals: 10109.75 mb; CCSD intermediates: 68716.04 mb. <<< warning! >>> switched to low-memory (t) algorithm. memory requirements for CCSD(T): 36451.32 mb. ==> Input parameters <==. Freeze core orbitals? yes; Use frozen natural orbitals? yes; r_convergence: 1.000e-07; e_convergence: 1.000e-06; Number of DIIS vectors: 8; Number of frozen core orbitals: 26; Number of active occupied orbitals: 74; Number of active virtual orbitals: 640; Number of frozen virtual orbitals: 38. Begin singles and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34:125,error,error,125,https://psicode.org,https://github.com/psi4/psi4/issues/34,1,['error'],['error']
Availability,"Hello. I was trying to build Psi4 onto a cluster and I encountered this error:. ```; $psisource/src/lib/libmints/oeprop.h(116): error: data member initializer is not allowed; int max_noon_ = 3;. compilation aborted for /work/kimt33/sources/psi4/src/lib/libmints/local.cc (code 2); make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 2; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: *** [all] Error 2; ```. I was told by my Linux guru to try different compilers and libraries in case that the code is incompatible with my system. I was building using Intel compilers 12.1.3, mkl 10.3.9, openmpi 1.6.2, cmake 3.3.2, python 2.7.8, and boost 1.57.0. I'm not too sure what the error means, but maybe this is a bug. Let me know if you'd like more information. Thanks,; David",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/188:72,error,error,72,https://psicode.org,https://github.com/psi4/psi4/issues/188,6,"['Error', 'error']","['Error', 'error']"
Availability,"Here lie uses for general Cholesky machinery.; - Fock-type terms in DF-SAPT, particularly higher-order, see #317 ; - If you care about 6-zeta accuracy, you probably oughtn't to be using density fitting. Nevertheless, having orbital basis sets for which _no_ auxiliary is appropriate (even as overkill, like QZ for sto-3g) is troubling for the auxiliary defaulting machinery. On-the-fly construction could help. Maybe a more plausible case is when auxiliary basis sets aren't available for a particular element or for tight functions.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/476:475,avail,available,475,https://psicode.org,https://github.com/psi4/psi4/issues/476,1,['avail'],['available']
Availability,"Hi All,. Trying to build from source here but I get the following errors:. ```; [ 11%] Building CXX object src/psi4/psimrcc/CMakeFiles/psimrcc.dir/transform_read_so.cc.o; [ 12%] Building CXX object src/psi4/psimrcc/CMakeFiles/psimrcc.dir/updater.cc.o; [ 12%] Building CXX object src/psi4/psimrcc/CMakeFiles/psimrcc.dir/updater_bw.cc.o; [ 12%] Building CXX object src/psi4/psimrcc/CMakeFiles/psimrcc.dir/updater_mk.cc.o; [ 12%] Linking CXX static library libpsimrcc.a; [ 12%] Built target psimrcc; [ 12%] Building CXX object src/psi4/sapt/CMakeFiles/sapt.dir/wrapper.cc.o; [ 12%] Linking CXX static library libsapt.a; [ 12%] Built target sapt; Consolidate compiler generated dependencies of target scf_solver; [ 13%] Built target scf_solver; Consolidate compiler generated dependencies of target scfgrad; [ 13%] Built target scfgrad; Consolidate compiler generated dependencies of target l2export; [ 13%] Built target l2export; Consolidate compiler generated dependencies of target 3index; [ 13%] Built target 3index; Consolidate compiler generated dependencies of target ciomr; [ 15%] Built target ciomr; Consolidate compiler generated dependencies of target cubeprop; [ 16%] Built target cubeprop; Consolidate compiler generated dependencies of target disp; [ 16%] Built target disp; Consolidate compiler generated dependencies of target dpd; [ 25%] Built target dpd; Consolidate compiler generated dependencies of target filesystem; [ 25%] Built target filesystem; Consolidate compiler generated dependencies of target fock; [ 25%] Building CXX object src/psi4/libfock/CMakeFiles/fock.dir/DiskDFJK.cc.o; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:17: error: no viable overloaded operator[] for type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ~~~~~~~~^~~~~~~~~~~~~~; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:68: error: member access into incomplete type 'psi::Opt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:66,error,errors,66,https://psicode.org,https://github.com/psi4/psi4/issues/3006,1,['error'],['errors']
Availability,"Hi Jet,. I try to use your diatomic code, which is available in psi4, with the following command:. phys_consts = anharmonicity(rvals, energies). I got the following error:. NameError: name 'anharmonicity' is not defined. What is the correct syntax?. @jturney @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/234:51,avail,available,51,https://psicode.org,https://github.com/psi4/psi4/issues/234,2,"['avail', 'error']","['available', 'error']"
Availability,"Hi all,. As part of a large benchmarking study, I've been computing the interaction energies of various hexamine dimers. With PBEh-3c, I've gotten some suspiciously large errors relative to CCSD(T)/CBS. I have used 590, 99 (spherical,radial) points, and I've also compared the energies to Orca (using defgrid3... after recommendations from issue #2304). Psi4 and Orca differ by as many as .3-.4 kJ/mol, depending on the dimer, which is a large percent error. One test case is summarized below:. | Program | Monomer A (H) | Monomer B (H) | Dimer AB (H)| $E_{int}$ (kcal/mol)| ; |---------|-------------|-------------|-----------|-----------|; | Psi4 | -453.84229689692728 | -453.84229689783353 | -907.68447385499462 | 0.075263339533 |; |Orca | -453.842841688023 | -453.842841698644 | -907.685688152560 | -0.002990642998 |. | Program | $E_{int}$ (kJ/mol)| Notes|; |---------|-------------| ----|; | Psi4 | 0.31490181 | |; |Orca | -0.01251285 | |; | Benchmark | -0.00315431 | Focal Point CCSD(T)/CBS with Psi4 |. I have noticed this warning in all of my Psi4 hexamine/PBEh-3c files:; `Warning: Molecule has a spherically-symmetric moment of charge but lacks icosahedral, octahedral, and tetrahedral symmetry.` . CDS figures this has something to do with the grid placement. Any ideas of how to alleviate this warning while keeping the same geometries and/or what the energy difference could be attributed to? I've tried different basis sets, different number of grid points, `symmetry c1`, `molecule.symmetrize(1e-3)`, no pruning scheme (rather than `robust`). The only time I have been able to get the warning to go away is when I use `bsse_type='cp'`, but I really shouldn't be running the calculation with cp correction because that is already included in the PBEh-3c calculation. Output files for the above example are attached, as well as a graph of Psi4 and Orca interaction energies for all dimers tested. . [Psi4-214-int.txt](https://github.com/psi4/psi4/files/9200713/Psi4-214-int.txt); [Orca-21",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2647:171,error,errors,171,https://psicode.org,https://github.com/psi4/psi4/issues/2647,2,['error'],"['error', 'errors']"
Availability,"Hi all,. I am getting the following error while running a DMRG calculation. I am using version 1.1rc1. > `###########################################################; > ### ###; > ### DMRG-SCF ###; > ### ###; > ### CheMPS2 by Sebastian Wouters ###; > ### https://github.com/SebWouters/CheMPS2 ###; > ### Comput. Phys. Commun. 185 (6), 1501-1514 (2014) ###; > ### ###; > ###########################################################; > ; > Number of variables in the x-matrix = 22549; > CheMPS2 output is temporarily written to the file singlet.dmrg.out.chemps2 and will be copied here.; > Presorting SO-basis two-electron integrals.; > Sorting File: SO Ints (nn|nn) nbuckets = 47; > ; > Traceback (most recent call last):; > File ""/home/AzureUser/psi4conda/bin/psi4"", line 247, in <module>; > exec(content); > File ""<string>"", line 100, in <module>; > File ""/home/AzureUser/psi4conda/lib//python3.5/site-packages/psi4/driver/driver.py"", line 454, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/home/AzureUser/psi4conda/lib//python3.5/site-packages/psi4/driver/procrouting/proc.py"", line 3081, in run_dmrgci; > dmrg_wfn = core.dmrg(ref_wfn); > ; > RuntimeError:; > Fatal Error: PSIO Error; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1491459515796/work/psi4/src/psi4/libpsio/error.cc on line: 128; > The most recent 5 function calls were:; > ; > psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); > psi::psio_error(unsigned int, unsigned int); > psi::PSIO::rw(unsigned int, char*, psi::psio_address, unsigned long, int); > psi::IntegralTransform::presort_so_tei(); > psi::IntegralTransform::transform_tei_first_half(std::shared_ptr<psi::MOSpace>, std::shared_ptr<psi::MOSpace>); > ; > ; > *** Psi4 encountered an error. Buy a developer more coffee!; > *** Resources and help at github.com/psi4/psi4.`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2102:36,error,error,36,https://psicode.org,https://github.com/psi4/psi4/issues/2102,6,"['Error', 'error']","['Error', 'error']"
Availability,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/7:498,error,error,498,https://psicode.org,https://github.com/psi4/psi4/issues/7,1,['error'],['error']
Availability,"Hi all,. I have been benchmarking energy calculations of various organic small-molecule dimers in Psi4. These dimers have minimum monomer separations (closest intermolecular contact) up to 15 Å. To determine which method produces interaction energies closest to coupled cluster results, I have graphed the partial crystal lattice energy contributions (a scaled sum of the dimer interaction energies) for subsets of dimers with monomer separations between (n, n+1). Odd behavior arose when analyzing results of benzene. PBEh-3c returned errors _much_ larger than any other method. To investigate these results, PBE, PBEh, and PBEh-3c were run in ORCA (5.0.1) and Psi4 (1.4rc3). Results are shown below. Methods denoted with an asterisk are those which use a fine grid (total points = 6340328). Methods without an asterisk used the default grid (Psi4 total points = 253270; ORCA total points = 56510). ![subplot-8](https://user-images.githubusercontent.com/87093097/134976005-f5bf7501-27d2-40c0-b033-06b33126f8dc.png). The graph shows that while PBE generally agrees in Psi4 and ORCA, PBEh and PBEh-3c disagree when comparing the two software packages and default grid points are used. When Psi4 uses a fine grid, the results align more-so with ORCA -- and the coupled cluster results. Two individual dimers have been chosen to highlight the differences in interaction energies:. | Benzene Dimer | Min. Monomer Separation (Å) | Interaction Energy (kJ/mol) | Software | Spherical Points | Radial Points | Total Points |; |---|---|---|---|---|---|---|; | 2mer-0+1 | 2.544 | -6.01017169 | ORCA | 194 | OptM3 with GC (2021) | 56510 |; | | | -6.09347943 | Psi4 | 302 | 75 | 253270 |; | | | -6.06158176 | Psi4 | 5810 | 99 | 6340328 |; | 2mer-0+77 | 11.016 | -0.03777130 | ORCA | 194 | OptM3 with GC (2021) | 56510 |; | | | -0.09279455 | Psi4 | 302 | 75 | 253270 |; | | | -0.03957357 | Psi4 | 5810 | 99 | 6340328 |. To me, this seems to be a systematic issue with Psi4 calculating interaction energies with PBE",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2304:536,error,errors,536,https://psicode.org,https://github.com/psi4/psi4/issues/2304,1,['error'],['errors']
Availability,"Hi all,. I have installed psi4-1.3 in Win10/WSL-Ubuntu18.04 successfully, and when run 'psi4 --test', only _dftd3_ and _grimme_3c_ failed. I have found that psi4-v1.3 integrated dftd3 shown error when run ""dftd3""under WSl:. **_Segmentation fault (core dumped)_**. Then I rebuild _dftd3_ under WSL and use the newly build _dftd3_, then the 'psi4 --test' show all pass. So, this is just a build-bug report.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1587:190,error,error,190,https://psicode.org,https://github.com/psi4/psi4/issues/1587,2,"['error', 'fault']","['error', 'fault']"
Availability,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260:141,error,error,141,https://psicode.org,https://github.com/psi4/psi4/issues/260,6,"['Error', 'error']","['Error', 'Errors', 'error', 'errors']"
Availability,"Hi all,. Just a report. Current conda v2rdm_casscf build was not compatible with the newly psi4-1.4a2.dev215 version. > Traceback (most recent call last):; > File ""/root/miniconda3/envs/psi4/bin/psi4"", line 184, in <module>; > import psi4; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/__init__.py"", line 82, in <module>; > from .driver import endorsed_plugins; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; > import v2rdm_casscf; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; > psi4.core.plugin_load(sofile); > RuntimeError:; > Fatal Error: load_plugin: Cannot open library: /root/miniconda3/envs/psi4/lib/python3.7/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZN3psi8ERISieveC1ESt10shared_ptrINS_8BasisSetEEd; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1573157589938/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; > The most recent 5 function calls were:; > ; > ; > forrtl: severe (174): SIGSEGV, segmentation fault occurred; > Image PC Routine Line Source; > libgdma.so 00007FDBC5B360DC for__signal_handl Unknown Unknown; > libpthread-2.27.s 00007FDBD8DF2890 Unknown Unknown Unknown; > ld-2.27.so 00007FDBD9016A31 Unknown Unknown Unknown; > libc-2.27.so 00007FDBD8B472DF _dl_catch_excepti Unknown Unknown; > libc-2.27.so 00007FDBD8B4736F _dl_catch_error Unknown Unknown; > libdl-2.27.so 00007FDBD87D1735 Unknown Unknown Unknown; > libdl-2.27.so 00007FDBD87D10B3 dlclose Unknown Unknown; > core.cpython-37m- 00007FDBC6A8034A Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC672D382 Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC6756337 Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC6762AB4 Unknown Unknown Unknown; > python3.7 00007FDBD94D3B65 PyCFunction_Call Unknown Unknown; > python3.7 00007FDBD95B2E74 Unknown Unknown Unknown; > python3.7 00007FDBD9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1750:699,Error,Error,699,https://psicode.org,https://github.com/psi4/psi4/issues/1750,2,['Error'],['Error']
Availability,"Hi all,. Just a report. Current conda v2rdm_casscf build was not compatible with the production psi4-1.3.2+ecbda83 version(Tested under Win10 WSL Ubuntu1804). ```; Traceback (most recent call last):; File ""/root/miniconda3/envs/psi/bin/psi4"", line 177, in <module>; import psi4; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/psi4/__init__.py"", line 82, in <module>; from .driver import endorsed_plugins; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; import v2rdm_casscf; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; psi4.core.plugin_load(sofile); RuntimeError:; Fatal Error: load_plugin: Cannot open library: core.so: cannot open shared object file: No such file or directory; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; The most recent 5 function calls were:. forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source; libgdma.so 00007F0370F460DC for__signal_handl Unknown Unknown; libpthread-2.27.s 00007F03763F2890 Unknown Unknown Unknown; ld-2.27.so 00007F0376616A31 Unknown Unknown Unknown; libc-2.27.so 00007F03761472DF _dl_catch_excepti Unknown Unknown; libc-2.27.so 00007F037614736F _dl_catch_error Unknown Unknown; libdl-2.27.so 00007F0375DD1735 Unknown Unknown Unknown; libdl-2.27.so 00007F0375DD10B3 dlclose Unknown Unknown; core.cpython-36m- 00007F0371E280E7 Unknown Unknown Unknown; core.cpython-36m- 00007F037202C9B2 Unknown Unknown Unknown; core.cpython-36m- 00007F03720539F6 Unknown Unknown Unknown; core.cpython-36m- 00007F0371AFD0D6 Unknown Unknown Unknown; python3.6 00007F03769C4B36 PyCFunction_Call Unknown Unknown; python3.6 00007F03769C1A5E PyObject_Call Unknown Unknown; python3.6 00007F0376AC1834 Unknown Unknown Unknown; python3.6 00007F0376ABF37F Py_FinalizeEx Unknown Unknown; python3.6 0000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1775:719,Error,Error,719,https://psicode.org,https://github.com/psi4/psi4/issues/1775,2,['Error'],['Error']
Availability,"Hi all,. Running the following per the docs works as expected:; ```; >>> conda create -n p4env psi4 -c psi4; >>> conda activate p4env; >>> psi4 --version; 1.6.1; ```. And I'm able to use psi4 in PsiAPI mode as expected (can run the h2o geometry opt and freq calcs) after entering a python shell. However, when I try to use Psi4 in Psithon mode like so, I obtain an error:. ```; >>> psi4 -i input.dat -o output.dat; A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.1; ```. Is this a compile issue in the Psi4 executable on conda?. In case it's helpful, I'm using a Mac (v.11.3.1) and running conda (4.12.0) with python 3.9.13. The input file I was trying to use contains:. ```; memory 600 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; energy('scf'); ```. The tests module ran 92 / 4121 tests, and two failed (test_gdma and test_psi4_cc), but these seem unrelated to the current issue.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2661:365,error,error,365,https://psicode.org,https://github.com/psi4/psi4/issues/2661,1,['error'],['error']
Availability,"Hi all,. The following PSIO error occurs for identical geometry optimizations on two separate machines, when OPTKING attempts to write opt data to binary file:; ```; Fatal Error: PSIO Error; Error occurred in file: /theoryfs2/ds/sirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::psio_write_entry(unsigned long, char const*, char*, unsigned long); ```; This then results in a second PSIO error upon each subsequent optimization iteration, when attempting to read the binary optimization data from file:; ```; Fatal Error: PSIO Error; Error occurred in file: /theoryfs2/ds/sirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::psio_error(unsigned long, unsigned long); psi::PSIO::open(unsigned long, int); psi::psio_open(unsigned long, int); opt::opt_io_is_present(); ```; This finally results in the optimizer spinning its wheels for the remainder of the allotted iterations. The usual PSIO error-culprit, an un-touchable filesystem, was ruled out for both machines on which this behavior was observed. Input:; ```; # index A24-7-dimer label Dimer from ammmonia_methane_C3v. memory 14000 mb. molecule mol {; units Angstrom; no_com; no_reorient; 0 1; N 0.001106462041 -0.000130846927 1.849133409958; H 0.938627974105 -0.000139345380 2.221618285244; H -0.467316580071 -0.811849948182 2.222477040520; H -0.467307391010 0.811579719379 2.222474714333; H -0.000457075852 -0.000011938197 -0.942103507206; C -0.001019750816 0.000109523659 -2.027776337389; H 0.509840850903 0.885353515687 -2.394362733084; H 0.509834400679 -0.88503929615",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/789:28,error,error,28,https://psicode.org,https://github.com/psi4/psi4/issues/789,10,"['Error', 'error']","['Error', 'error']"
Availability,"Hi all，. I have found that the qcengine 0.13.0 was not compatible with PSI4 dev version,. when use qcengine 0.13.0, show below error:. ```; ======================================================== ERRORS ========================================================; _____________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py ______________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py:7: in <module>; from qcengine.testing import using_mp2d; E ImportError: cannot import name 'using_mp2d' from 'qcengine.testing' (/root/miniconda3/envs/psi4/lib//python3.7/site-packages/qcengine/testing.py); ______________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py _______________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py:7: in <module>; from qcengine.testing import using_mp2d; E ImportError: cannot import name 'using_mp2d' from 'qcengine.testing' (/root/miniconda3/envs/psi4/lib//python3.7/site-packages/qcengine/testing.py); _________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py _________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py:10: in <module>; from qcengine.testing import is_program_new_enough, using_dftd3, using_dftd3_321, usi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1782:127,error,error,127,https://psicode.org,https://github.com/psi4/psi4/issues/1782,4,"['ERROR', 'error']","['ERROR', 'ERRORS', 'error']"
Availability,"Hi psi4 experts. psi4 shows promising functions and I am trying to install psi4 on my Ubuntu 20 with the command. `conda create -n p4env python=x.x psi4 -c psi4/label/dev`. But I got error messages:; ```. UnsatisfiableError: The following specifications were found to be incompatible with each other:. Output in format: Requested package -> Available versions. Package python conflicts for:; psi4 -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.5,<3.6.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.9,<3.10.0a0']; psi4 -> libxc[version='>=5.1.5,<6.0a0'] -> python[version='3.4.*|>=3.10,<3.11.0a0|>=3.6|>=3.5|>=3.7|>=3.6.0|>=3.6,<3.7|>=3.4']; python=3.9The following specifications were found to be incompatible with your system:. - feature:/linux-64::__glibc==2.31=0; - feature:|@/linux-64::__glibc==2.31=0; - psi4 -> libgcc-ng[version='>=7.5.0'] -> __glibc[version='>=2.17']. Your installed version is: 2.31. Note that strict channel priority may have removed packages required for satisfiability.; ```. I am new to psi4 and I hope someone can help me to solve this problem. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2390:183,error,error,183,https://psicode.org,https://github.com/psi4/psi4/issues/2390,2,"['Avail', 'error']","['Available', 'error']"
Availability,"Hi, ; I am trying to install and use Psi4 on Google colab but unable to do so. Here is what I've been trying:; ```; #Installing conda ; !wget -c https://repo.anaconda.com/miniconda/Miniconda3-py37_4.12.0-Linux-x86_64.sh; !chmod +x Miniconda3-py37_4.12.0-Linux-x86_64.sh; !bash /content/Miniconda3-py37_4.12.0-Linux-x86_64.sh -bfp /usr/local. !conda install --channel defaults conda python=3.8 --yes; !conda update --channel defaults --all --yes. #Installing Psi4; !conda install psi4 python=3.8 -c psi4. import psi4; ```; Error:; ```; ImportError Traceback (most recent call last); [<ipython-input-18-ae2916a96900>](https://localhost:8080/#) in <module>(); ----> 1 import psi4. [/usr/local/lib/python3.8/site-packages/psi4/__init__.py](https://localhost:8080/#) in <module>(); 52 ; 53 # Init core; ---> 54 from . import core; 55 ; 56 from psi4.core import get_num_threads, set_num_threads. ImportError: cannot import name 'core' from 'psi4' (/usr/local/lib/python3.8/site-packages/psi4/__init__.py); ```; [Here](https://github.com/psi4/psi4/files/8878265/conda_list.txt) is a text file that contains the results of `conda list`. Versions in use:; Psi4: v1.6; Python: v3.8.13; conda: v4.13.0. ```; which conda python psi4; /usr/local/bin/conda; /usr/local/bin/python; /usr/local/bin/psi4; ```. Please suggest where I might be going wrong. Regards,; Hemant",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2598:522,Error,Error,522,https://psicode.org,https://github.com/psi4/psi4/issues/2598,1,['Error'],['Error']
Availability,"Hi, I am trying to compute energy and force scans for some diatomic compounds using psi4.gradeint. In this case, a NO radical is used, with MP2 and the aug-cc-pvtz basis. The energy is not a smooth function of the distance, however all the calculations have converged SCF. Complete input script which takes a few minutes to run is attached as well as output. There are more examples. Am I missing something in checking for convergence? The main part of the script is here:; ```; converged = True; try:; grad, wfn = psi4.gradient(""MP2"", molecule=geom, return_wfn=True); except psi4.driver.SCFConvergenceError as ex:; converged = False; print(""SCF convergence error at r = %g converged = %s"" % (r, str(converged))); if converged:; myener = wfn.energy(); forces = grad.to_array(); table.append([r, myener, -forces[0][2]]); ```. I would be thankful for any input!. ![energy](https://user-images.githubusercontent.com/3735358/225842500-985ebc66-c219-455b-8ada-39eba9729b88.png); [psi4energy.zip](https://github.com/psi4/psi4/files/10998961/psi4energy.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2901:658,error,error,658,https://psicode.org,https://github.com/psi4/psi4/issues/2901,1,['error'],['error']
Availability,"Hi, I created brand new `conda` environment and then installed `psi4` with:. ```; conda install psi4 psi4-rt python=3.6 -c psi4; ```. and then tried to run a test input, like so:. ```; # Any line starting with the # character is a comment line; #! Sample HF/cc-pVDZ H2O computation. memory 600 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; energy('scf'); ```. I receive a segmentation fault and see the following Traceback:. ```TraceBack; psi4 test.in test.out; Traceback (most recent call last):; File ""/xxx/anaconda3/envs/psi4/bin/psi4"", line 177, in <module>; import psi4; File ""/xxx/anaconda3/envs/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 82, in <module>; from .driver import endorsed_plugins; File ""/xxx/anaconda3/envs/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; import v2rdm_casscf; File ""/xxx/anaconda3/envs/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; psi4.core.plugin_load(sofile); RuntimeError:; Fatal Error: load_plugin: Cannot open library: core.so: cannot open shared object file: No such file or directory; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; The most recent 5 function calls were:. forrtl: severe (174): SIGSEGV, segmentation fault occurred; ```. This also happens if I make the input file use the Python API. This is using:. - `conda` 4.8.3; - RHEL 7.6. Yikes. I just typed `psi4 --version` to grab the version and also received the Traceback, so something deep inside psi4 appears to be broken. I wasn't able to find a similar issue on GitHub, so apologies if this is already known. I tried to update `libint` based on this [thread](https://github.com/psi4/psi4/issues/1533), but that didn't fix this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1984:412,fault,fault,412,https://psicode.org,https://github.com/psi4/psi4/issues/1984,4,"['Error', 'fault']","['Error', 'fault']"
Availability,"Hi, I was wondering if anyone is facing any problems accessing ps4 forum webpage. Anytime I try to open any link on psi4 forum it shows me this error. I have used multiple devices and internet connections to access this.; <img width=""1646"" alt=""Screen Shot 2023-01-31 at 12 27 09 PM"" src=""https://user-images.githubusercontent.com/96807514/215875127-ef6dcd14-6e27-480f-a31e-860c85ac0bce.png"">",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2868:144,error,error,144,https://psicode.org,https://github.com/psi4/psi4/issues/2868,1,['error'],['error']
Availability,"Hi, I'm the freshman in psi4. ; I want to try to put auxiliary basis set directly instead of creating a gbs file.; Should this idea make sense in psi4?; I try the file below, but always get syntax error. I find auxiliary basis set for iodine, and give it a name, ijkfit. set {; df_basis_sapt {; assign I ijkfit{; spherical. I 0. S 3 1.00; 78.663624500 0.22672393800E-01; 48.541031400 -0.18152349840; 29.953788800 0.98312521180; S 1 1.00; 18.484236200 1.0000000000; S 1 1.00; 11.406633900 1.0000000000; S 1 1.00; 7.0391304000 1.0000000000; S 1 1.00; 4.3439548000 1.0000000000; S 1 1.00; 2.6807457000 1.0000000000; S 1 1.00; 1.6543571000 1.0000000000; S 1 1.00; 1.0209523000 1.0000000000; S 1 1.00; 0.63006230000 1.0000000000; S 1 1.00; 0.38883260000 1.0000000000; S 1 1.00; 0.23996180000 1.0000000000; P 3 1.00; 58.564943900 0.47818500000E-04; 32.524986300 0.91692464400E-01; 18.063612600 -0.99578737170; P 1 1.00; 10.032273100 1.0000000000; P 1 1.00; 5.5718636000 1.0000000000; P 1 1.00; 3.0946187000 1.0000000000; P 1 1.00; 1.7187729000 1.0000000000; P 1 1.00; 0.95462700000 1.0000000000; P 1 1.00; 0.53021480000 1.0000000000; P 1 1.00; 0.29449110000 1.0000000000; P 1 1.00; 0.16356630000 1.0000000000; P 1 1.00; 0.90848100000E-01 1.0000000000; D 2 1.00; 36.660416700 0.38284697300E-01; 20.124038000 0.99926687220; D 1 1.00; 11.073863500 1.0000000000; D 1 1.00; 6.1069764000 1.0000000000; D 1 1.00; 3.3742113000 1.0000000000; D 1 1.00; 1.8672931000 1.0000000000; D 1 1.00; 1.0347167000 1.0000000000; D 1 1.00; 0.57394910000 1.0000000000; D 1 1.00; 0.31859720000 1.0000000000; D 1 1.00; 0.17692960000 1.0000000000; D 1 1.00; 0.98270400000E-01 1.0000000000; F 2 1.00; 23.924298800 0.52150940000E-03; 12.079185400 0.99999986400; F 1 1.00; 6.0988158000 1.0000000000; F 1 1.00; 3.0793646000 1.0000000000; F 1 1.00; 1.5241930000 1.0000000000; F 1 1.00; 0.76960140000 1.0000000000; F 1 1.00; 0.39640310000 1.0000000000; F 1 1.00; 0.20015500000 1.0000000000; G 2 1.00; 13.390088800 0.36144881600E-01; 6.82854",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/823:197,error,error,197,https://psicode.org,https://github.com/psi4/psi4/issues/823,1,['error'],['error']
Availability,"Hi, PSI4 developers. My input:. ```; memory 1000 mb; molecule naphtalene {; 0 1; H -3.36584264 1.24097876 0.00000000; H -3.36584264 -1.24097876 0.00000000; C -2.42446866 -0.70593661 0.00000000; C -2.42446866 0.70593661 0.00000000; H -1.23966218 -2.48102176 0.00000000; C -1.24087056 -1.39724699 0.00000000; H -1.23966218 2.48102176 0.00000000; C -1.24087056 1.39724699 0.00000000; C 0.00000000 -0.71416200 0.00000000; C 0.00000000 0.71416200 0.00000000; H 1.23966218 -2.48102176 0.00000000; C 1.24087056 -1.39724699 0.00000000; H 1.23966218 2.48102176 0.00000000; C 1.24087056 1.39724699 0.00000000; C 2.42446866 -0.70593661 0.00000000; C 2.42446866 0.70593661 0.00000000; H 3.36584264 1.24097876 0.00000000; H 3.36584264 -1.24097876 0.00000000; }. set {; basis sto-3g; scf_type df; ROOTS_PER_IRREP = [ 0, 0, 0, 0, 0, 0, 1, 1 ]; }. energy('eom-cc3'); ```. crash on second excitation state calculation with error:. ```; PSIO_ERROR: unit = 128, errval = 18; PSIO_ERROR: 18 (Incorrect block end address). An error has occurred. Traceback:; <type 'exceptions.RuntimeError'>:.; Fatal Error: PSIO Error; Error occurred in file: /home/vladimir/git/psi4public/src/lib/libpsio/error.cc on line: 123; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_rd(psi::dpdfile4*, int); : File ""<string>"", line 43, in <module>. File ""/usr/local/psi4/share/psi4/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/psi4/share/psi4/python/proc.py"", line 2243, in run_eom_cc; psi4.cceom(ref_wfn); ```. with respect, Vladimir.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/307:906,error,error,906,https://psicode.org,https://github.com/psi4/psi4/issues/307,6,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, all! I mentioned this issue yesterday at the Psi4 Dev meeting, and I wanted to post the issue here, with more collected information. The crux of the issue, as I have determined, is that the COSX code, when using the ROBUST grid pruning scheme in conjunction with 146 spherical points on either of its grids (initial or final), simply breaks. Consider the following input:; ```; molecule mol {; 0 1; O; H 1 0.96; H 1 0.96 2 104.5; symmetry c1; no_reorient; no_com; }. set {; scf_type cosx; df_scf_guess false; basis aug-cc-pVDZ; e_convergence 1.0e-10; incfock true; incfock_full_fock_every 4; ints_tolerance 1.0e-12; cosx_spherical_points_final 146; cosx_radial_points_final 50; cosx_pruning_scheme robust; }. energy = energy('scf'); ```. A simple expansion of the final COSX grid compared to default. This calculation breaks upon entering the final SCF iteration (where the tight grid is used) with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! ADIIS minimization failed. File a bug, and include your entire input and output !; ! files. !; ! !; !----------------------------------------------------------------------------------!; ```. The following input, an expansion of both the initial and final grids, also fails:; ```; molecule mol {; 0 1; O; H 1 0.96; H 1 0.96 2 104.5; symmetry c1; no_reorient; no_com; }. set {; scf_type cosx; df_scf_guess false; basis aug-cc-pVDZ; e_convergence 1.0e-10; incfock true; incfock_full_fock_every 4; ints_tolerance 1.0e-12; cosx_spherical_points_initial 146 ; cosx_radial_point_initial 50 ; cosx_spherical_points_final 302; cosx_radial_points_final 75 ; cosx_pruning_scheme robust; }. energy = energy('scf'); ```. This one fails in the SAD-guess iteration, with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::diagonalize: DSYEV failed! !; ! Error occurred in file: !; ! /theoryfs2/ds/dpoole",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890:220,ROBUST,ROBUST,220,https://psicode.org,https://github.com/psi4/psi4/issues/2890,3,"['ROBUST', 'error', 'robust']","['ROBUST', 'error', 'robust']"
Availability,"Hi, this is more of a question than an issue (almost certainly due to user error), but I haven't been able to get too far by reading the documentation. . I am trying to achieve the following using the Psi4 Python API: generate a basis set for a molecule, import a predefined grid into Psi4, and evaluate all the basis functions in a basis set on all grid points. Here's a minimal example of that (`wts.npy` and `pts.npy` are in the attached zip file). ```; def minimal_repro():; basis_set = 'cc-pv5z-jkfit'; mol_desc = '''; C 1.54012679 -1.01667266 0.93163498; C 4.07235980 -0.09826576 -0.02267671; H 1.37950007 -0.71809593 2.97064947; H 0.00000000 0.00000000 0.00000000; H 1.31146993 -3.03678988 0.54991030; H 5.61248659 -1.11682814 0.90706854; H 4.30290639 1.92185147 0.36093769; H 4.23298652 -0.39684249 -2.06169120; '''; p4mol = psi4.geometry(mol_desc). # not sure what this parameter should be set to; delta = 0.1. wts = np.load('wts.npy'); pts = np.load('pts.npy'). basis_set = psi4.core.BasisSet.build(p4mol, 'ORBITAL', basis_set); basis_extents = psi4.core.BasisExtents(basis_set, delta). xs = psi4.core.Vector.from_array(pts[:, 0]); ys = psi4.core.Vector.from_array(pts[:, 1]); zs = psi4.core.Vector.from_array(pts[:, 2]); ws = psi4.core.Vector.from_array(wts). blockopoints = psi4.core.BlockOPoints(xs, ys, zs, ws, basis_extents); max_points = blockopoints.npoints(); max_functions = basis_set.nbf(); funcs = psi4.core.BasisFunctions(basis_set, max_points, max_functions); funcs.compute_functions(blockopoints). vals = np.array(funcs.basis_values()['PHI']). all_zeros = []; for col_idx in range(vals.shape[1]):; if np.allclose(vals[:, col_idx], 0.0):; all_zeros.append(col_idx). print('basis fcns that are all zeros', all_zeros); ```. My question is regarding the `delta` parameter to the `BasisExtents` object. Modulating this parameter seems to change the number of basis functions that evaluate to zero at all grid points. For example, at delta = 0.01, I get:. ```; ('basis fcns that are ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1051:75,error,error,75,https://psicode.org,https://github.com/psi4/psi4/issues/1051,1,['error'],['error']
Availability,"Hi,. Anyone noticed that programs like _gcp_ and _xcfour_ are getting loaded when psi4 is starting? Or is it just me? I only noticed because psi4 will stop/crash if e.g. xfcour does not find all libraries (mpi, mkl, etc.). gcp will print an error about its missing input file and be ""defunc"" in my bash. Note that it happens even when none of the programs will actually be used according to the input. I am at a loss what to look at in my psi4 installation. version: 1.1a2.dev309, gnu+mkl build",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/656:241,error,error,241,https://psicode.org,https://github.com/psi4/psi4/issues/656,1,['error'],['error']
Availability,"Hi,. I am running Psi4 on Microsoft Azure. We have a 32 CPU and 128 GB of memory for running our workflow Ubuntu 20.04. When I run our code I get for optimizing `psi4.optimize` I get an initial segmentation fault. Python version 3.7, and psi4 version 1.7. It's odd because with . psi4.set_memory('128GB'); psi4.get_memory(). I can see psi4 has that allocated memory. When I run:. `psi4 --test`. ```; /_pytest/config/__init__.py"", line 620, in _importconftest; assert mod not in mods; AssertionError; ```. This gets returned. What is going on here, any hints?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3154:207,fault,fault,207,https://psicode.org,https://github.com/psi4/psi4/issues/3154,1,['fault'],['fault']
Availability,"Hi,. I am trying to do a large CASCI (16e,16o) but I get an error which I don't understand. Note that the CAS(16e,14o) worked perfectly. Here is the error:; ```; PSIO_ERROR: unit = 53, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""/marisdata/senjean/Git_repo/SA-OO-VQE//intersection_coniques.py"", line 47, in <module>; en0_casci,en1_casci = get_energies_formaldimine(alpha,phi); File ""/marisdata/senjean/Git_repo/SA-OO-VQE//intersection_coniques.py"", line 35, in get_energies_formaldimine; E0_casci = psi4.energy('fci'); File ""/home/senjean/psi4conda/lib/python3.7/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/senjean/psi4conda/lib/python3.7/site-packages/psi4/driver/procrouting/proc.py"", line 2998, in run_detci; ciwfn = core.detci(ref_wfn); RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1557940846948/work/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); ```. and here is the script:. ```; import os; import numpy as np; psi4.set_memory(int(2e9)). # Conical intersection in Formaldimine; pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; psi4.core.set_output_file(""formaldimine.txt"", False); # sto-3g : 13 orbitals, cc-pVDZ: 43, cc-pVTZ: 102. Nelec: 16. def get_energies_formaldimine(alpha,phi):; #name = ""formaldimine_alpha"" + str(alpha) + "".txt""; #psi4.core.set_output_file(name, False); psi4.core.clean(); variables = pes_origin[:] + [alpha, phi]; psi4.geometry(; """"""0 1; N; C 1 {0}; H 2 {1} 1 {3}; H 2 {1} 1 {3} 3 180; H 1 {2} 2 {4} 3 {5}; symmetry c1"""""".format(*variables)); psi4.set_options({'basis': 'cc-pVDZ',; 'reference': 'rhf',; 'scf_type': 'pk', # set e_convergence and d_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959:60,error,error,60,https://psicode.org,https://github.com/psi4/psi4/issues/1959,7,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. I am trying to install psi4 from source, as I need one feature recently added in psi4.; I am working on MacOS but uses GNU compiler (v8.3.0) because I don't manage to make it work with clang, and I'm usually always using GNU anyway. After several trial and error, I manage to build the code with the following CMake options:. cmake -H. -Bobjdir -DCMAKE_CXX_FLAGS=""-march=native"" -DOpenMP_LIBRARY_DIRS=/opt/intel/lib. Once built, I tried the ctest command to see if everything was working, but all tests fail with the error that libiomp5 seems to not be found. However, I have the following libraries in /opt/intel/lib:; libiomp5.a; libiomp5.dylib; libiomp5_db.dylib; libiompstubs5.a; libiompstubs5.dylib. Here is the error output for the test:; ```; 252/448 Testing: nbody-convergence; 252/448 Test: nbody-convergence; Command: ""/usr/local/bin/python3"" ""/Users/bsenjean/Documents/Git_repositories/psi4/tests/runtest.py"" ""/Users/bsenjean/Documents/Git_repositories/psi4/tests/nbody-convergence/input.dat"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/testresults.log"" ""false"" ""/Users/bsenjean/Documents/Git_repositories/psi4"" ""false"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/tests/nbody-convergence/output.dat"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/bin/psi4"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/share/psi4"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/""; Directory: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/tests/nbody-convergence; ""nbody-convergence"" start time: Apr 16 15:44 CEST; Output:. Traceback (most recent call last):; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Library not loaded: @rpath/libiomp5.dylib; Referenced from: /Users/bsenjean/Documents/Git_repositories/ps",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870:262,error,error,262,https://psicode.org,https://github.com/psi4/psi4/issues/1870,3,['error'],['error']
Availability,"Hi,. I encountered the following error message after I did the --test after installation. ""_ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_addons.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_dft_benchmarks.py _; 'scf' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_fcidump_energy.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_molecule_to_string.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_psi4.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_qcvars.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_solvers.py _; 'unittest' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_tdscf_excitations.py _; 'unrestricted' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_tdscf_products.py _; 'unittest' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_vector.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_vibanalysis.py _; 'quick' not found in `markers` configuration option; "". I am wondering what the issues are, and if the issues are just with the test files. Thanks. JJ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1902:33,error,error,33,https://psicode.org,https://github.com/psi4/psi4/issues/1902,12,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,. I have a molecule that has Gallium ion approaching the surface of an aromatic ring. There are 3 in the structure. I want to perform UV excitation on them to get an initial wavelength but running into problems. Is my error so far. My code looks something like this:. ```python. psi4.set_options({; 'scf_type': 'df',; 'g_convergence': 'gau',; 'freeze_core': 'true',; 'reference': 'uhf',; 'save_jk': True,; 'fail_on_maxiter': 'false'; }). molecule = 'X'. energy, wave_function = psi4.energy(; 'hf/6-311g',; return_wfn=True,; molecule=self.molecule; ). rpa = tdscf_excitations(wave_function, states=[10]); poles = [r[""EXCITATION ENERGY""] for r in rpa]; opa_residues = [np.linalg.norm(r[""ELECTRIC DIPOLE TRANSITION MOMENT (LEN)""])**2 for r in rpa]; ecd_residues = [r[""ROTATORY STRENGTH (LEN)""] for r in rpa]; opa_spectrum = spectrum(poles=poles, residues=opa_residues, gamma=0.01, out_units=""nm""); ```. Stacktrace Error:. ```python; File ""/home/sulstice/software/miniconda2/envs/qmpython3/lib/python3.9/site-packages/psi4/driver/procrouting/response/scf_response.py"", line 720, in tdscf_excitations; res_1 = _solve_loop(wfn, ptype, solve_function, singlets_per_irrep, maxiter, restricted, ""singlet""); File ""/home/sulstice/software/miniconda2/envs/qmpython3/lib/python3.9/site-packages/psi4/driver/procrouting/response/scf_response.py"", line 326, in _solve_loop; ret = solve_function(engine, nstates, guess_, maxiter); File ""/home/sulstice/software/miniconda2/envs/qmpython3/lib/python3.9/site-packages/psi4/driver/procrouting/response/scf_response.py"", line 690, in rpa_solver; return solvers.hamiltonian_solver(engine=e,; File ""/home/sulstice/software/miniconda2/envs/qmpython3/lib/python3.9/site-packages/psi4/driver/p4util/solvers.py"", line 989, in hamiltonian_solver; raise RuntimeError(msg); RuntimeError: The H2 matrix is not Positive Definite. This means the reference state is not stable.; ```. Running things I would maybe predict at UHF is not right and I don't think this is a coordinate op",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3134:221,error,error,221,https://psicode.org,https://github.com/psi4/psi4/issues/3134,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. I have been comparing the basis sets _aug-cc-pVTZ_ and _aug-cc-pVQZ_. While I was running frequency calculations on a large set of molecules, I found out that some of my molecules never converged. This is not surprising, as there will always be complex geometries that will have a harder time converging within the default number of iterations (100). One of the molecules which never converged and stood out to me was ammonia (for aug-cc-pVQZ). The optimization of the structure was quick and easy, but the frequency calculation never converged due to the density matrix criterium (got down to ~10e-7, but never 10e-8). The atom coordinates I initially used was retrieved from a force field calculation. As these coordinates didn't work (even after increasing the number of iterations), I then changed the coordinates of ammonia to [this reference](https://www.researchgate.net/figure/Cartesian-coordinates-and-atomic-masses-of-ammonia_tbl2_259630381), but it still didn't do the trick as it got stuck at other atomic displacements instead. After playing around with these coordinates for a while, I finally got my run to converge. Questions is, is there a better (automated) way to achieve this kind of convergence, instead of doing this manually for the other remaining molecules? Changing the number of iterations feels a bit naive (and inefficient) and randomly displacing the atoms pre-Psi4 could mean a huge increase in CPU hours (especially for molecules > 100 Da). How would lowering the density matrix criterium (e.g. 10e-7) affect the results?. All tips appreciated! . Example of the ammonia Psi4 infile that finally worked:; ```; molecule mol_ammonia {; 0 1; H 0.000000000 0.000000000 1.208000000; N 0.000000000 0.000000000 0.000000000; H 1.150353000 0.000000000 -0.536000000; H -0.67517600 -1.0230290000 -0.536000000. units angstrom; no_reorient; }. set globals {; 	basis aug-cc-pVQZ; 	dft_spherical_points 434; 	dft_radial_points 85; }. set_memory(80000000000); try:; optimize('pwpb9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2016:591,down,down,591,https://psicode.org,https://github.com/psi4/psi4/issues/2016,1,['down'],['down']
Availability,"Hi,. I just got an MRCC license and started toying around with the Psi4 interface. Unfortunately, it is not working for me. ; ```; molecule {; 0 1; O; H 1 1.0; H 1 1.0 2 110.0; }. set qc_module mrcc; optimize('ccsdt/cc-pvdz'); freq('ccsdt/cc-pvdz'); ```; Using the mrcc.2023-08-28.binary.tar.gz binary release, I just get a big bunch of file not found errors; ```; $ psi4 -n6 h2o.in ; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown; dmrcc 000000000054274C Unknown Unknown Unknown; dmrcc 000000000040D9CF Unknown Unknown Unknown; dmrcc 0000000000402F57 Unknown Unknown Unknown; dmrcc 0000000000401B3D Unknown Unknown Unknown; dmrcc 00000000013AAE59 Unknown Unknown Unknown; dmrcc 0000000000401A2A Unknown Unknown Unknown; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /home/work/scratch/mrcc_168425/KEYWD; Image PC Routine Line Source ; dmrcc 000000000131B3EC Unknown Unknown Unknown; dmrcc 00000000004DA346 Unknown Unknown Unknown; dmrcc 00000000005432D5 Unknown Unknown Unknown; dmrcc 0000000000543C32 Unknown Unknown Unknown;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159:352,error,errors,352,https://psicode.org,https://github.com/psi4/psi4/issues/3159,1,['error'],['errors']
Availability,"Hi,. I just updated my psi4 conda installation using:. `conda install psi4 python=3.10 -c conda-forge/label/libint_dev -c conda-forge `. imports seem to work fine:. ```; import psi4; import forte; ```; however, when I run the following:. ```; psi4.set_memory('500 MB'); numpy_memory = 2 # No NumPy array can exceed 2 MB in size; psi4.core.set_output_file('output.dat', False); # specify the basis; basis = 'cc-pVTZ'; # Set computation options; psi4.set_options({'basis': basis,; 'scf_type': 'pk',; 'save_jk': 'true',; 'guess': 'core',; 'print' : 5,; 'FREEZE_CORE' : 'True',; 'e_convergence': 1e-8,; 'd_convergence': 1e-10,; 'LOCAL_MAXITER':10000}); geometry = '''; O -4.6674893014 0.2942847846 3.0623807031; H -3.892960984 0.903739148 3.0964143699; H -4.4005368234 -0.1221007613 2.241525046; '''; mol = psi4.geometry(geometry+""symmetry c1""); SCF_E_psi = psi4.energy('scf'); ```; it fails with:. ```; File ~/opt/miniconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/p4util/procutil.py:531, in prepare_options_for_set_options(); 529 current_module = psi_options.get_current_module(); 530 # Get the current Forte options from Forte; --> 531 forte_options = forte.ForteOptions(); 532 forte.register_forte_options(forte_options); 533 psi_options.set_current_module(""FORTE""). AttributeError: module 'forte' has no attribute 'ForteOptions'; ```. I can minimally reproduce the error with:. ```; mport forte; forte_options = forte.ForteOptions(); ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); Cell In[7], line 2; 1 import forte; ----> 2 forte_options = forte.ForteOptions(); AttributeError: module 'forte' has no attribute 'ForteOptions'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3010:1377,error,error,1377,https://psicode.org,https://github.com/psi4/psi4/issues/3010,1,['error'],['error']
Availability,"Hi,. I tried to install release 1.0 from source. The setup script that configures the installation stops with some errors (the entire log of the configuration attempt is at the bottom of this post). Errors:. ```. CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:115,error,errors,115,https://psicode.org,https://github.com/psi4/psi4/issues/581,8,"['Error', 'error']","['Error', 'Errors', 'errors']"
Availability,"Hi,. I've been trying to calculate the energies of monoatomic compounds. All of the atoms ran successfully, except for hydrogen with multiplicity 2. My in-file:; ```; molecule mol_atomic_hydrogen_doublet {; 0 2; H 0.000000000 0.000000000 0.000000000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVQZ; dft_spherical_points 434; dft_radial_points 85; reference uhf; }. set_memory(100000000000); try:; optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); set guess read; optimize('pwpb95-d3bj'); ```. The error I got (including previous lines):; ```; *** tstart() called on host; *** at Fri Aug 21 16:21:36 2020. => Loading Basis Set <=. Name: (AUG-CC-PVQZ AUX); Role: RIFIT; Keyword: DF_BASIS_MP2; atoms 1 entry H line 30 file /home/username/miniconda/share/psi4/basis/aug-cc-pvqz-ri.gbs. --------------------------------------------------------; DF-MP2; 2nd-Order Density-Fitted Moller-Plesset Theory; UMP2 Wavefunction, 28 Threads. Rob Parrish, Justin Turney, Andy Simmonett,; Ed Hohenstein, and C. David Sherrill; --------------------------------------------------------. --------------------------------------------------------; NBF = 46, NAUX = 80; --------------------------------------------------------; CLASS FOCC OCC AOCC AVIR VIR FVIR; ALPHA 0 1 1 45 45 0; BETA 0 0 0 46 46 0; --------------------------------------------------------. Traceback (most recent call last):; File ""/home/username/miniconda/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/dri",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995:629,error,error,629,https://psicode.org,https://github.com/psi4/psi4/issues/1995,1,['error'],['error']
Availability,"Hi,. MBIS calculation fails for iodine containing molecules with DZVP basis set using `psi4 1.4.1` and `psi4 1.6.1`. Here is a minimal reproducible example:; ```; molecule dummyol {; 0 1; C 0. -1.94 0.; I 0. 0.24 0.; H -1.04 -2.27 0.; H 0.52 -2.27 0.90; H 0.52 -2.27 -0.90; }; set {; guess sad; scf_type df; basis DZVP # works for def2-svp; e_convergence 8; d_convergence 8; }; e, wfn = energy('scf', return_wfn=True); oeprop(wfn, ""MBIS_VOLUME_RATIOS"", 'MBIS_CHARGES', title='CH3I-dzvp'). ```; The error message reads:; ```; Traceback (most recent call last):; File ""/home/anaconda3/envs/psi4-09-26-22/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 33, in <module>; File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/util.py"", line 72, in oeprop; free_atom_volumes(wfn); File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/prop_util.py"", line 121, in free_atom_volumes; psi4.oeprop(at_wfn, 'MBIS_CHARGES', title=a_sym + "" "" + method, free_atom=True); File ""/home/anaconda3/envs/psi4-09-26-22/lib//python3.10/site-packages/psi4/driver/p4util/util.py"", line 74, in oeprop; oe.compute(). RuntimeError: ; Fatal Error: Atomic Number 53 unsupported by MBIS; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1657298395608/work/psi4/src/psi4/libmints/oeprop.cc on line: 1871; The most recent 5 function calls were:. psi::OEProp::compute_mbis_multipoles(bool); psi::OEProp::compute(). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""SCF_TYPE"", ""df""); core.set_global_option(""BASIS"", ""DZVP""); core.set_global_option(""E_CONVERGENCE"", 8); core.set_global_option(""D_CONVERGENCE"", 8); e, wfn = energy('scf', return_wfn=True); --> oeprop(wfn, ""MBIS_VOLUME_RATIOS"", 'MBIS_CHARGES', title='CH3I-dzvp'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Atomic Number 53 unsuppor",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2728:498,error,error,498,https://psicode.org,https://github.com/psi4/psi4/issues/2728,1,['error'],['error']
Availability,"Hi,. Thanks for this great open source program!. We got an unexpected error when running a calculation on a water cluster recently. It seems to give a segmentation fault immediately before the start of the SCF iterations. I've attached the input and output files and the output to screen. We have run some smaller water clusters where the error does not occur. [input.txt](https://github.com/psi4/psi4/files/7097168/input.txt); [output.txt](https://github.com/psi4/psi4/files/7097170/output.txt); [output_to_screen.txt](https://github.com/psi4/psi4/files/7097171/output_to_screen.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2288:70,error,error,70,https://psicode.org,https://github.com/psi4/psi4/issues/2288,3,"['error', 'fault']","['error', 'fault']"
Availability,"Hi,. The link to . http://www.thch.uni-bonn.de/tc/index.php?section=downloads&subsection=getd3&lang=english. listed in. https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dftd3.rst. does not lead to an existing page.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1084:68,down,downloads,68,https://psicode.org,https://github.com/psi4/psi4/issues/1084,1,['down'],['downloads']
Availability,"Hi,. When I submit a wB97M-V calculation using the SG-1 grid (recommended in the wB97M-V paper: http://aip.scitation.org/doi/10.1063/1.4952647), I receive the following error:. ```RuntimeError: ; Fatal Error: There is no SG-1 grid defined for the requested atomic number!; Error occurred in file: /tmp/garden-install.fcce11d8cfbe/psi4-1.1-desres05-c7/psi4/src/psi4/libfock/cubature.cc on line: 2488; The most recent 5 function calls were:. psi::MolecularGrid::buildGridFromOptions(psi::MolecularGrid::MolecularGridOptions const&); psi::DFTGrid::buildGridFromOptions(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >); psi::DFTGrid::DFTGrid(std::shared_ptr<psi::Molecule>, std::shared_ptr<psi::BasisSet>, psi::Options&). *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. Are there plans to include support for the SG-1 grid in Psi4? If not, are there any alternative grids that do work? _Removing_ the SG-1 option from the input file simply results in a segfault. The input file is below:. ```; memory 13500 Mb; molecule {; 0 1; C 4.067369 -2.240127 -0.129252; C 4.972458 -1.390566 3.098494; C 2.921005 -1.630865 0.608144; C 2.878286 -1.651992 2.002187; C 0.763829 -0.484138 1.955055; C 1.885141 -1.036307 -0.112440",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/827:169,error,error,169,https://psicode.org,https://github.com/psi4/psi4/issues/827,3,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. it seems I'm no longer able to compile the trunk. The error I get is; ```; CMake Error at src/CMakeLists.txt:90 (list):; list sub-command FIND requires three arguments. CMake Error at src/CMakeLists.txt:97 (if):; if given arguments:. ""STREQUAL"" ""/home/work/psi4/psi4/objdir/stage/home/work/psi4/install/lib"". Unknown arguments specified. -- Configuring incomplete, errors occurred!; ```. and I get it consistently even for a clean checkout and empty installation directory. The command I'm using is; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBRARIES=""-lopenblaso"" -DENABLE_AMBIT=OFF -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_PCMSolver=OFF -DCMAKE_INSTALL_PREFIX=/home/work/psi4/install -DCMAKE_AR=""/usr/bin/gcc-ar"" -DCMAKE_RANLIB=""/usr/bin/gcc-ranlib"" -DCMAKE_BUILD_TYPE=RelWithDebInfo ..; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/648:59,error,error,59,https://psicode.org,https://github.com/psi4/psi4/issues/648,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"Hi,; I have created a brand new environment with psi4 1.6.1 on windows10 machine using:; ```; conda create -n psi4 python=3.8; activate psi4; conda install psi4 -c conda-forge -c psi4; ```; I had problems with psi4.core.be_quiet(), so I thought that maybe I need to set paths.; I tried to use psi4_io to set paths, but get an error:; ```; >>>import psi4; >>>import os; >>> psi4_io.set_default_path; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'psi4_io' is not defined; ```; Cheers,; M",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2668:326,error,error,326,https://psicode.org,https://github.com/psi4/psi4/issues/2668,1,['error'],['error']
Availability,"Hi,; could you take a look at the attached runs. The tar.gz file includes three geometry optmmization jobs of the same molecule from three different starting conformations. They all fail on our cluster due to memory issues. The cluster is using cgroups. I am asking slurm for 10gb and specifying ```memory 8.0 Gb```. Two of the jobs are have the following error message (rec19_4405620.log, rec284_4405895.log):; ```slurmstepd: error: Detected 1 oom-kill event(s) in step 4405620.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```. while the third has this error (rec24_4405625.log):; ```Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1550197239473/work/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::tocwrite(unsigned long); ```. - One job (rec284_pid139597.out) was killed before the first scf even started.; - the other two were killed during the first gradient evaluation (rec19_pid139597.out, rec24_pid139597.out) . These are just three jobs out of 500 similar ones that failed. I picked them to show a couple of divers failures. The input files are included as well (*.dat).; I tried the same thing with B3LYP and it worked.; Psi4 used: ```Psi4 1.3rc2```. Any ideas?; Thanks,; Alberto; [psi4.wb97.tar.gz](https://github.com/psi4/psi4/files/3040711/psi4.wb97.tar.gz)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590:356,error,error,356,https://psicode.org,https://github.com/psi4/psi4/issues/1590,7,"['Error', 'error', 'failure']","['Error', 'error', 'failures']"
Availability,"However, I get the following error. ```; ###########################################################; ### ###; ### DMRG-SCF ###; ### ###; ### CheMPS2 by Sebastian Wouters ###; ### https://github.com/SebWouters/CheMPS2 ###; ### Comput. Phys. Commun. 185 (6), 1501-1514 (2014) ###; ### ###; ###########################################################. Number of variables in the x-matrix = 342; CheMPS2 output is temporarily written to the file output.dat.chemps2 and will be copied here.; iwl_buf_init: Can't open file 33; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 80, in <module>. File ""/global/home/groups-sw/mhg/psi4/install/share/psi4/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/global/home/groups-sw/mhg/psi4/install/share/psi4/python/procedures/proc.py"", line 2686, in run_dmrgci; dmrg_wfn = psi4.dmrg(ref_wfn). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /global/home/groups-sw/mhg/psi4/psi4.git/src/lib/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::IWL::fetch(); psi::DiskJK::compute_JK(); ```. when I try to run a calculation with. ```; numOrbitals = [ 47 , 9 ]; R(O)HF DOCC = [ 28 , 4 ]; R(O)HF SOCC = [ 0 , 1 ]; frozen_docc = [ 9 , 0 ]; active = [ 38 , 9 ]; virtual = [ 0 , 0 ]; nElectrons = 65; nEl. active = 47; ```. I'm having trouble seeing why this would fail. First of all, the scratch partition on the node has over 2 TB of free space, and second, there are only 65 basis functions in the system, so even if one didn't use any kind of symmetries for the repulsion integrals, one would still only need 143MB of storage. All the jobs smaller than above run succesfully, and all the jobs l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/464:1074,Error,Error,1074,https://psicode.org,https://github.com/psi4/psi4/issues/464,3,['Error'],['Error']
Availability,"I am aiming at the grid-based evaluation of molecular electrostatic fields/potentials as depicted in the input example [props4](https://github.com/psi4/psi4/blob/master/samples/props4/input.dat). Running Psi4 1.1, the input example fails with the message; `AttributeError: 'builtin_function_or_method' object has no attribute 'Vvals'`.; Calling `Exvals`, `Eyvals` or `Ezvals` results in the same error. Furthermore, I experienced the saving of `grid_field.dat` and `grid_esp.dat`, which follows after calling `prop()`, to be extremely slow (~1 MB per 5 minutes). In conclusion, I kindly ask for responses to the following questions:; - What is going wrong with the direct capturing of one-electron properties as Python arrays?; - How could the saving of the `.dat` files be sped up?; - Is there a way to change the output file names to something different than `grid_field.dat`/ `grid_esp.dat`?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1614:396,error,error,396,https://psicode.org,https://github.com/psi4/psi4/issues/1614,1,['error'],['error']
Availability,"I am attempting run a frequency calculation with Psi4 (version 1.5) and Python 3.7.10. All other calculations (optimization, single point energy, etc.) work well. However, when I attempt to run a frequency calculation with the command `psi4.frequency(""B3LYP/cc-pVDZ"", molecule=molecule_xyz, return_wfn=True, dertype='gradient')`, I get the following error. From [what I've seen on Stack Overflow](https://stackoverflow.com/questions/69564817/typeerror-load-missing-1-required-positional-argument-loader-in-google-col), this may be an issue with psi4 compatibility. How can I navigate this issue? . ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); [<ipython-input-13-13c5f85efa27>](https://localhost:8080/#) in <module>(); 4 ; 5 psi4.set_output_file(F'{molecule_name}_frequency_analysis.dat', False); ----> 6 psi4.frequency(""B3LYP/cc-pVDZ"", molecule=molecule_xyz, return_wfn=True, dertype='gradient'); 7 correction_g = parse_free_energy(F'{molecule_name}_frequency_analysis.dat'); 8 print(""Correction G: "", correction_g). 21 frames; [/usr/local/lib/python3.7/site-packages/psi4/driver/driver.py](https://localhost:8080/#) in frequency(name, **kwargs); 1772 ; 1773 # Compute the hessian; -> 1774 H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); 1775 ; 1776 # Project final frequencies?. [/usr/local/lib/python3.7/site-packages/psi4/driver/driver.py](https://localhost:8080/#) in hessian(name, **kwargs); 1493 # Check if this is a CBS extrapolation; 1494 elif gradient_type == ""cbs_gufunc"":; -> 1495 return driver_cbs._cbs_gufunc(hessian, name.lower(), **kwargs, ptype=""hessian""); 1496 elif gradient_type == ""cbs_wrapper"":; 1497 return driver_cbs.cbs(hessian, ""cbs"", **kwargs, ptype=""hessian""). [/usr/local/lib/python3.7/site-packages/psi4/driver/driver_cbs.py](https://localhost:8080/#) in _cbs_gufunc(func, total_method_name, **kwargs); 1963 optstash = p4util.OptionsState(['BASIS']); 1964 core.set_glob",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2510:350,error,error,350,https://psicode.org,https://github.com/psi4/psi4/issues/2510,1,['error'],['error']
Availability,"I am getting a series of compilation errors:. ```; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:1: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:37,error,errors,37,https://psicode.org,https://github.com/psi4/psi4/issues/206,4,['error'],"['error', 'errors']"
Availability,"I am getting an error in Psi4 1.5 that I believe is a bug. Here is a minimal script to reproduce it. ```python; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'follow'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97M-D3BJ/def2-TZVPPD', molecule=mol); ```. It throws the exception. ```; psi4.driver.p4util.exceptions.ValidationError: Stability analysis root following is only available for UHF; ```. Since the script does use UHF, the error doesn't make sense.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2577:16,error,error,16,https://psicode.org,https://github.com/psi4/psi4/issues/2577,3,"['avail', 'error']","['available', 'error']"
Availability,"I am just wondering whether this composite ab initio method is available in PSI4?. If I give energy('ccCA-PS3') for a molecule then; from the output error message I recognize that this keyword is not available. . psi4.driver.p4util.exceptions.ValidationError: Energy method ""ccca-ps3"" is not available. Either I maybe making some mistakes or if you could share some sample input file related; to this composite method then it would be helpful.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2157:63,avail,available,63,https://psicode.org,https://github.com/psi4/psi4/issues/2157,4,"['avail', 'error']","['available', 'error']"
Availability,"I am running some psi4 jobs which involve modifying the parameters DFT_VV10_B and DFT_VV10_C for various benzene dimer configurations. For several dimer configurations and several values of (b,c), I get an error telling me that ADIIS minimization failed, and asking me to file a bug report. I've prepared an example and put my input and output files below. Any help I could get would be wonderful—and please let me know if I can provide any more information that would be helpful! . Input file:; ```; set num_frozen_docc 12; set {; dft_vv10_b 0.06022547162926983; dft_vv10_c 0.7450476605857299; }; set {; basis def2-tzvppd; guess sad; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; }; set {; wcombine False; }; molecule mol {; 0 1; C -0.260781259973 -0.714012941782 1.022641061033; C 0.448798235138 -0.584866555587 1.116392879147; C 0.671191593804 0.158609920222 1.104026912627; C 0.177969561551 0.681404978559 1.093307893756; C -0.560580808895 0.542719215332 1.056079456761; C -0.776583606603 -0.133446136243 1.103859872549; H -0.442720873003 -1.244238976392 0.982141695030; H 0.874512929539 -0.960390442589 1.119149924166; H 1.217460053606 0.336381670040 1.046181387539; H 0.335297687566 1.281777775821 0.982193856028; H -0.948519039798 0.925731991759 1.117846063269; H -1.420111450991 -0.227880344246 1.099752848840; C -0.431336419082 -0.578608087844 -1.006105897774; C -0.616450380987 0.164556718463 -1.058443190817; C -0.158086394624 0.730699386222 -0.889727187104; C 0.484942144607 0.574229834356 -0.649010141458; C 0.688355917017 -0.142302467208 -0.581381981865; C 0.242793965654 -0.737031769438 -0.731596272801; H -0.732074019279 -1.008555512000 -1.147218404188; H -1.164258386631 0.206232540657 -1.161273694869; H -0.258581893650 1.331482152944 -0.817970826130; H 0.882404676284 0.994103603000 -0.554927857467; H 1.180331932734 -0.274347490367 -0.3724813932",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:206,error,error,206,https://psicode.org,https://github.com/psi4/psi4/issues/2641,2,"['error', 'robust']","['error', 'robust']"
Availability,"I am running the following input on Ubuntu : ; ---------------; memory 12 Gb. molecule ab { ; 0 1; Cu 0.00000 0.00000 0.00000; Cu 2.35000 0.00000 0.00000; units ang; }. set basis aug-cc-pvtz ; set scf_type df; set reference rhf; set e_convergence 1e-06; set d_convergence 1e-06; set ints_tolerance 1e-08. set frozen_uocc [5,5,5,5,5,5,5,5]; set freeze_core true; set roots_per_irrep [2,2,2,2,2,2,2,2]; set maxiter 100000; ccsd_energy, wfn = properties('eom-ccsd', properties=['oscillator_strength'],return_wfn=True). ------------------------. and I get the following error : . 	Projections for excited state, irrep Ag, root 1:; 	<0|Le^(-T)|0><0|Re^T|0> = 0.0000000000; 	<0|Le^(-T)|S><S|Re^T|0> = 0.9021404202; 	<0|Le^(-T)|D><D|Re^T|0> = 0.0978595968; 	Sum of above = 1.0000000170; 	Approx. excitation level = 1.0978596138; PSIO_ERROR: Attempt to write into next entry: 121, LIJAB; PSIO_ERROR: unit = 121, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); terminate called after throwing an instance of 'psi::PsiException'; what(): ; Fatal Error: PSIO Error; Error occurred in file: /home/luca/Desktop/psi4_max/psi4-master/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::psio_write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). ./bash.sh: line 7: 10101 Aborted (core dumped) /home/luca/Desktop/psi4_max/psi4-master/bi/stage/usr/local/psi4/bin/psi4 cu2.dat cu2.out; ------------------------------------------------------------------------------------------------------------------. I have no idea what's going wrong. LUCA",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/786:566,error,error,566,https://psicode.org,https://github.com/psi4/psi4/issues/786,5,"['Error', 'error']","['Error', 'error']"
Availability,"I am seeing large differences in wB97X-D3BJ energy between 1.4.0 and 1.3.2, and between different 1.4.0 installations. It seems that installing 1.4.0 with `-c anaconda` can cause the differences between 1.4.0 installations, possibly because it replaces the default linear algebra libraries with MKL versions. Such an installation runs 50% faster, but also gives wrong energies in some situations, sometimes by more than a Hartree. I've only seen the problem with clusters and large basis sets, which suggests it's a numerical issue. I've tested PBE, M06-2X, and wB97X-D3BJ, and so far it only appears in wB97X-D3BJ. Also, the error goes away if less RAM is provided (say, 10 GB instead of 32 GB). This suggests it may be related to the new ability of Psi4 1.4.0 to do in-core omega integrals (https://github.com/psi4/psi4/pull/1749). Working env: `conda create --name psi4_v1.4.0 python=3.8 psi4 psi4-rt -c psi4 -y`. Broken env: `conda create --name psi4_v1.4.0_mkl python=3.8 psi4 psi4-rt -c psi4 -c anaconda -y`. Example script: https://drive.google.com/file/d/1c0wZO47h9ooRXQMzTW9eETLWozo4MT_O/view?usp=sharing. To reproduce: install psi4 via conda with `-c anaconda` as shown, activate the env, then run the provided script `python psi4_1.4.0_omega_issue.py`. The energy should be approximately -1965.2319, but will instead give something like -1963.3023.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279:626,error,error,626,https://psicode.org,https://github.com/psi4/psi4/issues/2279,1,['error'],['error']
Availability,"I am trying to build a psi4 plugin but I am getting pybind11 related error in cmake.; using`psi4 --plugin-name myplugin --plugin-template aointegrals`, followed by `cmake .`, I get the following error:; ```; -- The CXX compiler identification is GNU 5.2.0; -- Check for working CXX compiler: /opt/apps/gcc/5.2.0/bin/g++; -- Check for working CXX compiler: /opt/apps/gcc/5.2.0/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Psi4 script: /home/akumar1/newriver/installed/psi4/latest_psi4/bin/psi4; -- Psi4 headers: /home/akumar1/newriver/installed/psi4/latest_psi4/include; -- Psi4 library: /home/akumar1/newriver/installed/psi4/latest_psi4/lib//psi4/core.so; -- Psi4 components: ; -- Python executable: /home/akumar1/newriver/installed/python/bin/python3. CMake Error at ; /home/akumar1/newriver/installed/psi4/latest_psi4/share/cmake/psi4/psi4Config.cmake:142 ; (find_package):; Could not find a package configuration file provided by ""pybind11"" with any; of the following names:. pybind11Config.cmake; pybind11-config.cmake; ; Add the installation prefix of ""pybind11"" to CMAKE_PREFIX_PATH or set; ""pybind11_DIR"" to a directory containing one of the above files. If; ""pybind11"" provides a separate development package or SDK, be sure it has; been installed.; Call Stack (most recent call first):; CMakeLists.txt:35 (find_package); ```; I am up to date with the psi4's source code. Do I need to set a `CMAKE_PREFIX_PATH` specfically for locating pybind11 ? Please let me know if you need any more information.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/775:69,error,error,69,https://psicode.org,https://github.com/psi4/psi4/issues/775,3,"['Error', 'error']","['Error', 'error']"
Availability,"I am trying to build psi4 using Intel 2017 compilers, gcc=5.4 on an Ubuntu system. - Tried with python version 2.7.2 as well as 3.5. (Following is with Python 3.5) **The error with Python 2.7 is same as following.** . - Also, tried gcc/g++ 4.9.3 version. Same problem persists. I have run this before starting to build;; ```; source /opt/intel/bin/compilervars.sh intel64; export MATH_ROOT=$MKLROOT; export LD_PRELOAD=/opt/intel/mkl/lib/intel64/libmkl_core.so:/opt/intel/lib/intel64/libiomp5.so. ```; The Error logs and output are attached (check bottom of the post). Any suggestions ? . ```; ./setup --prefix=""/home/vayu/ChemPackage/psi4/opt_ins"" --cc=icc --cxx=icpc --fc=ifort --mkl=parallel build; Configuring system: Ubuntu; cmake -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Proble",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:170,error,error,170,https://psicode.org,https://github.com/psi4/psi4/issues/629,2,"['Error', 'error']","['Error', 'error']"
Availability,"I am trying to do constrained geometry optimizations using the PsiAPI, however this results in a segmentation fault. Here's an example:; ```; import psi4. h2o = psi4.geometry(""""""; O; H 1 1.00; H 1 1.00 2 103.1; """"""). psi4.set_options({""frozen_distance"": ""0 1""}); psi4.optimize(""HF/6-31G"", molecule=h2o); ```; I am using psi4 1.2a1.dev1159 installed from source with Anaconda Python 3.6 on macOS 10.13.4.; Thanks for your help!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/989:110,fault,fault,110,https://psicode.org,https://github.com/psi4/psi4/issues/989,1,['fault'],['fault']
Availability,"I am trying to install Psi4 with Conda on a Linux machine with Python 3.11. However, it does not seem like Python 3.11 is supported at this time despite the README badge showing 3.11. Are there plans to add a Python 3.11 Conda build in the near future?; ; ```; conda create --name psi4 python=3.11; conda activate psi4; conda install psi4 -c psi4; ```. ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: -; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - psi4 -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.10,<3.11.0a0|>=3.8,<3.9.0a0|>=3.9,<3.10.0a0|>=3.7,<3.8.0a0|>=3.6,<3.7.0a0|>=3.5,<3.6.0a0']. Your python: python=3.11. If python is on the left-most side of the chain, that's the version you've asked for.; When python appears to the right, that indicates that the thing on the left is somehow; not available for the python version you are constrained to. Note that conda will not; change your python version to a different minor version unless you explicitly specify; that. The following specifications were found to be incompatible with your system:. - feature:/linux-64::__glibc==2.35=0; - psi4 -> libgcc-ng[version='>=7.5.0'] -> __glibc[version='>=2.17']; - python=3.11 -> libgcc-ng[version='>=11.2.0'] -> __glibc[version='>=2.17']. Your installed version is: 2.35; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3031:1406,avail,available,1406,https://psicode.org,https://github.com/psi4/psi4/issues/3031,1,['avail'],['available']
Availability,"I am trying to install the package using conda/mamba in a fresh environment, I get the following error using `mamba install -c psi4 psi4`:. `nothing provides mpc 1.0.1 needed by gcc-5-mp-5.2.0-0`. Am I doing something wrong or does the feedstock need updating?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2898:97,error,error,97,https://psicode.org,https://github.com/psi4/psi4/issues/2898,1,['error'],['error']
Availability,"I am trying to run a porphyrin radical calculation with 1700 basis functions. I call dferi->compute() in my plugin and it seems that during the generation of the MO DF integrals, there is some sort of segmentation fault. I generate all of the MO integrals using density fitting. . I have a minimal plugin available to test this input. . The input is given below: . ```; memory 100 gb; molecule {; 0 1; C 0.68541667 0.00000000 4.17724008; C -0.68541667 0.00000000 4.17724008; C -1.07715949 0.00000000 2.85236290; C 1.07715949 0.00000000 2.85236290; N 0.00000000 0.00000000 2.03366350; C 2.35903958 0.00000000 2.45806358; C 2.81721573 0.00000000 1.05258796; N 2.05486054 0.00000000 0.01405448; C 2.88740001 0.00000000 -1.13057937; C 4.23537365 0.00000000 0.67022148; C 4.27600326 0.00000000 -0.70111647; C 2.48623109 0.00000000 -2.40919453; C 1.07657777 0.00000000 -2.84029441; N 0.00000000 0.00000000 -2.02366514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/157:214,fault,fault,214,https://psicode.org,https://github.com/psi4/psi4/issues/157,2,"['avail', 'fault']","['available', 'fault']"
Availability,"I am trying to set `DF_INTS_NUM_THREAD` since https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dfmp2/mp2.cc might be eating too much memory during DFMP2. However when I try to set it in my input file as in:. ```; memory 393GB; set_num_threads(64); psi4_io.set_default_path(""BWILEYtest/psi4/Psi4-Alpelisib""); set df_ints_num_thread = 16; ```. I get:; ```; ! Fatal Error: DF_INTS_NUM_THREAD is not a valid option. !; ! Error occurred in file: /scratch/psilocaluser/conda- !; ! builds/psi4-multiout_1638121835567/work/psi4/src/psi4/liboptions/liboptions. !; ! h on line: 55 !; ! The most recent 5 function calls were: !; ! psi::Options::use(std::__cxx11::basic_string<char, std::char_traits<char>, !; ! std::allocator<char> >&); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2603:369,Error,Error,369,https://psicode.org,https://github.com/psi4/psi4/issues/2603,2,['Error'],['Error']
Availability,"I and my colleagues are trying to transition into using JSON in- and output files for Psi4 to add another layer of structure to our database. We understand that this is a work in progress, but I can't find any examples of what would work for optimization and/or frequency calculations in the examples dir (https://github.com/psi4/psi4/tree/master/tests/json). I tried changing one of the example input files to adapt it to our own type of calculations, but I just get errors while running it using the --qcschema flag as I can't seem to get the structure of the JSON file right. Is there an unfinished guide on how to create these JSON files?. Let say I have a non-JSON file that looks like the following:; ```; molecule mol_water {; 0 1; O 0.000000000 0.000000000 0.117000000; H 0.000000000 0.763400000 -0.468100000; H 0.000000000 -0.763400000 -0.468100000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVTZ; dft_spherical_points 434; dft_radial_points 85; }. set_memory(25000000000). try:; optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); set guess read; optimize('pwpb95-d3bj'). E, wfn = frequency('pwpb95-d3bj', return_wfn=True); print(wfn.frequencies().get(0, 0)); ```. How would it be expressed as a valid JSON file?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2117:468,error,errors,468,https://psicode.org,https://github.com/psi4/psi4/issues/2117,1,['error'],['errors']
Availability,"I attempted to install Psi4 using Conda that used python3.8 and received the following error:. ```; UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - psi4 -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.5,<3.6.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0']. Your python: python=3.8; ```. Install command: `conda install -c psi4 psi4`; Conda version: `4.8.3`; Python version: `3.8.3`; Linux: `Debian Buster`. Is there anything holding back psi4 from being used with python3.8? Does there even need to be an upper limit on the python version one can use?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1979:87,error,error,87,https://psicode.org,https://github.com/psi4/psi4/issues/1979,1,['error'],['error']
Availability,"I believe we have had this problem in the past. Take a symmetric molecule who's optimal wavefunction should contain less symmetry:. ```python; import numpy as np. mol = psi4.geometry(""""""; 0 1; C 0.0 0.0 0.673055; C 0.0 0.0 -0.673055; H 0.0 0.934981 1.246807; H 0.0 -0.934981 1.246807; H 0.934981 0.0 -1.246807; H -0.934981 0.0 -1.246807; symmetry c1; """"""). # Set reference and guess.; psi4.set_options({; ""reference"": ""rhf"",; ""guess"": ""sad"",; ""basis"": ""DZP"",; ""soscf"": ""true"",; # ""sad_frac_occ"": ""true""; }). e_scf = energy('scf'); if np.allclose(e_scf, -77.87781349420317):; print(""Found non-symmetric minima! Success!""); elif np.allclose(e_scf, -77.84789770426966):; print(""Found symmetric minima... failure.""); else:; print(""You found something... wrong.""); ```. The `-77.847` result should be found when the molecule is constrained to symmetry. However, without that constraint there is a lower SCF result to be found. The kicker is even without the symmetry restraint (computation in `c1`) we fairly consistently end up with a symmetric wavefunction. Any ideas on how to avoid this?. Note 1: The stability analysis is showing that it is indeed finding the wrong answer and there are negative eigenvalues present. We should be able to follow these once the py-scf iterations are finished. Note 2: This is not deterministic for which result we land in (whoo!). Note 3: Moving an atom out of place by 1e-14 or so seems to ensure we find the correct energy. Really any noise lets the diagonalizer break out of its self-imposed symmetry constraints.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875:701,failure,failure,701,https://psicode.org,https://github.com/psi4/psi4/issues/875,1,['failure'],['failure']
Availability,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240:183,error,error,183,https://psicode.org,https://github.com/psi4/psi4/issues/240,2,"['error', 'failure']","['error', 'failure']"
Availability,"I follow the f-sapt example in https://psicode.org/psi4manual/master/fisapt.html#i-sapt-a-representative-example.; When I run the fsapt.py, it reported such error:; Traceback (most recent call last):; File ""fsapt.py"", line 1048, in <module>; stuff = compute_fsapt(dirname, False); File ""fsapt.py"", line 888, in compute_fsapt; order2 = extract_order2_fsapt(osapt, total_ws['A'], total_ws['B'], frags); File ""fsapt.py"", line 496, in extract_order2_fsapt; val = np.einsum('i,ij,j', valueA, value, valueB); File ""<__array_function__ internals>"", line 6, in einsum; File ""/pubhome/zchen02/miniconda3/envs/psi4/lib/python3.7/site-packages/numpy/core/einsumfunc.py"", line 1361, in einsum; return c_einsum(*operands, **kwargs); ValueError: operands could not be broadcast together with remapped shapes [original->remapped]: (52,)->(52,newaxis) (51,51)->(51,51) (52,)->(52) ; So I wonder is this a bug in program or somthing other?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2281:157,error,error,157,https://psicode.org,https://github.com/psi4/psi4/issues/2281,1,['error'],['error']
Availability,"I followed your installation instructions for [Linux](http://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-command-line). The machine I'm installing this on is CentOS 7.2 kernel 3.10.0-327.36.1.el7.x86_64 GNU/Linux; Running `psi4 --test` gives the following error traceback:. <details>. ```; /home/je714/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; =============================================== test session starts ===============================================; platform linux -- Python 3.5.3, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- /home/je714/psi4conda/bin/python; cachedir: .cache; rootdir: /home/je714, inifile:; collected 19 items. psi4conda/lib/python3.5/site-packages/psi4/tests/test_aaa_profiling.py::test_threaded_blas xfail; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_gdma PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_chemps2 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_libefp PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_pcmsolver PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_erd PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_simint PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_json PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf FAILED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:311,error,error,311,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['error'],['error']
Availability,"I found a typo, while reviewing the code for tdscf_excitations. I did not reproduce an issue. I found the typo before actually using the code (therefore no formal bug report). ; ""LEFT EIGENVECTOR ALPHA"" is exported wrong; it holds the value of ""LEFT EIGENVECTOR BETA"".; The correct value of ""LEFT EIGENVECTOR ALPHA"" is overwritten. The error should be in:; https://github.com/psi4/psi4/blob/75ae6967d25db377cce83524ae16b348685d50d0/psi4/driver/procrouting/response/scf_response.py#L785. The line should read BETA. I will send a pull request very soon, which fixes this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2452:336,error,error,336,https://psicode.org,https://github.com/psi4/psi4/issues/2452,1,['error'],['error']
Availability,"I found that in version=1.5 MintsHelper.ao_eri() does not work for multiple basis sets, such as MintsHelper.ao_eri(BasisA, BasisA, BasisB, BasisB).; In 1.5, I ran this:; ```python; print(""python=%s, \npsi4=%s""%(sys.version, psi4.__version__)); H = psi4.geometry(; """"""; nocom; noreorient; H -1 0 0; units bohr; symmetry c1""""""; ); O = psi4.geometry(; """"""; nocom; noreorient; O 1 0 0; units bohr; symmetry c1""""""; ); psi4.set_options({""reference"": ""uhf""}); EH, wfnH = psi4.energy(""scf/sto-3g"", molecule=H, return_wfn=True); EO, wfnO = psi4.energy(""scf/sto-3g"", molecule=O, return_wfn=True); mints = psi4.core.MintsHelper(wfnH.basisset()); aoeriHO = np.array(mints.ao_eri(wfnO.basisset(), wfnO.basisset(), wfnH.basisset(), wfnH.basisset())); aoeriHO.shape; ```; ==>; ```; python=3.8.12 (default, Oct 12 2021, 13:49:34) ; [GCC 7.5.0], ; psi4=1.5; RuntimeError Traceback (most recent call last); /tmp/ipykernel_845/2933828549.py in <module>; ----> 1 aoeriHO = np.array(mints.ao_eri(wfnO.basisset(), wfnO.basisset(), wfnH.basisset(), wfnH.basisset())); 2 aoeriHO.shape. RuntimeError: ; Fatal Error: Unexpected integral type (aa|bb) in setup_sieve(); Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1638121835567/work/psi4/src/psi4/libmints/twobody.cc on line: 249; The most recent 5 function calls were:. psi::TwoBodyAOInt::setup_sieve(); psi::IntegralFactory::eri(int, bool, bool); ```; But in 1.3.2, the same code gave me; ```; python=3.7.11 (default, Jul 27 2021, 14:32:16) ; [GCC 7.5.0], ; psi4=1.3.2; (5, 5, 1, 1); ```; I am not sure if this was an issue with my python or my WSL2 or psi4. Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2439:1084,Error,Error,1084,https://psicode.org,https://github.com/psi4/psi4/issues/2439,2,['Error'],['Error']
Availability,"I get the following error when building psi4. ```; Scanning dependencies of target pcmsolver; [ 53%] Creating directories for 'pcmsolver'; [ 53%] Performing download step for 'pcmsolver'. [ 53%] No patch step for 'pcmsolver'; [ 53%] No update step for 'pcmsolver'; [ 53%] Performing configure step for 'pcmsolver'; CMake Error: The source directory ""/Users/sternc1/src/python-lib/psi4public/interfaces/pcmsolver"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI.; make[2]: *** [interfaces/pcmsolver-stamp/pcmsolver-configure] Error 1; make[1]: *** [src/lib/libpsipcm/CMakeFiles/pcmsolver.dir/all] Error 2; make: *** [all] Error 2; ```. I used the following setup command:; `./setup --cc /usr/local/bin/clang-omp --cxx /usr/local/bin/clang-omp --fc /usr/local/bin/gfortran`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/199:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/issues/199,6,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,"I get the following output with request to submit a bug report:; ```; Threads set to 4 by Python driver. Memory set to 11.176 GiB by Python driver.; Traceback (most recent call last):; File ""/var/lib/slurm/slurmd/job23834122/slurm_script"", line 16, in <module>; myener = psi4.energy(""WB97X/aug-cc-pvqz"", molecule=geom); File ""/home/x_davva/wd/miniconda3/envs/ACT/lib/python3.9/site-packages/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/x_davva/wd/miniconda3/envs/ACT/lib/python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 2455, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/x_davva/wd/miniconda3/envs/ACT/lib/python3.9/site-packages/psi4/driver/procrouting/proc.py"", line 1670, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/x_davva/wd/miniconda3/envs/ACT/lib/python3.9/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""/home/x_davva/wd/miniconda3/envs/ACT/lib/python3.9/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 429, in scf_iterate; self.form_C(); RuntimeError: ; Fatal Error: Count 8 alpha electrons, expected 7.; This is a bug. Please file a report.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1657298395608/work/psi4/src/psi4/libscf_solver/hf.cc on line: 482; ```; from this input; ```; #!/usr/bin/env python3; import psi4 as psi4; psi4.core.set_num_threads(4); psi4.set_memory(12000000000); psi4.core.set_output_file('Al.out', False); psi4_io = psi4.core.IOManager.shared_object(); psi4_io.set_default_path('/tmp/'); geometry= """"""; 0 2; Al 0 0 0; """"""; psi4.set_options({'reference': 'uhf'}); geom = psi4.geometry(geometry); myener = psi4.energy(""WB97X/aug-cc-pvqz"", molecule=geom); with open('atomization_energy.dat', 'w') as aefile:; aefile.write('Atomization energy %g\n' % myener); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2858:1220,Error,Error,1220,https://psicode.org,https://github.com/psi4/psi4/issues/2858,2,['Error'],['Error']
Availability,"I get this error:; > OMP: Info #270: omp_set_nested routine deprecated, please use omp_set_max_active_levels instead. Using this as an input:. ```; molecule {; He 0 0 0; --; He 2 0 0; }; import snsmp2; energy('sns-mp2'); ```. I have installed it from conda channel of psi4:. > conda create -n psi4 psi4 snsmp2 -c psi4. I also did. > conda update psi4 -c psi4. as advised on the [psi4 website](http://www.psicode.org/psi4manual/master/build_obtaining.html#faq-binarypackage) . Package versions:; ```; >>> import psi4; >>> psi4.__version__; '1.3.2'; >>> snsmp2.__version__; '1.0.1.dev24'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1820:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/1820,1,['error'],['error']
Availability,I got down to 11 test failures w/ py3.4.3.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/160:6,down,down,6,https://psicode.org,https://github.com/psi4/psi4/pull/160,2,"['down', 'failure']","['down', 'failures']"
Availability,I had the following problem when trying to build Psi4 from current master branch. It seems like there was an issue extracting the Libint2-export-5-4-3-6-5-4_1.tgz archive. ```; CMake Error: Problem with archive_write_header(): Can't create 'export/src/OSVRRP1InBra_aB_h__0__d__1___TwoPRep_unit__0__s100__1___Ab__up_0.h'; CMake Error: Current file: export/src/OSVRRP1InBra_aB_h__0__d__1___TwoPRep_unit__0__s100__1___Ab__up_0.h; CMake Error: Problem extracting tar: ~/psi4/build/external/upstream/libint2/libint2_external-prefix/src/Libint2-export-5-4-3-6-5-4_1.tgz; -- extracting... [error clean up]; CMake Error at libint2_external-stamp/extract-libint2_external.cmake:33 (message):; error: extract of; '~/psi4/build/external/upstream/libint2/libint2_external-prefix/src/Libint2-export-5-4-3-6-5-4_1.tgz'; failed; ```. Relevant version numbers:; - Python: v3.6.3; - CMake: v3.19.2; - Intel C/C++ compiler: v18.0. Build instructions:; ```; cmake .. -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc; make -j 24; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2147:183,Error,Error,183,https://psicode.org,https://github.com/psi4/psi4/issues/2147,6,"['Error', 'error']","['Error', 'error']"
Availability,"I have a noisy geometry of the formaldehyde molecule that I would like to symmetrize. This geometry is in point group `c1`, and we know the symmetrized geometry should be in point group `c2v`. When I symmetrize the molecule with tolerance <= 0.13, there is no change to the point group. tolerance >= 0.14 results in an error:. input:; ```; molecule mol {; 0 1 ; O 2.13230 0.38443 1.67788; C 2.15923 0.11704 2.84188; H 2.84348 -0.50524 3.23470; H 1.48424 0.56642 3.52551; }. tol = 0.13; #tol = 0.14; print(mol.schoenflies_symbol()); mol.symmetrize(tol); print(mol.schoenflies_symbol()); ```; stdout (0.13 tolerance):; ```; c1; c1; ```; stdout (0.14 tolerance):; ```; c1; Traceback (most recent call last):; File ""/scratch/glick/psi4/objdir/stage/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 31, in <module>. RuntimeError: ; Fatal Error: Broken Symmetry; Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc on line: 284; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::symmetrize(double, bool); psi::Molecule::symmetrize_to_abelian_group(double). Printing out the relevant lines from the Psithon --> Python processed input file:; ; ; """""",""mol""); core.IO.set_default_namespace(""mol""); print(mol.schoenflies_symbol()); --> mol.symmetrize(0.14); print(mol.schoenflies_symbol()). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Broken Symmetry !; ! Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc !; ! on line: 284 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Molecule::symmetrize(double, bool) !; ! psi::Molecule::symmetrize_to_abelian_group(double) !; ! !; !------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2579:229,toler,tolerance,229,https://psicode.org,https://github.com/psi4/psi4/issues/2579,7,"['Error', 'error', 'toler']","['Error', 'error', 'tolerance']"
Availability,"I have a system, where I'm interested in running sapt2+/aug-cc-pVDZ calculation. However, it quits after the start of SAPT2+. ```; //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SAPT2+ //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. *** tstart() called on cnode3005; *** at Sat Feb 29 03:11:38 2020. SAPT2+ ; Ed Hohenstein; 6 June 2009. Orbital Information; --------------------------; NSO = 1061; NMO = 1061; NRI = 3161; NOCC A = 69; NOCC B = 56; FOCC A = 19; FOCC B = 15; NVIR A = 992; NVIR B = 1005. Estimated memory usage: 140951.0 MB. Natural Orbital Cutoff: 1.000E-06; Disp(T3) Truncation: Yes; CCD (vv|vv) Truncation: Yes; MBPT T2 Truncation: Yes. Monomer A: 486 virtual orbitals dropped; Monomer B: 598 virtual orbitals dropped; ```; This the end of the log file.; ```; /home/XXX/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00007F6CEC755A15 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC753637 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC66BF32 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC66BD86 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC63A38D Unknown Unknown Unknown; libpcm.so.1 00007F6CEC63D75D Unknown Unknown Unknown; libpthread.so.0 00000034CF00F710 Unknown Unknown Unknown; core.so 00007F6CF40872D2 Unknown Unknown Unknown; core.so 00007F6CF4087EDA Unknown Unknown Unknown; core.so 00007F6CF408927E Unknown Unknown Unknown; core.so 00007F6CF404A1F0 Unknown Unknown Unknown; core.so 00007F6CF3F6CDF7 Unknown Unknown Unknown; core.so 00007F6CF33B0027 Unknown Unknown Unknown; core.so 00007F6CF33F983F Unknown Unknown Unknown; core.so 00007F6CF33C3CEA Unknown Unknown Unknown; core.so 00007F6CF33C3BB4 Unknown Unknown Unknown; core.so 00007F6CF304A32C Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6B8FDD1 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C184A6 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C18FC9 Unknown Unknown",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1828:902,fault,fault,902,https://psicode.org,https://github.com/psi4/psi4/issues/1828,1,['fault'],['fault']
Availability,"I have been modifying my gdma code so that it can handle h functions. It's a fairly straightforward change, but I found that I got errors in the multipoles when there were h functions in the basis. In particular, the total charge was always nonzero. Repeated checks found no errors in the gdma code. Finally I found that there is a bug in the treatment of h functions in Psi4, or at least an inconsistency with d, f and g. If the normalization factor for z^2 exp(-zeta r^2) is N, then the factor for xy exp(-zeta r^2) is \sqrt(3)N -- it needs the extra sqrt(3). Similarly z^5, xz^4, x^2z^3, xyz^3 and x^2y^2z cartesian h functions all need different normalization factors. If the gdma code takes account of these as it does for d, f and g, I get the errors. If however I treat them all as having the same normalization factor as z^5, I get sensible results -- total charges are now zero. Whether the results are correct, however, is doubtful, because the normalization error probably affects the wavefunction. Using an fchk file from Gaussian16 gives the same errors. Was the Psi4 fchk code derived from gaussian?. My revised version of gdma is available at https://git.uis.cam.ac.uk/x/ch-stone/u/ajs1/gdma.git",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1574:131,error,errors,131,https://psicode.org,https://github.com/psi4/psi4/issues/1574,6,"['avail', 'error']","['available', 'error', 'errors']"
Availability,"I have compiled psi4 on Linux (Centos) then I got the following run time error . ""Intel MKL FATAL ERROR: Cannot load libmkl_avx2.so or libmkl_def.so."". I have already sourced MKL and intel compilers as usual, with the following lines. ""source /opt/intel/parallel_studio_xe_2016.3.067/compilers_and_libraries_2016/linux/bin/compilervars.sh intel64; source /opt/intel/parallel_studio_xe_2016.3.067/compilers_and_libraries_2016/linux/mkl/bin/mklvars.sh intel64"". In old versions of psi4 I never encounter such a problem with the same intel package. Thanks,. @loriab @dgasmith",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/552:73,error,error,73,https://psicode.org,https://github.com/psi4/psi4/issues/552,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,I have download the Psi4conda-1.3.2-py37-Linux-x86_64.sh and install it on a scientific Linux 6 computer with ldd (GNU libc) 2.12.; The installation finish without any error and I got a `Segmentation fault` when running `psi4 --test`. `conda list` gives. ```; # packages in environment at /users/grte2001/psi4conda:; #; # Name Version Build Channel; ambit 0.3 h137fa24_1 psi4; asn1crypto 0.24.0 py37_0 ; atomicwrites 1.3.0 py37_1 ; attrs 19.1.0 py37_1 ; blas 1.0 mkl ; ca-certificates 2019.1.23 0 ; certifi 2019.3.9 py37_0 ; cffi 1.12.3 py37h2e261b9_0 ; chardet 3.0.4 py37_1 ; chemps2 1.8.9 h8c3debe_0 psi4; conda 4.6.14 py37_0 ; cryptography 2.6.1 py37h1ba5d50_0 ; cvxopt 1.2.0 py37hfa32c7d_0 ; decorator 4.4.0 py37_1 ; deepdiff 3.3.0 py37_1 psi4; dftd3 3.2.1 h84218bc_2 psi4; dkh 1.2 h173d85e_2 psi4; future 0.17.1 py37_0 ; gau2grid 1.3.1 h035aef0_0 psi4; gcp 2.0.2 h84218bc_1 psi4; gdma 2.2.6 h0e1e685_6 psi4; glpk 4.65 h3ceedfd_2 ; gmp 6.1.2 h6c8ec71_1 ; gsl 2.4 h14c3975_4 ; h5py 2.8.0 py37h989c5e5_3 ; hdf5 1.10.2 hba1933b_1 ; idna 2.8 py37_0 ; intel-openmp 2019.3 199 ; jsonpickle 0.9.6 py37_0 psi4; libedit 3.1.20181209 hc058e9b_0 ; libefp 1.5.0 h84097be_1 psi4; libffi 3.2.1 hd88cf55_4 ; libgcc-ng 8.2.0 hdf63c60_1 ; libgfortran-ng 7.3.0 hdf63c60_0 ; libint 1.2.1 hb4a4fd4_6 psi4; libstdcxx-ng 8.2.0 hdf63c60_1 ; libxc 4.3.4 h7b6447c_0 psi4; metis 5.1.0 hf484d3e_4 ; mkl 2019.3 199 ; mkl_fft 1.0.12 py37ha843d7b_0 ; mkl_random 1.0.2 py37hd81dba3_0 ; more-itertools 7.0.0 py37_0 ; ncurses 6.1 he6710b0_1 ; networkx 2.3 pypi_0 pypi; numpy 1.16.3 py37h7e9f1db_0 ; numpy-base 1.16.3 py37hde5b4d6_0 ; openfermion 0.9 py37hd763080_1 psi4; openfermionpsi4 0.4 py37h934b37d_0 psi4; openssl 1.1.1b h7b6447c_1 ; pcmsolver 1.2.1 py37h142c950_0 psi4; pint 0.9 py37_2 psi4; pip 19.1.1 py37_0 ; pluggy 0.11.0 pypi_0 pypi; psi4 1.3.2+ecbda83 py37h31b3128_0 psi4; psi4-rt 1.3.2 py37ha6b60c8_0 psi4; py 1.8.0 py37_0 ; pycosat 0.6.3 py37h14c3975_0 ; pycparser 2.19 py37_0 ; pydantic 0.23 py37_0 psi4; pylibefp ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792:7,down,download,7,https://psicode.org,https://github.com/psi4/psi4/issues/1792,3,"['down', 'error', 'fault']","['download', 'error', 'fault']"
Availability,"I have installed the latest Psi4 using anaconda:; `conda create -n p4env psi4 python=3.6 -c psi4/label/dev -c psi4`; Then; `source activate p4env`; But even a simple calculation like this one:; ```; molecule PCl5 {; 0 1; P -0.001250 0.001863 -0.000253; Cl -0.017313 2.126472 -0.026384; Cl -0.005958 -2.126884 0.029666; Cl 0.991147 -0.031176 -1.764481; Cl -2.029231 -0.007514 0.039738; Cl 1.062458 0.037458 1.721684; }; set basis def2-tzvp. optimize(""b3lyp""); ```; Is crashing with this error message:; ```; 			-----------------------------------------; 			 OPTKING 2.0: for geometry optimizations ; 			 - R.A. King, Bethel University ; 			-----------------------------------------. 	Internal coordinates to be generated automatically.; 	Detected frag 1 with atoms: 1 2 3 4 5 6; 	---Fragment 1 Bond Connectivity---; 	 1 : 2 3 4 5 6; 	 2 : 1; 	 3 : 1; 	 4 : 1; 	 5 : 1; 	 6 : 1. 	---Fragment 1 Geometry and Gradient---; 	 P -0.0023608120 0.0035185828 -0.0004777490; 	 CL -0.0327154829 4.0184477322 -0.0498581826; 	 CL -0.0112576427 -4.0192302534 0.0560609672; 	 CL 1.8729977331 -0.0589160789 -3.3343855050; 	 CL -3.8346895047 -0.0142013792 0.0750942888; 	 CL 2.0077559933 0.0707833845 3.2535115991; 	 0.0005829612 0.0007979689 -0.0000766467; 	 -0.0000438567 -0.0088149216 0.0011960655; 	 -0.0004768815 0.0083220457 -0.0009627395; 	 -0.0039049377 -0.0010136595 0.0075335979; 	 0.0080187099 -0.0002965760 -0.0001586710; 	 -0.0042975334 0.0010502310 -0.0074582594. 	Previous optimization step data not found. Starting new optimization. 	---Fragment 1 Intrafragment Coordinates---; 	 - Coordinate - - BOHR/RAD - - ANG/DEG -; 	 R(1,2) = 4.015348	 2.124830; 	 R(1,3) = 4.023156	 2.128962; 	 R(1,4) = 3.825678	 2.024461; 	 R(1,5) = 3.833115	 2.028397; 	 R(1,6) = 3.825381	 2.024305; 	 L(2,1,3) = 3.131665	 179.431194; 	 l(2,1,3) = 3.141593	 180.000000; 	 B(2,1,4) = 1.580103	 90.533252; 	 B(2,1,5) = 1.568103	 89.845687; 	 B(2,1,6) = 1.567648	 89.819597; 	 B(3,1,4) = 1.567809	 89.828837; 	 B(3,1,5) = 1.563686",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265:486,error,error,486,https://psicode.org,https://github.com/psi4/psi4/issues/1265,1,['error'],['error']
Availability,"I have recently bought a new MacBook Air, and I have homebrew for my developing environment (on my old mac I had MacPorts: I never managed to compile and I finally gave up). I cloned the psi4 repo and went for the simplest build (./setup build; cd build; make -j). Once I had all required packages the setup worked smoothly.; Unfortunately, ""make -j"" gives me the following error:. > clang: error: unable to execute command: posix_spawn failed: Resource temporarily unavailable. which from a simple minded ""LMGTFY"" search seems to be a problem with too many child processes spawned by make. removing the ""-j"" seems to work: 70% done and running so far...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/396:374,error,error,374,https://psicode.org,https://github.com/psi4/psi4/issues/396,2,['error'],['error']
Availability,"I have tried to run the following input:. molecule no3 {; 0 2; N -0.000000289178 0.000000000000 -0.107371527464; O 0.000000787144 0.000000000000 1.265621161075; O 1.089067344013 0.000000000000 -0.585809671624; O -1.089067877991 0.000000000000 -0.585810897335; symmetry c1; }. set globals {; basis cc-pvtz; #df_basis_scf cc-pvtz-jkfit; #df_basis_cc cc-pvtz-ri; reference uhf; scf_type df; guess gwh; e_convergence 8; d_convergence 6; mo_maxiter 400; cepa_type df; qc_module occ; }; energy('cepa(0)'). Then, I get the following error:. PsiException: Error: cepa(0) requires ""reference rhf"". An error has occurred Py-side; Traceback:; <class 'p4xcpt.ValidationError'>: Error: cepa(0) requires ""reference rhf"".: File ""<string>"", line 37, in <module>. File ""/usr/local/programs/psi4intel/share/psi/python/driver.py"", line 629, in energy; procedures['energy'][lowername](lowername, **kwargs). File ""/usr/local/programs/psi4intel/share/psi/python/proc.py"", line 3783, in run_cepa; raise ValidationError(""Error: %s requires \""reference rhf\""."" % lowername). Something should be wrong in proc.py or I missed something. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/273:526,error,error,526,https://psicode.org,https://github.com/psi4/psi4/issues/273,5,"['Error', 'error']","['Error', 'error']"
Availability,I installed Psi4 1.4a2.dev78 on Ubuntu-20.04.1 using conda installer but it crashes when I use it with [poltype](https://pren.github.io/poltype/README_INSTALL.html) tool. Do you know how I can fix the below error?; **Error:**; ```; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007F14B1B2C10F for__signal_handl Unknown Unknown; libpthread-2.27.s 00007F14B7334980 Unknown Unknown Unknown; libc-2.27.so 00007F14B6F6FFB7 gsignal Unknown Unknown; libc-2.27.so 00007F14B6F71921 abort Unknown Unknown; core.cpython-37m- 00007F14B40E13D7 Unknown Unknown Unknown; core.cpython-37m- 00007F14B26DC86D Unknown Unknown Unknown; core.cpython-37m- 00007F14B26F56B1 Unknown Unknown Unknown; core.cpython-37m- 00007F14B271593A Unknown Unknown Unknown; python3.7 000055CE517D7914 _PyMethodDef_RawF Unknown Unknown; python3.7 000055CE517D7A31 _PyCFunction_Fast Unknown Unknown; python3.7 000055CE51843EBD _PyEval_EvalFrame Unknown Unknown; python3.7 000055CE51786829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055CE517D7107 _PyFunction_FastC Unknown Unknown; python3.7 000055CE5183F4B6 _PyEval_EvalFrame Unknown Unknown; python3.7 000055CE51786829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055CE51787714 PyEval_EvalCodeEx Unknown Unknown; python3.7 000055CE5178773C PyEval_EvalCode Unknown Unknown; python3.7 000055CE5189EF14 Unknown Unknown Unknown; python3.7 000055CE518AA29D PyRun_StringFlags Unknown Unknown; python3.7 000055CE5184EEB4 Unknown Unknown Unknown; python3.7 000055CE517D7789 _PyMethodDef_RawF Unknown Unknown; python3.7 000055CE517D7A31 _PyCFunction_Fast Unknown Unknown; python3.7 000055CE51843795 _PyEval_EvalFrame Unknown Unknown; python3.7 000055CE51786829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000055CE51787714 PyEval_EvalCodeEx Unknown Unknown; python3.7 000055CE5178773C PyEval_EvalCode Unknown Unknown; python3.7 000055CE5189EF14 Unknown Unknown Unknown; python3.7 000055CE518A9331 PyRun_FileExFlags Unknown Unknown; python3.7 000055CE518A,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2084:207,error,error,207,https://psicode.org,https://github.com/psi4/psi4/issues/2084,3,"['Error', 'error']","['Error', 'error']"
Availability,"I installed the latest version of psi4 via conda using the following command: ; ```conda install psi4=1.2rc2 psi4-rt python=3.6 -c psi4/label/dev```. When I try to import psi4, I get the following error:; ```; In [1]: import psi4; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); ~/anaconda3/lib/python3.6/site-packages/psi4/__init__.py in <module>(); 53 try:; ---> 54 from . import core; 55 except ImportError as err:. ImportError: /home/chayas/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sincos4_l9. During handling of the above exception, another exception occurred:. ImportError Traceback (most recent call last); <ipython-input-1-becb93fbd2ca> in <module>(); ----> 1 import psi4. ~/anaconda3/lib/python3.6/site-packages/psi4/__init__.py in <module>(); 57 raise ImportError(""{0}\nLikely cause: GCC >= 4.9 not in [DY]LD_LIBRARY_PATH"".format(err)); 58 else:; ---> 59 raise ImportError(""{0}"".format(err)); 60 ; 61 from psi4.core import set_output_file, get_variable, set_variable, get_num_threads, set_num_threads. ImportError: /home/chayas/anaconda3/lib/python3.6/site-packages/psi4/core.so: undefined symbol: __svml_sincos4_l9; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1036:197,error,error,197,https://psicode.org,https://github.com/psi4/psi4/issues/1036,1,['error'],['error']
Availability,"I just compiled psi4 using Intel compilers 16.0.3 20160415 (icc icpc ifort). When I tested it with opt-irc-1 and opt-irc-2, the segmentation fault appeared. (System Ubuntu 14.04). Output for opt-irc-1: (It seems to be interrupted after the first SCF HESS). ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.0.54 Driver. Git: Rev {master} 8d4cec3 . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, U. Bozkaya, A. Yu. Sokolov, D. G. A. Smith, R. Di Remigio,; R. M. Richard, J. F. Gonthier, H. R. McAlexander, M. Saitow, and; B. P. Pritchard; -----------------------------------------------------------------------. Psi4 started on: Mon Aug 22 01:48:05 2016. Process ID: 28503; PSI4DATADIR: /usr/local/psi4/share/psi4; Memory level set to 256.000 MB. ==> Input File <==. --------------------------------------------------------------------------; #! Compute the IRC for HOOH torsional rotation at the RHF/DZP level of theory. ; # Print; # the path to a trajectory file for visualization; # in Jmol.; # grep '@IRC' on the output to see a nice printout; # of the progress of your IRC computation. molecule h2o2 {; H 0.0000000000 0.9803530335 -0.8498671785; O 0.0000000000 0.6988545188 0.0536419016; O 0.0000000000 -0.6988545188 0.0536419016; H 0.0000000000 -0.9803530335 -0.8498671785; }. # g_convergence needs to be tight for IRCs:; set g_convergence gau_verytight. set {; basis dzp; opt_type irc; geom_maxiter 50; irc_direction backward; }. frequencies('scf'). # Lower point group from C2v to C2; h2o2.reset_point_group('c2'). energy = optimi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/463:141,fault,fault,141,https://psicode.org,https://github.com/psi4/psi4/issues/463,1,['fault'],['fault']
Availability,"I noticed that https://github.com/psi4/psi4/blob/0c08c20596b0c9a278324a1ce77dd39e00434d6d/psi4/driver/inputparser.py#L705-L706 doesn't allow for hyphens or tildes (`[-~]`) in the molecule name? Is there any downstream purpose served by this restriction, or objection to adding those in as allowable characters in a name?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/650:207,down,downstream,207,https://psicode.org,https://github.com/psi4/psi4/issues/650,1,['down'],['downstream']
Availability,"I noticed that there is some kind of overflow happening in the printing of the memory (see below).; Looks like all variables are doubles so idk why. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dfocc/manager.cc#L2493. The other thing is that this (and similar lines); `cost_ampAA = nocc2AA * nvir2AA;` should maybe be `cost_ampAA = naocc2AA * nvir2AA;`; Otherwise frozen-core is ignored for the memory consideration. Or I misunderstand something. If you could have a look @bozkaya ?. ```; DF-MP2.5 ; Program Written by Ugur Bozkaya; Latest Revision September 9, 2017. ============================================================================== ; ============================================================================== ; ============================================================================== . MO spaces... . FC OCC VIR FV ; ----------------------; 19 49 827 0. Number of basis functions in the DF-CC basis: 2173. Available memory : 55313.11 MB ; Memory requirement for 3-index ints : 12050.26 MB ; Memory requirement for DF-CC int trans: 36889.52 MB ; Memory requirement for CC contractions: -34560.53 MB ; Total memory requirement for DF+CC int: -22510.28 MB ; Memory requirement for Wabef term : 39520.86 MB . ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/898:941,Avail,Available,941,https://psicode.org,https://github.com/psi4/psi4/issues/898,1,['Avail'],['Available']
Availability,"I overlooked this when previously checking the documentation. The CI/MCSCF example from the following page does not work: http://www.psicode.org/psi4manual/1.3/molden.html. A minor issue is that `'ci'` is not a valid method. The second problem is that the `wfn.opdm` method should be replaced by `wfn.get_opdm`. (A useful example can be found in the source tree: `tests/molden2/input.dat`). I believe this is a correct example, but it would be nice if someone more familiar with the CI code could confirm and explain a few questions below. (I would be happy to make a PR with updated documentation.). ```; molecule {; 0 1; H 0.0 0.0 0.0; H 0.0 0.0 1.0; }. set basis cc-pVTZ; set opdm true. E, wfn = energy('fci', return_wfn=True); molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)); ```. Main questions:; - Is this example correct? It runs and seems to give sensible results.; - Which levels of theory (other than FCI and CASSCF) can be used? (CISD gives an error: `AttributeError: 'psi4.core.Wavefunction' object has no attribute 'get_opdm'`.); - How can one use the first two arguments to `get_opdm`? They are documented here in the source code: https://github.com/psi4/psi4/blob/880f87f5b2765ed00efaf6dd63c406b574c40157/psi4/src/psi4/detci/ciwave.h#L141 but setting anything else than `0, 0` for the first two arguments does not work: `Fatal Error: CIWavefunction::get_opdm: Requested OPDM was not formed!` I tried to add `set tdm true`, but this had no effect. (Also, I guess writing out a transition density matrix to a Molden file makes little sense.); - When the last argument is `True`, does this mean the frozen-core is included in the density matrix?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1638:979,error,error,979,https://psicode.org,https://github.com/psi4/psi4/issues/1638,2,"['Error', 'error']","['Error', 'error']"
Availability,"I presume I'm not the only one this happens to, but when CMake generates an error during setup, the error is often obscured and hidden in the wealth of output. Instead of simply printing: ""Error Occurred"" (or whatever it actually prints) and then having to scour the output I'm wondering if it would be possible to somehow re-echo the error at the bottom of the output. I'll look into this, but if one of the CMake gurus already knows how to do this, I'd appreciate any insight you can give.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/82:76,error,error,76,https://psicode.org,https://github.com/psi4/psi4/issues/82,5,"['Error', 'echo', 'error']","['Error', 'echo', 'error']"
Availability,"I ran a geometry optimization. Psi4 said the optimization converged in two steps, despite the delta E criterion not being met. . input file:; ```; set_num_threads(8); basis {; assign def2-SVP; }. molecule {; 0 1; C -4.203390 -0.066910 -0.001310; C -4.193940 -1.465920 -0.000650; C -2.996540 0.640780 -0.000920; C -1.780230 -0.050540 0.000130; C -1.770780 -1.449550 0.000790; C -2.977630 -2.157240 0.000400; H -2.970320 -3.239550 0.000910; H -0.829810 -1.984370 0.001610; H -5.127590 -2.013410 -0.000960; H -5.144360 0.467920 -0.002130; H -0.846580 0.496950 0.000440; H -3.003850 1.723100 -0.001430; }. nrg, wfn = optimize('B3LYP', return_wfn=True); ```. top of output file for psi4 version (I'm using psi4 in WSL, reinstalled today by running the commands on http://www.psicode.org/downloads.html):; ```; Psi4 1.3.2 release. Git: Rev {HEAD} ecbda83 ; ```. towards the end of the output:; ```; ==> Convergence Check <==. Measures of convergence in internal coordinates in au.; Criteria marked as inactive (o), active & met (*), and active & unmet ( ).; ---------------------------------------------------------------------------------------------; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ; ---------------------------------------------------------------------------------------------; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o; ---------------------------------------------------------------------------------------------; 2 -232.08477729 -4.57e-04 2.31e-04 * 9.07e-05 o 6.20e-04 * 2.31e-04 o ~; ---------------------------------------------------------------------------------------------. **** Optimization is complete! (in 2 steps) ****. ==> Optimization Summary <==. Measures of convergence in internal coordinates in au.; --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; -----------------------------------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1947:782,down,downloads,782,https://psicode.org,https://github.com/psi4/psi4/issues/1947,1,['down'],['downloads']
Availability,"I recently updated my copy of psi4, and I'm now having plugin issues. I added ""PSI_API"" where appropriate, and my plugins compile, but I get missing symbol errors for the JK object constructor:. Attention! This SCF may be density-fitted.; dyld: lazy symbol binding failed: Symbol not found: __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE; Referenced from: /Users/deprince/edeprince3/deprince-group/plugins/does_jk_work/does_jk_work.so; Expected in: flat namespace. dyld: Symbol not found: __ZN3psi4PKJKC1ENSt3__110shared_ptrINS_8BasisSetEEERNS_7OptionsE; Referenced from: /Users/deprince/edeprince3/deprince-group/plugins/does_jk_work/does_jk_work.so; Expected in: flat namespace. Abort trap: 6. This error is for a clean plugin that only calls the constructor for PKJK:. extern ""C"" PSI_API; SharedWavefunction does_jk_work(SharedWavefunction ref_wfn, Options& options); {; int print = options.get_int(""PRINT"");. /* Your code goes here */. std::shared_ptr<PKJK> jk (new PKJK(ref_wfn->basisset(),options));. // Typically you would build a new wavefunction and populate it with data; return ref_wfn;; }",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/971:156,error,errors,156,https://psicode.org,https://github.com/psi4/psi4/issues/971,2,['error'],"['error', 'errors']"
Availability,"I see a segfault when running an SCF with some of the systems in L7 (in particular [circumcoronene](http://www.begdb.com/index.php?action=oneMolecule&state=show&id=4108)). I've traced the issue, at least in part, to integer sizing bug [in this check](https://github.com/psi4/psi4/blob/6044281f7a94c23852a4fd8291ab67dbcc3280fd/psi4/src/psi4/libfock/DFJK.cc#L699) when the user requests less than Q^2 memory. This is due to a wraparound during subtraction, which results in the error condition [here](https://github.com/psi4/psi4/blob/6044281f7a94c23852a4fd8291ab67dbcc3280fd/psi4/src/psi4/libfock/DFJK.cc#L761) erroneously evaluating to `false`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/716:476,error,error,476,https://psicode.org,https://github.com/psi4/psi4/issues/716,1,['error'],['error']
Availability,"I think this may be similar to a recent issue. I can install psi4 into a new environment, but I would like to have rdkit available in the same env too. Is it possible to do a conda or mamba install psi4?. I obviously tried this and I am running into many conflicts. not sure if conda-forge or conda in general is getting tripped up because in the past I was able to install rdkit into a env with psi4 but not now apparently. from `mamba install psi4 psi4-rt python=3.6 -c psi4'; `. __ __ __ __; / \ / \ / \ / \; / \/ \/ \/ \; ███████████████/ /██/ /██/ /██/ /████████████████████████; / / \ / \ / \ / \ \____; / / \_/ \_/ \_/ \ o \__,; / _/ \_____/ `; |/; ███╗ ███╗ █████╗ ███╗ ███╗██████╗ █████╗; ████╗ ████║██╔══██╗████╗ ████║██╔══██╗██╔══██╗; ██╔████╔██║███████║██╔████╔██║██████╔╝███████║; ██║╚██╔╝██║██╔══██║██║╚██╔╝██║██╔══██╗██╔══██║; ██║ ╚═╝ ██║██║ ██║██║ ╚═╝ ██║██████╔╝██║ ██║; ╚═╝ ╚═╝╚═╝ ╚═╝╚═╝ ╚═╝╚═════╝ ╚═╝ ╚═╝. mamba (1.4.1) supported by @QuantStack. GitHub: https://github.com/mamba-org/mamba; Twitter: https://twitter.com/QuantStack. █████████████████████████████████████████████████████████████. Looking for: ['psi4', 'psi4-rt', 'python=3.6']. pkgs/main/linux-64 Using cache; pkgs/main/noarch Using cache; pkgs/r/linux-64 Using cache; pkgs/r/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change; Could not solve for environment specs; The following packages are incompatible; ├─ psi4 is installable with the potential options; │ ├─ psi4 [1.0.0|1.0.24|...|1.0rc216] would require; │ │ └─ pychemps2 >=1.7.1 with the potential options; │ │ ├─ pychemps2 [1.8.10|1.8.11|1.8.9] would require; │ │ │ └─ chemps2 [1.8.10 hbe8a562_0|1.8.11 hbe8a562_0|1.8.9 h8c3debe_0], which requires; │ │ │ └─ blas 1.0 mkl, which can be installed;; │ │ ├─ pychemps2 1.7.1 would require; │ │ │ └─ chemps2 1.7.1 , which requires; │ │ │ └─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ │ └─ pychemps2 1.8.3 would require; │ │ └─ chemps2 1.8.3 , which requires; │ │ └─ hdf5 1.8",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:121,avail,available,121,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['avail'],['available']
Availability,"I tried running a CISD/STO-3G job on benzene (structure borrowed from the [psi4 input file samples](https://github.com/psi4/psi4/blob/master/samples/props3/input.dat)) using the following input:; ```; molecule benzene {; C 0.710500000000 0.000000000000 -1.230622098778; C 1.421000000000 0.000000000000 0.000000000000; C 0.710500000000 0.000000000000 1.230622098778; C -0.710500000000 0.000000000000 1.230622098778; C -0.710500000000 0.000000000000 -1.230622098778; C -1.421000000000 0.000000000000 0.000000000000; H 1.254500000000 0.000000000000 -2.172857738095; H -1.254500000000 0.000000000000 2.172857738095; H 2.509000000000 0.000000000000 0.000000000000; H 1.254500000000 0.000000000000 2.172857738095; H -1.254500000000 0.000000000000 -2.172857738095; H -2.509000000000 0.000000000000 0.000000000000; }. set basis sto-3g. energy('cisd', molecule=benzene); ```; Psi4 returned the following error:; ```; Traceback (most recent call last):; File ""/usr/local/psi4/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 36, in <module>; File ""/usr/local/psi4/lib/psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 949, in select_cisd; return func(name, **kwargs); File ""/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 4238, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn). RuntimeError: ; Fatal Error: ndocc must be less than nvirt; Error occurred in file: /home/shouck/psi4/psi4/src/psi4/fnocc/ccsd.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::fnocc::CoupledCluster::common_init(); psi::fnocc::CoupledCluster::CoupledCluster(std::shared_ptr<psi::Wavefunction>, psi::Options&); psi::fnocc::CoupledPair::CoupledPair(std::shared_ptr<psi::Wavefunction>, psi::Options&); psi::fnocc::fnocc(std:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/828:895,error,error,895,https://psicode.org,https://github.com/psi4/psi4/issues/828,1,['error'],['error']
Availability,"I tried using this code to generate the potential energy curve for the CF molecule and I got this error message: . ```; import psi4; import numpy as np. psi4.set_options({; 'basis': 'cc-pVtz',; 'reference': 'rohf',; 'docc': [3, 0, 0, 0, 0, 1, 1, 0],; 'socc': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181:98,error,error,98,https://psicode.org,https://github.com/psi4/psi4/issues/3181,1,['error'],['error']
Availability,"I try to build psi4 from source code on my ubuntu system, and got this error when doing last step of make. > [ 99%] Built target sapt; [ 99%] Building CXX object src/CMakeFiles/core.dir/core.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_benchmarks.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_blas_lapack.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_cubeprop.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_dpd.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_fock.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_functional.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_misc.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_oeprop.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_pcm.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_plugins.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_psio.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_trans.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_wavefunction.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_options.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/create_new_plugin.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/read_options.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/python_data_type.cc.o; [100%] Linking CXX shared library core.cpython-310-x86_64-linux-gnu.so; /usr/bin/ld: cannot find -lMathOpenMP_LIBRARIES-NOTFOUND; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:417: src/core.cpython-310-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1028: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:136: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:86: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:10188: CMakeFiles/psi4-core.d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998:71,error,error,71,https://psicode.org,https://github.com/psi4/psi4/issues/2998,1,['error'],['error']
Availability,"I try to compile psi4 with gcc version 4.4.7 20120313 (Red Hat 4.4.7-11) (GCC) compiler. I got the following error:. Scanning dependencies of target mints; [ 59%] Building Fortran object src/lib/libmints/CMakeFiles/mints.dir/dkh2-dkh4_main.F90.o; [ 59%] Building CXX object src/lib/libmints/CMakeFiles/mints.dir/local.cc.o; In file included from /home/ubgroup/psi4/src/lib/libmints/mints.h:70,; from /home/ubgroup/psi4/src/lib/libmints/potentialint.h:31,; from /home/ubgroup/psi4/src/lib/libmints/mints.h:44,; from /home/ubgroup/psi4/src/lib/libmints/local.cc:30:; /home/ubgroup/psi4/src/lib/libmints/oeprop.h:121: error: ISO C++ forbids initialization of member ‘max_noon_’; /home/ubgroup/psi4/src/lib/libmints/oeprop.h:121: error: making ‘max_noon_’ static; /home/ubgroup/psi4/src/lib/libmints/oeprop.h:121: error: ISO C++ forbids in-class initialization of non-const static member ‘max_noon_’; make[2]: **\* [src/lib/libmints/CMakeFiles/mints.dir/local.cc.o] Error 1; make[1]: **\* [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; make: **\* [all] Error 2. @jturney",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/404:109,error,error,109,https://psicode.org,https://github.com/psi4/psi4/issues/404,7,"['Error', 'error']","['Error', 'error']"
Availability,"I use psi4 v1.7 to perform gradient calculations under the WB97M-D3BJ/DEF2-TZVPPD level. Most structures work fine, but I get the following error in some structures without a clear error message. ```; ==> Integral Setup <==. PSIO_ERROR: unit = 97, errval = 12; forrtl: error (76): Abort trap signal; Image PC Routine Line Source; libgdma.so 00007F6F7C68B10F for__signal_handl Unknown Unknown; libpthread-2.28.s 00007F6F9C906B20 Unknown Unknown Unknown; libc-2.28.so 00007F6F9BDDC37F gsignal Unknown Unknown; libc-2.28.so 00007F6F9BDC6DB5 abort Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B535A Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B53C5 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B5658 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B5A129 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B69438 _ZN3psi4PSIO2rwEm Unknown Unknown; core.cpython-310- 00007F6F88B6B963 _ZN3psi4PSIO5writ Unknown Unknown; core.cpython-310- 00007F6F88B566E9 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6DFBF4 Unknown Unknown Unknown; libpthread-2.28.s 00007F6F9C8FC14A Unknown Unknown Unknown; libc-2.28.so 00007F6F9BEA1DC3 clone Unknown Unknown; /var/spool/slurm/slurmd/job83930/slurm_script: line 27: 2245656 Aborted (core dumped); ```. I used conda to install psi4 in a new environment.; ```; psi4 1.7+6ce35a5 py310h769327c_1 psi4; ```. Below is the full log, which includes the geometry:. <details>. ```. Memory set to 7.451 GiB by Python driver.; Threads set to 4 by Python driver. Scratch directory: /scratch/njzjz/83930/; gradient() will perform analytic gradient computation. *** tstart() called on aerosol-020; *** at Fri May 26 20:10:38 2023. => Loading Basis Set <=. Name: DEF2-TZVPPD; Role: ORBITAL; Keyword: BASIS; atoms 1-33 entry C line 144 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-tzvppd.gbs ; atoms 34-89 entry H line 14 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-tzvppd.gbs ; atoms 90-101 entry N line ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970:140,error,error,140,https://psicode.org,https://github.com/psi4/psi4/issues/2970,3,['error'],['error']
Availability,"I used the PSI4 to run SAPT0-D3 calculation. I tested both D3 and D3mbj correction, however, they all have the errors. The error is the assertion error: pairwise sum = -0.17086444... ! =energy -0.17086561.; The key word i used in my script is the following : ; set {; scf_type DF; freeze_core True; basis jun-cc-pVDZ; soscf true; soscf_max_iter 30; }; energy(""sapt0-d3"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2914:111,error,errors,111,https://psicode.org,https://github.com/psi4/psi4/issues/2914,3,['error'],"['error', 'errors']"
Availability,"I want to install psi4 on my openff environment since OpenFF Recharge requires it to generate electrostatic charges (https://docs.openforcefield.org/projects/recharge/en/stable/getting-started/installation.html). . I have used mamba to install openff, following steps 3 and 4 [https://docs.openforcefield.org/en/latest/install.html](here). I tried to install psi4 via mamba with the following commad:; `mamba install psi4=1.8.1 -c conda-forge/label/libint_dev -c conda-forge`. However, I got several warnings about incompatible packages:. `blas [2.4|2.5|2.6|2.7] would require; │ │ └─ libblas [3.8.0 4_openblas|3.8.0 5_openblas|3.8.0 6_openblas|3.8.0 7_openblas], which requires; │ │ └─ openblas 0.3.5.* , which does not exist (perhaps a missing channel);; `; and; ` psi4 1.8.1 would require; │ ├─ libblas * *mkl, which requires; │ │ └─ blas * mkl, which conflicts with any installable versions previously reported;; │ └─ mkl >=2022.2.1,<2023.0a0 , which conflicts with any installable versions previously reported;; `. I also attempted to install psi4=1.7, but this also led to a similar conflicts issue:. `psi4 1.7** is not installable because it requires; └─ blas 1.0 mkl, which conflicts with any installable versions previously reported.; `; I believe I need psi4 installed on my openff environment for it to be usable for openff's wrappers. I've tried installing the blas dependencies explicitly:. `mamba conda install -c conda-forge openblas` ; but this tells me the package is already installed. . and:. `mamba install 'libblas * *mkl' -c conda-forge -c defaults` which results in the same `openblas 0.3.5.* , which does not exist (perhaps a missing channel);` error. . Any ideas? I must admit I am relatively new to using mamba + managing environments, but I believe it is just a reimplementation of conda.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3046:1669,error,error,1669,https://psicode.org,https://github.com/psi4/psi4/issues/3046,1,['error'],['error']
Availability,"I want to optimize base-pairs in Cs symmetry and DFT, but the optimization fails/produces a wrong minimum. Moreoever, the optimization goes a bit crazy. DF-B3LYP-D3/def2-QZVP gives some form of this with most options (including cart.) for the optimizer:; ```; Convergence Criteria 1.00e-06 * 3.00e-04 * o 1.20e-03 * o ~; --------------------------------------------------------------------------------------------- ~; 1 -1089.49118380 -1.09e+03 9.40e-02 1.22e-02 o 1.04e-01 1.41e-02 o ~; 2 -1089.49529350 -4.11e-03 5.45e-02 7.48e-03 o 9.20e-02 1.41e-02 o ~; 3 -1089.49300118 2.29e-03 4.10e-02 5.60e-03 o 8.58e-02 1.41e-02 o ~; 4 -1089.48886131 4.14e-03 3.02e-02 4.05e-03 o 8.07e-02 1.41e-02 o ~. ```. The default optimizer keeps increasing the energy and ends up in a wrong minimum. The option `DYNAMIC_LEVEL 2` tries to fix things, but it goes nowhere in the end. See output for further details: [dynamic.txt](https://github.com/psi4/psi4/files/2196749/dynamic.txt) . While at first I thought the optimizer just has weird troubles, from the below notes it seems the gradient might be faulty. And computing the numerical gradient shows some values a bit too far off. ; [grad.txt](https://github.com/psi4/psi4/files/2197616/grad.txt) (both next to each other at the bottom); E.g. compare the row for Atom 38. Additional notes/remarks; * Turbomole (RI-JK) and Gaussian converge smoothly. No increase in energy.; * smaller basis sets (def2-TZVP) converge as they should; * DFT grid increase does not change anything to the better; * same convergence issue with other (similar) structures; * revPBE0/def2-QZVP shows the same incorrect behavior; * `scf_type direct` seems to converge as it should (slow, still running); * DF-B3LYP gradient vs. FD gradients for water seems okay; * Not a symmetry problem; * Same with DF-HF; * Psi4 1.2 release; Git: Rev {HEAD} 9d4a61c (conda install)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1095:1085,fault,faulty,1085,https://psicode.org,https://github.com/psi4/psi4/issues/1095,1,['fault'],['faulty']
Availability,"I was attempting to run an IRC, only to receive a rather confusing error message that `symm_matrix_inv : opt_symm_matrix_eig could not diagonalize`. After spending far too much time trying to figure out why various matrices were filled with NaN, I realized the problem was that I had supplied an energy minimum, not a transition state. (The SI that I was following put in a wrong geometry.) I've attached my input file. The IRC code saw the gradient was about zero and tried to follow the lowest mode... which was a translational mode. If the new PyOptking is given an initial hessian for an IRC, could it double-check that there's actually an imaginary mode?. [input.txt](https://github.com/psi4/psi4/files/2019016/input.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1025:67,error,error,67,https://psicode.org,https://github.com/psi4/psi4/issues/1025,1,['error'],['error']
Availability,"I was doing a calculation of eda of transition metal complex by FISAPT, with three-body partition. A fatal error ocurred as followed. But the fragment A (0 1) is simply phenylacetylene, how could the error happen? ; Actrually, I have successfully done the eda of the same complex with two-body partition. The basis sets were exactly the same. Thanks in advance. ```; RuntimeError: ; Fatal Error: FISAPT: Charge on A is incompatible with singlet; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1670993662927/work/psi4/src/psi4/fisapt/fisapt.cc on line: 393; The most recent 5 function calls were:; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2870:107,error,error,107,https://psicode.org,https://github.com/psi4/psi4/issues/2870,4,"['Error', 'error']","['Error', 'error']"
Availability,"I was looking at the DIIS code to determine whether it properly handles the case of linear dependencies. For instance, the UHF code is; ```; if (initialized_diis_manager_ == false) {; diis_manager_ = std::make_shared<DIISManager>(max_diis_vectors, ""HF DIIS vector"", DIISManager::LargestError,; DIISManager::OnDisk);; diis_manager_->set_error_vector_size(2, DIISEntry::Matrix, gradient_a.get(), DIISEntry::Matrix,; gradient_b.get());; diis_manager_->set_vector_size(2, DIISEntry::Matrix, Fa_.get(), DIISEntry::Matrix, Fb_.get());; initialized_diis_manager_ = true;; }. diis_manager_->add_entry(4, gradient_a.get(), gradient_b.get(), Fa_.get(), Fb_.get());; ```; whereas extrapolation is handled by; ```; bool UHF::diis() { return diis_manager_->extrapolate(2, Fa_.get(), Fb_.get()); }; ```; To me, this looks like the code does **not** project linearly dependent eigenvectors out. This might certainly explain many SCF convergence problems seen with Psi4, in which the energy apparently converges but the DIIS error stagnates to a large value. Note that the fix was already in Pulay's original paper. In [Chem. Phys. Lett. 73, 393 (1980)](https://doi.org/10.1016/0009-2614(80)80396-4) he writes; > An even better choice is the use of Fock matrix elements transformed to an orthonormal basis, such as `S^-1/2 F S^-1/2` where `S` is the overlap matrix. This takes into account that a charge shift from a basis function to another is less important physically if the two functions overlap strongly. Obviously, `S^-1/2` is the orthogonalizing matrix `X`; alternatively, the molecular orbital coefficients `C` can also be used.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2217:1009,error,error,1009,https://psicode.org,https://github.com/psi4/psi4/issues/2217,1,['error'],['error']
Availability,"I was running a constrained geometry optimization but the optimizer failed with this error:; ```; Back-transformation to cartesian coordinates...; 	The INTCO_EXCEPTion handler:; 	TORS::compute_val: unable to compute torsion value; 	Dynamic level is 0.; 	exc.g_really_quit() is 0. **** Optimization has failed! (in 3 steps) ****; ```. Here's the [input file](https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.dat) and the [output file](https://github.com/ChayaSt/torsionfit_examples/blob/torsion_drive/torsion_drive/biphenyl/phepyr/4_10_11_6/15/phepyr_4_10_11_6_15.out). I ran it again with `dynamic_level = 1` but this time I got the following error:; ```Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495011512596/work/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::write(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned int, char const*, char*, unsigned long); 7447,46 99%; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/858:85,error,error,85,https://psicode.org,https://github.com/psi4/psi4/issues/858,6,"['Error', 'error']","['Error', 'error']"
Availability,"I was trying to compile psi4 using the Intel 14 compiler and I got an error:; PK_workers.cc(755): error: no instance of constructor ""psi::pk::PKWorker::PKWorker"" matches the argument list; argument types are: (boost::shared_ptrpsi::BasisSet, psi::pk::SharedSieve, long, int, size_t); PKWorker(primary,sieve, NULL,0,buf_size) {. I changed NULL to std:shared_ptr<AIOHandler>() and it fixed the compiler error. Do you think this may have a side effect?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/398:70,error,error,70,https://psicode.org,https://github.com/psi4/psi4/issues/398,3,['error'],['error']
Availability,"I was trying to do a 4-electron FCI using the DETCI code with a huge valence basis set but it seems Psi4 cannot handle CI calculations with more than 255 functions. The errors that I encountered are mentioned in [this forum thread](http://forum.psicode.org/t/increase-ioff-max/531). In short:. - If I use more than 255 orbitals I get a memory violation error from the system and ``(subgr_lex_addr): Impossible walk!`` message from Psi4.; - If I use 408 orbitals I get . ```; RuntimeError:; Fatal Error: error: IOFF_MAX not large enough!; Error occurred in file:path/devel/psi4/psi4/src/psi4/detci/get_mo_info.cc on line: 228; ```. It would be great if someone could create a patch fixing this issue, since it severely limits the capabilities of the DETCI code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/724:169,error,errors,169,https://psicode.org,https://github.com/psi4/psi4/issues/724,5,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"I was wondering about the status of computing gradients for VV10. I see this was planned for inclusion in #1233, but got put off until a later PR. I can't find any record that it was ever implemented. Is it available now? If not, are there any plans to implement it?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2286:207,avail,available,207,https://psicode.org,https://github.com/psi4/psi4/issues/2286,1,['avail'],['available']
Availability,"I would like to use the program from source (rather than the conda distribution), but attempting to build CMake gives me the following error:; ```; CMake Error at cmake/math/MathLibsFunctions.cmake:216 (message):; -- No external LAPACK library found (have you set the MATH_ROOT environment variable?); ```. However, when performing `locate lapack`, I get this:; ```; /usr/include/clapack.h; /usr/lib64/liblapack.so.3; /usr/lib64/liblapack.so.3.4; /usr/lib64/liblapack.so.3.4.2; /usr/lib64/liblapacke.so.3; /usr/lib64/liblapacke.so.3.4; /usr/lib64/liblapacke.so.3.4.2; /usr/lib64/python2.7/site-packages/numpy/linalg/lapack_lite.so; /usr/share/doc/lapack-3.4.2; /usr/share/doc/atlas-devel-3.10.1/doc/lapackqref.pdf; /usr/share/doc/lapack-3.4.2/LICENSE; /usr/share/doc/lapack-3.4.2/README; /usr/share/doc/lapack-3.4.2/lapackqref.ps; ```; I am not sure if the required library is here. Doing `MATH_ROOT=\usr\ cmake3 -H. -Bobjdir` did not help either.; Is there any possible idea how the error could have occurred? I have also tried to instal MKL from conda.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/954:135,error,error,135,https://psicode.org,https://github.com/psi4/psi4/issues/954,3,"['Error', 'error']","['Error', 'error']"
Availability,"I'm attempting to converge a very tricky molecule with ODC-12. _Something_ goes wrong in the computation, likely involving the fact that I added damping, and I get the following error message:; ```; There was a problem correcting the MO phases.; If this does not converge, try ALGORITHM=TWOSTEP; ```. However helpful a change of algorithm might be, the two step algorithm isn't implemented for the orbital optimized methods, so this advice is useless for me, and aggravating for any users encountering this problem. So the error message needs to be changed if the cumulant parameterization includes orbital rotations. But it would be nice if I could replace it with something else. Do any of the (very few) people familiar with wrangling with tricky molecules in DCT have any suggestions?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1354:178,error,error,178,https://psicode.org,https://github.com/psi4/psi4/issues/1354,2,['error'],['error']
Availability,"I'm building Psi4 updated with the most recent trunk from Github on a cluster with the following:; vim/7.4 ; python/2.7 ; mkl/2016.4.072 ; hdf5/1.8.20-gcc-s; emacs/25.1 ; gcc/6.3.0 ; cmake/3.7.2 ; perl/5.20.0. During the configure step, MathOpenMP is not found with the following message:; ```; -- Math lib search order is MKL;OPENBLAS;ESSL;ATLAS;ACML;SYSTEM_NATIVE; -- You can select a specific type by defining for instance -D BLAS_TYPE=ATLAS or -D LAPACK_TYPE=ACML; -- or by redefining MATH_LIB_SEARCH_ORDER; -- BLAS will be searched for based on MKLROOT=/global/software/sl-7.x86_64/modules/langs/intel/2016.4.072/mkl; -- Found BLAS: MKL (/global/software/sl-7.x86_64/modules/langs/intel/2016.4.072/mkl/lib/intel64/libmkl_rt.so); -- LAPACK will be searched for based on MKLROOT=/global/software/sl-7.x86_64/modules/langs/intel/2016.4.072/mkl; -- Found LAPACK: MKL (/global/software/sl-7.x86_64/modules/langs/intel/2016.4.072/mkl/lib/intel64/libmkl_rt.so); -- Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE) ; -- Found LAPACK MKL: /global/software/sl-7.x86_64/modules/langs/intel/2016.4.072/mkl/lib/intel64/libmkl_rt.so;...; ```. and then cmake ends without errors. Proceeding with building, it of course fails since it can't find MathOpenMP. I found the solution in issue #1041 : hint at the location of libiomp5 using `-DOpenMP_LIBRARY_DIRS`. However, the fact that cmake terminates without any error message seems suboptimal, since less experienced users might spend a long time recompiling to track down an error that could actually be diagnosed at configure time.; Also, I did not look into extreme detail but I could not find this CMake hint in the `installation from source` part of the manual.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1118:1169,error,errors,1169,https://psicode.org,https://github.com/psi4/psi4/issues/1118,4,"['down', 'error']","['down', 'error', 'errors']"
Availability,I'm compiling the latest master of Psi4. SNS-MP2 automatic download failed with ; ``Cloning into 'snsmp2_external'...; fatal: invalid reference: a035c27; CMake Error at /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/external/downstream/snsmp2/snsmp2_external-prefix/tmp/snsmp2_external-gitclone.cmake:75 (message):; Failed to checkout tag: 'a035c27'; ``; Looking up the SNS-MP2 Git I found the tag of the current release to be dd286d3. I replaced it in ``external/downstream/snsmp2/CMakeLists.txt`` and the compilation proceeded.; Is this actually the correct version for SNS-MP2? Should I submit a PR with this tiny change?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1425:59,down,download,59,https://psicode.org,https://github.com/psi4/psi4/issues/1425,4,"['Error', 'down']","['Error', 'download', 'downstream']"
Availability,"I'm posting this for discussion before I start coding anything. I was hoping to have some more details on prefactors, but I've both fallen ill and been given a shift in priorities, so I'm posting what I have in the interests of not wasting more time. I'm hoping to have more to say on the prefactor problem when I've recovered. @kcpearce's plans for MP2 hessians are related, but not the part of the project that I'll be focusing on. ## Motivation; Several different groups of Psi developers are dissatisfied with Psi's current technology for correlated derivatives.; * At Emory, @fevangelista has recently implemented gradients for DSRG-PT2 via a standalone code interfaced to Psi. Getting those working required consulting three(!) other experienced Psi developers and borrowing code from a fourth because the assumptions of the `libmints/libtrans` machinery are undocumented and confusing.; * At University of Georgia, the DCT code currently has to go through several contortions to be compatible with the gradient code. It has to [rewrite part of libtrans for RHF gradients](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dct/dct_sort_mo_tpdm.cc) because the developer could not figure out what to send libtrans otherwise. It has to [convert LibDPD buffers into LibIWL](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dct/dct_gradient_UHF.cc#L4815) buffers so `libtrans` can [convert those back to LibDPD buffers](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libtrans/integraltransform_sort_mo_tpdm.cc), but sorted differently. It also has to [re-index](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dct/dct_gradient_UHF.cc#L3839) its own 1PDM and energy-weighted density matrix, and merge [density matrix blocks into a single density matrix](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dct/dct_gradient_UHF.cc#L3789). These tasks shouldn't be necessary.; * @edeprince3 has also [rewritten parts of libtrans](https://github.com/edeprince3/v2rdm_casscf/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1736:317,recover,recovered,317,https://psicode.org,https://github.com/psi4/psi4/issues/1736,1,['recover'],['recovered']
Availability,"I'm running psi4 via JSON inputs using `psi4.json_wrapper.run_json(json_data)`. The script I'm running is [here](https://github.com/ChayaSt/torsionfit_examples/blob/wbo/kinase_inhibitors/bond_order/run_psi4.py). ; I'm using psi4 version `1.2a1.dev781`. ; When I try to run this on the cluster I get the following error:; ```; Traceback (most recent call last):; File ""run_psi4.py"", line 14, in <module>; psi4.json_wrapper.run_json(json_data); File ""/home/chayas/miniconda3/envs/p4dev/lib/python3.6/site-packages/psi4/driver/json_wrapper.py"", line 234, in run_json; with open(outfile, 'r') as f:; FileNotFoundError: [Errno 2] No such file or directory: '817ec146-d766-49a6-828c-8758bd88af3d.json_out'; ```; I added `print(os.getcwd()), print(outfile)` after [this line](https://github.com/psi4/psi4/blob/master/psi4/driver/json_wrapper.py#L233) in `json_wrapper.py` and it printed out:; ```; current directory: /tmp/psi.50867..dftd3.a3e40a77; outfile: 9eab12bc-82e2-47aa-b29f-eb58db83bf22.json_out; ```; When I set `json_data[""scratch_location""]: ""absolute/path/to/current/directory""` where the current directory is the directory I launch psi4 from, I get the following print out:. ```; current directory: /lila/home/chayas/src/ChayaSt/torsionfit_examples/kinase_inhibitors/bond_order/Axitinib/psi.52714..dftd3.cb5f92ab; outfile: 45d87c61-c859-4e40-9a96-419f3b0888ad.json_out; ```; The tmp directory `psi.57214..dftd3.cb5f92ab` gets written to the directory I specified and some scratch files get written there too. But `45d87c61-c859-4e40-9a96-419f3b0888ad.json_out` is written to `/lila/home/chayas/src/ChayaSt/torsionfit_examples/kinase_inhibitors/bond_order/Axitinib/`, not to the tmp directory no matter if I specify where the scratch files should be written. . @dgasmith suggested I add `outfile = core.IOManager.shared_object().get_default_path() +str(uuid.uuid4()) + "".json_out""` to [here](https://github.com/psi4/psi4/blob/master/psi4/driver/json_wrapper.py#L188). When I do this, `json_wrappe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/944:313,error,error,313,https://psicode.org,https://github.com/psi4/psi4/issues/944,1,['error'],['error']
Availability,"I'm trying to build a rather complete version of Psi4 using the configure line:; ``cmake -H. -Bobj_rel -DMAX_AM_ERI=6 -DENABLE_ambit=ON -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_libefp=ON -DENABLE_simint=ON -DENABLE_gdma=ON -DENABLE_PCMSolver=ON -DENABLE_snsmp2=ON -DENABLE_v2rdm_casscf=ON -DCMAKE_BUILD_TYPE=Release -DOpenMP_LIBRARY_DIRS=/opt/intel/lib/intel64_lin/``. Everything built (once the SNS-MP2 tag was corrected) except for v2rdm_casscf which complains about something I don't quite understand:; ```; [ 92%] Performing configure step for 'v2rdm_casscf_external'; loading initial cache file /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/tmp/v2rdm_casscf_external-cache-Release.cmake; -- Setting option ENABLE_OPENMP: ON; -- Psi4 script: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/bin/psi4; -- Psi4 headers: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/include; -- Psi4 library: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib//psi4/core.cpython-36m-x86_64-linux-gnu.so; -- Psi4 sys.path: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib/; -- Psi4 components: ambit;chemps2;dkh;gdma;pcmsolver;simint; -- Python executable: /usr/bin/python3; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, LANG=CXX;Fortran, C/CXX/Fortran=/GNU/GNU; CMake Error at /usr/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake:211 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:487 (find_package_handle_standard_args); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindTargetOpenMP.cmake:64 (find_package); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:104 (find_package); /usr/share/cmake-3.10/M",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1426:675,down,downstream,675,https://psicode.org,https://github.com/psi4/psi4/issues/1426,1,['down'],['downstream']
Availability,"I'm trying to optimize the geometry of ethylammonium cation using psi4. I have downloaded the latest version and an optimization of a smaller molecule ran with no trouble. This one fails with the error; qcelemental.exceptions.MoleculeFormatError: Unprocessable Molecule remanents under [psi4, xyz, xyz+, psi4+]:; The complete output file is attached. I don't understand the error message. Can anyone explain it to me, please?. Anthony Stone. [ethylammonium.txt](https://github.com/psi4/psi4/files/7090210/ethylammonium.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2287:79,down,downloaded,79,https://psicode.org,https://github.com/psi4/psi4/issues/2287,3,"['down', 'error']","['downloaded', 'error']"
Availability,"I'm trying to perform SAPT calculations with the aug-cc-PV5Z bases set for the interaction between helium gas and ammonia. However, getting the error describe below. Memory set to 26.077 GiB by Python driver.; Threads set to 12 by Python driver. QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 5 for key JKFIT among:; Shell Entries: ['HE']; Basis Sets: [('aug-cc-pv5z-jkfit', 'aug-cc-pv5z-jkfit', None)]; File Path: /home/sandro/Desktop/teste_He-aug-cc-pv5z, /home/sandro/Desktop/teste_He-aug-cc-pv5z, /home/sandro/miniconda3/envs/venv_psi4/share/psi4/basis; Input Blocks: . Traceback (most recent call last):; File ""run_GN_NH3_inter_var.py"", line 402, in <module>; eel = calcula_energia(metodo, base, dimero, fator_conv)[0]; File ""run_GN_NH3_inter_var.py"", line 73, in calcula_energia; psi4.energy(f'{metodo}/{base}'); File ""/home/sandro/miniconda3/envs/venv_psi4/lib/python3.8/site-packages/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sandro/miniconda3/envs/venv_psi4/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 4394, in run_sapt; dimer_wfn = scf_helper('RHF', molecule=sapt_dimer, **kwargs); File ""/home/sandro/miniconda3/envs/venv_psi4/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1576, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sandro/miniconda3/envs/venv_psi4/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1231, in scf_wavefunction_factory; aux_basis = core.BasisSet.build(wfn.molecule(), ""DF_BASIS_SCF"",; File ""/home/sandro/miniconda3/envs/venv_psi4/lib/python3.8/site-packages/psi4/driver/p4util/python_helpers.py"", line 85, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(mol.to_dict(),; File ""/home/sandro/miniconda3/envs/venv_psi4/lib/python3.8/site-packages/psi4/driver/qcdb/libmintsbasisset.p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2989:144,error,error,144,https://psicode.org,https://github.com/psi4/psi4/issues/2989,1,['error'],['error']
Availability,"I'm trying to reproduce some dmrg calculations in the literature on polyenes in the STO-3G basis set. However, I get the following error. ```; ###########################################################; ### ###; ### DMRG-SCF ###; ### ###; ### CheMPS2 by Sebastian Wouters ###; ### https://github.com/SebWouters/CheMPS2 ###; ### Comput. Phys. Commun. 185 (6), 1501-1514 (2014) ###; ### ###; ###########################################################. Number of variables in the x-matrix = 342; CheMPS2 output is temporarily written to the file output.dat.chemps2 and will be copied here.; iwl_buf_init: Can't open file 33; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 80, in <module>. File ""/global/home/groups-sw/mhg/psi4/install/share/psi4/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/global/home/groups-sw/mhg/psi4/install/share/psi4/python/procedures/proc.py"", line 2686, in run_dmrgci; dmrg_wfn = psi4.dmrg(ref_wfn). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /global/home/groups-sw/mhg/psi4/psi4.git/src/lib/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::IWL::fetch(); psi::DiskJK::compute_JK(); ```. when I try to run a calculation with. ```; numOrbitals = [ 47 , 9 ]; R(O)HF DOCC = [ 28 , 4 ]; R(O)HF SOCC = [ 0 , 1 ]; frozen_docc = [ 9 , 0 ]; active = [ 38 , 9 ]; virtual = [ 0 , 0 ]; nElectrons = 65; nEl. active = 47; ```. I'm having trouble seeing why this would fail. First of all, the scratch partition on the node has over 2 TB of free space, and second, there are only 65 basis functions in the system, so even if one didn't use any kind of symmetries for the repulsion integrals, one would",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/464:131,error,error,131,https://psicode.org,https://github.com/psi4/psi4/issues/464,2,['error'],['error']
Availability,"I'm trying to run a CI calculation within an active space to get a natural orbital guess for a smaller subspace CASSCF. However, when nat_orbs = true, the FNO code is triggered. In some cases I might want this to happen, but; a) I might want to get NOs with a canonical frozen core; b) the FNO code that insists on running currently crashes with; ```; ==> Build MP2 amplitudes, OPDM, and NOs <==. LIBDPD: Out-of-core algorithm not yet coded for rpqs sort.; Error in: buf4_sort; ```; on my system with roughly 300 basis functions. Frozen natural orbitals should only be triggered if the method explicitly specifies fno- or if a special keyword (I propose frz_nat_orbs) is specified. Normally I'd supply a pull request, but I still haven't figured out where the fno code is toggled in this case...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/598:457,Error,Error,457,https://psicode.org,https://github.com/psi4/psi4/issues/598,1,['Error'],['Error']
Availability,"I'm trying to run some FCI calculations without symmetry to ensure I land on the ground state. However, the SCF is sometimes very hard to do without symmetry, so I'd like to run SCF with symmetry, switch symmetry off and check if I'm still at a stable solution. However, I find I'm unable to change my molecule for symmetry constraints (or charge/multiplicity for that matter). The following input; ```; molecule sym {; 0 1; H 0.459619 0.000000 0.000000; H 0.000000 0.459619 0.000000; }. set basis STO-3G; energy('scf'). molecule nosym {; 0 1; H 0.459619 0.000000 0.000000; H 0.000000 0.459619 0.000000; }. set scf guess read; energy('scf'); ```; runs the first SCF, but crashes on the second with; ```; RuntimeError: ; Fatal Error: SCF guess was set to SAD, but sad_basissets_ was empty!. Error occurred in file: /home/work/psi4/psi4/psi4/src/psi4/libscf_solver/sad.cc on line: 659; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::scf::HF::compute_SAD_guess(); psi::scf::HF::guess(); psi::scf::HF::initialize(); psi::scf::HF::compute_energy(); ```; Oddly, it appear that while in the second run; ```; ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is READ.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 0.00e+00; ```; the initialization uses; ```; ==> Integral Setup <==. ==> DFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Integrals threads: 1; Memory (MB): 375; Algorithm: Core; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-12. => Auxiliary Basis Set <=. Basis Set: file /home/work/psi4/install/share/psi4/basis/def2-svp-jkfit.gbs; Number of shells: 12; Number of basis function: 36; Number of Cartesian functions: 40; Spherical Harmonics?: true; Max angular momentum: 2. Minimum eige",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/586:726,Error,Error,726,https://psicode.org,https://github.com/psi4/psi4/issues/586,2,['Error'],['Error']
Availability,"I'm using GCC 8.1.0 and system-provided pybind 2.2.3 on Arch Linux, with latest master (015c10a5581e70c507feb968e87f75954ae0e946).; ```; src_berquist/psi4/src/core.cc:1081:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1013:176,error,error,176,https://psicode.org,https://github.com/psi4/psi4/issues/1013,1,['error'],['error']
Availability,"I've been fiddling about with fragment optimisations and (after a bit of tweaking intrafrag_step_limit and interfrag_step_limit), I can get something like a benzene dimer to run and optimise (blyp/cc-pVDZ with D3BJ empirical dispersion; I'm not worried what the actual structure is at the moment!). If I do the same with, e.g., a dimer of PhCN, i.e. something with linear bends present, I get a seg fault pretty much straight away in the optimisation during printing of the internal coordinates. The top of the debug stack is:; ```; (gdb) bt; #0 0x00002aaaadd9a2bd in opt::v3d::v3d_axpy (a=-1, X=0x3fee2b48e49e68d8, Y=0x55555d9b5c90, Z=0x7fffffffbc20); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/v3d.h:72; #1 0x00002aaaaddacf78 in opt::BEND::compute_axes (this=0x55555e408d20, geom=0x55555d874e30); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/bend.cc:82; #2 0x00002aaaaddad565 in opt::BEND::value (this=0x55555e408d20, geom=0x55555d874e30); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/bend.cc:141; #3 0x00002aaaaddae374 in opt::BEND::print (this=0x55555e408d20, psi_fp=..., qc_fp=0x0, geom=0x55555d874e30, ; off=0) at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/bend.cc:269; #4 0x00002aaaadd6cff2 in opt::FRAG::print_simples (this=0x55556b8407e0, psi_fp=..., qc_fp=0x0, atom_offset=0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/frag_print.cc:123; #5 0x00002aaaadd8db62 in opt::MOLECULE::print_coords (this=0x55555e405dd0, psi_fp=..., qc_fp=0x0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/molecule_print.cc:209; #6 0x00002aaaadd5abd5 in opt::optking (options=...); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/optking.cc:261; #7 0x00002aaaad0dd557 in py_psi_optking () at /home/laz/build/psi4/psi4/psi4/src/core.cc:239; #8 0x00002aaaad118e95 in pybind11::detail::argument_loader<>::call_impl<int, int (*&)()>(int (*&)(), pybind11::detail::index_sequence<>) (this=0x7fffffffc667, f=@0x5555560adc28: 0x2aaaad0dd4f4 <py_psi_optking()>); ... [Pythony bits ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680:399,fault,fault,399,https://psicode.org,https://github.com/psi4/psi4/issues/680,1,['fault'],['fault']
Availability,"I've been trying to build a version of psi4 1.6 (based on the release from a day or so ago) with MAX_AM_ERI=7, and run into various issues. I think at this point I've solved all my issues, but wanted to document my steps here in case any of these can help others. **Overall**: Is MAX_AM_ERI=7 meant for use on 1.6? Is https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-7-7-4-8-8-5_mm4f12ob2.tgz the right file to use (with patches described below)?. **Problem 1**: psi4/external/upstream/libint2/CMakeLists.txt refers to a single libint2 file regardless of MAX_AM_ERI (https://github.com/psi4/psi4/blob/1.6.x/external/upstream/libint2/CMakeLists.txt#L63) . **Solution 1**: Grab https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-7-7-4-8-8-5_mm4f12ob2.tgz instead. **Problem 2**: The CMakeLists.txt in Libint2-export-7-7-4-8-8-5_mm4f12ob2.tgz has an incorrectly quoted macro, which results in a build error when trying to compile using header files from libint2. The original correct quoting appears commented out? Which makes me worried maybe it was that way for a Reason, but it would not build that way. **Solution 2**: Uncomment line 303 and remove line 304 of libint-2.7.1/CMakeLists.txt, then (re)build. (this makes it look like the CMakeLists.txt in the default https://github.com/loriab/libint/releases/download/v0.1/Libint2-export-5-4-3-6-5-4_mm4f12ob2.tgz).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2586:360,down,download,360,https://psicode.org,https://github.com/psi4/psi4/issues/2586,4,"['down', 'error']","['download', 'error']"
Availability,"I've got trouble calculation H2:. ``` python; import numpy as np; memory 50 Gb. molecule H2 {; 0 1; H; H 1 R; units au; }. set {; SCF_TYPE PK; diag_method rsp; MAXITER 40; NUM_ROOTS 5; basis cc-pvdz; }. rlist = np.arange(1.00, 10.1, 0.1). for r in rlist:; H2.R = r; energy('fci'); ```. It calculates the first point and then I get:. ``` python; PSIO_ERROR: unit = 53, errval = 13; PSIO_ERROR: 13 (no such TOC entry); Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""share/psi/python/driver.py"", line 576, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""share/psi/python/proc.py"", line 1969, in run_detci; psi4.detci(); RuntimeError: PSIO Error; ```. This is done with 14c78eab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/83:693,Error,Error,693,https://psicode.org,https://github.com/psi4/psi4/issues/83,1,['Error'],['Error']
Availability,"If Psi is built with debug symbols, I observe that the `cc53` test fails randomly. Failure rate seems to be somewhere between 50% and 80%. If Psi is not built with debug symbols, the test works perfectly. When the bug appears, the LLDB reports `malloc: *** error for object 0x100000000: pointer being freed was not allocated`. The most relevant part of the stack trace is ; ```; frame #5: 0x00000001050d3b64 core.cpython-36m-darwin.so`psi::DPD::free_dpd_block(this=0x000000011485c9c0, array=0x000000011485cb50, n=3, m=3) at block_matrix.cc:176; frame #6: 0x0000000105124f85 core.cpython-36m-darwin.so`psi::DPD::file2_mat_close(this=0x000000011485c9c0, File=0x00007ffeefbf7718) at file2_mat_close.cc:46; frame #7: 0x0000000103c092dc core.cpython-36m-darwin.so`psi::cctriples::EaT_RHF() at EaT_RHF.cc:247; frame #8: 0x0000000103c5477f core.cpython-36m-darwin.so`psi::cctriples::cctriples(reference_wavefunction=std::__1::shared_ptr<psi::Wavefunction>::element_type @ 0x0000000102a00e00 strong=7 weak=2, options=0x00000001067bf240) at triples.cc:154; frame #9: 0x0000000103b45e93 core.cpython-36m-darwin.so`psi::cclambda::CCLambdaWavefunction::compute_energy(this=0x00000001018f4e18) at cclambda.cc:324; ```. I'll leave this bug to somebody familiar with the CC code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1376:83,Failure,Failure,83,https://psicode.org,https://github.com/psi4/psi4/issues/1376,2,"['Failure', 'error']","['Failure', 'error']"
Availability,"If a user decides to do a DFT computation on an open-shell molecule via the Python API, say on OH (doublet), but forgets to specify the reference, there is a strange memory effect that require restarting the kernel. Here is an example. Suppose we run this code in a cell:; ```python; import psi4; psi4.geometry(""""""; O; H 1 1.0; """"""); psi4.energy(""B3LYP/def2-SVP""); ```; This will yield the error message:; ```; RuntimeError: ; Fatal Error: RHF: RHF reference is only for singlets.; Error occurred in file: /home/jovyan/psi4/psi4/src/psi4/libscf_solver/rhf.cc on line: 94; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); ```. If we try to fix the error by specifying the correct reference, i.e., by **adding a new cell** with the following code:; ```python; psi4.set_options({'REFERENCE' : 'UKS'}); psi4.energy(""B3LYP/def2-SVP""); ```; we still give the same error message. This problem does not affect HF computations.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2372:390,error,error,390,https://psicode.org,https://github.com/psi4/psi4/issues/2372,5,"['Error', 'error']","['Error', 'error']"
Availability,"If a user sets the symmetry explicitly and then attempts to perform a finite difference calculation, Psi raises `Fatal Error: User specified point group is not a subgroup of the highest detected point group.` This problem does not occur if the user does not explicitly provide the symmetry. The problem also occurs if `reset_point_group` is used. Example input below. I don't know enough about Psi's symmetry and molecule tech to tell if this is a problem that needs to be fixed findif side or molecule side. If this needs to be fixed findif side, I'll take it for obvious reasons. If not, then if this isn't fixed by the time findif is done, I'll take this anyways. I've had a vendetta against this bug since November. ```; molecule h2o {; symmetry c2v; O; H 1 0.9894093; H 1 0.9894093 2 100.02688; }. set {; basis sto-3g; d_convergence 11; scf_type pk; }. frequencies('scf', dertype=1, return_wfn=True); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1052:119,Error,Error,119,https://psicode.org,https://github.com/psi4/psi4/issues/1052,1,['Error'],['Error']
Availability,"If during a BCCD(T) calculation CCENERGY errors out due to the CC iterations not converging, Psi4 crashes with an error due to a timer not being on. Cut down input that intentionally triggers the issue:; ```; memory 8 GiB; molecule {; 0 2; H 3.14661583 0.50221279 16.95640639; H -2.34237367 -1.18278602 -9.14879752; H -1.21364759 -0.97589031 -7.97279014; H -0.76962046 -0.48732090 -9.68891324; H -2.68966560 0.90001402 -8.13713011; O 3.52147514 -0.34931909 16.40682068; O -2.05471741 0.80770143 -8.67788722; C -1.63014171 -0.50652361 -8.79096870; symmetry c1; }. set basis aug-cc-pvdz; set reference rohf; set ints_tolerance 1e-14; set d_convergence 5e-9; set e_convergence 1e-10; set ccenergy maxiter 2. energy('BCCD(T)'); ```. Tail of the produced output:; ```; Solving CC Amplitude Equations; ------------------------------; Iter Energy RMS T1Diag D1Diag New D1Diag D2Diag; ---- --------------------- --------- ---------- ---------- ---------- --------; 0 -0.533075915819886 0.000e+00 0.006541 0.000000 0.000000 0.000000; 1 -0.556071307119493 7.982e-02 0.013677 0.000000 0.000000 0.000000; 2 -0.568751401183405 2.374e-02 0.014574 0.000000 0.000000 0.000000. ** Wave function not converged to 1.0e-07 ** . Traceback (most recent call last):; File ""/home/jzz/psi4conda/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 40, in <module>; File ""/home/jzz/psi4conda/lib//python3.7/site-packages/psi4/driver/driver.py"", line 570, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/jzz/psi4conda/lib//python3.7/site-packages/psi4/driver/procrouting/proc.py"", line 2673, in run_bccd; ref_wfn = core.ccenergy(ref_wfn). RuntimeError: ; Fatal Error: Timer ccenergy is not on.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1584239292352/work/psi4/src/psi4/libqt/timer.cc on line: 1143; The most recent 5 function calls were:. psi::timer_off(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1864:41,error,errors,41,https://psicode.org,https://github.com/psi4/psi4/issues/1864,3,"['down', 'error']","['down', 'error', 'errors']"
Availability,"If the name of the installation directory is over a certain threshold and you try to run gdma, it will crash. Probably just needs a longer string somewhere that my shallow explorations have not found. This will _not_ be fixed for 1.1, so just documenting the issue. Will add the error message when I hit it again.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/667:279,error,error,279,https://psicode.org,https://github.com/psi4/psi4/issues/667,1,['error'],['error']
Availability,"If the user doesn't specify how a gradient or hessian is to be computed (difference of energies, difference of gradients, or analytically), Psi will choose to compute it by the most analytic method available to the general method. This leads to annoying crashes when that method isn't available for the more particular variant of the method requested. For instance, the following input file will crash:; ```; molecule {; O ; H 1 1.0 ; H 1 1.0 2 105 ; }. set {; reference rks ; basis sto-3g; }. gradient('wb97x-v'); ```. The error is that:; ```; Fatal Error: V: RKS cannot compute VV10 gradient contribution.; ```. But in that case, Psi shouldn't have tried to do an analytic gradient computation at all but just done finite difference of energies. I'm not familiar with how the method selection works, but I have a bad feeling that writing this would be rather painful.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1149:198,avail,available,198,https://psicode.org,https://github.com/psi4/psi4/issues/1149,4,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,"If the user wants to run DF-MP2 on a molecule containing an element like Li or He, we need to use the requested basis set for most of the atoms and then a more generic basis set for the tricky atom. It might be useful to let Python query basis set availability per atom --- apparently such queries are currently made C-side.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/46:248,avail,availability,248,https://psicode.org,https://github.com/psi4/psi4/issues/46,1,['avail'],['availability']
Availability,"If two atoms get within 0.5 Bohr of each other, psi4 crashes. I tracked this down to the overlap matrix having NAN in rows/columns involving AOs centered on the overlapping atom. This seems to be a problem in the part of the code that computes atom mappings, because when I change the tol in petitelist.h:62 to:; `int **compute_atom_map(const Molecule* mol, double tol = 0.1);`; (and the line above), the problem goes away. It seems the AO shells are not created for the overlapping atom, even though parts of the code expect them. Setting c1 symmetry does not help. Here's a small input deck that recreates the problem:. ```; #! H Ghost test. molecule h { ; -1 1; H 0.00000000 0.00000000 0.0; Gh(He) 0.0000000000 0.0000000000 0.2; }. set {; SCF_TYPE DIRECT; DF_SCF_GUESS FALSE; print 4; }. basis {; assign sto-3g; }; energy('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/195:77,down,down,77,https://psicode.org,https://github.com/psi4/psi4/issues/195,1,['down'],['down']
Availability,Implement DIIS absolute error criterion,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1460:24,error,error,24,https://psicode.org,https://github.com/psi4/psi4/pull/1460,1,['error'],['error']
Availability,Import error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1036:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/1036,1,['error'],['error']
Availability,Import error in Google Colab,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2598:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/2598,1,['error'],['error']
Availability,"Improve PSIO error messages for READ, WRITE and LSEEK",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756:13,error,error,13,https://psicode.org,https://github.com/psi4/psi4/pull/2756,1,['error'],['error']
Availability,Improve error handling after PSIO system calls,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2746:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/pull/2746,1,['error'],['error']
Availability,"In `intrinsics_sse.h` and `simint_eri.h` i get errors like: ; ` fatal error: simint/cpp_restrict.hpp: No such file or directory`. The file is located in my installation here:; `[..]/external/upstream/simint/simint_external-prefix/src/simint_external/simint/cpp_restrict.hpp`. For now I can hotfix this for myself by setting the correct path manually.; This issue suddenly appeared, it worked fine before.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890:47,error,errors,47,https://psicode.org,https://github.com/psi4/psi4/issues/890,2,['error'],"['error', 'errors']"
Availability,"Input below gives error below. Should this happen, @psi-rking?. ```. molecule innocentlookingwater {; O 0.00000000 0.00000000 0.00000000; H 0.16863830 0.60275550 -0.70533100; H -0.76265500 0.37866910 0.40513500; O -0.18467200 2.33422480 0.31265570; H 0.48244850 1.84992580 0.77377280; H -0.08271400 3.22838610 0.58596930; }. set basis 6-31g. optimize('scf'); ```. ```; TORS::compute_val: unable to compute torsion value; Optimizer: Optimization failed!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/231:18,error,error,18,https://psicode.org,https://github.com/psi4/psi4/issues/231,1,['error'],['error']
Availability,"Input file:; ```; molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }; set {; basis roos-ano-dz; relativistic x2c; }; energy('scf'); ```; Error Info:; ```; Traceback (most recent call last):; File ""bin/psi4"", line 210, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""lib/psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""lib/psi4/driver/procedures/proc.py"", line 1917, in run_scf; scf_wfn = scf_helper(name, **kwargs); File ""lib/psi4/driver/procedures/proc.py"", line 1241, in scf_helper; scf_wfn = scf_wavefunction_factory(core.get_option('SCF', 'REFERENCE'), base_wfn); File ""lib/psi4/driver/procedures/proc.py"", line 1035, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""lib/psi4/driver/p4util/python_helpers.py"", line 62, in pybuild_basis; key, target, fitrole, other, return_atomlist=return_atomlist); File ""lib/psi4/driver/qcdb/libmintsbasisset.py"", line 631, in pyconstruct; return_atomlist=return_atomlist); File ""lib/psi4/driver/qcdb/libmintsbasisset.py"", line 753, in construct; filename = cls.make_filename(basgbs); File ""lib/psi4/driver/qcdb/libmintsbasisset.py"", line 1292, in make_filename; basisname = basisname.lower(). AttributeError: 'NoneType' object has no attribute 'lower'; ```; This happens not only with roos-ano-dz basis, but also when a user-defined basis is used.; This problem is actually caused by line 726~730 in lib/psi4/driver/qcdb/libmintsbasisset.py. After line 730: seek['basis'] = [item for item in tmp if item != (None, None, None)], seek['basis'] have only one entry (None, None, BasisSet.decontract), which will cause basgbs == None at line 753.; Actually, after line 730, seek['basis'] should have an entry ('roos-ano-dz-decon', 'roos-ano-dz', BasisSet.decontract) for the program to run correctly. One possible solution is that add a guard:; ```; if basgbs == None:; continue; ```; before line 753: filename = cls.make_filename(basgbs)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/617:135,Error,Error,135,https://psicode.org,https://github.com/psi4/psi4/issues/617,1,['Error'],['Error']
Availability,"Inspired by a recent [forum post](http://forum.psicode.org/t/psi4-run-time-error-module-exec-content/1064/2). If there's an error in the user's input file, the traceback could be much clearer. In particular:. -; ```; Traceback (most recent call last):; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 30, in <module>; ```; is not a good indicator that the problem is input file side.; - When the problem is input file side, we give the user the line number of the post-processed input file. To see the post-processed input file the line number corresponds to, the user needs to supply the -v flag.; - The line numbering doesn't match up, according to my demo. See the forum topic for details, but Psi told me I had a line 30 error when there was no line 30. (The error was instead by line 29.). This is a ""put this up so I don't forget about it"" issue, not a thorough detailing of what should be done. As I recall, this was brought up at WWDC last November, but an issue was never posted.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1196:75,error,error-module-exec-content,75,https://psicode.org,https://github.com/psi4/psi4/issues/1196,4,['error'],"['error', 'error-module-exec-content']"
Availability,"Installing `psi4` via `conda`/`mamba` with:. ```; $ mamba create -n psi4-env -c conda-forge -c conda-forge/label/libint_dev psi4; ```; when the env directory is in a symlinked directory, such as on an HPC cluster where `/home` is a symlink, gives something like the following when attempting to run `psi4`:. ```; $ mamba activate psi4-env; $ psi4 --version; Traceback (most recent call last):; File ""/lila/home/dotson/mambaforge/envs/psi4-env/bin/psi4"", line 205, in <module>; with (psi4_module_loc / ""metadata.py"").open() as fp: verline = fp.readline(); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/lila/home/dotson/mambaforge/envs/psi4-env/lib/python3.12/pathlib.py"", line 1014, in open; return io.open(self, mode, buffering, encoding, errors, newline); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; FileNotFoundError: [Errno 2] No such file or directory: '/lila/home/conda/feedstock_root/build_artifacts/psi4_1698452227439/work/build/stage/lib/python3.12/site-packages/psi4/metadata.py'; ```. Working with @bennybp to troubleshoot, it appears that adding use of `.resolve()` to [these Path constructions](https://github.com/psi4/psi4/blob/e3d46319d3a11d571c1c362eeaf7f6641978515c/psi4/run_psi4.py#L129-L131) solves this issue. This resolves (heh) the mismatch that otherwise happens between the paths that were `.resolve()`ed and these that weren't, which causes problems further down.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3084:742,error,errors,742,https://psicode.org,https://github.com/psi4/psi4/issues/3084,2,"['down', 'error']","['down', 'errors']"
Availability,"Instead assuming unsafe. Can pass ref_gradient array to test on or `set findif fd_project` T/F explicitly to control.; - [x] `json_ret = psi4.schema_wrapper.run_qcschema(json_input)` not `json_ret = psi4.json_wrapper.run_json(json_input)`. json_ret is now an object, so `.` access, not dictionary. The old schema runner uses a schema circa pre-2018 and we've warned it's deprecated for about a year, so I went ahead and updated all the tests to the new/current run_qcschema.; - [x] Pre-ddd, CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned, meaning their behavior was slightly different than `set basis cc-pvdz \n energy('hf')`. With ddd, this is no longer happening, so for occasional string modelchem calcs (that is, `energy|gradient|hessian(""mtd/bas"")` only), you may need to add a clean in the input. A few test cases now sport extra cleans. Signatures of this problem are PSIO errors and, in an obscure case, CC amplitudes being all zeros when called as mtd/bas. An example is shown below, collected by modifying steps 6 & 7 of `cbs-xtpl-energy-conv` test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set basis bas; energy(mtd) | `PSIO_ERROR: (Incorrect block end address)` | `PSIO_ERROR: (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. - [x] Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - [x] A Logging file has been introduced. All its contents shoul",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:4520,error,errors,4520,https://psicode.org,https://github.com/psi4/psi4/pull/2575,1,['error'],['errors']
Availability,Integrals threading error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/596:20,error,error,20,https://psicode.org,https://github.com/psi4/psi4/issues/596,1,['error'],['error']
Availability,"Investigate DIIS/SAD memory requirements at low memory ranges. cc44 (that sets memory artificially low for other reasons) segfaults in parallel apparently during SAD. The DIIS rewrite is a possible trigger, as test was ok under these conditions at ` 2c5b6e3 - (master) Merge pull request #2191 from loriab/libxc514 (11 months ago) <Andy Simmonett>`. This error is unlikely to be hit under normal running conditions.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2576:355,error,error,355,https://psicode.org,https://github.com/psi4/psi4/issues/2576,1,['error'],['error']
Availability,Is ccCA-PS3 composite method available in PSI4?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2157:29,avail,available,29,https://psicode.org,https://github.com/psi4/psi4/issues/2157,1,['avail'],['available']
Availability,"Is it possible to write the geometry of a molecule in python via a function?. For example, I want to take an SDF, chop down to only the coordinates of the atoms, then plug those coordinates into ""psi4.geometry(...)"" all without leaving python. Currently, it looks like ""psi4.geometry(...)"" only takes comments as an input, so it's impossible to write the coordinates via a function. I know I can work around this by writing in bash and running a calculation on a stand alone input file, but this makes life more difficult because if I want to run multiple calculations I would either collect 10^x in/output files or write over preceding ones limiting me to non-parallel computing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2553:119,down,down,119,https://psicode.org,https://github.com/psi4/psi4/issues/2553,1,['down'],['down']
Availability,"Is there any way to compute analytical nuclear gradients with solvent models? If none, any future plan to implement it?. It would be great if I could optimize a molecular geometry in a solvent by psi4 which has lots of excellent methods available.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2862:237,avail,available,237,https://psicode.org,https://github.com/psi4/psi4/issues/2862,1,['avail'],['available']
Availability,"It appears Psi4 includes a hardcoded list of libxc functional names and ids in psi4/driver/procrouting/dft_funcs/libxc_xc_funcs.py. This should be eliminated in favor of using libxc's own routines for parsing the functionals: ```XC(functional_get_name)(func_id)``` and ```XC(functional_get_number)(str)```. This will eliminate the need to maintain a functional list in psi4, making all newly added libxc functionals available in Psi4 as soon as the underlying libxc library is updated.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/793:416,avail,available,416,https://psicode.org,https://github.com/psi4/psi4/issues/793,1,['avail'],['available']
Availability,It appears that the (experimental) prune functions break the recently (PR #2743) introduced/re-activated lebedev_mapping:; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L5112 . The pruning with functions reduces the number of points arbitrarily and then the attempt to infer the order from the number of points fails. Technically no entry is found in the std::map and an error or segfault occurs. This does **not** happen with the 'TREUTLER' or 'ROBUST' pruning as these reduce use well-defined orders for different regions.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2754:400,error,error,400,https://psicode.org,https://github.com/psi4/psi4/issues/2754,2,"['ROBUST', 'error']","['ROBUST', 'error']"
Availability,"It was revealed that single point can behave a little differently between `set basis bas; energy(mtd)` and `energy(mtd/bas)` calls. (copied from #2575). https://github.com/psi4/psi4/pull/2575#discussion_r876092414. Pre-ddd, CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned, meaning their behavior was slightly different than `set basis cc-pvdz \n energy('hf')`. With ddd, this is no longer happening, so for occasional string modelchem calcs (that is, `energy|gradient|hessian(""mtd/bas"")` only), you may need to add a clean in the input. A few test cases now sport extra cleans. Signatures of this problem are PSIO errors and, in an obscure case, CC amplitudes being all zeros when called as mtd/bas. An example is shown below, collected by modifying steps 6 & 7 of `cbs-xtpl-energy-conv` test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set basis bas; energy(mtd) | `PSIO_ERROR: (Incorrect block end address)` | `PSIO_ERROR: (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. So after DDD, the two approaches behave the same. But psio errors aren't user friendly. Should we reconsider whether to auto clean after an energy() call? Advanced users would need to save more files explicitly. Maybe should clean() _before_ an energy() call.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2583:709,error,errors,709,https://psicode.org,https://github.com/psi4/psi4/issues/2583,2,['error'],['errors']
Availability,"It's been noticed that a coefficient has changed in EMSL (a polarization D 6-311G(2d,p) for Fluorine from 2.396 to 3.5) since the psi basis library was formed. It would be good to know if there are others. 1) go to https://bse.pnl.gov/bse/portal and filter on ""polarization""; 2) for the 7 partial basis set starting ""6-31"" or ""Pople"", download them in Gaussian94 format (if their ""Last Modified"" date is after August 2010).; 3) For files in https://github.com/psi4/psi4/tree/master/psi4/share/psi4/basis/primitives starting with ""polarization-631"", find the analogous polarization pattern (e.g., EMSL ""6-311G* Polarization"" matches https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/primitives/polarization-6311g-_d_.gbs) and through `diff` or the script `diff_gbs.py`, check if there are any changes Psi4 needs to make.; - Note: there's more files in basis/primitives than from EMSL. Don't worry about the cross-terms like (3df, p).; - Note: because of how the files are structures, there may be differences of H/He present or absent. So long as exponents/coefficients aren't changing, don't worry about it.; 4) Report changed coeff/exp back here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1058:335,down,download,335,https://psicode.org,https://github.com/psi4/psi4/issues/1058,1,['down'],['download']
Availability,"It's not much advertised, but the cc* modules can do some density fitting. In particular, it's found that:; * df-cc2 rhf gradients run and equal findif gradients. #2137; * df-ccsd rhf gradients run and differ from conventional by <1.e-6 . Jonathon finds that not all terms make use of DF and not hooked up to DF gradient tech.; * df-ccsd rhf energies run and differ from fnocc by 2e-7 for correlation energy (inconsistent ref energy so printing and qcvars differ more); * df-ccsd uhf energies print NYI msg; * df-ccsd rohf energies run and are plausible compared to conventional. But plumbing-wise, these aren't ready to activate:; * ccenergy vs. (fnocc, dfocc) choose a different reference. ccenergy uses CONV as the ints are needed anyways. others choose DF since that's the SCF_TYPE setting; * is DF used thoroughly enough to match DF-only implementations? if not, is it used in the expensive places so that it's worth calling instead of the reliable CONV?; * does df-rohf need validation and if so, from where?. Current state of accessibility for DF CCENERGY is that CCSD has been barred by it being a managed method, while CC2 could be accessed by turning on `cc_type=df`. Probably any DF in CCENERGY is accessible through `energy(""ccenergy"")` with a lot of manual option setting. When I converted CC2 to a managed method (locally), that broke the DF-CC2 gradient test https://github.com/psi4/psi4/blob/master/tests/pytests/test_gradients.py#L41 and reminded me that DF in CCENERGY was semi-active. For now, I plan to add an escape clause to the CC2 managed gradient so that the test can run but otherwise leave DF CCENERGY inaccessible and out of stdsuite and capabilities tables.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2710:945,reliab,reliable,945,https://psicode.org,https://github.com/psi4/psi4/issues/2710,1,['reliab'],['reliable']
Availability,"KE_BUILD_TYPE=Release -DOpenMP_LIBRARY_DIRS=/opt/intel/lib/intel64_lin/``. Everything built (once the SNS-MP2 tag was corrected) except for v2rdm_casscf which complains about something I don't quite understand:; ```; [ 92%] Performing configure step for 'v2rdm_casscf_external'; loading initial cache file /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/external/downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/tmp/v2rdm_casscf_external-cache-Release.cmake; -- Setting option ENABLE_OPENMP: ON; -- Psi4 script: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/bin/psi4; -- Psi4 headers: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/include; -- Psi4 library: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib//psi4/core.cpython-36m-x86_64-linux-gnu.so; -- Psi4 sys.path: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib/; -- Psi4 components: ambit;chemps2;dkh;gdma;pcmsolver;simint; -- Python executable: /usr/bin/python3; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, LANG=CXX;Fortran, C/CXX/Fortran=/GNU/GNU; CMake Error at /usr/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake:211 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:487 (find_package_handle_standard_args); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindTargetOpenMP.cmake:64 (find_package); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:104 (find_package); /usr/share/cmake-3.10/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:44 (find_dependency); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/psi4/psi4Config.cmake",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1426:1424,Error,Error,1424,https://psicode.org,https://github.com/psi4/psi4/issues/1426,1,['Error'],['Error']
Availability,Keep _default_psio_manager_ alive for Process::Environment,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1933:28,alive,alive,28,https://psicode.org,https://github.com/psi4/psi4/pull/1933,1,['alive'],['alive']
Availability,"Kicking out Boost and libint has substantially reduced our compile time. However, we're still running up against Travis-CI's 50 min max (~10 min of that are in tests). So, here's the facts. Any suggestions for reducing compile time welcome. There are thoughts in the air of moving `bin`s to external projects, where they can be tested separately, but less drastic suggestions preferred. ```; psi4 5216.132 100%; ---------------------------------; dfocc 490.372 9.4%; ccdensity 489.191 9.4%; mints 327.399 6.3%; dpd 321.392 6.2%; psimrcc 297.722 5.7%; core 285.259 5.5%; ccenergy 242.782 4.7%; occ 227.323 4.4%; cclambda 167.325 3.2%; dcft 156.295 3.0%; cceom 156.036 3.0%; ccresponse 137.6 2.6%; fock 136.653 2.6%; sapt_solver 125.653 2.4%; detci 123.652 2.4%; optking 118.63 2.3%; ccsort 118.255 2.3%; cchbar 107.15 2.1%; mcscf 106.969 2.1%; cctriple 91.443 1.8%; iwl 90.624 1.7%; fnocc 77.272 1.5%; qt 69.421 1.3%; functional 65.807 1.3%; psio 59.924 1.1%; scf_solver 57.751 1.1%; trans 51.991 1.0%; cctransort 49.189 0.9%; ciomr 47.597 0.9%; 3index 45.95 0.9%; fisapt 39.127 0.8%; adc 37.382 0.7%; transqt2 34.06 0.7%; thce 33.156 0.6%; findif 31.708 0.6%; scfgrad 30.889 0.6%; moinfo 26.539 0.5%; parallel 23.011 0.4%; dfmp2 19.045 0.4%; options 12.27 0.2%; psi4util 11.808 0.2%; plugin 10.044 0.2%; cubeprop 9.776 0.2%; efp_solver 9.012 0.2%; diis 7.406 0.1%; dmrg 7.377 0.1%; mrcc 6.772 0.1%; gdma_interface 4.447 0.1%; disp 4.221 0.1%; sapt 4.092 0.1%; cholesky 3.863 0.1%; thermo 3.677 0.1%; efp_interface 3.21 0.1%; filesystem 0.613 0.0%. ```. Note to future (http://stackoverflow.com/questions/5962285/cmake-compilation-statistics):. ```; >>> cat time-icpc; #!/bin/bash; { time /path/to/icpc ""$@""; } 2> >(cat <(echo ""/path/to/icpc $@"") - >> /path/to/timeresults.txt); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/525:1721,echo,echo,1721,https://psicode.org,https://github.com/psi4/psi4/issues/525,1,['echo'],['echo']
Availability,"LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_filesystem.so -DBoost_PYTHON_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_python.so -DBoost_REGEX_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_regex.so -DBoost_SERIALIZATION_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_serialization.so -DBoost_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:6824,Error,Error,6824,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"Launching GDMA calculations from a python script or python interpreter causes a sudden crash. Ouptu files indicates that previous steps finish with no eroor and a GDMA input file is created, as well as a log file (fort.52, attached) with this message: `Could not open psi4 output for writing.unit = 51`. On the contrary, launching the same calculations with the psi4 executable does not produce any error. This bug was originally reported and discussed on the [psi4 forum](http://forum.psicode.org/t/psi-gdma-causes-python-to-crash-could-not-open-psi4-output-for-writing-unit-51/1126?u=flolangenfeld). The bug can be reproduce using the sample gdma h2o.dat file and its [python equivalent](http://forum.psicode.org/t/psi-gdma-causes-python-to-crash-could-not-open-psi4-output-for-writing-unit-51/1126/4?u=flolangenfeld)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1334:399,error,error,399,https://psicode.org,https://github.com/psi4/psi4/issues/1334,1,['error'],['error']
Availability,Libthce seg faults on generation of DF integrals for porphyrin radical calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/157:12,fault,faults,12,https://psicode.org,https://github.com/psi4/psi4/issues/157,1,['fault'],['faults']
Availability,MP4 open-shell method not available,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/282:26,avail,available,26,https://psicode.org,https://github.com/psi4/psi4/issues/282,1,['avail'],['available']
Availability,"MRCC-related CTests pass with an older version (2019 with some unknown patches) of MRCC, but the 2022 release broke the interface (again?).; For what its worth, it also no longer works with Molpro 2015. ```; (p4dev) gytibor@CRD-MILAN-3:~/psi4/objdir$ ctest -L mrcc -j`getconf _NPROCESSORS_ONLN` --rerun-failed --output-on-failure; Test project /home/gytibor/psi4/objdir; Start 499: mrcc-ccsdt; Start 500: mrcc-ccsd_t_; Start 501: mrcc-ccsdt_q_; Start 502: mrcc-rohf_ccsdt_q_; Start 503: mrcc-optfreq; 1/5 Test #499: mrcc-ccsdt .......................***Failed 0.62 sec; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /tmp/mrcc_67625/KEYWD; Image PC Routine Line Source; dmrcc 0000000001284F08 Unknown Unknown Unknown; dmrcc 00000000012A12A2 Unknown Unknown Unknown; dmrcc 00000000004AE4BD Unknown Unknown Unknown; dmrcc 0000000000507E55 Unknown Unknown Unknown; dmrcc 000000000040D9DD Unknown Unknown Unknown; dmrcc 00000000004021AA Unknown Unknown Unknown; dmrcc 0000000000400DF2 Unknown Unknown Unknown; dmrcc 00000000013571F9 Unknown Unknown Unknown; dmrcc 0000000000400CCA Unknown Unknown Unknown; Traceback (most recent call last):; File ""/home/gytibor/psi4/objdir/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 27, in <module>; File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 599, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 4732, in run_mrcc; for line in open('iface'):. FileNotFoundError: [Errno 2] No such file or directory: 'iface'. Printing out the relevant lines from the Psithon --> Python processed input file:; h 1 1.0 2 104.5; """""",""h2o""); core.IO.set_default_namespace(""h2o""); core.set_global_option(""BASIS"", ""cc-pvdz""); core.set_global_option(""FREEZE_CORE"", ""true""); --> energy('mrccsdt'); compare_values( 8.801465529972, variable(""NUCLEAR REPULSION ENERGY""), 6, 'N",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497:322,failure,failure,322,https://psicode.org,https://github.com/psi4/psi4/issues/2497,1,['failure'],['failure']
Availability,Major bugfix! Parallelization error in DF gradients,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2193:30,error,error,30,https://psicode.org,https://github.com/psi4/psi4/pull/2193,1,['error'],['error']
Availability,"Many tests fail: 143 failed, 576 warnings, 282 errors",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3099:47,error,errors,47,https://psicode.org,https://github.com/psi4/psi4/issues/3099,1,['error'],['errors']
Availability,Matrix::gemm was not reporting error for matrices with different number of irreps,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/276:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/pull/276,1,['error'],['error']
Availability,"Minimal example; ```; molecule {; 0 1; Ne; }. my_pbe = {; ""name"": ""my pbe functional"",; ""x_functionals"" : {; ""GGA_X_PBE"" : {}; },; ""c_functionals"" : {; ""GGA_C_PBE"" : {}; }; }. set basis pcseg-1; set basis_guess pcseg-0 # Works	without	this line; energy('scf', dft_functional=my_pbe); ```. The error I get in psi4 1.3.2 is; ```; Traceback (most recent call last):; File ""/usr/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 35, in <module>; File ""/usr/lib64/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/lib64/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/usr/lib64/psi4/driver/procrouting/proc.py"", line 1272, in scf_helper; p4util.banner(name.upper()). AttributeError: 'dict' object has no attribute 'upper'. Printing out the relevant lines from the Psithon --> Python processed input file:; ""GGA_C_PBE"" : {}; }; }; core.set_global_option(""BASIS"", ""pcseg-1""); core.set_global_option(""BASIS_GUESS"", ""pcseg-0""); --> energy('scf', dft_functional=my_pbe); ```; and the same issue is also present in `master`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1876:293,error,error,293,https://psicode.org,https://github.com/psi4/psi4/issues/1876,1,['error'],['error']
Availability,Molecule::symmetrize() error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2579:23,error,error,23,https://psicode.org,https://github.com/psi4/psi4/issues/2579,1,['error'],['error']
Availability,More Robust SOSCF Tech.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2212:5,Robust,Robust,5,https://psicode.org,https://github.com/psi4/psi4/issues/2212,1,['Robust'],['Robust']
Availability,"My collaborators are trying to compute the SCF energy with an external one-electron potential added to the Fock matrix (this potential does NOT result from a set of point charges). We were trying to use the `wfn.push_back_external_potential()` functionality to accomplish this, but the external potential is ignored. I tracked down the issue to [this line in `scf_iterator.py`](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L312) which erases the provided external potential, resulting in only potentials from `PCM/DDX/PE`, added immediately afterwards, being allowed. The problem is completely fixed (at least in our case) by commenting out the aforementioned line of code. I will submit a one-liner PR to do this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3227:327,down,down,327,https://psicode.org,https://github.com/psi4/psi4/issues/3227,1,['down'],['down']
Availability,"My pybind11 package was accepted in Fedora, so I started updating the psi4 package (which was at rc1!). It built fine on the released versions, but failed in the development version that has the newest GCC. The error(s) I get is. ```; cd /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/objdir-x86_64-redhat-linux-gnu/psi4-core-prefix/src/psi4-core-build/src/psi4/libpsio && /usr/bin/g++ -I/builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/include -I/builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src -isystem /usr/include/python3.6m -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -m64 -mtune=generic -fopenmp -DUSING_CheMPS2 -O2 -DNDEBUG -fPIC -std=c++11 -std=gnu++11 -o CMakeFiles/psio.dir/aio_handler.cc.o -c /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc: In member function 'long unsigned int psi::AIOHandler::read(unsigned int, const char*, char*, psi::ULI, psi::psio_address, psi::psio_address*)':; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc:91:48: error: 'bind' is not a member of 'std'; thread_ = std::make_shared<std::thread>(std::bind(&AIOHandler::call_aio,this));; ^~~~; /builddir/build/BUILD/psi4-926879e243ce44dcc0ecfe7cda680a01383982fd/psi4/src/psi4/libpsio/aio_handler.cc:91:48: note: suggested alternative: 'find'; thread_ = std::make_shared<std::thread>(std::bind(&AIOHandler::call_aio,this));; ^~~~; find; ```. Note that I've defined; ```; -DCUSTOM_C_FLAGS=-O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -specs=/usr/lib/rpm/redha",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/631:211,error,error,211,https://psicode.org,https://github.com/psi4/psi4/issues/631,1,['error'],['error']
Availability,New Error Printing Bungles Newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1867:4,Error,Error,4,https://psicode.org,https://github.com/psi4/psi4/issues/1867,1,['Error'],['Error']
Availability,New SCF types unrecognized by several downstream modules,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021:38,down,downstream,38,https://psicode.org,https://github.com/psi4/psi4/issues/1021,1,['down'],['downstream']
Availability,"No problem with `conda install psi4`, but the standalone psi4 installers (psi4conda button and curl from vergil in attached screenshot) are temporarily down due to facilities issues. <img width=""751"" alt=""Screenshot 2024-07-26 at 12 17 42 PM"" src=""https://github.com/user-attachments/assets/5a0c462c-895e-4d8e-a7f5-e233ec737aac"">",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3199:152,down,down,152,https://psicode.org,https://github.com/psi4/psi4/issues/3199,1,['down'],['down']
Availability,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/79:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/issues/79,1,['error'],['error']
Availability,"Not a major issue per-say since I currently run Psi4 on a Linux system, but I wanted to try it on WSL for fun. However, I kept getting curl 404s when I went to download 1.3.2. It turns out there are currently no binaries for 1.3.2 on the [download page](https://admiring-tesla-08529a.netlify.com/installs/v132/) for WSL. . Not sure if this version is broken on WSL or it's just been overlooked, figure you'd like to know!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1658:160,down,download,160,https://psicode.org,https://github.com/psi4/psi4/issues/1658,2,['down'],['download']
Availability,"Now that Psi4 uses LIBINT2, one can enable support for the Yukawa kernel for range-separated functionals from Libxc, such as CAMY-B3LYP. The code needs to be generalized so that in addition to the error function kernel, `erf_coulomb`, one can also use the Yukawa kernel, `yukawa`, in the LIBINT2 call.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2374:197,error,error,197,https://psicode.org,https://github.com/psi4/psi4/issues/2374,1,['error'],['error']
Availability,OEProp error on Mac,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/260,1,['error'],['error']
Availability,OPTKING PSIO error: optimization data write failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/789:13,error,error,13,https://psicode.org,https://github.com/psi4/psi4/issues/789,2,"['error', 'failure']","['error', 'failure']"
Availability,OPTKING: Optimization failure not throwing PsiException,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/800:22,failure,failure,22,https://psicode.org,https://github.com/psi4/psi4/issues/800,1,['failure'],['failure']
Availability,"OS: Windows 10. I downloaded the psi4 installation executable and ran the commands from the manual as described. >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. psi4 is unrecognizable after installation, but I added the directory to my path. . rerunning psi4 -- test gives following error:. `C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236:18,down,downloaded,18,https://psicode.org,https://github.com/psi4/psi4/issues/2236,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Obligatory @susilehtola and @hokru pings. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Improved UKS gradient parallelization. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Commented LSDA gradients; - [x] Synchronizing of RKS and UKS gradient code is **deferred** to a separate PR. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2839:35,ping,pings,35,https://psicode.org,https://github.com/psi4/psi4/pull/2839,1,['ping'],['pings']
Availability,"Oh, the things you find on [the forums](http://forum.psicode.org/t/sapt2-calculation-stops-with-a-segmentation-fault-error/1138)!. User reported a segfault in a SAPT2 computation. I attempted to run the input file they provided, in serial. ```; memory 100 gb. molecule AP_BMIMBF4; {; 0 1; C 2.71424 3.35160 2.17047; C 2.61539 3.07721 0.69258; C 3.27155 1.81549 0.13150; C 3.01216 0.53303 0.90532; C 3.45716 -0.78046 0.26355; C 3.05053 -0.99330 -1.18650; C 3.20741 -2.40360 -1.74586; C 2.55026 -3.52443 -0.96032; F 3.17228 4.13514 -0.00592; F 1.27554 3.06932 0.32664; F 3.66787 0.59838 2.12267; F 1.67182 0.43073 1.22024; F 3.82500 -0.17529 -1.99644; F 1.75160 -0.57213 -1.38634; F 3.25533 -3.78096 0.19399; F 1.27730 -3.18683 -0.58308; H 2.25306 4.32050 2.37079; H 3.76241 3.37061 2.47326; H 2.19469 2.57073 2.72526; H 4.35180 1.97066 0.10411; H 2.92157 1.70418 -0.89385; H 4.54579 -0.84429 0.31346; H 3.04476 -1.57689 0.88214; H 4.27328 -2.63006 -1.82364; H 2.78870 -2.38708 -2.75512; H 2.50060 -4.45608 -1.52780; --; 0 1; C -3.87349 2.91061 -1.65876; N -2.75856 1.99410 -1.41455; C -1.50263 2.33407 -0.94691; C -0.83120 1.17172 -0.73344; C -2.84151 0.66484 -1.47790; N -1.68346 0.14262 -1.07953; C -1.46679 -1.28577 -0.78728; C -1.38542 -1.51827 0.72247; C -1.59684 -2.99357 1.06458; C -1.46598 -3.24276 2.56923; H -3.87594 3.66326 -0.86989; H -3.76218 3.38868 -2.63477; H -4.79884 2.33892 -1.60023; H -1.20045 3.35521 -0.79404; H 0.15181 0.98994 -0.34830; H -3.72834 0.10789 -1.72147; H -0.55449 -1.60196 -1.29485; H -2.32462 -1.81798 -1.19641; H -0.41387 -1.17340 1.09480; H -2.16763 -0.92438 1.19970; H -0.87575 -3.61428 0.52075; H -2.59984 -3.27619 0.72873; H -0.46552 -2.96983 2.92459; H -2.19613 -2.64103 3.11964; H -1.63860 -4.29508 2.81528; B -4.99249 -0.20013 0.53015; F -4.36607 -1.36290 -0.02014; F -5.60912 0.50296 -0.55477; F -3.96502 0.63394 1.05703; F -5.91416 -0.53978 1.49939. units angstrom; no_reorient; symmetry c1; }. set{ basis 6-311+G(d,p); scf_type df. DF_BASIS_SAPT 6-311+G(",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1361:111,fault,fault-error,111,https://psicode.org,https://github.com/psi4/psi4/issues/1361,1,['fault'],['fault-error']
Availability,"On issue #1861 , reading serialized wavefunctions for CASCI/detci computations was solved. However, I wonder if it was also solved for CASSCF calculations, as I get the following error when performing a CASSCF calculation with a given input wavefunction. Here is an example:. ```; import psi4; molecule_string = """"""; O 1.56850 0.10589 0.00001; N -1.39559 -0.02156 0.00004; H -1.62981 0.96110 -0.10622; H -1.86277 -0.51254 -0.75597; H -1.83355 -0.33077 0.86231; H 0.60674 -0.03396 -0.00063; H 1.94052 -0.78000 0.00022; """"""; add_input = ""\nsymmetry c1\nno_reorient\nno_com""; mol = psi4.geometry(molecule_string + add_input); N_active = 11 # Define the total number of active MOs.; N_frozen = 4 # Define the number of frozen occupied MO; N_virtual = 30 # Define the total number of virtual MOs that will be discarded; psi4.set_options({ 'ACTIVE' : [ N_active ],\; 'FROZEN_DOCC' : [ N_frozen ],\; 'FROZEN_UOCC' : [ N_virtual],\; 'DIAG_METHOD' : 'DAVIDSON',\; 'CI_MAXITER' : 200\; }). # assuming you have stored you scf_wfn into water-ammonia.npy:; original_wfn = psi4.core.Wavefunction.from_file(""water-ammonia""). print(""HF energy:"",original_wfn.energy()); CASCI_energy = psi4.energy('fci', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASCI energy:"",CASCI_energy); CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASSCF :"",CASSCF_energy); ```. This outputs:; ```; HF energy : -130.74589276437956; CASCI energy : -130.7730891288199; ```. and then the error:; ```; ==> Setting up CI strings <==. There are 462 alpha and 462 beta strings; The CI space requires 213444 (2.13E+05) determinants and 1 blocks. ==> Setting up MCSCF integrals <==. Could not find requested basisset (DF_BASIS_SCF).Traceback (most recent call last):; File ""PSI4_CAS_sim.py"", line 89, in <module>; CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1871:179,error,error,179,https://psicode.org,https://github.com/psi4/psi4/issues/1871,1,['error'],['error']
Availability,"On my HPC cluster compute nodes do not have access to a user's home directory. This makes dftd3 crash with the following error:. RuntimeError: [Errno 13] Permission denied: '/home/s/spoel/dftd3_d6f02c65'. I checked the source code dftd3.f and found; ```; call get_environment_variable(""HOME"", homedir); write (*,*) trim(homedir); write(dtmp,'(a,''/.dftd3par.'',a)')trim(homedir),trim(ftmp) ; inquire(file=dtmp,exist=ex); ```. Do I need to hack the fortran to make this run? I realize this is not strictly a Psi4 problem...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1960:121,error,error,121,https://psicode.org,https://github.com/psi4/psi4/issues/1960,1,['error'],['error']
Availability,"On some architectures, the testsuite has errors like:. ```; 52/140 Test #191: fcidump ..........................***Failed 0.47 sec; Traceback (most recent call last):; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 32, in <module>; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/p4util/fcidump.py"", line 339, in compare_fcidumps; ref_energies = _energies_from_fcidump(ref_intdump); File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/p4util/fcidump.py"", line 363, in _energies_from_fcidump; intdump['uhf']); File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/p4util/fcidump.py"", line 379, in _scf_energy; exchange = np.einsum('ijij->', ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]); File ""/usr/lib/python3/dist-packages/numpy/core/einsumfunc.py"", line 1346, in einsum; return c_einsum(*operands, **kwargs). ValueError: dimensions in operand 0 for collapsing index 'þ' don't match (-168832168 != 5); Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```. These are the lines, it is failing during the `exchange`:. ```; coulomb = np.einsum('iijj->', ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]); exchange = np.einsum('ijij->', ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]); ```. Now when I duplicate the `coulomb` line in place of the `exchange` line, it runs fine. Also, if I dump out something between the two, e.g. `print(occ_sl)`, it runs fine, so there is probably some subtle issue in NumPy's `einsum`. I was not able to produce a minimal test-case, mostly because my Python/NumPy-fu is not strong enough to figure out what `ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]` really is. Any idea what it could be and whether there's a robust was (some barrier?) to get around it?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465:41,error,errors,41,https://psicode.org,https://github.com/psi4/psi4/issues/1465,2,"['error', 'robust']","['errors', 'robust']"
Availability,"On the [install page](https://psicode.org/installs/v191/), for Linux > Conda > 3.11 > Stable, it returns. ```; conda install psi4 python=3.11 -c conda-forge ; ```. Should it not be using the conda-forge/label/libint_dev?. I should note that libint main just updated 12 hrs ago and seems to cause some seg faults in psi4 1.91.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3144:305,fault,faults,305,https://psicode.org,https://github.com/psi4/psi4/issues/3144,1,['fault'],['faults']
Availability,"One of our students has been working through the Psi4Education site and one of the labs requires the user to run MP4 on boron. If I'm reading the [managed method matrix](http://psicode.org/psi4manual/master/proc_py.html#table-managedmethods) correctly then the user should specify an ROHF reference and Psi4 will use DETCI. However we receive the following error:. Input file: [h2o_mp4.txt](https://github.com/psi4/psi4/files/148253/h2o_mp4.txt). ```; An error has occurred Py-side; Traceback:; <class 'p4xcpt.ManagedMethodError'>: select_mp4: Method 'mp4' with MP_TYPE 'CONV' and REFERENCE 'ROHF' not available: File ""<string>"", line 27, in <module>. File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/driver.py"", line 586, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/Users/jturney/Code/Chemistry/psi4/source/share/python/proc.py"", line 831, in select_mp4; raise ManagedMethodError(['select_mp4', name, 'MP_TYPE', mtd_type, reference, module]); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/282:357,error,error,357,https://psicode.org,https://github.com/psi4/psi4/issues/282,3,"['avail', 'error']","['available', 'error']"
Availability,"One of the [limitations](https://psicode.org/psi4manual/master/tdscf.html#known-limitations) of Psi's TDSCF implementation is that it raises an error upon requesting TDDFT triplets from a restricted reference. To understand the problem, it's easiest to work with a toy system. I'm choosing the following:; ```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. mtd = ""hf/sto-6g"". set tdscf_tda true; set reference uks ; set tdscf_states [0, 0, 2, 0]. energy(""td-"" + mtd). set reference rks ; set tdscf_states [0, 0, 1, 0]; energy(""td-"" + mtd). set tdscf_triplets only; energy(""td-"" + mtd); ```. Within the TDA approximation, we need to find the roots of a Hermitian matrix. This matrix has the structure J + V + X. J consists of _Coulomb integrals_, V consists of _the exchange correlation second derivative elements_, and X is everything else - it's not relevant for this problem. Because of the spin-properties of the Hamiltonian (and approximate DFT functionals), the matrix becomes block-diagonal upon transforming the basis states (i-a) α and (i-a) β into their normalized plus and minus combinations. The plus eigenvectors correspond to singlets, and the negative eigenvectors to triplets. Matrix elements take the form 1/2 * [(α|α) ± (α|β) ± (β|α) + (β|β)], where parentheses denote a spin-dependent matrix element. Upon exploiting spin-restriction, this reduces to [(α|α) ± (α|β)]. Now, J matrix elements are spinfree, i.e., the Coulomb integral (pq|pq) doesn't care whether the bra and the ket have the same spin-index or not, so long as p and q have the same spinindex. Therefore, the plus spin combination reduces to 2 * (pq|pq), and the minus spin combination reduces to 0. The V matrix elements are not spinfree. Whether you differentiate with respect to an alpha excitation twice or an alpha followed by a beta produces different integrals. The formula [(α|α) ± (α|β)] does not simplify. Unfortunately, Psi combines the V terms into the J terms. Psi currently computes the + case of the V ter",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2841:144,error,error,144,https://psicode.org,https://github.com/psi4/psi4/issues/2841,1,['error'],['error']
Availability,"PCM fails with symmetry group coordinates, need to add error message for this to help user",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1939:55,error,error,55,https://psicode.org,https://github.com/psi4/psi4/issues/1939,1,['error'],['error']
Availability,PCMSolver Error w/ B97-3c,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3202:10,Error,Error,10,https://psicode.org,https://github.com/psi4/psi4/issues/3202,1,['Error'],['Error']
Availability,"PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3160:1374,avail,available,1374,https://psicode.org,https://github.com/psi4/psi4/pull/3160,1,['avail'],['available']
Availability,PSIO Error During SAPT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1328:5,Error,Error,5,https://psicode.org,https://github.com/psi4/psi4/issues/1328,1,['Error'],['Error']
Availability,PSIO Error Using ODC after OMP2/OLCCD on UHF Reference,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1288:5,Error,Error,5,https://psicode.org,https://github.com/psi4/psi4/issues/1288,1,['Error'],['Error']
Availability,"PSIO error in ""make tests""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/56:5,error,error,5,https://psicode.org,https://github.com/psi4/psi4/issues/56,1,['error'],['error']
Availability,PSIO error in dmrg calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/464:5,error,error,5,https://psicode.org,https://github.com/psi4/psi4/issues/464,1,['error'],['error']
Availability,"PSIO errors are currently being written to `stderr`. (See [this line and the switch statement below](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54).) Although the fact that there is a PSIO error is written to the output file, I'm semi-frequently encountering forum users who aren't familiar with `stderr`. It either takes longer than it should for me to get this information, or they can't provide it. For ease of debugging, this error information should be logged somewhere like the output file, where we can guarantee new users will keep it and be able to find it, so they can pass it on to developers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2019:5,error,errors,5,https://psicode.org,https://github.com/psi4/psi4/issues/2019,4,['error'],"['error', 'errors']"
Availability,"Pair energies computed by `fnocc` have some issues:. 1. They're not computed consistently across methods. DF-CCSD has them, but non-DF methods do not, for some reason.; 2. `fnocc` computes spin-summed pair energies. The convention we agreed upon at the conference call was to separate same-spin and opposite-spin pair energies.; 3. `fnocc` stores the pair energies with the convention that \sum_{ij} e_ij should equal the correlation energy. As agreed upon at the conference call, we want e_ij to be the total energy of the (i, j) pair. If i != j, the current convention is off by a factor of 2.; 4. The `fnocc` pair energies do not include the delta MP2 correction, so \sum_{ij} e_ij does not equal the correlation energy if FNOs are used. I'll be the one to deal with at least the three items on this list, but obligatory @edeprince3 ping.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2560:836,ping,ping,836,https://psicode.org,https://github.com/psi4/psi4/issues/2560,1,['ping'],['ping']
Availability,"Post 1.1 maintenance, mainly testing and MINAO",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/726:9,mainten,maintenance,9,https://psicode.org,https://github.com/psi4/psi4/pull/726,1,['mainten'],['maintenance']
Availability,Print full PSIO error message to cerr as well,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2997:16,error,error,16,https://psicode.org,https://github.com/psi4/psi4/pull/2997,1,['error'],['error']
Availability,"Psi currently can't project orbitals across different symmetries. Attempting gives you the error, `Cannot compute projection of different symmetries.` We should be able to project to the proper subgroups. This is a common problem in finite difference computations where read is enabled. For an example file. ```; molecule h2o { ; O ; H 1 1.0 ; H 1 1.0 2 104.5 ; }. set {; basis sto-3g; e_convergence 10; d_convergence 10; points 3; geom_maxiter 7; full_hess_every 1 ; }. optimize('scf', dertype = 0); ```. This issue is blocking the expected behavior upon fix of #1296. Even when reading orbitals from the original C2v geometry, the orbitals can't be projected to Cs symmetry. #1296 will address problems of poor read orbitals and switching from one proper subgroup of the reference symmetry to another proper subgroup that is not a subgroup of the previous proper subgroup. (Example: A C1 displacement and then a Cs displacement.). Although this causes similar _symptoms_ to #1296, its fix is beyond the scope of modifications to the finite difference code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1297:91,error,error,91,https://psicode.org,https://github.com/psi4/psi4/issues/1297,1,['error'],['error']
Availability,Psi4 1.2 seg fault,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/1088,1,['fault'],['fault']
Availability,"Psi4 1.3.2 happily runs analytic derivatives when X2C is enabled, even though as confirmed by @fevangelista on Slack the gradient is not correct since it is missing the terms arising from X2C. The code should throw an error for analytic derivatives when X2C is employed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2197:218,error,error,218,https://psicode.org,https://github.com/psi4/psi4/issues/2197,1,['error'],['error']
Availability,Psi4 Run Time Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/552:14,Error,Error,14,https://psicode.org,https://github.com/psi4/psi4/issues/552,1,['Error'],['Error']
Availability,Psi4 Runtime Error inside Jupyter Notebook,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1794:13,Error,Error,13,https://psicode.org,https://github.com/psi4/psi4/issues/1794,1,['Error'],['Error']
Availability,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3200:373,fault,fault,373,https://psicode.org,https://github.com/psi4/psi4/issues/3200,2,"['error', 'fault']","['error', 'fault']"
Availability,"Psi4 seems to be unable to recognize the symmetry of molecules that should be Cs.; Minimal input:; ```; molecule {; pubchem:fluoroethane ; }; set basis cc-pVDZ; energy('scf'); ```; Output is attached. [Cs_test.log](https://github.com/psi4/psi4/files/8209874/Cs_test.log); I have tried overriding this by manually specifying a Cs symmetry, but that results in an error:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: User specified point group (Cs(X)) is not a subgroup of the highest !; ! detected point group (C1). If this is because the symmetry increased, try to !; ! start the calculation again from the last geometry, after checking any !; ! symmetry-dependent input, such as DOCC. !; ! Error occurred in file: /scratch/psilocaluser/conda- !; ! builds/psi4-multiout_1645476997931/work/psi4/src/psi4/libmints/molecule.cc !; ! on line: 2011 !; ! The most recent 5 function calls were: !; ! psi::Molecule::find_point_group(double) const !; ! psi::Molecule::update_geometry() !; ! from_dict(pybind11::dict) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2463:362,error,error,362,https://psicode.org,https://github.com/psi4/psi4/issues/2463,3,"['Error', 'error']","['Error', 'error']"
Availability,"Psi4-1.2.1 on Debian shows several test suite failures on non-Intel hardware in the SAPT code that go like this:. ```; 90/140 Test #315: sapt1 ............................***Failed 7.40 sec; Traceback (most recent call last):; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 53, in <module>; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/procrouting/proc.py"", line 3438, in run_sapt; e_sapt = core.sapt(dimer_wfn, monomerA_wfn, monomerB_wfn). RuntimeError: ; Fatal Error: Laplace Quadrature requested for (E_HUMO - E_LOMO)/(E_LUMO-E_HOMO) > 7.0 * 10^12, quadratures are not designed for this range.; Error occurred in file: /<<PKGBUILDDIR>>/psi4/src/psi4/lib3index/denominator.cc on line: 609; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```; See https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=s390x&ver=1%3A1.2.1-2&stamp=1546705364&raw=0 for the full log. Failing test cases from `quicktests` are `sapt1`, `sapt-dft1`, `tu5-sapt` and `pywrap-db1`, failing architectures are (so far) `s390x` and `powerpc`. Anything I can do to investigate?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462:46,failure,failures,46,https://psicode.org,https://github.com/psi4/psi4/issues/1462,3,"['Error', 'failure']","['Error', 'failures']"
Availability,PsiUtil error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/407:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/407,1,['error'],['error']
Availability,Python argument types error with embedded basis set data,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/79:22,error,error,22,https://psicode.org,https://github.com/psi4/psi4/issues/79,1,['error'],['error']
Availability,QCEngine wavefunction error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1987:22,error,error,22,https://psicode.org,https://github.com/psi4/psi4/issues/1987,1,['error'],['error']
Availability,QCFractal Causes Test Suite Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2873:28,Failure,Failure,28,https://psicode.org,https://github.com/psi4/psi4/issues/2873,1,['Failure'],['Failure']
Availability,"R will be smoother, and CompositeJK development can continue parallel to the developments discussed in https://github.com/psi4/psi4/pull/2682. Additionally, this PR serves as a first step the to decomposition of https://github.com/psi4/psi4/pull/2682 as discussed in that PR's comments, allowing for the full standardization of IncFock among integral-direct JK subclasses. For reviewers, since this PR is the bottleneck for two different routes of JK development (CompositeJK and IncFock standardization), it should be considered the highest-priority JK development PR to merge into Psi4 at the moment. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Switches DFJLinK to using the incremental Fock build implementation used in DFJCOSK. This change standardizes the incremental Fock implementation between DFJLinK and DFJCOSK and improves the memory usage of DFJLinK in the process.; - [X] Changes LinK machinery to support new incremental Fock formalism. ## Questions; - [ ] Since this PR specifically focuses on changes to DFJLinK, there are still a couple of small differences in IncFock between DFJLinK and DFJCOSK, mainly, refactorings and the aforementioned bells and whistles that DFJLinK has that DFJCOSK doesn't. Would it be better to make adjustments to DFJCOSK in this PR as well, to further standardize the two; or is it preferrable to punt that down to the next CompositeJK PR, when DFJLinK and DFJCOSK are combined into the pilot CompositeJK implementation? If we decide to make the changes to DFJCOSK this PR, it would essentially consist of refactoring the DFJCOSK IncFock to match that of DFJLinK, and adding the bells and whistles that DFJLinK currently has.; - [ ] Should the relevant test outputs be updated?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2792:3452,down,down,3452,https://psicode.org,https://github.com/psi4/psi4/pull/2792,1,['down'],['down']
Availability,"REENING` keywords available in Psi4. Of the currently-available JK tests, scf5 covers a wide variety of build methods, but only at a single screening type per method (density or csam, depending on the method). Meanwhile, `test_erisieve.py`, after the updates introduced in https://github.com/psi4/psi4/pull/2973, tests a wide variety of screening types, but with limited testing in conjunction with different JK builds (the only tests that don't use the Python interface of `TwoBodyAOInt` directly, use `SCF_TYPE=DIRECT` or `DF` as the JK method for screening comparisons). This leaves a lot of untested JK build+screening combos, which may be potentially broken and uncaught by the CI as a result. As a matter of fact, such cases actually do exist in the code currently (e.g., CompositeJK methods + no screening). This PR adds a new pytest module, `test_comprehensive_jk_screening.py`. It is effectively an expanded version of the scf5 test module, testing one of the scf5 systems (singlet oxygen) with the same basis set, but also including different screening methods and algorithmic subtypes available in Psi4. Screening is assumed to have an insignificant impact on energy within the tolerance used, so all screening types for a given method use the same reference energy. Some combinations of method and screening type throw an exception by design; this is accounted for in the test by testing that such combinations do indeed throw an exception as expected. Other combinations of method and algorithm are broken at the moment and error out; these are simply skipped for now. They are all logged in the same spot, and can and will be addressed in future PRs. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new pytest module to Psi4, `test_comprehensive_jk_screening.py` , to test different combinations of JK build algorithms and ERI screening methods. ## Questions; - [x] Would the test in `test_comprehensive_jk_screening.py` be better placed in `test_eris",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2978:1221,avail,available,1221,https://psicode.org,https://github.com/psi4/psi4/pull/2978,1,['avail'],['available']
Availability,RHF/ROHF stability analysis is already implemented but following instabilities (`STABILITY_ANALYSIS=FOLLOW`) is only available with UHF. Once we have the generalized Davidson solver (#886) it will be possible to:; - Add RHF/ROHF root following; - Move the UHF stability analysis code to use the solver and maintain a single interface; ; See #973 for some more information.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1005:117,avail,available,117,https://psicode.org,https://github.com/psi4/psi4/issues/1005,1,['avail'],['available']
Availability,"RT MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the requested orbital.; ; Thus, if the MSCF calculation is performed for CASINO, it is necessary simultaneously with the molden file create correlation.data. If PSI4 using configuration state function (**CSF**), then group of determinants for each **CSF** should be labeled for simultaneous optimization like the 2nd and 3rd determinants in the example above. The opt-flag for all determinants except the first one should be equal to 1. PSI4 [output](https://github.com/user-attachme",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3235:1923,down,down-electrons,1923,https://psicode.org,https://github.com/psi4/psi4/issues/3235,1,['down'],['down-electrons']
Availability,Raise no-stability-check error early,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1337:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/pull/1337,1,['error'],['error']
Availability,"Raise the error that we can't do stability analysis on DFT ""wavefunctions"" before we bother to compute the (potentially very expensive) integrals necessary for this. The same error message is getting raised C-side under the same condition. This commit just raises it sooner, because spending the better part of an an hour computing integrals for no reason is annoying. ## Checklist; - [x] No tests run in addition to quicktests, since this is so simple and mirroring a C-side operation. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1337:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/pull/1337,2,['error'],['error']
Availability,"Reaping and sowing seem to be broken for Hessians when using Psi4 compiled with Python 3. None of the following errors could be reproduced when using Psi4 compiled with Python 2. The following input file produces the following error:; ```memory 500 MB. molecule {; N ; H 1 R ; H 1 R 2 A ; H 1 R 2 A 3 D . R = 1.0043; A = 120 ; D = 180 ; }. set {; basis sto-3g; }. frequencies('ccsd(t)', dertype='gradient', mode='sow'); ```. ```Traceback (most recent call last):; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/bin/psi4"", line 260, in <module>; exec(content); File ""<string>"", line 33, in <module>; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 1681, in frequency; H, wfn = hessian(lowername, return_wfn=True, molecule=molecule, **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 1332, in hessian ; fmaster.write(p4util.format_options_for_input(moleculeclone, **kwargs)). TypeError: a bytes-like object is required, not 'str'; ```. The culprit is exactly what the traceback says: fmaster is opened in binary mode and format_options_for_input returns a string. Python 2 would let you write a string to a binary file, but Python 3 expects bytes. I can fix this locally by adding the required .encode('utf-8') calls to that line as well as several lines afterwards, starting around 1370. If that was all, I would just fix this myself, but sowing is useless without reaping, and the reaping bug is trickier. The displacement files include bytes encoded from UTF-8 and also bytes dumped from pickle (the gradient kwargs). In general, pickle bytes will not be intelligible in any text encoding scheme. Python 2's naive approach to bytes means this is not a problem. When you try to run one of those files with Python 3-compiled Psi4, however... ```Traceback (most recent cal",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/833:112,error,errors,112,https://psicode.org,https://github.com/psi4/psi4/issues/833,2,['error'],"['error', 'errors']"
Availability,Reboot - Density Screening Refactor Part 2: Implementation of shell_significant(),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3098:0,Reboot,Reboot,0,https://psicode.org,https://github.com/psi4/psi4/pull/3098,1,['Reboot'],['Reboot']
Availability,"Rebuilding Psi4 1.3.2 in Fedora rawhide fails with; ```; -- Found PythonInterp: /usr/bin/python3 (found suitable version ""3.12"", minimum required is ""3.5"") ; CMake Error at cmake/FindPythonLibsNew.cmake:94 (message):; Python config failure:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; ModuleNotFoundError: No module named 'distutils'; Call Stack (most recent call first):; CMakeLists.txt:168 (find_package); -- Configuring incomplete, errors occurred!; error: Bad exit status from /var/tmp/rpm-tmp.sQzcRh (%build); ```; The issue here is that distutils was deprecated in Python 3.10 and marked for deletion in 3.12:; https://docs.python.org/3/whatsnew/3.10.html#distutils-deprecated. The file in master has been slightly updated, but still features the use of distutils, so this issue is likely present on the master branch as well.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020:164,Error,Error,164,https://psicode.org,https://github.com/psi4/psi4/issues/3020,4,"['Error', 'error', 'failure']","['Error', 'error', 'errors', 'failure']"
Availability,Reduced atom overlap tolerence to 0.1 to fix #195,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/283:21,toler,tolerence,21,https://psicode.org,https://github.com/psi4/psi4/pull/283,1,['toler'],['tolerence']
Availability,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/4:146,error,error,146,https://psicode.org,https://github.com/psi4/psi4/issues/4,5,['error'],['error']
Availability,"Related issue: [2577](https://github.com/psi4/psi4/issues/2577). Using a similar script as the previous reporter (using Psi4 1.9.1 and this build; `conda install -n $VENV_PSI4 psi4 numpy scipy dftd3-python dftd4-python gcp-correction python=$PYTHON_VERSION -c conda-forge`); ```; import psi4; psi4.set_options({'reference': 'uhf', 'stability_analysis': 'check'}); mol = psi4.geometry(""""""; 0 1; O; """""");; psi4.energy('wB97X-D3BJ/def2-TZVPD', molecule=mol); ```. I get the NYI message:; `psi4.driver.p4util.exceptions.ValidationError: Stability analysis not yet supported for XC functionals.`. Is the implementation of stability check for DFT on the roadmap for the near future? This would be very helpful especially when running UKS as we have observed that open shell systems often have instabilities in the SCF. . I also tried with `PBE/6-31G` and still get this exception. However, this [merged PR](https://github.com/psi4/psi4/pull/2849) implemented stability check for GGA functionals - is this a bug? The NYI message looks like it's triggered for every DFT functional ([see this line](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L578)), whereas [here](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/subclass_methods.py#L129) the program only raises the error if the functional is meta or needs vv10.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3236:1331,error,error,1331,https://psicode.org,https://github.com/psi4/psi4/issues/3236,1,['error'],['error']
Availability,"Release 0.3 fails to build with gcc 5.1.1, error is. /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc: In member function 'virtual std::vectorpsi::ShellInfo psi::Gaussian94BasisSetParser::parse(const string&, const std::vectorstd::basic_string<char >&)':; /builddir/build/BUILD/psi4public-1881450f30d3bd2ac91dbc4fc6a4eaa5c9f03ae5/src/lib/libmints/basisset_parser.cc:176:104: error: narrowing conversion of '-1' from 'int' to 'char' inside { } [-Wnarrowing]; char shell_to_am[] = {-1,-1,-1, 2,-1, 3, 4, 5, 6,-1, 7, 8, 9,10,11, 1,12,13, 0,14,15,16,17,18,19,20};; ^",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/177:43,error,error,43,https://psicode.org,https://github.com/psi4/psi4/issues/177,2,['error'],['error']
Availability,"Release 1.0, errors when running setup script",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:13,error,errors,13,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['error'],['errors']
Availability,Remove LGTM errors from libdpd. - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1625:12,error,errors,12,https://psicode.org,https://github.com/psi4/psi4/pull/1625,1,['error'],['errors']
Availability,Remove Redundant Dipole/Quadrupole Code,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2485:7,Redundant,Redundant,7,https://psicode.org,https://github.com/psi4/psi4/pull/2485,1,['Redundant'],['Redundant']
Availability,Remove all LGTM errors in ccdensity. - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1632:16,error,errors,16,https://psicode.org,https://github.com/psi4/psi4/pull/1632,1,['error'],['errors']
Availability,Reports indicate that the in-core `MemDF+wcombine` algorithm is not working correctly.; This PR disables the options. MemDF does not longer turn the option on automatically and users setting the option directly will get an exception error. A note is added to the DFT manual. Issues: #2351 #2279 ; Related: #2283 . ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2362:233,error,error,233,https://psicode.org,https://github.com/psi4/psi4/pull/2362,1,['error'],['error']
Availability,"Reposted from forum with modification. The following attempt at open-shell SAPT fails with segfault `forrtl: severe (174): SIGSEGV, segmentation fault occurred`. Original reporter concluded it was a problem with Calcium, as modifying it to Chlorine (along with the charges) resulted in a successful computation. The example molecule is reduced from the original report, for ease of reproduction. 40 GB is (hopefully) enough to indicate this is not a problem of needing more memory. ```memory 40 gb; molecule {; 0 1; H -0.803001 1.098737 0.000360; H -0.919454 -1.089722 0.000521; O -0.035537 -0.067631 0.000218; --; 2 1; Ca 2.281447 -0.004247 -0.000154; units angstrom; no_reorient; symmetry c1; }. set globals {; scf_type df; FREEZE_CORE true; }. basis {; assign aug-cc-pVTZ; assign Ca def2-TZVPP; }. df_basis_scf {; assign aug-cc-pVTZ-jkfit; assign Ca def2-TZVPP-jkfit; }. df_basis_sapt {; assign aug-cc-pVTZ-RI; assign Ca def2-TZVPP-ri; }. energy('sapt0')```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1271:145,fault,fault,145,https://psicode.org,https://github.com/psi4/psi4/issues/1271,1,['fault'],['fault']
Availability,"Reproduce with the below env.yml file:. ```yaml; channels:; - conda-forge; - psi4. dependencies:; - python =3.9; - datamol ; - numpy; - scikit-learn; - pytorch >=1.10.2; - tqdm; - jupyterlab; - openmm; - psi4 >=1.6; ```. then `mamba env create -n tmp_psi4 -f env.yml` and the error is. ```; conda-forge/linux-64 Using cache; conda-forge/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change. Looking for: ['python=3.10', 'datamol', 'numpy', 'scikit-learn', ""pytorch[version='>=1.10.2']"", 'tqdm', 'jupyterlab', 'openmm', ""psi4[version='>=1.6']""]. Encountered problems while solving:; - nothing provides intel-openmp needed by psi4-1.6+77475b5-py39hceaf722_0; ```. I tried multiple combination of python and psi4 versions without success. Note that the above has been only tested on a linux machine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621:276,error,error,276,https://psicode.org,https://github.com/psi4/psi4/issues/2621,1,['error'],['error']
Availability,Resolved potential syntax error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/495:26,error,error,26,https://psicode.org,https://github.com/psi4/psi4/pull/495,1,['error'],['error']
Availability,"Revert ""smother CI linux ecosys assembly error""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2646:41,error,error,41,https://psicode.org,https://github.com/psi4/psi4/pull/2646,1,['error'],['error']
Availability,"Running CMake on my laptop with Fedora 32 results in; ```; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Failed; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Failed; -- Performing Test CMAKE_CXX_FLAGS [/arch:AVX2] - Failed; CMake Warning at cmake/psi4OptionsTools.cmake:108 (message):; Option unfulfilled as none of -xHost;-march=native;/arch:AVX2 valid; Call Stack (most recent call first):; cmake/psi4OptionsTools.cmake:162 (add_C_or_CXX_flags); cmake/psi4OptionsTools.cmake:187 (add_CXX_flags); cmake/psi4OptionsTools.cmake:202 (add_flags); CMakeLists.txt:134 (option_with_flags); ```; CMakeError.log is; ```; Performing C SOURCE FILE Test test_option failed with the following output:; Change Dir: /home/work/psi4/objdir/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/gmake cmTC_686f3/fast && /usr/bin/gmake -f CMakeFiles/cmTC_686f3.dir/build.make CMakeFiles/cmTC_686f3.dir/build; gmake[1]: Entering directory '/home/work/psi4/objdir/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_686f3.dir/src.c.o; /usr/lib64/ccache/cc -Dtest_option -xHost -xHost -o CMakeFiles/cmTC_686f3.dir/src.c.o -c /home/work/psi4/objdir/CMakeFiles/CMakeTmp/src.c; cc: error: language Host not recognized; cc: error: language Host not recognized; gmake[1]: *** [CMakeFiles/cmTC_686f3.dir/build.make:86: CMakeFiles/cmTC_686f3.dir/src.c.o] Error 1; gmake[1]: Leaving directory '/home/work/psi4/objdir/CMakeFiles/CMakeTmp'; gmake: *** [Makefile:141: cmTC_686f3/fast] Error 2. Source file was:; int main(void) { return 0; }; ```; making it seem that the CMake files aren't even testing the flags. If I change the order in CMakeLists.txt so that `-march=native` comes first, the output is correct:; ```; -- Setting option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-march=native] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Success, Appending; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2023:1168,error,error,1168,https://psicode.org,https://github.com/psi4/psi4/issues/2023,4,"['Error', 'error']","['Error', 'error']"
Availability,Running a single point calc on a HCl dimer; [hcl2.zip](https://github.com/psi4/psi4/files/11093879/hcl2.zip); at the CCSD(T)/aug-cc-pvtz level of theory crashes with; ```; Total cached: 139345.9 kB; MRU = 31; LRU = 32; #LRU deletions = 0; #Low-priority deletions = 0; Core max size: 48000000.0 kB; Core used: 47999971.9 kB; Core available: 28.1 kB; Core cached: 139345.9 kB; Locked cached: 139345.9 kB; Most recent entry = 31; Least recent entry = 32; dpd_block_matrix: n = 18 m = 324; Error in: dpd_block_matrix: No memory left.; ```; The program gets allocated 48 Gb of memory and 16 cores. Cache level was set to 1. Any other suggestions?; Script is attached as a zip file.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2913:329,avail,available,329,https://psicode.org,https://github.com/psi4/psi4/issues/2913,2,"['Error', 'avail']","['Error', 'available']"
Availability,"Running e.g. `pcmsolver` calculations with symmetry will lead to a crash:; ```; File ""/Users/kruse/qc/psi4/objdir/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 300, in scf_iterate; upcm, Vpcm = self.get_PCM().compute_PCM_terms(Dt, calc_type). RuntimeError:; Fatal Error: Matrix::gemm error: Number of irreps do not equal.; Error occurred in file: /Users/kruse/qc/psi4/psi4/src/psi4/libmints/matrix.cc on line: 1349; The most recent 3 function calls were:; ```. The PCM message suggests c1 symmetry is enforced:; https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1520-L1522; but the `use_c1` option is for making post-SCF c1 wavefunction and not for the SCF itself.; Similar issue with the `cppe` addon for polarizable embedding. Either a graceful exist or actually making a c1 wfn object is desirable.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1978:284,Error,Error,284,https://psicode.org,https://github.com/psi4/psi4/issues/1978,3,"['Error', 'error']","['Error', 'error']"
Availability,"Running larger calculations with scf_type pk gives me lots and lots of error messages; ```; $ psi4; thread already exists.; thread already exists.; thread already exists.; ```; and so on. These seem to arise from src/psi4/libpsio/aio_handler.cc. I'm wondering if these really are errors, if they should be printed, and whether stdout instead of the log file is the right place to do it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/596:71,error,error,71,https://psicode.org,https://github.com/psi4/psi4/issues/596,2,['error'],"['error', 'errors']"
Availability,"Running the following input file; ```; molecule {; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }. set {; scf_type mem_df; basis cc-pvdz; num_frozen_uocc 4; mp2_type df; }. analytic = gradient(""mp2""); findif = gradient(""mp2"", dertype=0). compare_matrices(analytic, findif, 4, ""DF-MP2 Gradient""); ```. gives me. ```; Expected:; [[-0. 0.000000000003 -0.034538336725]; [ 0. -0.035340551119 0.017269168364]; [ 0. 0.035340551116 0.017269168361]]; Observed:; [[ 0. 0.000000000422 -0.029704789758]; [ 0. -0.030742173112 0.014852395042]; [ 0. 0.030742172689 0.014852394715]]; Difference (passed elements are zeroed):; [[ 0. 0. 0.004833546968]; [ 0. 0.004598378007 -0.002416773321]; [ 0. -0.004598378426 -0.002416773646]]; ```. So we have a third decimal place error(!) in DF-MP2 frozen virtual gradients. Frozen core gradients test fine. @loriab, take note of this during your standardization and testing pass. Core developers, assign this to me. If it's a simple fix, this will be part of DFGrad II. Otherwise, this will be DFGrad III. I'm also requesting, given the severity of this bug, that it be made a Psi 1.4 target.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1916:749,error,error,749,https://psicode.org,https://github.com/psi4/psi4/issues/1916,1,['error'],['error']
Availability,"Running the following input. ```; molecule mol {; 0 1; H 0.0 0.0 0.000000; H 0.0 0.0 0.700000; H 0.0 0.0 1.400000; H 0.0 0.0 2.100000; H 0.0 0.0 2.800000; H 0.0 0.0 3.500000; }. memory 3500 mb. set basis aug-cc-pVDZ; set reference rohf; set guess core; set scf_type df. scf_e, scf_wfn = energy('scf', return_wfn = True). set restricted_docc [ 0, 0, 0, 0, 0, 0, 0, 0 ]; set restricted_uocc [ 0, 0, 6, 6, 0, 0, 6, 6 ]; set qc_module detci; set nat_orbs true. ci_e, ci_wfn = energy('cisd', ref_wfn = scf_wfn, return_wfn = True); ```. crashes with; ```; RuntimeError: ; Fatal Error: Matrix::doublet: Dimension mismatch; Error occurred in file: /builddir/build/BUILD/psi4-add49b95b6be2441c522f71bddb47f1371e16958/psi4/src/psi4/libmints/matrix.cc on line: 1517; ```. both in the Fedora package of Psi4 1.1 as well as the conda package. The script runs without errors in the up-to-date trunk. Could this issue be fixed in the conda package? Alternatively, is there a conda channel for the development version?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/764:572,Error,Error,572,https://psicode.org,https://github.com/psi4/psi4/issues/764,3,"['Error', 'error']","['Error', 'errors']"
Availability,"Running the input; ```; molecule {; -3 1; Mn -5.33522 1.82890 0.00000; C -6.70409 1.81768 0.00000; N -7.86182 1.80819 0.00000; C -3.02385 1.55961 0.00000; N -1.87386 1.42563 0.00000; C -5.32727 1.82534 2.06597; N -5.32130 1.82281 3.22328; C -4.37028 0.58345 0.00000; N -3.66119 -0.33177 0.00000; C -6.06454 2.87238 0.00000; N -6.72779 3.82134 0.00000; C -5.32727 1.82534 -2.06597; N -5.32130 1.82281 -3.22327; }. set basis pcseg-0; set opt_coordinates cartesian; set geom_maxiter 5000; optimize('hf'); ```; I can sometimes trigger a segmentation fault:; ```; $ psi4 -n 4 mncn6.in ; Segmentation fault (core dumped); ```; Backtrace; ```; (gdb) bt; #0 _mm_storeu_pd (__A=..., __P=<optimized out>) at /usr/lib/gcc/x86_64-redhat-linux/10/include/emmintrin.h:173; #1 dgemm_oncopy_HASWELL (m=132, n=24, a=0x7faa67735990, lda=132, b=<optimized out>) at ../kernel/x86_64/dgemm_ncopy_8_skylakex.c:91; #2 0x00007faa9b34501f in inner_thread (args=0x7ffdc8105610, range_m=<optimized out>, range_n=0x7ffdc8105aa8, sa=0x7faa98bba000, sb=<optimized out>, mypos=0) at level3_thread.c:382; #3 0x00007faa9b47e5b1 in exec_threads (buf_index=<optimized out>, queue=0x7ffdc8105eb0) at blas_server_omp.c:300; #4 exec_blas._omp_fn.0 () at blas_server_omp.c:345; #5 0x00007faa9b0daf46 in GOMP_parallel (fn=fn@entry=0x7faa9b47e4d0 <exec_blas._omp_fn.0>, data=data@entry=0x7ffdc81055c0, num_threads=4, num_threads@entry=0, flags=flags@entry=0); at ../../../libgomp/parallel.c:171; #6 0x00007faa9b47eab5 in exec_blas (num=num@entry=4, queue=queue@entry=0x7ffdc8105eb0) at blas_server_omp.c:334; #7 0x00007faa9b345a8d in gemm_driver (args=<optimized out>, range_m=<optimized out>, range_n=<optimized out>, sa=sa@entry=0x7faa98bba000, sb=<optimized out>, nthreads_m=<optimized out>, ; nthreads_n=1) at level3_thread.c:714; #8 0x00007faa9b345be4 in dgemm_thread_nn (args=<optimized out>, range_m=<optimized out>, range_n=<optimized out>, sa=0x7faa98bba000, sb=<optimized out>, mypos=<optimized out>); at level3_thread.c:771; #9 0x0",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:546,fault,fault,546,https://psicode.org,https://github.com/psi4/psi4/issues/2010,2,['fault'],['fault']
Availability,"Running this input results in a PSIO error in version 1.3.2.; ```; molecule h2o {; 0 1; O 0.000000 0.000000 0.000000; H 0.000000 0.000000 0.956914; H 0.926363 0.000000 -0.239868; }. molecule ch3 {; 0 2; C 0.000000 0.000000 0.000000; H 0.000000 1.078000 0.000000; H 0.933000 -0.539000 0.000000; H -0.933000 -0.539000 0.000000; }. set basis 6-31G*. activate(h2o); set reference rhf; energy('b3lyp'). activate(ch3); set reference uhf; energy('b3lyp'); ```. However, if one switches the runs the other way around; ```; molecule h2o {; 0 1; O 0.000000 0.000000 0.000000; H 0.000000 0.000000 0.956914; H 0.926363 0.000000 -0.239868; }. molecule ch3 {; 0 2; C 0.000000 0.000000 0.000000; H 0.000000 1.078000 0.000000; H 0.933000 -0.539000 0.000000; H -0.933000 -0.539000 0.000000; }. set basis 6-31G*. activate(ch3); set reference uhf; energy('b3lyp'). activate(h2o); set reference rhf; energy('b3lyp'); ```; the calculation succeeds.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2174:37,error,error,37,https://psicode.org,https://github.com/psi4/psi4/issues/2174,1,['error'],['error']
Availability,Runtime error while running DMRG calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2102:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/2102,1,['error'],['error']
Availability,Runtime failures with numpy-1.24,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2865:8,failure,failures,8,https://psicode.org,https://github.com/psi4/psi4/issues/2865,1,['failure'],['failures']
Availability,SAPT test suite failures on big-endian architectures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462:16,failure,failures,16,https://psicode.org,https://github.com/psi4/psi4/issues/1462,1,['failure'],['failures']
Availability,SAPT(DFT) : Units error in output,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/910:18,error,error,18,https://psicode.org,https://github.com/psi4/psi4/issues/910,1,['error'],['error']
Availability,SAPT(DFT) SCF Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1684:14,Failure,Failure,14,https://psicode.org,https://github.com/psi4/psi4/issues/1684,1,['Failure'],['Failure']
Availability,SCAN/libXC segmentation fault,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/863:24,fault,fault,24,https://psicode.org,https://github.com/psi4/psi4/issues/863,1,['fault'],['fault']
Availability,SCF Convergence Failure: ECPs and ROHF-SOSCF,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1716:16,Failure,Failure,16,https://psicode.org,https://github.com/psi4/psi4/issues/1716,1,['Failure'],['Failure']
Availability,SCF Count Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2594:10,Failure,Failure,10,https://psicode.org,https://github.com/psi4/psi4/issues/2594,1,['Failure'],['Failure']
Availability,SCF checkpointing update,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2190:4,checkpoint,checkpointing,4,https://psicode.org,https://github.com/psi4/psi4/pull/2190,1,['checkpoint'],['checkpointing']
Availability,"SCF stability analysis with FOLLOW is currently only implemented for UHF. RHF and ROHF have stability analysis, but do not have the capability to follow the instability. This is not documented at all, as far as I can tell, and what is even worse is that if the user requests a FOLLOW with RHF, it ""fails"" silently.; That is, the SCF and the stability analysis is run, and even if there is an instability Psi4 just carries on. So I propose two short term solutions:; 1. Update the docs to make it clear that FOLLOW is currently an UHF only feature.; 2. Implement checks against the user requesting FOLLOW with RHF or ROHF. I think exiting with error is the reasonable action when the user requests an unavailable feature. Of course the long term solution would be to implement follow for R(O)HF, but that is probably more of a wishlist item, than anything else. I found these issues a while ago and planned to fix them myself, but never got around to actually do so, and will not have the time to work on them before the 1.2 release.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/973:643,error,error,643,https://psicode.org,https://github.com/psi4/psi4/issues/973,1,['error'],['error']
Availability,SCF: Add SCFConvergence Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1130:24,Error,Error,24,https://psicode.org,https://github.com/psi4/psi4/pull/1130,1,['Error'],['Error']
Availability,SOSCF: Now correctly throws an error for RKS/UKS SOSOCF updates,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/258:31,error,error,31,https://psicode.org,https://github.com/psi4/psi4/pull/258,1,['error'],['error']
Availability,Second Decimal Place Errors in ECP Analytic Gradients,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066:21,Error,Errors,21,https://psicode.org,https://github.com/psi4/psi4/issues/3066,1,['Error'],['Errors']
Availability,"See conversation at https://github.com/psi4/psi4public/issues/214 . If an experienced psi4 developer checks out a plugin from the binary, he can guess what modifications the Makefile will need and proceed. If an inexperience user checks out a plugin from the binary, he may not even have a compiler. So there needs to be at least one easy and documented way to get the plugin working. This ticket is to make that happen.; - [x] Implement the Makefile template reference in https://github.com/psi4/psi4/issues/214#issuecomment-172256746 . There's a cmake variable `-DENABLE_CONDA_DEST` that you can use to tell c-side if it's a conda build.; - [ ] Use that same cmake variable to print to the user a link to the manual on compiling plugins from conda; - [ ] at that manual page, talk about; - conda env w/`psi4`, `gcc`, `openblas`; - must _activate_ conda env; - register plugins at https://github.com/psi4/psi4public/blob/master/lib/python/aliases.py#L46; - place plugins a la https://github.com/psi4/psi4meta/blob/master/conda-recipes/csx4psi/build.sh. I'm not sure myself how `PYTHONPATH`/`PSIPATH` is picking up on where plugins located. Conda metapackage is still under assembly, so don't do too detailed docs yet. The first two bullets are ready, though.; - [ ] in doc/sphinxman/plugins.rst, review and update the available plugin flavors; - [ ] in doc/sphinxman/plugins.rst, remove reference to needing `--with-plugins`, as everything is fPIC these days",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/216:1319,avail,available,1319,https://psicode.org,https://github.com/psi4/psi4/issues/216,1,['avail'],['available']
Availability,"Seems that every time we compare values in input (compare_values() function in test cases) and the comparison fails, we get a segfault. Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/proces",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/64:182,fault,fault,182,https://psicode.org,https://github.com/psi4/psi4/issues/64,1,['fault'],['fault']
Availability,"Seg fault in optking when ""frag_mode multi"" used with linear bends present",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680:4,fault,fault,4,https://psicode.org,https://github.com/psi4/psi4/issues/680,1,['fault'],['fault']
Availability,Segfault after mrcc-optfreq test case failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/138:38,failure,failure,38,https://psicode.org,https://github.com/psi4/psi4/issues/138,1,['failure'],['failure']
Availability,Segmentation fault after installation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/1792,1,['fault'],['fault']
Availability,Segmentation fault in CCSD for N and F atoms,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/12:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/12,1,['fault'],['fault']
Availability,Segmentation fault in DF calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2288:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/2288,1,['fault'],['fault']
Availability,Segmentation fault in test opt-irc-1 and opt-irc-2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/463:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/463,1,['fault'],['fault']
Availability,"Setup: Install Psi4 rc1 for Linux with python 3.9 via the installer from https://psicode.org/installs/v14rc1/. Result: This installation appears to work fine for most molecules, but then has an issue with systems with linear dependencies, specifically when running the in-core DF algorithm. The provided file, `psi4_issue.py`, when run with sufficient memory to run in-core (~40 GB), gives an energy that is low by more than 2 Hartree (should be -1145.943, but gives -1148.711). With scf_type DF and less RAM (thus causing the disk algorithm to run), the energy is correct. Setting s_tolerance to 1e-4 also fixes the problem, at the cost of a little accuracy loss (5e-4 Hartree). I have reproduced this error on several computers, both CentOS and Ubuntu. The next version, psi4 rc2, does not show this problem. It would be nice to know whether this was deliberately fixed, or might still be around. `psi4_issue.py`: https://drive.google.com/file/d/1RTSVVfmXwJNpS4CHtvMYOTBU63J8Z85j/view?usp=sharing",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211:703,error,error,703,https://psicode.org,https://github.com/psi4/psi4/issues/2211,1,['error'],['error']
Availability,"Several downstream codes do not recognize the new SCF types `mem_DF` and `disk_DF` (introduced in #961) when set directly within the input file. I've attached [a tarball](https://github.com/psi4/psi4/files/2002517/eff-scftype-df.tar.gz) containing several such tests, adapted directly from the existing Psi4 test suite, which attempt to highlight these problems. I've also attached the summary file (from the tarball) separately for easy web viewing [here](https://github.com/psi4/psi4/files/2002535/summary.txt). Additionally worth note is that a few of these downstream codes fail gracefully (e.g., FNOCC for `scf_type mem_df`, as it assumes a disk algorithm) with helpful error messages, but others do not (e.g., CISD energies fail with PSIO errors and DLDF+D09 gradients segfault). However, if failure is unavoidable, we should probably at least be verbose in the error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021:8,down,downstream,8,https://psicode.org,https://github.com/psi4/psi4/issues/1021,6,"['down', 'error', 'failure']","['downstream', 'error', 'errors', 'failure']"
Availability,Show file name in error message,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2801:18,error,error,18,https://psicode.org,https://github.com/psi4/psi4/pull/2801,1,['error'],['error']
Availability,Simplify Input-File Side Error Info,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1196:25,Error,Error,25,https://psicode.org,https://github.com/psi4/psi4/issues/1196,1,['Error'],['Error']
Availability,"Sorry, @hokru. I've been trying to build Francesco and Shuhe's [DSRG-PT2 gradient plugin](https://github.com/ustcwsh/Shuhe_Project) to test a theory. (In multiple senses of ""theory."") Shuhe's code was written for Python 2, so Psi rightly complains about invalid syntax. ```; Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 19, in <module>. File ""./../dsrgpt2_plug/__init__.py"", line 45; print ""imported so file: "", sofile; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""imported so file: "", sofile)?; ```. The error message that Holger's message extractor gives me is less readable. ```; !----------------------------------------------------------------------------------!; ! !; ! "", sofile !; ! , ^ !; ! ,SyntaxError: Missing parentheses in call to 'print'. Did you mean !; ! print(""imported so file: "", sofile)? !; ! !; !----------------------------------------------------------------------------------!; ```. The error extractor should be patched to just report the SyntaxError.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1920:647,error,error,647,https://psicode.org,https://github.com/psi4/psi4/issues/1920,2,['error'],['error']
Availability,Supply Processed Input File in Response to Py-side Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1214:51,Error,Error,51,https://psicode.org,https://github.com/psi4/psi4/pull/1214,1,['Error'],['Error']
Availability,Switches off Py35 Travis until the fail on PyTest exit bug can be tracked down. This bug does not appear to affect areas besides Travis as far as we know. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1245:74,down,down,74,https://psicode.org,https://github.com/psi4/psi4/pull/1245,1,['down'],['down']
Availability,Syntax error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1565:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/1565,1,['error'],['error']
Availability,"Take the following input script:. ```; molecule mol {; He 0 0 4; --; He 0 0 0; }. mol.update_geometry(); mol.print_out(). new_mol = mol.clone(); new_mol.print_out(); ```. and examine the output:. ```; Molecular point group: d2h; Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150. Full point group: D_inf_h. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 2.000000000000 4.002603254150; HE 0.000000000000 0.000000000000 -2.000000000000 4.002603254150; ```. The Molecule Point group does not get carried through, and some piece of data is missing so that `update_geometry` does not fix this either. In some circumstances this will cause a seg fault. Note that the clone function is somewhat awkward in molecule and causes both the copy and assignment constructors to be called. In the meantime we can use the following syntax:. ```; new_mol = psi4.Molecule.create_molecule_from_string(mol.create_psi4_string_from_molecule()); ```. Note, if you are running this on psi4/public you will probably notice that the `new_mol` does not have atoms, this bug has been fixed inside the wavefunction_pass update.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/235:1051,fault,fault,1051,https://psicode.org,https://github.com/psi4/psi4/issues/235,1,['fault'],['fault']
Availability,"Test ```tests/cc36``` fails when run with PyTest:. ```; =========================================================================================== ERRORS ===========================================================================================; _________________________________________________________________________ ERROR collecting tests/cc36/test_input.py __________________________________________________________________________; test_input.py:1: in <module>; from addons import *; ../pytests/addons.py:9: in <module>; from qcengine.testing import _programs as _programs_qcng; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:173: in <module>; ""psi4"": is_program_new_enough(""psi4"", ""1.2""),; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:62: in is_program_new_enough; candidate_version = qcng.get_program(program).get_version(); /usr/local/lib/python3.9/site-packages/qcengine/programs/psi4.py:89: in get_version; with popen([which_prog, ""--version""]) as exc:; /usr/local/lib/python3.9/contextlib.py:119: in __enter__; return next(self.gen); /usr/local/lib/python3.9/site-packages/qcengine/util.py:304: in popen; ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}; /usr/local/lib/python3.9/subprocess.py:951: in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; /usr/local/lib/python3.9/subprocess.py:1744: in _execute_child; executable = os.fsencode(executable); /usr/local/lib/python3.9/os.py:810: in fsencode; filename = fspath(filename) # Does type-checking of `filename`.; E TypeError: expected str, bytes or os.PathLike object, not NoneType; ================================================================================== short test summary info ===================================================================================; ERROR test_input.py - TypeError: expected str, bytes or os.PathLike object, not NoneType; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collectio",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2802:148,ERROR,ERRORS,148,https://psicode.org,https://github.com/psi4/psi4/issues/2802,2,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:82,down,downloads,82,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['down'],['downloads']
Availability,"Thanks to @andysim, we're very close to efp-scf energies in working order. Last remaining order of business is efp-scf with spherical basis sets. Once again, Andy fixed this, but now it's breaking later in the code. The tests/libefp/qmefp-moldomains part 5 should fail at compare_values (b/c the value is for puream false) but it should complete sucessfully instead of segfaulting as it does at present. Needs a gdb analysis to find where in the scf it's breaking, then repair from there. At one point, q-chem didn't do puream true basis sets with efp at all. If that limitation is no longer in place, would be great to get a comparison value from q-chem and add that test case.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/115:470,repair,repair,470,https://psicode.org,https://github.com/psi4/psi4/issues/115,1,['repair'],['repair']
Availability,The 'unexpected indent' error in some samples,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3100:24,error,error,24,https://psicode.org,https://github.com/psi4/psi4/issues/3100,1,['error'],['error']
Availability,"The DFT section of the manual at http://www.psicode.org/psi4manual/master/dft.html as well as https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/dft.rst contains references to RC1 in multiple places. Given that 1.0 has been released, I believe the manual should be updated in these parts..; ```; The spherical grids are rotated according to a common set of rules developed during the implementation of SG1. At the moment, the rules for tetrahedral, octohedral, and icosohedral systems are not complete, so there may be some ambiguity in the grid orientation for these systems. A complete grid orientation rule set will be available in RC1. Radial grid types are controlled by the DFT_RADIAL_SCHEME option, which at the moment may be either TREUTLER or BECKE, while the number of radial points are controlled by the DFT_RADIAL_POINTS option, which is any positive integer (typically 50-100). The radial grids are “centered” on the Bragg-Slater radius of each atom, as described in Becke’s 1988 paper. If inaccurate integration is suspected in systems with anions or very diffuse basis functions, the DFT_BS_RADIUS_ALPHA option may be increased from 1.0 to a larger value to force the radial grid to span a larger extent in space. The MultiExp, Mura, and EM radial grids will be available in RC1. The atomic weighting scheme is controlled by the DFT_NUCLEAR_SCHEME option, which may be one of TREUTLER, BECKE, or NAIVE. The faster Stratmann weighting scheme is under development, and will be available in RC1.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/564:633,avail,available,633,https://psicode.org,https://github.com/psi4/psi4/issues/564,3,['avail'],['available']
Availability,"The MBIS regression reported in #2272 was fixed via #2273, but there's still a few items to tackle. This part needn't be backported. - [ ] oeprop(wfn, ""MBIS_VOLUME_RATIOS"") should be fine (indep oeprop fn), but set scf_properties mbis_volume_ratios; energy(""scf"") will still fail as MBIS fails via QCEngine #2272 reported because those are OEProp class instantiations called from proc.py, and the free atom volumes aren't available. The oeprop.cc code could exit gracefully when free atom volumes aren't available, but having different properties lists for the two calling routes isn't good.; - [ ] so why not add the loc from oeprop() to OEProps in proc.py so that atom volumes are available? nice thought, but the fn that produces them itself calls oeprop() and energy() and descends into endless recursion. I haven't sought the logic that makes this all work together.; - [ ] add tests.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2299:422,avail,available,422,https://psicode.org,https://github.com/psi4/psi4/issues/2299,3,['avail'],['available']
Availability,The PSIDATADIR is not yet available when building these. Fix for #90,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/91:26,avail,available,26,https://psicode.org,https://github.com/psi4/psi4/pull/91,1,['avail'],['available']
Availability,"The Python_EXECUTABLE setting at the top level isn't being propagated down to the libint2 build.; libint2 finds a different Python version and uses it. Multiple Python versions can be installed concurrently, and it is important that the same Python version is used everywhere.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2796:70,down,down,70,https://psicode.org,https://github.com/psi4/psi4/issues/2796,1,['down'],['down']
Availability,The Python_EXECUTABLE variable should be passed down to all cmake invocations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2796:48,down,down,48,https://psicode.org,https://github.com/psi4/psi4/issues/2796,1,['down'],['down']
Availability,"The SAPT(DFT) module runs correctly using hybrid functionals like PBE0, but cannot be run with GGAs like PBE. I have used the commands:; _set {; scf_type df; sapt_dft_functional PBE; sapt_dft_do_dHF False; sapt_dft_grac_shift_a 0.12589; sapt_dft_grac_shift_b 0.12589; }_. to obtain PBE in this module, but this results in the error message:. _=> Auxiliary Basis Set <=; ; Basis Set: ANONYMOUS400E6A7D; Blend: AUG-CC-PVDZ-JKFIT + MB-SET-RI; Number of shells: 478; Number of basis function: 1452; Number of Cartesian functions: 1697; Spherical Harmonics?: true; Max angular momentum: 4; ; ; Traceback (most recent call last):; File ""/home/alston/Psi4/install/1.2-gcc/bin/psi4"", line 259, in <module>; exec(content); File ""<string>"", line 71, in <module>; File ""/home/alston/Psi4/install/1.2-gcc/lib//psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/alston/Psi4/install/1.2-gcc/lib//psi4/driver/procrouting/sapt/sapt_proc.py"", line 234, in run_sapt_dft; cache = sapt_jk_terms.build_sapt_jk_cache(wfn_A, wfn_B, sapt_jk, True); File ""/home/alston/Psi4/install/1.2-gcc/lib//psi4/driver/procrouting/sapt/sapt_jk_terms.py"", line 108, in build_sapt_jk_cache; cache[""K_A""] = jk.K()[0].clone(); ; IndexError: list index out of range; ; *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4._. **Perhaps jk.K() is not filled for a GGA?** While GGAs are not expected to yield accurate SAPT(DFT) interaction energies it will be useful to have the ability to use them, if only for testing and benchmarking purposes.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/911:326,error,error,326,https://psicode.org,https://github.com/psi4/psi4/issues/911,2,['error'],['error']
Availability,"The TD-SCF code seems to work pretty well and comparably with other codes but the current level of output that appears in the output file by default is pretty minimal (energies, symmetries, oscillator strengths, etc.). A lot more info is available through various variables but they are pretty obscure and not the easiest to use. After a brief discussion on the forum [forum](http://forum.psicode.org/t/td-scf-excited-state-densities-and-or-contributing-excitations-available-yet/2109) I was encouraged to add this as a github issue. I'm happy to add these additions and, after a fair bit of fiddling, I think I have it mostly sussed. (And it's been a good learning experience: digging into RPA and TDA literature to some extent!). I have a few additions to scf_response.py to output the set of TDM vectors and the most important excitations (and deexcitations) contributing to each excited state, and I will submit a pull request once I've cleaned it up a bit. However it currently only works for C1, i.e no symmetry. One thing I have yet to get my head around is how to handle X and Y when symmetry is involved: comparing a calculation with C1 point group with the same molecule but using a higher point group, I can see the same coefficients within the sub-matrices for the different irreducible representations but I can't see how to unpick something like an ""A -> B"" single excitation that sees to appear only in the A representation sub-matrix. (If that makes sense!)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2153:238,avail,available,238,https://psicode.org,https://github.com/psi4/psi4/issues/2153,2,['avail'],"['available', 'available-yet']"
Availability,"The `dct` module does not seem to like linear dependencies. Example 1:; ```; molecule { ; o ; h 1 1.0 ; h 1 1.0 2 104.5; }. set {; basis 'aug-cc-pvtz'; s_tolerance 1e-3; }. energy('dct'); ```. The computation runs to completion and gives energies that are at least _plausible_. But the output file is littered with; ```; There was a problem correcting the MO phases.; If this does not converge, try ALGORITHM=TWOSTEP; ```; and `stderr` receives several MKL errors. Example 2:; ```; molecule { ; o ; h 1 1.0 ; h 1 1.0 2 104.5; }. set {; basis 'aug-cc-pvtz'; dct_type df; s_tolerance 1e-3; }. energy('dct'); ```. Using the DF code triggers a segfault. There may well be more examples I haven't found yet as I venture into other parts of the module. Either way, I'm going to be fixing this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2231:457,error,errors,457,https://psicode.org,https://github.com/psi4/psi4/issues/2231,1,['error'],['errors']
Availability,"The `diis_min_vecs` option currently has no effect in Psi4. We [check that is at least 1](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L402), but we [already raise an error if it isn't](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/scf_proc/scf_iterator.py#L849). I've checked, and it was this way before I started tinkering with DIIS. This keyword accomplishes absolutely nothing besides giving the user a chance to raise errors. Do we want to _remove the keyword_, _add the intended feature_, or _deprecate and then remove the keyword_?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2401:212,error,error,212,https://psicode.org,https://github.com/psi4/psi4/issues/2401,2,['error'],"['error', 'errors']"
Availability,"The `dmrg/caspt2-n2` is quite large compared to the quicktests. I am no expert in DMRG, but maybe scaling down the active space to 6 orbitals would be ok for code-coverage?. I use the following patch in Debian:. ```; --- ./tests/dmrg/caspt2-n2/input.dat.orig 2016-09-23 21:52:13.874684018 +0200; +++ ./tests/dmrg/caspt2-n2/input.dat 2016-09-23 21:58:45.226670772 +0200; @@ -13,8 +13,8 @@. set dmrg_irrep 0; set dmrg_multiplicity 1; -set restricted_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; -set active [ 4 , 0 , 1 , 1 , 0 , 4 , 1 , 1 ]; +set restricted_docc [ 3 , 0 , 0 , 0 , 0 , 3 , 0 , 0 ]; +set active [ 1 , 0 , 1 , 1 , 0 , 1 , 1 , 1 ]. set dmrg_sweep_states [ 500, 1000]; set dmrg_sweep_energy_conv [ 1e-10, 1e-10]; @@ -41,6 +41,6 @@. energy(""dmrg-caspt2""). -compare_values(-109.15104350802, get_variable(""DMRG-SCF ENERGY""), 6, ""DMRG-SCF Energy"") #TEST; -compare_values(-109.2680229921, get_variable(""CURRENT ENERGY""), 6, ""DMRG-CASPT2 Energy"") #TEST; +compare_values(-107.2576689206, get_variable(""DMRG-SCF ENERGY""), 6, ""DMRG-SCF Energy"") #TEST; +compare_values(-107.5036855148, get_variable(""CURRENT ENERGY""), 6, ""DMRG-CASPT2 Energy"") #TEST; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/474:106,down,down,106,https://psicode.org,https://github.com/psi4/psi4/issues/474,1,['down'],['down']
Availability,"The `samples/example_psi4rc_file` file has. ```; psi4_io.set_default_path('/scratch/parrish/'); ```. as default, not commented out. Even though this is a sample file, it should maybe use `/tmp` or something generally available as default scratch directory, not a directory with a developer's name on it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/392:217,avail,available,217,https://psicode.org,https://github.com/psi4/psi4/issues/392,1,['avail'],['available']
Availability,"The attached input uses basis_guess to specify a basis set for the initial guess: [sapt.zip](https://github.com/psi4/psi4/files/557209/sapt.zip). This worked with a previous PSI4 release. I guess that was 4.0b6 back then. With a recent development version of PSI4 (commit 7e4ecf968ec7920ab404cb357de827cf3785a254, Wed Oct 19 16:52:24 2016 -0400), I get the following error:. ```; toon@molmod49 ~/sapt> psi4 sapt.in . QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for role JKFIT among:; Shell Entries: [u'N']; Basis Sets: [(u'1', u'1', None)]; File Path: /home/toon/sapt, /home/toon/sapt, /home/toon/.local/share/psi4/basis; Input Blocks: . Traceback (most recent call last):; File ""/home/toon/.local/bin/psi4"", line 161, in <module>; exec(content); File ""<string>"", line 53, in <module>; File ""/home/toon/.local/bin/../lib/psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 3133, in run_sapt; dimer_wfn = scf_helper('RHF', molecule=sapt_dimer, **kwargs); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 1199, in scf_helper; ref_wfn = scf_wavefunction_factory(core.get_option('SCF', 'REFERENCE'), base_wfn); File ""/home/toon/.local/bin/../lib/psi4/driver/procedures/proc.py"", line 1028, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/home/toon/.local/lib/psi4/driver/p4util/python_helpers.py"", line 60, in pybuild_basis; key, target, fitrole, other, return_atomlist=return_atomlist); File ""/home/toon/.local/bin/../lib/psi4/driver/qcdb/libmintsbasisset.py"", line 631, in pyconstruct; return_atomlist=return_atomlist); File ""/home/toon/.local/bin/../lib/psi4/driver/qcdb/libmintsbasisset.py"", line 805, in construct; (at + 1, role, text2)); psi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for role JKFIT ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/484:367,error,error,367,https://psicode.org,https://github.com/psi4/psi4/issues/484,1,['error'],['error']
Availability,"The build installs these files:; ```; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetHDF5/TargetHDF5Config.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetHDF5/TargetHDF5ConfigVersion.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetHDF5/TargetHDF5Targets.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake; Error: Orphaned: /usr/ports/science/psi4/work/.build/stage/usr/local/share/cmake/TargetLAPACK/TargetLAPACKTargets.cmake; ```. Each one is already installed into the proper location, ex. ```; /usr/local/share/cmake/TargetHDF5/TargetHDF5Config.cmake```. For some reason, it installs duplicates copies into locations derived from the build directory path (?). @loriab Maybe you know how to fix it?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/855:38,Error,Error,38,https://psicode.org,https://github.com/psi4/psi4/issues/855,5,['Error'],['Error']
Availability,"The build of psi4 1.3.2 started failing in Fedora rawhide due to test failures. The test failures are caused by a failed import of core. I am able to reproduce this in the terminal; ```; $ python3; Python 3.11.0b5 (main, Jul 26 2022, 00:00:00) [GCC 12.1.1 20220628 (Red Hat 12.1.1-3)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import psi4; Traceback (most recent call last):; File ""/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/stage/lib64/python3.11/site-packages/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: cannot import name 'core' from partially initialized module 'psi4' (most likely due to a circular import) (/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/stage/lib64/python3.11/site-packages/psi4/__init__.py). During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/stage/lib64/python3.11/site-packages/psi4/__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: cannot import name 'core' from partially initialized module 'psi4' (most likely due to a circular import) (/builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/stage/lib64/python3.11/site-packages/psi4/__init__.py); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656:70,failure,failures,70,https://psicode.org,https://github.com/psi4/psi4/issues/2656,2,['failure'],['failures']
Availability,"The calculation does not run, but it does not report an error",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2900:56,error,error,56,https://psicode.org,https://github.com/psi4/psi4/issues/2900,1,['error'],['error']
Availability,"The cc-pVnZ-PP and aug-cc-pVnZ-PP series of basis sets, optimized for heavy elements are not available as built in basis sets.; These basis sets are available for most elements from Y to Rn, with the exceptions of alkali and alkaline earth metals, and lanthanides. They are optimized to be used with a small-core ECP that replaces only the inner core electrons, typically one from the Stuttgart-Köln ECP family. Beyond just adding the relevant basis set and ECP definitions there is also a question of ECP selection. Based on a quick look at the docs, currently ECP-optimized basis sets and ECPs are somewhat tied together. The (aug-)cc-pVnZ-PP series does not really fit into that picture, as there are multiple valid choices of ECP. So there should be some user-facing option for selecting the ECP. Also, many of the elements may not have appropriate auxiliary basis sets available, so if DF is the default for some methods, then they should probably switch to conventional/direct/incore instead of erroring out.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2697:93,avail,available,93,https://psicode.org,https://github.com/psi4/psi4/issues/2697,4,"['avail', 'error']","['available', 'erroring']"
Availability,"The compilation of Psi4 wants to install qcengine, but it's trying to do it in the wrong target directory; ```; running install_scripts; Installing qcengine script to /usr/local/bin; error: [Errno 13] Permission denied: '/usr/local/bin/qcengine'; make[2]: *** [external/upstream/qcengine/CMakeFiles/qcengine_external.dir/build.make:74: external/upstream/qcengine/qcengine_external-prefix/src/qcengine_external-stamp/qcengine_external-install] Error 1; make[2]: Leaving directory '/home/work/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:1440: external/upstream/qcengine/CMakeFiles/qcengine_external.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1582:183,error,error,183,https://psicode.org,https://github.com/psi4/psi4/issues/1582,4,"['Error', 'error']","['Error', 'error']"
Availability,"The context of this issue is that I got a report from @bennybp that a number of QCArchive geometry optimizations were failing, in which geomeTRIC was used to optimize the geometry by calling Psi4 (through QCEngine) for single point energies and gradients. The optimizations are part of a dataset of transition metal complexes with initial structures taken from the CSD / ICSD and pre-minimized with a semiempirical model. . Ben sent the QCArchive job specification to my student @hjnpark who converted it to a Psi4 input file (see attached input.dat in data.zip). Using this I was able to reproduce the optimization failure using geomeTRIC's command line calling Psi4 directly. We weren't sure whether the issue was due to geomeTRIC's optimization algorithm or an inaccuracy in the gradient from Psi4, so I computed the numerical gradient using finite difference of the energy and compared it with the analytic gradient. I found several components of the gradient where the difference exceeds 3e-4 and the largest difference exceeds 1e-3. The result is consistent when I use two different step sizes for the finite difference (1e-3 and 1e-4 a.u., both using central (3-point) finite difference; see fd-ana-grad.txt file in attached data.zip). By contrast, for a different system (a water dimer calculated at HF/STO-3G), the max difference between numerical and analytic gradients using a 1e-3 step size is around 1e-6. I've attached a picture where the numerical gradient, analytic gradient, and the difference are visualized. The difference is mainly on the La and Br atoms, with smaller components on the other atoms. These forces do not appear to be purely translational/rotational, but I think there is a translational/rotational component because the ""trajectory"" of the optimization appears to include some translational/rotational motion as well as distortion (attached qce_optim.xyz in data.zip). ![1](https://github.com/psi4/psi4/assets/1441560/e3dea159-d922-40c8-bad9-868b20f710e3). Although",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066:616,failure,failure,616,https://psicode.org,https://github.com/psi4/psi4/issues/3066,1,['failure'],['failure']
Availability,"The correct detection of the D2h subgroup seems to depend on the orientation. In the attached input; are two different geometries at two different orienations, but both Oh symmetry. case 1 was symmetrized using the SYVA code after C1 optimization with DFT (https://www.sciencedirect.com/science/article/pii/S0010465517300310); case 2 was downloaded from a website about symmetry. (see input). input:; [oh.txt](https://github.com/psi4/psi4/files/2320825/oh.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1177:338,down,downloaded,338,https://psicode.org,https://github.com/psi4/psi4/issues/1177,1,['down'],['downloaded']
Availability,"The current master branch of libxc includes support for double hybrids, as well as functionals with several range-separation constants (e.g. the HISS functional). It would be great to have Psi4 as an early adopter, so that we could test whether the interface is sane and the implementations are correct. The direct libxc interface will also include functionals like wB97M(2) that aren't available in Psi4 at the moment.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1875:387,avail,available,387,https://psicode.org,https://github.com/psi4/psi4/issues/1875,1,['avail'],['available']
Availability,"The documentation in the manual for detci; http://www.psicode.org/psi4manual/master/detci.html. states that the maximum number of iterations to diagonalize the Hamiltonian is set by MAXITER, the default of which is 12. However, if one sets maxiter to 5 in the runfile, psi4 crashes because SCF convergence wasn't attained in 5 iterations, and if one sets maxiter to 50, detci crashes due to non-convergence after 25 iterations. So, there are two problems:. 1) I think the keyword specified in the manual is incorrect, because plain MAXITER does not control DETCI but rather the SCF parameter. Increasing the value of CI_MAXITER (which I found by trial and error) I was able to get FCI to converge.; 2) The default value is not 12, but 25, as demonstrated by the trial.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/423:656,error,error,656,https://psicode.org,https://github.com/psi4/psi4/issues/423,1,['error'],['error']
Availability,"The error can appear in form of various crashes (e.g. bad alloc, weird print outs) but it seems ultimately the problem is that ghost atoms do not have an atomic radius for pcmsolver. I finally got a proper error message:. ```; PCMSolver fatal error.; In function initMolecule at line 588 of file /Users/github/builds/conda-builds/pcmsolver_1532565726046/work/src/interface/Meddle.cpp; In the molecule:; Geometry (in Angstrom); Center X Y Z; ------------ ------------ ------------ ------------; N-5.29177e-11 -0.0550546 0; H-0.477098 0.254982 -0.826358; H-0.477098 0.254982 0.826358; H0.954196 0.254982 0; -5.29177e-11 -0.0550546 5.29177; -0.477098 0.254982 4.46541; -0.477098 0.254982 6.11813; 0.954196 0.254982 5.29177; Rotor type: Asymmetric; Some atoms do not have a radius attached.; Please specify a radius for all atoms!; ```. input for testing: [ghost_pcm.txt](https://github.com/psi4/psi4/files/3256204/ghost_pcm.txt). ---. A manual specification is possible as a work-around but automatic would be nice.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1656:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/issues/1656,3,['error'],['error']
Availability,"The following either gives `NaN` energy or (positive) 60,000 [Eh] depending on MKL version and compile options. All basis sets smaller than aug-cc-pVQZ seem to check out, did not try larger. Other guesses, `s_tolerence`, or fitting basis appear to have no effect on this error. UHF works fine. ```; molecule mol {; 0 2; C -2.83891 -0.84747 -0.20778; N -2.06959 -0.27604 0.77905; C -0.85937 -0.82512 0.74757; N -0.82980 -1.74677 -0.21226; C -2.05910 -1.77487 -0.83179; C -2.45490 0.86620 1.59959; C 0.35903 -2.49473 -0.61265; F -1.01767 1.46174 -1.11980; B 0.28985 1.63764 -0.63648; F 0.23738 1.82826 0.77419; F 0.89453 2.73957 -1.24020; F 1.05039 0.46734 -0.88673; H -0.02604 -0.54755 1.38339; H -2.27287 -2.45330 -1.64959; H -3.86751 -0.55086 -0.37733; H -3.45079 0.68580 2.01748; H -1.72185 0.98138 2.40249; H -2.44673 1.75972 0.96603; H 0.98379 -1.85263 -1.24323; H 0.91655 -2.78676 0.28358; H 0.03922 -3.39046 -1.15377; C 2.81822 0.12352 1.52490; C 3.26768 -0.78277 0.56145; H 3.28632 0.11977 2.50813; H 2.01109 0.81253 1.27433; N 3.64537 -1.55240 -0.23308; }. set {; basis aug-cc-pVQZ; scf_type df; guess gwh; reference rohf; }. energy('SCF'); ```. An example of initial convergence can be seen for UHF/aQZ:. ```; Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 1: -716.29320215568873 -7.16293e+02 1.25967e-02; @DF-UHF iter 2: 27.48017620380119 7.43773e+02 1.97120e-02 DIIS; @DF-UHF iter 3: -561.81810445462588 -5.89298e+02 9.53326e-03 DIIS; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/371:271,error,error,271,https://psicode.org,https://github.com/psi4/psi4/issues/371,1,['error'],['error']
Availability,"The following input crashes with a Segfault:. ```; molecule HeLi {; 	0 1; 	He 0.000000000 0.000000000 0.000000000; 	--; 	1 1; 	Li 3.300000000 0.000000000 0.000000000. 	units angstrom; 	no_reorient; }. set globals {; 	basis aug-cc-pVDZ; 	df_basis_scf aug-cc-pVDZ; 	df_basis_sapt aug-cc-pVDZ; 	df_basis_mp2 aug-cc-pVDZ; }. set_memory(32000000000); energy('sapt2+3(ccd)dmp2'); ```. ```; /home/apps/psi/psi4conda/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00002B46FE54BA15 Unknown Unknown Unknown; libpcm.so.1 00002B46FE549637 Unknown Unknown Unknown; ```; etcetera. Output stops suddenly:; ```; <snip>; ==> CCD Dispersion <==. Beginning Monomer A CCD. Iter Energy (H) dE (H) RMS (H); 1 -0.02083174 0.020831739 0.000000000; 2 -0.02587434 0.005042604 0.000504656; 3 -0.02710324 0.001228894 0.000126313; 4 -0.02740459 0.000301348 0.000031758; 5 -0.02747899 0.000074401 0.000008016 DIIS; 6 -0.02750358 0.000024596 0.000002027 DIIS; 7 -0.02750357 -0.000000016 0.000000004 DIIS; 8 -0.02750358 0.000000015 0.000000002 DIIS; 9 -0.02750358 0.000000001 0.000000000 DIIS. Beginning Monomer B CCD; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1564:519,fault,fault,519,https://psicode.org,https://github.com/psi4/psi4/issues/1564,1,['fault'],['fault']
Availability,"The following input fails with a segfault; ```; molecule {; 0 5; Fe; }. set basis pcseg-0; set reference rohf; set scf_type pk; set mcscf_type conv; # Full space is [ 9, 2, 2, 2, 0, 3, 3, 3]. # Ar core; set restricted_docc [3, 0, 0, 0, 0, 2, 2, 2]; # spd active space; set ras1 [0, 0, 0, 0, 0, 0, 0, 0]; set ras2 [3, 1, 1, 1, 0, 1, 1, 1]; set ras3 [3, 1, 1, 1, 0, 0, 0, 0]; cas_e, cas_wfn = energy('rasscf', return_wfn=True). # Dynamical correlation from Ar core; set restricted_docc [0, 0, 0, 0, 0, 0, 0, 0]; set ras1 [3, 0, 0, 0, 0, 2, 2, 2]; ras_e, ras_wfn = energy('detci', ref_wfn=cas_wfn, return_wfn=True); ```. There's something wrong in the input or the code, since there's an error message in the log file; ```; ==> Setting up CI strings <==. There are 2730 alpha and 105 beta strings; (subgr_lex_addr): Impossible walk!; The CI space requires 18211 (1.82E+04) determinants and 44 blocks; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1693:685,error,error,685,https://psicode.org,https://github.com/psi4/psi4/issues/1693,1,['error'],['error']
Availability,The following input file breaks `inputparser.py`. ```; $ cat input.dat; # ccansmi: O=C(C#C)C=O. molecule h2 {; H; H 1 0.9; }. set basis 6-31G**; energy('scf'); ```. The exception is. ```; $ psi4 input.dat; Input error: Unmatched (; ```. The error is specific to the fact that the comment appears on the first line of the file.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/86:212,error,error,212,https://psicode.org,https://github.com/psi4/psi4/pull/86,2,['error'],['error']
Availability,The following input file for H10 runs but gives an energy that is not converged:. ```; molecule {; 0 1; H 0.000 0.000 0.0000; H 0.000 0.000 2.5001; H 0.000 0.000 5.0003; H 0.000 0.000 7.5006; H 0.000 0.000 10.0011; H 0.000 0.000 12.5015; H 0.000 0.000 15.0021; H 0.000 0.000 17.5023; H 0.000 0.000 20.0030; H 0.000 0.000 22.5040; symmetry c1; }. set globals {; reference rhf; basis sto-3g; }. energy('fci'); ```. with output. ```; Find the roots by the Simultaneous Expansion Method (Block Davidson Method); Using 1 initial trial vectors; Iter 0 Root 1 = -4.093847469 Delta_E -8.176E+00 Delta_C 5.250E-01; ...; Iter 10 Root 1 = -4.680023014 Delta_E -1.423E-05 Delta_C 4.880E-03; Iter 11 Root 1 = -4.680047623 Delta_E -2.461E-05 Delta_C 7.532E-03; Iter 12 Root 1 = -4.680121394 Delta_E -7.377E-05 Delta_C 1.166E-02. Maximum number of CI iterations reached. * ROOT 1 CI total energy = -4.6801213940684; ```. **Problem:**. The final energy is far from being converged but the user is not warned. The correct converged energy is about 0.0007 Eh below (-4.680868674 Eh). This value can be obtain by adding `set detci maxiter 100` to the input file. . **Feature requested:**; - [ ] Increase the maximum number of iterations in DETCI (currently 12); - [ ] Warn the user/do not print final energy if DETCI does not converge; - [ ] Confirm that failure to converge DETCI does not affect CASSCF computations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/394:1336,failure,failure,1336,https://psicode.org,https://github.com/psi4/psi4/issues/394,1,['failure'],['failure']
Availability,"The following input file from [forums](http://forum.psicode.org/t/error-in-psio-wt-toclen/2234/5) gives a PSIO error `Error in PSIO_WT_TOCLEN()!` in up-to-date master. Reported said they could also reproduce with CCSD, but I haven't tried this myself. Setting `cachelevel 0` was a workaround, but not one that should be necessary. ```memory 5 gb. molecule = {; 0 2; Cl; O 1 R1; O 2 R2 1 A; R1=2.03230554; R2=1.20810395; A=115.36876732. }. set {; reference rohf; basis aug-cc-pwcvqz; print_MOs true; print 2; scf_type pk; guess sad; freeze_core -2; }. energy(‘bccd’); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261:66,error,error-in-psio-wt-toclen,66,https://psicode.org,https://github.com/psi4/psi4/issues/2261,3,"['Error', 'error']","['Error', 'error', 'error-in-psio-wt-toclen']"
Availability,"The following input file raises the error: `Cannot set element 12 since there are only 12 elements.` Somewhere, Psi is trying to set a non-existing vector element. I'm very curious why tests didn't catch this. ```; memory 2 GB. molecule {; 0 1; C 1.741722 -1.200108 -0.733703; C 1.723351 -1.235440 0.673033; C 1.741208 -0.034341 1.406196; C 1.720430 1.201594 0.733472; C 1.738484 1.236058 -0.673301; C 1.720301 0.035400 -1.407211; H 1.811924 -2.125930 -1.299462; H 1.810840 -2.187236 1.191603; H 1.810814 -0.061176 2.490913; H 1.805598 2.126733 1.298598; H 1.806257 2.188975 -1.192470; H 1.805027 0.062415 -2.491005; --; 2 1; Ba -1.306490 -0.000406 0.000195; }; basis {; assign jun-cc-pVDZ; assign Ba GENECP. [GENECP]; cartesian; ****; Ba 0 ; S 3 1.00; 0.8699000 -2.2549747 ; 0.6676000 2.5145786 ; 0.1982000 0.5775184 ; S 4 1.00; 0.8699000 2.0391383 ; 0.6676000 -2.3717712 ; 0.1982000 -1.2758006 ; 0.0823000 1.1703346 ; S 1 1.00; 0.0231000 1.0000000 ; P 3 1.00; 1.6050000 -0.1626403 ; 0.4790000 0.6971289 ; 0.1818000 0.4505107 ; P 2 1.00; 0.1804000 -0.2642537 ; 0.0476000 1.1347212 ; P 1 1.00; 0.0192000 1.0000000 ; ****; }. energy('sapt0'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2853:36,error,error,36,https://psicode.org,https://github.com/psi4/psi4/issues/2853,1,['error'],['error']
Availability,"The following input file segfaults:; ```; molecule {; symmetry c1; H; H 1 1.0 ; }. set basis cc-pvdz; e, wfn = energy('fci', return_wfn=True); wfn.form_tpdm(); ```. The issue is that the driver [cleans up DETCI after every energy call](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L3579). That cleanup [frees the decode matrix](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/ciwave.cc#L458). But `form_tpdm` works by [creating a new CI vector](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/tpdm.cc#L56), which is [set with the decode matrix](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/civect.cc#L115), which the driver freed, giving rise to a bad access exception. So which code is supposed to be responsible for DETCI cleanup? If that's the responsibility of `procrouting`, then `form_tpdm` is always going to segfault, so `form_tpdm` shouldn't be exposed to Python at all, and the user should have the TPDM be formed and kept via `set tpdm true`. If cleanup is not the responsibility of `procrouting`, then which code is supposed to be responsible for it? Leave it to the destructor?. DETCI design decisions are above my pay grade, so I'm leaving this to DGAS and CDS. The 1.4 paper is of course higher priority, but I need this feature working very badly, so I will start pinging on Tuesday.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1812:1350,ping,pinging,1350,https://psicode.org,https://github.com/psi4/psi4/issues/1812,1,['ping'],['pinging']
Availability,"The following input file; ```; molecule mol {; 0 1 ; units bohr; O 0 0 -0.143225816552; H 0 1.638036840407 1.136548822547; H 0 -1.638036840407 1.136548822547; }. set {; reference uhf ; basis sto-3g; scf_type pk; mp2_type conv; dcft_functional odc-12; }. energy('omp2'); energy('dcft'); ```; crashes with error; ```; PSIO_ERROR: Attempt to write into next entry: 61, MO Ints (OO|OV); PSIO_ERROR: unit = 61, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 33, in <module>; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 493, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 1479, in run_dcft; dcft_wfn = core.dcft(ref_wfn). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:; ```; Modifying the input file showed the following:. - The error resolves when changing the reference from UHF to RHF; - Both ODC-06 and ODC-12 will trigger the error, but neither DC-06 nor DC-12 will; - Both OMP2 and OLCCD before the ODC will trigger the error, but neither MP2 nor LCCD will",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1288:304,error,error,304,https://psicode.org,https://github.com/psi4/psi4/issues/1288,8,"['Error', 'error']","['Error', 'error']"
Availability,"The following input file; ```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. set solver_precondition subspace; set solver_n_guess 3. gradient('mp2/cc-pvdz'); ```; segfaults due to a bad access exception. While the segfault occurred on [this line](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/solver.cc#L290), the real problem is earlier. The loop structure [assumes](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/solver.cc#L280-L285) that `x_` and `b_` have the same number of elements. But the last method we ran [was `setup`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/solver.cc#L163-L164), which [clears `x_`](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/solver.cc#L276). Even then, `setup` appears to have its own, unrelated problem. The preconditioner submatrix `A_` is [populated using the results of a `products_x()` call](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/solver.cc#L259-L272). But `x_` [consists of zero vectors](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/solver.cc#L251), so the submatrix guess procedure is just an overcomplicated way to write zero at present. That is probably very bad for the algorithm. Making matters even worse, I have not been able to find a standard conjugate gradients preconditioner with a name similar to ""SUBSPACE,"" so I cannot figure out how this algorithm was supposed to work. In short, this code is broken, and I would say beyond repair. Can I eliminate all the code for the ""SUBSPACE"" preconditioner from the `CGRSolver`? We'd just fall back to the ""JACOBI"" preconditioner, which is the default anyways.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1918:1493,repair,repair,1493,https://psicode.org,https://github.com/psi4/psi4/issues/1918,1,['repair'],['repair']
Availability,"The following input runs a CISD computation and crashes with the current version of psi4 (fe3ab0d). ```; molecule {; O; H 1 R; H 1 R 2 A. R = .9; A = 104.5; symmetry c1; }. set basis sto-3g; energy('cisd'); ```. Here is the console output:. ```; Traceback (most recent call last):; File ""/Users/francesco/Source/psi4-fork-bin-Debug/bin/psi4"", line 210, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/francesco/Source/psi4-fork-bin-Debug/bin/../lib//psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/francesco/Source/psi4-fork-bin-Debug/bin/../lib//psi4/driver/procedures/proc.py"", line 946, in select_cisd; return func(name, **kwargs); File ""/Users/francesco/Source/psi4-fork-bin-Debug/bin/../lib//psi4/driver/procedures/proc.py"", line 3949, in run_cepa; fnocc_wfn = core.fnocc(ref_wfn). RuntimeError: ; Fatal Error: ndocc must be less than nvirt; Error occurred in file: /Users/francesco/Source/psi4-fork/psi4/src/psi4/fnocc/ccsd.cc on line: 142; The most recent 5 function calls were:; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/546:930,Error,Error,930,https://psicode.org,https://github.com/psi4/psi4/issues/546,2,['Error'],['Error']
Availability,"The following input segfaults:. ```; memory 16GB; molecule{; 0 2; C -1.309749745 1.180176173 -0.025170341; O -0.725300438 2.155147669 0.452713346; C -2.816719340 1.155998649 -0.110605975; H -3.220628949 1.262541455 0.893082386; H -3.209427538 0.248634016 -0.561900090; H -3.143158132 2.016595633 -0.688893115. units angstrom; symmetry c1; }. set{; basis def2-svp; reference uhf; DFCC False; Freeze_core True; CACHELEVEL 0; scf_type direct; print 2; }; set_num_threads(32). properties('ccsd',properties=['polarizability']); ```. I've been able to reproduce this on a serial run. My initial `lldb` run isn't giving reliable information, because it's confusing the various `MOInfo` objects defined in different `cc` modules.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2310:613,reliab,reliable,613,https://psicode.org,https://github.com/psi4/psi4/issues/2310,1,['reliab'],['reliable']
Availability,"The following input, given to me via email, gives a 'bad' dMP2 correction for SAPT:; ```; delta HF,r (2) -18.53850185 [mEh] -11.63308554 [kcal/mol] -48.67282991 [kJ/mol]; delta MP2,r (2) 141.03839795 [mEh] 88.50293088 [kcal/mol] 370.29626281 [kJ/mol]; ```. ```; molecule {; 0 1; F 0.00000000 0.00000000 2.96216000; I 0.00000000 0.00000000 0.96704400; --; 0 1; C 0.00000000 0.00000000 -2.52999200; N 0.00000000 0.00000000 -1.35165800; Na 0.00000000 0.00000000 -4.84283500; units angstrom; no_reorient; symmetry c1; }; memory 20 GiB; set {; basis def2-TZVP; freeze_core true; }; energy('sapt2+dMP2'); energy('mp2',bsse_type=['nocp']); ```. The issue is reproducible for MP2/CCSD post-SCF methods. It is not directly `DF` nor `ghost` atom related. (besides a possibly small error due to https://github.com/psi4/psi4/issues/1968). And not a module specific issue. Using different ECPs (LANL2DZ) or an all electron basis (x2c-SVPall, no rel. effects.) with global `FC=on` seems to give 'better' results in the sense that MP2 interaction energy is negative. One, and perhaps only, issue is `frozen_core`.; Turning `FC = off` only for the supermolecular MP2 part gives OK results. For the NaCN fragment we are freezing 10 electrons, while e.g. ORCA is freezing only 3. ; At least for this case, freezing the Ne-shell by default for Na is not a good choice. Tagging @PeterKraus. `freeze_core -2` makes the SAPT part crash because sth goes wrong for the `IF` fragment (fragment A):; ```; FOCC A = 18446744073709551611; FOCC B = 1; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2012:771,error,error,771,https://psicode.org,https://github.com/psi4/psi4/issues/2012,1,['error'],['error']
Availability,"The following input:. ```; import psi4. mol = psi4.geometry(""""""; He 0 0 0; """"""). wfn = psi4.properties('scf/sto-3g'); ```. fails with the following exception:; ```; Traceback (most recent call last):; File ""/Users/daniel/Gits/psi4/psi4/run_psi4.py"", line 259, in <module>; exec(content); File ""<string>"", line 23, in <module>; File ""/Users/daniel/Gits/psi4/psi4/driver/driver.py"", line 826, in properties; optstash = driver_util._set_convergence_criterion('properties', lowername, 6, 10, 6, 10, 8); File ""/Users/daniel/Gits/psi4/psi4/driver/driver_util.py"", line 78, in _set_convergence_criterion; _method_exists(ptype, method_name); File ""/Users/daniel/Gits/psi4/psi4/driver/driver_util.py"", line 50, in _method_exists; raise ValidationError('%s method ""%s"" is not available.%s' % (Cptype, method_name, alternatives)). ValidationError: Properties method ""scf/sto-3g"" is not available.; ```. How `frequency` uses the code [here](https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L1674) to overcome the issue. The `properties` call in Psi4 is located [here](https://github.com/psi4/psi4/blob/master/psi4/driver/driver.py#L754) and could use a similar fix (or a nice little function to prevent duplication with `frequency`).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/934:766,avail,available,766,https://psicode.org,https://github.com/psi4/psi4/issues/934,2,['avail'],['available']
Availability,The following smoketests are failing on the current master branch; ```; The following tests FAILED:; 	138 - dfmp2-1 (Failed); 	486 - ddd-deriv (Failed); 	491 - psi4numpy-rhf (Failed); 	493 - psi4numpy-rhf-hessian (Failed); 	498 - python-energy (Failed); 	513 - json-schema-1-gradient (Failed); ```; Are these failures reproducible?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3028:309,failure,failures,309,https://psicode.org,https://github.com/psi4/psi4/issues/3028,1,['failure'],['failures']
Availability,"The following snippet of code fails because of the extra space at the end of `'SCF_TYPE '`. ```python; import psi4; psi4.set_options({'SCF_TYPE ' : 'DIRECT'}); ```. This is an innocent error that should be fixed by psi4, or reported back to the user with a readable error message. Simply stripping the option label of left and right spaces would prevent this issue (with no potential side effects). If the option is not found, then psi4 should throw an exception saying something like ""Option `'...'` is not valid."". This is the error message:; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-4-c64c7a4449ad> in <module>; 1 import psi4; 2 ; ----> 3 psi4.set_options({'SCF_TYPE ' : 'DIRECT'}). /usr/local/psi4/lib/psi4/driver/p4util/python_helpers.py in set_options(options_dict, verbose); 444 for k, v, in options_dict.items():; 445 mobj = optionre.match(k); --> 446 module = mobj.group('module').upper()[:-2] if mobj.group('module') else None; 447 option = mobj.group('option').upper(); 448 . AttributeError: 'NoneType' object has no attribute 'group'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2004:185,error,error,185,https://psicode.org,https://github.com/psi4/psi4/issues/2004,3,['error'],['error']
Availability,"The following type of `set` block breaks inputparser in the `quotify` function:. ```; set {; myplugin 'a/c'; myplugin 'a\b'; }; ```. with errors like. ```; Traceback (most recent call last):; File ""<string>"", line 14, in <module>; TypeError: unsupported operand type(s) for /: 'str' and 'str'; ```. and . ```; File ""<string>"", line 15; psi4.set_global_option(""MYPLUGIN"", ""'a""\""b'""); ^; SyntaxError: unexpected character after line continuation character; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/87:138,error,errors,138,https://psicode.org,https://github.com/psi4/psi4/pull/87,1,['error'],['errors']
Availability,"The input; ```; molecule {; 0 2; Li; }. set basis def2-SVP; set reference uhf; set freeze_core True; set scf_type df; set mp2_type df. energy('mp2'); ```; results in a crash:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: There are no occupied orbitals with beta spin. !; ! Error occurred in file: /scratch/psilocaluser/conda- !; ! builds/psi4-multiout_1671346910751/work/psi4/src/psi4/dfmp2/mp2.cc on line: !; ! 206 !; ! The most recent 5 function calls were: !; ! !; !----------------------------------------------------------------------------------!; ```; even though there are occupied orbitals with beta spin; ```; --------------------------------------------------------; DF-MP2 ; 2nd-Order Density-Fitted Moller-Plesset Theory ; UMP2 Wavefunction, 1 Threads ; ; Rob Parrish, Justin Turney, Andy Simmonett, ; Ed Hohenstein, and C. David Sherrill ; --------------------------------------------------------. --------------------------------------------------------; NBF = 9, NAUX = 25; --------------------------------------------------------; CLASS FOCC OCC AOCC AVIR VIR FVIR; ALPHA 1 2 1 7 7 0; BETA 1 1 0 8 8 0; --------------------------------------------------------. ```; A related issue is that the hydrogen also fails with the same error. For hydrogen (or any one-electron system), MP2 should return the HF energy.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2976:280,Error,Error,280,https://psicode.org,https://github.com/psi4/psi4/issues/2976,3,"['Error', 'error']","['Error', 'error']"
Availability,"The input; ```; molecule {; 0 5; Ar; }. set basis sto-3g; set reference rohf; energy('scf'); ```; gives a segfault in both Psi4 1.3.2 as well as the current master.; ```; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00007fce90309923 in psi::scf::HF::find_occupation (this=0x55f4fdfe6140) at /home/work/psi4/psi4/psi4/src/psi4/libscf_solver/hf.cc:463; 463	 for (int i = 0; i < nalpha_; ++i) nalphapi_[pairs_a[i].second]++;; (gdb) bt; #0 0x00007fce90309923 in psi::scf::HF::find_occupation (this=0x55f4fdfe6140) at /home/work/psi4/psi4/psi4/src/psi4/libscf_solver/hf.cc:463; #1 0x00007fce903340b2 in psi::scf::ROHF::form_initial_C (this=0x55f4fdfe6140) at /home/work/psi4/psi4/psi4/src/psi4/libscf_solver/rohf.cc:465; #2 0x00007fce9031193d in psi::scf::HF::guess (this=0x55f4fdfe6140) at /home/work/psi4/psi4/psi4/src/psi4/libscf_solver/hf.cc:1157; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1981:224,fault,fault,224,https://psicode.org,https://github.com/psi4/psi4/issues/1981,1,['fault'],['fault']
Availability,"The input; ```; molecule {; H; H 1 0.60; }. set basis cc-pVDZ; set docc [ 1, 0, 0, 0, 0, 0, 0, 0 ]; # STO-3G active space; set active [1, 0, 0, 0, 0, 1, 0, 0 ]; energy('casscf'); ```; fails with the up-to-date master branch with the error message; ```; Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 519, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 5483, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 153, in mcscf_solver; nci_iter = ciwfn.diag_h(abs(ediff) * 1.e-2, orb_grad_rms * 1.e-3). RuntimeError: ; Fatal Error: DSYEV diagonalizer failed in DETCI SEM!; Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; """"""); core.IO.set_default_namespace(""""); core.set_global_option(""BASIS"", ""cc-pVDZ""); core.set_global_option(""DOCC"", [ 1, 0, 0, 0, 0, 0, 0, 0 ]); core.set_global_option(""ACTIVE"", [1, 0, 0, 0, 0, 1, 0, 0 ]); --> energy('casscf'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: DSYEV diagonalizer failed in DETCI SEM! !; ! Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3096:233,error,error,233,https://psicode.org,https://github.com/psi4/psi4/issues/3096,3,"['Error', 'error']","['Error', 'error']"
Availability,"The laboratory server cannot be connected to the network, so I downloaded Psi4conda-1.3.2-py36-Linux-x86_64.sh from the pis4 official website to install it:; ```; [chenh@Pauling programs]$ ./Psi4conda-1.3.2-py36-Linux-x86_64.sh . Welcome to Psi4conda 1.3.2. Psi4conda will now be installed into this location:; /home/chenh/psi4conda. - Press ENTER to confirm the location; - Press CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:63,down,downloaded,63,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['down'],['downloaded']
Availability,The manual mentioned `ENABLE_CheMPS2` instead of `ENABLE_PCMSolver`. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **User-Facing for Release Notes**; - [x] Fix error in the manual. ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/819:199,error,error,199,https://psicode.org,https://github.com/psi4/psi4/pull/819,1,['error'],['error']
Availability,"The new CMake system documentation is primarily in the comments within the top level CMakeLists.txt. I have noticed an inconsistency that should either be fixed in the build system or removed from the documentation. . The comment section [here](https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L47) seems to imply that you can download libefp/libint, build them, and then provide the directory containing the appropriate directory containing libintConfig.cmake/libefpConfig.cmake to CMake in the following way. ```shell; cmake -H. -Bobjdir … -Dlibint_DIR=/path/to/libint/share/cmake/libint -Dlibefp_DIR=/path/to/libefp/share/cmake/libefp; ```. Then cmake will detect the previously installed libint/libefp and skip their building. . However, this does not completely work. The initial cmake will indicate `found libint`, then when you go to the build directory and run `make` the `libint_DIR `and `libefp_DIR` argurments are not passed on to cmake for psi4_core and the build errors out with the following message:. ```shell; Performing configure step for 'psi4_core'; loading initial cache file /home/amjames2/newriver/psi4-builds/new-debug/psi4_core-prefix/tmp/psi4_core-cache.cmake; -- The C compiler identification is GNU 5.2.0; -- The CXX compiler identification is GNU 5.2.0; -- Check for working C compiler: /home/amjames2/.conda/envs/py3/bin/gcc; -- Check for working C compiler: /home/amjames2/.conda/envs/py3/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /hom",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/516:334,down,download,334,https://psicode.org,https://github.com/psi4/psi4/issues/516,2,"['down', 'error']","['download', 'errors']"
Availability,"The new error printing in #1862 seems to struggle when the message it's trying to print contains newlines. Consider the following input file. ```; molecule {; symmetry c1; N; N 1.500; }; set {; basis cc-pVD; }; energy('scf'); ```. This will raise a syntax error because I have a malformed Z-matrix. The new box will print out. ```; !----------------------------------------------------------------------------------!; ! !; ! Unprocessable Molecule remanents under [psi4, xyz, xyz+, psi4+]: symmetry c1 N !; ! N 1.500 !; ! !; !----------------------------------------------------------------------------------!; ```. where the original error message is the more readable. ```; qcelemental.exceptions.MoleculeFormatError: Unprocessable Molecule remanents under [psi4, xyz, xyz+, psi4+]:; symmetry c1; N; N 1.500; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1867:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/1867,3,['error'],['error']
Availability,"The only remaining test suite failure now is:. ```; 22/140 Test #84: cdomp2-2 .........................***Failed 1.17 sec; 	Nuclear Repulsion Energy (a.u.)...................................PASSED; 	CD-HF Energy (a.u.)...............................................PASSED; 	CD-OMP2 Total Energy (a.u.): computed value (-129.5440268) does not match (-129.5897884) to 6 digits.; Traceback (most recent call last):; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 39, in <module>; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/x86_64-linux-gnu/psi4/driver/p4util/util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	CD-OMP2 Total Energy (a.u.): computed value (-129.5440268) does not match (-129.5897884) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```. _Originally posted by @mbanck in https://github.com/psi4/psi4/issues/1457#issuecomment-451647367_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1461:30,failure,failure,30,https://psicode.org,https://github.com/psi4/psi4/issues/1461,1,['failure'],['failure']
Availability,The page for [obtaining Psi4](https://psicode.org/psi4manual/master/build_obtaining.html) has a mixture of broken links and outdated information. Reported on [forums](https://github.com/psi4/psi4/issues/2125). Obligatory @hokru ping.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2125:228,ping,ping,228,https://psicode.org,https://github.com/psi4/psi4/issues/2125,1,['ping'],['ping']
Availability,"The parameter 2 error always present (test passes), but the failure to converge SVD only seen once so far (test fails) (py39 and mkl 2019.4). Hopefully just an old MKL interface. No difference w/ w/o `MKL_CBWR=AVX`. ```; 354/476 Testing: sapt-exch-disp-inf; 354/476 Test: sapt-exch-disp-inf; Command: ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/bin/python3.7"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/tests/runtest.py"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/tests/sapt-exch-disp-inf/input.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/testresults.log"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:16,error,error,16,https://psicode.org,https://github.com/psi4/psi4/issues/2178,2,"['error', 'failure']","['error', 'failure']"
Availability,"The test `pywrap-opt-sowreap` is failing for me with the following error message:. ```; Performing finite difference calculations; 5 displacements needed ...; An error has occurred Py-side; Traceback:; <type 'exceptions.TypeError'>: 'float' object is not iterable: File ""<string>"", line 25, in <module>. File ""/home/avcopan/Documents/code/github/psi4/share/python/driver.py"", line 1158, in optimize; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs). ```. I did some poking around and it looks like the problem is that this code (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1153)):. ```; def optimize(name, **kwargs):; # ...; G, wfn = gradient(name, return_wfn=True, molecule=moleculeclone, **kwargs); psi4.set_gradient(G); thisenergy = psi4.get_variable('CURRENT ENERGY'); ```. breaks when gradient is called in sow-reap mode because it returns `0.0` rather than a matrix-wavefunction tuple (see [here](https://github.com/psi4/psi4/blob/master/share/python/driver.py#L843)):. ```; def gradient(name, **kwargs):; # ...; if dertype == 1:; # ...; else:; # ...; if (opt_mode.lower() == 'sow'):; optstash.restore(); return 0.0; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/291:67,error,error,67,https://psicode.org,https://github.com/psi4/psi4/issues/291,2,['error'],['error']
Availability,"The test writing documentation is disorganized. I've been developing with Psi for years, and _I_ have a hard time reading it. I propose that the documentation be restructured along the following lines:. - Overview; - Why do we have tests; - When do I have to make a test for my PR; - When to use Psithon when to use PsiAPI; - Writing Tests; - Structure of a Test; - Do the necessary electronic structure; - Have compare functions; - What makes a good test?; - Quick; - Terse; - Spell out the point of the test; - Psithon Specific; - Create directory w/ CMake File; - Labels; - Update master Cmake; - PsiAPI Specific; - Templates; - How to test error handling; - Common Marks. The current version doesn't separate out the test writing from the details of Psithon test formatting.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2396:644,error,error,644,https://psicode.org,https://github.com/psi4/psi4/issues/2396,1,['error'],['error']
Availability,"The third Travis test is timing out too much. This can be traced to the painfully slow download time for the GCC compiler. We have plans to replace this test with some plugin validation, using native GCC compilers to avoid the timeouts. For now, we'll just nuke it to allow the backlog of PRs through. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1552:87,down,download,87,https://psicode.org,https://github.com/psi4/psi4/pull/1552,1,['down'],['download']
Availability,"The up-to-date master branch fails to configure in Fedora; ```; $ cmake ..; CMake Error at CMakeLists.txt:5 (cmake_policy):; Policy ""CMP0144"" is not known to this version of CMake.; $ rpm -q cmake; cmake-3.27.7-1.fc39.x86_64; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3092:82,Error,Error,82,https://psicode.org,https://github.com/psi4/psi4/issues/3092,1,['Error'],['Error']
Availability,"The user facing error message for PSIO could be improved. A general advice after an PSIO error of sth like: 'check your scratch directory location and how much space you got', could go a long way. Starting of discussion in #1959 (comments copied over). > @JonathonMisiewicz commented 41 minutes ago; @hokru, correct me if I'm wrong, but isn't it fairly formulaic at this point to ask people to check how much memory they gave Psi and then check their scratch directory in the face of a PSIO read error? If it is, I have half a mind to update the error message with this advice. I'd need to check, but I think this is doable, and it would save us a lot of questions. > hokru commented 23 minutes ago; Perhaps a good idea. PSIO should mainly be disk issues IMO. And only memory issues if the C code made bad estimates, right? Unless there are there virtual files that are written to RAM.; PSIO_ERROR: 12 (error writing to file) should in most cases be a disk space issue. > @TiborGY commented 6 minutes ago; Well, I have seen some systems where /tmp is a ramdisk. But usually, if that is the case, the maximum size of /tmp is quite limited. ramdisks or not is the same, I think. Disk is full and the PSI4 memory option has no influence.; But a trend of having `/tmp` as ramdisk questions PSI4's choice of default scratch directory, because ramdisk space does not take away the OS max ram, right? There could be unexpected memory allocation errors for users.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1965:16,error,error,16,https://psicode.org,https://github.com/psi4/psi4/issues/1965,6,['error'],"['error', 'errors']"
Availability,"The value of the 'mem' option was conflated with that for the 'dboc' option, leading to a list directed I/O error at runtime when setting memory available to a 6 digit (or more) number. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix printout of `fort.56` file in `mrcc.cc`. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1606:108,error,error,108,https://psicode.org,https://github.com/psi4/psi4/pull/1606,2,"['avail', 'error']","['available', 'error']"
Availability,"There are some issues with the `liboptions` documentation. First, the source should mention that there's a whole page about the module in the docs. Most modules don't have their own page, so I completely missed it. Now for my more detailed grievances with the `liboptions` page:. I'm sure there are more grievances, but obvious ones:; - The overview uses the passive voice. ""The input is parsed for these options, and defaults are assigned for those keywords not specified by the user."" This would be much clearer written as ""When Psi parses the inputs, Psi assigns each option its user-specified value (if provided) and its default otherwise.""; - ""Array-type options are not available in python."" This is false.; - There's no mention of side effects of the getter functions. This was a major ""gotcha"" for me: getting an SCF option set that to be the active module and interfered with other modules.; - There's no mention of the currently active module mechanism. At all.; - Discussion about _when_ and _which_ options are added is vague. It sounds like the options object only has some options at a time, but it's not clear when these are added/removed.; - `read_globals` appears in a code snippet, but is not described.; - ""The way to do this is to isolate and nullify any changes to options made by the code, the difference between [a] and [c]. "" is unclear.; - ""C-side, there is no concern since options are essentially read-only within the modules."" This is false. DCT for sure changes options in the module.; - ""Py-side is another matter since the driver’s role is to take terse instructions from the user and translate those into instructions to the C++ modules, usually through manipulation of options."" This is vague. The previous two sentences being baffling doesn't help.; - ""In order to preserve effective definition [a]"" What does it mean to preserve a definition? ; - The paragraph containing that sentence needs to explain OptionState. Instead, that's done much later.; - The ""Reading O",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2405:676,avail,available,676,https://psicode.org,https://github.com/psi4/psi4/issues/2405,1,['avail'],['available']
Availability,"There have been reports of troubled SCF optimizations from within @fevangelista's group. As an attempt to put these to rest, I'll be implementing [EDIIS](https://aip.scitation.org/doi/pdf/10.1063/1.1470195) and making DIIS + EDIIS the default. DIIS + EDIIS is a standard SCF convergence technique, used to great effect by a certain code I'm not going to name. Welcome to 2021, Psi4. Due to potential merge conflicts with #2225, that PR should come in first. Because [this week is the target for 1.4](https://github.com/psi4/psi4/pull/2154#issuecomment-870728272), this is slated for 1.5. Pinging @jturney and @susilehtola as other interested parties.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2235:588,Ping,Pinging,588,https://psicode.org,https://github.com/psi4/psi4/issues/2235,1,['Ping'],['Pinging']
Availability,"This adds a script to the test pywrap-freq-e-sowreap (re #168) which is executed by runtest.py. It runs the intermediate files created by the first psi4 invocation and the final file after appending the tests to it. The output is recorded in testresults.log; it will register the test as a failure if any of the intermediate psi4 invocations return an error code, or if any of the reference value-checks fail. For a new test to make use of the script the label `sowreap` should be added to `add_regression_test` macro in the CMakeLists.txt file and the script should be copied into that test's directory.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/192:290,failure,failure,290,https://psicode.org,https://github.com/psi4/psi4/pull/192,2,"['error', 'failure']","['error', 'failure']"
Availability,"This is a short summary on how to get started with PSI4 and Apple Silicon; ---. Overview:. - Python/Package management options:; - osx-arm64 conda-forge environment: https://github.com/conda-forge/miniforge (untested, limited packages); - homebrew . - BLAS/LAPACK options: ; - Apple's Accelerate: very fast, no inherent threading. But thread-safe.; - OpenBLAS: available on conda-forge and homebrew. _No optimized kernels for M1_. Much slower than Accelerate Framework. (see https://github.com/xianyi/OpenBLAS/issues/2814); - ???; ---. ## homebrew:; requirred brew packages: `cmake eigen numpy`; for OpenMP: `libomp`; optional: `doxygen jupyterlab pytest gcc` (gcc to get a Fortran compiler); Note: numpy will come with a non-threading OpenBLAS library. ### psi4 python packages:; - `pip3 install pydantic pint py-cpuinfo psutil`. ### docs:; - pip3 install Sphinx nbsphinx python-graphviz sphinx-autodoc-typehints sphinx-automodapi ; - custom theme from `git clone https://github.com/psi4/sphinx-psi-theme.git` (`pip3 install .`); - dont get `sphinx-doc` from brew, it has python3.10 dependency. ### basic build with Accelerate Framework and homebrew python:; - `cmake -H. -Bobjdir -DPython_EXECUTABLE=/opt/homebrew/bin/python3 -DCMAKE_INSTALL_PREFIX=<custom>`; - `export CPLUS_INCLUDE_PATH=/opt/homebrew/include` (for libint2 to find a header); - If `libomp` is found correctly, OpenMP is enabled but only explicit C-side openmp sections are threaded AFAIK, not blas.; - builds everything from scratch and _wow it's fast!_. ### caveats; - Mismatch between numpy(=openblas) and psi4(=Accelerate) libraries.; ---; I may have missed a detail.. These notes will be updated over time.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333:361,avail,available,361,https://psicode.org,https://github.com/psi4/psi4/issues/2333,1,['avail'],['available']
Availability,"This is not a psi4 issue, but users are affected by it. Something is off with the new single dynamic library from intel and gcc + mkl2017 building. Essentially, sometimes you can get over subscription (nested OpenMP+MKL threading), and sometimes threading does not work at all. Through trial and error I found the following env variables set the expected behavior:. ```; export MKL_THREADING_LAYER=GNU; export MKL_INTERFACE_LAYER=GNU; export OMP_NESTED=""FALSE"" <-- supposed to be libgomp default, but is not?; ```. Maybe not all 3 are needed, or there is some other flag. I was just happy to get the proper behavior. I tested gcc 4.9.4/6.3 and MKL2017 and MKL2017.2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/671:296,error,error,296,https://psicode.org,https://github.com/psi4/psi4/issues/671,1,['error'],['error']
Availability,"This is the continuation of a discussion that started in another issue (#504). Formatted checkpoint files or Molden files are not great as a container format. It makes sense to have them as an output format (because some other programs can already read them.) However, they are not suitable as an extensible container format:. 1) They lack an open way of extending/improving the format in future.; 2) They are just defined ad hoc as the file format that is being produced by some code.; 3) There is no unambiguous document specifying these formats. A format based on HDF5 would make more sense. It has its deficiencies too unfortunately: the format specification is very complex, with only one (open source) library implementing it. Something simpler would be nice, e.g. a ZIP file containing the following would make a lot of sense:. - An index file (XML?) with metadata for all the data in the archive.; - One file per (big) array: binary data with some header to specify byte order, data type, ... e.g. the npy format. (See https://docs.scipy.org/doc/numpy-dev/neps/npy-format.html); - Other text or log files. This similar to the opendocument specification, where it seems to survive for many years now. The main disadvantage of such a zip file, compared to HDF5, is that you cannot easily access a part of an array without unzipping the entire array. You can however access one entire array without unzipping the other ones.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/562:89,checkpoint,checkpoint,89,https://psicode.org,https://github.com/psi4/psi4/issues/562,1,['checkpoint'],['checkpoint']
Availability,"This is the list of issues tied into wavefunction_pass that should be cleared up before the 1.0 release.; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet (SCF methods can only take a molecule at the moment. `ref_wfn` supersedes `molecule` in all other methods.).; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] Will just pass through the reference wavefunction with a warning; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used (Thats fine, see above).; - [ ] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code. (Moved to another ticket); - [ ] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow. (Moved to another ticket); - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes (see #249).; - [x] DF and RI calls should soft fail with a proper error message.; - [x] Cubeprop, Molden, OEProp etc functions should fail better when not passed a wavefunction.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/259:935,toler,tolerant,935,https://psicode.org,https://github.com/psi4/psi4/issues/259,2,"['error', 'toler']","['error', 'tolerant']"
Availability,"This issue is intended more as a discussion, than a real issue. At the moment it is not possible to call Psi4 under MPI with more than one process per node because of [this](https://github.com/psi4/psi4/blob/fe3ab0d351e05276185ad838f3bcf2c0321be2fe/psi4/driver/procedures/proc.py#L1340). Basically this creates a file that has a non-unique name on each process and then when it goes to delete the file each process deletes the same file leading to an error for every process after the first one. Although this could be fixed easily (either only write to some master process or ensure that the filename is unique. The latter is easily done [in python](http://stackoverflow.com/questions/2961509/python-how-to-create-a-unique-file-name) and [in C++](http://en.cppreference.com/w/cpp/io/c/tmpnam), or by using the process ID) this has been a problem before and is likely to be a problem again, hence I am hoping to reach a more permanent solution. To me the most obvious solution is to make a file writer (stream writer is even better as it then also works for printing, in turn killing two birds with one stone) object/library that handles all read/writes and does so in a way that will not interfere with MPI. In theory `libpsio` could be used for this, but it would have to be extended to writing other types of files aside from binary (I'm under the impression that it only writes binary files). Thoughts?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/548:451,error,error,451,https://psicode.org,https://github.com/psi4/psi4/issues/548,1,['error'],['error']
Availability,"This issue is similar to #3084. For psi4 installed via conda/mamba (both 4.18.2 and 4.19) on an hpc system that has a symlink for the /home directory (the same hpc system in the prior issue), psi4 has trouble resolving paths that don't call `.resolve()`. while the changes made in response to #3084 mostly fix the issue, there appears to be two other places `.resolve()` should be added:. https://github.com/psi4/psi4/blob/e105cc2346fba36ccacb77bf8944a3dcf6c097f2/psi4/__init__.py#L47-L48. The full error is below:; ```; [2024-01-25 07:17:41 EST] INFO: qcfractalcompute.config: Reading configuration data from configs/config.3049902-1.yaml; Traceback (most recent call last):; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <module>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/lila/home/iacovec/miniforge3/envs/qcfractalcompute/lib/python3.12/site-packages/qcfractalcompute/run_scripts/qcengine_list.py"", line 12, in <dictcomp>; progs = {x: qcengine.get_program(x).get_version() for x in qcengine.list_available_programs()}; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 111, in get_version; raise TypeError(f""Error {rc} retrieving Psi4 version: stdout: {so}, stderr: {se}""); TypeError: Error 1 retrieving Psi4 version: stdout: , stderr: Traceback (most recent call last):; File ""/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/bin/psi4"", line 213, in <module>; import psi4 # isort:skip; File ""/lila/home/iacovec/miniforge3/envs/qcfractal-worker-psi4-18.2/lib/python3.10/site-packages/psi4/__init__.py"", line 64, in <module>; raise KeyError(f""Unable to read the Psi4 Python folder - check the PSIDATADIR environmental variable - current value is {str(data_dir)}""); KeyError: 'Unable to read the Psi4 Python folder - check the PSIDATADIR environmental va",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3126:499,error,error,499,https://psicode.org,https://github.com/psi4/psi4/issues/3126,1,['error'],['error']
Availability,"This might be rather an issue for https://github.com/piecuch-group/cct3 but will affect psi4 users nonetheless. The following is a minimal input:; ```; import cct3. set {; basis cc-pVDZ; ints_tolerance 1e-11; }. molecule eins {; units bohr; symmetry c1; h -1.000000000000 -2.414213562373 0.000000000000; h -1.000000000000 2.414213562373 0.000000000000; h 1.000000000000 -2.414213562373 0.000000000000; h 1.000000000000 2.414213562373 0.000000000000; }. molecule zwei {; units bohr; symmetry c1; h -2.514213562373 -1.000000000000 0.000000000000; h -2.514213562373 1.000000000000 0.000000000000; h 2.514213562373 -1.000000000000 0.000000000000; h 2.514213562373 1.000000000000 0.000000000000; h -1.000000000000 -2.414213562373 0.000000000000; h -1.000000000000 2.414213562373 0.000000000000; h 1.000000000000 -2.414213562373 0.000000000000; h 1.000000000000 2.414213562373 0.000000000000; }. energy(""cr-cc(2,3)"",molecule=eins); clean(); energy(""cr-cc(2,3)"",momlecule=zwei); ```. The error is:; ```; (base) kruse@sphinx1 /scratch/kruse/CCT3 $ psi4.git -v -s . -n 16 input.dat; forrtl: severe (104): incorrect RECL= specifier value for connected file, unit 250, file /scratch/kruse/CCT3/PA; Image PC Routine Line Source; libifcoremt.so.5 00002AD86592CE75 for__io_return Unknown Unknown; libifcoremt.so.5 00002AD8659522E0 for_open Unknown Unknown; cct3.so 00002AD865620EDF integrals_mp_load Unknown Unknown; cct3.so 00002AD86562C3EB solver_mp_solve_c Unknown Unknown; cct3.so 00002AD8655F75A6 driver_mp_run_cc_ Unknown Unknown; cct3.so 00002AD86563683E cc_ Unknown Unknown; cct3.so 00002AD85AD0AAE1 cct3 Unknown Unknown; ```. The `PA` file is opened for _writing_ with a record length `recl` using orbital dimensions.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2009:981,error,error,981,https://psicode.org,https://github.com/psi4/psi4/issues/2009,1,['error'],['error']
Availability,"This problem was already mentioned in passing here: https://github.com/psi4/psi4/issues/662#issuecomment-475861476. This is a simple example input file showing the problem:. ```; molecule {; H; }. set {; scf_type pk; basis ano-rcc; relativistic x2c; reference uhf; }. energy('hf'); ```. I have set my `$PSIPATH` to a directory containing the basis set file (downloaded from EMSL):. ```bash; ll $PSIPATH; total 2.1M; drwxr-xr-x. 2 toon toon 4.0K Apr 29 17:13 .; drwxr-xr-x. 7 toon toon 4.0K Apr 29 16:34 ..; -rw-r--r--. 1 toon toon 2.1M Apr 29 15:49 ano-rcc.gbs; ```. When running Psi4 on this input, I get the following error message:. ```; Traceback (most recent call last):; File ""/home/toon/miniconda3/envs/p4dev/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/driver.py"", line 561, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 2045, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 1281, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/procrouting/proc.py"", line 1056, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/p4util/python_helpers.py"", line 80, in _pybuild_basis; mol.to_dict(), key, resolved_target, fitrole, other, return_dict=True, return_atomlist=return_atomlist); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 679, in pyconstruct; verbose=verbose); File ""/home/toon/miniconda3/envs/p4dev/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 838, in construct; filename = cls.make_filename(basgbs); File ""/home/toon/miniconda3/envs/p4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1613:358,down,downloaded,358,https://psicode.org,https://github.com/psi4/psi4/issues/1613,2,"['down', 'error']","['downloaded', 'error']"
Availability,This simple run fails to converge in Psi4 1.3.2; ```; molecule {; pubchem:methimazole; }. set basis pcseg-0; optimize('wb97x-d'); ```; The error is; ```. Back-transformation to cartesian coordinates...; The INTCO_EXCEPTion handler:; TORS::compute_val: unable to compute torsion value; Dynamic level is 0.; exc.g_really_quit() is 0. **** Optimization has failed! (in 1 steps) ****; --------------------------; OPTKING Finished Execution ; --------------------------; Removing binary optimization data file.; Cleaning optimization helper files. PsiException: Could not converge geometry optimization in 0 iterations.; ```,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2208:139,error,error,139,https://psicode.org,https://github.com/psi4/psi4/issues/2208,1,['error'],['error']
Availability,"Time to start working on the Psi4 1.0 release notes, #hype! Please read through and update as needed @psi4/p4manage. Loosely organized at the moment, feel free to re-do. These notes span from the Psi4 beta5 release to the official Psi4 1.0 release.; ## User improvements; - Created binary linux distribution of Psi4 for users through conda; - Automatic extrapolations at the driver layer: `energy('MP2/aug-cc-pv[D,T]Z')`,`optimize('SCF/cc-pV[D,T,Q]Z')`.; - New N-Body wrapper capable of computing non-CP, CP and VMFC energies and gradients. The `cp` wrapper has been deprecated and CP can now be called as an optional argument to an energy call: `energy('SCF/cc-pVDZ', bsse_type='CP')`.; - New cmake build system for developers; - More sophisticated user input for one-electron property analysis; - More user-friendly error checking: If the user specifies an unknown keyword, the program will print that this keyword is unknown and will suggest possible alternatives that are close in spelling; - Added code to output cube files for orbitals, densities, etc.; - Added automatic defaults for auxiliary basis sets; - Improvements to the reporting of SAPT summary information, and enhancements to obtain SAPT methods reported in doi: 10.1063/1.4867135.; - The `properties` call now has a uniform interface for SCF, DFT, MP2, CI, MCSCF methods; ## Infrastructure improvements; - The Wavefunction object is now returnable for all psi4 methods. This Wavefunction object can be passed to other codes or directly manipulated; - Driver has been refactored into a new recursive scheme (as opposed to the previous nested scheme) to better facilitate more complex calls; - The MOLDEN writer now accepts density matrices for writing natural orbitals; - Added command-line arguments -l to specify PSIDATADIR (for developers) and -s to specify location of scratch directories (overrides PSI_SCRATCH); - Internal upgrades to the direct product decomposition library, libdpd, especially regarding density fitting; - Al",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367:818,error,error,818,https://psicode.org,https://github.com/psi4/psi4/issues/367,1,['error'],['error']
Availability,"Transferred from [forums](http://forum.psicode.org/t/fatal-error-a-matrix-is-not-spd/1471). Awaiting a more complete report from user, but we can say some things already. A user is told that one of their matrices is not ""SPD"" during an open-shell SAPT0 computation, and the computation quits. The relevant lines in the code are [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libsapt_solver/usapt0.cc#L1462-L1466). I assume SPD is short for semi-positive definite. Action Items:; First, we need SAPT developers to translate the error message. Without that, the fix could be anything from writing an error message that tells the user what if anything they can do, or it could involve a change in the USAPT logic.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1682:59,error,error-a-matrix-is-not-spd,59,https://psicode.org,https://github.com/psi4/psi4/issues/1682,3,['error'],"['error', 'error-a-matrix-is-not-spd']"
Availability,"Transferred from the [forums](http://forum.psicode.org/t/regarding-cisd-calculation/1474). A user reported a CISD computation on a system with 190 orbitals and C2v symmetry that quit after ""Setting up CI strings"" with absolutely no error message. I reproduced this with a post-1.3.2 dev version of Psi on my cluster, in serial with 30 GB. (The original reporter is using an antique version of Psi.). @dgasmith pointed out that DETCI may have problems with a system of this size, but I'm not familiar enough with DETCI's computational costs to know if those problems would crash DETCI. At minimum, there should be an error message printed out. If there is an actual DETCI bug, that should ideally be fixed. My apologies to the person who has to do that.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1685:232,error,error,232,https://psicode.org,https://github.com/psi4/psi4/issues/1685,2,['error'],['error']
Availability,"Transferred from the [forums](http://forum.psicode.org/t/sapt-dft-issues/1444). A user reports an SCF convergence failure during a SAPT(DFT) computation. While this _could_ be an example of a routine SCF convergence failure, the fact that it appears during SAPT(DFT) combined with how spectacular the convergence failure _is_ have me suspecting it's something more. When I run the user's input file on 1.3.2 release (see forum post), the failing SCF has iterations like this:; ```; @DF-RKS iter SAD: -2.88905500214392 -2.88906e+00 0.00000e+00 ; @DF-RKS iter 1: 0.79355642730661 3.68261e+00 8.89827e-02 DIIS ; @DF-RKS iter 2: -2.69913194172793 -3.49269e+00 1.70278e-02 DIIS ; @DF-RKS iter 3: 0.05174993763519 2.75088e+00 1.04154e-02 DIIS ; @DF-RKS iter 4: 4.56710002468099 4.51535e+00 8.67682e-02 DIIS ; @DF-RKS iter 5: 4.56708994805846 -1.00766e-05 8.67628e-02 DIIS ; @DF-RKS iter 6: 4.56706596773139 -2.39803e-05 8.67500e-02 DIIS; ```. The usual convergence tricks - playing with DIIS settings and damping - still leave a problem. Notice that iterations 1, 3, and 4 are terrible, going up in energy by _multiple Hartrees_ even after what should be a decent guess. The user reports that they are observing such problems for more complicated systems, but can reduce the problem to this two atom problem. You'd need to ask them to get the original systems, but this seems like a good starting point.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1684:114,failure,failure,114,https://psicode.org,https://github.com/psi4/psi4/issues/1684,3,['failure'],['failure']
Availability,"Tried to run the following keywords, copied directly from examples except for the modification of basis sets & functionals (omitted lengthy molecule which is fine outside of using cubeprop):. `memory 8 Gb. set basis 6-31G; set scf_type df; set freeze_core True; set cubeprop_tasks ['frontier_orbitals']. E, wfn = optimize('b3lyp', return_wfn=True); cubeprop(wfn); `; The following error ensues post successful optimisation:. `Traceback (most recent call last):; File ""/usr/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 65, in <module>; File ""/usr/lib/psi4/driver/p4util/util.py"", line 101, in cubeprop; cp.compute_properties(). RuntimeError: ; Fatal Error: FRONTIER_ORBITALSis an unrecognized PROPERTY_TASKS value; Error occurred in file: /build/psi4-XGp1km/psi4-1.1/psi4/src/psi4/libcubeprop/cubeprop.cc on line: 196; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::CubeProperties::compute_properties(); pybind11::cpp_function::initialize<pybind11::cpp_function::initialize<void, psi::CubeProperties, , pybind11::name, pybind11::is_method, pybind11::sibling, char [10]>(void (psi::CubeProperties::*)(), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [10])::{lambda(psi::CubeProperties*)#1}, void, psi::CubeProperties*, pybind11::name, pybind11::is_method, pybind11::sibling, char [10]>(pybind11::cpp_function::initialize<void, psi::CubeProperties, , pybind11::name, pybind11::is_method, pybind11::sibling, char [10]>(void (psi::CubeProperties::*)(), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [10])::{lambda(psi::CubeProperties*)#1}&&, void (*)(psi::CubeProperties*), pybind11::name const&, pybind11::is_method const&, pybind11::sibling const&, char const (&) [10])::{lambda(pybind11::detail::function_record*, pybind11::handle, pybind11::detail::funct",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1722:381,error,error,381,https://psicode.org,https://github.com/psi4/psi4/issues/1722,3,"['Error', 'error']","['Error', 'error']"
Availability,"Trying `psi4 -t` gave this error:. ```; Git: Rev {master} b04cdf9 dirty; ...; Psi4 started on: Wed Feb 24 14:56:44 2016. Process ID: 2767; PSI4DATADIR: /home/eric/data/opt/apps/python/anaconda2/share/psi4; Memory level set to 256.000 MB; Traceback (most recent call last):; File ""/home/eric/data/opt/apps/python/anaconda2/share/psi4/python/interactive.py"", line 3, in <module>; import readline # optional, will allow Up/Down/History in the console; ImportError: libncursesw.so.5: cannot open shared object file: No such file or directory; ```. which was fixed by installing the latest ncurses package.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/289:27,error,error,27,https://psicode.org,https://github.com/psi4/psi4/issues/289,2,"['Down', 'error']","['Down', 'error']"
Availability,"Trying out the SCF plugin with the current master branch I get the error; ```; $ psi4 h2o.in; Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 519, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/openorbital/openorbital/psi4/scf/myplugin/pymodule.py"", line 60, in run_myplugin; psi4.set_scalar_variable('CURRENT ENERGY', myplugin_wfn.energy()). AttributeError: module 'psi4' has no attribute 'set_scalar_variable'. Printing out the relevant lines from the Psithon --> Python processed input file:; H 0.866811766153153 0.601435735686679 0.000000000000000; H -0.866811766153153 0.601435735686679 0.000000000000000; """"""); core.IO.set_default_namespace(""""); core.set_global_option(""BASIS"", ""pcseg-1""); --> energy('myplugin'). !-------------------------------------------------------!; ! !; ! module 'psi4' has no attribute 'set_scalar_variable' !; ! !; !-------------------------------------------------------!. Segmentation fault (core dumped); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3093:67,error,error,67,https://psicode.org,https://github.com/psi4/psi4/issues/3093,2,"['error', 'fault']","['error', 'fault']"
Availability,Trying to compile current trunk with. ```; ./setup --max-am-eri 7 --cc gcc --cxx g++ --fc gfortran --prefix /global/home/groups-sw/mhg/psi4/install --plugins --gdma on --pcmsolver on --chemps2 on --ambit on objdir -DPYTHON_INTERPRETER=${PYTHON_DIR}/bin/python -DENABLE_XHOST=OFF; ```. fails with an OpenMP linking error in CheMPS2. ../../../interfaces/chemps2/install/lib/libchemps2.a(CASPT2.cpp.o): In function `_ZN7CheMPS26CASPT210make_AA_CCEbd._omp_fn.29':; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5457: undefined reference to`omp_get_num_threads'; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5457: undefined reference to `omp_get_thread_num'; ../../../interfaces/chemps2/install/lib/libchemps2.a(CASPT2.cpp.o): In function`_ZN7CheMPS26CASPT210make_AA_CCEbd._omp_fn.30':; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5473: undefined reference to `omp_get_num_threads'; /global/home/groups-sw/mhg/psi4/psi4.git/objdir/interfaces/chemps2/src/interface_chemps2/CheMPS2/CASPT2.cpp:5473: undefined reference to`omp_get_thread_num'; ../../../interfaces/chemps2/install/lib/libchemps2.a(CASPT2.cpp.o): In function `_ZN7CheMPS26CASPT210make_AA_CCEbd._omp_fn.31':. and a bunch of other missing OpenMP symbol errors from libchemps2.a.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/452:314,error,error,314,https://psicode.org,https://github.com/psi4/psi4/issues/452,2,['error'],"['error', 'errors']"
Availability,"Trying to install psi4 on MacOS. . I looked at this issue as a starting point #2024. I used the following procedure to install psi4. `conda create -n psi4env python=3.7`; `mamba install ambit=0.5.1=h7778601_3 -c psi4`; `mamba install chemps2=1.8.9 -c psi4`; `mamba install libint=1.2.1 -c psi4`; `mamba install libxc=4.3.4 -c psi4`; `mamba install simint=0.7 -c psi4`; `mamba install psi4=1.4a2.dev1084+9b60184=py37h55c4972_2 -c psi4/label/nofortran`. Then, I tried to test the installation using `psi4 --test`; It gave me this error:. ```; Traceback (most recent call last):; File ""/Users/kianpu/miniconda3/envs/psi4env_37/lib//python3.7/site-packages/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: dlopen(/Users/kianpu/miniconda3/envs/psi4env_37/lib//python3.7/site-packages/psi4/core.cpython-37m-darwin.so, 0x0002): Library not loaded: @rpath/libgg.1.dylib; Referenced from: /Users/kianpu/miniconda3/envs/psi4env_37/lib/python3.7/site-packages/psi4/core.cpython-37m-darwin.so; Reason: tried: '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/python3.7/site-packages/psi4/../../../libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/python3.7/site-packages/psi4/../../../libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/bin/../lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/lib/libgg.1.dylib' (no such file), '/Users/kianpu/miniconda3/envs/psi4env_37/bin/../lib/libgg.1.dylib' (no such file), '/usr/local/lib/libgg.1.dylib' (no such file), '/usr/lib/libgg.1.dylib' (no such file). During handling of the above ex",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2578:528,error,error,528,https://psicode.org,https://github.com/psi4/psi4/issues/2578,1,['error'],['error']
Availability,"Trying to run a fluorine-containing molecule (HF) with wB97X-3c in Psi4 1.9.1 results in the following error:. ```sh; psi4.driver.qcdb.exceptions.BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['F']; Basis Sets: [('VDZP', 'VDZP', None)]; File Path: /private/var/folders/_v/ns6m8tr96_qfytmb7tz4gv8r0000gn/T/tmp3ruilqbj, /private/var/folders/_v/ns6m8tr96_qfytmb7tz4gv8r0000gn/T/tmp3ruilqbj, /Users/cwagen/.../share/psi4/basis; Input Blocks:; ```. Looking at where the vDZP basis set is defined in Psi4 ([link](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/vdzp.gbs)), there's a note at the top that fluorine was removed owing to a missing ECP projector:. ```; !----------------------------------------------------------------------; ! Basis Set Exchange; ! Version v0.9.1+53.gf8c059b.dirty; ! https://www.basissetexchange.org; !----------------------------------------------------------------------; ! Basis set: vDZP; ! Description: Small basis set used in wB97X-3c method; ! Role: orbital; ! Version: 1 (); ! From SuppMat of https://doi.org/10.1063/5.0133026; ! then converted with https://github.com/MolSSI-BSE/basis_set_exchange-historical/commit/f84314b31bc0e30e5a29c274684d6e9ff612466a#diff-7686a8c951e2392d87a59f8d89e5c75f18d2d35c60683ed5b52910076840569c; ! then removed Fluorine b/c the ECP lacks a projector; ! then added with basis_set_exchange.curate.add_basis(name=""vDZP"") to a local repo; ! then converted with `bse get-basis vDZP psi4`; !----------------------------------------------------------------------; ```. Marcel Muller (@marcelmbn), the original author of the wB97X-3c paper, wrote in [an analogous PySCF issue](https://github.com/pyscf/pyscf/pull/2085#issuecomment-1951321264) (pyscf/pyscf#2085) that this issue can be resolved:. > There are two ways to solve this problem (at least as far as I can see):; > Add a ""dummy"" d-type projector with coefficient 0.0, so that the ascending order of pr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3205:103,error,error,103,https://psicode.org,https://github.com/psi4/psi4/issues/3205,1,['error'],['error']
Availability,"UTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAPACK;FC_SYMBOL=2;ENABLE_CHEMPS2=1;HAVE_MM_MALLOC_H; -- Configuring done; -- Generating done; -- Build files have been written to: /home/seba/software/psi4-0.5/objects; ```. Point where it fails:. ```; [ 45%] Building CXX object src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(154): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::iterator_category iterator_category;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instan",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:6211,error,error,6211,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,Unexpected error when using basis set aug-cc-pv5z for He-NH3 interaction.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2989:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/2989,1,['error'],['error']
Availability,Unexpected error when using basis_guess with basis set,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/484:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/484,1,['error'],['error']
Availability,Unicode error under windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['error'],['error']
Availability,"Unknown Unknown; python3.7 000056310E0CB107 _PyFunction_FastC Unknown Unknown; python3.7 000056310E1334B6 _PyEval_EvalFrame Unknown Unknown; python3.7 000056310E07A829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000056310E07B714 PyEval_EvalCodeEx Unknown Unknown; python3.7 000056310E07B73C PyEval_EvalCode Unknown Unknown; python3.7 000056310E192F14 Unknown Unknown Unknown; python3.7 000056310E19E29D PyRun_StringFlags Unknown Unknown; python3.7 000056310E142EB4 Unknown Unknown Unknown; python3.7 000056310E0CB789 _PyMethodDef_RawF Unknown Unknown; python3.7 000056310E0CBA31 _PyCFunction_Fast Unknown Unknown; python3.7 000056310E137795 _PyEval_EvalFrame Unknown Unknown; python3.7 000056310E07A829 _PyEval_EvalCodeW Unknown Unknown; python3.7 000056310E07B714 PyEval_EvalCodeEx Unknown Unknown; python3.7 000056310E07B73C PyEval_EvalCode Unknown Unknown; python3.7 000056310E192F14 Unknown Unknown Unknown; python3.7 000056310E19D331 PyRun_FileExFlags Unknown Unknown; python3.7 000056310E19D523 PyRun_SimpleFileE Unknown Unknown; python3.7 000056310E19E655 Unknown Unknown Unknown; python3.7 000056310E19E77C _Py_UnixMain Unknown Unknown; libc-2.26.so 00007F895E88906A __libc_start_main Unknown Unknown; python3.7 000056310E142FF0 Unknown Unknown Unknown; Aborted; ```; ; </details>. I first actually tried to reproduce this using the very convenient MyBinder link on the front page in python, rather than with a psithon input file, but unfortunately because it's an uncaught C++ exception that doesn't actually get translated into a python exception, it just kills the jupyter kernel and no error message is reported to the jupyter client running in the browser. Appologies in advance if this is a duplicate bug report. The fact that the grid is missing is okay; that's #827 IIUC. But if possible, -- especially for usage of the Python interface rather than the command line program -- it would might be better if these exceptions were translated into python rather than such violent crashes.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2080:5037,error,error,5037,https://psicode.org,https://github.com/psi4/psi4/issues/2080,1,['error'],['error']
Availability,"Using 080dba6, this input, which doesn't produce any wavefunction data,; ```python; import json. import numpy as np. import psi4; import qcelemental as qcel. bohr2ang = qcel.constants.bohr2angstroms. geometry = (; np.asarray(; [; 0.0,; 0.0,; -0.1294769411935893,; 0.0,; -1.494187339479985,; 1.0274465079245698,; 0.0,; 1.494187339479985,; 1.0274465079245698,; ]; ); / bohr2ang; ). json_input = {; ""schema_name"": ""qc_schema_input"",; ""schema_version"": 1,; ""molecule"": {; ""geometry"": geometry.tolist(),; ""symbols"": [""O"", ""H"", ""H""],; },; ""driver"": ""gradient"",; ""model"": {""method"": ""ccsd"", ""basis"": ""def2-tzvp""},; ""keywords"": {""scf_type"": ""direct"", ""df_scf_guess"": ""false""},; }. ret = psi4.schema_wrapper.run_qcschema(json_input). stub = ""water_ccsd_gradient_psi4""; with open(f""{stub}.qcschema.out"", ""w"") as handle:; handle.write(ret.json()); ```; validated with `qcschema.validate` produces; ```; Traceback (most recent call last):; File ""./qcschema_validate.py"", line 17, in <module>; qcschema.validate(data=json.loads(p.read_text()), schema_type=args.schema_type); File ""/home/eric/development/json/MolSSI_QC_JSON_Schema/qcschema/validate.py"", line 16, in validate; jsonschema.validate(data, schema); File ""/home/eric/.pyenv/versions/miniconda3-4.7.12/envs/cclib_berquist_37/lib/python3.7/site-packages/jsonschema/validators.py"", line 934, in validate; raise error; jsonschema.exceptions.ValidationError: None is not of type 'object'. Failed validating 'type' in schema['properties']['wavefunction']:; ...; On instance['wavefunction']:; None; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2242:1356,error,error,1356,https://psicode.org,https://github.com/psi4/psi4/issues/2242,1,['error'],['error']
Availability,"Using `psi4.set_output_file()` command to set the output file location does not close the file when `psi4.core.close_outfile()` is invoked.; This causes the open files to accumulate when running in a loop. ; Finally, as the number of open files > ulimit (1024), a segment fault core dump error is thrown. . (previously I Increased this limit temporarily by using `ulimit -n 4096`, however I was unable to track the exact source of the error.). Fix : **Replacing `psi4.set_output_file()` with `psi4.core.set_output_file()` did the trick for me.**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3241:272,fault,fault,272,https://psicode.org,https://github.com/psi4/psi4/issues/3241,3,"['error', 'fault']","['error', 'fault']"
Availability,"Using latest Psi4 from conda `psi4/label/dev` (`1.4a2.dev523+e25656e`), if I modify the test in `cc3` to use density fitting and freeze both core and virtuals as follows:; ```; molecule h2o {; 0 1; O; H 1 0.97; H 1 0.97 2 103.0; }. set {; basis 6-31G**; r_convergence 10; e_convergence 10; freeze_core True; num_frozen_uocc 10; cc_type df; }. ccsd_e, ccsd_wfn = frequencies('ccsd', dertype=1, return_wfn=True); fd_freqs_grad = ccsd_wfn.frequencies(). ccsd_e, ccsd_wfn, frequencies('ccsd', dertype=0, return_wfn=True); fd_freqs_energy = ccsd_wfn.frequencies(). compare_vectors(fd_freqs_grad, fd_freqs_energy, 1, ""CCSD Grads vs. Energies Findif (3-pt.) freqs to 0.1 cm^-1"") #TEST; ```. Psi4 fails with `<built-in method dfocc of PyCapsule object at 0x7f3fee2aab70> returned NULL without setting an error`. However, if I replace `ccsd` by `ccsd(t)`, it runs and passes the test, which seems to indicate `ccsd` gradients for frozen virtuals are actually available somewhere.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1912:796,error,error,796,https://psicode.org,https://github.com/psi4/psi4/issues/1912,2,"['avail', 'error']","['available', 'error']"
Availability,"Using psi4-1.4rc1, I was able to compute `MBIS_CHARGES` via QCEngine however after PR #2127 this now fails with the following error message. While this definitely needs fixing I think it might also be nice to have the option to turn off this feature and only calculate the ratio if passed as an scf property?; ```; RuntimeError: ; Fatal Error: Wavefunction::scalar_variable: Requested variable MBIS FREE ATOM O VOLUME was not set!; Error occurred in file: /Users/github/builds/conda-builds/psi4-multiout_1628080613326/work/psi4/src/psi4/libmints/wavefunction.cc on line: 1335; ```. MWE ; ```python; import qcelemental as qcel; from qcelemental.models import molecule; import qcengine as qcng. mol = qcel.models.Molecule.from_data(""""""; O 0.0 0.000 -0.129; H 0.0 -1.494 1.027; H 0.0 1.494 1.027; """"""). # build the mbis task; model = qcel.models.AtomicInput(; molecule=mol,; driver=""energy"",; model={""method"": ""SCF"", ""basis"": ""sto-3g""},; keywords={""scf_properties"": [""MBIS_CHARGES""]}; ). result = qcng.compute(model, ""psi4""). print(result.dict()); ```; versions; psi4-1.4+9485035 ; qcengine-0.19.0; qcelemental -0.21.0",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2272:126,error,error,126,https://psicode.org,https://github.com/psi4/psi4/issues/2272,3,"['Error', 'error']","['Error', 'error']"
Availability,"Using version 1.2-rc2 from conda psi4/label/dev (and also several previous versions):. The following input crashes with a `RuntimeError: Fatal Error: Not enough memory` (logfile [attached](https://github.com/psi4/psi4/files/2000688/sapt0.txt)):. ```; molecule dimer {; 0 1; HE -3.175580423325 -0.517569032036 0.000000000000; --; 0 1; C -0.047607579372 0.489078465367 0.000000000000; O -0.621270272014 1.491611955637 0.000000000000; S 0.726228977971 -0.864990071157 0.000000000000. no_reorient; no_com; }. memory 20 Gb. dimer.update_geometry(); energy(""sapt0/jun-cc-pvdz"", molecule=dimer); ``` . When the He atom in the above is changed to, say, Ne, the calculation runs fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1018:143,Error,Error,143,https://psicode.org,https://github.com/psi4/psi4/issues/1018,1,['Error'],['Error']
Availability,Vector Setting Error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2853:15,Error,Error,15,https://psicode.org,https://github.com/psi4/psi4/issues/2853,1,['Error'],['Error']
Availability,"Version 1.1 fails:. ```; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/psi4/libparallel/process.cc:69:9: error: use of undeclared identifier 'environ'; if (environ) {; ^; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/psi4/libparallel/process.cc:70:16: error: use of undeclared identifier 'environ'; while (environ[i] != NULL) {; ^; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/psi4/libparallel/process.cc:71:52: error: use of undeclared identifier 'environ'; std::vector <std::string> strs = split(environ[i], ""="");; ^; ```. Found on the FreeBSD 11.1.; 'environ' needs to be declared.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/851:106,error,error,106,https://psicode.org,https://github.com/psi4/psi4/issues/851,3,['error'],['error']
Availability,"Version 1.1; Compiler: clang-40; OS: FreeBSD 11.1. ```; In file included from /usr/ports/science/psi4/work/psi4-1.1/psi4/src/export_functional.cc:29:; In file included from /usr/ports/science/psi4/work/psi4-1.1/psi4/include/psi4/pybind11.h:10:; /usr/local/include/pybind11/pybind11.h:1012:105: error: cannot initialize return object of type 'void (psi::Functional::*)(int) const' with an lvalue of type 'void (psi::SuperFunctional::*)(int) const': different classes ('psi::Functional' vs 'psi::SuperFunctional'); auto method_adaptor(Return (Class::*pmf)(Args...) const) -> Return (Derived::*)(Args...) const { return pmf; }; ^~~; /usr/local/include/pybind11/pybind11.h:1087:25: note: in instantiation of function template specialization 'pybind11::method_adaptor<psi::Functional, void, psi::SuperFunctional, int>' requested here; cpp_function cf(method_adaptor<type>(std::forward<Func>(f)), name(name_), is_method(*this),; ^; /usr/ports/science/psi4/work/psi4-1.1/psi4/src/export_functional.cc:112:9: note: in instantiation of function template specialization 'pybind11::class_<psi::Functional, std::__1::shared_ptr<psi::Functional> >::def<void (psi::SuperFunctional::*)(int) const, char [10]>' requested here; def(""print_detail"",&SuperFunctional::py_print_detail, ""docstring"");; ^; 1 error generated.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/852:294,error,error,294,https://psicode.org,https://github.com/psi4/psi4/issues/852,2,['error'],['error']
Availability,"We (@amjames and @robertodr) propose a partial rewrite of the coupled cluster and DPD functionalities in Psi4.; The main motivation is to make the pending [PR #1061, Expose wavefunction and amplitudes to python](https://github.com/psi4/psi4/pull/1061) available satisfying the constraints and comments offered by @dgasmith and @amjames.; Exposing the T and Lambda amplitudes to the Python layer will have a series of beneficial consequences:; - It will be possible to experiment with these quantities easily.; - Writing and reading amplitudes to file ([HDF5](https://portal.hdfgroup.org/display/support), [Zarr](https://zarr.readthedocs.io/en/stable/), or any other format) is more easily managed from Python, especially if we need to preserve compatibility with Windows.; - Restart capabilities.; ## Summary of proposed changes (incomplete); ### cc* modules; - Create a single `cc` folder where all the other `cc*` folders will live as subfolders.; - Provide a top-level `CCWavefunction` class, partly modeled on the existing `CIWavefunction` class to overtake the whole implementation of the CC functionality.; - The class will manage `MOInfo`,` Params`, `DPD` as local data members. This will ensure that the lifetime of these objects is tied to a particular instance of a CC calculation.; - The class will contain the various steps in a CC calculation as methods. ; - Move from tstart-tstop to the new timers timer_on-timer_off; ### DPD Library ; - Remove use of static global machinery from DPD member functions. ; - Implement proper copy/move assign/construct for the DPD object. ; - Implement internal structs with proper constructors as needed.; - Replace c-style arrays/raw pointers with appropriate smart pointer/containers ; - Refactor shared state (shared by multiple DPD instances, currently dpd_gbl struct) into singleton(s). ; - **Note**: Memory tracking in its current form is not thread safe and relies on the client code properly locking calls to function that need to perform alloca",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1247:252,avail,available,252,https://psicode.org,https://github.com/psi4/psi4/issues/1247,1,['avail'],['available']
Availability,"We have an [example](http://forum.psicode.org/t/adiis-minimization-failed-file-a-bug/2524/4) of an ADIIS failure. Based on how _early_ minimization is failing, this looks like something other than numerical finickiness of the underlying numpy algorithm. The ADIIS problem is either 1-by-1 or 2-by-2 (I'd need to check which), and surely we can handle a 2D constrained optimization. ```; memory 5 gb. molecule dimer {; O -2.37598501 -5.25644515 4.84543259; H -2.38171765 -4.38257907 4.44628561; H -2.48821382 -4.94837176 5.80344789; --; @Br 2.24215713 -6.77867982 5.71107037; @Br 0.05511550 -6.05660413 5.30313985; units angstrom; }. set {; basis aug-cc-pvdz; scf_type pk ; sapt_dft_grac_shift_a 0.05731; sapt_dft_grac_shift_b 0.01680; SAPT_DFT_FUNCTIONAL REVSCAN; }. energy('revscan'); ```. ```; ==> Pre-Iterations <==. SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF (no occupation information). -------------------------; Irrep Nso Nmo; -------------------------; A 113 113; -------------------------; Total 113 113; -------------------------. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter SAD: -76.04124004396280 -7.60412e+01 0.00000e+00. Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/bin//psi4"", line 338, in <module>; exec(content); File ""<string>"", line 35, in <module>; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 2455, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 1670, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/Users/jonathonmisiewicz/psi4/objdir/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); F",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2609:105,failure,failure,105,https://psicode.org,https://github.com/psi4/psi4/issues/2609,1,['failure'],['failure']
Availability,We need to be able to fail over to a universal JK-set when a particular JK-set isn't available. There's a Karlsruhe QZ universal set we should adopt and enter into PSI4. Lori has some info on it.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/45:85,avail,available,85,https://psicode.org,https://github.com/psi4/psi4/issues/45,1,['avail'],['available']
Availability,"We've seen this a couple times on TravisCI, then I got it last night on psinet (unreproducible, of course), now @polikw reports it with the binary 1.0rc3 . No rush, just someone should get to cross a ticket off when tracked down.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/385:224,down,down,224,https://psicode.org,https://github.com/psi4/psi4/issues/385,1,['down'],['down']
Availability,"What is needed to get around this constraint of the simple input snippet below not working b/c scf is DF, @bozkaya ? The conventional integrals have already been computed and are ready. Is there some other data transformation needed? As a last resort, I suppose we can go ahead and compute the non-DF scf instead when this call is made. But I think we need this input to work. Related (user-experience-wise) to https://github.com/psi4/psi4private/issues/48. ```; set mp2_type conv; gradient('mp2'); ```. ``` c++; // SCF TYPE; if (options_.get_str(""SCF_TYPE"") == ""DF"" || options_.get_str(""SCF_TYPE"") == ""CD"") {; if (dertype != ""NONE"") {; throw PSIEXCEPTION(""Analytic gradients are NOT available for SCF_TYPE=DF/CD !"");; }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245:684,avail,available,684,https://psicode.org,https://github.com/psi4/psi4/issues/245,1,['avail'],['available']
Availability,"What is the proper way to specify the compiler in Boost ? I modified the user-config.jam file to include the following lines:. using intel : linux : /opt/cray/craype/2.2.1/bin/CC ; using mpi : : <find-shared-library>mpich ;. but then, the build fails and I get the following complaint:. error: at project-config.jam:12; error: intel-linux initialization: parameter 'version' inconsistent; error: an explicit value was specified in an earlier initialization; error: no value is specified now. Apparently this is because project-config.jam contains the following:. if ! intel-linux in [ feature.values <toolset> ]; {; using intel-linux ; # <= this is line 12; }. in my understanding, the above condition should make sure we are not trying to redefine intel-linux when it has been specified in user-config.jam, is that correct ?. @robertodr, do you know how I could solve this problem?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/196:287,error,error,287,https://psicode.org,https://github.com/psi4/psi4/issues/196,4,['error'],['error']
Availability,"When I compile psi4 in the conda environment according to the manual, I always get an error saying that libint2 cannot be found. I installed it with the same steps before, but there was no problem. I would like to ask what the reason is.; ![微信图片_20230221110410](https://user-images.githubusercontent.com/99332231/220237125-70fa333f-b28d-414d-b3a5-cb4d613fef01.png)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2879:86,error,error,86,https://psicode.org,https://github.com/psi4/psi4/issues/2879,1,['error'],['error']
Availability,"When I run a df-mp3 geometry opt job I got the following error:. An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 44, in <module>. File ""/usr/local/programs/psi4intel/share/psi4/python/driver.py"", line 1019, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs). File ""/usr/local/programs/psi4intel/share/psi4/python/driver.py"", line 588, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs). File ""/usr/local/programs/psi4intel/share/psi4/python/procedures/proc.py"", line 364, in select_mp3_gradient; return func(name, **kwargs). File ""/usr/local/programs/psi4intel/share/psi4/python/procedures/proc.py"", line 1381, in run_dfocc_gradient; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/ubgroup/psi4/src/lib/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PsiException::PsiException(std::string, char const_, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::read(unsigned int, char const_, char_, unsigned long, psi::psio_address, psi::psio_address_); psi::PSIO::read_entry(unsigned int, char const_, char_, unsigned long); psi::dfoccwave::Tensor2d::read(boost::shared_ptrpsi::PSIO, unsigned int). @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/428:57,error,error,57,https://psicode.org,https://github.com/psi4/psi4/issues/428,6,"['Error', 'error']","['Error', 'error']"
Availability,"When I run psi4 I got the following error (I have Python 2.7):. Traceback (most recent call last):; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/inputparser.py"", line 43, in <module>; import pubchem; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/pubchem.py"", line 61, in <module>; from p4util.exceptions import *; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/p4util/**init**.py"", line 32, in <module>; from .util import *; File ""/truba/home/tbag24/programs/psi4intel/share/psi4/python/p4util/util.py"", line 32, in <module>; import numpy as np; ImportError: No module named numpy. @loriab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/407:36,error,error,36,https://psicode.org,https://github.com/psi4/psi4/issues/407,1,['error'],['error']
Availability,"When I try to debug psi4 on mac with ""lldb psi4"" I got the following messega:. lldb psi4; (lldb) target create ""psi4""; error: '/Users/ugur/psi4/objdir/stage/Users/ugur/psi4install/psi4cmake/bin/psi4' doesn't contain any 'host' platform architectures: x86_64h, x86_64, i386. How we can debug the current psi4? @loriab @dgasmith @jturney",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/491:119,error,error,119,https://psicode.org,https://github.com/psi4/psi4/issues/491,1,['error'],['error']
Availability,"When I try to run the input file from the X2C section, it fails.; ```; molecule {; H; F 1 0.92; }. set {; scf_type pk; basis cc-pvdz-decon; relativistic x2c; }. energy('hf'); ```. It runs fine if I either remove the `-decon`, remove the `relativistic x2c` option, or add the `basis_relativistic` option. The error I get is:; ```; Traceback (most recent call last):; File ""/usr/local/bin/psi4"", line 247, in <module>; exec(content); File ""<string>"", line 28, in <module>; File ""/usr/local/lib/psi4/driver/driver.py"", line 454, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 2797, in run_dft; scf_wfn = run_scf(name, **kwargs); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 1941, in run_scf; scf_wfn = scf_helper(name, **kwargs); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 1250, in scf_helper; scf_wfn = scf_wavefunction_factory(core.get_option('SCF', 'REFERENCE'), base_wfn); File ""/usr/local/lib/psi4/driver/procrouting/proc.py"", line 1035, in scf_wavefunction_factory; puream=wfn.basisset().has_puream()); File ""/usr/local/lib/psi4/driver/p4util/python_helpers.py"", line 64, in pybuild_basis; key, target, fitrole, other, return_atomlist=return_atomlist); File ""/usr/local/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 641, in pyconstruct; return_atomlist=return_atomlist); File ""/usr/local/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 770, in construct; filename = cls.make_filename(basgbs); File ""/usr/local/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 1309, in make_filename; basisname = basisname.lower(). AttributeError: 'NoneType' object has no attribute 'lower'; ```. I'm guessing that this is related to issue #617.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/662:308,error,error,308,https://psicode.org,https://github.com/psi4/psi4/issues/662,1,['error'],['error']
Availability,"When I was doing energy decomposition analysis with Bronze standard of a transition state involving a 3d metal Ni, the following error comes up. I wonder how to solve such a problem? Thanks. ```; BasisSet::construct: Unable to find a basis set for atom 24 for key BASIS ; among: ; Shell Entries: ['NI'] ; Basis Sets: [('JUN-CC-PVDZ', 'JUN-CC-PVDZ', None)] ; File Path: /gpfs/home/scms/zz/SAPT, /gpfs/home/scms/zz/SAPT, ; /gpfs/home/scms/zz/psi4conda/share/psi4/basis !; Input Blocks: ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2866:129,error,error,129,https://psicode.org,https://github.com/psi4/psi4/issues/2866,1,['error'],['error']
Availability,"When PSI4 updates in miniconda, the testing dialogue,. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. prints as a single line which is wrapped by the terminal:. ```; Nuclear Repulsion Energy..........................................PASSED SAPT0 Eelst....; ...................................................PASSED SAPT0 Eexch...................; ....................................PASSED SAPT0 Eind...................................; .....................PASSED SAPT0 Edisp.................................................; ......PASSED SAPT0 Etotal......................................................PASSED; ```. It seems like there should be a newline after each ""PASSED"". I updated the post-link.sh script to print the test dialogue with cat instead of echo. This seems to fix the problem on my machines (Ubuntu and RedHat with Gnome terminal and Konsole). While I was updating the printing, I also added comments and made the script delete the temporary files after PSI4 is done running.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/191:1167,echo,echo,1167,https://psicode.org,https://github.com/psi4/psi4/pull/191,1,['echo'],['echo']
Availability,"When a fitting basis isn't available, defaults to `def2-qzvpp-jkfit`. This sounds great, and is, until you notice a scf/cc-pv6z calc is using a quad-zeta auxiliary basis. Remedy this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/144:27,avail,available,27,https://psicode.org,https://github.com/psi4/psi4/issues/144,1,['avail'],['available']
Availability,"When following the suggested path for installation on Windows using conda and Python 3.8, even setting up a new environment on version 3.8, I cannot get it to run, as the ""psi4 --test"" command gives an error. On WSL using either conda or the installer I also cannot get it to work.; I create a new environment with: ; ```; conda create -n psi16 python=3.8; conda activate psi16; conda update --all; conda install psi4 python=3.8 -c psi4 -c conda-forge; psi4 --test; ```. This error was encountered on two separate machines running up to date Windows 10 Pro. Running the test gives me the following error: ; Traceback (most recent call last):; File ""Path\psi4conda\envs\psi16\Scripts\psi4-script.py"", line 187, in <module>; import psi4 # isort:skip; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\__init__.py"", line 76, in <module>; from .driver import endorsed_plugins; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\__init__.py"", line 46, in <module>; from psi4.driver.molutil import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\molutil.py"", line 36, in <module>; from psi4.driver.p4util import temp_circular_import_blocker; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\p4util\__init__.py"", line 32, in <module>; from .util import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\p4util\util.py"", line 37, in <module>; from psi4.driver.procrouting import *; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\__init__.py"", line 29, in <module>; from .proc_table import procedures, hooks, energy_only_methods, integrated_basis_methods; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\proc_table.py"", line 32, in <module>; from . import sapt; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driver\procrouting\sapt\__init__.py"", line 29, in <module>; from .sapt_proc import run_sapt_dft, sapt_dft, run_sf_sapt; File ""Path\psi4conda\envs\psi16\lib\site-packages\psi4\driv",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2614:202,error,error,202,https://psicode.org,https://github.com/psi4/psi4/issues/2614,3,['error'],['error']
Availability,"When nso is much greater than the number of retained NO's, DFCC can hang while determining how many rows of a matrix to read from disk. This issue is fixed in the master branch, and I am attaching a patch here to fix issue in psi4.0b5. To apply the patch:. 1) download the patch from https://gist.github.com/edeprince3/6023223; 2) untar that directory to find the file dfcc.bugfix1.patch; 2) go to the source directory psi4/src/bin/fnocc and copy the patch here; 3) on the command line type: patch < dfcc.bugfix1.patch; 4) move the patch and the newly created file ccsd.cc.orig somewhere else (or delete them); 5) recompile",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/11:260,down,download,260,https://psicode.org,https://github.com/psi4/psi4/issues/11,1,['down'],['download']
Availability,"When passing the -DCMAKE_INSTALL_PREFIX=/home/user/directory at the top-level build this flag does not get passed on to cmake processes that are called by the main, like in my case pybind11. As a result cmake tries to install that package in /usr/local. Is there any way around it other than manually installing all the dependencies?; ; ```; [100%] Built target pybind11_tests; Install the project...; -- Install configuration: ""MinSizeRel""; -- Installing: /usr/local/include/pybind11; CMake Error at cmake_install.cmake:41 (file):; file INSTALL cannot make directory ""/usr/local/include/pybind11"":; Permission denied; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1548:492,Error,Error,492,https://psicode.org,https://github.com/psi4/psi4/issues/1548,1,['Error'],['Error']
Availability,"When requesting the wavefunction as part of the result via the protocol in QCEngine only the `orbitals_and_eigenvalues` option works successfully. I think this is due to an error in the returned dictionary here https://github.com/psi4/psi4/blob/5de566ed7d4bf51816c673c4ea1def449e4e8618/psi4/driver/schema_wrapper.py#L324.I think this line should say `""density_a"": ""scf_density_a"",`. QCEngine error:; ```; QCEngine Unknown Error: Traceback (most recent call last):; File ""/Users/joshuahorton/miniconda3/envs/qcfractal/lib//python3.7/site-packages/psi4/driver/schema_wrapper.py"", line 400, in run_qcschema; ret = qcel.models.Result(**ret_data, stdout=_read_output(outfile)); File ""/Users/joshuahorton/miniconda3/envs/qcfractal/lib/python3.7/site-packages/qcelemental/models/results.py"", line 520, in __init__; super().__init__(*args, **kwargs); File ""pydantic/main.py"", line 344, in pydantic.main.BaseModel.__init__; File ""pydantic/main.py"", line 900, in pydantic.main.validate_model; File ""pydantic/fields.py"", line 556, in pydantic.fields.ModelField.validate; File ""pydantic/fields.py"", line 732, in pydantic.fields.ModelField._apply_validators; File ""pydantic/class_validators.py"", line 280, in pydantic.class_validators._generic_validator_cls.lambda4; File ""/Users/joshuahorton/miniconda3/envs/qcfractal/lib/python3.7/site-packages/qcelemental/models/results.py"", line 463, in _wavefunction_protocol; ret_wfn[key] = wfn[key]; KeyError: 'scf_density_ba'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1987:173,error,error,173,https://psicode.org,https://github.com/psi4/psi4/issues/1987,3,"['Error', 'error']","['Error', 'error']"
Availability,"When running psi4 under windows (version 1.4rc3.dev1, installed via conda) from within qiskit, the following error occurs:. ```; File ""C:\Users\user\Anaconda3\envs\qiskit-0-27-psi4-jupyter\Scripts\psi4-script.py"", line 336, in <module>; exec(content). File ""<string>"", line 31; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------------------!; ! !; ! (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: !; ! truncated \UXXXXXXXX escape !; ! !; !----------------------------------------------------------------------------------!; ```; I could track down the error to be raised from here:; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L333; when trying to execute 'content'.; The 'content' variable contains single backslashes in the windows path string (e.g. `'C:\Users'` instead of the correct `r'C:\Users'` or 'C:\\Users'`) which is responsible for the error.; I was able to fix the error via inserting; ```python; import platform; if platform.system() == ""Windows"":; content = content.replace(""'C:"", ""r'C:"").replace('""C:', 'r""C:'); ```; directly before aforementioned exec command.; That's quite a quick-and-dirty fix and I think it should be solved somewhere in the method called in; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\groun",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:109,error,error,109,https://psicode.org,https://github.com/psi4/psi4/issues/2228,5,"['down', 'error']","['down', 'error']"
Availability,"When trying to compile Psi4 with Miniconda3 using the keywords generated by `psi4-path-advisor` in the development environment, the following error is produced:; ```; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc: In function ‘void psi::dmrg::buildHamDMRG(std::shared_ptr<psi::IntegralTransform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; double Econstant = wfn->molecule()->nuclear_repulsion_energy();; ^; In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; ^; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```; The output generated by `psi4-path-advisor --gcc` is; ```; /home/shouck/miniconda3/envs/p4dev/bin/cmake \; -H. \; -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; -Bobjdir; ```; @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to `ON` in psi4DepsCache.cmake by default; changing it to; ```; set(ENABLE_CheMPS2 OFF CACHE BOOL """"); set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); ```; allows Psi4 to compile without issues. I'm not ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871:142,error,error,142,https://psicode.org,https://github.com/psi4/psi4/issues/871,2,['error'],['error']
Availability,"When trying to run Psi4 1.2 I get a straight segmentation fault (instantly). This is on a Rocks 6.1.1 based system using both the installer or conda methods from the download site. The conda install reported the Psi4 version as. > psi4: 1.2+9d4a61c-py36hf231b52_1. I realise this is going to be incredibly tricky to debug. I did try launching the version of python that conda installed (3.6.6-hc3d631a_0), and it seems to work fine. psi4 -v and psi4 -V both also give instant seg faults and no further info.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1088:58,fault,fault,58,https://psicode.org,https://github.com/psi4/psi4/issues/1088,3,"['down', 'fault']","['download', 'fault', 'faults']"
Availability,"When trying to track down some nondeterminstic behavior, I encountered the following oddity. ```; import numpy as np. molecule {; 0 1; C1 0.00000000 0.00000000 0.00000000; H2 0.49111719 0.98252240 -0.05876775; H3 -0.72033644 -0.10038934 -0.82524990; H4 -0.52826663 -0.08928047 0.96070982; H5 0.75766207 -0.79379696 -0.07638440; }. set {; basis cc-pvdz; }. e_scf, wfn = energy('hf', return_wfn=True). print(wfn.occupation_a().np); print(np.asarray(wfn.occupation_a())); ```. Somewhat surprisingly, this is the output I see:. ```; [ 0.00000000e+000 0.00000000e+000 0.00000000e+000 -7.63277803e+283; 6.91698601e-310 6.91698623e-310 0.00000000e+000 0.00000000e+000; 0.00000000e+000 0.00000000e+000 0.00000000e+000 0.00000000e+000; 1.65169957e-220 6.91698602e-310 6.91697627e-310 -3.39981117e-158; 6.91697639e-310 6.91696828e-310 5.41141341e-041 6.91697626e-310; 6.91697724e-310 0.00000000e+000 0.00000000e+000 0.00000000e+000; -3.67112871e-197 6.91698601e-310 6.91696828e-310 2.99382801e+052; 6.91697697e-310 6.91697723e-310 0.00000000e+000 0.00000000e+000; 0.00000000e+000 4.42201243e+096]; [ 1. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]; ```. i.e., something funky is going on with `.np`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/639:21,down,down,21,https://psicode.org,https://github.com/psi4/psi4/issues/639,1,['down'],['down']
Availability,"When using H+ as the compound in a SAPT calculation it crashes with a divide by zero error:. ```; File ""/var/spool/slurm/d/job333055/slurm_script"", line 21, in <module>; myener = psi4.energy(""sapt2+(ccd)dmp2""); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 4581, in run_sapt; monomerA_wfn = scf_helper('RHF', molecule=monomerA, **kwargs); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 99, in scf_compute_energy; scf_energy = self.finalize_energy(); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 692, in scf_finalize_energy; self.print_energies(); File ""/home/spoel/miniconda3/lib/python3.8/site-packages/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 804, in scf_print_energies; self.set_variable(""HF VIRIAL RATIO"", - potential / ke) # P::e SCF; ZeroDivisionError: float division by zero; ```. The script to reproduce this is below. ```; #!/usr/bin/env python3; import os; import numpy as np; import psi4 as psi4; psi4.core.set_num_threads(4); psi4.set_options({""cachelevel"": 1, ""print"": 1}); psi4.set_memory(12000000000); psi4_io = psi4.core.IOManager.shared_object(); psi4.core.set_output_file('hcl-sapt.log', False); geometry= """"""; 1 1; H -0.0 0.0 -1.36; --; -1 1; Cl 0.0 0.0 1; """"""; geom = psi4.geometry(geometry); psi4.basis_helper(""""""; assign aug-cc-pvtz; """"""); myener = psi4.energy(""sapt2+(ccd)dmp2""); for ener in [ 'SAPT ELST ENERGY', 'SAPT EXCH ENERGY', 'SAPT IND ENERGY', 'SAPT DISP ENERGY', 'SAPT TOTAL ENERGY' ]:; print(""%s %g"" % ( ener, psi4.variable(ener) )); ``",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3156:85,error,error,85,https://psicode.org,https://github.com/psi4/psi4/issues/3156,1,['error'],['error']
Availability,"When using a custom basis set, `MBIS_VOLUME_RATIOS` throws an error, all other properties seem to work fine. It also works fine if the basis set is included in the call to `psi4.energy`. Using conda version of psi4 1.9.1 on Linux. Input:; ```python; import psi4. h2o = psi4.geometry(""""""; H 0 0 0; O 0 0 1; H 0 1 1; """""",""h2o""). def basisspec_psi4_MyBasis(mol, role):; mol.set_basis_all_atoms(""sto-3g"", role=role); return {}. psi4.qcdb.libmintsbasisset.basishorde[""MYBASIS""] = basisspec_psi4_MyBasis; psi4.core.set_global_option(""BASIS"", ""mybasis""). _, wfn = psi4.energy('hf', return_wfn=True, molecule=h2o). psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); ```. Error:; ```; QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['H']; Basis Sets: [('BASISSPEC_PSI4_MYBASIS', 'BASISSPEC_PSI4_MYBASIS', None)]; File Path: /home/jevandezande/tmp/psi4/basis, /home/jevandezande/tmp/psi4/basis, /home/jevandezande/progs/mamba/envs/peregrine/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File ""/home/jevandezande/tmp/psi4/basis/a.py"", line 18, in <module>; psi4.oeprop(wfn, ""MBIS_VOLUME_RATIOS""); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/util.py"", line 85, in oeprop; free_atom_volumes(wfn); File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/p4util/prop_util.py"", line 119, in free_atom_volumes; at_e, at_wfn = psi4.energy(method, return_wfn=True); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/progs/mamba/envs/peregrine/lib/python3.11/site-packages/psi4/driver/procrouting/proc.py"", line 2588, in run_scf; scf_wfn = scf_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3240:62,error,error,62,https://psicode.org,https://github.com/psi4/psi4/issues/3240,2,"['Error', 'error']","['Error', 'error']"
Availability,"When using conda install in Linux, it cannot install the linux version, and the following error occurs:; '''; conda install psi4 python=3.8 -c psi4; Collecting package metadata (current_repodata.json): done; Solving environment: /; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:. -<unknown>/win-64::psi4==1.8a1.dev32+663453e=py38_0 ; ; '''",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2894:90,error,error,90,https://psicode.org,https://github.com/psi4/psi4/issues/2894,1,['error'],['error']
Availability,"While attempting to run an ODC-12 computation, the correlation correction to the 1RDM (tau) didn't converge. I can't quite tell what ODC-12 did in response to this, but the effect was to zero the orbital gradient and make the energy negative NaN. The code should either recover gracefully if possible or, if not possible, quit ASAP. For the benefit of @mdav2 and @mlestep there's a side problem with the SCF converging to the wrong state. I'll add this as a post to the SCF topic when I've investigated further. I can tell you now that the ""true"" ground state seems to break CFOUR. [odc12_nan.txt](https://github.com/psi4/psi4/files/2254898/odc12_nan.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1117:270,recover,recover,270,https://psicode.org,https://github.com/psi4/psi4/issues/1117,1,['recover'],['recover']
Availability,"While running the tests for #2230, I encountered the following failures; - large-atoms is trying to run analytical ECP gradietns; - min-atoms fails in `KeyError: 'psi4.core.variable: Requested variable CURRENT ENERGY was not set!\n'`; - pywrap-freq-e-sowreap fails in `NameError: name 'get_frequencies' is not defined`; - pywrap-freq-g-sowreap fails in `NameError: name 'get_frequencies' is not defined`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2234:63,failure,failures,63,https://psicode.org,https://github.com/psi4/psi4/issues/2234,1,['failure'],['failures']
Availability,"Whilst digging around for why I was seeing inconsistent numbers of grid points on different machines, I've spotted what has to be a bug. Currently, DFT_SPHERICAL_POINTS can be set to any value, rather than just [a Lebedev Points number](http://psicode.org/psi4manual/master/dft.html#table-lebedevorder). If a non Lebdev number is used, then the grid is, essentially, undefined. The correct behaviour is to print the table of available values and throw an exception. In psi4/psi4/src/psi4/libfock/cubature.cc, DFTGrid::buildGridFromOptions() calls LebedevGridMgr::findOrderByNPoints(opt.nangpts) (line 3968) which returns either the grid order or -1 if opt.nangpts doesn't match one of the defined grid sizes. ` if (LebedevGridMgr::findOrderByNPoints(opt.nangpts) < -1) {; LebedevGridMgr::PrintHelp(); // Tell what the admissible values are.; throw PSIEXCEPTION(""Invalid number of spherical points (not a Lebedev number)"");; }; `. The current check at line 3968 for a suitable value for DFT_SPHERICAL_POINTS is ""retval < -1"". Surely this should be either ""retval == -1"" or ""retval < 0"". Currently, the test is false even when a non-Lebdev number has been chosen:; ""set dft_spherical_points = 110"" works as expected; ""set dft_spherical_points = 109"" (or any non-Lebdev number) gives a stupidly small grid.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/673:425,avail,available,425,https://psicode.org,https://github.com/psi4/psi4/issues/673,1,['avail'],['available']
Availability,Windows-Specific PSIO Error in SAPT,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2342:22,Error,Error,22,https://psicode.org,https://github.com/psi4/psi4/issues/2342,1,['Error'],['Error']
Availability,"With `ENABLE_bse`, BSE tries to install in the wrong place; ```; [ 11%] Installing Psi4-detected BLAS/LAPACK; [ 11%] Performing build step for 'bse_external'; -- Install configuration: ""Release""; [ 11%] Built target lapack_external; /usr/lib/python3.11/site-packages/setuptools/dist.py:530: UserWarning: Normalizing 'v1.8+60.gdf9a0dd5b' to '1.8+60.gdf9a0dd5b'; warnings.warn(tmpl.format(**locals())); running build; running build_py; UPDATING build/lib/basis_set_exchange/_version.py; set build/lib/basis_set_exchange/_version.py to 'v1.8+60.gdf9a0dd5b'; [ 17%] Performing install step for 'bse_external'; /usr/lib/python3.11/site-packages/setuptools/dist.py:530: UserWarning: Normalizing 'v1.8+60.gdf9a0dd5b' to '1.8+60.gdf9a0dd5b'; warnings.warn(tmpl.format(**locals())); running install; /usr/lib/python3.11/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.; warnings.warn(; running build; running build_py; UPDATING build/lib/basis_set_exchange/_version.py; set build/lib/basis_set_exchange/_version.py to 'v1.8+60.gdf9a0dd5b'; running install_lib; copying build/lib/basis_set_exchange/_version.py -> /home/work/psi4/objdir/stage/lib/basis_set_exchange; byte-compiling /home/work/psi4/objdir/stage/lib/basis_set_exchange/_version.py to _version.cpython-311.pyc; running install_data; copying LICENSE -> /usr/local/; error: could not create '/usr/local/LICENSE': Permission denied; make[2]: *** [external/upstream/bse/CMakeFiles/bse_external.dir/build.make:105: external/upstream/bse/bse_external-prefix/src/bse_external-stamp/bse_external-install] Error 1; make[1]: *** [CMakeFiles/Makefile2:11190: external/upstream/bse/CMakeFiles/bse_external.dir/all] Error 2; make: *** [Makefile:146: all] Error 2; (p4env) [susi@lenovo objdir]$ ccmake . ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3067:1431,error,error,1431,https://psicode.org,https://github.com/psi4/psi4/issues/3067,4,"['Error', 'error']","['Error', 'error']"
Availability,"With apologies for the vague title, there are some issues with the `compute_gradient` function. They're connected, so it's best to have a single topic for these:. 1. Not all modules that support gradients support the `compute_gradient` API. `dct` and Rob's `dfmp2` do, but most other modules don't. We learned in #2200 that RHF wavefunctions don't, though `SCFDeriv` and `Dispersion` ""wavefunctions"" seem to. (See `scfgrad` and `libdisp`, respectively.); 2. The `compute_gradient` calls coming out of `dct` and `dfmp2` don't even work without crashing! Minimal not-working example:; ```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. wfn = energy('mp2/sto-6g', return_wfn=True)[1] # Can switch ""mp2"" to ""dct"" and get a similar crash; wfn.compute_gradient(); ```; 3. Computing a derivative _reliably_ requires assumptions about what intermediates are available and what the Hamiltonian is. For example, we need to know that the file of ""T"" amplitudes is the same as that optimized during the energy computation, and that the energy was computed without relativistic corrections. We currently store whether the relativistic global is _currently_ enabled, but not whether relatvistic terms were added during the compute step. I'm open to alternatives, but I favor taking `compute_gradient` out of the API entirely. It's not consistently in the API, it doesn't get simple cases right when it's there, and the assumptions required by such a code don't make it a good candidate for being in the API in the first place.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2223:849,avail,available,849,https://psicode.org,https://github.com/psi4/psi4/issues/2223,1,['avail'],['available']
Availability,"With the following input file, I noticed that there's an uncaught C++ exception that crashes the program hard; ```; $ cat input.dat ; memory 8640 Mb; molecule dimer {; 1 1; K -4.067042 -1.894214 0.002270; }; set dft_grid_name SG1; set dft_vv10_radial_points 50; set dft_vv10_spherical_points 194; set dft_nuclear_scheme treutler; set dft_radial_scheme EM; set basis def2-TZVPPD; ene = energy(""wB97M-V""); ```. Here's the error:. <details>; <summary> Expand </summary>. ```; $ psi4 input.dat ; terminate called after throwing an instance of 'psi::PsiException'; what(): ; Fatal Error: There is no SG-1 grid defined for the requested atomic number!; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1557940846948/work/psi4/src/psi4/libfock/cubature.cc on line: 2451; The most recent 5 function calls were:; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007F895301610F for__signal_handl Unknown Unknown; libpthread-2.26.s 00007F895EC247E0 Unknown Unknown Unknown; libc-2.26.so 00007F895E89BB20 gsignal Unknown Unknown; libc-2.26.so 00007F895E89CFC8 abort Unknown Unknown; libint.so 00007F8933297319 _ZN9__gnu_cxx27__ Unknown Unknown; libint.so 00007F8933296839 _ZN10__cxxabiv111 Unknown Unknown; libint.so 00007F89332968D1 __cxa_call_termin Unknown Unknown; libint.so 00007F8933296600 __gxx_personality Unknown Unknown; libgcc_s.so.1 00007F895EEB9AAB Unknown Unknown Unknown; libgcc_s.so.1 00007F895EEB9F49 _Unwind_Resume Unknown Unknown; core.cpython-37m- 00007F8955C9BDC5 Unknown Unknown Unknown; core.cpython-37m- 00007F8955C94F6C Unknown Unknown Unknown; libiomp5.so 00007F8913F603F3 __kmp_invoke_micr Unknown Unknown; libiomp5.so 00007F8913EE4937 __kmp_fork_call Unknown Unknown; libiomp5.so 00007F8913EA8533 __kmpc_fork_call Unknown Unknown; core.cpython-37m- 00007F8955C947E1 Unknown Unknown Unknown; core.cpython-37m- 00007F8955CA73C0 Unknown Unknown Unknown; core.cpython-37m- 00007F8955CA62DC Unknown Unknown Unknown; core.cpython-37m",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2080:420,error,error,420,https://psicode.org,https://github.com/psi4/psi4/issues/2080,4,"['Error', 'error']","['Error', 'error']"
Availability,"With the following input file:; ```; memory 500 mb; set basis cc-pVDZ. molecule mol {; 4. O 0.0 0.0 0.0; H 0.0 0.0 0.96; H 0.76 0.76 0.0; H -0.76 0.76 0.0; }. set optking {; # Freeze the dihedral angle between atoms 1, 2, 3, and 4 at 90 degrees; frozen_dihedral = [(1, 2, 3, 4, 100.0)]; }. # Perform the optimization with the frozen dihedral constraint; optimize('b3lyp'); ```; running psi4 v1.9.1 gives me a segfault: 'psi4 inp.dat' terminated by signal SIGSEGV (Address boundary error); I have tried a few other ways using keywords: fixed_dihedral, and ranged_dihedral, no luck. Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3242:481,error,error,481,https://psicode.org,https://github.com/psi4/psi4/issues/3242,1,['error'],['error']
Availability,"Would there be any objection to me filing a PR to add some of the cc-pwCVXZ basis sets for alkali and alkali earth metals that are currently missing from Psi4 (i.e. https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/cc-pwcvtz.gbs). As far as I can tell, they're not on the basis set exchange, but thet are available at http://tyr0.chem.wsu.edu/~kipeters/basissets/alkal-nr.html",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/727:318,avail,available,318,https://psicode.org,https://github.com/psi4/psi4/issues/727,1,['avail'],['available']
Availability,Write PSIO Error Information to Output File,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2019:11,Error,Error,11,https://psicode.org,https://github.com/psi4/psi4/issues/2019,1,['Error'],['Error']
Availability,"XC_WB97M_V: 1.00E-13 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 2115829; Total Blocks = 14225; Max Points = 256; Max Functions = 1539; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-33 entry C line 198 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 34-89 entry H line 18 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 90-101 entry N line 258 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 102-106 entry O line 318 file /aerosol/users/njzjz/anaconda3/envs/p4env/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. PSIO_ERROR: unit = 97, errval = 12; forrtl: error (76): Abort trap signal; Image PC Routine Line Source ; libgdma.so 00007F6F7C68B10F for__signal_handl Unknown Unknown; libpthread-2.28.s 00007F6F9C906B20 Unknown Unknown Unknown; libc-2.28.so 00007F6F9BDDC37F gsignal Unknown Unknown; libc-2.28.so 00007F6F9BDC6DB5 abort Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B535A Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B53C5 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6B5658 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B5A129 Unknown Unknown Unknown; core.cpython-310- 00007F6F88B69438 _ZN3psi4PSIO2rwEm Unknown Unknown; core.cpython-310- 00007F6F88B6B963 _ZN3psi4PSIO5writ Unknown Unknown; core.cpython-310- 00007F6F88B566E9 Unknown Unknown Unknown; libstdc++.so.6.0. 00007F6F8C6DFBF4 Unknown Unknown Unknown; libpthread-2.28.s 00007F6F9C8FC14A Unknown Unknown Unknown; libc-2.28.so 00007F6F9BEA1DC3 clone Unknown Unknown; /var/spool/slurm/slurmd/job83930/slurm_script: line 27: 2245656 Aborted (core dumped). ```. </details>. CPU",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970:12205,error,error,12205,https://psicode.org,https://github.com/psi4/psi4/issues/2970,1,['error'],['error']
Availability,"[Recovered from the forums.](http://forum.psicode.org/t/segfault-projecting-wfn-onto-new-basis/945). User attempted a manual basis guess, with the following input file.; ```; molecule {; 0 5; FE 0.000000000000 0.000000000000 0.123274779640; F 1.565379000000 0.000000000000 -0.647320000000; F -0.000000000000 -1.700830000000 0.639825000000; F 0.000000000000 1.700830000000 0.639825000000; F -1.565379000000 -0.000000000000 -0.647320000000; }. set {; basis sto-3g; guess sad; scf_type direct; reference uhf; }. energy('hf'). basis {; assign 6-31++G**; assign Fe 6-31G**; }. set guess read; optimize('hf'); ```. The PSIO error that results is difficult to interpret. Can we catch the case of switching basis sets without cleaning and tell the user to either clean explicitly or use the `basis_guess` option, depending on what they're trying to do?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1329:1,Recover,Recovered,1,https://psicode.org,https://github.com/psi4/psi4/issues/1329,2,"['Recover', 'error']","['Recovered', 'error']"
Availability,"[Recovered from the forums.](http://forum.psicode.org/t/thermodynamic-analysis/1014/2). The post-frequency vibrational information is difficult to get at in-file with a Psithon (not PsiAPI). See the original topic for a listing of the difficulties. User reports that `thermo` did not return a dict, but `git blame` says the return value of `thermo` has been a dict for quite some time. In the end, Lori recommended not getting the information through thermo in the first place, but loading the vibrational record.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1331:1,Recover,Recovered,1,https://psicode.org,https://github.com/psi4/psi4/issues/1331,1,['Recover'],['Recovered']
Availability,"[Recovered from the forums](http://forum.psicode.org/t/sapt0-job-fail-i-am-a-beginner/1034). As the forum mangles input file syntax, be wary that there may be an error or two hiding here. User reported the following input. ; ```; memory 5000 Mb; molecule dimer {; 1 1; C 4.19994 3.08488 -1.76044; C 5.06954 2.46285 -0.64984; C 4.64327 1.0663 -0.28153; O 4.85673 0.07495 -0.94802; O 3.96234 1.04199 0.88706; H 4.61569 4.07213 -1.97225; H 4.3027 2.5025 -2.67989; H 6.10053 2.39646 -1.00395; C 3.46892 -0.23561 1.35315; H 5.0473 3.09629 0.23787; C 1.89576 1.98716 -1.88508; C 2.70489 3.20283 -1.38087; C 2.1115 4.4631 -2.00089; O 2.22564 4.69469 -3.21122; N 1.45755 5.29818 -1.17121; H 1.82029 2.0666 -2.97331; H 2.43364 1.05863 -1.68462; H 2.61952 3.26827 -0.29319; H 0.99607 6.1109 -1.5546; H 1.29463 5.07123 -0.20248; C 0.54897 1.25688 0.14654; C 0.49167 1.90422 -1.2458; C -0.42151 1.12609 -2.17481; O -0.30845 -0.10438 -2.3373; N -1.33375 1.83551 -2.84989; H 1.41314 1.64705 0.68692; H 0.72592 0.18975 0.02069; H 0.09209 2.91772 -1.16504; H -1.48178 2.81502 -2.66023; H -1.96292 1.36772 -3.48833; C -0.75822 2.9873 1.46817; C -0.71562 1.51535 0.97554; C -0.84126 0.54385 2.14223; O 0.07905 -0.22265 2.47636; N -2.01096 0.56868 2.81099; H -0.38444 3.03627 2.49566; H -0.05905 3.57117 0.86785; H -1.58667 1.32703 0.34288; H -2.1767 -0.18204 3.47055; H -2.8428 0.94125 2.3602; H -1.95043 4.30157 -0.69534; C -2.6631 3.78375 -0.0493; C -2.12926 3.68676 1.38656; C -1.95827 5.09276 1.94691; O -1.18692 5.90686 1.41866; N -2.67996 5.39713 3.0393; H -3.6084 4.33293 -0.07465; H -2.84925 2.79578 -0.47069; H -2.85563 3.14558 1.99767; H -3.31103 4.73323 3.45906; H -2.59711 6.3152 3.45181; C 4.60787 -0.8758 2.13999; H 3.13705 -0.83567 0.50868; H 2.61634 0.00579 1.97897; H 4.90463 -0.2111 2.95001; N 4.27305 -2.20998 2.77179; H 5.46495 -1.04265 1.48973; C 3.078 -2.08869 3.6774; C 4.01212 -3.24631 1.71507; C 5.4587 -2.64236 3.59063; H 2.19356 -1.85215 3.09367; H 3.27107 -1.30183 4.40339; H 2.93642 -3.0407",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1328:1,Recover,Recovered,1,https://psicode.org,https://github.com/psi4/psi4/issues/1328,2,"['Recover', 'error']","['Recovered', 'error']"
Availability,"[This block of code](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsgshell.py#L222-L228) in libmintsgshell.py throws a UnboundLocalError when trying to recover from the ZeroDivisionError. ```; try:; norm = math.sqrt(1.0 / (tmp * e_sum)); except ZeroDivisionError:; self.PYcoef[i] = [1.0 for i in range(self.nprimitive())]; # Set the normalization; for i in range(self.nprimitive()):; self.PYcoef[i] *= norm; ```. Traceback; ```; Traceback (most recent call last):; File ""/prefix/bin/psi4"", line 260, in <module>; exec(content); File ""<string>"", line 27, in <module>; File ""/prefix/lib//psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/prefix/lib//psi4/driver/procrouting/proc.py"", line 1990, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/prefix/lib//psi4/driver/procrouting/proc.py"", line 1279, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); File ""/prefix/lib//psi4/driver/p4util/python_helpers.py"", line 101, in pybuild_wavefunction; basis = core.BasisSet.build(mol, ""ORBITAL"", basis); File ""/prefix/lib//psi4/driver/p4util/python_helpers.py"", line 68, in pybuild_basis; key, resolved_target, fitrole, other, return_atomlist=return_atomlist); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 661, in pyconstruct; return_atomlist=return_atomlist); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 876, in construct; ecpbasisset = BasisSet(key, mol, ecp_atom_basis_shell); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 148, in __init__; self.constructor_role_mol_shellmap(*args); File ""/prefix/lib//psi4/driver/qcdb/libmintsbasisset.py"", line 349, in constructor_role_mol_shellmap; n, xyz_ptr, bf_count, pt='Unnormalized', rpowers=rpowers[tst:tsp]); File ""/prefix/lib//psi4/driver/qcdb/libmintsgshell.py"", line 193, in __init__; self.normalize_shell(); File ""/prefix/lib//psi4/d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/846:171,recover,recover,171,https://psicode.org,https://github.com/psi4/psi4/issues/846,1,['recover'],['recover']
Availability,"\liboptions\options.lib src\psi4\libplugin\plugin.lib src\psi4\libpsi4util\psi4util.lib src\psi4\libpsio\psio.lib src\psi4\libqt\qt.lib src\psi4\libsapt_solver\sapt_solver.lib src\psi4\libscf_solver\scf_solver.lib src\psi4\libtrans\trans.lib Ws2_32.lib C:\tools\miniconda3\libs\Python36.lib D:\a\1\b\build\stage\lib\gg.lib D:\a\1\b\build\stage\lib\xc.lib D:\a\1\b\build\stage\lib\deriv.lib D:\a\1\b\build\stage\lib\int.lib C:\tools\miniconda3\Library\lib\mkl_rt.lib C:\tools\miniconda3\Library\lib\libiomp5md.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\core.cp36-win_amd64.pyd.manifest"" failed (exit code 1120) with the following output:; Creating library src\core.lib and object src\core.exp; cc.lib(lmp2.cc.obj) : error LNK2019: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ) referenced in function ""public: virtual void * __cdecl psi::MaxIterationsExceeded<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$MaxIterationsExceeded@H@psi@@UEAAPEAXI@Z); dcft.lib(dcft_compute_RHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_compute_UHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_qc.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); src\core.cp36-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals; ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1419:5897,error,error,5897,https://psicode.org,https://github.com/psi4/psi4/pull/1419,1,['error'],['error']
Availability,](https://github.com/psi4/psi4private/tree/c4) @loriab; - [ ] [nto](https://github.com/psi4/psi4private/tree/nto) @harls ; - [ ] [ash_fno](https://github.com/psi4/psi4private/tree/ash_fno) Ashutosh Kumar; - [ ] [ecp](https://github.com/psi4/psi4private/tree/ecp) @edeprince3 ; - [ ] [dfcc](https://github.com/psi4/psi4private/tree/dfcc) @andysim ; - [ ] [gfmm_cfmm](https://github.com/psi4/psi4private/tree/gfmm_cfmm) @bill-march; - [x] [asapt](https://github.com/psi4/psi4private/tree/asapt) @robparrish ; - [ ] [xtd](https://github.com/psi4/psi4private/tree/xtd) @harls ; - [ ] [cc](https://github.com/psi4/psi4private/tree/cc) @andysim ; - [x] [clean_python](https://github.com/psi4/psi4private/tree/clean_python) @loriab; - [ ] [gfmm_jk](https://github.com/psi4/psi4private/tree/gfmm_jk) @bill-march; - [ ] clear away old tickets; - **close** ; - [ ] psi4/psi4private#8; - [ ] psi4/psi4private#11 ; - [ ] psi4/psi4private#21 ; - [ ] psi4/psi4private#39 ; - [ ] psi4/psi4private#51 ; - [ ] psi4/psi4private#61 (after @robparrish signs off); - [ ] psi4/psi4private#79 (after @edeprince3 signs off) ; - [x] psi4/psi4private#110; - [x] psi4/psi4private#120 (after @dgasmith extract anything important into devel wishlist); - move to **developers wishlist** copying any good links or comments ; - [ ] psi4/psi4private#5 ; - [ ] psi4/psi4private#6 ; - [ ] psi4/psi4private#13 ; - [ ] psi4/psi4private#14 ; - [ ] psi4/psi4private#18 ; - [ ] psi4/psi4private#46 ; - [ ] psi4/psi4private#50 (keep the link) ; - [ ] psi4/psi4private#53 ; - [ ] psi4/psi4private#57 ; - [ ] psi4/psi4private#74; - **new ticket in psi4/psi4**; - [ ] psi4/psi4private#3 (hit a psio error trying to confirm-or-deny. will try to make gists public); - [ ] psi4/psi4private#16 ; - [ ] psi4/psi4private#20 ; - [ ] psi4/psi4private#54 ; - [ ] psi4/psi4private#75 + psi4/psi4private#92; - [x] repost as a public psi4/psi4betas repo with branches:; - [x] `4.0b1`; - [x] `4.0b2`; - [x] `4.0b3`; - [x] `4.0b4`; - [x] `4.0b5`; - [x] `1.0`,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/508:4721,error,error,4721,https://psicode.org,https://github.com/psi4/psi4/issues/508,1,['error'],['error']
Availability,"_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2021,Error,Error,2021,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"_UNARY_OPERATOR’; PYBIND11_UNARY_OPERATOR(pos, operator+, +l); ^~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory '/home/work/psi4/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:647: CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```. I configured psi4 with; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBRARIES=""-lopenblaso"" -DENABLE_AMBIT=OFF -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_PCMSolver=OFF -DCMAKE_INSTALL_PREFIX=/home/work/psi4/install -DCMAKE_AR=""/usr/bin/gcc-ar"" -DCMAKE_RANLIB=""/usr/bin/gcc-ranlib"" -DC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:3735,Error,Error,3735,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['Error'],['Error']
Availability,"__________. def test_json():; """"""json/energy""""""; ; import numpy as np; ; # Generate JSON data; json_data = {}; json_data[""molecule""] = """"""He 0 0 0\n--\nHe 0 0 1""""""; json_data[""driver""] = ""gradient""; json_data[""args""] = 'SCF'; json_data[""kwargs""] = {}; json_data[""options""] = {""BASIS"": ""STO-3G""}; json_data[""return_output""] = True; ; psi4.json_wrapper.run_json(json_data); ; assert psi4.compare_strings(""STO-3G"", json_data[""options""][""BASIS""], ""Options test""); > assert psi4.compare_integers(True, json_data[""success""], ""Success""). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py:644: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . expected = True, computed = False, label = 'Success'. def compare_integers(expected, computed, label):; """"""Function to compare two integers. Prints :py:func:`util.success`; when value *computed* matches value *expected*.; Performs a system exit on failure. Used in input files in the test suite.; ; """"""; if (expected != computed):; message = (""\t%s: computed value (%d) does not match (%d)."" % (label, computed, expected)); > raise TestComparisonError(message); E psi4.driver.p4util.exceptions.TestComparisonError: 	Success: computed value (0) does not match (1). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/p4util/util.py:244: TestComparisonError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; 	Options test......................................................PASSED; ____________________________________________________________________ test_dkh ____________________________________________________________________. @using_dkh; def test_dkh():; """"""dkh/molpro-2order""""""; ; Ne = psi4.geometry(""""""; 0 1; Ne; """"""); ; psi4.set_options({; 'reference': 'rhf',; 'basis': 'cc-pvtz-dk',; 'relativistic': 'dkh',; 'dkh_order': 2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:17676,failure,failure,17676,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['failure'],['failure']
Availability,"______________________________________________ ERROR collecting tests/cc36/test_input.py __________________________________________________________________________; test_input.py:1: in <module>; from addons import *; ../pytests/addons.py:9: in <module>; from qcengine.testing import _programs as _programs_qcng; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:173: in <module>; ""psi4"": is_program_new_enough(""psi4"", ""1.2""),; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:62: in is_program_new_enough; candidate_version = qcng.get_program(program).get_version(); /usr/local/lib/python3.9/site-packages/qcengine/programs/psi4.py:89: in get_version; with popen([which_prog, ""--version""]) as exc:; /usr/local/lib/python3.9/contextlib.py:119: in __enter__; return next(self.gen); /usr/local/lib/python3.9/site-packages/qcengine/util.py:304: in popen; ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}; /usr/local/lib/python3.9/subprocess.py:951: in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; /usr/local/lib/python3.9/subprocess.py:1744: in _execute_child; executable = os.fsencode(executable); /usr/local/lib/python3.9/os.py:810: in fsencode; filename = fspath(filename) # Does type-checking of `filename`.; E TypeError: expected str, bytes or os.PathLike object, not NoneType; ================================================================================== short test summary info ===================================================================================; ERROR test_input.py - TypeError: expected str, bytes or os.PathLike object, not NoneType; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ===================================================================================== 1 error in 13.38s ======================================================================================; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2802:1798,ERROR,ERROR,1798,https://psicode.org,https://github.com/psi4/psi4/issues/2802,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_0_cxx.cxx.o): relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC; /usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_1811_cxx.cxx.o): warning: relocation against `CR_aB_h010__0___CartesianMultipole_sB_0_c_0_c_0_Sb__p100__0___Ab__up_' in read-only section `.text'; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:408: src/core.cpython-39-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been written to: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/src/libint2_external-build; [ 82%] Performing build step for 'libint2_external'; Scanning dependencies of target int-obj; [ 0%] Building CXX object CMakeFiles/int-obj.dir/Unit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:1235,Error,Error,1235,https://psicode.org,https://github.com/psi4/psi4/issues/2572,2,['Error'],['Error']
Availability,"_fp=0x0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/molecule_print.cc:209; #6 0x00002aaaadd5abd5 in opt::optking (options=...); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/optking.cc:261; #7 0x00002aaaad0dd557 in py_psi_optking () at /home/laz/build/psi4/psi4/psi4/src/core.cc:239; #8 0x00002aaaad118e95 in pybind11::detail::argument_loader<>::call_impl<int, int (*&)()>(int (*&)(), pybind11::detail::index_sequence<>) (this=0x7fffffffc667, f=@0x5555560adc28: 0x2aaaad0dd4f4 <py_psi_optking()>); ... [Pythony bits snipped]; ```; In v3d_axpy(const double a, const double *X, const double *Y, double *Z), X and Y are undefined in my case and cause the seg fault. I've not dug into this in any depth yet but it looked like the linear bends of Frag 2 were added to Frag 1, so that it dies when the internal coordinates of Frag 1 are printed to the output because the internal coords refer to atoms not in that fragment. Or something along those lines. This job gives a seg fault with current git:; ```; molecule dimer {; C 0.824239 0.890517 1.696513; C 1.957325 0.070553 1.693001; C 1.813738 -1.320699 1.693796; C 0.537119 -1.892037 1.698103; C -0.595966 -1.072073 1.701616; C -0.452379 0.319180 1.700821; H 2.954752 0.516900 1.689636; H 0.424971 -2.979016 1.698724; H -1.593394 -1.518419 1.704981; H -1.337645 0.959804 1.703565; H 0.936388 1.977496 1.695892; C 2.947914 -2.141449 1.690280; N 3.874050 -2.836596 1.687416; --; C 0.717503 0.537187 -1.697308; C 0.049935 -0.691858 -1.697308; C -1.348233 -0.728319 -1.697309; C -2.078861 0.464332 -1.697309; C -1.411293 1.693378 -1.697308; C -0.013127 1.729838 -1.697308; H 1.809881 0.565636 -1.697308; H 0.620767 -1.623659 -1.697309; H -1.869768 -1.688580 -1.697309; H -3.171240 0.435884 -1.697309; H 0.508409 2.690100 -1.697308; C -2.142628 2.887174 -1.697308; N -2.730222 3.885021 -1.697308; symmetry c1; }. set optking {; frag_mode multi; }; set basis cc-pVDZ; optimize('blyp-d3bj'); ```; Running the same job with ""frag_mode single"", or ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680:2456,fault,fault,2456,https://psicode.org,https://github.com/psi4/psi4/issues/680,1,['fault'],['fault']
Availability,"` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmints/matrix.cc` (`Matrix::diagonalize`); - [x] Check that all requested roots converge in the `libqt` Davidson solver used by `adc/prepare_tensors.cc`; - [x] Mark the return value of the `libqt` Davidson solver as `[[nodiscard]]` to force callers to check how ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3265,failure,failure,3265,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"`LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/mol (0.5 % of a reaction energy of 188 kcal/mol !); * speed-ups: `ROBUST=1.33 `; `TREULTER=1.36`. _absolute energy molecule 35_; * dev. old BS to new BS: 3.41e-07; * (newBS) `NONE` to `ROBUST`: 4.93e-07; * (newBS) `NONE` to `TREU",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3978,ROBUST,ROBUST,3978,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,"``` bash; $ time psi4 --help. real 0m5.980s; user 0m1.279s; sys 0m4.693s; ```. This is done with b8a2f55b719d3. Why is psi4 so extremely slow to start? I have it both with g++/4.9.2 and icpc/2015.0.090 on multiple computers. As it is the sys time that is very high, I've used strace which tells me:. ```; % time seconds usecs/call calls errors syscall; ------ ----------- ----------- --------- --------- ----------------; 99.99 3.413450 1 5057853 times; 0.01 0.000177 4 43 mmap; 0.00 0.000082 2 37 brk; 0.00 0.000079 79 1 execve; 0.00 0.000071 4 16 close; 0.00 0.000032 2 18 fstat; 0.00 0.000018 1 30 mprotect; 0.00 0.000016 1 15 open; 0.00 0.000015 15 1 1 access; 0.00 0.000000 0 14 read; 0.00 0.000000 0 1 munmap; 0.00 0.000000 0 2 rt_sigaction; 0.00 0.000000 0 1 rt_sigprocmask; 0.00 0.000000 0 2 getdents; 0.00 0.000000 0 1 getrlimit; 0.00 0.000000 0 1 arch_prctl; 0.00 0.000000 0 2 futex; 0.00 0.000000 0 1 sched_getaffinity; 0.00 0.000000 0 1 set_tid_address; 0.00 0.000000 0 1 openat; 0.00 0.000000 0 1 set_robust_list; ------ ----------- ----------- --------- --------- ----------------; 100.00 3.413940 5058042 1 total; ```. Too much time sampling?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/89:337,error,errors,337,https://psicode.org,https://github.com/psi4/psi4/issues/89,1,['error'],['errors']
Availability,"```; # cubane Transition State CСSD(T)/cc-pVDZ geometry optimization. memory 2 Gb. molecule cubane {; 0 1; H -1.460 -1.409 -1.325; C -0.747 -0.790 -0.779; H -1.460 -1.409 1.325; C -0.747 -0.790 0.779; H -1.388 1.387 -1.426; C -0.772 0.772 -0.772; H 1.460 -1.460 -1.475; C 0.725 -0.725 -1.177; H -1.388 1.387 1.426; C -0.772 0.772 0.772; H 1.460 -1.460 1.475; C 0.725 -0.725 1.177; H 1.409 1.460 -1.325; C 0.790 0.747 -0.779; H 1.409 1.460 1.325; C 0.790 0.747 0.779; }. set {; basis cc-pVDZ; opt_type ts; }. set_num_threads(2). optimize('ccsd(t)'); ```. ---. Initial molecule has Molecular point group: cs, Full point group: Cs; after couple of step geometry optimization atomic coordinates changed to; Center X Y Z; ------------ ----------------- ----------------- -----------------; H -1.473705914299 -1.435393855860 -1.358489164213; C -0.797159999078 -0.797004109009 -0.746661382504; H -1.476630117570 -1.415339339271 1.362245194949; C -0.797740772644 -0.782869624563 0.746875065611; H -1.403399626888 1.397804298812 -1.532486210635; C -0.816065575433 0.813208518621 -0.796372487595; H 1.564836624106 -1.553887853367 -0.825942923699; C 0.782186226366 -0.785194185540 -0.703283447355; H -1.398864375817 1.398697058928 1.533459031552; C -0.813477696736 0.814494835084 0.795484014989; H 1.543644549536 -1.569635373854 0.822765427607; C 0.785442354192 -0.778370034240 0.690456922666; H 1.425099138027 1.481569438277 -1.355017034180; C 0.789948918555 0.800919182066 -0.744361460399; H 1.425889588787 1.478227539320 1.363344118168; C 0.793832546892 0.798935970506 0.747984335038; but Molecular point group didn't - cs; error issued; ERROR: Symmetry operation 1 did not map atom 7 to another atom:",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10:1616,error,error,1616,https://psicode.org,https://github.com/psi4/psi4/issues/10,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"```; ========================================================================================== FAILURES ===========================================================================================; ___________________________________________________________________________________ test_findif_2_0[kw1-9] ____________________________________________________________________________________. kw = {}, pts = 9. @pytest.mark.parametrize(""kw, pts"", [({""ref_gradient"": np.zeros((2, 3))}, 5), ({}, 9)]); def test_findif_2_0(kw, pts):; mol = psi4.geometry(""H\nH 1 2.0\nunits au""); psi4.set_options({""scf__E_CONVERGENCE"": 6}); plan = task_planner(; ""hessian"",; ""MP2/cc-pVDZ"",; mol,; **kw,; dertype=0,; findif_stencil_size=5,; findif_step_size=0.005 / math.sqrt(2 / 1.00782503223),; ); ; displacements = {; ""0: -2"": np.array([[0.0, 0.0, -1.0050], [0.0, 0.0, 1.0050]]),; ""0: 2"": np.array([[0.0, 0.0, -0.9950], [0.0, 0.0, 0.9950]]),; ""0: -1"": np.array([[0.0, 0.0, -1.0025], [0.0, 0.0, 1.0025]]),; ""0: 1"": np.array([[0.0, 0.0, -0.9975], [0.0, 0.0, 0.9975]]),; ""reference"": np.array([[0.0, 0.0, -1.0], [0.0, 0.0, 1.0]]),; # below here for r_proj False; ""1: -1"": np.array([[-0.0025, 0.0, -1.0], [0.0025, 0.0, 1.0]]),; ""1: -2"": np.array([[-0.005, 0.0, -1.0], [0.005, 0.0, 1.0]]),; ""2: -1"": np.array([[0.0, -0.0025, -1.0], [0.0, 0.0025, 1.0]]),; ""2: -2"": np.array([[0.0, -0.005, -1.0], [0.0, 0.005, 1.0]]),; }; ; assert isinstance(plan, FiniteDifferenceComputer); assert len(plan.task_list) == pts; ; for k2, plan2 in plan.task_list.items():; assert isinstance(plan2, AtomicComputer); assert plan2.basis == ""cc-pvdz""; assert plan2.method == ""mp2""; assert plan2.driver == ""energy""; assert np.allclose(plan2.molecule.geometry().np, displacements[k2]); assert plan2.keywords[""SCF__E_CONVERGENCE""] == 1.0e-6; > assert plan2.keywords[""SCF__D_CONVERGENCE""] == 1.0e-11; E assert 1.0000000000000001e-11 == 1e-11. /usr/ports/science/psi4/work/psi4-1.8.1/tests/pytests/test_task_planner.py:479: AssertionError; ----------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3014:96,FAILURE,FAILURES,96,https://psicode.org,https://github.com/psi4/psi4/issues/3014,1,['FAILURE'],['FAILURES']
Availability,"```; molecule {; O; H 1 1.0 ; H 1 1.0 2 104.5; }. wfn = energy(""mp2/sto-6g"", return_wfn=True)[1]; new_wfn = wfn.c1_deep_copy(wfn.basisset()); new_wfn.Ca(); ```. ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Wavefunction::Ca: Unable to obtain MO coefficients. !; ! Error occurred in file: !; ! /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libmints/wavefunction.cc on !; ! line: 810 !; ! The most recent 5 function calls were: !; ! !; !----------------------------------------------------------------------------------!; ```. Using `c1_deep_copy` on a non-HF wfn means the orbitals don't copy: that's handled by the constructor. This is causing problems in Francesco's group.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2777:265,Error,Error,265,https://psicode.org,https://github.com/psi4/psi4/issues/2777,2,['Error'],['Error']
Availability,"```; molecule {; units bohr; H; H 1 2.7; }. set scf_type pk. energy('fci/sto-6g'); ```. Above input file crashes with `Fatal Error: CIWavefunction: Iterations did not converge!` and lots of ""NAN"" in the output file.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2243:125,Error,Error,125,https://psicode.org,https://github.com/psi4/psi4/issues/2243,1,['Error'],['Error']
Availability,"```console; $ cmake --version; cmake version 3.18.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; $ ls /path/to/eigen3/share/eigen3/cmake; Eigen3Config.cmake Eigen3ConfigVersion.cmake Eigen3Targets.cmake UseEigen3.cmake; ```. Here Eigen 3.3.7 is manually installed. ```console; $ git describe --always; v1.5-178-gd725195826a1; $ cmake -G Ninja -B build -S . -D BOOST_ROOT:PATH=/path/to/boost -D Eigen3_DIR:PATH=/path/to/eigen3/share/eigen3/cmake; $ cmake --build build -- external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:690,Error,Error,690,https://psicode.org,https://github.com/psi4/psi4/issues/2606,1,['Error'],['Error']
Availability,"```external/upstream/libint/CMakeLists.txt``` has this line:; ```; find_package(Libint 1.2.0 CONFIG QUIET COMPONENTS ${MAX_AM_ERI}); ```. I have the latest version of libint installed: libint-1.2.1_1 (also see here https://repology.org/project/libint/versions). I changed this line to the latest version:; ```; find_package(Libint 1.2.1 CONFIG QUIET COMPONENTS ${MAX_AM_ERI}); ```; but it fails to find it:; ```; -- Suitable Libint could not be located, Building Libint instead.; ```. libint-1.2.1_1 doesn't provide .pc or .cmake files, so I am not sure how can it even ever be able to find it through a cmake script like this?. It's undesirable to download and rebuild libint when the package is available. Please also note that the latest generation of libint is libint2, which does provide ```libint2.pc``` .",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1589:649,down,download,649,https://psicode.org,https://github.com/psi4/psi4/issues/1589,2,"['avail', 'down']","['available', 'download']"
Availability,"`dft-grad-lr3` test fails with the current master (64aa80aa96983bec51d40732d18f3def5eb9e844):; ```; $ ctest -R dft-grad-lr3 --output-on-failure; Test project /home/raimis/psi4.git/linux_build; Start 158: dft-grad-lr3; 1/1 Test #158: dft-grad-lr3 .....................***Failed 85.00 sec; 	Analytic vs Reference wB97X-D Gradients...........................PASSED; Traceback (most recent call last):; File ""/home/raimis/psi4.git/linux_build/stage/bin/psi4"", line 290, in <module>; exec(content); File ""<string>"", line 74, in <module>; File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/driver.py"", line 680, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/proc.py"", line 2084, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/proc.py"", line 2022, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule()); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/procrouting/empirical_dispersion.py"", line 195, in compute_energy; verbose=1); File ""/home/raimis/psi4.git/linux_build/stage/lib/psi4/driver/qcdb/intf_dftd3/runner.py"", line 136, in run_dftd3_from_arrays; jobrec['qcvars']['CURRENT ENERGY'] = copy.deepcopy(jobrec['qcvars']['DISPERSION CORRECTION ENERGY']). KeyError: 'qcvars'; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). 0% tests passed, 1 tests failed out of 1. Label Time Summary:; dft = 85.00 sec*proc (1 test); psi = 85.00 sec*proc (1 test); scf = 85.00 sec*proc (1 test). Total Test time (real) = 85.06 sec. The following tests FAILED:; 	158 - dft-grad-lr3 (Failed); Errors while running CTest; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1418:136,failure,failure,136,https://psicode.org,https://github.com/psi4/psi4/issues/1418,2,"['Error', 'failure']","['Errors', 'failure']"
Availability,"`libint`s are out there?; `conda list`; ```; # v notice 5 vs 4 here; # v; libint: 1.2.1-hb4a4fd4_5 # AM ** 8 **, compatible with conda psi4 >= 1.3rc1, new!; libint: 1.2.1-h87b9b30_4 # AM ** 6 **, compatible with conda psi4 < 1.3rc1, 8 mo old; libint: 1.2.1-am8_1 # AM ** 8 **, compatible with compile-yourself psi4 only, deprecated, 19 mo old; ```. ### what can go wrong with conda psi4?. * Both latest psi4 and latest libint conda packages are compatible, so a fresh install `conda update psi4 libint -c psi4/label/dev` will be fine.; * However, if you have a conda environment and you update psi4 but not libint, then you'll have a >=1.3rc1 psi4 and the `_4` (see above) AM6 libint, which is trouble. Easy to solve by updating libint: `conda update libint -c psi4/label/dev`. After that, your `conda list` should say `_5`.; * If you have a conda env and you update libint but not psi4 (uncommon), that's also a problem. Update psi4. If what you really want is for the psi4 to work and the libint upgrade was a mistake, downgrade the libint: `conda install libint=1.2.1=h87b9b30_4 -c psi4`. ### what can go wrong with locally-built psi4?. * A major use of the `libint` conda package is to be a detectable pre-built dependency for a from-source psi4 compilation. If the `$CONDA_PREFIX/lib/libint.so` to which a psi4 `core.so` is linked suddenly changes identity, psi4 will be deranged.; * To fix this, `cmake` needs to detect the new libint headers and a half-dozen psi4 files need to rebuild.; ```; > cd <objdir>; > rm -rf external/upstream/libint/; > make; # cmake says: -- Found Libint 8: /home/psilocaluser/toolchainconda/envs/p4dev37/lib/libint.so (found version 1.2.1); ```; * If you need to avoid recompiling and instead revert your environment back to the AM6 libint, use the command in the last bullet of the previous section. ### Notes; * Only Linux affected. It took a week to build AM6 on the mac mini, so AM8 is not within reach. Thus, it's possible for the same job to run fine on linux ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1533:2087,down,downgrade,2087,https://psicode.org,https://github.com/psi4/psi4/issues/1533,1,['down'],['downgrade']
Availability,"`psi4 --version` gives:. ```; (gdb) r; Starting program: /home/ward/tmp/psi4release/build2/bin/psi4 --version; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"". Program received signal SIGSEGV, Segmentation fault.; std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; 51 if (__os.tie() && __os.good()); Missing separate debuginfos, use: debuginfo-install python-libs-2.7.8-9.fc21.x86_64; (gdb) bt; #0 std::ostream::sentry::sentry (this=0x7fffffffcea0, __os=...) at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream.tcc:51; #1 0x000000390e699869 in std::__ostream_insert<char, std::char_traits<char> > (__out=..., __s=__s@entry=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __n=76); at /usr/src/debug/gcc-4.9.2-20150212/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/ostream_insert.h:82; #2 0x0000000001e6bd18 in operator<< <std::char_traits<char> > (__s=0x2baeb60 "" "", '-' <repeats 71 times>, ""\n"", __out=...) at /usr/include/c++/4.9.2/ostream:535; #3 Write2Buffer<char*> (Input=<synthetic pointer>, this=0x0) at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.h:157; #4 psi::PsiOutStream::Printf (this=0x0, format=format@entry=0x204e9c0 "" "", '-' <repeats 71 times>, ""\n"") at /home/ward/tmp/psi4release/src/lib/libparallel/PsiOutStream.cc:82; #5 0x00000000008a79bf in psi::print_version () at /home/ward/tmp/psi4release/build2/src/bin/psi4/version.cc:38; #6 0x00000000008e2d57 in psi::psi_start (argc=argc@entry=2, argv=argv@entry=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi_start.cc:187; #7 0x0000000000780f3c in main (argc=2, argv=0x7fffffffd798) at /home/ward/tmp/psi4release/src/bin/psi4/psi4.cc:100; ```. Done on Fedora 21 with gcc-4.9.2 using 93a5e8d84afd652e6226. `psi4 --help` works fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88:264,fault,fault,264,https://psicode.org,https://github.com/psi4/psi4/issues/88,1,['fault'],['fault']
Availability,"a.py](https://localhost:8080/#) in to_schema(molrec, dtype, units, np_out, copy); 47 geom = geom * molrec[""input_units_to_au""]; 48 else:; ---> 49 geom = geom * constants.conversion_factor(molrec[""units""], units); 50 ; 51 nat = geom.shape[0] // 3. [/usr/local/lib/python3.7/site-packages/qcelemental/physical_constants/context.py](https://localhost:8080/#) in conversion_factor(self, base_unit, conv_unit); 310 # Add a little magic in case the incoming values have scalars; 311 ; --> 312 from pint import quantity; 313 ; 314 factor = 1.0. [/usr/local/lib/python3.7/site-packages/pint/__init__.py](https://localhost:8080/#) in <module>(); 12 """"""; 13 ; ---> 14 from .context import Context; 15 from .errors import ( # noqa: F401; 16 DefinitionSyntaxError,. [/usr/local/lib/python3.7/site-packages/pint/context.py](https://localhost:8080/#) in <module>(); 13 from collections import ChainMap, defaultdict; 14 ; ---> 15 from .definitions import Definition, UnitDefinition; 16 from .errors import DefinitionSyntaxError; 17 from .util import ParserHelper, SourceIterator, to_units_container. [/usr/local/lib/python3.7/site-packages/pint/definitions.py](https://localhost:8080/#) in <module>(); 11 from collections import namedtuple; 12 ; ---> 13 from .converters import LogarithmicConverter, OffsetConverter, ScaleConverter; 14 from .errors import DefinitionSyntaxError; 15 from .util import ParserHelper, UnitsContainer, _is_dim. [/usr/local/lib/python3.7/site-packages/pint/converters.py](https://localhost:8080/#) in <module>(); 10 ; 11 ; ---> 12 from .compat import HAS_NUMPY, exp, log # noqa: F401; 13 ; 14 . [/usr/local/lib/python3.7/site-packages/pint/compat.py](https://localhost:8080/#) in <module>(); 161 # xarray (DataArray, Dataset, Variable); 162 try:; --> 163 from xarray import DataArray, Dataset, Variable; 164 ; 165 upcast_types += [DataArray, Dataset, Variable]. [/usr/local/lib/python3.7/dist-packages/xarray/__init__.py](https://localhost:8080/#) in <module>(); 1 import pkg_resources; 2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2510:4534,error,errors,4534,https://psicode.org,https://github.com/psi4/psi4/issues/2510,1,['error'],['errors']
Availability,"a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the end; * https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L25 for libint2 build constraints for Psi4. Steps toward Psi4 using a upstream Libint2 release in common with other open-source QC programs:; * step 2 — 20 Nov 2020 — #1721; * step 3 — 11 Mar 2022 — #2388; * post 3 — 16 Mar 2022 — #2474, #2482, #2484; * step C — 21 March 2022 — #2489; * step C — 21 March 2022 — #2483; * step B — 23 March 2022 — #2413; * post B — 23 March 2022 — #2494 ; * step C — 25 March 2022 — #2386; * step C — 25 March 2022 — #2496; * step C — 30 March 2022 — #2504; * step C — 31 March 2022 — #2517; * step C — 31 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5963,down,download,5963,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"after pulling a few commits to the current version I encounter the following error:. ```; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_mints.cc.o; /usr/qc/psi4/psi4/src/export_mints.cc: In function ‘void export_mints(pybind11::module&)’:; /usr/qc/psi4/psi4/src/export_mints.cc:1029:79: error: ‘buffer_protocol’ is not a member of ‘py’; py::class_<detci::CIvect, std::shared_ptr<detci::CIvect> >(m, ""CIVector"", py::buffer_protocol(), ""docstring""); ```. guess it has to do with https://github.com/psi4/psi4/pull/557 which is way over my head.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577:77,error,error,77,https://psicode.org,https://github.com/psi4/psi4/issues/577,2,['error'],['error']
Availability,"age\lib\deriv.lib D:\a\1\b\build\stage\lib\int.lib C:\tools\miniconda3\Library\lib\mkl_rt.lib C:\tools\miniconda3\Library\lib\libiomp5md.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\core.cp36-win_amd64.pyd.manifest"" failed (exit code 1120) with the following output:; Creating library src\core.lib and object src\core.exp; cc.lib(lmp2.cc.obj) : error LNK2019: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ) referenced in function ""public: virtual void * __cdecl psi::MaxIterationsExceeded<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$MaxIterationsExceeded@H@psi@@UEAAPEAXI@Z); dcft.lib(dcft_compute_RHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_compute_UHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_qc.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); src\core.cp36-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals; ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix `psi::MaxIterationsExceeded` implementation; - [x] Fix `psi::ConvergenceError` implementation; - [x] Clean up includes. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1419:6510,error,error,6510,https://psicode.org,https://github.com/psi4/psi4/pull/1419,3,['error'],['error']
Availability,"alize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3007,failure,failure,3007,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"an ERIs cause the Windows build to hang longer than the 6h Azure allows, so the W package is hessin-ints-less for TEI (I kept the onebody 2der). This isn't too debilitating since only HF and SVWN have analytic hessians anyways, so when an incapable L2 is detected (imagine that -- we can ask L2 what it can do!), it falls back to FD. That would be easy enough except the tests check too tightly for 3-pt FD to match analytical refs. So I've added a `d2ints` label to ctest and pytest to allow not running. This should probably convert to a skipif someday. Most of the tests I've checked individually and they would pass if findif points=5.; - [x] You notice a ""new"" boost-cpp dependency. Compiling against the header-only L2 C++11 interface (as psi4 does) requires a select few boost headers. In building the L2 package, one can either ask L2 to copy those few files in to `include/libint2/boost/` (that is, vendor boost) or not, effectively passing the problem along to the consumer (psi). In my own conda packages for L2, I did the former, so psi didn't need any boost. For the c-f L2 packages, I figured it was better practice to not vendor, hence the ""new"" dep. It's header-only, not boost::python or any of the boost compiled libs, so not too much trouble, I think. ## Questions; Can look at the libmints files to form an opinion on these.; - [x] `libint2::initialize()` was called three times, but `libint2::finalize()` only once. I added two more, but should I have?; - [x] Also, since we need to set the ordering, should the init be centralized in core.cc, or is it fine as is?; - [ ] technically, ordering could be set at runtime. that seemed hard to reliably prevent mixing of scratch files so I stuck with the restricted build-time case. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2861:3730,reliab,reliably,3730,https://psicode.org,https://github.com/psi4/psi4/pull/2861,1,['reliab'],['reliably']
Availability,"an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure. ## Questions; - [x] Is `libciomr` a good place for the new wrappers to live in? The one they are replacing is there, so it seemed like as good of a place as any. ## Checklist; - [x] No new features; - [x] 503/503 ctests are passing. ## St",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:2092,failure,failure,2092,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"ance for all the compare_* fns and added to docs.; - [x] light updating of user testing docs in build_planning.rst. - Misc.; - [x] improved `psi4.extras()` printing so you know what you're missing: `['adcc', 'ambit', 'c̶c̶t̶3̶', ...`; - [x] fixed some FutureWarnings like replacing `set_module_options`; - [x] added ""maxeco"" conda env files to devtools/ for each platform for developers/users who prefer those to psi4-dev conda package. they were generated from the ecosystem GHA but not autoupdated -- that may happen in a future GHA from master; - [x] added passing `CMAKE_OSX_DEPLOYMENT_TARGET` and `CMAKE_OSX_SYSROOT` cmakevars to internal builds. this is how the macOS SDK gets passed through, apparently, for C/C++. it happens through `CMAKE_Fortran_FLAGS` for Fortran. proven necessary for v2rdm_casscf, so I rolled it out to all the compiled externals.; - [x] for ambit, added Python and pb11 cmakevars that are proper for the new de-boosted and new-python-searched version. left old (capital PYTHON) for now. ## Questions; - [ ] PR is mostly CI, so non-user-facing, and testing supplements, so non-user-changing. But it requires cutting-edge pytest 7 (released Dec 2021) available from conda c-f and pypi, not from conda defaults yet. ok to demand of users? most aren't running pytests I would guess.; - [ ] In documenting psi4 compare functions, have to autodoc qcel compare fn, and that shows up a circular import in forward declaration of types (bet you didn't think that would be a sentence applied to Python 5 years ago) that produces a Sphinx warning. I've figured out how to edit qcel to avoid this, but until that makes its way into a release, we may have to turn off warnings-as-errors in psi4 docs build. ok?. close #1708. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge !SQUASH!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:6149,avail,available,6149,https://psicode.org,https://github.com/psi4/psi4/pull/2454,2,"['avail', 'error']","['available', 'errors']"
Availability,"anssen, E. F. Valeev, M. L. Leininger,; J. F. Gonthier, R. M. Richard, H. R. McAlexander, M. Saitow, X. Wang,; P. Verma, M. H. Lechner, and A. Jiang. Previous Authors, Complete List of Code Contributors,; and Citations for Specific Modules; https://github.com/psi4/psi4/blob/master/codemeta.json; https://github.com/psi4/psi4/graphs/contributors; http://psicode.org/psi4manual/master/introduction.html#citing-psifour. -----------------------------------------------------------------------. Psi4 started on: Friday, 22 July 2022 01:16PM. Process ID: 7409; Host: [REMOVED]; PSIDATADIR: [REMOVED]; Memory: 500.0 MiB; Threads: 14; ; ==> Input File <==. --------------------------------------------------------------------------; print_out('\nSETUP_PHASE\n'); set_num_threads(14); set num_frozen_docc 12; set {; dft_vv10_b 0.06022547162926983; dft_vv10_c 0.7450476605857299; }; set {; basis def2-tzvppd; guess sad; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; }; set {; wcombine False; }; molecule mol {; 0 1; C -0.260781259973 -0.714012941782 1.022641061033; C 0.448798235138 -0.584866555587 1.116392879147; C 0.671191593804 0.158609920222 1.104026912627; C 0.177969561551 0.681404978559 1.093307893756; C -0.560580808895 0.542719215332 1.056079456761; C -0.776583606603 -0.133446136243 1.103859872549; H -0.442720873003 -1.244238976392 0.982141695030; H 0.874512929539 -0.960390442589 1.119149924166; H 1.217460053606 0.336381670040 1.046181387539; H 0.335297687566 1.281777775821 0.982193856028; H -0.948519039798 0.925731991759 1.117846063269; H -1.420111450991 -0.227880344246 1.099752848840; C -0.431336419082 -0.578608087844 -1.006105897774; C -0.616450380987 0.164556718463 -1.058443190817; C -0.158086394624 0.730699386222 -0.889727187104; C 0.484942144607 0.574229834356 -0.649010141458; C 0.688355917017 -0.142302467208 -0.581381981865; C 0.242793965654 -0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:4065,robust,robust,4065,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['robust'],['robust']
Availability,"anual) on how to do that calculation. I was able to obtain CASSCF energies and wavefunctions, and was going to just use the CASSCF wavefunction as the reference for MRCI calculation, but had little success in doing so. The followings are my code (python), trying to optimize the energy for the C state of the C2 molecule (which has two main configurations near its equilibrium bond length). The paper included above deals with the X, B, and B' state of C2, but those are not the states that I want. (I want the singlet C state). ## geometry; c2=psi4.geometry(""""""; 0 1; c ; c 1 1.25; symmetry d2h; """"""); ##. ## use the C-state main electron configuration as the reference for CASSCF; psi4.set_options({; 'basis': 'cc-pVdz',; 'reference': 'rohf',; 'docc': [2, 0, 0, 0, 0, 1, 0, 1],; 'socc': [0, 0, 0, 0, 0, 1, 1, 0],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'mcscf_r_convergence': 5.e-6; }). psi4.set_module_options('detci',{; 'num_roots': 1,; 'calc_s_squared': True; }). casscf_energy, casscf_wfn = psi4.energy('casscf', return_wfn=True). #the code works up to this point. ## my way of feeding the casscf_wfn for another round of CI, but it did not work at all; psi4.set_options({; 'wfn': 'detci',; 'guess': 'gwh',; 'basis': 'cc-pVDZ',; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'e_convergence': 10,; 'd_convergence': 10; }). thisenergy = psi4.energy('detci',ref_wfn=casscf_wfn). When I did the second round of CI, psi4 crashed. It got stuck at the ""Starting CI iterations"" part, with the error message ""Segmentation fault: 11"". I am quite new to Psi4, but hopefully I am not talking complete non-sense here. Also, while the CASSCF bit worked, the CASSCF energy is much higher than I expected (by ~0.2 hartree). The C-state minimum lies above the 3P+3P limit, instead ~2-3 eV below it. So, it would also be helpful if someone could teach me the best way to carry out the CASSCF calculation on the C state. Thanks,. JJ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1907:1918,error,error,1918,https://psicode.org,https://github.com/psi4/psi4/issues/1907,2,"['error', 'fault']","['error', 'fault']"
Availability,"any float or array var set ?|; | | | variable |–|y|y| return float or array var value |; | | | set_variable |–|y|y| set float/Matrix/ndarray var value |; | | | del_variable |–|y|y| unset float or array var |; | | | variables |–|y|y| return dict of all float or array vars |; | | clean_variables | clean_variables |–|–|y| unset all float or array vars |. ### Original Proposal (static). | Now `Wavefunction` | Now `psi4.core` | Proposed Both | doc |; |-----|----|----|---|; | | has_variable | has_variable | is float var set ? |; | get_variable | get_variable | variable | return float var value |; | set_variable | set_variable | set_variable | set float var value |; | | | del_variable | unset float var |; | |; | variables | get_variables | variables | return dict of float vars |; | | clean_variables | clean_variables | unset all float vars |; | |; | | | has_array_variable | is array var set ? |; | get_array | get_array_variable | array_variable | return array var value |; | set_array | set_array_variable | set_array_variable | set array var value |; | | | del_array_variable | unset array var |; | |; | arrays | get_array_variables | array_variables | return dict of array vars |; | | | clean_array_variables | unset all array vars |. ### Questions. - [x] No, nothing will break immediately. Use of old syntax will yield runtime `FutureWarning`s if called from Python or compile-time `PSI_DEPRECATED` warnings if called from C++. Old syntax will stop working in Psi4 v1.4. - [x] Note that QCDB (common driver) and QCSchema (I think) merge float vars and array vars into single ~dict. Do we want to consider single access / multi storage in the C++ classes so number of accessors is halved? **EDIT** Answer: yes (see table above), going with multi storage C-side, multi access C-side, unified access Py-side. - Any other changes to suggested syntax. - Whole point of posting this as a PEP instead of leaving it on core-dev is so users/downstream/interested parties can weigh in. Please do so.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1375:3593,down,downstream,3593,https://psicode.org,https://github.com/psi4/psi4/issues/1375,1,['down'],['downstream']
Availability,"ariables:. ```; echo $CFLAGS; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a build with `CXXFLAGS=""-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=native -O3 -pip",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1186,echo,echo,1186,https://psicode.org,https://github.com/psi4/psi4/issues/2416,1,['echo'],['echo']
Availability,"as.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; blas.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapk:; lapk.INTERFACE_COMPILE_DEFINITIONS = <NOTFOUND>; lapk.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapk.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapk.INTERFACE_LINK_LIBRARIES = ""/opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so""; Properties for TARGET lapack:; lapack.INTERFACE_COMPILE_DEFINITIONS = ""USING_LAPACK_MKL""; lapack.INTERFACE_COMPILE_OPTIONS = <NOTFOUND>; lapack.INTERFACE_INCLUDE_DIRS = <NOTFOUND>; lapack.INTERFACE_LINK_LIBRARIES = ""lapk;blas;tgt::MathOpenMP"". -- Found LAPACK MKL: /opt/intel/compilers_and_libraries_2018.3.222/linux/mkl/lib/intel64/libmkl_rt.so;...; ```. If I try to build, it eventually bails out with:; ```; Scanning dependencies of target psi4-core; [ 78%] Creating directories for 'psi4-core'; [ 81%] No download step for 'psi4-core'; [ 84%] No update step for 'psi4-core'; [ 87%] No patch step for 'psi4-core'; [ 90%] Performing configure step for 'psi4-core'; loading initial cache file /home/laz/build/psi4/psi4/objdir/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041:2220,down,download,2220,https://psicode.org,https://github.com/psi4/psi4/issues/1041,1,['down'],['download']
Availability,"ase update all `PSIDATADIR` references accordingly.; - `Process::environment.wavefunction` no longer exists. This will break any input side `psi4.wavefunction` and `psi4.set_wavefunciton` calls. Please use the `return_wfn` and `ref_wfn` kwargs on methods instead.; - A consequence of this is we broke all of the plugins! Don't worry the fix is very simple please change your C++ signature from: ; `PsiReturnType skeleton(Options& options)`; to:; `SharedWavefunction skeleton(SharedWavefunction ref_wfn, Options& options)`; Every method in Psi4 now takes a Wavefunction and Options objects, this is to make plugins consistent as well. The python-side signature is now `psi4.plugin('skeleton.so', ref_wfn)`. Options passing has not yet been handled, but thats next up on the list. ---. Below is a list of outstanding issues. Please note that these will likely not all be cleaned up here. Outstanding issues will be moved to a ticket:; - [x] Methods also take the `molecule` kwarg, it is not clear if `ref_wfn` or `molecule` should supersede the other yet.; - [x] Not all methods return wavefunctions yet. For example what does a SAPT wavefunction look like?; - [x] psimrcc Wavefunction; - [x] SAPT Wavefunction; - [x] EFP Wavefunction; - [x] If I pass SCF a `ref_wfn` with orbitals, the `ref_wfn` orbitals are not used.; - [x] We would like a SCF level wavefunction to be able to cast itself back C1 symmetry so that we can run symmetry-based SCF and then use this wavefunction in symmetry intolerant code. These transforms are reimplemented in every symmetry tolerant code.; - [x] Saving of binary `optking` information may break for very complex optimizations (database, cbs wrapper, etc). Optimization proceeds, but always restarts at the first iteration so convergence is slow.; - [x] Plugin examples are starting to show their age. We probably need to overhaul these.; - [x] The documentation needs to reflect the above changes.; - [x] DF and RI calls should soft fail with a proper error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246:3491,toler,tolerant,3491,https://psicode.org,https://github.com/psi4/psi4/pull/246,2,"['error', 'toler']","['error', 'tolerant']"
Availability,"at. But I have noticed that conda adds some questionable compiler flags to the following environmental variables:. ```; echo $CFLAGS; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1085,echo,echo,1085,https://psicode.org,https://github.com/psi4/psi4/issues/2416,1,['echo'],['echo']
Availability,"ation Energy (a.u.) : -0.28089413018141; CD-MP2 Total Energy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(bo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391:1772,error,error,1772,https://psicode.org,https://github.com/psi4/psi4/issues/391,1,['error'],['error']
Availability,"ation choice that I haven't identified. Anyway, that's why those are separate entries (away from qcng) in `standard_suite_ref_local.py`; * In filling out the capabilities tables for Hessians, I tried to collect CD Hessians for HF and SVWN by FD of energies. They failed the per-element CD result ~= CONV result check. Not surprising since CD thresh is set at 1e-4. I didn't do anything about the failure (ref values deleted and tests are not active), so this is just to bring up that CD threshold is untuned for dertype or E_/D_/R_CONVERGENCE.; * refuted first two thirds of a prominent footnote: `DFT gradients only implemented for SCF type DF. LRC-DFT gradients not implemented yet. DH-DFT gradients not implemented.`; - [x] upgraded stdsuite runner to catch up with qcdb and qcengine last year by (1) implementing per-dertype and abs/rel comparison checks (nothing is actually loosened) and (2) dropping a dict summary of each test to a record file.; - [x] arranged for available `td-{dft}` calls to show up in the energy table, https://psicode.org/psi4manual/master/energy.html; - [x] fixed `energy(""psimrcc_scf"")` to use regular SCF as ref for PSIMRCC and added a test; - [x] rehabilitated `energy(""qchf"")` (which never had its initialism expanded in the whole of the codebase, btw) so it runs. added a test. it probably ought to be better integrated with regular SCF module. Regular SCF has a qchf option that is unused.; - [x] adjusted some qcvars in FNOCC to collect more components from cepa-like methods and to collect different perturbative triples for qcisd.; - [x] collected qcvars correctly in DFOCC for CCD and QCHF. (It was harvesting the CCD method that tipped me into the rabbit-hole that became this PR.). - [x] TODO `pytest -m quick` is still friendly to run (CI finished in reasonable time), but the additions to stdsuite have make ordinary full pytests expensive. I need to manipulate default marks so folks don't inadvertently start hours of tests. `pytest -v ../tests/pytests/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:11585,avail,available,11585,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"axis_representation (probably should double-check this with a spectroscopy book); - Optimize instantiation (really, update_geometry) of large systems by a couple orders of magnitude (now ~1 min for 6000 atoms, w/symmetry); - Hook up Trent Parker's linear-scaling BFS algorithm to qcdb.Molecule or through just np arrays. Has ""seed"" argument so you can forcibly split intramolecularly or close-bound intermol.; - Selected steps (for performance) are now in numpy, as a result, `geometry(np_out=True)` and `xyz(np_out=True)` are avail to skip the cast-back-to-list step. Also, `to_arrays` returns geom, mass, elez, etc. as numpy arrays, rather than needing to iterate over natom.; - `psi4.core.Molecule`; - add rotational_symmetry_number; - export rotor_type; - faster BFS algorithm hooked up to psi4.Mol, too. Depending on Mol type, returns numpy split arrays, single large Mol with atoms rearranged and fragmentation embedded, and/or list of indiv Mols, one for each fragment. Radically pare down auto_fragments/old BFS code.; - `units` no longer exported as a property. has getter/setter, and the getter returns strings, not `Molecule::GeometryUnits` objects.; - _Both_ psi4.core.Molecule && qcdb.Molecule; - Enhanced `add_atom` to take label (in add'n to symbol) and mass number, so is a full fledged CoordEntry entry point; - Add `mass_number` storage and accessor. In Psi, this is just a pass-through – nothing done with it. Stores isotope mass number if mass corresponds to valid nuclide, -1 otherwise or unknown.; - Fragmentation member data public access. Rename fragments --> get_fragments; similar for fragment_types, fragment_charges, fragment_multiplicities. Only fisapt code was using this. For setters, added `set_fragmentation_pattern` that sets them all at once.; - Added `input_units_to_au` getter/setter; checks physical reasonableness.; - Sets input_units_to_au whenever set_units called, rather than as extra step.; - Finally add a `com_fixed` fn to mirror `orientation_fixed`. In q",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:2847,down,down,2847,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['down'],['down']
Availability,"bjects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(157): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::pointer pointer;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:11827,error,error,11827,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"c`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmints/matrix.cc` (`Matrix::diagonalize`); - [x] Check that all requested roots converge in the `libqt` Davidson solver used by `adc/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3136,failure,failure,3136,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"cal Harmonics?: true; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 5.1.6; S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97M-V <= . wB97M-V Hyb-GGA Exchange-Correlation Functional. N. Mardirossian and M. Head-Gordon, J. Chem. Phys. 144, 214110 (2016) (10.1063/1.4952647). Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97M-V exchange-correlation functional. => Exact (HF) Exchange <=. 0.8500 HF,LR [omega = 0.3000]; 0.1500 HF . => LibXC Density Thresholds <==. XC_HYB_MGGA_XC_WB97M_V: 1.00E-13 . => VV10 Non-Local Parameters <=. VV10 B = 6.0225E-02; VV10 C = 7.4505E-01. => Molecular Quadrature <=. Radial Scheme = EM; Pruning Scheme = ROBUST; Pruning Type = REGION; Nuclear Scheme = SBECKE. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 99; Spherical Points = 590; Total Points = 912458; Total Blocks = 6145; Max Points = 256; Max Functions = 640; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 13-18 entry C line 198 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-12, 19-24 entry H line 18 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 14; Integrals threads: 14; Memory [MiB]: 337; Algorithm: Disk; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (DEF2-TZVPPD AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 372; Number of basis functions: 1116; Number of Cartesian functions: 1308; Spherical Harmonics?: true; Max angular momentum: 4. Cached 0.1% of DFT collocation blocks in 0.036 [GiB]. Minimum eigenvalue in t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:9690,Toler,Tolerance,9690,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['Toler'],['Tolerance']
Availability,capabilities maintenance,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:13,mainten,maintenance,13,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['mainten'],['maintenance']
Availability,"cates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2d::diagonalize`; - [x] Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"" in `libmints/matrix.cc` (`Matrix::diagonalize`); - [x] Check that all requested roots converge in the `libqt` Davidson solver used by `adc/prepare_tensors.cc`; - [x] Mark the return value of the `libqt` Davidson solver as `[[nodiscard]]` to force callers to check how many of the requested roots actually converged. ### Unrelated fixes; - [x] Fix a memory leak in the ROHF stability check. **(merged: #2671)**. ### Changes to comments, formatting, etc.; - [x] Fix typos in comments in `adc/diagonalize.cc` and `occ/dpd.h`; - [x] clang-format some files; - [x] Delete some empty lines between doc-comment-blocks and the function defin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:3665,down,down,3665,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['down'],['down']
Availability,"cdgesv, Array2d::lineq_flin, Array2d::lineq_pople` and `Tensor2d::davidson, Tensor2d::cdsyev, Tensor2d::cdgesv, Tensor2d::lineq_flin, Tensor2d::lineq_pople` (PR #2684); - [x] Delete unused function overloads from `libmints`: `Matrix::diagonalize` (PR #2693); - [x] Delete commented out code, an unused `extern FILE*` and unused `#include`s from `mcscf::SCF::energy` (PR #2678). ### New DSYEV wrappers, anti-`sq_rsp(...)` crusade; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2052,failure,failure,2052,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,cdomp2-2 test suite failure with ATLAS,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1461:20,failure,failure,20,https://psicode.org,https://github.com/psi4/psi4/issues/1461,1,['failure'],['failure']
Availability,"cense"" for more information.; >>> import sys; >>> sys.executable; '/home/xxx/data/applications/anaconda3/envs/p4env/bin/python'; >>> sys.path; ['', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python36.zip', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/lib-dynload', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages']; >>> import psi4; /home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; ```. If I run inside a notebook, `sys.path` and `sys.executable` are the same, but when I `import psi4`, I get a message ""The kernel appears to have died. It will restart automatically."" In the terminal, I see: ; ```; [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:1720,ERROR,ERROR,1720,https://psicode.org,https://github.com/psi4/psi4/issues/862,1,['ERROR'],['ERROR']
Availability,"cf_solver; Consolidate compiler generated dependencies of target scfgrad; [ 13%] Built target scfgrad; Consolidate compiler generated dependencies of target l2export; [ 13%] Built target l2export; Consolidate compiler generated dependencies of target 3index; [ 13%] Built target 3index; Consolidate compiler generated dependencies of target ciomr; [ 15%] Built target ciomr; Consolidate compiler generated dependencies of target cubeprop; [ 16%] Built target cubeprop; Consolidate compiler generated dependencies of target disp; [ 16%] Built target disp; Consolidate compiler generated dependencies of target dpd; [ 25%] Built target dpd; Consolidate compiler generated dependencies of target filesystem; [ 25%] Built target filesystem; Consolidate compiler generated dependencies of target fock; [ 25%] Building CXX object src/psi4/libfock/CMakeFiles/fock.dir/DiskDFJK.cc.o; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:17: error: no viable overloaded operator[] for type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ~~~~~~~~^~~~~~~~~~~~~~; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:68: error: member access into incomplete type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ^; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libqt/qt.h:47:7: note: forward declaration of 'psi::Options'; class Options;; ^; 2 errors generated. ```. I'm doing this on my intel mac: `2.6 GHz 6-Core Intel Core i7`; using clang++ ; ```; (base) gwood@EXS-001355 build % /usr/local/opt/llvm/bin/clang++ -v; Homebrew clang version 15.0.7; Target: x86_64-apple-darwin22.4.0; Thread model: posix; InstalledDir: /usr/local/opt/llvm/bin`; ```. The only issue prior to this was to install libxc and point to it, which i did with 6.2.2; I downloaded the source from git and am using master:. ```; git clone git@github.com:psi4/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:1689,error,error,1689,https://psicode.org,https://github.com/psi4/psi4/issues/3006,1,['error'],['error']
Availability,"clang 4.0 / ifort 15.0.3 / MKL on macOS 10.12. After compiling from source code (tag v1.1), with ENABLE_gdma=ON, the following command quits without any output.; ```bash; python -c 'import psi4; print(psi4.__file__)'; ```; Running; ```bash; python -v -c ""import psi4""; ```; The last few lines of output are; ```bash; import psi4 # precompiled from /path/psi4-gdma/lib/psi4/__init__.pyc; dlopen(""/path/psi4-gdma/lib/psi4/core.so"", 2);; import psi4.core # dynamically loaded from /path/psi4-gdma/lib/psi4/core.so; ```; No error message. Modifying the following code; https://github.com/psi4/psi4/blob/master/psi4/src/core.cc#L1219-L1221; to; ```cpp; #ifdef INTEL_Fortran_ENABLED; static int argc = 1;; static char* argv = (char*) """";; for_rtl_init_(&argc, &argv);; #endif; ```; solves the problem. Any comments?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/771:520,error,error,520,https://psicode.org,https://github.com/psi4/psi4/issues/771,1,['error'],['error']
Availability,clang-tidy apply modernize-redundant-void-arg fixes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1317:27,redundant,redundant-void-arg,27,https://psicode.org,https://github.com/psi4/psi4/pull/1317,1,['redundant'],['redundant-void-arg']
Availability,"class calculates Mulliken / Loewdin charges and Bond Orders in commit: a6caee7 https://github.com/psi4/psi4/commit/a6caee7091afc6b0e8071ef0d077f93fcb6c9370; - - ESPPropCalc: This class allows calculation of fields on Grids in commit: ; 325149b https://github.com/psi4/psi4/commit/325149b31751b629486f0478cc5cfe1ee1ec9fb1. The rest of the commits are mostly fixups and linking up the three new classes to the old completely unchanged OEProp class, which now does not calculation itself. Also I implemented an in-memory routine calculating grid properties based on a grid, which was passed on.; The three new classes do not touch any global and no environment. They mostly exist without data storage for the grids, all functions have explicit (and mostly shared pointer return values).; Their complete setup is explicit. All environment variables are only set by OEProp. The reason is again: This allows to the new helpers to be used directly without any interference from Python and C++. The reason they were split this way: ESPPropCalc and PopulationAnalysisCalc and MultipolePropCalc do not share any members or variables. Example: only MPC requires an explicit origin to be set. ## Questions; - [x] I changed a return type to const & to avoid a large copy: https://github.com/psi4/psi4/commit/325149b31751b629486f0478cc5cfe1ee1ec9fb1#r30055651; - [x] The return type in compute_mo_extents is an actual vector instead of a Shared pointer. It contains maximum three elements, so I left it at that: https://github.com/psi4/psi4/commit/59005eed1c0bc8b893927284c31386eb4b715f1e#r30055734; - [x] I could remove the Prop baseclass completely from OEProp in the future. Only one function uses something from this. ## Checklist; - [x] Tests added for any new features; The tests are all still called from OEProp. The only new thing is the in-memory grid routine.; - [x] [All or relevant fraction of full tests run]; ctest -L quick was run. No errors. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1133:2998,error,errors,2998,https://psicode.org,https://github.com/psi4/psi4/pull/1133,1,['error'],['errors']
Availability,"class in Psi4 in an non-standardized fashion is unfortunate from a code design perspective. The goal of the CompositeJK project is, ultimately, to create a new JK class (_CompositeJK_) that offers a proper framework for combining separate J and K algorithms for use in JK construction. Such a class will provide a home for any new separate J and K algorithm that gets added to Psi4 in the future (such as the in-progress CFMM). Additionally, the CompositeJK class will be designed in such as a way to enable arbitrary combinations of any available separate J and K build algorithm through a single JK subclass. This arbitrary mixing and matching is planned to be accesible in a user-friendly way. DFJLinK is the first step to this process. DFJLinK, itself, is a new JK subclass that combines the integral-direct density fitted J build algorithm from DFJCOSK with the LinK algorithm previously available in DirectJK. LinK was previously available for use in Psi4 via DirectJK, but was always disrecommended due to its combination with a normal DirectJK implementation for J construction. In conjunction with Direct DF-J to form the Coulomb matrix, LinK performs much better. Some benchmarks comparing the Direct DF-J + LinK algorithm combination to other JK options in Psi4, for water clusters of varying sizes at the cc-pVDZ basis set, are attached:. ![Timing Plots of Water Clusters at cc-pVDZ](https://user-images.githubusercontent.com/26306559/198107808-42f3b855-13f0-4e14-8a50-c0402c16b94f.png). Small, non-diffuse basis sets are the specialty of Direct DF-J + LinK, and it reflects here, with DFJLinK outperforming the other integral-direct JK options for most of the water clusters, and being the fastest JK option tested overall for large water clusters. For specific comparisons to Direct DF-J + COSX, the closest current analogue in Psi4, DFJCOSK performs better for larger basis sets or more complex systems, while DFJLinK performs better for smaller basis sets and less complex systems from",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:2002,avail,available,2002,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['avail'],['available']
Availability,cleaner print for module level errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2083:31,error,errors,31,https://psicode.org,https://github.com/psi4/psi4/pull/2083,1,['error'],['errors']
Availability,compilation error with intel 2017,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/522:12,error,error,12,https://psicode.org,https://github.com/psi4/psi4/issues/522,1,['error'],['error']
Availability,composite method wrapper error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/455:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/issues/455,1,['error'],['error']
Availability,concerning http://forum.psicode.org/t/fatal-error-a-matrix-is-not-spd/1471. Decent looking results are obtained with `guess huckel` and no extra options. Instability analysis shows the SCF lands in a minimum.; For `SAP` the SCF does not land SCF in a minimum. However there are differences between `SAD+instability analysis` and `huckel` (see induction energy).; Possibly an issue with a bugged instability following (suggested by @JonathonMisiewicz ). [huckel.txt](https://github.com/psi4/psi4/files/3798367/huckel.txt); [huckel_stability.txt](https://github.com/psi4/psi4/files/3798368/huckel_stability.txt); [sap_stability.txt](https://github.com/psi4/psi4/files/3798380/sap_stability.txt); [sap.txt](https://github.com/psi4/psi4/files/3798381/sap.txt),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1747:44,error,error-a-matrix-is-not-spd,44,https://psicode.org,https://github.com/psi4/psi4/issues/1747,1,['error'],['error-a-matrix-is-not-spd']
Availability,"conda release: py36hf231b52_0 ; Psi4 1.2.1 ; Rev {HEAD} 406f4de . The DF-CCSD iterations with the FNOCC and DFOCC modules diverge for a repulsive, C2-symmetric methanol dimer depending on how I read the geometry (it seems).; The first CCSD energy is already completely wrong. ```; Iter DIIS Energy d(Energy) |d(T)| time; 0 0 1 28.8732411379 28.8732411379 7.9419493294 0; 1 1 1 -305.0567532225 -333.9299943603 62248.5081330950 2; 2 2 1 -392.6124818532 -87.5557286307 1852579.6071174063 3; 3 3 1 -337.1095996214 55.5028822317 1639881736.6452949047 2; ```. The conventional CCSD shows no problems (fnocc/ccenergy tested). The (assumed) dependence on the input revealed itself while making a clean input for reporting.; The SCF part does not show anything odd. Geometry is correctly recognized. Attached tgz file contains the working and faulting input/output.; [tball.tar.gz](https://github.com/psi4/psi4/files/2240627/tball.tar.gz)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1110:834,fault,faulting,834,https://psicode.org,https://github.com/psi4/psi4/issues/1110,1,['fault'],['faulting']
Availability,"conda/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 1052, in optimize; G, wfn = gradient(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 710, in gradient; **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 183, in _process_displacement; derivative, wfn = derivfunc(method, return_wfn=True, molecule=clone, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/username/miniconda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2018, in run_scf; dfmp2_wfn.compute_energy(). RuntimeError:; Fatal Error: There are no occupied orbitals with beta spin.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/dfmp2/mp2.cc on line: 196; The most recent 5 function calls were:. Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""DFT_SPHERICAL_POINTS"", 434); core.set_global_option(""DFT_RADIAL_POINTS"", 85); core.set_global_option(""REFERENCE"", ""uhf""); set_memory(100000000000); try:; --> optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); core.set_global_option(""GUESS"", ""read""); optimize('pwpb95-d3bj'). Psi4 stopped on: Friday, 21 August 2020 04:21PM; Psi4 wall time for execution: 0:00:04.47. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. As I am fairly new to quantum chemistry, I do not really know how to interpret this error. Any pointers are appreciated.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995:2538,Error,Error,2538,https://psicode.org,https://github.com/psi4/psi4/issues/1995,3,"['Error', 'error']","['Error', 'error']"
Availability,configure fails to find libxc and then downloads and rebuilds it,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2676:39,down,downloads,39,https://psicode.org,https://github.com/psi4/psi4/issues/2676,1,['down'],['downloads']
Availability,"configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2690,avail,available,2690,https://psicode.org,https://github.com/psi4/psi4/issues/629,2,"['Error', 'avail']","['Error', 'available']"
Availability,"configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2948,Error,Error,2948,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"cratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/testresults.log"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:1748,ERROR,ERROR,1748,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"cting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++; -- Check for working CXX compiler: /home/amjames2/.conda/envs/py3/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /home/amjames2/.conda/envs/py3/bin/python (found version ""3.5.2"") ; -- Found PythonLibs: /home/amjames2/.conda/envs/py3/lib/libpython3.so; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found libdl: /usr/lib64/libdl.so ; CMake Error at CMakeLists.txt:35 (find_package):; Could not find a package configuration file provided by ""libefp"" with any; of the following names:. libefpConfig.cmake; libefp-config.cmake. Add the installation prefix of ""libefp"" to CMAKE_PREFIX_PATH or set; ""libefp_DIR"" to a directory containing one of the above files. If ""libefp""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; ```. It seems that if I add two lines to the `CMAKE_ARGS` section of `ExternalProject_Add(psi4_core…` . ```; -Dlibint_DIR=${libint_DIR}; -Dlibefp_DIR=${libefp_DIR}; ```. Then the arguments that I pass on the command line are correctly fed into the psi4_core build. Currently they are not passed in but the step that would download/build them was skipped since they were detected in the initial CMake pass. The `CMAKE_PREFIX_PATH` option for detecting them works since that argument is currently passed through. The documentation should be edited to remove the suggestion that `-Dlibint_DIR` type options be used, or the source should be edited so that those arguments are passed through to the psi4_core build.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/516:2798,error,errors,2798,https://psicode.org,https://github.com/psi4/psi4/issues/516,2,"['down', 'error']","['download', 'errors']"
Availability,"cts/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(155): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::value_type value_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:8089,error,error,8089,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"d PythonInterp: /usr/bin/python (found version ""2.7.10"") ; -- Found Python: /usr/lib/x86_64-linux-gnu/libpython2.7.so ; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: gcc; -- CheMPS2 not found. The pre-packaged version will be built.; -- Found PkgConfig: /usr/bin/pkg-config (found version ""0.28"") ; -- Plugins support ENABLED; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); -- Use the commands in setup_command to reproduce this build; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -fopenmp -O0 -g3 -DDEBUG -Wall -Wextra -Winit-self -Woverloaded-virtual -Wuninitialized -Wmissing-declarations -Wwrite-strings; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -O0 -g3 -Wall -Wextra -Winit-self -Wuninitialized -Wmissing-declarations -Wwrite-strings ; -- Libraries : -Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gnu_thread.so;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_core.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;-fopenmp;-Wl,--end-group;-Wl,--start-group;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_lapack95_lp64.a;/opt/intel/compilers_and_libraries_2016.0.109/linux/mkl/lib/intel64/libmkl_gf_lp64.so;-fopenmp;-Wl,--end-group; -- Definitions : SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/264:3727,avail,available,3727,https://psicode.org,https://github.com/psi4/psi4/issues/264,1,['avail'],['available']
Availability,"d-bond functions. However I have encountered problems getting this to work using the DF variants of these methods. As I understand it, to get the DF-MP2, DF-CC etc to work I need to do the following:. 1. Create a set of auxiliary functions for these mid-bond sets. This I have done (mb-set-ri.gbs); 2. Specify the auxiliary basis set using; assign <aux basis> df_basis_scf/mp2. The only source of information I was able to find on the latter was at http://www.psicode.org/psi4manual/master/basissets.html#sec-basisuserdefined. Step 2 is where things fall over. First of all, the correct syntax seems to be ; assign df_basis_scf/mp2 <aux basis>; There seems to be an error on the wiki page shown above. . This syntax works as it allows me to define a specific auxiliary basis for *all* atoms. If I wish to define a specific aux basis for a particular atom (as needs to be done when using mid-bonds) then the command should be; assign Rn df_basis_scf mb-set-ri; This fails in inputparser.py with the following error:. Traceback (most recent call last):; File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 734, in process_input; temp = re.sub(basis_block, process_basis_block, temp); File ""/home/alston/Psi4/psi4conda/lib/python2.7/re.py"", line 155, in sub; return _compile(pattern, flags).sub(repl, string, count); File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 357, in process_basis_block; raise TestComparisonError(message); p4util.exceptions.TestComparisonError: Conflicting basis set specification: assign lines present but shells have no [basname] label. It seems like the line ""assign Rn df_basis_scf mb-set-ri"" cannot be correctly parsed by inputparser.py. It seems to think this line is part of the basis set specification. . The complete Psi4 command file for this calculation is:; [Ar2_input.txt](https://github.com/psi4/psi4/files/787318/Ar2_input.txt). And the two basis set files are here:; [mb-set.txt](https://github.com/psi4/psi4/files/7",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/626:1477,error,error,1477,https://psicode.org,https://github.com/psi4/psi4/issues/626,1,['error'],['error']
Availability,"d-meta`, `dft-grad1`, `dft-grad2`, `dft-omega`, `dft-psivar`, `dft-vv10`, `dft1`, `dftd3-grad`, `dftd3-version`, `frac-traverse`, `opt13`, `pcmsolver-dft`, `pcmsolver-dipole`; - [x] new test: `dft-pruning`. ## Questions; - Pruning enabled by default? -> not this PR, but after further testing yes. ## Checklist; - [x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:2896,failure,failure,2896,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['failure'],['failure']
Availability,"dabu@RES-SHANTIPA:/mnt/c/Windows/System32$ curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-Windows-x86_64.sh""; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0Warning: Failed to create the file Psi4conda-latest-py35-Windows-x86_64.sh:; Warning: Permission denied; 100 246 100 246 0 0 710 0 --:--:-- --:--:-- --:--:-- 710; curl: (23) Failed writing body (0 != 246)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586:87,down,download,87,https://psicode.org,https://github.com/psi4/psi4/issues/1586,1,['down'],['download']
Availability,"dded QM/MM computations with MM point charges: energies and gradients; - Added UHF/UHF stability analysis for non-PK integrals; - Added density cumulant functional theory methods DC-12, ODC-12, and ODC-13; - Added UHF DF-MP2 gradients and DF-MP3 energies; - Added CCD treatment of dispersion in SAPT; - Added DF orbital-optimized MP2.5 energies and gradients; - Added GUESS_MIX keyword to UHF/UKS to generate broken-symmetry guesses; - Added STO-3G, 3-21G, and def2 basis sets through radon; - Added DF (O)MP2/2.5/3 energies and gradients; ## Geometry optimization; - Improved support for frozen coordinates and fixed coordinates; - Dynamic level algorithm tries increasingly robust optimization approaches for difficult systems; - Added Cartesian coordinate optimizations; - Ability to freeze selected Cartesian coordinates; - Added iterative, restricted-step method to RFO geometry optimizations; - Added delocalized internal coordinate optimizations; ## External features; - Added EFP energies added via libEFP; - Added PCM implicit solvent added for SCF; - Added interface to DMRG-CI and DMRG-SCF code in CheMPS2; - Added code to do potential energy scans via the WebMO interface; ## Performance optimization; - Sped up integrals computation by optimizing lib mints layer; - The PK JK builder has received significant performance improvements; - SAD guess has been improved dramatically, now default for all RHF computations; ## Bug fixes; - Various bug fixes and improvements to optimizer and IRC code; - Fixed a bug with DF-K in systems with only one occupied orbital; - Fixed an integer overflow bug in DF-CCSD(T); - Fixed modules that crashed when not finding full integral files available (because DF-HF was run instead of conventional HF); - Fixed problem with double hybrid DFT total energies not being printed; - Fixed crash caused by changing number of MO's during optimization (changes in number of MO's dropped due to linear dependencies); - Innumerable additional bug fixes and tweaks",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/367:3051,robust,robust,3051,https://psicode.org,https://github.com/psi4/psi4/issues/367,2,"['avail', 'robust']","['available', 'robust']"
Availability,"dear psi4 team,. i am trying to restart an interrupted coupled cluster run, but to no avail. the input file has the following keywords:. set cceom restart_eom_cc3 true; set ccenergy restart true; set cclambda restart true; set ccresponse restart true. yet, in the output file in the ccenergy section i find:. Restart = No. the files psi.{pid}.\* from the previous run are in the current working directory, permissions are correct. increasing verbosity didn't seem to help me to trace the problem - i am basically not sure what file and from where psi4 wants to read, and i cannot find it in the manual. could anybody please enlighten me?. cheers,; bartek",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/27:86,avail,avail,86,https://psicode.org,https://github.com/psi4/psi4/issues/27,1,['avail'],['avail']
Availability,"dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel chan",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3142,down,download,3142,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,download externals through url instead of git clone,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1569:0,down,download,0,https://psicode.org,https://github.com/psi4/psi4/pull/1569,1,['down'],['download']
Availability,"downstream/v2rdm_casscf/v2rdm_casscf_external-prefix/tmp/v2rdm_casscf_external-cache-Release.cmake; -- Setting option ENABLE_OPENMP: ON; -- Psi4 script: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/bin/psi4; -- Psi4 headers: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/include; -- Psi4 library: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib//psi4/core.cpython-36m-x86_64-linux-gnu.so; -- Psi4 sys.path: /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/lib/; -- Psi4 components: ambit;chemps2;dkh;gdma;pcmsolver;simint; -- Python executable: /usr/bin/python3; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, LANG=CXX;Fortran, C/CXX/Fortran=/GNU/GNU; CMake Error at /usr/share/cmake-3.10/Modules/FindPackageHandleStandardArgs.cmake:211 (message):; No REQUIRED_VARS specified for FIND_PACKAGE_HANDLE_STANDARD_ARGS(); Call Stack (most recent call first):; /usr/share/cmake-3.10/Modules/FindOpenMP.cmake:487 (find_package_handle_standard_args); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindTargetOpenMP.cmake:64 (find_package); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:104 (find_package); /usr/share/cmake-3.10/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:44 (find_dependency); /home/jerome/Documents/Atlanta/PSIcode/psi4public_JFG/obj_rel/stage/share/cmake/psi4/psi4Config.cmake:145 (find_package); CMakeLists.txt:31 (find_package). -- Configuring incomplete, errors occurred!; ```; I'm using cmake version 3.10.2, GNU compilers version 7.3.0 and Intel MKL 2019.1.144; I noticed that ``stage/share/cmake/TargetLAPACK/FindTargetOpenMP.cmake`` doesn't seem to use ``OpenMP_LIBRARY_DIRS`` but I don't know anything about CMake so I might just be wrong here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1426:2381,error,errors,2381,https://psicode.org,https://github.com/psi4/psi4/issues/1426,1,['error'],['errors']
Availability,"e following error occurs:. ```; File ""C:\Users\user\Anaconda3\envs\qiskit-0-27-psi4-jupyter\Scripts\psi4-script.py"", line 336, in <module>; exec(content). File ""<string>"", line 31; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------------------!; ! !; ! (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: !; ! truncated \UXXXXXXXX escape !; ! !; !----------------------------------------------------------------------------------!; ```; I could track down the error to be raised from here:; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L333; when trying to execute 'content'.; The 'content' variable contains single backslashes in the windows path string (e.g. `'C:\Users'` instead of the correct `r'C:\Users'` or 'C:\\Users'`) which is responsible for the error.; I was able to fix the error via inserting; ```python; import platform; if platform.system() == ""Windows"":; content = content.replace(""'C:"", ""r'C:"").replace('""C:', 'r""C:'); ```; directly before aforementioned exec command.; That's quite a quick-and-dirty fix and I think it should be solved somewhere in the method called in; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\ground_state_solvers\ground_state_eigensolver.py in solve(self, problem, aux_operators); 80 # note tha",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:1143,error,error,1143,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['error'],['error']
Availability,"e the definition of each basis set. The basis sets specified; # using either basis <opt_name> {...} are utilized first (in the order specified; # in the input file). Any remaining basis sets required are extracted from the built-in library,; # if they exist, or an error message is printed.; psi4.basis_helper(""""""; #; # We start by assigning basis sets to atoms. These commands can go anywhere in the basis block; #; # First, assign DZ to all atoms; assign DZ; # Now, assign 3-21G to all carbon atoms; assign C my3-21G; # The two atoms labelled H1 get a STO-3G basis two; assign H1 sto-3g; # Carbons 3 and 5 get a STO-3G basis, too; assign C1 sto-3g; # With all these in place, the symmetry is lowered to C2v automatically; # The commands are applied in order i.e., adding a line like; # assign cc-pvtz; # here would override all of the above and assign cc-pvtz to all atoms. #; # Now we define the basis sets. N.B. Indentation does not matter; it just looks prettier.; #; [my3-21G] #This is really the standard 3-21G basis, but with a different name; cartesian; ****; H 0; S 2 1.00; 5.4471780 0.1562850; 0.8245470 0.9046910; S 1 1.00; 0.1831920 1.0000000; ****; C 0; S 3 1.00; 172.2560000 0.0617669; 25.9109000 0.3587940; 5.5333500 0.7007130; SP 2 1.00; 3.6649800 -0.3958970 0.2364600; 0.7705450 1.2158400 0.8606190; SP 1 1.00; 0.1958570 1.0000000 1.0000000; ****; [DZ]; spherical; ****; H 0 ; S 3 1.00; 19.2406000 0.0328280 ; 2.8992000 0.2312080 ; 0.6534000 0.8172380 ; S 1 1.00; 0.1776000 1.0000000 ; ****; """"""). psi4.set_options({; 'd_convergence': 11,; 'e_convergence': 11,; 'scf_type': 'pk'}); ; bz.update_geometry(); bz.print_out(); psi4.compare_strings(""c2v"", bz.schoenflies_symbol(), ""Point group"") #TEST; psi4.compare_values(refnuc, bz.nuclear_repulsion_energy(), 10, ""Nuclear repulsion energy"") #TEST; ```. ## Questions; - [ ] I've no immediate thoughts of merging this. Just wanted it to be available to others and off my computer. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1178:3973,avail,available,3973,https://psicode.org,https://github.com/psi4/psi4/pull/1178,1,['avail'],['available']
Availability,"ealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install atlas-3.8.4-8.fc19.x86_64 blas-3.4.2-2.fc19.x86_64 keyutils-libs-1.5.5-4.fc19.x86_64 krb5-libs-1.11.3-1.fc19.x86_64 libcom_err-1.42.7-2.fc19.x86_64 libselinux-2.1.13-15.fc19.x86_64 pcre-8.32-7.fc19.x86_64; (gdb) bt full; #0 subtype_dealloc (self=<Molecule at remote 0x1110c8c0>) at /usr/src/debug/Python-2.7.5/Objects/typeobject.c:955; type = 0x10d7f9c0; base = <optimized out>; basedealloc = <optimized out>; tstate = 0x0; #1 0x00007ffff6b92cb2 in xdecref<_object> (p=<optimized out>) at boost/python/refcount.hpp:36; p = <optimized out>; #2 reset (this=0x1107b438) at boost/python/handle.hpp:249; No locals.; #3 boost::python::converter::shared_ptr_deleter::operator() (this=0x1107b438) at libs/python/src/converter/builtin_converters.cpp:35; No locals.; #4 0x0000000000710812 in psi::Process::Environment::~Environment() (); No symbol table info available.; #5 0x000000374f2390a9 in __run_exit_handlers (status=0, listp=0x374f5b96e8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77; atfct = <optimized out>; onfct = <optimized out>; cxafct = <optimized out>; f = <optimized out>; #6 0x000000374f2390f5 in __GI_exit (status=<optimized out>) at exit.c:99; No locals.; #7 0x000000374f221b7c in __libc_start_main (main=0x699720 <main>, argc=2, ubp_av=0x7fffffffdb38, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffdb28); at libc-start.c:292; result = <optimized out>; unwind_buf = {cancel_jmp_buf = {{jmp_buf = {0, -420104691260379722, 7149040, 140737488345904, 0, 0, 420104692152085942, -412673899392062026}, mask_was_saved = 0}}, priv = {pad = {0x0, 0x0, ; 0x1c22e20 <__libc_csu_init>, 0x7fffffffdb38}, data = {prev = 0x0, cleanup = 0x0, canceltype = 29503008}}}; not_first_call = <optimized out>; #8 0x00000000006d1619 in _start (); ```.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/8:1172,avail,available,1172,https://psicode.org,https://github.com/psi4/psi4/issues/8,1,['avail'],['available']
Availability,"eback (most recent call last):; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/bin/psi4"", line 272, in <module>; exec(content); File ""<string>"", line 100, in <module>; File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 431, in energy; return driver_nbody.nbody_gufunc(energy, name, ptype='energy', **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 225, in nbody_gufunc; component_results = compute_nbody_components(func, method_string, metadata); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 411, in compute_nbody_components; current_mol = molecule.extract_subsets(list(pair[0]), ghost). RuntimeError: ; Fatal Error: Coordinates have been set in the wrong order; Error occurred in file: /home/vulcan/vadmin/programs/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 239 ; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::operator=(psi::Molecule const&); psi::Molecule::Molecule(psi::Molecule const&); ```. Given that the user's problem is failure for the SCF to converge, I can only assume some change since the 1.2.1 release is at fault. I've been able to get the crash with the following simplified input file:; ```; molecule dimer {; 1 1; C1 0.000000 0.513942 0.000000; N2 0.628754 1.703580 0.000000; H3 0.109407 2.571793 0.000000; H4 1.638743 1.762759 0.000000; N5 -1.342220 0.473050 0.000000; H6 -1.890262 1.323784 0.000000; H7 -1.839824 -0.407373 0.000000; N8 0.700723 -0.623756 0.000000; H9 1.712010 -0.555355 0.000000; C10 0.085273 -1.957243 0.000000; H11 0.892679 -2.697454 0.000000; H12 -0.522596 -2.104233 0.905528; H13 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325:1192,Error,Error,1192,https://psicode.org,https://github.com/psi4/psi4/issues/1325,2,['Error'],['Error']
Availability,"ects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(158): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::reference reference;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:13685,error,error,13685,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"ecule {; H; H 1 0.60; }. set basis cc-pVDZ; set docc [ 1, 0, 0, 0, 0, 0, 0, 0 ]; # STO-3G active space; set active [1, 0, 0, 0, 0, 1, 0, 0 ]; energy('casscf'); ```; fails with the up-to-date master branch with the error message; ```; Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 26, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 519, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 5483, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 153, in mcscf_solver; nci_iter = ciwfn.diag_h(abs(ediff) * 1.e-2, orb_grad_rms * 1.e-3). RuntimeError: ; Fatal Error: DSYEV diagonalizer failed in DETCI SEM!; Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; """"""); core.IO.set_default_namespace(""""); core.set_global_option(""BASIS"", ""cc-pVDZ""); core.set_global_option(""DOCC"", [ 1, 0, 0, 0, 0, 0, 0, 0 ]); core.set_global_option(""ACTIVE"", [1, 0, 0, 0, 0, 1, 0, 0 ]); --> energy('casscf'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: DSYEV diagonalizer failed in DETCI SEM! !; ! Error occurred in file: /home/work/psi4/psi4/src/psi4/detci/sem.cc on line: 561 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! !; !----------------------------------------------------------------------------------!. ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3096:1605,Error,Error,1605,https://psicode.org,https://github.com/psi4/psi4/issues/3096,2,['Error'],['Error']
Availability,"ed here, and for generating the third-order induction amplitudes that are reused here. However, unlike most of the stuff in `libsapt_solver`, the code is AO-based and the two-electron integrals enter only via generalized J/K matrices. Therefore, I had to export some additional AO quantities in `libsapt_solver/sapt.h` and I don't know if I did this in an optimal way.; - [x] Note to self: frozen core still needs to be checked. ## Design (Big-Picture) Questions - input from @CDSherrill @dgasmith @loriab and others will be highly beneficial!; - [ ] The three new(ish) beyond-S^2 corrections, E(20)exch-ind, E(20)exch-disp, and E(30)exch-ind cannot be currently calculated by a single SAPT call: the first two require `energy('sapt(dft)')` and the last one `energy('sapt2+3')`. That's quite unfortunate and we need a better workflow, possibly by making the non-S^2 E(20)exch-ind,resp and E(20)exch-disp available as part of `energy('sapt0')`.; - [ ] What should go into aggregate SAPT energy values, S^2 or non-S^2? I made the code pick the non-S^2 value of E(30)exch-ind,resp if available, but I'd be happy to revert it back to picking E(30)exch-ind,resp(S^2). At present, I don't think the non-S^2 values of E(20)exch-ind,resp and E(20)exch-disp are ever included in total SAPT numbers, maybe they should?; - [ ] Finally, the option names such as `do_ind30_exch_sinf` are somewhat unfortunate because they propagate the misconception that you include effects all the way to S^infinity. In reality, the largest power of overlap integral S you ever need is min(NelA,NelB) - after that, you run out of electrons to exchange between A and B. **Nonapproximated**, **Nonexpanded**, and **beyond-S^2** are all formally more correct names than S^infinity. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2314:2220,avail,available,2220,https://psicode.org,https://github.com/psi4/psi4/pull/2314,1,['avail'],['available']
Availability,"el-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 1681, in frequency; H, wfn = hessian(lowername, return_wfn=True, molecule=molecule, **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver.py"", line 1332, in hessian ; fmaster.write(p4util.format_options_for_input(moleculeclone, **kwargs)). TypeError: a bytes-like object is required, not 'str'; ```. The culprit is exactly what the traceback says: fmaster is opened in binary mode and format_options_for_input returns a string. Python 2 would let you write a string to a binary file, but Python 3 expects bytes. I can fix this locally by adding the required .encode('utf-8') calls to that line as well as several lines afterwards, starting around 1370. If that was all, I would just fix this myself, but sowing is useless without reaping, and the reaping bug is trickier. The displacement files include bytes encoded from UTF-8 and also bytes dumped from pickle (the gradient kwargs). In general, pickle bytes will not be intelligible in any text encoding scheme. Python 2's naive approach to bytes means this is not a problem. When you try to run one of those files with Python 3-compiled Psi4, however... ```Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/usr/local/psi4/bin/psi4"", line 230, in <module>; content = f.read(); File ""/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6/lib/python3.6/codecs.py"", line 321, in decode; (result, consumed) = self._buffer_decode(data, self.errors, final); UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 440: invalid start byte; ```. Python 3 tries to read all the bytes as UTF-8. This fails for the pickled bytes, so Psi4 crashes. Even if you read the file as binary, you would still have to (somehow) instruct Python 3 which parts of the file should be UTF-8 decoded and which parts should be pickle-loaded.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/833:2307,error,errors,2307,https://psicode.org,https://github.com/psi4/psi4/issues/833,1,['error'],['errors']
Availability,"ema(conformer=0); psi4.set_num_threads(4); psi4.set_memory(5e+9). xtb_opt = xtb_ff_opt(qc_mol=qc_mol); opt_molecule = Molecule.from_qcschema(xtb_opt); conformer_Ang = opt_molecule.conformers[0].to(unit.angstrom).m. #Generate Grid to calculate properties to; grid = generate_grid(molecule = molecule, ; conformer= opt_molecule.conformers[0].to(unit.bohr), ; grid_settings=grid_settings); grid = grid.to(unit.angstrom).m; numpy.savetxt(""grid.dat"", grid, delimiter="" "", fmt=""%16.10f""). psi4.set_options({""ddx"": ""true"",; ""DDX_SOLVENT_EPSILON"": 70.84,; ""DDX_RADII_SET"": ""uff"",; ""DDX_MODEL"": ""PCM""}). conformer_Ang_string = ""nocom\nnoreorient\n""; for index, atom in enumerate(opt_molecule.atoms):; conformer_Ang_string += f""{SYMBOLS[atom.atomic_number]}\t{conformer_Ang[index, 0]}\t{conformer_Ang[index, 1]}\t{conformer_Ang[index, 2]}\n"". molecule_psi4 = psi4.geometry(conformer_Ang_string.strip()); print(molecule_psi4); molecule_psi4.set_units(GeometryUnits.Angstrom). E, wfn = psi4.energy('PBE0-D3BJ/def2-TZVPPD', molecule = molecule_psi4, return_wfn = True); psi4.oeprop(wfn,""GRID_ESP"",""GRID_FIELD"",""MULLIKEN_CHARGES"", ""LOWDIN_CHARGES"", ""DIPOLE"",""QUADRUPOLE"", ""MBIS_CHARGES""); print( wfn.variable(""MULLIKEN_CHARGES"")); log_memory_usage(); #very basic error handling; except Exception as e:; continue. if __name__ == ""__main__"":; main(); ```. For the minimal example above, memory usage slowly rises too (I have checked the QCEngine tools and this is not occurring here):. ```; Memory Usage: 484.4296875 MB; Memory Usage: 632.46875 MB; Memory Usage: 634.3203125 MB; Memory Usage: 635.75390625 MB; Memory Usage: 636.6015625 MB; Memory Usage: 676.36328125 MB; Memory Usage: 676.7109375 MB; Memory Usage: 676.7421875 MB; Memory Usage: 676.77734375 MB; Memory Usage: 676.8046875 MB; Memory Usage: 676.890625 MB; Memory Usage: 676.921875 MB; Memory Usage: 676.98828125 MB; Memory Usage: 677.015625 MB; Memory Usage: 677.03125 MB; ```. Apologies for the long post but I wanted to add as much info as possible!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3146:8579,error,error,8579,https://psicode.org,https://github.com/psi4/psi4/issues/3146,1,['error'],['error']
Availability,enhances the visibility of psi4's error messages,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1862:34,error,error,34,https://psicode.org,https://github.com/psi4/psi4/pull/1862,1,['error'],['error']
Availability,eom-ccsd error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/786:9,error,error,9,https://psicode.org,https://github.com/psi4/psi4/issues/786,1,['error'],['error']
Availability,error in wfn.tofile while calculating hessian,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3068:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/issues/3068,1,['error'],['error']
Availability,error when trying to import psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2294:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/issues/2294,1,['error'],['error']
Availability,error: use of undeclared identifier 'errno',MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2810:0,error,error,0,https://psicode.org,https://github.com/psi4/psi4/issues/2810,1,['error'],['error']
Availability,"esolve the issue. in fact, running in `c2v` produces different energies, but they don't match GAMESS or the `symmetry c1` case:; ```; Psi4 LiCN/6-31G* (symmetry c2v, default [Davidson] solver); CI ROOT 1 TOTAL ENERGY:-99.52581092382692; CI ROOT 2 TOTAL ENERGY:-99.50960136455492; CI ROOT 3 TOTAL ENERGY:-99.47046293582866; CI ROOT 4 TOTAL ENERGY:-99.43820506440449; CI ROOT 5 TOTAL ENERGY:-99.39012366739456; CI ROOT 6 TOTAL ENERGY:-99.37979350854745; ```; maybe it's a preconditioner issue? the Davidson seems to converge in just one step for c1 and c2v. I suppose it's possible the guess space just isn't grabbing roots for all symmetries, but increasing the number of roots to 30 doesn't change the results. perhaps more disturbing, though, is that the in-core diagonization routine `RSP` gives yet another set of results:; ```; Psi4 LiCN/6-31G* (symmetry c1, RSP solver); CI ROOT 1 TOTAL ENERGY:-99.58887523722994; CI ROOT 2 TOTAL ENERGY:-99.56069933848028; CI ROOT 3 TOTAL ENERGY:-99.56069933848008; CI ROOT 4 TOTAL ENERGY:-99.53483755106353; CI ROOT 5 TOTAL ENERGY:-99.53483755106343; CI ROOT 6 TOTAL ENERGY:-99.53418772103414; ```; here, we find 3 roots lower in energy than either GAMESS or the default Psi4 routines, and we also recover the -99.534837 E_h root, but this time as a doubly-degenerate state. the other routines mentioned in [the manual; ](https://psicode.org/psi4manual/master/autodoc_glossary_options_c.html#term-DIAG_METHOD-DETCI) are deprecated kwargs (see also: #2640 ), so I can't test them. . given [`np.linalg.eigh`](https://numpy.org/doc/stable/reference/generated/numpy.linalg.eigh.html) just uses LAPACK's syevd/heevd, and `RSP` is just supposed to be LAPACK's dsyev, this result is very perturbing. . I've attached output files for the [Davidson](https://github.com/psi4/psi4/files/13431543/output_dav.txt) and [RSP](https://github.com/psi4/psi4/files/13431545/output_rsp.txt) schemes, as well as [GAMESS](https://github.com/psi4/psi4/files/13431555/output_gms.txt).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3083:2729,recover,recover,2729,https://psicode.org,https://github.com/psi4/psi4/issues/3083,1,['recover'],['recover']
Availability,"esolved) over whether DF-CC2 is RTG, see #2710. A result is that you need to `set qc_module ccenergy` explicitly to use DF for CC2 -- a test case edit was needed.; - [x] `run_dfocc`, `run_dfocc_gradient` fns were simplified by using the `method_algorithm_type` fn; - [x] `run_fnodfcc`, `run_fnocc`, `run_cepa` were simplified by using the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), fci, cepa(1), cepa(3), acpf, aqcc, ccd, bccd, bccd(t), cc2, cc3, and some representative DFTs (svwn, pbe, b3lyp, wb97x, b2plyp) to standard suite testing to nail down their capabilities. Added some advice to the stdsuite so that others can perhaps edit it.; * all but cepa(1), cepa(3), acpf, aqcc,",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:9411,error,error,9411,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['error'],['error']
Availability,"essian to test safety of projecting rotations. Instead assuming unsafe. Can pass `ref_gradient` array to test on or `set findif fd_project T/F` explcitly to control.; - `psi4.QMMM()` object replaced by `embedding_charges` kwarg in Bohr. See extern examples for details.; - `json_ret = psi4.schema_wrapper.run_qcschema(json_input)` not `json_ret = psi4.json_wrapper.run_json(json_input)`. `json_ret` is now an object, so `.` access, not dictionary.; - CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned, meaning their behavior was slightly different than `set basis cc-pvdz \n energy('hf')`. This is no longer happening, so for occasional string modelchem calcs, you may need to add a clean in the input.; - extern object units are bohr, not whatever the Molecule was.; - `psi4 --module` returns the path for loading via `import psi4`. opposite of `psi4.executable`; - `psi4.set_output_file` now wraps `psi4.core.set_output_file` and additionally sets up a truncating python logging file with `.log` extension at the same time as the `.out` file.; - Besides the input.dat/output.dat exception, default output naming simplified to always `.out` of input file name. If input has out or log extension (weird), extra extension added.; - Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - A Logging file has been introduced. All its contents should be considered experimental and subject to change. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351:3135,down,down,3135,https://psicode.org,https://github.com/psi4/psi4/pull/1351,1,['down'],['down']
Availability,"est_dertype.py` and was never run. This unused fn and its testing was removed and replaced by the ddd version.; - [x] the new `negotiate_derivative_type` function probes managed methods earlier than before, so it happens that the exact error names (not the text) expected by stdsuite change.; - [x] the new `negotiate_derivative_type` function is called early, so it now handles the methodname typo helper (""Did you mean?"") that FAE added. The independent `_method_exists()` fn removed.; - [x] the former function `_set_convergence_criterion` where you passed in 5 integers for the different E/D_CONVERGENCE values has been rewritten as `negotiate_convergence_criterion` where you pass in a tuple of the case (e.g., `(2, 1)` is Hessian by findif of gradients). In actual `driver.py`, the function calls have been switched out. The values set are the same, but the arguments like `(1, 0)` aren't necessarily appropriate in this non-ddd driver code routing.; - [x] the former function `_find_derivative_type` has been replaced by three functions headed up by `negotiate_derivative_type`. For both, the goal is to take a method name, the target derivative, and any user modifications and return the appropriate analytic or findif strategy or produce a helpful error. sounds simple, but managed methods and cbs specs complicate things. In ddd, this function is called early, not piecemeal throughout the driver, so more probing has been consolidated into the new function. In actual `driver.py`, the function calls have been switched out, but it's only using half the info due to differences in non-ddd driver code routing. To mirror ddd behavior, the function is called even for energy() and properties(), mostly to take the place of `_method_exists()`. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2536:1786,error,error,1786,https://psicode.org,https://github.com/psi4/psi4/pull/2536,1,['error'],['error']
Availability,"ests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX11_NULLPTR;HAS_CXX11_LIB_REGEX;HAS_CXX11_RVALUE_REFERENCES;HAS_CXX11_SIZEOF_MEMBER;HAS_CXX11_STATIC_ASSERT;HAS_CXX11_VARIADIC_TEMPLATES;HAVE_MKL_BLAS;HAVE_MKL_LAP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:4115,Error,Error,4115,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"et qc_module occ`) until further optimized); - [x] uhf df a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd-ccd E; - [x] uhf cd-ccsd E; - [x] uhf cd-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] pick over canonical methods and run some basic timings tests; - [x] TODO: kill `new` pass; - [x] TODO: there might be UHF CCD in there, too.; - [x] TODO: merge #2731 first. it has a lot of stdsuite changes that I don't want to rebase through. nevertheless, stdsuite on the new methods is working fine locally. the azure errors are that uhf cc methods are running rather than throwing NYI as it expects.; - [x] TODO: df ccsd(t) gradients need to be marked experimental and semi-hidden until optimization. REVISED 25 Oct; ```; Module comparison timings [s] for CCSD & CCSD(T) energy & gradient; * Benzene, C6H6; * Either aug-cc-pVDZ (192 nbf) or cc-pVDZ (119 nbf); all-electron; * Same singlet system run as RHF & UHF; * CC converged to 1e-7; * 20 GiB, 8 threads. GRADIENT ENERGY; symm c1 symm c1; ---- ---- ---- ----; <<< CCSD/aug-cc-pVDZ >>>. cfour (vcc) rhf conv 132 1650 52 1202 ; ccenergy rhf conv 266 2037 92 1099; dfocc rhf df n/a 420 n/a 230; fnocc rhf df n/a 149. cfour uhf conv 225 3473 90 2413 ; ccenergy uhf conv 463 5196 222 2576; dfocc uhf df n/a 1545 n/a 826. cfour u/r ratio 1.7 2.1 1.7 2.0 ; ccenergy u/r ratio 1.7 2.5 2.4 2.3; dfocc u/r ratio n/a 3.7 n/a 3.6; ```. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2739:1559,error,errors,1559,https://psicode.org,https://github.com/psi4/psi4/pull/2739,1,['error'],['errors']
Availability,expand psicode.org/downloads,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1840:19,down,downloads,19,https://psicode.org,https://github.com/psi4/psi4/issues/1840,1,['down'],['downloads']
Availability,"f this issue by @dgasmith and Matt Schieber. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] ~~This PR identifies which of MKL, OPENBLAS, etc. has been detected by ConfigMath.~~ Identify MKL-or-not by searching for ""mkl"" in the full lapack library list, whether detected math or passed-in math. Colors ""MKL LAPACK"" to screen if ""on"". If MKL, attaches the `USING_LAPACK_MKL` compiler definition to the `tgt::lapack` target that every module of Psi4 is linked with. Thus we're getting MKL threading again.; - [x] Adds min version tags for dkh, gdma, erd; - [x] Adjusts where the required check comes in for hdf5 so we don't get an warning; - [x] Add docs with examples of math detection; - [x] Remove unused routes in math detection: explicit, external, mkl_flag; - [x] ConfigMath now FATAL_ERRORs if math libs _not_ found; - [x] Newly pays attention to headers for math. Only required for MKL.; - [x] Add a threading testing script for general maintenance, see comment below. In general tests where MKL found. Has compare_values, but really better suited for running by hand and judging results, as `-jN` defeats the purpose.; - [x] Added some CCSD(T) table docs requested by @CDSherrill ; * **User-Facing for Release Notes**; - [x] Change Mac math precedence to `MKL SYSTEM_NATIVE OPENBLAS ESSL ATLAS ACML` so native accelerate only behind MKL; - [x] New mechanism to pass in math libs explicitly through `LAPACK_LIBRARIES` and `LAPACK_INCLUDE_DIRS`; - [x] Collects all the addon libraries into a list, then forms RPATH of internal (relative to ORIGIN), then all non-static, non `/usr/` paths. Redundancy removed and math libs paths _always_ first. This takes over from `INSTALL_RPATH_USE_LINK_PATH`.; - [x] Bumped CMake minimum version to 3.2; - [x] Added some extra badges to README. ## Questions; - [x] I had already implemented the isMKL? detection in ConfigMath before I looked back and found [mkl testing] (https://github.com/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/615:1965,mainten,maintenance,1965,https://psicode.org,https://github.com/psi4/psi4/pull/615,1,['mainten'],['maintenance']
Availability,fcidump.py np.einsum errors on some architectures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465:21,error,errors,21,https://psicode.org,https://github.com/psi4/psi4/issues/1465,1,['error'],['errors']
Availability,"ferent) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3461,Error,Error,3461,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"fference test. My problem is that _I have absolutely no idea how to do this without going through gradient_. If I naively go through properties, the OPDM relaxation terms get dropped because they are expensive. But if I explicitly order OPDM relaxation terms... ```; molecule { ; O; H 1 1.0 ; H 1 1.0 2 101.5; }. set opdm_relax true. properties('ccsd/cc-pvdz'); ```. The `cc` module rebels and informs me that it is `Turning orbital relaxation off since only onepdm is requested.` (TPDM is needed to construct the CC orbital gradient needed for the Z-vector equation.). Who told `cc` to only compute the OPDM? [This line of driver code, which the user cannot override.](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L3124) Although [docs report](https://github.com/psi4/psi4/blob/master/psi4/src/read_options.cc#L1812) that this flag controls whether the onepdm is computed, internal `ccdensity` [says](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/cc/ccdensity/Params.h#L49) the flag controls whether the 1PDM _alone_ is computed, implicitly denying the 2PDM from ever being computed. Pinging @loriab for all things keyword standardization and @lothian in case you had a reason for [coding this](https://github.com/psi4/psi4archive/commit/575ec501ee7638cf4ff0c373f78e03ae6aac00c4). In my view:; - Keyword `onepdm` should be renamed to something like `onepdm_only`.; - `onepdm_only` default changes to `true`.; - Requesting either `relax_opdm` or a method that inherently requires 2-electron densities (gradients for sure) trumps `onepdm_only`.; - In all other cases, the driver is no longer responsible for setting `onepdm_only`.; - Default for `relax_opdm` remains false, and therefore, 2PDM will not be computed unless necessary. If we're agreed, I'm happy to make these changes. I'm more afraid of the current state of densities in Psi than I am of legacy code. We would need to discuss how we want to handle deprecation, and which CC properties need the 2PDM.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2432:1412,Ping,Pinging,1412,https://psicode.org,https://github.com/psi4/psi4/issues/2432,1,['Ping'],['Pinging']
Availability,"first B iteration, not the last, so they have canonical values. `SCF TOTAL ENERGY` still from first B iteration.; * `(BCCD|BCCD(T)) CORRELATION ENERGY` now defined as total E of last B iteration minus HF of first B iteration. This is in accordance with the pattern that `mtd CORRELATION ENERGY` = `mtd TOTAL ENERGY` - `SCF TOTAL ENERGY`, but it is admittedly wacky when applied to Brueckner. It is, however, the same way the orbital-optimized methods of occ/dfocc have been handled. The OO methods additionally set a `mtd REFERENCE CORRECTION ENERGY` so that one can recover the ref/corl split of the final OO iteration. That could be added to the BCCD methods. Does the above sound ok, or does it need further reworking? I also tightened up the B r_conv formula a bit because the standard tests (not shown in PR) weren't matching (to 1.e-6) the highly converged values under default conditions (e_conv = 6 --> brueckner_r_conv =4). I've also been on a rampage of late to better (and automatically) document what methods are available under what detailed conditions (e.g., dertype, reference, conv/df/cd type, all-electron/frozen-core). I'd like to add the table snapshotted below to the main [CC docs page](https://psicode.org/psi4manual/master/cc.html). Unfortunately, it doesn't cover excited states or properties, so it can't replace the existing summary table, but it does provide more detail. Does it look ok, and are there any cc* capabilities in the ground-state realm that I've missed?. **Note:** No worries if the CI on this fails. I've copied over the stuff that's important to look at, not necessarily all needed to run. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Add and change definitions of qcvars for BCCD and BCCD(T); - [x] Tighten default Brueckner convergence. <img width=""921"" alt=""Screen Shot 2022-08-30 at 12 34 26 AM"" src=""https://user-images.githubusercontent.com/2314730/187350163-42fff29c-3159-404f-9177-ae4cf8e",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708:1593,avail,available,1593,https://psicode.org,https://github.com/psi4/psi4/pull/2708,1,['avail'],['available']
Availability,"fit.gbs ); for((ib=0;ib<${#b[@]};ib++)); do for((jb=0;jb<ib;jb++)); do echo -n ""${b[ib]} vs ${b[jb]}: ""; diff ${b[ib]} ${b[jb]}| wc -l;done;done; def2-qzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 4; def2-sv_p_-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1727; def2-sv_p_-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 1723; def2-svp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 1727; def2-svp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-qzvp-jkfit.gbs: 0; def2-tzvpp-jkfit.gbs vs def2-qzvpp-jkfit.gbs: 4; def2-tzvpp-jkfit.gbs vs def2-sv_p_-jkfit.gbs: 1727; def2-tzvpp-jkfit.gbs vs def2-svp-jkfit.gbs: 1723; def2-tzvpp-jkfit.gbs vs def2-tzvp-jkfit.gbs: 0; ```. According to @bennybp the sets should be all the same, see https://github.com/MolSSI-BSE/basis_set_exchange/issues/103. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] remove redundant def2-*-[jk|j]fit basis sets. Presuming Susi accepts my PR, this one will additionally accomplish; - [x] fixes #1798 At least make all the def2 orbital and rifit basis sets parseable. These have been read through diff_gbs.py so I know all the elements parse now. Variety of errors found.; - [x] helps #1804 by redirecting def2-*-jkfit specifications toward the universal files. only took about four files to find a satisfactory and minimally disruptive place for a simple map-and-warn :-(; - [x] helps plugins like v2rdm_casscf that are adding internal pb11 by attaching the found Python headers location to the plugin target. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1804:2245,redundant,redundant,2245,https://psicode.org,https://github.com/psi4/psi4/pull/1804,2,"['error', 'redundant']","['errors', 'redundant']"
Availability,fix error string checking for pytest 5,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1674:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/pull/1674,1,['error'],['error']
Availability,fix short-term CheMPS2 outage,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/576:23,outage,outage,23,https://psicode.org,https://github.com/psi4/psi4/pull/576,1,['outage'],['outage']
Availability,"fo to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - [x] Psi4's DFT now uses LibXC, several hundred new functionals are available.; - [x] DFT potential and gradient builds are now parallelized and vectorized, up to 30x faster on six cores.; - [x] Adds a new vectorized DF-JK builder, up to 4x as fast as previous version.; - [x] Adds culoumb-attenuated (CAM) functionals.; - [x] Adds the VV10 non-local correlation kernel.; - [x] Adds DSD functionals.; - [x] Extended second-order SCF convergence to DFT Wavefunctions.; - [x] Adds the gradient regularized asymptotic correction (GRAC) to DFT through the option `DFT_GRAC_SHIFT`.; - [x] Adds a density-fitted second-order Electron Propagator code. ; - [x] Adds the density-fitted SAPT(DFT) code.; - [x] Adds linear response DFT.; - [ ] Adds TDDFT methodologies.; - [x] To avoid conflict the function `property` was renamed to `properties`.; - [x] More involved JSON input/output interface.; - [x] Effective Core Potentials available for SCF energies and gradients, as well as post-SCF energies.; - [x] Def2 family of basis sets available for all atoms supported by those basis sets. * **Bug Fixes**; - [x] wB97X had an incorrect range-seperation parameter. This is now fixed. Note that this did *not* effect wB97X-D.; - [x] Memory limitations are better adhered to for very large MCSCF computations. * **TODO**; - [ ] Run `sed` commands from https://github.com/psi4/psi4/pull/690; - [x] Pull in ECPs #681 ; - [ ] Rebase in current master to resolve conflicts; - [x] Closes #39 ; - [x] Closes #40 ; - [ ] New Hessian/Frequency analysis code.; - [ ] Fill out remaining DFT documentations; - [ ] Polish new DF JK/Transformer technology; - [ ] Triple check UKS GGA Hessian-vector code; - [ ] Finished DFT Hessian functionality (skeleton terms); - [ ] Rebase in License/1.1 changes; - [ ] Rebase in ECP changes (#681); - [ ] Re-examine VV10 default grid size; - [ ] Implement VV10 gradients. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698:2493,avail,available,2493,https://psicode.org,https://github.com/psi4/psi4/pull/698,2,['avail'],['available']
Availability,"following up on issues unresolved in #2293. split issue as needed; - [ ] remove all internal cfour files; - [ ] remove cfour from read_options; - [ ] kill off or otherwise address sole `using(""qcdb"")` test case; - [ ] implement atol_ and rtol_e/g/h from qcng into psi4 stdsuite runner; - [ ] check `hessian(""HF/basis"")` properly get a `HF TOTAL HESSIAN` qcvar; - [ ] in cc.rst table, settle down to two symbols meaning NYI and not-applicable-to-method, rather than the ""N"", ""---"", ""n/a"" mixture at present.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2303:391,down,down,391,https://psicode.org,https://github.com/psi4/psi4/issues/2303,1,['down'],['down']
Availability,forrtl: error (76): Abort trap signal,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2084:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/2084,1,['error'],['error']
Availability,free() error in rasci calculation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2309:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/2309,1,['error'],['error']
Availability,"g::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3493,error,error,3493,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"g_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. CMake Error: Unable to find the executable at any of:; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Debug/cmTC_a8cfe; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/check_cxx11/cxx11_regex/CMakeFiles/CMakeTmp/Development/cmTC_a8cfe. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=paralle",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:10474,Error,Error,10474,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['Error'],['Error']
Availability,"git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3290,Error,Error,3290,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"gs_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:4045,error,error,4045,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a build with `CXXFLAGS=""-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=native -O3 -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include""` and all the other envvars also set similarly, and the build appears to be OK, no ctests or pytests failed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1483,echo,echo,1483,https://psicode.org,https://github.com/psi4/psi4/issues/2416,3,"['echo', 'redundant']","['echo', 'redundant']"
Availability,"h of these external projects simply worries about their dependencies and their building process. Finally, because each external project is a good CMake project it makes a `XXXConf.cmake` file or a `FindXXX.cmake` file is included in `psi4/cmake`, which set `XXX_LIBRARIES` and `XXX_INCLUDE_DIRS` appropriately. Hence all other external projects simply need to keep appending dependencies and everyone gets to play nicely together.; # Detailed Change Log; ## Build scripts. I metaphorically ripped all the old build scripts out and started fresh. In my opinion the scripts are far easier to read. It also means I may have not added some functionality back. In particular there were many complicated scripts for setting compile flags. At least on my box these scripts did not find all the optimizations to begin with (didn't turn on many of the Intel optimizations). They also didn't respect some of the CMake variables. The scripts themselves are designed to be quite terse by factoring out redundant code, although admittedly the `ExternalProject_Add` commands are still repetitive. Also note I heavily use empty targets and variables to avoid lots of if/else statements.; ## Added an External Folder. The top-level Psi4 directory is primarily split into a directory, `psi4`, where the source for the core of Psi4 lives and a folder `external` where optional modules and dependencies live. The general strategy for determining where something goes is if you personally didn't write the code, or it is intended to be used with many other packages, it probably falls under the category of going in the external folder. Each package in `external` should be designed in such a manner so that it doesn't leak dependencies into the core. For example if the package returns its results in a class `MyGreatMatrix` the wrapper code that copies it to a Psi4 `Matrix` should live in external. This prevents Psi4 proper from having to know about `MyGreatMatrix`. ; ## Libraries that are not part of Psi4 core are",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442:3086,redundant,redundant,3086,https://psicode.org,https://github.com/psi4/psi4/pull/442,1,['redundant'],['redundant']
Availability,"he PSI_SCRATCH envvar section. Can probably steal some text/code from conda.rst.; - [x] In docs, show an example of a threaded pbs job file. Here's one to work from. See @loriab about any parts that are obscure. ```; #!/bin/tcsh; ## this file auto-generated by submit4 ...; #PBS -j oe ; #PBS -l walltime=80:00:00:00; #PBS -l pmem=2120mb; #PBS -N SSI-084TYR-095LEU-1-dimer; #PBS -V. setenv OMP_NUM_THREADS 4; setenv MKL_NUM_THREADS 4; cd $PBS_O_WORKDIR; setenv myscratch /scratch/loriab/psi4.$PBS_JOBID. cat $PBS_NODEFILE; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end; unsetenv PSI4DATADIR; unsetenv PSIDATADIR; if ! ( $?PYTHONPATH ) setenv PYTHONPATH """"; setenv PYTHONPATH /theoryfs2/ds/cdsgroup/psi4aux:$PYTHONPATH; setenv PSI_SCRATCH $myscratch; setenv PATH /theoryfs2/ds/cdsgroup/miniconda/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/scripts/bin:${PATH}; setenv PATH /theoryfs2/ds/loriab/chem/psi4_trials/c4/c4v2/cfour_v2.00beta/bin:${PATH}; setenv PATH /theoryfs2/ds/cdsgroup/psi4-compile/mrcc:${PATH}; setenv PSIDATADIR /theoryfs2/ds/cdsgroup/psi4-install/psi3930/share/psi4; source /theoryfs2/common/software/intel2016/bin/compilervars.csh intel64; /theoryfs2/ds/cdsgroup/scripts/bin/runpsi.py -i SSI-084TYR-095LEU-1-dimer.in -o SSI-084TYR-095LEU-1-dimer.out. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end; ```; - [x] On wiki, create FAQ on https://github.com/psi4/psi4/wiki/8_FAQ_Contents about how do i set scratch, how do i use psi4 in a pbs queue, etc. Questions go in the 8_FAQ_Contents page, answers can link back to the sphinx docs themselves, then index the questions in the https://github.com/psi4/psi4/wiki/0_FAQ.; - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/109:1969,echo,echo,1969,https://psicode.org,https://github.com/psi4/psi4/issues/109,1,['echo'],['echo']
Availability,"he compilation flag list when enabled. The `-pedantic-errors` flag has the compilation fail any time the code does not strictly follow the C++ language standard, i.e., whenever a compiler-specific language extension is used. `FORCE_PEDANTIC` is currently set to be enabled by default. ; 2. Fixes any instances of the code where the above option/flag would cause a compilation failure. This only requires two changes currently - removing extra semicolons in `libdiis/diismanager.h`, and replacing use of variable-length C-style arrays in `libmints/extern.cc`. The goal of these changes is to improve code portability across different compilers. By effectively disabling compiler-specific language extensions, the code no longer relies on specific compiler functionalities to work, and therefore should be compatible with a larger range of compilers across a wider variety of systems. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] N/A. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds a new compile-time setting, `FORCE_PEDANTIC`, that causes compilation to fail whenever use of a compiler-specific extension is detected.; - [X] Removes extraneous semicolons in `libddis/diismanager.h` that led to compiler error with the `FORCE_PEDANTIC` option enabled.; - [X] Replaces the use of variable-length C-style arrays in `libmints/extern.cc` with `std::vector` constructs. ## Questions; - [X] Should this new option be on by default?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3145:1665,error,error,1665,https://psicode.org,https://github.com/psi4/psi4/pull/3145,1,['error'],['error']
Availability,"he wrong vector.; 5. One of the tensor contractions involving TEI was incorrect. After fixing those five bugs, I observed three things:; 1. After accounting for whether you index by (v,o) or (o, v), the matrix-vector products of the new occ implementation match those of the SOUHF P4N tutorials,; 2. The X (kappa) converged to does satisfy Ax=b; 3. The orbital equations refuse to converge. My conclusion is that the implementation of the algorithm is now correct, but it's not a good way to generate orbital steps. The off-diagonal terms can end up being significant for the open-shell systems that would lead you to use an orbital-optimized method. This didn't cause obvious problems before because the previous errors rendered the PCG procedure non-convergent, so you would always fall back to the crude diagonal step _unless_ your orbital gradient was so low that you didn't need to iterate at all. So what we expect to see from this bug is difficulties converging occ tightly, which has been my experience. To remedy the situation, the default orbital step is now the crude semicanonical step. The next PR should be the final one in the series. I'll just need to rebase it onto this one, repair the two tests I mentioned on broken tests, and confirm the test suite is clean. Pinging the usual suspects: @loriab, especially @dgasmith for PCG, and @jturney. I think Jet is sick today, so a different third reviewer would be welcome. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Debugged HF MO hessian based orbital step; - [x] Made HF MO hessian based orbital step opt-in rather than default; Not recommended. ## Checklist; Can't run tests if the tests were already broken!; - [x] Confirmed b-Ax approximately zero for the first step of the `ocepa-grad2` test case; - [x] Confirmed Ax reproduces the Psi4Numpy reference SOUHF Ax by acting on a test alpha orbital and a test beta orbital. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1829:1966,repair,repair,1966,https://psicode.org,https://github.com/psi4/psi4/pull/1829,2,"['Ping', 'repair']","['Pinging', 'repair']"
Availability,"heck if the diagonalization failed, because they _cannot_. This is now rectified by adding failure checks wherever the new DSYEV wrappers are called.; Checks against non-square matrices are also added where there is both a row and column count at the call site. Some of the call sites would be dfocc territory, this PR does not include them to avoid conflicts with the dfocc overhaul.; This is another shard of the https://github.com/psi4/psi4/pull/2642 mega-PR that can be merged after PR #2678 and #2738 are in. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:1290,failure,failure,1290,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"heel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-1.0.12-py36ha843d7b_0 ...; installing: numpy-1.16.3-py36h7e9f1db_0 ...; installing: qcelemental-0.4.0-py_0 ...; installing: resp-0.7-py36ha93d1a2_0 ...; installing: scipy-1.2.1-py36h7c811a0_0 ...; installing: openfermion-0.9-py36hd763080_1 ...; installing: psi4-1.3.2+ecbda83-py36h189457c_0 ... Thank you for installing Psi4.; Website: psicode.org; Forum: forum.psicode.org; Manual: psicode.org/psi4manual/master/index.html; GitHub: github.com/psi4/psi4; Binary: anaconda.org/psi4/psi4; Inputs: /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples; Test (after first activating conda installation or environment):; psi4 /home/chenh/ly/sourcefolders/psi4conda/share/psi4/samples/sapt1/test.in; psi4 --test. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.csh; conda activate; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. For sh/bash command-line use, add to shell or ~/.bashrc file:; source /home/chenh/ly/sourcefolders/psi4conda/etc/profile.d/conda.sh; conda activate; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. installing: snsmp2-1.0.3-py36he403277_2 ...; installing: openfermionpsi4-0.4-py36h934b37d_0 ...; installing: psi4-rt-1.3.2-py36ha6b60c8_0 ...; if: Expression Syntax.; ERROR: executing post_install.sh failed; [chenh@Pauling programs]$ psi4 -V; Segmentation fault (core dumped); ```; This problem is not a special case, and I have also found that someone has the same problem in other forums. My system is 2.6.32-431.el6.x86_64 #1 SMP Sun 2013 x86_64 x86_64 x86_64 GNU/Linux.; If you have any questions, please don't hesitate to ask me.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:5067,ERROR,ERROR,5067,https://psicode.org,https://github.com/psi4/psi4/issues/1788,2,"['ERROR', 'fault']","['ERROR', 'fault']"
Availability,"hen PYMOD_INSTALL_LIBDIR is non-default.; - [x] export psi4::core target. use it in plugin. much simplify the psi4Config. tidy up the share installs.; - [x] flatten install dir structure. no more `external/`; - [x] shift importing of official plugins. rename psi4 --plugin* options. add cmake -C line. update CM templates.; - [x] switch over Py detection to PythonLibsNew. Beautify components printing. ; - [x] Move threads detection to target.; - [x] start testing the plugin templates again; - [x] standardize `Psi4Macros` --> `psi4OptionsTools`.; - [x] Correct CXX comp names in autocmake_static_lib (@robertodr, I copied this from you, so you may have it wrong, too). Check enabled langs properly rather than compilers defined so OptionsTools usable to other projects with diff enabled langs.; - [x] switch pybind11 to upstream source. better handle c++ std wrt pybind. `PSI4_CXX_STANDARD` --> `psi4_CXX_STANDARD`.; - [x] compile test of gcc version able to account for -gcc-name/-gxx-name (@bennybp, here's the code for what we talked about once in `custom_cxxstandard.cmake`); - [x] convert restrict test to write its own file.; - [x] kill off LAB and @jturney config files. replace with `cmake -C psi4PluginCache.cmake` suited config file.; - [x] `psi4pasture` --> `pasture`.; - [x] always whole-archive dpd and qt; - [x] `external` --> `external/upstream`, `internals` --> ``external/downstream`; - [x] remove old Find*cmake files. * **User-Facing for Release Notes**; - [x] We changed our python detection module to the one used by NumPy. Also changed so that not actually using libpython anywhere.; - [x] Used to do `psi4 --new-plugin-makefile` to generate `Makefile`. Now do `psi4 --plugin-compile` to get a cmake command to generate a `Makefile` against that psi4.; - [x] `--new-plugin` --> `--plugin-name`.; - [x] `ctest -L mini` --> `ctest -L smoke`; ; - [x] @amjames, the pasture is going to need a slight update to mesh with the new plugin infrastructure. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/554:1782,down,downstream,1782,https://psicode.org,https://github.com/psi4/psi4/pull/554,1,['down'],['downstream']
Availability,"her ones, such as the Continuous Fast Multipole Method (CFMM), are planned for the future, and even more (e.g., J-Engine, Local DF methods) exist beyond the work done in Psi4 for the past year. The problem is, Psi4's JK class does not have a framework that truly supports the existence of these separate J and K algorithms. DFJLinK and DFJCOSK work for now, given the low number of separate J and K algorithms current in Psi4. But, as more separate J and K algorithms are added to Psi4, the number of JK subclasses will skyrocket, assuming every combination of separate J and separate K algorithm is stored in its own JK subclass. This will lead to a nasty problem with code duplication, not even discussing the pollution of the JK hierarchy that would result. Thus, for continued research into separate J and K construction algorithms, a proper framework for supporting such algorithms is paramount. CompositeJK is that framework. CompositeJK is a single JK subclass which enables the combination and execution of any separate J and K build algorithm available in Psi4. CompositeJK can enable this without duplication of separate build algorithms across different subclasses. Additionally, CompositeJK is designed to enable simple expansion of itself, enabling the easy addition of new separate J and K builds to Psi4 with minimal programming issues. The current PR is the first implementation of the CompositeJK framework into Psi4, and it has two components:; - Front end. The front end changes control of how composite combinations of separate J and K build algorithms can be called by the user. The most important aspect is that, for CompositeJK, any combinations of its sub-algorithms can be called by setting SCF_TYPE to `J_alg+K_alg`, where _J_alg_ is the separate J build algorithm of choice, and _K_alg_ is the separate K algorithm of choice. As of now, the two CompositeJK options available are `DIRECTDFJ+LINK` representing the old DFJLinK class, and `DIRECTDFJ+COSX` representing the old ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2833:1653,avail,available,1653,https://psicode.org,https://github.com/psi4/psi4/pull/2833,1,['avail'],['available']
Availability,"here-mentioned DETCI and MRCC changes integrated in.; - [x] CCD is given select_ccd* functions to raise a sensible error message since the default (cc_type=CONV) isn't implemented. ; - [x] CC2 and CC3 are given select_* functions since now CCENERGY and MRCC cover them. This led to controversy (unresolved) over whether DF-CC2 is RTG, see #2710. A result is that you need to `set qc_module ccenergy` explicitly to use DF for CC2 -- a test case edit was needed.; - [x] `run_dfocc`, `run_dfocc_gradient` fns were simplified by using the `method_algorithm_type` fn; - [x] `run_fnodfcc`, `run_fnocc`, `run_cepa` were simplified by using the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:9026,error,error,9026,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['error'],['error']
Availability,"herical Harmonics?: true; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.0.0; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1\u20135 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97M-V <= . wB97M-V Hyb-GGA Exchange-Correlation Functional. N. Mardirossian and M. Head-Gordon., J. Chem. Phys. 144, 214110 (2016) (10.1063/1.4952647). Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97M-V exchange-correlation functional. => Exact (HF) Exchange <=. 0.8500 HF,LR [omega = 0.3000]; 0.1500 HF . => LibXC Density Thresholds <==. XC_HYB_MGGA_XC_WB97M_V: 1.00E-13 . => VV10 Non-Local Parameters <=. VV10 B = 6.0000E+00; VV10 C = 1.0000E-02. => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 281815; Total Blocks = 2159; Max Points = 256; Max Functions = 305; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 4, 6 entry O line 318 file .../share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2-3, 9-13 entry H line 18 file .../share/psi4/basis/def2-universal-jkfit.gbs ; atoms 5, 7-8 entry C line 198 file .../share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Integrals threads: 1; Memory [MiB]: 243; Algorithm: Disk; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (DEF2-TZVPPD AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 192; Number of basis functions: 582; Number of Cartesian functions: 686; Spherical Harmonics?: true; Max angular momentum: 4. Cached 2.7% of DFT collocation bl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3051:6455,Toler,Tolerance,6455,https://psicode.org,https://github.com/psi4/psi4/issues/3051,1,['Toler'],['Tolerance']
Availability,"hi friends,did you change the code recently?; libscf_solver/hf.cc:772:22: error: qualified-id in declaration before ‘(’ token; 772 | void HF::compute_fcpi() {; | ^. i think that cause of missing ""}"" after line 770 in this file, it is right?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3185:74,error,error,74,https://psicode.org,https://github.com/psi4/psi4/issues/3185,1,['error'],['error']
Availability,"home/ward/tmp/psi4release/build/CMakeFiles ; [ 98%] [ 98%] Build aointegrals example plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/90:1213,Error,Error,1213,https://psicode.org,https://github.com/psi4/psi4/issues/90,1,['Error'],['Error']
Availability,how to brack down the dual descriptor results from cubprop() into atom level?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3108:13,down,down,13,https://psicode.org,https://github.com/psi4/psi4/issues/3108,1,['down'],['down']
Availability,"https://anaconda.org/conda-forge/psi4/files. There are `osx-64`, `win-64`, `linux-64`, and `osx-arm64` files here - but not a `linux-arm64`. When you try to build Psi4 on `linux-arm64` (for my use case, in a Docker container), you get this error: . ```; > [ 4/15] RUN micromamba install -y -n base -f /tmp/env.yml && micromamba clean --all --yes:; 8.185 error libmamba Could not solve for environment specs; 8.185 The following package could not be installed; 8.185 └─ psi4 >=1.9,<1.10 does not exist (perhaps a typo or a missing channel).; 8.189 critical libmamba Could not solve for environment specs; ```. It seems a lot of the ARM64 considerations were already figured out in #2333 and surrounding work; would it be possible to add ARM support for Linux?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3198:240,error,error,240,https://psicode.org,https://github.com/psi4/psi4/issues/3198,2,['error'],['error']
Availability,"hub.com/evaleev/libint/pull/233 | 23Mar22, after #2413, v1.6, v1.7 | `5-4-3-6-5-4_mm4f12ob2.tgz` | gss | `eri_c4_d1_l5` | `_15` | `_7` | `_4` |; | C[^8] | McMurchie Davidson | any | 31Mar22, after #2414, v1.6, v1.7 |; | ~A[^6]~ | ~standardize ordering~ | ditto step B | #2537 | ditto step B | sss | `g5` | rm `_16` | rm `_8` | — |; | A' [^9] | flex solid-harm ordering | [loriab:new-cmake-2023-take2-b](https://github.com/loriab/libint/tree/new-cmake-2023-take2-b) https://github.com/evaleev/libint/pull/259 | 8May23, after #2861, v1.8, v1.9 (see also A'') | `libint-2.7.2-post1-5-4-3-6-5-4_mm4f12ob2_1` | sss | `eri_c4_d1_l5` | `_1`, c-f | c-f | c-f |; | A'' [^10] | flex solid-harm ordering, libtool-based | [upstream master](https://github.com/evaleev/libint/tree/master) any point after https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9 | 3Dec23, after #3047, v1.9 (see also A') | [libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:2231,down,download,2231,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"i was trying to parameterize a compound with FFParam and i wanted to do a dihedral scan for one of the dihedrals in my molecule, however, an error was produced saying that the atoms should not be in a ring. . is there a way to overcome this error?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2599:141,error,error,141,https://psicode.org,https://github.com/psi4/psi4/issues/2599,2,['error'],['error']
Availability,"i::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibF",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1229,error,error,1229,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"iab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: P",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3344,down,download,3344,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"ib64/libutil.so ; -- Found libm: /usr/lib64/libm.so ; -- Found librt: /usr/lib64/librt.so ; -- Found libdl: /usr/lib64/libdl.so ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; -- Found PythonInterp: /usr/bin/python2 (found version ""2.7.11"") ; -- Found Python: /usr/lib64/libpython2.7.so ; -- Boost version: 1.60.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /home/piton/gitdir/psi4/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. Error message:. [100%] Linking CXX executable ../../../bin/psi4; CMakeFiles/psi4_objlib.dir/create_new_plugin.cc.o: In function `boost::re_detail_106000::perl_matcher<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > >, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::match_imp()':; create_new_plugin.cc:(.text._ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv[_ZN5boost16re_detail_10600012perl_matcherIN9__gnu_cxx17__normal_iteratorIPKcSsEESaINS_9sub_matchIS6_EEENS_12regex_traitsIcNS_16cpp_regex_traitsIcEEEEE9match_impEv]+0x42d): undefined reference to`boost::match_results<__gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<boost::sub_match<__gnu_cxx::__normal_iterator<char const*, std::string> > > >::maybe_assign(boost::match_results<__gnu_cxx::__normal_itera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/312:5422,Error,Error,5422,https://psicode.org,https://github.com/psi4/psi4/issues/312,1,['Error'],['Error']
Availability,"id::buildGridFromOptions(psi::MolecularGrid::MolecularGridOptions const&); psi::DFTGrid::buildGridFromOptions(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >); psi::DFTGrid::DFTGrid(std::shared_ptr<psi::Molecule>, std::shared_ptr<psi::BasisSet>, psi::Options&). *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```. Are there plans to include support for the SG-1 grid in Psi4? If not, are there any alternative grids that do work? _Removing_ the SG-1 option from the input file simply results in a segfault. The input file is below:. ```; memory 13500 Mb; molecule {; 0 1; C 4.067369 -2.240127 -0.129252; C 4.972458 -1.390566 3.098494; C 2.921005 -1.630865 0.608144; C 2.878286 -1.651992 2.002187; C 0.763829 -0.484138 1.955055; C 1.885141 -1.036307 -0.112440; C 1.799700 -1.078640 2.675676; C 0.806556 -0.463011 0.561006; O 3.881939 -2.228505 2.721026; Br -0.697406 0.294370 2.866925; H 4.856028 -1.495441 -0.288527; H 4.492277 -3.085465 0.426246; H 3.750214 -2.627370 -1.105706; H 5.701654 -1.973847 3.666076; H 4.602203 -0.560418 3.705314; H 5.446916 -0.996749 2.196547; H 1.908587 -1.015574 -1.198747; H 1.775186 -1.100057 3.762739; H 0.006619 -0.004988 -0.014918; }; set dft_radial_points 99; set dft_spherical",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/827:1466,error,error,1466,https://psicode.org,https://github.com/psi4/psi4/issues/827,1,['error'],['error']
Availability,"ide; - Psi4 now requires C++14 (up from C++11); - The C++ code base was reformatted using clang-format and the provided format file (many PRs). # Developer Interests; - Cleans up the Matrix class for non-totally symmetric irrupts (#1383).; - Psi4 is now C++17 compatible (#1345).; - DFT grid generation is now threaded (#1291).; - `findif` is now ""metadata""-based to allow for greater serialization (#1289).; - Additional documentation and notes on alpha/beta for DFT functionals (#1260).; - `dpd.gbl` has been removed (#1254).; - The CC* modules are moving to a CCWavefunction based solution (#1253).; - CBS has been reworked to be dictionary based to allow for greater flexibility (#1235).; - Updated conversion factors to CODATA 2014 (#1213).; - `pthreads` has been removed from Psi4 (shall not return, #1199).; - Empirical Dispersion has been refactored to a new unified interface (#1151).; - OEProp has been split into many small modules allowing greater flexibility (#1133).; - SCF now throws a SCFConverenceError upon reaching maximum iterations (#1130).; - Standardizes memory printing to `[GiB]` (#1097, ...). # Documentation; - NYI. # Miscelaneous; - NYI. # Bug Fixes; - Fixes an error where the CBS extrapolation technology was not comparable with FNO-CC* methods (#1377); - Fixes an issue where relativistic basis sets were not compatible with SCF stability analysis (#1374).; - Fixes an issue where JSON called from the command line did not correctly write an output (#1369).; - Fixed an error where float options when set as integer were not correctly cast (#1352 ).; - Correctly throws when Yukawa functionals are called from LibXC (#1260).; - Prevents the code from incorrectly trying cast densities between symmetries in some circumstances (#1139).; - Ghost atoms where incorrectly attributing to `core` electron counts (#1139).; - Fixes an issue in DFHelper memory estimation (#1100).; - Fixes range-separate disk gradient paging (backported in v1.2.1, #1096 ) . # Known Bugs; - NYI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406:3975,error,error,3975,https://psicode.org,https://github.com/psi4/psi4/issues/1406,2,['error'],['error']
Availability,"igen_maps()` functions, then, return Eigen matrix-like objects that directly link with the Psi4 matrix data buffer of the Psi4 matrix for which the function was called. This provides an efficient fashion by which to utilize Psi4 matrices in contexts which require Eigen constructs, with no data deepcopying or Eigen-to-Psi4 back-conversions required. There is a key difference between the two functions. `eigen_map()` assumes that the matrix has a single irrep, and returns a single `Eigen::Map` object. `eigen_maps()` , on the other hand, is used for matrices with multiple irreps, and returns a `std::vector` of `Eigen::Map` objects, each `Map` in the `vector` corresponding to one irrep of the Psi4 matrix. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [X] Adds two new functions, `eigen_map()` and `eigen_maps()`, usable in Psi4 plugins and downstream programs, that return a formulation of the calling `Psi::Matrix` object, that is usable in contexts where `Eigen::Matrix` objects are required/desired. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [X] Adds two new member functions to `Psi4::Matrix`, `eigen_map()` and `eigen_maps()`, that return `Eigen::Map` representations of the Psi4 matrix object. ## Questions; - [X] N/A. ## Notes; - [X] I did look into forward declaring the necessary Eigen classes, but forward declaring `Eigen::Map` turns out to be a bit ugly, as it is a class template that, to forward declare, ends up requiring forward declarations for other Eigen classes and enums (such as `Stride` and `AlignmentType`) that aren't specifically necessary for the Psi4 use case. Therefore, I have skipped forward declarations here.; - [X] I can confirm the correctness ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3143:1632,down,downstream,1632,https://psicode.org,https://github.com/psi4/psi4/pull/3143,1,['down'],['downstream']
Availability,"ils; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused function `MOInfoBase::correlate` is removed; - [x] The only thing the `MOInfoBase` dtor does is call `MOInfoBase::cleanup()`, an empty function. Removed both.; - [x] Moved the contents of `MOInfo::free_memory()` into its only caller, the `MOInfo` dtor; - [x] Added a lot of new machine-readable docstrings, moved some existing ones; - [x] Some ""obsolete code"", commented out a long time ago is deleted from `moinfo_mappings.cc`; - [x] Moved the `double** scf` MO array and the `get_scf_mos()` getter from `MOInfoBase` to `MOInfo` and made the array private; - [x] Moved the contents of `MOInfoBase::startup()` into its only caller, the `MOInfoBase` ctor; - [x] Moved `MOInfoBase::nmo` to `MOInfo` and made it private; - [x] Made the molecular charge `const` and private in `MOInfoBase`; - [x] Made `MOInfoBase::sopi` private, added a protected getter fn to give access in derived classes; - [x] Made `MOInfoBase::nso`, `MOInfoBase::nuclear_energy` and `MOInfoBase::irr_labs` private; - [x] All functions in `MOInfoBase` that have previously returned copies of `std::vector` members now return `const&` to the vector in the object, avoiding a potential copy.; - [x] Since `MOInfoBase::silent` is only used in the ctor of `MOInfo,`, I removed it from `MOInfoBase` and `MOInfoSCF`; - [x] Inlined `MOInfo::get_actv(size_t i)` and `MOInfo::get_docc(size_t i)` as both were only called once. Since these overloads are now gone from `MOInfo`, it can now just use `get_docc()` and `get_actv()` from `MOInfoBase` instead of having to reimplement or explicitly inherit them. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing; - [x] Errors in the full test suite appear to be unrelated to `libmoinfo`. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3155:3296,Error,Errors,3296,https://psicode.org,https://github.com/psi4/psi4/pull/3155,1,['Error'],['Errors']
Availability,"in the input. A few test cases now sport extra cleans. Signatures of this problem are PSIO errors and, in an obscure case, CC amplitudes being all zeros when called as mtd/bas. An example is shown below, collected by modifying steps 6 & 7 of `cbs-xtpl-energy-conv` test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set basis bas; energy(mtd) | `PSIO_ERROR: (Incorrect block end address)` | `PSIO_ERROR: (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. - [x] Output file in continuous mode now looks much as it normally does in the master branch, except there's a few more headers printed and the individual cbs/findif/nbody `AtomicResult` outputs aren't added in real time. Running through QCFractal, the output file is expected to break down, but this hasn't been tried.; - [x] A Logging file has been introduced. All its contents should be considered experimental and subject to change.; - [x] Dipole derivatives through finite difference of dipoles added, so IR intensities available; - [x] The dummy wavefunctions returned from wrappers always had some questionable properties (e.g., single method for mixed method, largeset HF basis for cbs wavefunction) can be even less realistic (e.g., always def2-svp basis for cbs).; - [x] n-body qcvars renamed (grace period applies); ```; ""CP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""NOCP-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""VMFC-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""COUNTERPOISE CORRECTED TOTAL ENERGY"": (""CP-CORRECTED TOTAL ENERGY"", 1.7),; ""COUNTERPOISE CORRECTED INTERACTION ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:5445,down,down,5445,https://psicode.org,https://github.com/psi4/psi4/pull/2575,1,['down'],['down']
Availability,"ined mid-bond sets. To do this I have placed a set of mid-bond definitions in mb-set.gbs and used the heavier rare-gas atoms (Kr, Xe, Rn) to label the mid-bond sets. Using the commands. basis {; assign aug-cc-pVDZ; assign Rn mb-set # gets the basis set for the ghost Rn atoms from mb-set.gbs; }. Psi4 is able to perform standard (non-DF) MP2 and CC calculations using mid-bond functions. However I have encountered problems getting this to work using the DF variants of these methods. As I understand it, to get the DF-MP2, DF-CC etc to work I need to do the following:. 1. Create a set of auxiliary functions for these mid-bond sets. This I have done (mb-set-ri.gbs); 2. Specify the auxiliary basis set using; assign <aux basis> df_basis_scf/mp2. The only source of information I was able to find on the latter was at http://www.psicode.org/psi4manual/master/basissets.html#sec-basisuserdefined. Step 2 is where things fall over. First of all, the correct syntax seems to be ; assign df_basis_scf/mp2 <aux basis>; There seems to be an error on the wiki page shown above. . This syntax works as it allows me to define a specific auxiliary basis for *all* atoms. If I wish to define a specific aux basis for a particular atom (as needs to be done when using mid-bonds) then the command should be; assign Rn df_basis_scf mb-set-ri; This fails in inputparser.py with the following error:. Traceback (most recent call last):; File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 734, in process_input; temp = re.sub(basis_block, process_basis_block, temp); File ""/home/alston/Psi4/psi4conda/lib/python2.7/re.py"", line 155, in sub; return _compile(pattern, flags).sub(repl, string, count); File ""/home/alston/Psi4/psi4conda/share/psi4/python/inputparser.py"", line 357, in process_basis_block; raise TestComparisonError(message); p4util.exceptions.TestComparisonError: Conflicting basis set specification: assign lines present but shells have no [basname] label. It seems like the line ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/626:1135,error,error,1135,https://psicode.org,https://github.com/psi4/psi4/issues/626,1,['error'],['error']
Availability,"ineq_pople` (never called and not PSI_API) **(merged #2679)**; - [x] Delete unused functions/overloads from `dfocc`: `Array2d::diagonalize, Array2d::davidson, Array2d::cdsyev, Array2d::cdgesv, Array2d::lineq_flin, Array2d::lineq_pople` and `Tensor2d::davidson, Tensor2d::cdsyev, Tensor2d::cdgesv, Tensor2d::lineq_flin, Tensor2d::lineq_pople` (PR #2684); - [x] Delete unused function overloads from `libmints`: `Matrix::diagonalize` (PR #2693); - [x] Delete commented out code, an unused `extern FILE*` and unused `#include`s from `mcscf::SCF::energy` (PR #2678). ### New DSYEV wrappers, anti-`sq_rsp(...)` crusade; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. A",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:1854,failure,failure,1854,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,ing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- Looking for include file dlfcn.h; -- Looking for include file dlfcn.h - found; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - not found; -- Looking for erf; -- Looking for erf - found; -- Looking for MPI_Finalize; -- Looking for MPI_Finalize - not found; -- Checking for restrict keyword; -- Checking for restrict keyword - **restrict**; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran dgemm; -- Looking for Fortran dgemm - not found; -- Looking for Fortran sgemm; -- Looking for Fortran sgemm - not found; -- Looking for include file pthread.h; -- Looking for include file pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE ; CMake Error at /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindBLAS.cmake:594 (message):; A required library with BLAS API not found. Please specify library; location.; Call Stack (most recent call first):; /usr/local/Cellar/cmake/2.8.12.1/share/cmake/Modules/FindLAPACK.cmake:142 (find_package); CMakeLists.txt:135 (find_package),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/36:4366,Error,Error,4366,https://psicode.org,https://github.com/psi4/psi4/issues/36,1,['Error'],['Error']
Availability,"ing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Success; -- Found OpenMP: -qopenmp; -- Found libutil: /usr/lib/x86_64-linux-gnu/libutil.so; -- Found libm: /usr/lib/x86_64-linux-gnu/libm.so; -- Found librt: /usr/lib/x86_64-linux-gnu/librt.so; -- Found libdl: /usr/lib/x86_64-linux-gnu/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /home/vayu/anaconda3/bin/python (found version ""3.5.2""); -- Found Python: /home/vayu/anaconda3/lib/libpython3.5m.so; -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread; -- Toolset to be used: intel-linux; -- CheMPS2 not found. The pre-packaged version will be built.; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for include file mm_malloc.h; -- Looking for include file mm_malloc.h - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - not found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - not found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- GDMA is ENABLED; -- PCMSolver not found. The pre-packaged version will be built.; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/CMakeFiles/CMakeError.log"". ```; The CmakeOutput.log and CMakeError.log are attached. . [CMakeError.log.txt](https://github.com/psi4/psi4/files/801080/CMakeError.log.txt); [CMakeOutput.log.txt](https://github.com/psi4/psi4/files/801081/CMakeOutput.log.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:9111,error,errors,9111,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['error'],['errors']
Availability,"ing some keywords. I don't know how to deprecate these. If they're provided as module-level keywords, then I don't know the technical details of how you would raise a warning message. The bigger problem is when they're global keywords. DFOCC still uses ""level shifting"", so I can only raise a warning when I know what module the user is in. Thoughts on how to handle this?; * Should we be losing ""level shifting""? We can add _damping_ to `libdiis` if there's demand for it. I think there are better things to do with my time. ## Quick Test Status; * Switching out the DIIS version caused the `omp2p5-2` test's OMP2.5 energy to fall outside convergence criteria, again emphasizing how unstable orbital convergence in OCC is. We'll find out what the actual value is by the time I'm done.; * Losing ""level shifting"" was enough to break the `ocepa-grad2` test. This test asks for a higher-than-normal convergence from OCC, so that's no surprise. (I imagine Psi ups the energy convergence default when the user requests a gradient.) As a temp fix, I lowered the demanded energy convergence from 8 to 7. Even after that, we're outside the test tolerance, so I changed the value to boot. If anybody is dying to know the correct answer, I can run it on my Python code.; * `omp2-2` encountered oscillatory convergence, and I responded by lowering the convergence we seek. Again, coupling amplitude and orbital DIIS will break the oscillations and render this test hack unnecessary.; * We may have lost other full tests, but we'll get them back at the end. ## So Lori Knows What to Put in Changelog; - [x] Overhauled orbital convergence in the OCC module. As a result, the `level_shift` and `do_level_shift` keywords have been removed. Contact the developers if you've found a case where the new convergence is worse than old!. ## Checklist; - [x] [Quick tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783:3662,toler,tolerance,3662,https://psicode.org,https://github.com/psi4/psi4/pull/1783,1,['toler'],['tolerance']
Availability,"ing the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), fci, cepa(1), cepa(3), acpf, aqcc, ccd, bccd, bccd(t), cc2, cc3, and some representative DFTs (svwn, pbe, b3lyp, wb97x, b2plyp) to standard suite testing to nail down their capabilities. Added some advice to the stdsuite so that others can perhaps edit it.; * all but cepa(1), cepa(3), acpf, aqcc, svwn, and wb97x are verified against external programs (for qcdb's and qcengine's good, not because I distrusted longstanding Psi4 implementations), usually cfour, nwchem, gamess; * ROHF DETCI doesn't match gamess/cfour for CISD or FCI, but doubtless that's implementation choice that I haven't identified. Anyway, that's why thos",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:9611,error,errors,9611,https://psicode.org,https://github.com/psi4/psi4/pull/2731,2,"['avail', 'error']","['available', 'errors']"
Availability,"initially asked in the [forum](http://forum.psicode.org/t/mo-basis-dipole-moments-and-amplitudes-at-positions/1856). my desired use-case is to calculate the amplitude at some list of points, actually (not over all space), so that would also be an reasonable API. the current ""state of the art"" is [here](https://gist.github.com/hokru/9b93fffc093dce0e8af8b9e54c120bb2), which clearly is a lot of work to get amplitudes, and prone to user error. perhaps a useful jumping-off point: [here is where the cubemap creates orbital iso-amplitude contours](https://github.com/psi4/psi4/blob/fbb2ff444490bf6b43cb6e027637d8fd857adcee/psi4/src/psi4/libcubeprop/csg.cc#L628-L653)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1941:437,error,error,437,https://psicode.org,https://github.com/psi4/psi4/issues/1941,1,['error'],['error']
Availability,"inking step. The last lines of the output of `make` are; ```/usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_0_cxx.cxx.o): relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC; /usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_1811_cxx.cxx.o): warning: relocation against `CR_aB_h010__0___CartesianMultipole_sB_0_c_0_c_0_Sb__p100__0___Ab__up_' in read-only section `.text'; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:408: src/core.cpython-39-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been written to: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/src/libint2_extern",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:1154,Error,Error,1154,https://psicode.org,https://github.com/psi4/psi4/issues/2572,1,['Error'],['Error']
Availability,install and import errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/768:19,error,errors,19,https://psicode.org,https://github.com/psi4/psi4/issues/768,1,['error'],['errors']
Availability,"ion': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated)) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/pythonrun.c:1125; #50 0x00007faabd6e0783 in run_mod (mod=<optimized out>, filename=<optimized out>, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawText",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:18387,error,error,18387,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"iout_1620666994506/work/tests/sapt-exch-disp-inf/input.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/testresults.log"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work"" ""false"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-pa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:1685,ERROR,ERROR,1685,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"ipment will be moved to a script named ""psi4"" in the binary location. This will allow all current Psi4 input files to be run normally. **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable, external projects such as ChemPS2 and EFP may not work. The build systems has also only seen compilation on half a dozen architectures and setups, you may encounter errors in the build process. A new branch named 1.0.x maintenance has been created that contains a stable and updated version of the 1.0 release. In effect, this means that the master branch will no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if yo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:2974,error,errors,2974,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['error'],['errors']
Availability,"ir/incdir` or the CMake flags `DBOOST_INCLUDEDIR/LIBRARYDIR` ; CMake will report boost version 1.59.0, but actually only set the `INCLUDE` paths correctly, and the `LIBRARY` paths all point to the binaries for 1.60.0 leading to errors in the linking step. ; 2. If I `brew unlink boost` then FindBoost.cmake seems to find boost 1.59.0 as I intended, but then the `Boost_FOUND` variable is ignored and the pre-packaged boost 1.55 is configured to build anyway. ; ## Details/Examples. If I run this setup command:. ```; ./setup --prefix=$HOME/psi4-install \; -DBOOST_INCLUDEDIR=$HOME/anaconda/envs/psi4-py2.7/include \ ; -DBOOST_LIBRARYDIR=$HOME/anaconda/envs/psi4-py2.7/lib \; objdir; ```. I see boost 1.59.0 is detected. ```; -- Boost version: 1.59.0; -- Found the following Boost libraries:; -- filesystem; -- python; -- regex; -- serialization; -- system; -- timer; -- chrono; -- thread; -- Looking for MKL_Free_Buffers; ```. However the build will fail in the linking step with the same `undefined reference` errors as others have seen when trying to link against boost 1.60.0 #243 , #312 . Looking in `CMakeCache.txt` I see that the `Boost_INCLUDE_DIR` has been set correctly but the `Boost_LIBRARY_DIR` and all `Boost_XX_LIBRARY_...` paths have been set to the global boost install in `/usr/local` . ```; //Path to a file.; Boost_INCLUDE_DIR:PATH=/Users/admin/anaconda/envs/psi4-py2.7/include. //Boost library directory; Boost_LIBRARY_DIR:PATH=/usr/local/lib. //Boost python library (debug); Boost_PYTHON_LIBRARY_DEBUG:FILEPATH=/usr/local/lib/libboost_python-mt.a; ```. If I unlink the home-brew boost in `/usr/local` and run the same setup the custom boost is configured to build. . adding the flags `-DBoost_DEBUG=ON -DBoost_DETAILED_FAILURE_MESSAGE=ON`. I can see all of the output related to FindBoost.cmake is identical. CMake is searching the correct path for the boost library files (`$HOME/anaconda/envs/psi4-py2.7/lib`). And does not add `/usr/local/anything` to the search paths. . Yet,",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/313:1545,error,errors,1545,https://psicode.org,https://github.com/psi4/psi4/issues/313,1,['error'],['errors']
Availability,"is is a draft of the DLPNO-CCSD PR that will be coming in the next few months. The purpose of this is for the developers and research groups to be able to run and test DLPNO-CCSD before it is officially part of the code. . Credit to @JoseMadriaga for the derivations ; [LocalCCSD1to10.pdf](https://github.com/psi4/psi4/files/11114337/LocalCCSD1to10.pdf). Useful References:; [Original DLPNO-CCSD Paper](https://aip.scitation.org/doi/full/10.1063/1.47735); [Sparse Maps II Paper](https://aip.scitation.org/doi/10.1063/1.4939030). Example Input File; ```; memory 20 GB. molecule mol {; 0 1; O 0.705 0.744 0.16; H -0.071 0.264 0.45; H 1.356 0.064 -0.014; symmetry c1; }. set {; basis cc-pVDZ; scf_type df; freeze_core true; pno_convergence normal; }; energy('dlpno-ccsd'); ```. ### Results (Waterclusters in TZ); [Speedups, relative to DF-CCSD]; ![wc_tz_speedups](https://user-images.githubusercontent.com/60559795/228892229-c3269bf9-3386-4861-8660-92a6dcc3685e.jpeg). [Percent Correlation Energy Recovered, relative to DF-CCSD, all >= 99.9%]; ![wc_tz_percent_corr_recovered](https://user-images.githubusercontent.com/60559795/228892322-7c968c62-f874-496c-84e3-06b65c84803d.jpeg). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Implement the DLPNO-CCSD algorithm. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feel free to use this code, it is not fully tested yet, but preliminary tests show encouraging results, and is MUCH faster than conventional CCSD; - [ ] If you benchmark my code, please post results in the thread. ## Questions; - [ ] Question1. ## Checklist; - [ ] Add documentation; - [ ] Add references to terms and equations; - [ ] Tests added for any new features; - [ ]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2915:1026,Recover,Recovered,1026,https://psicode.org,https://github.com/psi4/psi4/pull/2915,1,['Recover'],['Recovered']
Availability,issue installing from downloaded .exe,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236:22,down,downloaded,22,https://psicode.org,https://github.com/psi4/psi4/issues/2236,1,['down'],['downloaded']
Availability,"ists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3793,Error,Error,3793,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"itals guess (#1672); - Analytic Hessians for LSDA functionals (#1664); - Add qc2p basis set from CFOUR (#1718); - Update to g2g v2 API (#1718); - Density cumulant functional theory (DCFT) thoroughly rebranded to density cumulant theory (DCT). Adjust your calls and keywords accordingly or psi will reproach you (#1719).; - Drop Travis-CI (thank you for years of compiling) and consolidate on Azure for Linux and Windows builds so we can host more complex pipelines (#1752).; - Update orthogonalization routines and consolidate them back to libmints instead of SCF (#1759); - Let the `Deriv` class be instructable in the flavor it computes, rather than trying to devine SCF vs correlated (#1756); - Remove obsolete functions in Wavefunction (#1766) ; - Psi is safe for Python 38 (#1776) ; - Extensive improvements to OCC (#1783,#1785,#1789, #1809, #1829, #1846) ; - Keep one-electron integrals in core (#1770) ; - Use def2 basis sets from BSE (#1804) ; - Improve memory estimates in fdisp (#1810) ; - Improve basis set choice in basis guess (#1484) ; - Print initial orbital occupations (#1713) ; - Improve handling/units of dipole and quadrupole arrays (#1800) ; - Electric dipole derivatives available py-side (#1799) ; - Add ST0-6G to list of basis sets (#1853) ; - PSIMRCC callable from comput_energy (#1854) ; - Improved general error reporting (#1862,#1868) ; - Removes CEPA0 from DCT module (#1873) ; - Remove debugging and timing code from psimrcc (#1879, #1901) ; - Add cython (#1889) ; - Update tolerances for mkl 2020.1 (#1896) ; - LGTM (#1905, #2038) ; - MP2/MP3 test suite (#1850, #1971) ; - Standardize CEPA and LCCD (#1909) ; - LCCD test suite (#1913, #1937) ; - Extensive improvements to DFGrad (#1915, #1923, #1953, #1974, #2049, #2079) ; - Expose cube-generating functions to python (#1917) ; - Fix cppe interface (#1922) ; - Move import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:7636,avail,available,7636,https://psicode.org,https://github.com/psi4/psi4/issues/1562,3,"['avail', 'error', 'toler']","['available', 'error', 'tolerances']"
Availability,"its<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::psio_write_entry(unsigned long, char const*, char*, unsigned long); ```; This then results in a second PSIO error upon each subsequent optimization iteration, when attempting to read the binary optimization data from file:; ```; Fatal Error: PSIO Error; Error occurred in file: /theoryfs2/ds/sirianni/Gits/psi4/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::psio_error(unsigned long, unsigned long); psi::PSIO::open(unsigned long, int); psi::psio_open(unsigned long, int); opt::opt_io_is_present(); ```; This finally results in the optimizer spinning its wheels for the remainder of the allotted iterations. The usual PSIO error-culprit, an un-touchable filesystem, was ruled out for both machines on which this behavior was observed. Input:; ```; # index A24-7-dimer label Dimer from ammmonia_methane_C3v. memory 14000 mb. molecule mol {; units Angstrom; no_com; no_reorient; 0 1; N 0.001106462041 -0.000130846927 1.849133409958; H 0.938627974105 -0.000139345380 2.221618285244; H -0.467316580071 -0.811849948182 2.222477040520; H -0.467307391010 0.811579719379 2.222474714333; H -0.000457075852 -0.000011938197 -0.942103507206; C -0.001019750816 0.000109523659 -2.027776337389; H 0.509840850903 0.885353515687 -2.394362733084; H 0.509834400679 -0.885039296153 -2.394623104348; H -1.023308879978 0.000128616114 -2.393761958029. }. set e_convergence 11; set basis cc-pvtz; set scf guess sad; set scf dft_radial_points 150; set scf scf_type df; set scf dft_spherical_points 434; set scf maxiter 100; set guess_persist true; set geom_maxiter 300. set optking {; dynamic_level=1; full_hess_every 0; max_energy_g_convergence 1e-6; max_force_g_convergence 1.5e-5; rms_force_g_",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/789:1364,error,error-culprit,1364,https://psicode.org,https://github.com/psi4/psi4/issues/789,1,['error'],['error-culprit']
Availability,"l Python Exceptions raise to stdout and psi out"". If I revert to the commit just before this I'm able to compile. . If it helps, I'm running Ubuntu, with gnu compilers. . Here's the error message: . `/home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed; make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt; Makefile:127: recipe for target 'all' failed; make[3]: *** [all] Interrupt; CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt; ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536:1096,error,error,1096,https://psicode.org,https://github.com/psi4/psi4/issues/536,1,['error'],['error']
Availability,"l bring it to fruition within the Python-side SCF iteration scheme. The `PCM` object wraps the PCMSolver library and offers one method: `compute_PCM_terms` to calculate the polarization energy **and** the Fock matrix contributions due to the continuum. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Clean-up the `PCM` object and corresponding sources:; * Forward-declare as much stuff as possible instaed on `include`-ing; * Remove raw pointers in favor of `std::vector`, `Vector` or `std::shared_ptr`; * Use a [scoped `enum`](http://en.cppreference.com/w/cpp/language/enum) instead of an [unscoped `enum`](http://en.cppreference.com/w/cpp/language/enum); - [x] Moved `HF::print_energies()` Py-side; - [x] Mirror changes introduced in #896 ; - [x] Add tests for density-fitted SCFs (thanks @CDSherrill for pointing this out); * **User-Facing for Release Notes**; - [x] Exposing the `PCM` object to Python.; - [x] Restoring PCM functionality with Py-side iterations.; - [ ] Document behavior for gradients (see question). ## Questions; - @andysim and/or @lothian, the file [psi4/libmints/integral.h](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/integral.h#L487) has a comment `/// Want to change the name of this after the PCM dust settles`. Do you remember what was the intention there?; - The electrostatic potential and apparent surface charge vectors are now dimensioned using a `Dimension` object that keeps track of how many cavity points per irrep there are. This is one step to get PCM fully functional with point group symmetry. It seems to me the integrals are always calculated using C1. How can I get them to be calculated with symmetry?; - As (probably not very clearly) noted in the manual, **analytical gradients including PCM are NOT available**. Should there be a stop in the code when such a request is made or should the code be routed to use a numerical gradient?. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/878:1939,avail,available,1939,https://psicode.org,https://github.com/psi4/psi4/pull/878,1,['avail'],['available']
Availability,"l object now has Hessian-Vector functionality.; - [x] Added many C++ calls to the Python interface.; - [x] Reworked the building of superfunctionals. Note that the coefficients set when building a functional are no longer modified by exact exchange or MP2 correlation factors.; - [x] DFT Functionals now takes advantage of polarized vs unpolarized DFT kernels.; - [x] Added generalized solvers in `p4util/solvers.py`. These include DIIS, CG, BiCGSTAB, and Davidson.; - [x] New density-fitted AO->MO transform object. More efficient than previous objects and has multiple modes depending on the type of computation (direct or AO storage).; - [x] ECP SCF energies.; - [x] ECP gradients by finite differences in Python.; - [x] Test case(s) and documentation.; - [x] Make sure frozen core code doesn't add contributions from ECP bearing atoms.; - [x] Add / document more basis sets, and add ECP info to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - [x] Psi4's DFT now uses LibXC, several hundred new functionals are available.; - [x] DFT potential and gradient builds are now parallelized and vectorized, up to 30x faster on six cores.; - [x] Adds a new vectorized DF-JK builder, up to 4x as fast as previous version.; - [x] Adds culoumb-attenuated (CAM) functionals.; - [x] Adds the VV10 non-local correlation kernel.; - [x] Adds DSD functionals.; - [x] Extended second-order SCF convergence to DFT Wavefunctions.; - [x] Adds the gradient regularized asymptotic correction (GRAC) to DFT through the option `DFT_GRAC_SHIFT`.; - [x] Adds a density-fitted second-order Electron Propagator code. ; - [x] Adds the density-fitted SAPT(DFT) code.; - [x] Adds linear response DFT.; - [ ] Adds TDDFT methodologies.; - [x] To avoid conflict the function `property` was renamed to `properties`.; - [x] More involved JSON input/output interface.; - [x] Effective Core Potentials available for SCF energies and gradients, as well as post-SCF energies.; - [x] Def2 family of basis ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698:1641,avail,available,1641,https://psicode.org,https://github.com/psi4/psi4/pull/698,1,['avail'],['available']
Availability,"l/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_local_option_array(const string&, const string&, const pybind11::list&, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:786:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc: In function ‘bool py_psi_set_global_option_array(const string&, pybind11::list, psi::DataType*)’:; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:13: error: ‘isinstance’ is not a member of ‘py’; if (py::isinstance<py::list>(values[n])) {; ^; /home/nmayhall/qcSoftware/psi4/psi4.inv.git/psi4/src/core.cc:834:36: error: expected primary-expression before ‘>’ token; if (py::isinstance<py::list>(values[n])) {; ^; src/CMakeFiles/core.dir/build.make:374: recipe for target 'src/CMakeFiles/core.dir/core.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: *** Waiting for unfinished jobs....; ^Csrc/CMakeFiles/core.dir/build.make:86: recipe for target 'src/CMakeFiles/core.dir/export_mints.cc.o' failed; make[5]: *** [src/CMakeFiles/core.dir/export_mints.cc.o] Interrupt; CMakeFiles/Makefile2:208: recipe for target 'src/CMakeFiles/core.dir/all' failed; make[4]: *** [src/CMakeFiles/core.dir/all] Interrupt; Makefile:127: recipe for target 'all' failed; make[3]: *** [all] Interrupt; CMakeFiles/psi4_core.dir/build.make:111: recipe for target 'psi4_core-prefix/src/psi4_core-stamp/psi4_core-build' failed; make[2]: *** [psi4_core-prefix/src/psi4_core-stamp/psi4_core-build] Interrupt; CMakeFiles/Makefile2:355: recipe for target 'CMakeFiles/psi4_core.dir/all' failed; make[1]: *** [CMakeFiles/psi4_core.dir/all] Interrupt; Makefile:138: recipe for target 'all' failed; make: *** [all] Interrupt; `",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/536:1508,Error,Error,1508,https://psicode.org,https://github.com/psi4/psi4/issues/536,1,['Error'],['Error']
Availability,"l: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 238643; Total Blocks = 1822; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1, 3-8 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 2, 9-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.163 GiB; user supplied 0.163 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 167; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 3.8471; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached 25.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:21582,Toler,Tolerance,21582,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['Toler'],['Tolerance']
Availability,"l: VDZP; Number of shells: 28; Number of ECP primitives: 28; Number of ECP core electrons: 14; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 6.2.2; S. Lehtola, C. Steigemann, M. J.T. Oliveira, and M. A.L. Marques., SoftwareX 7, 1–5 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97X3C <= . wB97X basied 3C composite method with a small basis set, gCP and D4 (10.1063/5.0133026); M. Muller, A. Hansen, S. Grimme, J. Chem. Phys. 158, 014103 (2023). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97X-V range-separated functional. => Exact (HF) Exchange <=. 0.8330 HF,LR [omega = 0.3000]; 0.1670 HF . => LibXC Density Thresholds <==. XC_HYB_GGA_XC_WB97X_V: 1.00E-14 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 239042; Total Blocks = 1831; Max Points = 256; Max Functions = 111; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (VDZP AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 9 entry C line 198 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-8, 10-11 entry H line 18 file /Users/cwagen/.../.pixi/envs/dev/share/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. DFHelper Memory: AOs need 0.162 GiB; user supplied 0.162 GiB. ; Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 1; Memory [MiB]: 166; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 4.4477; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (VDZP AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 199; Number of basis functions: 597; Number of Cartesian functions: 703; Spherical Harmonics?: true; Max angular momentum: 4. Cached ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:9184,Toler,Tolerance,9184,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['Toler'],['Tolerance']
Availability,"ld/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find this function, I took a lucky guess that Psi4 had some kind of cleanup function since independent calculations succeeded. Instead, this should probably be in: https://psicode.org/psi4manual/master/psiapi.html. I am fully willi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:1946,error,error,1946,https://psicode.org,https://github.com/psi4/psi4/issues/3164,1,['error'],['error']
Availability,"le ""/scratch/glick/psi4/objdir/stage/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 31, in <module>. RuntimeError: ; Fatal Error: Broken Symmetry; Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc on line: 284; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::symmetrize(double, bool); psi::Molecule::symmetrize_to_abelian_group(double). Printing out the relevant lines from the Psithon --> Python processed input file:; ; ; """""",""mol""); core.IO.set_default_namespace(""mol""); print(mol.schoenflies_symbol()); --> mol.symmetrize(0.14); print(mol.schoenflies_symbol()). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Broken Symmetry !; ! Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc !; ! on line: 284 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Molecule::symmetrize(double, bool) !; ! psi::Molecule::symmetrize_to_abelian_group(double) !; ! !; !----------------------------------------------------------------------------------!; ```. Curiously, if I use a slightly different starting geometry (obtained by symmetrizing the above geometry with Avogadro2, loose setting), the `symmetrize` function behaves as expected: any tolerance above some small value (2e-6) results in the correct point group, and the above error is never triggered. input: ; ```; molecule mol {; 0 1 ; O 2.135493 0.369610 1.674880; C 2.154973 0.136801 2.845879; H 2.843921 -0.510511 3.261214; H 1.483799 0.571691 3.498996; }. tol = 2e-6; print(mol.schoenflies_symbol()); mol.symmetrize(tol); print(mol.schoenflies_symbol()); ```; stdout:; ```; c1; c2v; ```. Has anyone seen this error before?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2579:2266,toler,tolerance,2266,https://psicode.org,https://github.com/psi4/psi4/issues/2579,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"le plugin; cd /home/ward/tmp/psi4release/build/plugins/aointegrals && ../../bin/psi4 --new-plugin-makefile; Build skeleton example plugin; cd /home/ward/tmp/psi4release/build/plugins && /usr/bin/cmake -E remove_directory /home/ward/tmp/psi4release/build/plugins/skeleton; cd /home/ward/tmp/psi4release/build/plugins && ../bin/psi4 --new-plugin skeleton; Creating new plugin Makefile in the current directory.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; Created new plugin directory, skeleton, using 'plugin' template.; Unable to read the PSI4 plugin folder - check the PSIDATADIR environmental variable; Current value of PSIDATADIR is /home/ward/opt/share/psi; plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/build.make:49: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals' failed; make[2]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals] Error 1; plugins/CMakeFiles/plugin_skeleton.dir/build.make:49: recipe for target 'plugins/CMakeFiles/plugin_skeleton' failed; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; make[2]: *** [plugins/CMakeFiles/plugin_skeleton] Error 1; make[2]: Leaving directory '/home/ward/tmp/psi4release/build'; CMakeFiles/Makefile2:9569: recipe for target 'plugins/CMakeFiles/plugin_skeleton.dir/all' failed; make[1]: *** [plugins/CMakeFiles/plugin_skeleton.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; CMakeFiles/Makefile2:9619: recipe for target 'plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all' failed; make[1]: *** [plugins/aointegrals/CMakeFiles/plugin_aointegrals.dir/all] Error 2; make[1]: Leaving directory '/home/ward/tmp/psi4release/build'; Makefile:127: recipe for target 'all' failed; make: *** [all] Error 2; ```. It tries to use the `PSIDATADIR` of the install directory before psi4 is actually installed. CMake needs to set the `PSIDATADIR` to the build directory prior to installing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/90:1452,Error,Error,1452,https://psicode.org,https://github.com/psi4/psi4/issues/90,4,['Error'],['Error']
Availability,"led); 	263 - omp2-3 (Failed); 	274 - omp3-3 (Failed); ```. The error message for `pywrap-checkrun-rhf` is also consistent with convergence issues:; ```; 45 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 3.01e-15; 46 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 1.73e-15; 47 -75.0144633211 -1.42e-14 1.85e-05 1.42e-04 9.95e-16; 48 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 5.65e-16; 49 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 3.27e-16; 50 -75.0144633211 0.00e+00 1.85e-05 1.42e-04 1.88e-16; ======================== OCEPA IS NOT CONVERGED IN 50 ITERATIONS ============; Traceback (most recent call last):; File ""/Users/fevange/Source/psi4/objdir-Debug/stage/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 54, in <module>; File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/driver.py"", line 711, in gradient; wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/procrouting/proc.py"", line 752, in select_olccd_gradient; return func(name, **kwargs); File ""/Users/fevange/Source/psi4/objdir-Debug/stage/lib/psi4/driver/procrouting/proc.py"", line 2147, in run_occ_gradient; occ_wfn = core.occ(ref_wfn); RuntimeError:; Fatal Error: OCC iterations did not converge; Error occurred in file: /Users/fevange/Source/psi4/psi4/src/psi4/occ/occ_iterations.cc on line: 363; The most recent 5 function calls were:; Printing out the relevant lines from the Psithon --> Python processed input file:; for method in Earray:; water.reset_point_group(sym); water.fix_orientation(True); water.update_geometry(); banner('Testing %s' % (method)); --> G, wfn = gradient(method, return_wfn=True); ans = wfn.energy(); print('%16s\t%s\t%s\t%s' % (method, water.schoenflies_symbol(), variable('CURRENT ENERGY') - ans, ans)); clean(); print(' Checking gradient methods (excited state) ...'); Earray = [; Psi4 stopped on: Friday, 31 January 2020 05:10PM; Psi4 wall time for execution: 0:00:06.47; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1793:1741,Error,Error,1741,https://psicode.org,https://github.com/psi4/psi4/issues/1793,2,['Error'],['Error']
Availability,"length in Eh. Options added to properties(‘ccsd’, properties=[‘polarizability’, ‘rotation’]): ; - local_method: `PNO`, `PNO++` and `CPNO++`; - local_pert: `DIPOLE`; - unpert_cutoff: double between 0 and 1. Pytest added to check the functionality at:; - Tcut=0 against the conventional CC code; - Tcut=1e-5 against hardcoded values. Some additional tweaks to existing code that were needed for me to run the simulation code:. - Under cclambda/ , L1_build and dijabL2 functions were outside of the CCLambdaWavefunction class, while L2 build functions were not. So I moved `L1_build`, `cc2_L1_build` and `dijabL2` into the class to make it more consistent and also to help run the simulation code. - cctransort/local.cc has an extra function to localize the occupied orbitals before the transformation of the one- and two-electron integrals. - Overloaded the schmidt_add_row function in libmints/matrix.cc in order to specify the cutoff value for vector norms to be discarded. - The ccenergy function that is called when Psi4 fails attempts to switch off the ‘ccenergy’ timer twice. The error was mentioned in issue #1864. And I see a new pull request that removes the line (#2150). I just commented out the line that was redundantly switching off the timer and that causes Psi4 to exit correctly when iterations fail to converge. - The psio_tocprint function under libpsio/psio.h didn’t match its definition in libpsio/tocprint.cc so I commented out the extra argument. ## Todos; - [x] Add simulation code to CCLR; - [x] Add tests; - [x] Remove the `WERNER` option completely, since it’s not implemented. ## Questions; - [ ] Old (non-working) code in ccenergy/ has been shifted to local_old.cc and Local_old.h, is it okay if I get rid of this code? There are also identical local.cc files under cclambda/ and ccresponse/ that are not needed. ## Checklist; - [x] Tests added for any new features; - [x] All or relevant fraction of full tests run. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2151:1689,error,error,1689,https://psicode.org,https://github.com/psi4/psi4/pull/2151,2,"['error', 'redundant']","['error', 'redundantly']"
Availability,"les and doubles coupled cluster iterations. Iter DIIS Energy d(Energy) |d(T)| time; 0 0 2 0.0000000000 0.0000000000 0.0000000000 393. CCSD iterations converged!. T1 diagnostic: 0.000000000000; D1 diagnostic: 0.000000000000. OS MP2 FNO correction: -3.045395864164; SS MP2 FNO correction: -1.111907331006; MP2 FNO correction: -4.157303195170. OS MP2 correlation energy: -3.045395864164; SS MP2 correlation energy: -1.111907331006; MP2 correlation energy: -4.157303195170; * MP2 total energy: -1500.355601695273. OS CCSD correlation energy: -3.045395864164; SS CCSD correlation energy: -1.111907331006; CCSD correlation energy: -4.157303195170; * CCSD total energy: -1500.355601695273. Total time for CCSD iterations: 3404.15 s (user); 270.93 s (system); 607 s (total). Time per iteration: inf s (user); inf s (system); inf s (total). *** tstop() called on r3546 at Mon Feb 10 14:43:17 2014; Module time:; user time = 31046.70 seconds = 517.45 minutes; system time = 945.63 seconds = 15.76 minutes; total time = 5144 seconds = 85.73 minutes; Total time:; user time = 33202.74 seconds = 553.38 minutes; system time = 990.31 seconds = 16.51 minutes; total time = 5317 seconds = 88.62 minutes. *** tstart() called on r3546; *** at Mon Feb 10 14:57:28 2014. *******************************************************; * *; * CCSD(T) *; * *; *******************************************************. num_threads = 16; available memory = 83711.64 mb; memory requirements = 36451.32 mb. ```. PSIO error (from stderr). ```; PSIO_ERROR: unit = 260, errval = 18; PSIO_ERROR: 18 (Incorrect block end address); Traceback (most recent call last):; File ""<string>"", line 77, in <module>; File ""/apps/psicode/4.0b5.1/share/psi/python/driver.py"", line 570, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/apps/psicode/4.0b5.1/share/psi/python/proc.py"", line 2289, in run_fnodfcc; psi4.fnocc(); RuntimeError: PSIO Error; file: /short/z00/cyl900/psi4/psi4public/src/lib/libpsio/error.cc; line: 1p; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34:3101,avail,available,3101,https://psicode.org,https://github.com/psi4/psi4/issues/34,4,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,"lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3; -- Fortran compiler flags: -fcray-pointer -DVAR_GFORTRAN -DVAR_MFDS -fno-range-check -fautomatic -fPIC -fimplicit-none -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -funroll-all-loops -w -ftree-vectorize; -- Libraries : /cluster/apps/openblas/0.2.13_seq/x86_64/gcc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7678,Error,Error,7678,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"libboost_regex.so -DBoost_SERIALIZATION_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_serialization.so -DBoost_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7112,Error,Error,7112,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,libmints/matrix class error?,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/274:22,error,error,22,https://psicode.org,https://github.com/psi4/psi4/issues/274,1,['error'],['error']
Availability,"lid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/p4util/text.py ...; File ""/usr/lib64/psi4/driver/p4util/text.py"", line 197; print(stuff, file=sys.stdout); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/interface_cfour.py ...; File ""/usr/lib64/psi4/driver/procrouting/interface_cfour.py"", line 356; print('Unable to remove CFOUR temporary directory %s' % e, file=sys.stderr); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/procrouting/proc.py ...; File ""/usr/lib64/psi4/driver/procrouting/proc.py"", line 3767; print('Unable to remove MRCC temporary directory %s' % e, file=sys.stderr); ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/interface_gcp.py ...; File ""/usr/lib64/psi4/driver/qcdb/interface_gcp.py"", line 285; raise OSError('Unable to remove gcp temporary directory: {}'.format(gcp_tmpdir)) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/intf_dftd3/runner.py ...; File ""/usr/lib64/psi4/driver/qcdb/intf_dftd3/runner.py"", line 135; raise RuntimeError(err) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/driver/qcdb/intf_dftd3/worker.py ...; File ""/usr/lib64/psi4/driver/qcdb/intf_dftd3/worker.py"", line 45; raise KeyError('Required field ({}) missing from ({})'.format(str(err), list(dftd3rec.keys()))) from err; ^; SyntaxError: invalid syntax. Compiling /build/BUILDROOT/psi4-1.3-1.fc29.x86_64/usr/lib64/psi4/tests/test_matrix.py ...; File ""/usr/lib64/psi4/tests/test_matrix.py"", line 203; doublet_args.append((group_size, *aargs, *bargs, t, t, 'rectangular')); ^; SyntaxError: invalid syntax. error: Bad exit status from /var/tmp/rpm-tmp.WhlbsT (%install). RPM build errors:; Bad exit status from /var/tmp/rpm-tmp.WhlbsT (%install); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1565:3198,error,error,3198,https://psicode.org,https://github.com/psi4/psi4/issues/1565,2,['error'],"['error', 'errors']"
Availability,"lies_symbol()); ```; stdout (0.13 tolerance):; ```; c1; c1; ```; stdout (0.14 tolerance):; ```; c1; Traceback (most recent call last):; File ""/scratch/glick/psi4/objdir/stage/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 31, in <module>. RuntimeError: ; Fatal Error: Broken Symmetry; Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc on line: 284; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::symmetrize(double, bool); psi::Molecule::symmetrize_to_abelian_group(double). Printing out the relevant lines from the Psithon --> Python processed input file:; ; ; """""",""mol""); core.IO.set_default_namespace(""mol""); print(mol.schoenflies_symbol()); --> mol.symmetrize(0.14); print(mol.schoenflies_symbol()). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Broken Symmetry !; ! Error occurred in file: /scratch/glick/psi4/psi4/src/psi4/libmints/petitelist.cc !; ! on line: 284 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Molecule::symmetrize(double, bool) !; ! psi::Molecule::symmetrize_to_abelian_group(double) !; ! !; !----------------------------------------------------------------------------------!; ```. Curiously, if I use a slightly different starting geometry (obtained by symmetrizing the above geometry with Avogadro2, loose setting), the `symmetrize` function behaves as expected: any tolerance above some small value (2e-6) results in the correct point group, and the above error is never triggered. input: ; ```; molecule mol {; 0 1 ; O 2.135493 0.369610 1.674880; C 2.154973 0.136801 2.845879; H 2.843921 -0.510511 3.261214; H 1.483799 0.571691 3.498996; }. tol = 2e-6; print(mol.schoen",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2579:1567,Error,Error,1567,https://psicode.org,https://github.com/psi4/psi4/issues/2579,2,['Error'],['Error']
Availability,link: http://forum.psicode.org/t/compute-property-at-given-3d-coordinates/1781. The basic functionality is already available in the ESP code: https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/oeprop.cc#L1015,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1888:115,avail,available,115,https://psicode.org,https://github.com/psi4/psi4/issues/1888,1,['avail'],['available']
Availability,linking error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/785:8,error,error,8,https://psicode.org,https://github.com/psi4/psi4/issues/785,1,['error'],['error']
Availability,"lob/master/psi4/src/psi4/libfock/cubature.cc#L5125. But from what I can tell, it never gets called. In the attached minimal example I set a breakpoint at `void SphericalGrid::initialize_lebedev()` and it's _never hit_. I also set a breakpoint at `s->order_ = lebedev_mapping_[npoints];` (the line where things hang on an Unlucky Run), and that line is definitely hit (so my breakpoints are firing correctly). I'm not sure what the consequences of this all are, as I seem to be getting sensible energies (though I suppose I haven't compared to a known good literature benchmark calculated without psi4). I don't think I'm the first person to run into concerns in this part of the code, though, given this comment:; https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libfock/cubature.cc#L3812. Here's a minimal file to just check that `initialize_lebedev` is never called:; ```; set freeze_core 1; set {; basis STO-3G; guess sad; fail_on_maxiter false; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; dft_vv10_postscf False; wcombine False; }; molecule mol {; 0 1; C 0.9314972462818318 9.553873448534286 1.4618215727211896; C 0.407816021141855 8.469506309378442 2.18786320317928; C 0.8158282265296265 7.159078273321417 1.778073368593668; C 1.6705486753474763 6.941146237307343 0.7209312466052733; C 2.2362488662446047 8.008509869086277 0.003971742160492786; C 1.911850027633602 9.341079539288122 0.4146901215657727; H 0.614495362639488 10.566900793575911 1.4754165926364617; H -0.36704844148631577 8.614110059906363 3.04421928826377; H 0.4567894628980789 6.157197048912012 2.369426098541459; H 1.8364925212621395 5.872552432013023 0.3910028702339573; H 2.9471948988553818 7.873466587177986 -0.782748863606265; H 2.4659886000145983 10.188822366489614 -0.03294075189628659; units angstrom; no_reorient; no_com; symmetry c1; }; energy('pbe'); ```. And below is the fu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2735:3555,robust,robust,3555,https://psicode.org,https://github.com/psi4/psi4/issues/2735,1,['robust'],['robust']
Availability,"long run (for us and presumably other users) if we can get conda packaging for the Psi4 stack moved over to `conda-forge` - something we'd be happy to take a role in. * **Would this be useful for Psi4 developers and/or users?** I have personally had good experiences with migrations, both as a developer/maintainer and user. Getting everything on one channel (and using `conda-forge`'s existing automation) should help with dependency resolution/compatibility and in principle should also make build processes smoother. It would unblock some production issues with our software and be generally valuable for us - but we absolutely don't want to make life harder on for Psi4 developers/maintainers.; * **What technical blockers exist?** In the past we have gotten over some large hurdles (migrating OpenMM included contributing a recipe for CUDA toolkits) and more tedious blockers (migrating the OpenFF stack involved contributing something like 10-20 separate packages, piece by piece). `conda-forge` has [some tooling](https://conda-forge.org/docs/maintainer/knowledge_base.html#using-cmake) built around CMake, including MKL and some number of compilers. (Sorry - I'm not really an expert in packaging compiled code so I can't say much more about this - others may chime in!). But I don't know if there are insurmountable blockers to this process, or if that's been explored recently.; * **What can we do to help?** We have a significant amount of person-time available to contribute from people with experience contributing and maintaining packages on `conda-forge`. If needed, we are likely able to pull in further resources to get support from people with vastly more conda-related expertise than myself, including `conda-forge` core team members. . I presume this has been discussed in the past, but I could not find a stub issue nor [earlier attempts](https://github.com/conda-forge/staged-recipes/pulls?q=is%3Apr+is%3Aclosed+psi4) at doing this. cc: @SimonBoothroyd @dotsdl @j-wags @jthorton",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300:2195,avail,available,2195,https://psicode.org,https://github.com/psi4/psi4/issues/2300,1,['avail'],['available']
Availability,"losure=0x0) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:4327; #48 0x00007faabd6bfe3b in PyEval_EvalCode (co=<optimized out>, globals=<optimized out>, locals=<optimized out>) at /usr/src/debug/python3-3.8.5-5.fc32.x86_64/Python/ceval.c:718; #49 0x00007faabd6e1068 in run_eval_code_obj (co=0x7faa87377d40, ; globals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawTextHelpFormatter': <type at remote 0x5589d81469f0>, 'Path': <type at remote 0x5589d81226d0>, 'parser': <ArgumentParser(description='Psi4: Open-Source Quantum Chemistry', argument_default=None, prefix_chars='-', conflict_handler='error', _registries={'action': {None: <type at remote 0x5589d8149500>, 'store': <type at remote 0x5589d8149500>, 'store_const': <type at remote 0x5589d81498b0>, 'store_true': <t...(truncated), ; locals={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/home/work/psi4/install.susi/bin/psi4') at remote 0x7faab03387f0>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faab0360090>, '__file__': '/home/work/psi4/install.susi/bin/psi4', '__cached__': None, 'atexit': <module at remote 0x7faab020ba40>, 'sys': <module at remote 0x7faab0355e00>, 'os': <module at remote 0x7faab030b9a0>, 'json': <module at remote 0x7faab0305a40>, 'datetime': <type at remote 0x7faab01b4740>, 'argparse': <module at remote 0x7faab0111360>, 'RawText",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2010:16135,error,error,16135,https://psicode.org,https://github.com/psi4/psi4/issues/2010,1,['error'],['error']
Availability,"low is the full file that is an example of one I ran into the hang with (note that if I run it again, it usually runs just fine... I have only noticed this horrible hang behavior because I am running a _very large_ number of calcs on a daily basis, and eventually get unlucky!). Note that when things hang, they hang on the very first step of the first SCF run and _only_ there. I think that is because if you aren't unlucky and `lebedev_mapping_` gets successfully populated, there's no more hangs that can happen. (Sorry the below is LONG, I wanted to reproduce exactly all settings that went into a run, in case they are important. It is hard to figure out the ""minimal example"" as the crashes are rare _enough_ to make it very hard to reproduce them ""in captivity""). ```; np.set_printoptions(threshold=sys.maxsize); set DF_INTS_NUM_THREADS = 16; set freeze_core 1; set {; basis def2-tzvppd; guess sad; fail_on_maxiter false; dft_nuclear_scheme SBECKE; dft_radial_scheme EM; dft_radial_points 99; dft_spherical_points 590; dft_vv10_radial_points 50; dft_vv10_spherical_points 194; dft_pruning_scheme robust; dft_vv10_postscf False; }; set {; wcombine False; }; molecule mol {; 0 1; @C 0.265781511352271 0.841876264095443 -0.6914658815200431; @C 1.4413385866197737 0.3288357318169406 -1.1836757404873801; @C 2.2289711018973604 -0.6237867174726249 -0.5257029978620363; @C 1.8767103570771173 -0.9962343566137659 0.6986750981164255; @C 0.6545489119459532 -0.6147226134119103 1.2098027282027453; @C -0.21957387152459434 0.2564142719883635 0.5001192004375371; @H -0.3723596175396408 1.4255337233361631 -1.1634648379610923; @H 1.9177612974037643 0.7339585876082476 -2.2134537293183647; @H 3.30111923095952 -0.8660596018835396 -0.9695609764149236; @H 2.5278636235464713 -1.4596675993689474 1.3422341203604324; @H 0.5072122755030857 -0.940559021032073 2.215163414817783; @H -0.998224655511569 0.6769295855057103 1.0319031933299063; @C 1.317102898709397 -4.2559640682725135 -5.346326015162741; @C 2.61289132",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2735:5516,robust,robust,5516,https://psicode.org,https://github.com/psi4/psi4/issues/2735,1,['robust'],['robust']
Availability,"low. In general tests where MKL found. Has compare_values, but really better suited for running by hand and judging results, as `-jN` defeats the purpose.; - [x] Added some CCSD(T) table docs requested by @CDSherrill ; * **User-Facing for Release Notes**; - [x] Change Mac math precedence to `MKL SYSTEM_NATIVE OPENBLAS ESSL ATLAS ACML` so native accelerate only behind MKL; - [x] New mechanism to pass in math libs explicitly through `LAPACK_LIBRARIES` and `LAPACK_INCLUDE_DIRS`; - [x] Collects all the addon libraries into a list, then forms RPATH of internal (relative to ORIGIN), then all non-static, non `/usr/` paths. Redundancy removed and math libs paths _always_ first. This takes over from `INSTALL_RPATH_USE_LINK_PATH`.; - [x] Bumped CMake minimum version to 3.2; - [x] Added some extra badges to README. ## Questions; - [x] I had already implemented the isMKL? detection in ConfigMath before I looked back and found [mkl testing] (https://github.com/psi4/psi4private/blob/71ea2ea8ee142ee42541c589c42977fff2d3c381/CMakeLists.txt#L173-L174). Do we want to do that way instead? Who added the ""NEEDS"" there? _From discussion below, No, bad idea._; - [x] @robertodr and/or @bast, I've commented out all the EXPLICIT_LIB and EXTERNAL_LIB stuff from ConfigMath because the new CMake scheme isn't doing anything with those libs, and the TargetLAPACK uses only `BLAS/LAPACK_LIBRARIES`. But we do need a way to take in a raw library string. By inclination, I would just have that if user specifies `BLAS/LAPACK_LIBRARIES`, then those get processed immediately into the TargetLAPACK. But I thought I'd see if you had other/opposing opinions. _From discussion below, they approve._; - [x] Currently require CMake 3.1. Can we require 3.2 (for `continue()`) or 3.3 (for HDF5 versioning)? 3.3 and 3.6 available on conda.; - [x] RPATH work focused on Linux. Mac I don't think is a problem, plus it's so easy to adjust after link. I'm hoping to continue ignoring rpath on Mac. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/615:3790,avail,available,3790,https://psicode.org,https://github.com/psi4/psi4/pull/615,1,['avail'],['available']
Availability,"lpers.py"", line 99, in pybuild_basis; psibasis = core.BasisSet.construct_from_pydict(mol, basisdict, puream). RuntimeError: ; Fatal Error: CoordEntry::basisset: Basisset not set for O and type of DF_BASIS_CC; Error occurred in file: /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 134; ```; My own investigations have partially uncovered the cause of this. During basis set construction, [basis set labels are set on all atoms](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L101). This occurs by [iterating over all atoms in full_atoms_](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2879) and [setting basis set labels for them.](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2880) However, there is a very subtle problem. The basis set is constructed from this labels [here](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L173). The [constructor](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L567) sets the basis by [calling atom_entry](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L651). The problem is that atom_entry is [tied not to full_atoms_ but to atoms_](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2912). Setting the basis set labels for full_atoms_ atoms never set them for the atoms_ atoms, hence the error. I've confirmed directly this code sets the basis set label for the first atom of atoms_ in the non-bugged case of a gradient computation, but not in the case of a bugged frequency computation. In both cases, the first atom of full_atoms_ has its basis set labels properly submitted. My hunch is that these two arrays are supposed to be synced up, modulo ghosts and dummies, so there was probably a problem with pointers somewhere that caused the objects in the two arrays to not be the same. Core devs, am I understanding atoms_ and full_atoms_ correctly?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1093:3411,error,error,3411,https://psicode.org,https://github.com/psi4/psi4/issues/1093,1,['error'],['error']
Availability,"lready has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for bac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5184,down,download,5184,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"ls, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here sinc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5037,down,download,5037,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"lue of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2756,failure,failure,2756,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"luser/conda-builds/psi4-multiout_1557940846948/work/psi4/src/psi4/libpsio/error.cc on line: 128; The most recent 5 function calls were:. psi::PSIO::rw(unsigned long, char*, psi::psio_address, unsigned long, int); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); ```. and here is the script:. ```; import os; import numpy as np; psi4.set_memory(int(2e9)). # Conical intersection in Formaldimine; pes_origin = [1.498047, 1.066797, 0.987109, 118.359375]; psi4.core.set_output_file(""formaldimine.txt"", False); # sto-3g : 13 orbitals, cc-pVDZ: 43, cc-pVTZ: 102. Nelec: 16. def get_energies_formaldimine(alpha,phi):; #name = ""formaldimine_alpha"" + str(alpha) + "".txt""; #psi4.core.set_output_file(name, False); psi4.core.clean(); variables = pes_origin[:] + [alpha, phi]; psi4.geometry(; """"""0 1; N; C 1 {0}; H 2 {1} 1 {3}; H 2 {1} 1 {3} 3 180; H 1 {2} 2 {4} 3 {5}; symmetry c1"""""".format(*variables)); psi4.set_options({'basis': 'cc-pVDZ',; 'reference': 'rhf',; 'scf_type': 'pk', # set e_convergence and d_convergence to 1e-8 instead of 1e-6; 'num_roots': 2,; #'frozen_docc':[2],; 'active':[16]}); E0_casci = psi4.energy('fci'); E1_casci = psi4.variable('CI ROOT 1 TOTAL ENERGY'); return E0_casci, E1_casci. output = open(""formaldimine_CASCI-16e-16o.dat"", ""w""). phi = 90; start_angle = 90; end_angle = 160; number_of_steps = abs(end_angle - start_angle) + 1; print(""{:10s} {:10s} {:10s}"".format(""alpha"",""E0"",""E1""), file = output); for alpha in np.linspace(start_angle,end_angle,number_of_steps):; en0_casci,en1_casci = get_energies_formaldimine(alpha,phi); print(""{:10.6f} {:10.6f} {:10.6f}"".format(alpha,en0_casci,en1_casci)); print(""{:10.6f} {:10.6f} {:10.6f}"".format(alpha,en0_casci,en1_casci), file = output); ```. does anyone understand the error ? Again, replacing active = 16 by active = 14 works just fine, so I first assumed that it was a memory issue but the error does not mention anything about memory. Note that I ask for 16gb memory on the cluster for this calculation.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1959:2741,error,error,2741,https://psicode.org,https://github.com/psi4/psi4/issues/1959,2,['error'],['error']
Availability,"m, diag, CS,spatial, HF,ndoub, nacto, nactv, tol,maxex, sacc, freq,dboc, mem; 2 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0; ===== End fort.56 input for MRCC ======; **********************************************************************; MRCC program system; **********************************************************************. Written by; Mihaly Kallay, Peter R. Nagy, David Mester, Zoltan Rolik, Gyula Samu,; Jozsef Csontos, Jozsef Csoka, P. Bernat Szabo, Laszlo Gyevi-Nagy,; Bence Hegely, Istvan Ladjanszki, Lorant Szegedy, Bence Ladoczki,; Klara Petrov, Mate Farkas, Pal D. Mezei, and Adam Ganyecz. Department of Physical Chemistry and Materials Science; Budapest University of Technology and Economics; Budapest P.O.Box 91, H-1521 Hungary. www.mrcc.hu. Release date: February 22, 2020. ************************ 2020-04-12 06:03:22 *************************; Executing minp... Reading input from MINP... Input file:. Checking keyword combinations... Basis set is not specified!. Fatal error in exec minp.; Program will stop. ************************ 2020-04-12 06:03:22 *************************; Error at the termination of mrcc.; **********************************************************************; ```. As it so happens, I was running `mrccsdt` not too long ago on the CCQC cluster. What I see looks like ; ```; Generating fort.55 integral file...done.; Generating fort.56 input file...done. *** tstop() called on n081 at Sun Mar 8 14:10:25 2020; Module time: ; user time = 1.90 seconds = 0.03 minutes; system time = 0.87 seconds = 0.01 minutes; total time = 2 seconds = 0.03 minutes; Total time: ; user time = 164.68 seconds = 2.74 minutes; system time = 15.26 seconds = 0.25 minutes; total time = 2719 seconds = 45.32 minutes. ===== Begin fort.56 input for MRCC ======; 3 1 0 0 1 0 0 1 0 1 1 1 0 0 0 6 0 0 0.00 0 60000 ; ex.lev,nsing,ntrip, rest,CC/CI, dens,conver, symm, diag, CS,spatial, HF,ndoub, nacto, nactv, tol,maxex, sacc, freq,dboc, mem; 2 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1866:1857,error,error,1857,https://psicode.org,https://github.com/psi4/psi4/issues/1866,1,['error'],['error']
Availability,make error: /usr/bin/ld: cannot find -lMathOpenMP_LIBRARIES-NOTFOUND,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998:5,error,error,5,https://psicode.org,https://github.com/psi4/psi4/issues/2998,1,['error'],['error']
Availability,mbis failure for iodine containing molecules with DZVP basis,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2728:5,failure,failure,5,https://psicode.org,https://github.com/psi4/psi4/issues/2728,1,['failure'],['failure']
Availability,"me = name.lower(); kwargs = p4util.kwargs_lower(kwargs). optstash = p4util.OptionsState(; ['SCF', 'DF_INTS_IO']). core.set_local_option('SCF', 'DF_INTS_IO', 'SAVE'). # Your plugin's psi4 run sequence goes here; ref_wfn = kwargs.get('ref_wfn', None); if ref_wfn is None:; ref_wfn = psi4.driver.scf_helper(name, **kwargs). # if restarting from a checkpoint file, this file; # needs to be in scratch with the correct name; filename = core.get_option(""V2RDM_CASSCF"",""RESTART_FROM_CHECKPOINT_FILE""). # todo PSIF_V2RDM_CHECKPOINT should be definied in psifiles.h; if ( filename != """" ):; molname = ref_wfn.molecule().name(); p4util.copy_file_to_scratch(filename,'psi',molname,269,False). # Ensure IWL files have been written when not using DF/CD; scf_type = core.get_option('SCF', 'SCF_TYPE'); if ( scf_type == 'PK' or scf_type == 'DIRECT' ):; proc_util.check_iwl_file_from_scf_type(core.get_option('SCF', 'SCF_TYPE'), ref_wfn). > returnvalue = core.plugin('v2rdm_casscf.so', ref_wfn); E RuntimeError:; E Fatal Error: v2RDM did not converge.; E Error occurred in file: /scratch/psilocaluser/conda-builds/v2rdm_casscf_1491348825317/work/v2rdm_solver.cc on line: 1799; E The most recent 5 function calls were:; E; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::v2rdm_casscf::v2RDMSolver::compute_energy(); E py_psi_plugin(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<psi::Wavefunction>). /home/je714/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/pymodule.py:66: RuntimeError; ---------------------------------------------- Captured stdout call -----------------------------------------------; N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A; =========================== 1 failed, 15 passed, 2 skipped, 1 xfailed in 201.46 seconds ===========================; ```. </details>; Also here is the current status of the conda installation:; <details>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:5519,Error,Error,5519,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['Error'],['Error']
Availability,"me/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/lib-dynload', '/home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages']; >>> import psi4; /home/xxx/data/applications/anaconda3/envs/p4env/lib/python3.6/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; ```. If I run inside a notebook, `sys.path` and `sys.executable` are the same, but when I `import psi4`, I get a message ""The kernel appears to have died. It will restart automatically."" In the terminal, I see: ; ```; [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 conda-forge; certifi 2017.7.27.1 py36_0 conda-forge; chemps2 1.8.4 0 psi4/label/dev; cloog 0.18.0 0 ; decorator 4.1.2 py36_0 conda-forge; dftd3 3.2.0 7 psi4; dkh 1.2 1 psi4/label/dev; erd 3.0.6 1 psi4/label/dev; gcc-5 5.2.0 1 psi4; gcc-5-mp 5.2.0 0 psi4; gcp 2.0.1 0 psi4; gdma 2.2.6 3 p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:2009,recover,recovers,2009,https://psicode.org,https://github.com/psi4/psi4/issues/862,1,['recover'],['recovers']
Availability,"mize()` function. In addition, a dictionary of GeomeTRIC-specific keywords and options (like constraints) may be passed to the optimizer. The `test_h2o_constrained` pytest demonstrates how this is done. . ```; e = optimize(..., engine=`geometric`, optimizer_keywords={...}); ```; Output is consistent with Psi4's default geometry optimization:; <details><summary>Example result </summary>; <p>. ```; >>> grep ""~"" output.dat. ==> GeomeTRIC Optimizer <== ~; Psi4 convergence criteria QCHEM not recognized by GeomeTRIC, switching to GAU_TIGHT ~; Measures of convergence in internal coordinates in au. ~; Criteria marked as inactive (o), active & met (*), and active & unmet ( ). ~; --------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------- ~; Convergence Criteria 1.00e-06 1.50e-05 1.00e-05 6.00e-05 4.00e-05 ~; --------------------------------------------------------------------------------------------- ~; 0 -7.64427364e+01 -------- 5.01e-02 4.03e-02 -------- -------- ~; 1 -7.64446505e+01 -1.91e-03 2.68e-03 1.95e-03 3.06e-02 2.16e-02 ~; 2 -7.64446681e+01 -1.77e-05 5.27e-04 4.17e-04 4.22e-03 3.98e-03 ~; 3 -7.64446684e+01 -3.06e-07 * 2.27e-05 2.03e-05 4.11e-04 2.93e-04 ~; 4 -7.64446684e+01 6.91e-10 * 3.28e-06 * 2.74e-06 * 1.78e-05 * 1.49e-05 * ~; Optimization converged! ~. ```. </p>; </details>. ## Todos; - [x] Working GeomeTRIC interface; - [x] Improved printing and error handling; - [x] Pytest(s); - [x] Constrained optimizations; - [x] Process GeomeTRIC keywords in Psi4 input; - [x] Composite energy calls (CBS, etc.); - [x] Documentation. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1813:1789,error,error,1789,https://psicode.org,https://github.com/psi4/psi4/pull/1813,1,['error'],['error']
Availability,"mpossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defunct when `sq_rsp(...)` started using DSYEV internally (~forever ago), as LAPACK offers no such parameter to adjust and always diagonalizes down to ~machine precision. ### New sanity checks; - [x] Add a sanity check for non-square matrices in `mcscf::MatrixBase::diagonalize`; - [x] Add a sanity check for non-square matrices in `dfoccwave::Tensor2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2885,failure,failure,2885,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"n I use two different step sizes for the finite difference (1e-3 and 1e-4 a.u., both using central (3-point) finite difference; see fd-ana-grad.txt file in attached data.zip). By contrast, for a different system (a water dimer calculated at HF/STO-3G), the max difference between numerical and analytic gradients using a 1e-3 step size is around 1e-6. I've attached a picture where the numerical gradient, analytic gradient, and the difference are visualized. The difference is mainly on the La and Br atoms, with smaller components on the other atoms. These forces do not appear to be purely translational/rotational, but I think there is a translational/rotational component because the ""trajectory"" of the optimization appears to include some translational/rotational motion as well as distortion (attached qce_optim.xyz in data.zip). ![1](https://github.com/psi4/psi4/assets/1441560/e3dea159-d922-40c8-bad9-868b20f710e3). Although the gradient difference in this case is larger than geomeTRIC's convergence criterion for the RMS / max gradient, a smaller difference of 1e-5 to 1e-4 could still cause a failure to converge by causing the optimizer to take incorrect steps with step sizes larger than the convergence criterion for the displacement. I suspect these subtle errors are also occurring in DFT calculations on organic molecules, but because the errors are smaller there, the convergence failures do not happen consistently but only occasionally. (I can provide another example for an organic molecule if needed.). As an aside, I ran the geometry optimization in Q-Chem with the same settings (except Q-Chem does not use DF-SCF) and the optimization converged in 83 steps (attached qchem/ subfolder in data.zip). It would be really great if the development team could look at this. An improvement in the accuracy of DFT gradients would lead to great improvements in geometry optimization performance. . Thanks,. - Lee-Ping. [data.zip](https://github.com/psi4/psi4/files/13192796/data.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3066:2173,failure,failure,2173,https://psicode.org,https://github.com/psi4/psi4/issues/3066,5,"['Ping', 'error', 'failure']","['Ping', 'errors', 'failure', 'failures']"
Availability,"n and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLis",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:2449,Error,Error,2449,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"n particular, they give no clue how close you are to a working method -- do you need to tweak aefc or uhf/rohf or is this method nowhere in psi or have you misspelled it? Now, the ManagedMethodsError exception has been reworked to return current conditions data (to be caught and reformatted) and the error message itself (usually not seen directly) has been reworked to provide more conditions and a link to the table row in the docs where one can see what _would_ run. Back at driver_util.py, these errors are reformatted according to whether managed or plain method, whether deriv isn't available at all or just not demanded deriv, etc. Whenever possible, try to provide conditions that didn't run and a docs link. Some examples of before and after at https://github.com/psi4/psi4/pull/2731/files#diff-d6e974accd9a58a9993b3babac9fab5c85099ba6072de01c9a6bcc4ad430dc56L22-R82 .; - [x] Added mp4(sdq), mp4, zapt2, cisd, qcisd, qcisd(t), fci, cepa(1), cepa(3), acpf, aqcc, ccd, bccd, bccd(t), cc2, cc3, and some representative DFTs (svwn, pbe, b3lyp, wb97x, b2plyp) to standard suite testing to nail down their capabilities. Added some advice to the stdsuite so that others can perhaps edit it.; * all but cepa(1), cepa(3), acpf, aqcc, svwn, and wb97x are verified against external programs (for qcdb's and qcengine's good, not because I distrusted longstanding Psi4 implementations), usually cfour, nwchem, gamess; * ROHF DETCI doesn't match gamess/cfour for CISD or FCI, but doubtless that's implementation choice that I haven't identified. Anyway, that's why those are separate entries (away from qcng) in `standard_suite_ref_local.py`; * In filling out the capabilities tables for Hessians, I tried to collect CD Hessians for HF and SVWN by FD of energies. They failed the per-element CD result ~= CONV result check. Not surprising since CD thresh is set at 1e-4. I didn't do anything about the failure (ref values deleted and tests are not active), so this is just to bring up that CD threshold is",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:10209,down,down,10209,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['down'],['down']
Availability,"n the method). Meanwhile, `test_erisieve.py`, after the updates introduced in https://github.com/psi4/psi4/pull/2973, tests a wide variety of screening types, but with limited testing in conjunction with different JK builds (the only tests that don't use the Python interface of `TwoBodyAOInt` directly, use `SCF_TYPE=DIRECT` or `DF` as the JK method for screening comparisons). This leaves a lot of untested JK build+screening combos, which may be potentially broken and uncaught by the CI as a result. As a matter of fact, such cases actually do exist in the code currently (e.g., CompositeJK methods + no screening). This PR adds a new pytest module, `test_comprehensive_jk_screening.py`. It is effectively an expanded version of the scf5 test module, testing one of the scf5 systems (singlet oxygen) with the same basis set, but also including different screening methods and algorithmic subtypes available in Psi4. Screening is assumed to have an insignificant impact on energy within the tolerance used, so all screening types for a given method use the same reference energy. Some combinations of method and screening type throw an exception by design; this is accounted for in the test by testing that such combinations do indeed throw an exception as expected. Other combinations of method and algorithm are broken at the moment and error out; these are simply skipped for now. They are all logged in the same spot, and can and will be addressed in future PRs. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new pytest module to Psi4, `test_comprehensive_jk_screening.py` , to test different combinations of JK build algorithms and ERI screening methods. ## Questions; - [x] Would the test in `test_comprehensive_jk_screening.py` be better placed in `test_erisieve.py`? I placed the test in the former because I considered it large enough to warrant not having the quick pytest mark, but I'm ambivalent about where the test goes between those two test modu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2978:1314,toler,tolerance,1314,https://psicode.org,https://github.com/psi4/psi4/pull/2978,1,['toler'],['tolerance']
Availability,"nctions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure. ## Questions; - [x] Is `libciomr` a good place for the new wrappers to live in? The one they are r",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:1952,failure,failure,1952,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"nd fills in defaults, emitting a standardized (to become MolSSI JSON) molrec dict. Plain fn produces dict. `psi4.core.Molecule.from_arrays` and `qcdb.Molecule.from_arrays` go a step further and return a Mol.; - Function `validate_and_fill_chgmult` addresses current problems (1) create_mol_from_string's problem of not allowing overall chgmult to be set, defaulting all frag to `0 1`, and defaulting overall to fragA, (2) physical reasonableness (chg/mult/#elec compatible) not being tested for fragments at all and for overall not until the SCF code, (3) problems like psi4/psi4#114, and (4) overall and frag chgmult getting out of whack upon set_chg/mult, extract_subsets, not having frag chgmult editable, scf singlet/doublet defaulting. Taking given tot/frag chg/mult info and reasoning out the missing info would have been massive logic for chg/mult/#elec simultaneously, so this just codes up the rules and the defaults and throw `itertools.product` at it. Slows down a bit by 10 frag, but there's room for performance optimization. Ideally we'd call this at every reinterpret_coordentry, but that's not feasible for psi4 Mol. A good newdev starter project would be (for impossible reconciliations) to keep track of the least offending combo, and print out a summary of what rules it's violating.; - Function `reconcile_nucleus` addresses problems (1) can't specify atoms by atomic number, (2) can't specify masses by mass number, (3) faced with A, Z, E, real/ghost, and label `@C_special@12.1`, all as inputs, need to make sure (a) extracting as much user info as possible, (b) not allowing contradictory info, and (c) filling in everything else from periodictable. Like chgmult, fn handles this by defining rules and candidate values, and letting itertools do the rest. Expand atom label spec so can specify isotope and atomic number e.g., `Gh(27@58.933)` or `2H_deut`.; - Validates atoms-too-close all at once, rather than per-atom, which can run into units, coordsys, and? old CoordEntry tr",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:5948,down,down,5948,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['down'],['down']
Availability,"nda3-latest-Linux-x86_64.sh; ./Miniconda3-latest-Linux-x86_64.sh -b; conda create -n p4dev psi4-dev python=3.6 -c psi4/label/dev; conda activate p4dev; conda install libint am8 -c psi4/label/dev; git clone https://github.com/psi4/psi4.git && cd psi4; `psi4-path-advisor --gcc` -DMAX_AM_ERI=8; cd objdir && make -j`getconf _NPROCESSORS_ONLN`; ```. (The info on the forum is also confusing and due to formatting issues, some essential quotes are missing.). From the output of the penultimate line, it seems that the right AM options is picked up:. ```; ...; -- Setting option MAX_AM_ERI: 8; ...; ```. Alas, this does not work. The error I get from the last command is:. ```; -- Maximum AM: 8; -- Maximum Derivative: 0; -- CMAKE_C_FLAGS: -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- CMAKE_CXX_FLAGS: -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -march=native; -- SIMINT_C_INCLUDES: /home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external;/home/toon/psi4/objdir/external/upstream/simint/simint_external-prefix/src/simint_external-build/stage; -- SIMINT_C_FLAGS: -std=c99;-Wall;-Wextra;-pedantic;-Wno-unused-parameter;-Wno-unused-variable;-fopenmp;-mavx; -- SIMINT_LINK_FLAGS: -fopenmp; CMake Error at simint/CMakeLists.txt:7 (message):; Maximum angular momentum set is greater than I have available (7); ```. I've checked manually that my libint supports the right angular momenta:. ```; grep MAX ~/miniconda3/envs/p4dev/include/libint/*.h ; /home/toon/miniconda3/envs/p4dev/include/libint/libderiv.h:#define LIBDERIV_MAX_AM1 8; /home/toon/miniconda3/envs/p4dev/include/libint/libderiv.h:#define LIBDERIV_MAX_AM12 7; /home/toon/miniconda3/envs/p4dev/include/libint/libint.h:#define LIBINT_MAX_AM 9; ```. I have no other version of libint installed on my test system. Any suggestions? Thanks!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1341:1984,Error,Error,1984,https://psicode.org,https://github.com/psi4/psi4/issues/1341,2,"['Error', 'avail']","['Error', 'available']"
Availability,"nergies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/mol (0.5 % of a reaction energy of 188 kcal/mol !); * speed-ups: `ROBUST=1.33 `; `TREULTER=1.36`. _absolute energy molecule 35_; * dev. old BS to new BS: 3.41e-07; * (newBS) `NONE` to `ROBUST`: 4.93e-07; * (newBS) `NONE` to `TREUTLER`: 1.46E-04. _gradient energy molecule 35_; * (newBS) MAD `NONE` to `ROBUST`: ~ 1E-7; * (newBS) MAD `NONE` to `TREU",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:4084,ROBUST,ROBUST,4084,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,"nergy (a.u.) : -129.54016619495539; =======================================================================. Number of alpha independent-pairs:172; Number of beta independent-pairs :157. ==============================================================================; ================ Performing CD-OMP2 iterations... ============================; ==============================================================================; Minimizing CD-MP2-L Functional; ------------------------------; Iter E_total DE RMS MO Grad MAX MO Grad RMS T2; ---- --------------- ---------- ----------- ----------- ----------; 1 2171897840405125233095316875881590551467307175332860142219670350830780702696283291230457729657914921746891661667264776735054294112163359650172177568018543474023361651834998812756231127668278305330007498940536320077394375160362584676926576578513365418212288803914428069938462720.0000000000 2.17e+276 inf 1.41e+183 8.10e+89; An error has occurred python-side. Traceback (most recent call last):. File ""<string>"", line 40, in <module>. File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/driver.py"", line 444, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 223, in select_omp2; return func(name, **kwargs). File ""/build/psi4-lIOjn9/psi4-1.0~rc/share/python/procedures/proc.py"", line 1308, in run_dfocc; dfocc_wfn = psi4.dfocc(ref_wfn). RuntimeError:; Fatal Error: DF-OCC iterations are diverging; Error occurred in file: /build/psi4-lIOjn9/psi4-1.0~rc/src/bin/dfocc/occ_iterations.cc on line: 263; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::dfoccwave::DFOCC::occ_iterations(); psi::dfoccwave::DFOCC::cd_omp2_manager(); psi::dfoccwave::DFOCC::compute_energy(); psi::dfoccwave::dfoccwave(boost::shared_ptr<psi::Wavefunction>, psi::Options&); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391:2317,Error,Error,2317,https://psicode.org,https://github.com/psi4/psi4/issues/391,2,['Error'],['Error']
Availability,new python detection downstream,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2096:21,down,downstream,21,https://psicode.org,https://github.com/psi4/psi4/pull/2096,1,['down'],['downstream']
Availability,"ng of CDS's memory and comparison to GAMESS concluded that for arbitrary-order MPn and ZAPTn through DETCI that the written docs were right (MPn for RHF only and ZAPTn for ROHF only) and what was allowed was wrong (both for both). This has been reworked to match the written docs and various UpgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deployed. The MRCC definition dictionary has been moved from driver_util.py (in a fn) to a raw dict in procrouting/proc_data.py. Collection of qcvars has been maximized. closes #2634. replaces and closes #2638 EDIT: after discussion below, MRCC _will_ be defaulted to if available. Practically, the only confusion should arise for a-ccsd(t) where Psi4 has the method sometimes (rhf) but not others (uhf/rohf). Methods like ccsd will always default to ccenergy, and methods like ccsdt will always go to mrcc.; - [x] Like to the MRCC case above, the arbitrary-order methods mp_n_, zapt_n_, ci_n_ that were intercepted and then transferred around as a method (e.g., ""mp"") and a level (kwarg ""level=5"") were requiring extra complication to work with the distributed driver. Now all such methods and a reasonable number of levels are added explicitly to the procedures table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:6239,avail,available,6239,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"ngle alpha, not a different alpha for each spin.; 2. For the same reason, you need a single beta.; 3. The Fock term assumed semicanonical orbitals. OCC does not use semicanonical orbitals.; 4. The Fock matrix was acting on the wrong vector.; 5. One of the tensor contractions involving TEI was incorrect. After fixing those five bugs, I observed three things:; 1. After accounting for whether you index by (v,o) or (o, v), the matrix-vector products of the new occ implementation match those of the SOUHF P4N tutorials,; 2. The X (kappa) converged to does satisfy Ax=b; 3. The orbital equations refuse to converge. My conclusion is that the implementation of the algorithm is now correct, but it's not a good way to generate orbital steps. The off-diagonal terms can end up being significant for the open-shell systems that would lead you to use an orbital-optimized method. This didn't cause obvious problems before because the previous errors rendered the PCG procedure non-convergent, so you would always fall back to the crude diagonal step _unless_ your orbital gradient was so low that you didn't need to iterate at all. So what we expect to see from this bug is difficulties converging occ tightly, which has been my experience. To remedy the situation, the default orbital step is now the crude semicanonical step. The next PR should be the final one in the series. I'll just need to rebase it onto this one, repair the two tests I mentioned on broken tests, and confirm the test suite is clean. Pinging the usual suspects: @loriab, especially @dgasmith for PCG, and @jturney. I think Jet is sick today, so a different third reviewer would be welcome. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Debugged HF MO hessian based orbital step; - [x] Made HF MO hessian based orbital step opt-in rather than default; Not recommended. ## Checklist; Can't run tests if the tests were already broken!; - [x] Confirmed b-Ax approximately zero for t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1829:1487,error,errors,1487,https://psicode.org,https://github.com/psi4/psi4/pull/1829,1,['error'],['errors']
Availability,"ngly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:1381,error,error,1381,https://psicode.org,https://github.com/psi4/psi4/pull/3186,1,['error'],['error']
Availability,"nmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 1595, in hessian; E, wfn = energy(lowername, return_wfn=True, molecule=moleculeclone, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 858, in select_ccsd_t_; return func(name, **kwargs); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/procrouting/proc.py"", line 1608, in run_dfocc; ""RIFIT"", core.get_global_option(""BASIS"")); File ""/Users/jonathonmisiewicz/psi4/objdir2/stage/usr/local/psi4/lib/psi4/driver/p4util/python_helpers.py"", line 99, in pybuild_basis; psibasis = core.BasisSet.construct_from_pydict(mol, basisdict, puream). RuntimeError: ; Fatal Error: CoordEntry::basisset: Basisset not set for O and type of DF_BASIS_CC; Error occurred in file: /Users/jonathonmisiewicz/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 134; ```; My own investigations have partially uncovered the cause of this. During basis set construction, [basis set labels are set on all atoms](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L101). This occurs by [iterating over all atoms in full_atoms_](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2879) and [setting basis set labels for them.](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/molecule.cc#L2880) However, there is a very subtle problem. The basis set is constructed from this labels [here](https://github.com/psi4/psi4/blob/master/psi4/src/export_mints.cc#L173). The [constructor](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L567) sets the basis by [calling atom_entry](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/basisset.cc#L651). The problem is that a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1093:2105,Error,Error,2105,https://psicode.org,https://github.com/psi4/psi4/issues/1093,2,['Error'],['Error']
Availability,"nst std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabe",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3314,error,error,3314,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"nstallation stops with some errors (the entire log of the configuration attempt is at the bottom of this post). Errors:. ```. CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi4-1.0]$; ```; At the end of the output of the setup script, the user is pointed to CMa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:1073,Error,Error,1073,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"nt state of the master branch (last included commit: 97761b111b68c56e3763ad7b471ec603da90ed25) of psi4 fails to build at the linking step. The last lines of the output of `make` are; ```/usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_0_cxx.cxx.o): relocation R_X86_64_32 against `.bss' can not be used when making a shared object; recompile with -fPIC; /usr/lib64/gcc/x86_64-suse-linux/11/../../../../x86_64-suse-linux/bin/ld: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/stage/lib/libint2.a(unity_1811_cxx.cxx.o): warning: relocation against `CR_aB_h010__0___CartesianMultipole_sB_0_c_0_c_0_Sb__p100__0___Ab__up_' in read-only section `.text'; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:408: src/core.cpython-39-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been w",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:994,Error,Error,994,https://psicode.org,https://github.com/psi4/psi4/issues/2572,2,['Error'],['Error']
Availability,"nt-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2), [osx-64/libint2-2.7.1-h879752b_8.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/osx-64/libint2-2.7.1-h879752b_8.tar.bz2); [^7]: Step B conda packages: [linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libint2-2.7.1-h2fe1556_15.tar.bz2), [osx-64/libint2-2.6.0-h879752b_7.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_7.tar.bz2), [win-64/libint2-2.6.0-h2e52968_4.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_4.tar.bz2); [^8]: Packages can be found off `psi4/label/dev` or `psi4/label/testing` subchannels, depending on stage of master. The build number (e.g., `_13`) remains steady even if the subchannel changes. If you're in an environment that already has a L2, `conda remove libint2 --force`, then `conda install libint2=*=<h2fe1556_13> -c psi4/label/<dev|testing>` (substitute `<placeholders>`); <!--[^9]: Packages can be found off `psi4/label/testing` subchannel: [linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2](https://anaconda.org/psi4/libint2",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:3480,down,download,3480,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"nt2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_0.tar.bz2), [osx-64/libint2-2.7.2-h1800126_0.conda](https://anaconda.org/psi4/libint2/2.7.2/download/osx-64/libint2-2.7.2-h1800126_0.conda)-->; [^9]: Step A' conda packages: AM7 from `psi4/label/testing::libint2`: [linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2](https://anaconda.org/psi4/libint2/2.7.2/download/linux-64/libint2-2.7.2-h2fe1556_1.tar.bz2) or AM5 from `conda-forge/label/libint_dev::libint`: [linux-64/libint-2.7.3dev1-h95a0634_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/linux-64/libint-2.7.3dev1-h95a0634_0.conda), [osx-64/libint-2.7.3dev1-h7eb4062_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-64/libint-2.7.3dev1-h7eb4062_0.conda), [osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/osx-arm64/libint-2.7.3dev1-h8694fdf_0.conda), [win-64/libint-2.7.3dev1-h8e19551_0.conda](https://anaconda.org/conda-forge/libint/2.7.3dev1/download/win-64/libint-2.7.3dev1-h8e19551_0.conda); [^10]: Step A'' conda packages AM5 from `-c psi4/label/testing`: [linux-64/libint-2.8.0dev2-h59595ed_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/linux-64/libint-2.8.0dev2-h59595ed_0.conda), [osx-64/libint-2.8.0dev2-h93d8f39_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/osx-64/libint-2.8.0dev2-h93d8f39_0.conda), [win-64/libint-2.8.0dev2-h63175ca_0.conda](https://anaconda.org/psi4/libint/2.8.0dev2/download/win-64/libint-2.8.0dev2-h63175ca_0.conda). Links on Libint2 issues here since it's worth having an issue open on this for packagers to consult. * https://github.com/psi4/psi4/issues/2300 (search ""multidimensional"") for background and conda-forge; * https://github.com/evaleev/libint/issues/190 for the general open-source conundrum and current psi4 prospects toward the end; * https://github.com/psi4/psi4/blob/master/external/upstream/libint2/CMakeLists.txt#L1-L25 for libint2 build constraints for Psi4. Steps toward",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:5480,down,download,5480,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['down'],['download']
Availability,"nts standard class. If necessary, write it back at the end of the function call. This allows us to take the task of rewriting all of OCC (and its coupled variables) into going function-by-function. When we can, we'll then just change the variable in the header and eliminate the relevant converters.; * To eliminate code duplication, I added some new objects to the wavefunction that ""contain"" alpha/beta specific quantities. So instead of needing to write the orbital rotation code once for closed-shell, once for open-shell alpha, and once for open-shell beta, you only write it once. I'm not sure how well it generalizes to other functions, but it sure cleaned up update_mo!. ## Capability Loss/Gain; As a result of this switch, we lose the ability to ""level shift"" in OCC. ""Level shift"" is a misnomer and actually refers to scaling the diagonal elements of the DIIS B-matrix. When I'm done, the orbital convergence will be so much better that we won't notice it's gone. In the short term, this does cause more test failures. ## Questions; * Because we're losing ""level shifting"", we're losing some keywords. I don't know how to deprecate these. If they're provided as module-level keywords, then I don't know the technical details of how you would raise a warning message. The bigger problem is when they're global keywords. DFOCC still uses ""level shifting"", so I can only raise a warning when I know what module the user is in. Thoughts on how to handle this?; * Should we be losing ""level shifting""? We can add _damping_ to `libdiis` if there's demand for it. I think there are better things to do with my time. ## Quick Test Status; * Switching out the DIIS version caused the `omp2p5-2` test's OMP2.5 energy to fall outside convergence criteria, again emphasizing how unstable orbital convergence in OCC is. We'll find out what the actual value is by the time I'm done.; * Losing ""level shifting"" was enough to break the `ocepa-grad2` test. This test asks for a higher-than-normal convergence",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1783:2450,failure,failures,2450,https://psicode.org,https://github.com/psi4/psi4/pull/1783,1,['failure'],['failures']
Availability,"nutes on a 20-core machine with no individual test over 4m. That's not reasonable for a laptop. Blame the slow-to-converge oo methods, and it's going to get worse with occd and friends.; - [ ] TODO https://github.com/MolSSI/QCEngine/pull/376 and a new version of QCEngine are a prereq.; - [x] https://github.com/qcdb/qcdb/pull/57 is associated QCDB PR (psi4 PR is a prereq to it); - [ ] TODO full stdsuite in the presence of MRCC will have a couple faults of the ""not NYI"" variety after the MRCC defaulting logic switch from Q. I haven't decided how to remedy this, but it's unlikely to be hit, so I'll defer. ## Questions; - [ ] My version of Psi4+MRCC doesn't run CC2. Anyone else see this? (Just curious, not really needed for PR.); - [ ] I don't think the original module authors will find issues, but if you want to look over pertinent docs and capabilities tables, please do so.; - [x] [ADDED from #2737 For methods (or methods in certain circumstances, say reference or conv/df) only available through an external add-on, do we want those opt-in? That is, certainly the external must be (1) installed and detectable. But do we also want to (2) require the user to set qc_module=mrcc|adcc|chemps2 ? CheMPS2 has a long history of not requiring (2). ADCC has a shorter history of being the preferred backend and automatic choice, if present. @maxscheurer prefers not requiring (2). In this PR, I just switched MRCC syntax to yes require (2). That was in keeping with the user opt-ing in via energy(""mrccsd""). I can go either way, and I guess I'm now leaning toward not requiring (2) and adjusting MRCC accordingly. But it seems like something to discuss and settle on a consistent treatment. EDIT: ok, MRCC can be a default. above section edited. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:13699,avail,available,13699,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"o replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfoccwave::Tensor2d::diagonalize` used to take a ""diagonalization cutoff"" argument, which was passed down to `sq_rsp(...)`. This used to be hardcoded to 1E-10, but went completely defu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2538,failure,failure,2538,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"o the superior [standalone library](https://github.com/robashaw/libecpint), also written by Rob Shaw. That library also provides gradient and Hessian terms, which will greatly improve performance. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Hook up external build; - [x] Get energies working; - [x] Get gradients working; - [x] Get Hessians working; - [x] Remove old native implementation; - [x] Make all tests / references to ECPs conditional depending on libECP activation. LAB: conditional build marked by `USING_ecpint` compile definition. This turned out uglier than should strictly be needed because as soon as you ifdef the ao_ecp declarations in integrals.cc, all calcs, w/ or w/o ecp segfault. Possibly I'm missing something, but present ifdef pattern is working stably.; - [x] Linux and Mac conda packages are available off psi4/label/dev. Windows untested. These packages have stylistic problems, but they'll do for now. There are also Linux and Mac conda packages off conda-forge. At least the Linux works fine. Installation is mildly involved with the mixed base channels, so the psi4 packages exist for simplicity of availability.; - [x] NYI message on stability code added to close #2577 ; - [ ] build docs will be in a separate PR. ## Questions; - Can anyone think of how one might access code with ecp ifdefs _without_ building a psi4 BasisSet (besides zerobasis)? Particularly though some non-driver mintshelper API call? This is important because the nearly sole whoa-your-mol+basis-needs-ecp-but-libecpint-not-built warning happens at the BasisSet build in export_mints. If users get around that, they'll be surprised by missing electrons b/c ecp code is deactivated. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135:1275,avail,availability,1275,https://psicode.org,https://github.com/psi4/psi4/pull/2135,1,['avail'],['availability']
Availability,"o/Source/psi4/src/lib/libfrag/LibFragDriver.cc:121:4: error: unknown type name 'SharedMol'; SharedMol AMol=psi::Process::environment.molecule();; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:116:49: warning: unused parameter 'MethodName' [-Wunused-parameter]; LibFragDriver::LibFragDriver(const std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/Li",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1389,error,error,1389,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"object at 0x7f6fc473c360>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; 	",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:42305,Error,Error,42305,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4a59eb8>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; P",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:30833,Error,Error,30833,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4b93fc0>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; C",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:13332,Error,Error,13332,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4be7678>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; ________________________________________________________________ test_psi4_basic _________________________________________________________________. d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:20633,Error,Error,20633,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4ccd780>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; _________________________________________________________________ test_psi4_cas __________________________________________________________________. d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:23764,Error,Error,23764,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fc4cd6b48>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; C",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:7823,Error,Error,7823,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"object at 0x7f6fef0343b8>, functional = None. def scf_wavefunction_factory(reference, ref_wfn, functional=None):; """"""Builds the correct wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; __________________________________________________________________ test_psi4_cc __________________________________________________________________. d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:27192,Error,Error,27192,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"occ': [0, 0, 0, 0, 0, 1, 0, 1],; 'restricted_docc': [1, 0, 0, 0, 0, 1, 0, 0],; 'active': [2, 0, 1, 1, 0, 2, 1, 1],; 'MCSCF_MAXITER': 100; }). psi4.set_memory('8000 MB'). cf_geometry = """"""; 0 2; C; F 1 {0}; symmetry c2v; """""". a_end = 1.325; b_start = 1.355; b_num = 20; aa = np.linspace(1, 1.2, 6); a = np.linspace(1.25, a_end, 3); b = np.linspace(b_start, 2.5, b_num); c = np.linspace(2.6, 10, 8); Rvals = np.concatenate((aa, a, b, c), axis=None). ecp = {}. for R in Rvals:; if R <= a_end:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 0, 'NUM_DETS_PRINT': 40}); elif R >= b_start:; psi4.set_module_options('detci', {'num_roots': 3, 'follow_root': 1, 'NUM_DETS_PRINT': 40}). cf = psi4.geometry(cf_geometry.format(R)); casscf_energy = psi4.energy('casscf'); ecp[R] = [; casscf_energy,; psi4.core.variable('ci root %d TOTAL ENERGY' % 0),; psi4.core.variable('ci root %d TOTAL ENERGY' % 1),; psi4.core.variable('ci root %d TOTAL ENERGY' % 2); ]; psi4.core.clean(); ```. The error message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/c",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181:1244,error,error,1244,https://psicode.org,https://github.com/psi4/psi4/issues/3181,1,['error'],['error']
Availability,occasional failure of sapt inf,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:11,failure,failure,11,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['failure'],['failure']
Availability,"ompositeJK is a single JK subclass which enables the combination and execution of any separate J and K build algorithm available in Psi4. CompositeJK can enable this without duplication of separate build algorithms across different subclasses. Additionally, CompositeJK is designed to enable simple expansion of itself, enabling the easy addition of new separate J and K builds to Psi4 with minimal programming issues. The current PR is the first implementation of the CompositeJK framework into Psi4, and it has two components:; - Front end. The front end changes control of how composite combinations of separate J and K build algorithms can be called by the user. The most important aspect is that, for CompositeJK, any combinations of its sub-algorithms can be called by setting SCF_TYPE to `J_alg+K_alg`, where _J_alg_ is the separate J build algorithm of choice, and _K_alg_ is the separate K algorithm of choice. As of now, the two CompositeJK options available are `DIRECTDFJ+LINK` representing the old DFJLinK class, and `DIRECTDFJ+COSX` representing the old DFJCOSK class. The key here, is that the ""+"" delimiter in SCF_TYPE serves as a signal to Psi4 that a CompositeJK algorithm is being used. ; - Back end. Basically all of the back-end changes can be classified into two categories - merging DFJLinK and DFJCOSK into the initial CompositeJK implementation, and modifications of functions where necessary to support the above front-end changes. . ## User API & Changelog headlines; - [X] The ""COSX"" keyword for ""SCF_TYPE"" has been replaced with ""DIRECTDFJ+COSX"".; - [X] The ""LINK"" keyword for ""SCF_TYPE"" has been replaced with ""DIRECTDFJ+LINK"". ## Dev notes & details; - [X] Refactors the DFJLinK and DFJCOSK classes into the combined CompositeJK JK subclass. CompositeJK can perform the computations previously performed by both DFJLinK and DFJCOSK within a single JK subclass. These changes are largely localized to the commits f0c4f6c8e31696f6690e101d71bef1863bcf324c - ca66c91976cb5e8",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2833:2493,avail,available,2493,https://psicode.org,https://github.com/psi4/psi4/pull/2833,1,['avail'],['available']
Availability,"on of one-electron integrals on a quadrature grid. Therefore, there are a number of improvements to be made, in order of increasing difficulty:. - Do a better job at screening small integrals before they're computed (like [these](https://aip.scitation.org/doi/pdf/10.1063/1.5048491)); - Use better grids (such as [here](https://aip.scitation.org/doi/full/10.1063/1.5049435)); - Compute individual integrals faster. This could be done by reusing intermediates in the recursion for integrals involving the same shell-pair and different grid points. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement semi-numerical exchange in the `DFCOSK` class; - [x] Add tests & docs. ## Questions; - [x] What do we want the `SCF_TYPE` keyword for this algorithm to be? It's currently `COSK`. It could also be `DFJCOSK`. It might make more sense to call the algorithm `SNK` (for semi-numerical exchange) over `COSK`, as the latter is more general, and will still be accurate even if we change the screening procedure. (The former refers to a very specific screening procedure).; - [x] For anyone who regularly uses COSK: do you have a preference for how the tightness of the integration grids are specified? Currently, the user gives the number of spherical/angular points. We could also predefine a set of allowed spherical/angular combos. That might be easier for users (they don't have to know about lebedev numbers, for example), but it sacrifices flexibility.; - [x] This is less a question and more of a note: the `DFTGrid` class is in serious need of a refactor so that it does not read from global options. This PR kicks the can down the road by adding another constructor to the class, which takes `double`-type options. I'd be happy to hear any thoughts on what to do with this class, though that probably deserves its own issue. ## Checklist; - [x] Tests added for any new features. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2567:3176,down,down,3176,https://psicode.org,https://github.com/psi4/psi4/pull/2567,1,['down'],['down']
Availability,"on ‘void psi::dmrg::buildHamDMRG(std::shared_ptr<psi::IntegralTransform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; double Econstant = wfn->molecule()->nuclear_repulsion_energy();; ^; In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; ^; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```; The output generated by `psi4-path-advisor --gcc` is; ```; /home/shouck/miniconda3/envs/p4dev/bin/cmake \; -H. \; -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; -Bobjdir; ```; @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to `ON` in psi4DepsCache.cmake by default; changing it to; ```; set(ENABLE_CheMPS2 OFF CACHE BOOL """"); set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); ```; allows Psi4 to compile without issues. I'm not sure, but it seems like maybe a function was changed and then not updated in CheMPS2. The error and log files are attached. Thank you!. [CMakeError.log](https://github.com/psi4/psi4/files/1515094/CMakeError.log); [CMakeOutpu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871:1200,Error,Error,1200,https://psicode.org,https://github.com/psi4/psi4/issues/871,1,['Error'],['Error']
Availability,"on; cmake version 3.18.4. CMake suite maintained and supported by Kitware (kitware.com/cmake).; $ ls /path/to/eigen3/share/eigen3/cmake; Eigen3Config.cmake Eigen3ConfigVersion.cmake Eigen3Targets.cmake UseEigen3.cmake; ```. Here Eigen 3.3.7 is manually installed. ```console; $ git describe --always; v1.5-178-gd725195826a1; $ cmake -G Ninja -B build -S . -D BOOST_ROOT:PATH=/path/to/boost -D Eigen3_DIR:PATH=/path/to/eigen3/share/eigen3/cmake; $ cmake --build build -- external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://github.com/evaleev/libint ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:977,error,errors,977,https://psicode.org,https://github.com/psi4/psi4/issues/2606,1,['error'],['errors']
Availability,"onst std::string& MethodName){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:9: error: no template named 'MPITask'; did you mean 'psi::MPITask'?; typedef MPITask<SharedFrag> Task_t;; ^~~~~~~; psi::MPITask; /Users/francesco/Source/psi4/src/lib/libparallel2/TaskJobGuts/../MPITask.h:50:7: note: 'psi::MPITask' declared here; class MPITask{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:183:17: error: use of undeclared identifier 'SharedFrag'; typedef MPITask<SharedFrag> Task_t;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Sourc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:1731,error,error,1731,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. compilation aborted for /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc (code 2); src/lib/libmints/CMakeFiles/mints.dir/build.make:583: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o' failed; make[2]: *** [src/lib/libmints/CMakeFiles/mints.dir/basisset.cc.o] Error 2; CMakeFiles/Makefile2:1861: recipe for target 'src/lib/libmints/CMakeFiles/mints.dir/all' failed; make[1]: *** [src/lib/libmints/CMakeFiles/mints.dir/all] Error 2; Makefile:126: recipe for target 'all' failed; make: *** [all] Error 2; ```. With the GNU compiler (g++ (Ubuntu 5.2.1-22ubuntu2) 5.2.1 20151010) it works fine. I'm just warning because many HPCs prefer the intel compiler and you might want to provide support. Best wishes,; Sebastian",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:15507,Error,Error,15507,https://psicode.org,https://github.com/psi4/psi4/issues/262,3,['Error'],['Error']
Availability,"oost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::iterator_traits<_Iterator> [with _Iterator=int]"" at line 98 of ""/home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/regex_token_iterator.hpp""; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):. In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; /usr/include/c++/5/bits/stl_iterator_base_types.h(156): error: name followed by ""::"" must be a class or namespace name; typedef typename _Iterator::difference_type difference_type;; ^; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; detected during:; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instantiation of class ""std::__iterator_traits<_Iterator, void> [with _Iterator=int]"" at line 163; In file included from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive_static.hpp(30),; from /home/seba/software/psi4-0.5/objects/boost/include/boost/xpressive/xpressive.hpp(18),; from /home/seba/software/psi4-0.5/src/lib/libmints/basisset.cc(29):; instanti",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/262:9953,error,error,9953,https://psicode.org,https://github.com/psi4/psi4/issues/262,1,['error'],['error']
Availability,"or: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:2650,error,error,2650,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"ortran: /opt/intel/impi/5.0.1.035/intel64/lib/libmpifort.so;/opt/intel/impi/5.0.1.035/intel64/lib/release/libmpi.so;/opt/intel/impi/5.0.1.035/intel64/lib/libmpigi.a;/usr/lib64/libdl.so;/usr/lib64/librt.so;/usr/lib64/libpthread.so; -- No Sphinx, no docs. Pre-built documentation at http://sirius.chem.vt.edu/psi4manual/latest/index.html; -- Found libutil: /usr/lib64/libutil.so; -- Found libm: /usr/lib64/libm.so; -- Found librt: /usr/lib64/librt.so; -- Found libdl: /usr/lib64/libdl.so; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Looking for pthread_create; -- Looking for pthread_create - found; -- Found Threads: TRUE; -- Found PythonInterp: /usr/bin/python2.6 (found version ""2.6.6""); -- Found PythonLibs: /usr/lib64/libpython2.6.so (found suitable exact version ""2.6.6""); -- Could NOT find Boost; -- Boost 1.55.0 not found. The pre-packaged version will be built.; -- Libraries to be built: filesystem, python, regex, serialization, system, timer, chrono, thread, mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring incomplete, errors occurred!; See also ""/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log"". Howevewer, there is no file /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir/CMakeFiles/CMakeOutput.log and no directory objdir at all.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:16312,error,errors,16312,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['error'],['errors']
Availability,"ous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; /home/work/psi4/psi4/psi4/src/core.cc:998:16: error: expected constructor, destructor, or type conversion before ‘(’ token; PYBIND11_MODULE(core, core) {; ^; make[5]: *** [src/CMakeFiles/core.dir/build.make:284: src/CMakeFiles/core.dir/core.cc.o] Error 1; make[5]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[4]: *** [CMakeFiles/Makefile2:166: src/CMakeFiles/core.dir/all] Error 2; make[4]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[3]: *** [Makefile:130: all] Error 2; make[3]: Leaving directory '/home/work/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build'; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:113: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[2]: Leaving directory '/home/work/psi4/psi4/objdir'; make[1]: *** [CMakeFiles/Makefile2:647: CMakeFiles/psi4-core.dir/all] Error 2; make[1]: Leaving directory '/home/work/psi4/psi4/objdir'; make: *** [Makefile:141: all] Error 2; ```. I configured psi4 with; ```; cmake -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DLAPACK_LIBRARIES=""-lopenblaso"" -DENABLE_AMBIT=OFF -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_PCMSolver=OFF -DCMAKE_INSTALL_PREFIX=/home/work/psi4/install -DCMAKE_AR=""/usr/bin/gcc-ar"" -DCMAKE_RANLIB=""/usr/bin/gcc-ranlib"" -DCMAKE_BUILD_TYPE=RelWithDebInfo ..; ```; and started with a clean build directory. I am on the current master, commit 42016c2a4462b6d7e9f030df4e75e7d81b50b9a8. This is on Fedora 28 with; ```; $ gcc --version; gcc (GCC) 8.1.1 20180712 (Red Hat 8.1.1-5); Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:4258,Error,Error,4258,https://psicode.org,https://github.com/psi4/psi4/issues/1256,3,['Error'],['Error']
Availability,"out_1620666994506/work/build/tests/sapt-exch-disp-inf/output.dat"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in run_sapt_dft; sapt_dft(dimer_wfn, wfn_A, wfn_B, sapt_jk=sapt_jk, data=data, print_header=False); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/dri",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:1969,ERROR,ERROR,1969,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"ove import of qcelemental (#1925) ; - Int to list for array variables (#1927) ; - Add module provenance to Wavefunction (#1935) ; - Add wfn to PSIMRCC (#1949, #1956) ; - Print CCSD pair energies (#1950) ; - Test label for c1-incompatible tests (#1958) ; - DCT and DFOCC densities to Wavefunction (#1963, #1964) ; - basis_sets handled by wavefunction.minsthelper (#1970) ; - Remove unused libtrans code (#1976) ; - Cleanup code for basis set handling (#1994) ; - MP 2.5/3.5 default to DF (#1980) ; - Print and save electron count from grid (#2001) ; - Clean libtrans (#1991) ; - Fix to high ang. mom. basis set (#2003) ; - Programmer docs (#2015) ; - Save cc response variables to wavefunction (#2022) ; - Compute electric field (#2032) ; - Better PSIO error reporting (#2030) ; - FCHK writer/testing improvement (#1884, #2047, #2058, #2063, #2091) ; - Set Lagrangian in Wavefunction (#2064, #2066, #2070) ; - Linux Azure fix (#2074) ; - Remove code in DF-DCT and DFOCC (#2067, #2078) ; - Python functions for DF derivative integrals (#2088) ; - Windows conda package (#2048) ; - Remove some tests for multithreading (#2094) ; - Update Numpy interface docs (#2089) ; - Python detection downstream (#2096) ; - Save OCC densities to Wavefunction (#2072) ; - Make library SHARED and Py linking MODULE in pybind11 (2104) ; - Remove some OCC code (#2107) ; - Refactor EFP routines (#2111) ; - Pybind11 to v2.6.2 (#2118) ; - Windows package to anaconda.org (#2123) ; - Update v2rdm, qcelemental to 0.19 (#2128) ; - Address linker warning for OSX (#2129) ; - Add DF bases for szvp (#2134) ; - Disable Libint2 screening (#2139) ; - CPPE tests to pytest (#2140) ; - GHA-related fixes (#2144, #2158, #2146, #2167, #2172, #2179) ; - Restore debug symbols (#2159) ; - DCT Cleanup (#2152, #2168, #2171, #2182, #2185) ; - Cleanup of some optking functions (#2170) ; - Improve QCEngine interface for empirical dispersion (#2180) ; - Remove CHKPT (#2186) ; - X2C gradient warning (#2200) ; - Update cmake files to enab",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:9039,error,error,9039,https://psicode.org,https://github.com/psi4/psi4/issues/1562,2,"['down', 'error']","['downstream', 'error']"
Availability,"per](https://onlinelibrary.wiley.com/doi/full/10.1002/jcc.20604) behind Rob's implementation. All three codes will get the same relaxed PDMs and solve orbital response terms by conjugate gradients, but they do not agree on which terms should be called orbital response or the exact form of the conjugate gradient equation to be solved. The caller code should be able to compute the PDMs however they want, with just a link to the relevant paper in the comments. ## Open Questions; * @dgasmith, what do you need to get MP2 RDM information passed to double hybrid functionals (#1333)?; * Crawford group in general, how willing are you to adapt the CC gradients to the new style of gradients?; * What is the fate of CI gradients? These were operational in Psi3 but were not hooked back up to Psi4. This means that at present, Psi can't even do CASSCF gradients. I believe this is enough of an issue for @fevangelista that he was playing with getting these hooked back in.; * Do we want to allow blocks to only include the correlation density but not the reference density? This is simple enough for a Hartree-Fock reference but does introduce ambiguity for other references, e.g., if MR-DSRG wants the gradient code to add a CAS reference to its correlation density.; * Is there some inherent problem with Psi's 3-index tensor technology that would have forced Ugur to use his own tensor classes? I'm not familiar with 3-index manipulations.; * One of the other major problems with the current approach to gradients is prefactors. When writing different blocks of the gradient code to `libiwl`, there's a prefactor you need for different blocks. At present, the needed prefactor seems completely random. I'd _like_ to figure out the origin of these prefactors and determine if there's a way to make them saner, or at least documented. I'll get to this when I've recovered, but if anybody has any knowledge about this, let us know! This issue will be especially important for _spin-restricted_ gradients.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1736:8475,recover,recovered,8475,https://psicode.org,https://github.com/psi4/psi4/issues/1736,1,['recover'],['recovered']
Availability,"pgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deployed. The MRCC definition dictionary has been moved from driver_util.py (in a fn) to a raw dict in procrouting/proc_data.py. Collection of qcvars has been maximized. closes #2634. replaces and closes #2638 EDIT: after discussion below, MRCC _will_ be defaulted to if available. Practically, the only confusion should arise for a-ccsd(t) where Psi4 has the method sometimes (rhf) but not others (uhf/rohf). Methods like ccsd will always default to ccenergy, and methods like ccsdt will always go to mrcc.; - [x] Like to the MRCC case above, the arbitrary-order methods mp_n_, zapt_n_, ci_n_ that were intercepted and then transferred around as a method (e.g., ""mp"") and a level (kwarg ""level=5"") were requiring extra complication to work with the distributed driver. Now all such methods and a reasonable number of levels are added explicitly to the procedures table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp2_type`, `mp_type`, `ci_type`, `cc_type` keywords were a good idea in that they allow different defaults for different levels of theory and are fairly easy to guess and uniform to use. One flaw is that you don't know programmatically what controls what method -- it's all hard-coded, sometimes",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:6569,avail,available,6569,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['avail'],['available']
Availability,"pherical Harmonics?: false; Max angular momentum: 1. ==> DFT Potential <==. => LibXC <=. Version 5.2.3; S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: B3LYP-D3ZERO <= . B3LYP-d3zero Hyb-GGA Exchange-Correlation Functional. P. J. Stephens, F. J. Devlin, C. F. Chabalowski, and M. J. Frisch, J. Phys. Chem. 98, 11623 (1994) (10.1021/j100096a001). Deriv = 1; GGA = TRUE; Meta = FALSE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange Functionals <=. 0.0800 Slater exchange; 0.7200 Becke 88. => Exact (HF) Exchange <=. 0.2000 HF . => Correlation Functionals <=. 0.1900 Vosko, Wilk & Nusair (VWN5_RPA); 0.8100 Lee, Yang & Parr. => LibXC Density Thresholds <==. XC_HYB_GGA_XC_B3LYP: 1.00E-15 . => Molecular Quadrature <=. Radial Scheme = TREUTLER; Pruning Scheme = NONE; Nuclear Scheme = TREUTLER. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 75; Spherical Points = 302; Total Points = 1908346; Total Blocks = 13882; Max Points = 256; Max Functions = 485; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (6-31G AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-4, 9-12, 21-24, 33-34 entry H line 51 file PATH\envs\psi4\lib\share\psi4\basis\cc-pvdz-jkfit.gbs ; atoms 5-8, 13-20, 25-32, 35-36 entry C line 121 file PATH\envs\psi4\lib\share\psi4\basis\cc-pvdz-jkfit.gbs ; atoms 37-38, 41-42, 45-46, 49-50, 53-54, 57-58, 61-62, 65-66, 69-70, 73-74, 77-78, 81-82, 85-86, 89-90, 93-94, 97-98 entry CL line 667 file PATH\envs\psi4\lib\share\psi4\basis\cc-pvdz-jkfit.gbs ; atoms 39-40, 43-44, 47-48, 51-52, 55-56, 59-60, 63-64, 67-68, 71-72, 75-76, 79-80, 83-84, 87-88, 91-92, 95-96, 99-100 entry NA line 498 file PATH\envs\psi4\lib\share\psi4\basis\def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 4; Integrals threads: 4; Memory [MiB]: 16093; Algorithm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2709:18875,Toler,Tolerance,18875,https://psicode.org,https://github.com/psi4/psi4/issues/2709,1,['Toler'],['Tolerance']
Availability,"phinxman/source"".; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFOR",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3632,Error,Error,3632,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"ps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7400,Error,Error,7400,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,psi4 forum error: 502 Bad Gateway,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2868:11,error,error,11,https://psicode.org,https://github.com/psi4/psi4/issues/2868,1,['error'],['error']
Availability,psi4 installation failed-Segmentation fault (core dumped),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:38,fault,fault,38,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['fault'],['fault']
Availability,"psi4-core'; loading initial cache file /home/laz/build/psi4/psi4/objdir/psi4-core-prefix/tmp/psi4-core-cache-Release.cmake; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, CXX=GNU; -- Found TargetOpenMP: Found TargetOpenMP: /usr/lib/gcc/x86_64-linux-gnu/7/libgomp.so;/usr/lib/x86_64-linux-gnu/libpthread.so ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:97 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /home/laz/build/psi4/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:45 (find_dependency); CMakeLists.txt:25 (find_package). -- Configuring incomplete, errors occurred!; See also ""/home/laz/build/psi4/psi4/objdir/psi4-core-prefix/src/psi4-core-build/CMakeFiles/CMakeOutput.log"".; CMakeFiles/psi4-core.dir/build.make:108: recipe for target 'psi4-core-prefix/src/psi4-core-stamp/psi4-core-configure' failed; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-confi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041:3358,Error,Error,3358,https://psicode.org,https://github.com/psi4/psi4/issues/1041,1,['Error'],['Error']
Availability,pybind11 2.0.0 compiling error with gcc 5.4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577:25,error,error,25,https://psicode.org,https://github.com/psi4/psi4/issues/577,1,['error'],['error']
Availability,"r devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEPT {; -> 1393	 _LIBCPP_ASSERT_VALID_ELEMENT_ACCESS(__n < size(), ""vector[] index out of bounds"");; 1394	 return this->__begin_[__n];; 1395	}; 1396	; Target 0: (python) stopped.; (lldb) bt; * thread #1, queue = 'com.apple.ma",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3194:1230,error,error,1230,https://psicode.org,https://github.com/psi4/psi4/pull/3194,1,['error'],['error']
Availability,"r message I got is:. ```; Traceback (most recent call last):; File ""/home/sanctus/psi4conda/bin/psi4"", line 372, in <module>; exec(content); File ""<string>"", line 46, in <module>; File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/driver.py"", line 526, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 5424, in run_detcas; ref_wfn = scf_helper(name, **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1769, in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFERENCE'), **kwargs); File ""/home/sanctus/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1437, in scf_wavefunction_factory; wfn = core.ROHF(ref_wfn, superfunc). RuntimeError:; Fatal Error: Input DOCC array has the wrong dimensions; Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_1683815705191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; F 1 {}; symmetry c2v; """""".format(R)). --> energy('casscf'). ecp[R] = [get_variable('ci root 0 total energy'),; get_variable('ci root 1 total energy'),; get_variable('ci root 2 total energy')]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Input DOCC array has the wrong dimensions !; ! Error occurred in file: /home/conda/feedstock_root/build_artifacts/psi4_16838157 !; ! 05191/work/psi4/src/psi4/libscf_solver/hf.cc on line: 146 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3181:2173,Error,Error,2173,https://psicode.org,https://github.com/psi4/psi4/issues/3181,2,['Error'],['Error']
Availability,"rc/lib/libfrag/LibFragDriver.cc:184:76: error: unknown type name 'SharedFrags'; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:4: error: unknown type name 'FragItr'; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:188:7: error: use of undeclared identifier 'MonoEnd'; MonoEnd=Frags_->end(i);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:189:43: error: use of undeclared identifier 'MonoEnd'; did you mean 'MonoI'?; for (MonoI=Frags_->begin(i); MonoI!=MonoEnd; ++MonoI); ^~~~~~~; MonoI; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:186:12: note: 'MonoI' declared here; FragItr MonoI,MonoEnd;; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:238:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFra",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:2212,error,error,2212,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"re/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2420, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2325, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1543, in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule(), scf_wfn); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/empirical_dispersion.py"", line 210, in compute_energy; jobrec = qcng.compute(; File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/compute.py"", line 83, in compute; config = get_config(local_options=local_options); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/config.py"", line 308, in get_config; raise KeyError(""Number of jobs per node exceeds the number of available cores.""); KeyError: 'Number of jobs per node exceeds the number of available cores.'. ```. This job is submitted on a SLURM cluster with the following script:; ```; #!/bin/bash. #SBATCH --partition=compute-16core-64gb-preemptible; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=1; #SBATCH --output=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters.slurm.out; #SBATCH --job-name=test-C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters. source /home/jacobson/software/setup.psi4; export PSI_SCRATCH=/scratch/jacobson/; export OMP_NUM_THREADS=1; export MPI_NUM_THREADS=1; echo psi4 scratch set to $PSI_SCRATCH; fname=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters; python /home/jacobson/bin/psi4_wb97xd3_def2tzvp.py $fname"".xyz"" > $fname"".log""; ```. one cpu is available for the job. I tracked the issue to qcengine/config.py which seems not to recognize my host and then set a default of 2 for jobs_per_node. Then ncores / jobs_per_node is zero and a KeyError is rai",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548:2069,avail,available,2069,https://psicode.org,https://github.com/psi4/psi4/issues/2548,1,['avail'],['available']
Availability,removed redundant code in rhf hessian test file,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/894:8,redundant,redundant,8,https://psicode.org,https://github.com/psi4/psi4/pull/894,1,['redundant'],['redundant']
Availability,reporting on the forum:; http://forum.psicode.org/t/esp-cube-generation-failure/1827. related to #1871,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1932:72,failure,failure,72,https://psicode.org,https://github.com/psi4/psi4/issues/1932,1,['failure'],['failure']
Availability,"revious to QCEngine v0.26.0 (required by this Psi4 PR), the pairwise dispersion analysis returned by executable/classic/psi4-channel `dftd3` was scaled differently from that by `s-dftd3` and `dftd4` (any channel). This has been fixed. However, one must be consistent about QCEngine/Psi4/fsapt.py versions. A consistent set are QCEngine >=0.26.0 and `Empirical_Disp.dat` file generated in the course of `energy(""fisapt0-d"")` by this PR or later Psi4 (approx. v1.7.0 Psi4) and script `fsapt.py` released with Psi4 v1.7.0 or later. This is semi-enforced since v1.7 requires v0.26 (`fsapt.py` is a free agent). Another consistent set is QCEngine <0.26.0 and Psi4 and `fsapt.py` <v1.7. Mixing old Psi4 or fsapt.py with new QCEngine and classic dftd3 can yield wrong fisapt analysis, and this isn't trapped.; - [x] `psi4.core.Molecule.run_dftd3` and `qcdb.Molecule.run_dftd3` don't work with `s-dftd3`. Please file an issue if you really want this capability. `run_gcp` will use classic `gcp` or `mctc-gcp` interchangeably, whichever you have available. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] first look at `_engine_can_do` and observe that compared to good ol' dftd3, s-dftd3 (aka simple-dftd3) _can't_ do d2 and by default does d3 variants with ATM dispersion built in (s9=1.0); - [x] in contrast, mctc-gcp is a drop-in replacement for good ol' gcp (probably b/c I stuck with cmdline and didn't write an elaborate interface on top of it :-); - [x] this goes with https://github.com/MolSSI/QCEngine/pull/385; - [x] I didn't think we could just drop the most popular psi4 addon and demand replacement, so all of dftd3/s-dftd3/gcp/mctc-gcp work with psi4. s-dftd3 and mctc-gcp are preferred if present; - [x] need docs; - [x] status (special qcng = v0.26.0 unreleased at time of writing); - [x] PR psi4 wit",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2791:2981,avail,available,2981,https://psicode.org,https://github.com/psi4/psi4/pull/2791,1,['avail'],['available']
Availability,"rgy', **kwargs); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 225, in nbody_gufunc; component_results = compute_nbody_components(func, method_string, metadata); File ""/opt/vulcan/opt/vulcan/linux-x86_64/intel-16.0.1/psi4-master-avducsgnonqrcpftiesq432gagal6y7r/lib/psi4/driver/driver_nbody.py"", line 411, in compute_nbody_components; current_mol = molecule.extract_subsets(list(pair[0]), ghost). RuntimeError: ; Fatal Error: Coordinates have been set in the wrong order; Error occurred in file: /home/vulcan/vadmin/programs/psi4/psi4/src/psi4/libmints/coordentry.cc on line: 239 ; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Molecule::operator=(psi::Molecule const&); psi::Molecule::Molecule(psi::Molecule const&); ```. Given that the user's problem is failure for the SCF to converge, I can only assume some change since the 1.2.1 release is at fault. I've been able to get the crash with the following simplified input file:; ```; molecule dimer {; 1 1; C1 0.000000 0.513942 0.000000; N2 0.628754 1.703580 0.000000; H3 0.109407 2.571793 0.000000; H4 1.638743 1.762759 0.000000; N5 -1.342220 0.473050 0.000000; H6 -1.890262 1.323784 0.000000; H7 -1.839824 -0.407373 0.000000; N8 0.700723 -0.623756 0.000000; H9 1.712010 -0.555355 0.000000; C10 0.085273 -1.957243 0.000000; H11 0.892679 -2.697454 0.000000; H12 -0.522596 -2.104233 0.905528; H13 -0.522596 -2.104233 -0.905528; --; -1 1; I N8 3.6 H9 90.0 C1 90.0; }. basis {. assign H def2-tzvpd; assign C def2-tzvpd; assign N def2-tzvpd. assign I def2-tzvpd; }. set guess sad; set scf_type df; set maxiter 500; set soscf true; set soscf_max_iter 15; set soscf_conv 1.e-4; set freeze_core false ## false for ions. energy(""mp2"", bsse_type = ""cp""); ```; This can probably be simplified further. It would be worth investigating w",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1325:1660,failure,failure,1660,https://psicode.org,https://github.com/psi4/psi4/issues/1325,1,['failure'],['failure']
Availability,"ring system: Ubuntu; cmake -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/gdma-2.2.06.pdf"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; -- Documentation targets available: sphinxm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:1695,Error,Error,1695,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"ring the HF energy of the first Brueckner iteration as `SCF TOTAL ENERGY` and the quantities from the final B iteration as `CCSD TOTAL ENERGY`, `CCSD(T) TOTAL ENERGY`, and `(T) CORRECTION ENERGY`. In the below, I've reworked it so:; * final B energies get their own qcvars `(BCCD|BCCD(T)) (TOTAL|CORRELATION) ENERGY` in accordance with the principle that `energy(mtd)` should set `mtd TOTAL ENERGY`; * MP2 and CCSD qcvars are now collected from the first B iteration, not the last, so they have canonical values. `SCF TOTAL ENERGY` still from first B iteration.; * `(BCCD|BCCD(T)) CORRELATION ENERGY` now defined as total E of last B iteration minus HF of first B iteration. This is in accordance with the pattern that `mtd CORRELATION ENERGY` = `mtd TOTAL ENERGY` - `SCF TOTAL ENERGY`, but it is admittedly wacky when applied to Brueckner. It is, however, the same way the orbital-optimized methods of occ/dfocc have been handled. The OO methods additionally set a `mtd REFERENCE CORRECTION ENERGY` so that one can recover the ref/corl split of the final OO iteration. That could be added to the BCCD methods. Does the above sound ok, or does it need further reworking? I also tightened up the B r_conv formula a bit because the standard tests (not shown in PR) weren't matching (to 1.e-6) the highly converged values under default conditions (e_conv = 6 --> brueckner_r_conv =4). I've also been on a rampage of late to better (and automatically) document what methods are available under what detailed conditions (e.g., dertype, reference, conv/df/cd type, all-electron/frozen-core). I'd like to add the table snapshotted below to the main [CC docs page](https://psicode.org/psi4manual/master/cc.html). Unfortunately, it doesn't cover excited states or properties, so it can't replace the existing summary table, but it does provide more detail. Does it look ok, and are there any cc* capabilities in the ground-state realm that I've missed?. **Note:** No worries if the CI on this fails. I've copi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2708:1135,recover,recover,1135,https://psicode.org,https://github.com/psi4/psi4/pull/2708,1,['recover'],['recover']
Availability,"ripts\psi4-script.py"", line 336, in <module>; exec(content). File ""<string>"", line 31; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: truncated \UXXXXXXXX escape. Printing out the relevant lines from the Psithon --> Python processed input file:. !----------------------------------------------------------------------------------!; ! !; ! (unicode error) 'unicodeescape' codec can't decode bytes in position 2-3: !; ! truncated \UXXXXXXXX escape !; ! !; !----------------------------------------------------------------------------------!; ```; I could track down the error to be raised from here:; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L333; when trying to execute 'content'.; The 'content' variable contains single backslashes in the windows path string (e.g. `'C:\Users'` instead of the correct `r'C:\Users'` or 'C:\\Users'`) which is responsible for the error.; I was able to fix the error via inserting; ```python; import platform; if platform.system() == ""Windows"":; content = content.replace(""'C:"", ""r'C:"").replace('""C:', 'r""C:'); ```; directly before aforementioned exec command.; That's quite a quick-and-dirty fix and I think it should be solved somewhere in the method called in; https://github.com/psi4/psi4/blob/56738543906df86f94f2ee69b518d699b4a1ecd9/psi4/run_psi4.py#L315; though I don't know how/where exactly to avoid unwanted side effects. Here's the whole traceback:; ```; ---------------------------------------------------------------------------; QiskitNatureError Traceback (most recent call last); <ipython-input-8-4cd496b3ad7e> in <module>; ----> 1 res = ucc_gsc.solve(es_problem); 2 ; 3 print(res). ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\algorithms\ground_state_solvers\ground_state_eigensolver.py in solve(self, problem, aux_operators); 80 # note that ``aux_ops`` contains not only the transformed ``aux_operators`` passed by the; 81 # user but",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:1173,error,error,1173,https://psicode.org,https://github.com/psi4/psi4/issues/2228,1,['error'],['error']
Availability,"river/driver.py"", line 548, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/proc.py"", line 685, in select_lccd; return func(name, **kwargs); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/proc.py"", line 2095, in run_dfocc; dfocc_wfn = core.dfocc(ref_wfn); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 375, in extrapolate; coeffs = self.diis_coefficients(); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 254, in diis_coefficients; B[i, j] = self.get_dot_product(i, j); File ""/home/tu/tu_tu/tu_ctibc01/prog/PSI4/1.5_devel/lib/psi4/driver/procrouting/diis.py"", line 198, in get_dot_product; dot_product += Rix.vector_dot(Rjx). RuntimeError: ; Fatal Error: Matrix::vector_dot: Dimensions do not match!. Error occurred in file: /home/tu/tu_tu/tu_ctibc01/prog/psi4/psi4/psi4/src/psi4/libmints/matrix.cc on line: 1703; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Matrix::vector_dot(psi::Matrix const*). Printing out the relevant lines from the Psithon --> Python processed input file:; energy('scf',write_orbitals='scf_mos'); Avals=[0.00, 0.05, 0.10, 0.12, 0.15, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00]; for A in Avals:; psi4.core.print_out(""running step %5.2f"" % A); core.set_global_option(""REMP_A"", A); --> energy('oremp',restart_file='scf_mos'); core.set_global_option(""MO_READ"", ""true""); psi4.core.print_out(""""). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::vector_dot: Dimensions do not match! !; ! Error occurred in file: !; ! /home/tu/tu_tu/tu_ctibc01/prog/p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2591:2043,Error,Error,2043,https://psicode.org,https://github.com/psi4/psi4/issues/2591,1,['Error'],['Error']
Availability,"river/qcdb/molecule.py; @@ -1470,11 +1470,11 @@ class Molecule(LibmintsMolecule):; # * this can legitimately happen if total chg or mult has been set; # independently b/c fragment chg/mult not reset. so try again.; print(; - """"""Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred.""""""; + """"""Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.""""""; ); molrec['fragment_charges'] = [None] * len(fragments); molrec['fragment_multiplicities'] = [None] * len(fragments); - validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); + validated_molrec = qcel.molparse.from_arrays(speclabel=False, nonphysical=True, verbose=0, domain='qm', **molrec); forgive.append('fragment_charges'); forgive.append('fragment_multiplicities'); compare_molrecs(validated_molrec, molrec, 'to_dict', atol=1.e-6, forgive=forgive, verbose=0). ```. Uncomment:; https://github.com/MolSSI/QCElemental/blob/master/qcelemental/molparse/from_schema.py#L85; For numerical hessians (FINDIF) one needs to set `nonphysical=True,` above as a work around or figure out the following error:. ```; File ""/Users/kruse/qc/psi4.bin/lib/psi4/driver/driver_findif.py"", line 417, in assemble_gradient_from_energies; mol = core.Molecule.from_schema(findifrec[""molecule""], verbose=0); File ""/Users/kruse/qc/psi4.bin/lib/psi4/driver/molutil.py"", line 200, in molecule_from_schema; molrec = qcel.molparse.from_schema(molschema, verbose=verbose); File ""/Users/kruse/qc/miniconda3/envs/p4dev/lib/python3.7/site-packages/qcelemental/molparse/from_schema.py"", line 85, in from_schema; nonphysical=nonphysical,. NameError: name 'nonphysical' is not defined; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1903:1952,error,error,1952,https://psicode.org,https://github.com/psi4/psi4/issues/1903,1,['error'],['error']
Availability,"rix::vector_dot: Dimensions do not match!. Error occurred in file: /home/tu/tu_tu/tu_ctibc01/prog/psi4/psi4/psi4/src/psi4/libmints/matrix.cc on line: 1703; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::Matrix::vector_dot(psi::Matrix const*). Printing out the relevant lines from the Psithon --> Python processed input file:; energy('scf',write_orbitals='scf_mos'); Avals=[0.00, 0.05, 0.10, 0.12, 0.15, 0.20, 0.21, 0.22, 0.23, 0.24, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95, 1.00]; for A in Avals:; psi4.core.print_out(""running step %5.2f"" % A); core.set_global_option(""REMP_A"", A); --> energy('oremp',restart_file='scf_mos'); core.set_global_option(""MO_READ"", ""true""); psi4.core.print_out(""""). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::vector_dot: Dimensions do not match! !; ! Error occurred in file: !; ! /home/tu/tu_tu/tu_ctibc01/prog/psi4/psi4/psi4/src/psi4/libmints/matrix.cc on !; ! line: 1703 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Matrix::vector_dot(psi::Matrix const*) !; ! !; !----------------------------------------------------------------------------------!; ```; (the example uses a custom method but the problem should be reproducible with DF-OMP2).; The molecule in question has 86 occupied and 773 virtual correlated orbitals, giving rise to (depending on the storage scheme) ~2.2E9 amplitudes. The root cause of the issue seems to be missing type casts to size_t in libmints/matrix.cc. Inserting debug printout shows that the size calculation of the second vector in vector_dot (line 1699) and axpy(line 1443) overflows, while the size calculations of the first vector have ""e",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2591:2972,Error,Error,2972,https://psicode.org,https://github.com/psi4/psi4/issues/2591,2,['Error'],['Error']
Availability,"rnal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". Those have all been removed. Where possible (and up to ""4""), replacements are suggested. This required a good amount of changes to the tests.; - [x] the gradient and Hessian qcvars were previously of dimension appropriate for the subsystem. Now, they have been padded with zeros and have supersystem dimensions.; * QCManyBody changes; - [x] most of the operative code for many-body analyses was moved into qcmb. what's left is a derived class that turns psi4 syntax into ManyBodyInpu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3160:1851,error,error,1851,https://psicode.org,https://github.com/psi4/psi4/pull/3160,1,['error'],['error']
Availability,"roblem which will only get worse as new separate J and K algorithms like CFMM are added. Additionally, the scattering of separate J and K build algorithms throughout the JK class in Psi4 in an non-standardized fashion is unfortunate from a code design perspective. The goal of the CompositeJK project is, ultimately, to create a new JK class (_CompositeJK_) that offers a proper framework for combining separate J and K algorithms for use in JK construction. Such a class will provide a home for any new separate J and K algorithm that gets added to Psi4 in the future (such as the in-progress CFMM). Additionally, the CompositeJK class will be designed in such as a way to enable arbitrary combinations of any available separate J and K build algorithm through a single JK subclass. This arbitrary mixing and matching is planned to be accesible in a user-friendly way. DFJLinK is the first step to this process. DFJLinK, itself, is a new JK subclass that combines the integral-direct density fitted J build algorithm from DFJCOSK with the LinK algorithm previously available in DirectJK. LinK was previously available for use in Psi4 via DirectJK, but was always disrecommended due to its combination with a normal DirectJK implementation for J construction. In conjunction with Direct DF-J to form the Coulomb matrix, LinK performs much better. Some benchmarks comparing the Direct DF-J + LinK algorithm combination to other JK options in Psi4, for water clusters of varying sizes at the cc-pVDZ basis set, are attached:. ![Timing Plots of Water Clusters at cc-pVDZ](https://user-images.githubusercontent.com/26306559/198107808-42f3b855-13f0-4e14-8a50-c0402c16b94f.png). Small, non-diffuse basis sets are the specialty of Direct DF-J + LinK, and it reflects here, with DFJLinK outperforming the other integral-direct JK options for most of the water clusters, and being the fastest JK option tested overall for large water clusters. For specific comparisons to Direct DF-J + COSX, the closest curre",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:1959,avail,available,1959,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['avail'],['available']
Availability,"rocedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File [REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/proc.py"", line 2455, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/proc.py"", line 1670, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 86, in scf_compute_energy; self.iterations(); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 412, in scf_iterate; for engine_used in self.diis(Dnorm):; File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/scf_proc/subclass_methods.py"", line 111, in _RHF_diis; return self.diis_manager_.extrapolate(self.Fa(), Dnorm=Dnorm); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/diis.py"", line 407, in extrapolate; coeffs = m * initial_coefficient_function() + (1 - m) * self.diis_coefficients(); File ""[REMOVED BASE DIRECTORY]/lib/psi4/driver/procrouting/diis.py"", line 288, in adiis_coefficients; raise Exception(""ADIIS minimization failed. File a bug, and include your entire input and output files.""). Exception: ADIIS minimization failed. File a bug, and include your entire input and output files. Printing out the relevant lines from the Psithon --> Python processed input file:; no_com; symmetry c1; """""",""mol""); core.IO.set_default_namespace(""mol""); mol.update_geometry(); --> e, wf = energy('wb97m-v',return_wfn=True,). !----------------------------------------------------------------------------------!; ! !; ! ADIIS minimization failed. File a bug, and include your entire input and output !; ! files. !; ! !; !----------------------------------------------------------------------------------!. Psi4 stopped on: Friday, 22 July 2022 01:19PM; Psi4 wall time for execution: 0:02:55.44. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:13479,error,error,13479,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['error'],['error']
Availability,rollback detect dynamic Boost,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/425:0,rollback,rollback,0,https://psicode.org,https://github.com/psi4/psi4/pull/425,1,['rollback'],['rollback']
Availability,"rop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -mkl=parallel -qopenmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=__restrict__ -std=c99 -fPIC -mkl=parallel -qopenmp -O3 -ip -DNDEBUG -xHost; -- Fortran compiler flags: -w -fpp -assume byterecl -DVAR_IFORT -fPIC -nosave -mkl=parallel -qopenmp -O3 -ip -xHost; -- Libraries : -mkl=parallel; -- Definitions : USE_FCMANGLE_H;SYS_LINUX;HAS_CXX11;HAS_CXX11_FUNC;HAS_CXX11_AUTO;HAS_CXX11_AUTO_RET_TYPE;HAS_CXX11_CONSTEXPR;HAS_CXX11_CSTDINT_H;HAS_CXX11_DECLTYPE;HAS_CXX11_INITIALIZER_LIST;HAS_CXX11_LAMBDA;HAS_CXX11_LONG_LONG;HAS_CXX1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:3954,Error,Error,3954,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"ror at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DNDEBUG -Wno-unused; -- C compiler flags : -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3; -- Fortran compiler flags: -fcray-pointer -DVAR_GFORTRAN -DVAR_MFDS -fno-range-check -fautomatic -fPIC -fimplicit-none -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -funroll-all-loops -w -ftree-vectorize; -- Libraries : /cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so;/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so; -- Definitions : USE_FCMANGLE_H;SYS_L",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7812,Error,Error,7812,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"ror at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi4-1.0]$; ```; At the end of the output of the setup script, the user is pointed to CMake log files:. ```; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeOutput.log"".; See also ""/scratch/appssf/psi4-1.0/objdir/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:1207,Error,Error,1207,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"ror logs and output are attached (check bottom of the post). Any suggestions ? . ```; ./setup --prefix=""/home/vayu/ChemPackage/psi4/opt_ins"" --cc=icc --cxx=icpc --fc=ifort --mkl=parallel build; Configuring system: Ubuntu; cmake -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/psi4banner.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/AlphaMOs.png"" to ""/home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/build/doc/sphinxman/source"".; Error copying file (if different) from ""/home/vayu/ChemPac",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:1579,Error,Error,1579,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['Error'],['Error']
Availability,"rray_to_vector(int n, const int* array)` to initialize some of its `std::vector<int>` members by copying the innards of `Dimension` objects. Unfortunately this is happening through the rather inelegant mechanism of implicitly calling `Dimension::operator const int*() const`, which is set to be removed eventually. This PR replaces all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization. Now, this could in theory lead to a change in behavior, as the former only copies the first `n` elements of the array inside the Dimension object instead of the entire thing, but in practice that does not seem to be happening. As far as I can tell, for trouble to happen it would require an internally inconsistent `Wavefunction` object or `libmoinfo` trying to use only a subset of the irreps. Nevertheless, I have added checks to ensure that any condition that would lead to an unpredictable change in behavior after this PR, results in a crash instead. I don't think it should ever happen, but internal consistency checks are probably not a bad idea anyways. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace all calls of `convert_int_array_to_vector` in `libmoinfo` with simple assignment-initialization; - [x] Add internal consistency checks to guard against possible hazards; - [x] Remove now-unused function `MOInfoBase::convert_int_array_to_vector`. ## Questions; - If everyone else is confident that the checks are redundant I _could_ remove them. ## Checklist; - [x] No new features; - [x] No new errors in the full test suite. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3177:2045,redundant,redundant,2045,https://psicode.org,https://github.com/psi4/psi4/pull/3177,2,"['error', 'redundant']","['errors', 'redundant']"
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; 	Nuclear repulsion energy..........................................PASSED; ========================================================",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:42400,Error,Error,42400,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; Case Study Test of all SCF algorithms/spin-degeneracies: Singlet-Triplet O2; -Integral package: ERD; -Nuclear Repulsion:; 	Triplet ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:7918,Error,Error,7918,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; Case Study Test of all SCF algorithms/spin-degeneracies: Singlet-Triplet O2; -Integral package: SIMINT; -Nuclear Repulsion:; 	Tripl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:13427,Error,Error,13427,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; -------------------------------------------------------------- Captured stdout call --------------------------------------------------------------; Performing finite difference calculations; 5 displacements needed ... 1; __________________________________________________________",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:30928,Error,Error,30928,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; ________________________________________________________________ test_psi4_basic _________________________________________________________________. def test_psi4_basic():; """"""tu1-h2o-energy""""""; #! Sample HF/cc-pVDZ H2O computation; ; h2o = psi4.geometry(""""""; O; H 1 0.96; H 1 0.9",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:20728,Error,Error,20728,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; _________________________________________________________________ test_psi4_cas __________________________________________________________________. def test_psi4_cas():; """"""casscf-sp""""""; #! CASSCF/6-31G** energy point; ; geom = psi4.geometry(""""""; O; H 1 1.00; H 1 1.00 2 103.1; """,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:23859,Error,Error,23859,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,"rrect wavefunction from the provided information; """"""; ; if core.has_option_changed(""SCF"", ""DFT_DISPERSION_PARAMETERS""):; modified_disp_params = core.get_option(""SCF"", ""DFT_DISPERSION_PARAMETERS""); else:; modified_disp_params = None; ; # Figure out functional; if functional is None:; superfunc, disp_type = dft_functional.build_superfunctional(core.get_option(""SCF"", ""DFT_FUNCTIONAL"")); elif isinstance(functional, core.SuperFunctional):; superfunc = functional; disp_type = False; elif isinstance(functional, (str, unicode)):; superfunc, disp_type = dft_functional.build_superfunctional(functional); else:; raise ValidationError(""Functional %s is not understood"" % str(functional)); ; # Build the wavefunction; core.prepare_options_for_module(""SCF""); if reference in [""RHF"", ""RKS""]:; > wfn = core.RHF(ref_wfn, superfunc); E RuntimeError: ; E Fatal Error: You must add; E ; E 	symmetry c1; E ; E to the molecule{} block to run the PCM code.; E Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsipcm/psipcm.cc on line: 104; E The most recent 5 function calls were:; E ; E psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); E psi::PCM::PCM(psi::Options&, std::shared_ptr<psi::PSIO>, int, std::shared_ptr<psi::BasisSet>); E psi::scf::HF::common_init(); E psi::scf::HF::HF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>, psi::Options&, std::shared_ptr<psi::PSIO>); E psi::scf::RHF::RHF(std::shared_ptr<psi::Wavefunction>, std::shared_ptr<psi::SuperFunctional>). /home/joao/miniconda3/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1008: RuntimeError; __________________________________________________________________ test_psi4_cc __________________________________________________________________. def test_psi4_cc():; """"""cc1""""""; #! RHF-CCSD 6-31G** all-electron optimization of the H2O molecule; ; h2o = psi4.geometry(""""""; O; H ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:27287,Error,Error,27287,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['Error'],['Error']
Availability,run error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/266:4,error,error,4,https://psicode.org,https://github.com/psi4/psi4/issues/266,1,['error'],['error']
Availability,"ry Basis <==. Basis Set: DEF2-TZVPPD; Blend: DEF2-TZVPPD; Number of shells: 240; Number of basis functions: 648; Number of Cartesian functions: 732; Spherical Harmonics?: true; Max angular momentum: 3. ==> DFT Potential <==. => LibXC <=. Version 5.1.6; S. Lehtola, C. Steigemann, M. J. Oliveira, and M. A. Marques, SoftwareX 7, 1 (2018) (10.1016/j.softx.2017.11.002). => Composite Functional: WB97M-V <= . wB97M-V Hyb-GGA Exchange-Correlation Functional. N. Mardirossian and M. Head-Gordon, J. Chem. Phys. 144, 214110 (2016) (10.1063/1.4952647). Deriv = 1; GGA = TRUE; Meta = TRUE. Exchange Hybrid = TRUE; MP2 Hybrid = FALSE. => Exchange-Correlation Functionals <=. 1.0000 wB97M-V exchange-correlation functional. => Exact (HF) Exchange <=. 0.8500 HF,LR [omega = 0.3000]; 0.1500 HF . => LibXC Density Thresholds <==. XC_HYB_MGGA_XC_WB97M_V: 1.00E-13 . => VV10 Non-Local Parameters <=. VV10 B = 6.0225E-02; VV10 C = 7.4505E-01. => Molecular Quadrature <=. Radial Scheme = EM; Pruning Scheme = ROBUST; Pruning Type = REGION; Nuclear Scheme = SBECKE. Blocking Scheme = OCTREE; BS radius alpha = 1; Pruning alpha = 1; Radial Points = 99; Spherical Points = 590; Total Points = 912458; Total Blocks = 6145; Max Points = 256; Max Functions = 640; Weights Tolerance = 1.00E-15. => Loading Basis Set <=. Name: (DEF2-TZVPPD AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-6, 13-18 entry C line 198 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs ; atoms 7-12, 19-24 entry H line 18 file [REMOVED BASE DIRECTORY]/psi4/basis/def2-universal-jkfit.gbs . ==> Integral Setup <==. ==> DiskDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: Yes; Omega: 3.000E-01; OpenMP threads: 14; Integrals threads: 14; Memory [MiB]: 337; Algorithm: Disk; Integral Cache: NONE; Schwarz Cutoff: 1E-12; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (DEF2-TZVPPD AUX); Blend: DEF2-UNIVERSAL-JKFIT; Number of shells: 372; Number of basis functions: 1116; Number of Car",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641:9433,ROBUST,ROBUST,9433,https://psicode.org,https://github.com/psi4/psi4/issues/2641,1,['ROBUST'],['ROBUST']
Availability,"s a cutoff for small weights. The grid points with small weights are not included in the final grid. Such a cutoff is a standard procedure in many programs. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] expert option `DFT_WEIGHTS_TOLERANCE` keyword (current default `1e-14`).; - [x] small error overview added; - [x] together with pruning ca. 40% faster calculation for C60 compared to `v1.3` :-); - [x] simple test added. ## Questions; - [x] which default value? -> `1e-15` conservative or `1e-14` like in ORCA. ## Checklist; - [x] all `ctest -L dft` pass. ## Status; - [x] Ready for review; - [x] Ready for merge. ------; water dimer (RKS total energy): `PBE/aug-cc-pVTZ (99,520)` econv=1e-10 dconv=1e-8. | tolerance | error | #points |; | --- | --- | ---|; | off | 0.0 | 350460 | ; | 1e-30 | 1.36e-12 | 349417 |; | 1e-25 | 1.65e-12 | 348670 |; | 1e-20 | 1.65e-12 | 346918 |; | 1e-18 | 1.68e-12 | 345747 |; | 1e-16 | 1.63e-11 | 340646 |; | 1e-15 | 2.74e-11 | 339647|; | 1e-14 | 5.73e-09 | 335089 |; | 1e-13 | 3.65e-08 | 331285 |; | 1e-12 | 3.18e-07 | 326462 |. c2 sym. C60 isomer (RKS total energy): `PBE/aug-cc-pVDZ (75,302)` econv=1e-10 dconv=1e-8. | tolerance | error | #points |; | --- | --- | ---|; | off | 0.0 | 1359000 | ; | 1e-30 -| 3.17e-10| 1229846|; | 1e-25 | -5.34e-10| 1209622|; | 1e-20 | 5.94e-10 |1183674|; | 1e-18 | 5.41e-10 |1171102|; | 1e-16 | -6.25e-10 |1156776|; | 1e-15 | 2.48e-09| 1131228|; | 1e-14 | 3.54e-09| 1123018|; | 1e-13 | 1.25e-07 |1110668 |; | 1e-12 |1.07e-06 |1085824 |. -----. *further timings*; C60 fullerene (C2h) :PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; comparison to `v1.3.1`; * pruning `ROBUST`=1.33 // `1361880/1953000` grid points // dE=2E-11; * pruning `TREUTLER=1.36`// `1064520/1953000` grid points // dE=-4E-05; * pruning `ROBUST` + `screening(1e-14)` = 1.39; `1070388/1953000` grid points //dE=-2E-09; * pruning `TREUTLER` + `screening(1e-14)` = 1.44; `773028/1953000` grid points //dE=-4E-05",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1581:1329,toler,tolerance,1329,https://psicode.org,https://github.com/psi4/psi4/pull/1581,4,"['ROBUST', 'error', 'toler']","['ROBUST', 'error', 'tolerance']"
Availability,"s corresponds to L2 at https://github.com/evaleev/libint/pull/233 . ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switches psi4 to use a Libint2 forked from upstream in 2022, not in 2019; - [x] changes a couple cmake knobs and changes the required components to EFV's preferred syntax (`g5` -> `eri_c4_d1_l5`); - [x] avoided grid points discrepancies that I had hit by implementing Holger's suggestion.; - [x] I and others have reported needing `pybind11::headers` in extra places, so adding those; - [x] The defines `INT_NCART` and `INT_CARTINDEX` in psi https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/integral.h#L46-L64 are also in L2. They used to be `#define` in the current/2019 fork of L2, but now in L2 master, it’s an inline function. To avoid errors like the below, they're namespaced and inlined here now, too. ```; < namespace libint2 {; < inline int INT_NCART(int am) { return ((am + 2) * (am + 1)) >> 1; }; < }; < LIBINT_DEPRECATED(""please use libint2::INT_NCART instead""); < inline int INT_NCART(int am) { return libint2::INT_NCART(am); }; ---; > #define INT_NCART(am) ((((am)+2)*((am)+1))>>1); ```; With that situation (define in psi and inlined in L2), I get lots of; ```; In file included from /psi/gits/hrw-pybind/psi4/src/psi4/libmints/integral.cc:28:; /psi/gits/libint2-efv/install-p01/include/libint2/cgshell_ordering.h:104:12: error: expected unqualified-id before 'int'; 104 | inline int INT_CARTINDEX(unsigned int am, int i, int j) {; | ^~~~~~~~~~~~~; ```; I can fix the problem by renaming in psi to `INT_NCART_PSI` and `INT_CARTINDEX_PSI`. What's a cleaner solution than renaming? Should we inline? Or add to the `psi {}` namespace?. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge **SQUASH**",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2413:1510,error,error,1510,https://psicode.org,https://github.com/psi4/psi4/pull/2413,1,['error'],['error']
Availability,"s function: 32; Number of Cartesian functions: 34; Spherical Harmonics?: true; Max angular momentum: 2. => Loading Basis Set <=. Name: (AUG-CC-PVDZ AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1 entry LI line 59 file /home/filip/software/psi4-1.4rc/share/psi4/basis/def2-qzvpp-jkfit.gbs ; atoms 2 entry H line 70 file /home/filip/software/psi4-1.4rc/share/psi4/basis/aug-cc-pvdz-jkfit.gbs . Computing basis projection from 3-21G to AUG-CC-PVDZ. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 32 32 0 0 0 0; -------------------------------------------------------; Total 32 32 1 0 0 1; -------------------------------------------------------. ==> Integral Setup <==. DFHelper Memory: AOs need 0.001 GiB; user supplied 0.715 GiB. Using in-core AOs. ==> MemDFJK: Density-Fitted J/K Matrices <==. J tasked: Yes; K tasked: Yes; wK tasked: No; OpenMP threads: 1; Memory [MiB]: 732; Algorithm: Core; Schwarz Cutoff: 1E-12; Mask sparsity (%): 0.0000; Fitting Condition: 1E-10. => Auxiliary Basis Set <=. Basis Set: (AUG-CC-PVDZ AUX); Blend: AUG-CC-PVDZ-JKFIT + DEF2-QZVPP-JKFIT; Number of shells: 29; Number of basis function: 83; Number of Cartesian functions: 95; Spherical Harmonics?: true; Max angular momentum: 3. Minimum eigenvalue in the overlap matrix is 3.7125823143E-03.; Using Symmetric Orthogonalization. SCF Guess: Orbitals guess was supplied from a previous computation. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-UHF iter 0: -0.49904529387990 -4.99045e-01 5.81466e-04 ; @DF-UHF iter 1: -0.49933835527994 -2.93061e-04 9.46849e-05 DIIS; @DF-UHF iter 2: -0.49935062691594 -1.22716e-05 2.23284e-05 DIIS; @DF-UHF iter 3: -0.49935159814175 -9.71226e-07 4.41164e-06 DIIS; @DF-UHF iter 4: -0.49935164375895 -4.56172e-08 5.33254e-07 DIIS; @DF-UHF iter 5: -0.49935164423349 -4.74539e-10 5.00344e-08 DIIS; @DF-UHF iter 6: -0.49935164423748 -3.99308e-12 6",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1830:8120,Mask,Mask,8120,https://psicode.org,https://github.com/psi4/psi4/issues/1830,1,['Mask'],['Mask']
Availability,"s of C; (n = 1): 275 ; (n = 1): 275 ; Asym: 0, Bsym: 0, Csym: 0; Mismatch in index Ha = 0; ```. Additionally, the following error message is given:; ```; Traceback (most recent call last):; File ""/oasis/tscc/scratch/ebullvul/projects/POPC/timings/debug/psi4test/psi4_ccsdt.py"", line 28, in <module>; e = psi4.energy(model, molecule=mol); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/driver.py"", line 526, in energy wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 989, in select_ccsd_t_ return func(name, **kwargs); File ""/home/ebullvul/anaconda3/envs/psi4/lib/python3.10/site-packages/psi4/driver/procrouting/proc.py"", line 2898, in run_ccenergy core.cctransort(ref_wfn); RuntimeError: ; Fatal Error: Matrix::gemm error: Number of rows and columns do not match.; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1670993662927/work/psi4/src/psi4/libmints/matrix.cc on line: 1389The most recent 5 function calls were:. psi::Matrix::gemm(bool, bool, double, psi::Matrix const*, psi::Matrix const*, double); psi::Matrix::transform(psi::Matrix const&, psi::Matrix const&, psi::Matrix const&); ```. I am not technically knowledgeable enough to interpret the information about the 'A', 'B', and 'C' matrices in the log file, but it seems like the problem is that their dimensions do not match. Additionally, I can also report that the calculation works if ANY of the following changes are made to the input:; 1) The ghost atoms are removed.; 2) The non-augmented basis set is used. (cc-pvtz rather than aug-cc-pvtz); 3) If {'cc_type': 'df'} is passed to psi4.set_options() to do density-fitted coupled cluster. I installed the stable branch of psi4 through anaconda, I have version ""1.7+6ce35a5"". Let me know if there is any more information you need to help solve this issue. The full log file from the CC",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916:2698,Error,Error,2698,https://psicode.org,https://github.com/psi4/psi4/issues/2916,1,['Error'],['Error']
Availability,"s out-of-date with psi4 master's requirements. I, for one, don't often use `psi4-dev` b/c I want more flexibility with switching out packages. **So, I'd be glad to hear thoughts on what form and contents the build helpers should take. A few plans and questions below, but any feedback appreciated.**. 1. Do you want docker images of the stuff that was in `psi4-dev`? I think from PsiCon2022 the answer is yes.; 2. Do you want minimal (build tools & req'd deps) or maximal (+ optional addons) or micro (no build tools, just L2, g2g, libxc, qcng, scipy, pytest) or several of those choices Docker images? (I have one vote for minimal.); 3. Docker images are hefty (~600MB for the built psi4). Can I just push them to a `latest` tag and overwrite old ones, or does there need to be a history?; 4. For Docker of psi4 itself, I'm only doing linux-64 (https://hub.docker.com/r/psi4/psi4/tags). Since docker is usually run VM-like, is that all developers want, or should I be building containers for other arch? Certainly I have the other-arch conda pkgs available -- it's just a matter of figuring out docker from them.; 5. I can build singularity/apptainer images from the Docker images, but I haven't figured out how to upload them yet. _For devs_, are apptainers wanted, or will docker alone do?; 6. I'll probably revive the `psi4-dev` pkg, just because it is simple and durable. (And it's the easiest way to convey the Intel-atop-GNU flags.) It'll be a `conda install psi4/label/dev::psi4-dev -c conda-forge` access. Thoughts on improving it?; 7. Those `devtools/*/*buildrun*yaml` env specs are semi-auto-generated from the ecosystem GHA. Are they handy enough to maintain and promote, even though they don't come with `cmake` lines?; 8. Any other build tools to support other workflows wanted? It's easier to set them up all at once. ### Psi4 Conda Packages at Present with Channels. Built psi4 packages are slightly off-topic, but I thought this could be a handy reference for the more exotic ones. N",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:4220,avail,available,4220,https://psicode.org,https://github.com/psi4/psi4/issues/2965,1,['avail'],['available']
Availability,"s to symmetry-adapted pure angular momentum functions. If `d` or higher angular momentum functions are present, then choosing to transform from Cartesian functions means you have more atomic orbitals than basis functions, so the row and column dimensions don't match. The transformation isn't even square, let alone invertible, so of course `sotoao()` returns nonsense. The following input file almost demonstrates the problem. You'll need to PyBind the `PetiteList` initializer over as well for it to run. ```; molecule mol {; 0 3; symmetry c1; C 0.0000000000 0.0000000000 -0.5928430915; H -0.0000000000 0.9469373770 -1.1509808737; H 0.0000000000 -0.9469373770 -1.1509808737; }. basis = core.BasisSet.build(mol, ""ORBITAL"", ""cc-pvdz"", quiet=True); factory = core.IntegralFactory(basis). # np.dot(so2ao, ao2so) should always be the identity. The functions are inverses. # We have a problem!; petite = core.PetiteList(basis, factory, True); so2ao = petite.sotoao().nph[0]; print(so2ao); print(so2ao.shape) # (24, 25) ; ao2so = petite.aotoso().nph[0]; print(np.dot(so2ao, ao2so)). # Works fine!; petite = core.PetiteList(basis, factory, False); so2ao = petite.sotoao().nph[0]; print(so2ao); print(so2ao.shape) # (24, 24) ; ao2so = petite.aotoso().nph[0]; print(np.dot(so2ao, ao2so)); ```. The next question is what we do about this. I see two solutions:; 1. Put a flag in sotoao that throws if `include_pure_transform_` is true. I've run this change through full tests and didn't get any errors. However, somebody can assume `sotoao()` is the transpose of `aotoso()` and get rubbish.; 2. Remove the functionality of the `include_pure_transform` flag entirely. The transformations are always invertible, but we lose whatever efficiency gain motivated including the flag in the first place. I don't know which is the best solution, or if there's a third. Pinging @andysim, @susilehtola, @jturney, and @fevangelista, all of whom have either touched this code or expressed interest in this issue previously.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1763:2400,error,errors,2400,https://psicode.org,https://github.com/psi4/psi4/issues/1763,2,"['Ping', 'error']","['Pinging', 'errors']"
Availability,"s=0x55555e408d20, psi_fp=..., qc_fp=0x0, geom=0x55555d874e30, ; off=0) at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/bend.cc:269; #4 0x00002aaaadd6cff2 in opt::FRAG::print_simples (this=0x55556b8407e0, psi_fp=..., qc_fp=0x0, atom_offset=0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/frag_print.cc:123; #5 0x00002aaaadd8db62 in opt::MOLECULE::print_coords (this=0x55555e405dd0, psi_fp=..., qc_fp=0x0); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/molecule_print.cc:209; #6 0x00002aaaadd5abd5 in opt::optking (options=...); at /home/laz/build/psi4/psi4/psi4/src/psi4/optking/optking.cc:261; #7 0x00002aaaad0dd557 in py_psi_optking () at /home/laz/build/psi4/psi4/psi4/src/core.cc:239; #8 0x00002aaaad118e95 in pybind11::detail::argument_loader<>::call_impl<int, int (*&)()>(int (*&)(), pybind11::detail::index_sequence<>) (this=0x7fffffffc667, f=@0x5555560adc28: 0x2aaaad0dd4f4 <py_psi_optking()>); ... [Pythony bits snipped]; ```; In v3d_axpy(const double a, const double *X, const double *Y, double *Z), X and Y are undefined in my case and cause the seg fault. I've not dug into this in any depth yet but it looked like the linear bends of Frag 2 were added to Frag 1, so that it dies when the internal coordinates of Frag 1 are printed to the output because the internal coords refer to atoms not in that fragment. Or something along those lines. This job gives a seg fault with current git:; ```; molecule dimer {; C 0.824239 0.890517 1.696513; C 1.957325 0.070553 1.693001; C 1.813738 -1.320699 1.693796; C 0.537119 -1.892037 1.698103; C -0.595966 -1.072073 1.701616; C -0.452379 0.319180 1.700821; H 2.954752 0.516900 1.689636; H 0.424971 -2.979016 1.698724; H -1.593394 -1.518419 1.704981; H -1.337645 0.959804 1.703565; H 0.936388 1.977496 1.695892; C 2.947914 -2.141449 1.690280; N 3.874050 -2.836596 1.687416; --; C 0.717503 0.537187 -1.697308; C 0.049935 -0.691858 -1.697308; C -1.348233 -0.728319 -1.697309; C -2.078861 0.464332 -1.697309; C -1.411293 1.693378 -1.697308",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680:2141,fault,fault,2141,https://psicode.org,https://github.com/psi4/psi4/issues/680,1,['fault'],['fault']
Availability,samples/sapt3/input.dat error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936:24,error,error,24,https://psicode.org,https://github.com/psi4/psi4/issues/936,1,['error'],['error']
Availability,scale down dmrg/caspt2-n2 test case,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/474:6,down,down,6,https://psicode.org,https://github.com/psi4/psi4/issues/474,1,['down'],['down']
Availability,seg fault possibly caused by or related to collocation grid cache build,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1366:4,fault,fault,4,https://psicode.org,https://github.com/psi4/psi4/issues/1366,1,['fault'],['fault']
Availability,seg faults in usapt0 solver,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1830:4,fault,faults,4,https://psicode.org,https://github.com/psi4/psi4/issues/1830,1,['fault'],['faults']
Availability,seg.fault with dft and soscf,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256:4,fault,fault,4,https://psicode.org,https://github.com/psi4/psi4/issues/256,1,['fault'],['fault']
Availability,segmentation fault of computing eri with updated version of psi4,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2542:13,fault,fault,13,https://psicode.org,https://github.com/psi4/psi4/issues/2542,1,['fault'],['fault']
Availability,"sform>, std::shared_ptr<psi::MOSpace>, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFmatrix*, CheMPS2::DMRGSCFindices*, CheMPS2::Hamiltonian*, std::shared_ptr<psi::PSIO>, std::shared_ptr<psi::Wavefunction>)’:; /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:268:66: error: no matching function for call to ‘psi::Molecule::nuclear_repulsion_energy()’; double Econstant = wfn->molecule()->nuclear_repulsion_energy();; ^; In file included from /home/shouck/psi4/psi4/src/psi4/dmrg/dmrgscf.cc:34:0:; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate: double psi::Molecule::nuclear_repulsion_energy(const std::array<double, 3ul>&) const; double nuclear_repulsion_energy(const std::array<double,3> &dipole_field) const;; ^; /home/shouck/psi4/psi4/src/psi4/libmints/molecule.h:368:12: note: candidate expects 1 argument, 0 provided; make[5]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/dmrgscf.cc.o] Error 1; make[4]: *** [src/psi4/dmrg/CMakeFiles/dmrg.dir/all] Error 2; make[3]: *** [all] Error 2; make[2]: *** [psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/psi4-core.dir/all] Error 2; make: *** [all] Error 2; ```; The output generated by `psi4-path-advisor --gcc` is; ```; /home/shouck/miniconda3/envs/p4dev/bin/cmake \; -H. \; -C/home/shouck/miniconda3/envs/p4dev/share/cmake/psi4/psi4DepsCache.cmake \; -Bobjdir; ```; @ashutoshvt and @robertodr have narrowed the issue down to the CheMPS2 module, which is set to `ON` in psi4DepsCache.cmake by default; changing it to; ```; set(ENABLE_CheMPS2 OFF CACHE BOOL """"); set(CheMPS2_DIR ""/home/shouck/miniconda3/envs/p4dev/share/cmake/CheMPS2"" CACHE PATH """"); ```; allows Psi4 to compile without issues. I'm not sure, but it seems like maybe a function was changed and then not updated in CheMPS2. The error and log files are attached. Thank you!. [CMakeError.log](https://github.com/psi4/psi4/files/1515094/CMakeError.log); [CMakeOutput.log](https://github.com/psi4/psi4/files/1515095/CMakeOutput.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/871:1262,Error,Error,1262,https://psicode.org,https://github.com/psi4/psi4/issues/871,7,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,"si4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/t/deleting-scratch-files-before-a-computation-finishes/2206). To find ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:1707,error,error,1707,https://psicode.org,https://github.com/psi4/psi4/issues/3164,1,['error'],['error']
Availability,"si4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2420, in run_scf_gradient; ref_wfn = run_scf(name, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 2325, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/proc.py"", line 1543, in scf_helper; disp_energy = scf_wfn._disp_functor.compute_energy(scf_wfn.molecule(), scf_wfn); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/psi4/driver/procrouting/empirical_dispersion.py"", line 210, in compute_energy; jobrec = qcng.compute(; File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/compute.py"", line 83, in compute; config = get_config(local_options=local_options); File ""/home/jacobson/software/psi4conda/lib/python3.8/site-packages/qcengine/config.py"", line 308, in get_config; raise KeyError(""Number of jobs per node exceeds the number of available cores.""); KeyError: 'Number of jobs per node exceeds the number of available cores.'. ```. This job is submitted on a SLURM cluster with the following script:; ```; #!/bin/bash. #SBATCH --partition=compute-16core-64gb-preemptible; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=1; #SBATCH --output=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters.slurm.out; #SBATCH --job-name=test-C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters. source /home/jacobson/software/setup.psi4; export PSI_SCRATCH=/scratch/jacobson/; export OMP_NUM_THREADS=1; export MPI_NUM_THREADS=1; echo psi4 scratch set to $PSI_SCRATCH; fname=C2c_I2T_ACETAC_1_57_selected_nbody_1_clusters; python /home/jacobson/bin/psi4_wb97xd3_def2tzvp.py $fname"".xyz"" > $fname"".log""; ```. one cpu is available for the job. I tracked the issue to qcengine/config.py which seems not to recognize my host and then set a default of 2 for jobs_per_node. Then ncores / jobs_per_node is zero and a KeyError is raised.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548:2146,avail,available,2146,https://psicode.org,https://github.com/psi4/psi4/issues/2548,3,"['avail', 'echo']","['available', 'echo']"
Availability,"simint PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_json PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf FAILED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED. ==================================================== FAILURES =====================================================; ________________________________________________ test_v2rdm_casscf ________________________________________________. @using_v2rdm_casscf; def test_v2rdm_casscf():; """"""v2rdm_casscf/tests/v2rdm1""""""; #! cc-pvdz N2 (6,6) active space Test DQG. print(' N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A'). import v2rdm_casscf. n2 = psi4.geometry(""""""; 0 1; n; n 1 r; """"""). interloper = psi4.geometry(""""""; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; """"""). psi4.set_options({; 'basis': 'cc-pvdz',; 'scf_type': 'cd',; 'cholesky_tolerance': 1e-12,; 'd_convergence': 1e-10,; 'maxiter': 500,; 'restricted_docc': [ 2, 0, 0, 0, 0, 2, 0, 0 ],; 'active': [ 1, 0, 1, 1, 0, 1, 1, 1 ],; }); ##psi4.set_module_options('v2rdm_casscf', {; psi4.set_options({; # 'positivity': 'dqg',; 'r_convergence': 1e-5,; 'e_convergence': 1e-6,; 'maxiter': 20000,; # #'orbopt_frequency': 1000,; # #'mu_update_frequency': 1000,; }). psi4.activate(n2). n2.r = 0.5; refscf = -103.04337420425350; refv2rdm = -103.086205379481. > psi4.energy(",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:2424,FAILURE,FAILURES,2424,https://psicode.org,https://github.com/psi4/psi4/issues/710,1,['FAILURE'],['FAILURES']
Availability,simint header error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/890:14,error,error,14,https://psicode.org,https://github.com/psi4/psi4/issues/890,1,['error'],['error']
Availability,"sive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/m",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3741,ROBUST,ROBUST,3741,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['ROBUST'],['ROBUST']
Availability,smother CI linux ecosys assembly error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2644:33,error,error,33,https://psicode.org,https://github.com/psi4/psi4/pull/2644,1,['error'],['error']
Availability,"st_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"". -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=__restrict__ -Xlinker -export-dynamic -fPIC -std=c++11 -ftree-vectorize -march=corei7-avx -mavx -fopenmp -O3 -DND",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:7256,Error,Error,7256,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['Error'],['Error']
Availability,"stop() called on filip-ThinkPad-E495 at Wed Mar 4 16:29:33 2020; Module time:; 	user time = 0.55 seconds = 0.01 minutes; 	system time = 0.01 seconds = 0.00 minutes; 	total time = 0 seconds = 0.00 minutes; Total time:; 	user time = 1.79 seconds = 0.03 minutes; 	system time = 0.07 seconds = 0.00 minutes; 	total time = 2 seconds = 0.03 minutes; Constructing Basis Sets for SAPT... => Loading Basis Set <=. Name: (AUG-CC-PVDZ AUX); Role: RIFIT; Keyword: DF_BASIS_SAPT; atoms 1 entry LI line 90 file /home/filip/software/psi4-1.4rc/share/psi4/basis/def2-qzvpp-ri.gbs ; atoms 2 entry H line 30 file /home/filip/software/psi4-1.4rc/share/psi4/basis/aug-cc-pvdz-ri.gbs . //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SAPT0 //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. *** tstart() called on filip-ThinkPad-E495; *** at Wed Mar 4 16:29:34 2020. 	 --------------------------------------------------------; 	 SAPT ; 	 Rob Parrish and Ed Hohenstein ; 	 Open-shell: Jérôme Gonthier ; 	 --------------------------------------------------------. ==> Sizes <==. => Resources <=. Memory [MiB]: 878. => Orbital Ranges <=. ------------------; Range M_A M_B; ------------------; natom 1 1; nso 32 32; ------------------; Alpha orbitals ; ------------------; nmo 32 32; nocc 2 1; nvir 30 31; nfocc 0 0; naocc 2 1; navir 30 31; nfvir 0 0; ------------------; Beta orbitals ; ------------------; nmo 32 32; nocc 1 0; nvir 31 32; nfocc 0 0; naocc 1 0; navir 31 32; nfvir 0 0; ------------------. => Primary Basis Set <=. Basis Set: AUG-CC-PVDZ; Blend: AUG-CC-PVDZ; Number of shells: 14; Number of basis function: 32; Number of Cartesian functions: 34; Spherical Harmonics?: true; Max angular momentum: 2. SCF TERMS:. [1] 11021 segmentation fault (core dumped) python minimal_example.py; ```. ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007fffea9b8e06 in psi::sapt::USAPT0::build_Sijb(std::shared_ptr<psi::Matrix>) (); from /home/filip/software/psi4-1.4rc/lib/psi4/core.cpython-36m-x86_64-linux-gnu.so; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1830:13102,fault,fault,13102,https://psicode.org,https://github.com/psi4/psi4/issues/1830,2,['fault'],['fault']
Availability,submodule error on fresh clone,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/189:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/issues/189,1,['error'],['error']
Availability,symbol error,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/96:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/issues/96,1,['error'],['error']
Availability,"system /home/gytibor/.conda/envs/psi4gcc/include; echo $CFLAGS_USED; -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CXXFLAGS_USED; -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $CPPFLAGS_USED; -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FFLAGS_USED; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; echo $FORTRANFLAGS; -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include; ```; Of particular concern, are the `-fstack-protector-strong` and `-D_FORTIFY_SOURCE=2` flags. Do release builds need runtime buffer/stack overflow checks?. I think most of the other flags are also somewhat redundant, I have done a build with `CXXFLAGS=""-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=native -O3 -pipe -isystem /home/gytibor/.conda/envs/psi4gcc/include""` and all the other envvars also set similarly, and the build appears to be OK, no ctests or pyt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2416:1292,echo,echo,1292,https://psicode.org,https://github.com/psi4/psi4/issues/2416,1,['echo'],['echo']
Availability,"t an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link against the random lib stashed on GH, and the build can be far more self-contained. hooray!; - [x] linux azure (two bottom lanes with new enough py for np v2): np v2 needs qcel v0.28 _and_ it needs pb11 >=2.12 to compile against or you'll get ""atoms too close"". pb11 had been constrained to <2.12 (see below), so that was lifted. bumped qcng to 0.30 for internal builds, too.; - [x] docs: a PR snuck adding a citation to the bibliography w/o citing it, so the strict check failed. commented out for now; - [x] docs: ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:1509,error,error,1509,https://psicode.org,https://github.com/psi4/psi4/pull/3186,1,['error'],['error']
Availability,"t can be merged after PR #2678 and #2738 are in. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls i",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:1749,failure,failure,1749,https://psicode.org,https://github.com/psi4/psi4/pull/2686,1,['failure'],['failure']
Availability,"t has already been patched into c-f builds as of v1.8.2 `_1`. ## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] test py312 where possible (mac py312 works, but to keep testing legacy qcfractal (until psi4 v1.9), need to stick with py39); - [x] switch azure windows to miniforge, so it doesn't spend 18m switching default channels and doing the solve to get mamba. (note that this isn't a weakness of miniconda (which has packaged conda and mamba since this summer) but of the age of the miniconda on chocolatey vs the age of the miniforge.; - [x] tested the new qcfractal 0.51 and found that (1) there's a snowflake threading bug that Ben has since fixed (unreleased) and (2) there's a new space-saving step on qcfractal, so psi4 driver needs to regenerate qcvars info for distributed driver thru qcf runs (fixed here).; - [x] on py312 on windows, there's a change in `shutil.which` that affects us through qcel. currently patched, but awaiting a new release there.; - [x] py312 starts visible SyntaxWarning about non-escaped special characters (like '\n' newline or '\b' bell) and unfortunately, they abound in Windows paths. Further unfortunately, the error detection in the new version parsing for psi4 in qcengine (implemented to avoid those ""[-1] index is not accessible"" means ""pull psi4 tags or otherwise fix version"" errors) springs into defense and thinks a clean psi4 isn't present. So, let's convert possible filepaths to raw strings so no confusion with special chars. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3049:1484,error,error,1484,https://psicode.org,https://github.com/psi4/psi4/pull/3049,2,['error'],"['error', 'errors']"
Availability,"t parser (#1743); - In `-o stdout` mode, `core.be_quiet()` followed by `core.reopen_outfile()` no longer petulantly deprives you of output (#1735); - Fix bug in DF-CC when reading wfn with scf_type CD (#1771) ; - Fix computation of properties in DFOCC (#1772) ; - Fix ROHF and CUHF for asymmetric orthogonalizing matrix X (#1781) ; - Fix to NBO, move to python (#1790) ; - Fix memory bug in DMRG (#1802) ; - Add missing E(30)ind term in SAPT (#1803) ; - Typo in error message (#1811) ; - Fix Azure clang omp (#1822) ; - Remove Psi3 from docs (#1815) ; - Fix to omp call (#1823) ; - Handle very bad linear dependencies (#1844) ; - Fixes to vibrational analysis (#1845) ; - Fix threading in SAPT CPHF (#1849) ; - Fix MP2 handling of 1-electron cases (#1857) ; - Replace seg fault with error in DETCI and DFOCC (#1858, #1861) ; - Fix printing of custom basis sets in banner (#1880) ; - Remove omp_set_nested (#1883) ; - Fix seg fault in CCEnergyWavefunction::rotation() (#1887) ; - Threading fix in ESP potential build (#1900) ; - Proper computation of TDMs from DETCI (#1910) ; - Close DETCI files (#1926) ; - Fix UHF after RHF CCSD gradient crash (#1928) ; - Fix ECPa f-electron combinations (#1930) ; - Keep default_psio_manager alive (#1933) ; - Fix printing of coordinates (#1938) ; - Fixes to Treutler gcc5 (#1945) ; - Fix string setting in options (#1955) ; - USAPT spin fix (#1948, #1969) ; - Distinguish SCF and CC densities (#1962) ; - Improvement to PCMsolver interface (#1977) ; - Fix to occ orbital gradient (#1988) ; - Fix to PK (#1990) ; - Fix bug in scf response (#1999) ; - Correct Bragg-Slater radius for Zn (#2000) ; - Skip Ghost atoms interacting with external charges (#1993) ; - Fix inconsistent basis set parsing (#2002) ; - Psi4dev package working on mac (#2005) ; - Patches to FNOCC and DFOCC (#2013) ; - Fix QCSchema interface (#2014) ; - Fix VV10 for clang (#2017) ; - Plugins work with pybind11 v2.6.0 (#2028) ; - Fix memory bug in libtrans (#2027) ; - Fix to large DF-MP2 (#",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1562:11835,error,error,11835,https://psicode.org,https://github.com/psi4/psi4/issues/1562,5,"['alive', 'error', 'fault']","['alive', 'error', 'fault']"
Availability,"t stage I open the PR to get some feedback from devs about the suggested changes and structure and to finalise the upstream python interface of ddX. Note that this PR Is currently deliberately done on top of an outdated master, since any commit after #2388 introduces segfaults (details see below), which so far I have not yet been able to trace down. Any help on that would be much appreciated. ## User API & Changelog headlines; - Implementation of PCM and COSMO solvation models based on the ddx library. ## Dev notes & details; - Introduction of a NumIntHelper class to compute some integrals numerically using a DFT grid; - Introduction of ddx solvation model and new ddx options. ## Reproducer for the mysterious segfault; As part of rebasing against the current master I encountered a really strange segfault. I managed to produce a minimal example, which has really nothing to do with ddx and only adds a python interface to a simple numerical electrostatic integral. See here for a [trimmed-down diff](https://github.com/psi4/psi4/compare/master...mfherbst:psi4:segfault). On my machine checking out this `segfault` branch with `0_configure.sh`, building and running the `mytests/runtests.sh` script gives a segfault inside the numerical integration in the `PCMPotentialInt` class. Note that the code I added *is not even called*, the call to `PCMPotentialInt` happens from the pcm code *which I have not modified*. Now, commenting out; ```c++; PrintIntegralsFunctor printer;; potential_integrals_->compute(printer);; ```; the segfault disappears. I'm getting the weird feeling I'm doing something really stupid here and I just missed it. ## Questions; - [x] Thoughts on the NumIntHelper?; - [x] Is D -> D_cart needed or not ([this stuff](https://github.com/psi4/psi4/pull/2767/commits/108b6bb1a53cdc428933475dea991e08a3330d98#diff-48947c7a095c933d6843e0564043f051b0e54dff111fff222bf25cd968f6f9daR1769-R1780)); - [x] Any idea on the segfault when rebasing against master?. ## Checklist; - [x]",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767:1276,down,down,1276,https://psicode.org,https://github.com/psi4/psi4/pull/2767,1,['down'],['down']
Availability,"t"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/share/psi4"" ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib/python3.7/site-packages""; Directory: /scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/tests/sapt-exch-disp-inf; ""sapt-exch-disp-inf"" start time: May 10 14:44 EDT; Output:; ----------------------------------------------------------; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR.; SAPT EXCH-DISP20(S^inf) ENERGY........................................................PASSED. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 2 was incorrect on entry to DORGQR. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL. Intel MKL ERROR: Parameter 4 was incorrect on entry to DLASCL.; Traceback (most recent call last):; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/driver.py"", line 577, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 255, in run_sapt_dft; sapt_dft(dimer_wfn, wfn_A, wfn_B, sapt_jk=sapt_jk, data=data, print_header=False); File ""/scratch/psilocaluser/conda-builds/psi4-multiout_1620666994506/work/build/stage/lib//python3.7/site-packages/psi4/driver/procrouting/sapt/sapt_proc.py"", line 421, in sapt_dft; fdds",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2178:2032,ERROR,ERROR,2032,https://psicode.org,https://github.com/psi4/psi4/issues/2178,1,['ERROR'],['ERROR']
Availability,"t, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file an issue. Error occurred in file: /home/ubuntu/build/psi4/src/psi4/libpsio/error.cc on line: 142; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::PSIO::write_entry(unsigned long, char const*, char*, unsigned long); psi::Matrix::save(psi::PSIO*, unsigned long, psi::Matrix::SaveType); ```. Turns out, this is caused by [not running `psi4.core.clean()` between these calculations](https://forum.psicode.org/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:1631,Error,Error,1631,https://psicode.org,https://github.com/psi4/psi4/issues/3164,1,['Error'],['Error']
Availability,"table and splitting/parsing happen at run_detci.; - [x] the `scf_type`, `mp2_type`, `mp_type`, `ci_type`, `cc_type` keywords were a good idea in that they allow different defaults for different levels of theory and are fairly easy to guess and uniform to use. One flaw is that you don't know programmatically what controls what method -- it's all hard-coded, sometimes in more than one place, in proc.py . Now there's a method:type association dict in procrouting/proc_data.py . There's also a little function there serving up the info, so you can get out the keyword and current value with `method_algorithm_type(mtd).keyword` and `method_algorithm_type(mtd).now`, respectively. This helps clean up proc.py and allows the controlling keyword to be linked for each method in the generated tables.; - [x] in proc.py, ; - [x] select_* functions have been made more boilerplate and elsewhere-mentioned DETCI and MRCC changes integrated in.; - [x] CCD is given select_ccd* functions to raise a sensible error message since the default (cc_type=CONV) isn't implemented. ; - [x] CC2 and CC3 are given select_* functions since now CCENERGY and MRCC cover them. This led to controversy (unresolved) over whether DF-CC2 is RTG, see #2710. A result is that you need to `set qc_module ccenergy` explicitly to use DF for CC2 -- a test case edit was needed.; - [x] `run_dfocc`, `run_dfocc_gradient` fns were simplified by using the `method_algorithm_type` fn; - [x] `run_fnodfcc`, `run_fnocc`, `run_cepa` were simplified by using the `method_algorithm_type` fn and the ""director"" dictionary syntax; - [x] some impossibilities fended off rather than being silently ignored: non-df-mp2 in dhdft, non-conv detci; - [x] The involved which-do-I-run--energy-gradient-or-hessian logic in `negotiate_derivative_type` and friends in driver_util.py does a great job at its task, but its error messages have been wanting, being hampered by being generated by exceptions. In particular, they give no clue how close you are to",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:8161,error,error,8161,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['error'],['error']
Availability,"tage\lib\gg.lib D:\a\1\b\build\stage\lib\xc.lib D:\a\1\b\build\stage\lib\deriv.lib D:\a\1\b\build\stage\lib\int.lib C:\tools\miniconda3\Library\lib\mkl_rt.lib C:\tools\miniconda3\Library\lib\libiomp5md.lib kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTFILE:src\core.cp36-win_amd64.pyd.manifest"" failed (exit code 1120) with the following output:; Creating library src\core.lib and object src\core.exp; cc.lib(lmp2.cc.obj) : error LNK2019: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ) referenced in function ""public: virtual void * __cdecl psi::MaxIterationsExceeded<int>::`scalar deleting destructor'(unsigned int)"" (??_G?$MaxIterationsExceeded@H@psi@@UEAAPEAXI@Z); dcft.lib(dcft_compute_RHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_compute_UHF.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); dcft.lib(dcft_qc.cc.obj) : error LNK2001: unresolved external symbol ""public: virtual __cdecl psi::MaxIterationsExceeded<int>::~MaxIterationsExceeded<int>(void)"" (??1?$MaxIterationsExceeded@H@psi@@UEAA@XZ); src\core.cp36-win_amd64.pyd : fatal error LNK1120: 1 unresolved externals; ```. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Fix `psi::MaxIterationsExceeded` implementation; - [x] Fix `psi::ConvergenceError` implementation; - [x] Clean up includes. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1419:6294,error,error,6294,https://psicode.org,https://github.com/psi4/psi4/pull/1419,1,['error'],['error']
Availability,target sapt; [ 99%] Building CXX object src/CMakeFiles/core.dir/core.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_benchmarks.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_blas_lapack.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_cubeprop.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_dpd.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_fock.cc.o; [ 99%] Building CXX object src/CMakeFiles/core.dir/export_functional.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_misc.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_oeprop.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_pcm.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_plugins.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_psio.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_trans.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_wavefunction.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/export_options.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/create_new_plugin.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/read_options.cc.o; [100%] Building CXX object src/CMakeFiles/core.dir/python_data_type.cc.o; [100%] Linking CXX shared library core.cpython-310-x86_64-linux-gnu.so; /usr/bin/ld: cannot find -lMathOpenMP_LIBRARIES-NOTFOUND; collect2: error: ld returned 1 exit status; make[5]: *** [src/CMakeFiles/core.dir/build.make:417: src/core.cpython-310-x86_64-linux-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1028: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:136: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:86: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:10188: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:146: all] Error 2. How can I link to this lib and fix this error?. Sincerely THANKS!,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2998:1560,error,error,1560,https://psicode.org,https://github.com/psi4/psi4/issues/2998,8,"['Error', 'error']","['Error', 'error']"
Availability,"tered. In short, the COSX K build method breaks with certain grid configurations - specifically, grid configurations which result in negative grid weights. How to best handle that issue - removing such grid configurations from Psi4 entirely, handling negative grid weights differently within COSX itself - is still under discussion, and this PR is _not_ meant to be a final fix to the aforementioned issue. Rather, this PR is meant to provide a more informative error message in the case that an end user _does_ encounter this error. Currently, when this error is encountered, it shows up as either a DGESV error (if the initial COSX grid has negative weights) or an ADIIS minimization error (if the final COSX grid has negative weights). These error outputs don't help the end user figure out what is wrong at all. So, what this PR does, is add sanity checks to ensure that the COSX grids don't have negative weights, and throw an exception if they do. The sanity check exceptions explain to the user what the error is and how they can fix it (i.e., changing the grid pruning scheme and/or number of spherical points). Again, I want to emphasize that this is _not_ intended to be a full fix to https://github.com/psi4/psi4/issues/2890. Rather, it is an intermediate step that is designed to better help end users avoid the problem if they run into it themselves. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Add sanity checks to COSX to ensure that neither of the COSX grids have negative grid weights. An exception is thrown if either of the grids do. ## Questions; - [x] Probably better discussed on https://github.com/psi4/psi4/issues/2890, but how do we want to officially solve this problem? There has been some discussion on simply removing grid configurations which lead to negative weights, as well as discussions on reformulating the X matrix (the matrix central to the observed error) to be able to handle positive grid weights. . ## Checklist; - [X] Tests added f",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906:1150,error,error,1150,https://psicode.org,https://github.com/psi4/psi4/pull/2906,1,['error'],['error']
Availability,"tern FILE*` and unused `#include`s from `mcscf::SCF::energy` (PR #2678). ### New DSYEV wrappers, anti-`sq_rsp(...)` crusade; - [x] Implement two new wrapper functions around DSYEV to replace `sq_rsp(...)` with. The new wrappers have a much cleaner interface, and no longer require the allocation of an eigenvector array if the caller only needs eigenvalues. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `psi4/src/psi4/adc/diagonalize.cc` with new wrapper. Add check for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `dfoccwave::Tensor2d::diagonalize` with new wrapper. Add check for diagonalization failure.; - [x] Remove vestiges of the diagonalization cutoff from `dfocc`. `dfo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2642:2357,failure,failure,2357,https://psicode.org,https://github.com/psi4/psi4/pull/2642,1,['failure'],['failure']
Availability,"tes for the molecule at each step of the optimization. Hooked up to MDT.; - ~adds normalmode displacement export to the api and optional saving of normal modes to the wavefunction.~; - Adds handling of several one-electron properties to the API and saves them to the wavefunction.; - `qcdb.Molecule`; - Fix some bugs, including C3/D3 symmetry detection w/o verbose and printing for Q-Chem when dummy (or ghost?, don't remember which) present; - Simplify rotational_constants, add rotational_symmetry_number, add axis_representation (probably should double-check this with a spectroscopy book); - Optimize instantiation (really, update_geometry) of large systems by a couple orders of magnitude (now ~1 min for 6000 atoms, w/symmetry); - Hook up Trent Parker's linear-scaling BFS algorithm to qcdb.Molecule or through just np arrays. Has ""seed"" argument so you can forcibly split intramolecularly or close-bound intermol.; - Selected steps (for performance) are now in numpy, as a result, `geometry(np_out=True)` and `xyz(np_out=True)` are avail to skip the cast-back-to-list step. Also, `to_arrays` returns geom, mass, elez, etc. as numpy arrays, rather than needing to iterate over natom.; - `psi4.core.Molecule`; - add rotational_symmetry_number; - export rotor_type; - faster BFS algorithm hooked up to psi4.Mol, too. Depending on Mol type, returns numpy split arrays, single large Mol with atoms rearranged and fragmentation embedded, and/or list of indiv Mols, one for each fragment. Radically pare down auto_fragments/old BFS code.; - `units` no longer exported as a property. has getter/setter, and the getter returns strings, not `Molecule::GeometryUnits` objects.; - _Both_ psi4.core.Molecule && qcdb.Molecule; - Enhanced `add_atom` to take label (in add'n to symbol) and mass number, so is a full fledged CoordEntry entry point; - Add `mass_number` storage and accessor. In Psi, this is just a pass-through – nothing done with it. Stores isotope mass number if mass corresponds to valid nuc",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834:2382,avail,avail,2382,https://psicode.org,https://github.com/psi4/psi4/pull/834,1,['avail'],['avail']
Availability,"test using ctest.; I have one test ""dft-custom-gga"" failed. And I wonder how I can do to pass. I upload the log file below:. ```; 373/405 Testing: dft-custom-gga; 373/405 Test: dft-custom-gga; Command: ""/usr/bin/python2.7"" ""/root/psi4/tests/runtest.py"" ""/root/psi4/tests/dft-custom-gga/input.dat"" ""/root/psi4/build/testresults.log"" ""false"" ""/root/psi4"" ""false"" ""/root/psi4/build/tests/dft-custom-gga/output.dat"" ""/root/psi4/build/stage/share/psi4/bin/psi4"" ""/root/psi4/build/stage/share/psi4/share/psi4"" ""/root/psi4/build/stage/share/psi4/lib/""; Directory: /root/psi4/build/tests/dft-custom-gga; ""dft-custom-gga"" start time: Jun 09 20:39 CDT; Output:; ----------------------------------------------------------; Ne: PBE...........................................................PASSED; Ne: BLYP..........................................................PASSED; Traceback (most recent call last):; File ""/root/psi4/build/stage/share/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 2009, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError:; Fatal Error: Iterations did not converge.; Error occurred in file: /root/psi4/psi4/src/psi4/libpsi4util/process.cc on line: 112; The most recent 5 function calls were:; psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of output>; Test time = 23.66 sec; ----------------------------------------------------------; Test Failed.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038:1615,Error,Error,1615,https://psicode.org,https://github.com/psi4/psi4/issues/1038,2,['Error'],['Error']
Availability,"the Python interface of `TwoBodyAOInt` directly, use `SCF_TYPE=DIRECT` or `DF` as the JK method for screening comparisons). This leaves a lot of untested JK build+screening combos, which may be potentially broken and uncaught by the CI as a result. As a matter of fact, such cases actually do exist in the code currently (e.g., CompositeJK methods + no screening). This PR adds a new pytest module, `test_comprehensive_jk_screening.py`. It is effectively an expanded version of the scf5 test module, testing one of the scf5 systems (singlet oxygen) with the same basis set, but also including different screening methods and algorithmic subtypes available in Psi4. Screening is assumed to have an insignificant impact on energy within the tolerance used, so all screening types for a given method use the same reference energy. Some combinations of method and screening type throw an exception by design; this is accounted for in the test by testing that such combinations do indeed throw an exception as expected. Other combinations of method and algorithm are broken at the moment and error out; these are simply skipped for now. They are all logged in the same spot, and can and will be addressed in future PRs. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new pytest module to Psi4, `test_comprehensive_jk_screening.py` , to test different combinations of JK build algorithms and ERI screening methods. ## Questions; - [x] Would the test in `test_comprehensive_jk_screening.py` be better placed in `test_erisieve.py`? I placed the test in the former because I considered it large enough to warrant not having the quick pytest mark, but I'm ambivalent about where the test goes between those two test modules. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2978:1662,error,error,1662,https://psicode.org,https://github.com/psi4/psi4/pull/2978,1,['error'],['error']
Availability,this example with Bismuth. ```; molecule mol {; 0 1; O 2.92770 0.06060 -0.10810; Bi 2.42590 -1.82250 0.36000; O 1.18530 -0.57340 0.62950; C 0.28120 0.33690 0.82590; C 0.90790 1.68810 0.95220; O -0.93190 0.11800 0.90030; H 1.58840 1.65300 1.79070; H 0.16190 2.44800 1.16540; H 1.41360 1.98520 0.04650; }. set reference rks; set scf_type df; set basis def2-SV(P); E = optimize('pbe'). ```; fails to add ECP gradient terms. from log output:; ```; ==> Adding ECP gradient terms (computed numerically) <==; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; Failed to converge:; ```. Which I guess is leading to the failure of the optimization in the end.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1704:896,failure,failure,896,https://psicode.org,https://github.com/psi4/psi4/issues/1704,1,['failure'],['failure']
Availability,threading error in DF-CCSD(T) gradient,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2192:10,error,error,10,https://psicode.org,https://github.com/psi4/psi4/issues/2192,1,['error'],['error']
Availability,"tility by Mike Deible and Vladimir Konjkov, which can convert files written in the quasi-standard MOLDEN format into casino’s gwfn.data format.; But in the case of a multideterminant wave function additional data described in [CASINO documentation](https://casinoqmc.net/casino_manual_dir/casino_manual.pdf) **7.4.5 Excitations and multideterminant-expansion coefficients** are required.; The data has the following form and is written to a file **correlation.data**. ```; START MDET; Title; multideterminant WFN generated from Psi4 output data. ! some title; ! empty string or ignored; MD; 3 ! Number of dets; 0.972011 1 0 ! c_1 ; group label for simultaneous optimization ; opt-flag (0 - False; 1 - True); -0.166123 2 1 ! c_2 ; group label for simultaneous optimization ; opt-flag; -0.166123 2 1 ! c_3 ; group label for simultaneous optimization ; opt-flag; DET 2 1 PR 2 1 4 1 ! 2-nd det, up-electron ; PRomote electron from 2-nd orb to 4-th; DET 2 2 PR 2 1 4 1 ! 2-nd det, down-electron ; PRomote electron from 2-nd orb to 4-th; DET 3 1 PR 2 1 5 1 ! 3-nd det, up-electron ; PRomote electron from 2-nd orb to 5-th; DET 3 2 PR 2 1 5 1 ! 3-nd det, down-electron ; PRomote electron from 2-nd orb to 5-th; END MDET. ```; 1. comments behind ! are ignored; 2. Not required c_1<sup>2</sup> + c_2<sup>2</sup> + c_3<sup>2</sup> to be equal to one, only relative weights.; 3. This file defines the following wave function if orbital order in MOLDEN file is: ψ1, ψ2, ψ3 (ROHF case) and r<sub>1</sub>-r<sub>3</sub> for up-electrons, r<sub>4</sub>, r<sub>5</sub> for down-electrons in boron atom:. 0.972011 * |ψ1(r<sub>1</sub>), ψ2(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ1(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ4(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ4(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; -0.166123 * |ψ1(r<sub>1</sub>), ψ5(r<sub>2</sub>), ψ3(r<sub>3</sub>)| * |ψ5(r<sub>4</sub>), ψ2(r<sub>5</sub>)|; ; PRomotion replace the specified orbital at its original position with the re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3235:1343,down,down-electron,1343,https://psicode.org,https://github.com/psi4/psi4/issues/3235,2,['down'],['down-electron']
Availability,"tions from Psi4 entirely, handling negative grid weights differently within COSX itself - is still under discussion, and this PR is _not_ meant to be a final fix to the aforementioned issue. Rather, this PR is meant to provide a more informative error message in the case that an end user _does_ encounter this error. Currently, when this error is encountered, it shows up as either a DGESV error (if the initial COSX grid has negative weights) or an ADIIS minimization error (if the final COSX grid has negative weights). These error outputs don't help the end user figure out what is wrong at all. So, what this PR does, is add sanity checks to ensure that the COSX grids don't have negative weights, and throw an exception if they do. The sanity check exceptions explain to the user what the error is and how they can fix it (i.e., changing the grid pruning scheme and/or number of spherical points). Again, I want to emphasize that this is _not_ intended to be a full fix to https://github.com/psi4/psi4/issues/2890. Rather, it is an intermediate step that is designed to better help end users avoid the problem if they run into it themselves. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Add sanity checks to COSX to ensure that neither of the COSX grids have negative grid weights. An exception is thrown if either of the grids do. ## Questions; - [x] Probably better discussed on https://github.com/psi4/psi4/issues/2890, but how do we want to officially solve this problem? There has been some discussion on simply removing grid configurations which lead to negative weights, as well as discussions on reformulating the X matrix (the matrix central to the observed error) to be able to handle positive grid weights. . ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2906:2053,error,error,2053,https://psicode.org,https://github.com/psi4/psi4/pull/2906,1,['error'],['error']
Availability,"tl;dr Psi4 itself needs no changes for numpy v2, but its runtime major version does need to match the compile-time major version. Current conda-package v1.9.1 with _1 needs to be used in a np v1 env. I'll rebuild a _2 soon that can be used with np v2. longer:; Numpy v2 is up on conda-forge and so may show up in an environment near you. The situation wrt psi4 is that it needs either v1 or v2 depending on what it was compiled against. So:. * the conda package -- AVOIDABLE PROBLEM, this is compiled against numpy v1, so constrain your env. I'll do a new build against v2 after qcel is ready.; * an old objdir compiled against a v1 numpy -- no problem, just don't let any new conda commands update the env to v2 numpy. use `numpy=1* -c conda-forge` in any `conda update` or `conda install` commands.; * a fresh objdir where the numpy is v2 -- no problem, psi4 compiles just fine. Might need https://github.com/MolSSI/QCElemental/pull/338; * an old objdir compiled against a v1 numpy that now sees a v2 numpy at runtime -- PROBLEM, see signature below. downgrade the numpy with `conda install numpy=1 -c conda-forge`. The symptom of an incompatible psi4+numpy is the following. ```; !----------------------------------------------------------------------------------!; ! !; ! Following atoms are too close: [(0, np.int64(1), np.float64(0.0)), (0, !; ! np.int64(2), np.float64(0.0)), (1, np.int64(2), np.float64(0.0))] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3184:1053,down,downgrade,1053,https://psicode.org,https://github.com/psi4/psi4/issues/3184,1,['down'],['downgrade']
Availability,too obscure PSIO errors,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1965:17,error,errors,17,https://psicode.org,https://github.com/psi4/psi4/issues/1965,1,['error'],['errors']
Availability,"ts --; * can each mp2-capable module do something sensible with each scf_type?; * can each mp2-capable module return the same right answer for each capable scf_type/mp2_type?; * can each mp2_type returns something good w/o the user knowing about modules?; * all above for gradient, plus check against findif; * for all these, is the full qcvars, return values, `CURRENT ENERGY`, etc. contract fulfilled for both P::e and wfn? . ## Todos; - [x] check mp2 fundamentals from mp2 energy targets (e.g., `MP2 TOTAL ENERGY` from `energy('mp2')`; - [x] check mp2 fundamentals from mp2 gradient targets (e.g., `MP2 TOTAL ENERGY` from `gradient('mp2')`; - [ ] check scs mp2 from mp2 targets (e.g., `CUSTOM SCS-MP2 TOTAL ENERGY` from `energy('mp2')`; - [x] check mp2 fundamentals from post-mp2 targests (e.g., `MP2 TOTAL ENERGY`) from `energy('fnoccsd')`; - [x] routing; - [x] I think we got the logic of `check_disk_df` off a little in proc.py in that we were checking if correlated method type was `DISK_DF` (my fault) and along the way forbidding `PK` refs with `DF` correlated. I think I fixed this for dfocc but haven't done df with fnocc yet.; - [x] Also corrected logic that was letting through mixed ref+corl derivatives (e.g., pk+df) that had gotten lost. See #245 for much discussion. tl;dr we have none, so let's not continue to let psi proceed with calculations that give beer + wrong answers; - [x] CISD is a poor way to calculate MP2, and it's not like we don't have other modules for RHF & ROHF besides DETCI. And @CDSherrill has allowed that we're unlikely to get to the bottom of it, so closes #311 . And the mp2 detci code is unsteady for multiple-detci-single-psi4 calcs, so it's not smooth to test.; - [x] qcvars; - [x] Newly sets `<mtd> TOTAL GRADIENT` from findif in driver on wfn and P::e; - [x] Newly sets `MP2 SINGLES ENERGY` and `MP2 DOUBLES ENERGY` in C++ where available.; - [x] Fixes up the conventional CCSD qcvars in ccenergy, including closes #1702 ; - [x] Fixes up CD/DF-CCSD qcv",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850:1227,fault,fault,1227,https://psicode.org,https://github.com/psi4/psi4/pull/1850,1,['fault'],['fault']
Availability,"uadratic Force Constant -0.0241494 MDYNE/A; Cubic Force Constant 0.0817885 MDYNE/A**2; Quartic Force Constant -0.1482087 MDYNE/A**3. Traceback (most recent call last):; File ""/home/martin/miniconda/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 41, in <module>; File ""/home/martin/miniconda/lib//python3.7/site-packages/psi4/driver/diatomic.py"", line 194, in anharmonicity; roots2 = np.roots(coefs2); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/lib/polynomial.py"", line 245, in roots; roots = eigvals(A); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/linalg/linalg.py"", line 1059, in eigvals; _assertFinite(a); File ""/home/martin/miniconda/lib//python3.7/site-packages/numpy/linalg/linalg.py"", line 219, in _assertFinite; raise LinAlgError(""Array must not contain infs or NaNs""). numpy.linalg.LinAlgError: Array must not contain infs or NaNs. Printing out the relevant lines from the Psithon --> Python processed input file:; -108.48749538322693, -108.48743328369225, -108.48738988401745, -108.4873615842295, -108.4873453843509, -108.48733858440185, -108.48733918439734, -108.48734528435165, -108.487544082862,; -108.4875574827616, -108.48757248264921, -108.48758858252856, -108.48760498240567, -108.48762118228429, -108.48763708216514, -108.48765208205275, -108.4876661819471, ; -108.48767918184969, -108.48769108176053, -108.4877016816811, -108.48771108161066, -108.48771918154995, -108.48772618149751, -108.48773188145479, -108.48773658141958, ; -108.48774018139261, -108.48774268137387, -108.48774438136114, -108.48774518135515, -108.48774518135515, -108.48774438136114, -108.48774298137162, -108.48774098138661, ; -108.48773838140609, -108.48773538142858, -108.48720108543215]; --> psi4.diatomic.anharmonicity(r,eng,'result.out'). Psi4 stopped on: Sunday, 14 April 2019 03:29PM; Psi4 wall time for execution: 0:00:00.26. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4. ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600:11739,error,error,11739,https://psicode.org,https://github.com/psi4/psi4/issues/1600,1,['error'],['error']
Availability,"ubeprop; Consolidate compiler generated dependencies of target disp; [ 16%] Built target disp; Consolidate compiler generated dependencies of target dpd; [ 25%] Built target dpd; Consolidate compiler generated dependencies of target filesystem; [ 25%] Built target filesystem; Consolidate compiler generated dependencies of target fock; [ 25%] Building CXX object src/psi4/libfock/CMakeFiles/fock.dir/DiskDFJK.cc.o; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:17: error: no viable overloaded operator[] for type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ~~~~~~~~^~~~~~~~~~~~~~; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libfock/DiskDFJK.cc:68:68: error: member access into incomplete type 'psi::Options'; if (options_[""SCF_SUBTYPE""].has_changed()) set_subalgo(options_.get_str(""SCF_SUBTYPE""));; ^; /Users/gwood/work/scripts/psi4_source/src/psi4/src/psi4/libqt/qt.h:47:7: note: forward declaration of 'psi::Options'; class Options;; ^; 2 errors generated. ```. I'm doing this on my intel mac: `2.6 GHz 6-Core Intel Core i7`; using clang++ ; ```; (base) gwood@EXS-001355 build % /usr/local/opt/llvm/bin/clang++ -v; Homebrew clang version 15.0.7; Target: x86_64-apple-darwin22.4.0; Thread model: posix; InstalledDir: /usr/local/opt/llvm/bin`; ```. The only issue prior to this was to install libxc and point to it, which i did with 6.2.2; I downloaded the source from git and am using master:. ```; git clone git@github.com:psi4/psi4.git; (base) gwood@EXS-001355 src % git branch; * master; ```; my cmake version is:. ```; (base) gwood@EXS-001355 src % cmake --version; cmake version 3.23.3. CMake suite maintained and supported by Kitware (kitware.com/cmake).; ```; blas and lapack is picked up from xcode, e.g.:; ```. //BLAS libraries; BLAS_LIBRARIES:STRING=/Library/Developer/CommandLineTools/SDKs/MacOSX13.3.sdk/usr/lib/libblas.tbd ; ```. any ideas, any more information you might need?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006:2240,error,errors,2240,https://psicode.org,https://github.com/psi4/psi4/issues/3006,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"ult the top-level CMakeLists.txt to get building again. See [here](https://github.com/psi4/psi4/pull/442) for more information. . **Boost:**; Much of the Boost functionality that we have depended on in Psi4 has been implemented in C++11. In order to keep Psi4 up to date with best C++11 practices, reduce complexity, and generally remove several headaches, Boost has been removed from Psi4. The C++ Python bindings have been moved to PyBind11. See [here](https://github.com/psi4/psi4/issues/450) for more information. **Inversion:**; Currently the hybrid Python/C++ architecture of Psi4 is in an odd spot where Psi4 itself is a C++ program that calls an input file as a Python executable. This circular process will be removed and Psi4 itself will become a Python library capable of being imported just like any other module. This will allow Psi4 to be used in a normal python workflow with other scientific python programs like OpenMM, iPython, MolDesign, etc. In addition, python-based error messages will be more expressive and accurate. For users who enjoy the current Psithon interface the current Psi4 Psithon parsing equipment will be moved to a script named ""psi4"" in the binary location. This will allow all current Psi4 input files to be run normally. **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:1794,error,error,1794,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['error'],['error']
Availability,"undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunCalc(const std::string& MethodName,int Start, int Stop) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:240:30: error: no matching function for call to 'MakeTasks'; std::vector<Task_t> Tasks=MakeTasks(Start,Stop,Frags_);; ^~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:184:28: note: candidate function not viable: no known conversion from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: erro",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3159,error,error,3159,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,undefined symbol error when running test.in,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/675:17,error,error,17,https://psicode.org,https://github.com/psi4/psi4/issues/675,1,['error'],['error']
Availability,"unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunMonomers(const std::string& MethodName){; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 18 warnings and 20 errors genera",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:4222,error,error,4222,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,update error message box: preserve newlines,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1868:7,error,error,7,https://psicode.org,https://github.com/psi4/psi4/pull/1868,1,['error'],['error']
Availability,"used) with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! ADIIS minimization failed. File a bug, and include your entire input and output !; ! files. !; ! !; !----------------------------------------------------------------------------------!; ```. The following input, an expansion of both the initial and final grids, also fails:; ```; molecule mol {; 0 1; O; H 1 0.96; H 1 0.96 2 104.5; symmetry c1; no_reorient; no_com; }. set {; scf_type cosx; df_scf_guess false; basis aug-cc-pVDZ; e_convergence 1.0e-10; incfock true; incfock_full_fock_every 4; ints_tolerance 1.0e-12; cosx_spherical_points_initial 146 ; cosx_radial_point_initial 50 ; cosx_spherical_points_final 302; cosx_radial_points_final 75 ; cosx_pruning_scheme robust; }. energy = energy('scf'); ```. This one fails in the SAD-guess iteration, with the following error:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: Matrix::diagonalize: DSYEV failed! !; ! Error occurred in file: !; ! /theoryfs2/ds/dpoole34/Documents/Codes/psi4/psi4/src/psi4/libmints/matrix.cc !; ! on line: 1715 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::Matrix::diagonalize(psi::Matrix&, psi::Vector&, psi::diagonalize_order) !; ! !; !----------------------------------------------------------------------------------!; ```. Various things can be switched, with equally varying effects:; * Switching the COSX_PRUNING_SCHEME from ROBUST to TREUTLER fixes these calculations.; * Switching from 146 spherical points to either 110 or 170 fixes these calculations.; * Switching from 50 radial points to either 55 or 45 does _not_ fix these calculations.; * Switching from water to benzene does _not_ fix these calculations. Finally, from my observation, the problem seems to be lo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890:1793,error,error,1793,https://psicode.org,https://github.com/psi4/psi4/issues/2890,3,"['Error', 'error']","['Error', 'error']"
Availability,"ut = ""\nsymmetry c1\nno_reorient\nno_com""; mol = psi4.geometry(molecule_string + add_input); N_active = 11 # Define the total number of active MOs.; N_frozen = 4 # Define the number of frozen occupied MO; N_virtual = 30 # Define the total number of virtual MOs that will be discarded; psi4.set_options({ 'ACTIVE' : [ N_active ],\; 'FROZEN_DOCC' : [ N_frozen ],\; 'FROZEN_UOCC' : [ N_virtual],\; 'DIAG_METHOD' : 'DAVIDSON',\; 'CI_MAXITER' : 200\; }). # assuming you have stored you scf_wfn into water-ammonia.npy:; original_wfn = psi4.core.Wavefunction.from_file(""water-ammonia""). print(""HF energy:"",original_wfn.energy()); CASCI_energy = psi4.energy('fci', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASCI energy:"",CASCI_energy); CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); print(""CASSCF :"",CASSCF_energy); ```. This outputs:; ```; HF energy : -130.74589276437956; CASCI energy : -130.7730891288199; ```. and then the error:; ```; ==> Setting up CI strings <==. There are 462 alpha and 462 beta strings; The CI space requires 213444 (2.13E+05) determinants and 1 blocks. ==> Setting up MCSCF integrals <==. Could not find requested basisset (DF_BASIS_SCF).Traceback (most recent call last):; File ""PSI4_CAS_sim.py"", line 89, in <module>; CASSCF_energy = psi4.energy('casscf', molecule=mol, ref_wfn=original_wfn, return_wfn=False); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 570, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 4804, in run_detcas; ciwfn = mcscf.mcscf_solver(ref_wfn); File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/driver/procrouting/mcscf/mcscf_solver.py"", line 100, in mcscf_solver; mcscf_obj = ciwfn.mcscf_object(); RuntimeError: ; Fatal Error: Wavefunction::get_basisset: Re",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1871:1516,error,error,1516,https://psicode.org,https://github.com/psi4/psi4/issues/1871,1,['error'],['error']
Availability,v1.7 PSIO_ERROR + forrtl: error + core dumped,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2970:26,error,error,26,https://psicode.org,https://github.com/psi4/psi4/issues/2970,1,['error'],['error']
Availability,v2rdm_casscf compilation failure: another OpenMP issue,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1063:25,failure,failure,25,https://psicode.org,https://github.com/psi4/psi4/issues/1063,1,['failure'],['failure']
Availability,"values. They also no longer swallow the return value of DSYEV, in fact their return value is marked as `[[nodiscard]]`. In short, checking for diagonalization failure went from impossible to mandatory.; Please note that unlike `sq_rsp(...)`, the new functions do not take a ""tolarence"" value, but this is actually a null change as that parameter has been set-but-unused in `sq_rsp(...)` since ~forever ago when `sq_rsp(...)` switched to calling DSYEV internally.; - [x] Replace `sq_rsp(...)` calls in `mcscf` (`mcscf::SCF::energy` and `mcscf::MatrixBase::diagonalize`) with new wrapper. Add checks for diagonalization failure and guard against non-square matrices.; - [x] Replace `sq_rsp(...)` calls in `detci` (`detci/h0block.cc`, `detci/sem.cc` and `detci/sem_test.cc`) with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in `libmints/matrix.cc` (`Matrix::diagonalize`) with new wrapper. Add checks for diagonalization failure. Add a sanity checks for non-square matrices and illegal values of ""diagonalization order"".; - [x] Replace `sq_rsp(...)` calls in `ccenergy` (`ccenergy/d1diag.cc`, `ccenergy/d2diag.cc` and `ccenergy/new_d1diag.cc`) with new wrapper. Add checks for diagonalization failure. This allows the removal of the eigenvector array, and the code that allocates/deallocates it.; - [x] Replace `sq_rsp(...)` calls in the `libqt` Davidson solver with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` call in the RHF and ROHF stability checks with new wrapper. Add checks for diagonalization failure.; - [x] Replace `sq_rsp(...)` calls in `libsapt_solver/sapt2.cc` with new wrapper. Add checks for diagonalization failure. ## Questions; - [x] Is `libciomr` a good place for the new wrappers to live in? The one they are replacing is there, so it seemed like as good of a place as any. ## Checklist; - [x] No new features; - [x] 503/503 ctests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2686:2364,failure,failure,2364,https://psicode.org,https://github.com/psi4/psi4/pull/2686,4,['failure'],['failure']
Availability,"vates conda env.; eval $(conda/psi4-path-advisor.py env); # (3) generate cmake cache file from conda env. ""eval $(...)"" configures and builds with cmake.; eval $(conda/psi4-path-advisor.py cmake); shows up in p4dev; =========================================; (B) flexible usage; =========================================; # (1) get code from GitHub; git clone https://github.com/psi4/psi4.git && cd psi4; # (2.0) consider dependency options; conda/psi4-path-advisor.py env -h; # (2.1) generate env spec file from codedeps.yaml.; conda/psi4-path-advisor.py env -n p4dev310 --python 3.10 --disable addons --lapack openblas; #> conda env create -n p4dev310 -f /home/psi4/env_p4dev310.yaml && conda activate p4dev310; # (2.2) edit env_p4dev310.yaml to customize software packages.; # (2.3) issue suggested or customized command to create and activate conda env.; conda env create -n p4dev310 -f /home/psi4/env_p4dev310.yaml && conda activate p4dev310; ```; - [x] For packagers or other high-level what-does-it-need folks, dependency info is programmatically available now through codedeps.yaml. ## Dev notes & details; - [x] add `codedeps.yaml` file that makes dependency and ecosystem information programmatically accessible. Presently useful for (1) people and (2) the in-repo psi4-path-advisor.py script, but more uses can follow.; - [x] add in-repo `conda/psi4-path-advisor.py` script to serve as build helper. this is the main point of the PR. will elaborate more in future.; - [x] there's a tidy new way of defining flags that are essential for the compiler _with_ the compiler in `CMAKE_<LANG>_COMPILER` instead of cluttering up the user choice var `CMAKE_<LANG>_FLAGS`. This is especially relevant for intel compilers that need gcc passed. There's something that's not set up right yet for Intel Clang. Thus, we need to pass `CMAKE_<LANG>_COMPILER_ARG1` through to psi4 subproject and all other externals.; - [x] let ctest tests run whether old or new d3 and gcp implementations present.; - [x] d",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3021:1991,avail,available,1991,https://psicode.org,https://github.com/psi4/psi4/pull/3021,1,['avail'],['available']
Availability,"version from; 'boost::shared_ptr<LibMolecule::FragmentedSystem>' to 'const int' for 3rd argument; static std::vector<Task_t> MakeTasks(const int Start, const int Stop,const SharedFrags& Frags_){; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:258:11: error: use of undeclared identifier 'SharedFrag'; MPIJob<SharedFrag> PMan(Tasks);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:8: error: unknown type name 'SharedFrag'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:24: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:38: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:259:55: error: use of undeclared identifier 'PMan'; for(SharedFrag NMer=PMan.Begin();!PMan.Done();NMer=PMan.Next()) {; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:281:34: error: use of undeclared identifier 'PMan'; std::vector<double> TempEgys2=PMan.Synch(TempEngy, NEgys);; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:284:48: error: member reference base type 'int' is not a structure or union; const LibMolecule::SerialNumber& SN=TaskI->GetLabel()->GetSN();; ~~~~~^ ~~~~~~~~; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:290:6: error: use of undeclared identifier 'LibFragDriver'; did you mean; 'psi::LibFrag::LibFragDriver'?; void LibFragDriver::RunNMers(int Start,const std::string& MethodName) {; ^~~~~~~~~~~~~; psi::LibFrag::LibFragDriver; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.h:34:7: note: 'psi::LibFrag::LibFragDriver' declared here; class LibFragDriver{; ^; /Users/francesco/Source/psi4/src/lib/libfrag/LibFragDriver.cc:294:6: error: use of undecl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/206:3861,error,error,3861,https://psicode.org,https://github.com/psi4/psi4/issues/206,1,['error'],['error']
Availability,"version. > Traceback (most recent call last):; > File ""/root/miniconda3/envs/psi4/bin/psi4"", line 184, in <module>; > import psi4; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/__init__.py"", line 82, in <module>; > from .driver import endorsed_plugins; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; > import v2rdm_casscf; > File ""/root/miniconda3/envs/psi4/lib//python3.7/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; > psi4.core.plugin_load(sofile); > RuntimeError:; > Fatal Error: load_plugin: Cannot open library: /root/miniconda3/envs/psi4/lib/python3.7/site-packages/v2rdm_casscf/v2rdm_casscf.so: undefined symbol: _ZN3psi8ERISieveC1ESt10shared_ptrINS_8BasisSetEEd; > Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1573157589938/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; > The most recent 5 function calls were:; > ; > ; > forrtl: severe (174): SIGSEGV, segmentation fault occurred; > Image PC Routine Line Source; > libgdma.so 00007FDBC5B360DC for__signal_handl Unknown Unknown; > libpthread-2.27.s 00007FDBD8DF2890 Unknown Unknown Unknown; > ld-2.27.so 00007FDBD9016A31 Unknown Unknown Unknown; > libc-2.27.so 00007FDBD8B472DF _dl_catch_excepti Unknown Unknown; > libc-2.27.so 00007FDBD8B4736F _dl_catch_error Unknown Unknown; > libdl-2.27.so 00007FDBD87D1735 Unknown Unknown Unknown; > libdl-2.27.so 00007FDBD87D10B3 dlclose Unknown Unknown; > core.cpython-37m- 00007FDBC6A8034A Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC672D382 Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC6756337 Unknown Unknown Unknown; > core.cpython-37m- 00007FDBC6762AB4 Unknown Unknown Unknown; > python3.7 00007FDBD94D3B65 PyCFunction_Call Unknown Unknown; > python3.7 00007FDBD95B2E74 Unknown Unknown Unknown; > python3.7 00007FDBD95B99E7 Py_FinalizeEx Unknown Unknown; > python3.7 00007FDBD95D1C63 Unknown Unknown Unknown; > python3.7 0000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1750:1136,fault,fault,1136,https://psicode.org,https://github.com/psi4/psi4/issues/1750,1,['fault'],['fault']
Availability,version: Rev {master} 0d10de8. After entering the SOSCF psi4 exists with a segmentation fault. It prints the soscf header if soscf_print true. Occurs e.g. when I run soscf1 test case with PBE instead of HF. I don't know if SOSCF should work with DFT or not.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256:88,fault,fault,88,https://psicode.org,https://github.com/psi4/psi4/issues/256,1,['fault'],['fault']
Availability,"vs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 1570, in update_geometry; self.set_point_group(self.find_point_group()); ^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2423, in find_point_group; pg = self.find_highest_point_group(tol) # D2h subgroup; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintsmolecule.py"", line 2523, in find_highest_point_group; return PointGroup(pg_bits); ^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1530, in __init__; self.constructor_bits(*args); File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1573, in constructor_bits; self.symb = self.bits_to_basic_name(self.PYbits); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/home/jevandezande/rowansci/peregrine/.pixi/envs/dev/lib/python3.12/site-packages/psi4/driver/qcdb/libmintspointgrp.py"", line 1755, in bits_to_basic_name; raise ValidationError('Unrecognized point group bits: %d\n' % (bits)). psi4.driver.qcdb.exceptions.ValidationError: Unrecognized point group bits: 80. Printing out the relevant lines from the Psithon --> Python processed input file:; H -0.3913180530 -0.8282585144 -0.5761431456; H 0.0839750469 -0.2910425067 1.0389058590; H 0.9764814973 0.2730248868 -0.3781855106; """"""); core.IO.set_default_namespace(""""); --> energy(""BP86/sto-3g""). !------------------------------------!; ! !; ! Unrecognized point group bits: 80 !; ! !; !------------------------------------!. Psi4 stopped on: Friday, 30 August 2024 04:55PM; Psi4 wall time for execution: 0:00:00.03. *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3213:5437,error,error,5437,https://psicode.org,https://github.com/psi4/psi4/issues/3213,1,['error'],['error']
Availability,wb97X-V with density threshold of 1e-10 stops before printing the first SCF/SAD energy in the SCF iteration output. I dont have access to gcc5 and I cannot reproduce the error otherwise for now. e.g.:; https://dev.azure.com/psi4/psi4/_build/results?buildId=2170&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=895e49e6-cad9-5b25-6d66-c0b61859d928&l=801,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1943:170,error,error,170,https://psicode.org,https://github.com/psi4/psi4/issues/1943,1,['error'],['error']
Availability,wind down psi4/psi4private,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/508:5,down,down,5,https://psicode.org,https://github.com/psi4/psi4/issues/508,1,['down'],['down']
Availability,with ENABLE_GENERIC=OFF:; ```; -- BLAS will be searched for based on MATH_ROOT=/home/termo/intel/mkl/ ; -- Found BLAS: MKL (/home/termo/intel/mkl/lib/intel64/libmkl_rt.so;/usr/lib/x86_64-linux-gnu/libpthread.so;/usr/lib/x86_64-linux-gnu/libm.so;/usr/lib/x86_64-linux-gnu/libdl.so); -- LAPACK will be searched for based on MATH_ROOT=/home/termo/intel/mkl/ ; -- Found LAPACK: MKL (/home/termo/intel/mkl/lib/intel64/libmkl_rt.so); -- Found LAPACK MKL: /home/termo/intel/mkl/lib/intel64/libmkl_rt.so;... ```; with ENABLE_GENERIC=ON:; ```; -- BLAS will be searched for based on MATH_ROOT=/home/termo/intel/mkl/ ; CMake Error at cmake/math/MathLibsFunctions.cmake:216 (message):; -- No external BLAS library found (have you set the MATH_ROOT environment; variable?); Call Stack (most recent call first):; cmake/math/ConfigMath.cmake:105 (config_math_service); external/common/lapack/CMakeLists.txt:12 (include); ```; [CMakeOutput.log](https://pastebin.com/pWwucBCZ),MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004:614,Error,Error,614,https://psicode.org,https://github.com/psi4/psi4/issues/1004,1,['Error'],['Error']
Availability,"x-gnu.so] Error 1; make[4]: *** [CMakeFiles/Makefile2:1259: src/CMakeFiles/core.dir/all] Error 2; make[3]: *** [Makefile:149: all] Error 2; make[2]: *** [CMakeFiles/psi4-core.dir/build.make:137: psi4-core-prefix/src/psi4-core-stamp/psi4-core-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:11978: CMakeFiles/psi4-core.dir/all] Error 2; make: *** [Makefile:160: all] Error 2```; Steps to reproduce:; - clone the current repository to a new directory; - configure with cmake (i tried both cmake 3.19.4 and 3.23.1). I used `cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=~/prog/psi4/master -DPython_EXECUTABLE=/usr/bin/python3.9 -DBLAS_TYPE=OPENBLAS -DPython_LIBRARY=/usr/lib/python3.9 -DPython_INCLUDE_DIR=/usr/include/python3.9`; - change to objdir, run `make` and grab a coffee; - I tried it both with gcc 10.3.0 and gcc 11.2.1, the result is identical. The issue sees to be related to libint2. The strange thing i that at the beginning of the compilation step of libint, there is a warning; ```; ...; CMake Warning:; Manually-specified variables were not used by the project:. BUILD_FPIC; ENABLE_XHOST. -- Build files have been written to: /scr/behnle/psi4_clean_cmake_3.19/psi4/objdir/external/upstream/libint2/libint2_external-prefix/src/libint2_external-build; [ 82%] Performing build step for 'libint2_external'; Scanning dependencies of target int-obj; [ 0%] Building CXX object CMakeFiles/int-obj.dir/Unity/unity_2001_cxx.cxx.o; ...; ```. Full outputs of cmake and make are attached. There is furthermore an issue with the adcc plugin. This plugin cannot be built anymore with -DENABLE_adcc=ON as on one hand, PSI4 requires a C++-17 compiler (and this standard seems to be enforced), on the other hand, there is code in the adcc plugin which violates the C++-17 standard (some `throw()` with variable error message) which leads to compilation errors. Best; Stefan. [make.log](https://github.com/psi4/psi4/files/8651531/make.log); [cmake.log](https://github.com/psi4/psi4/files/8651538/cmake.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2572:2711,error,error,2711,https://psicode.org,https://github.com/psi4/psi4/issues/2572,2,['error'],"['error', 'errors']"
Availability,"x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`; - `P_GAUSSIAN=92/92` (yes, all fail);; - `D_GAUSSIAN=92/92`; - `LOG_GAUSSIAN=78/92`. _ionization energies:_; - `TREUTLER` 15/92 fail.; - `ROBUST` all pass. The `FUNCTION` schemes seem still very experimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Mode",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:3230,error,errors,3230,https://psicode.org,https://github.com/psi4/psi4/pull/1591,1,['error'],['errors']
Availability,"x_ops`` contains not only the transformed ``aux_operators`` passed by the; 81 # user but also additional ones from the transformation; ---> 82 second_q_ops = problem.second_q_ops(); 83 ; 84 main_operator = self._qubit_converter.convert(. ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\problems\second_quantization\electronic\electronic_structure_problem.py in second_q_ops(self); 62 operator, and (if available) x, y, z dipole operators.; 63 """"""; ---> 64 self._molecule_data = cast(QMolecule, self.driver.run()); 65 self._molecule_data_transformed = cast(QMolecule, self._transform(self._molecule_data)); 66 . ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\drivers\psi4d\psi4driver.py in run(self); 131 os.close(file_fd); 132 try:; --> 133 PSI4Driver._run_psi4(input_file, output_file); 134 if logger.isEnabledFor(logging.DEBUG):; 135 with open(output_file, 'r') as file:. ~\Anaconda3\envs\qiskit-0-27-psi4-jupyter\lib\site-packages\qiskit_nature\drivers\psi4d\psi4driver.py in _run_psi4(input_file, output_file); 186 logger.error(lines[i]); 187 errmsg += lines[i] + ""\n""; --> 188 raise QiskitNatureError('{} process return code {}\n{}'.format(; 189 PSI4, process.returncode, errmsg)). QiskitNatureError: 'psi4 process return code 1\nTraceback (most recent call last):\n File ""C:\\Users\\user\\Anaconda3\\envs\\qiskit-0-27-psi4-jupyter\\Scripts\\psi4-script.py"", line 336, in <module>\n exec(content)\n\n File ""<string>"", line 31\nSyntaxError: (unicode error) \'unicodeescape\' codec can\'t decode bytes in position 2-3: truncated \\UXXXXXXXX escape\n\nPrinting out the relevant lines from the Psithon --> Python processed input file:\n\n\n!----------------------------------------------------------------------------------!\n! !\n! (unicode error) \'unicodeescape\' codec can\'t decode bytes in position 2-3: !\n! truncated \\UXXXXXXXX escape !\n! !\n!----------------------------------------------------------------------------------!\n\n'; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2228:3183,error,error,3183,https://psicode.org,https://github.com/psi4/psi4/issues/2228,3,['error'],['error']
Availability,"xperimental and are not generally recommendable. ----; **errors in absolute and relative energies**; Based on S22 benchmark set. no CP correction. Absolute energies for dimers only.; level of theory: PBE/aug-cc-pVTZ with grid (434,75); _grid point reduction_; * ``ROBUST = 30.3 %``; * ``TREUTLER = 45.5 %``. _interaction energies_; * MAD old BS to new BS: 0.002 kcal/mol; * MAD old BS to newBS + ``ROBUST``: 0.002 kcal/mol (yay!); * MAD old BS to newBS + ``TREUTLER``: 0.021 kcal/mol. _absolute energies_; * MAD old BS to new BS: 2.9E-06 au; * MAD old BS to newBS + ``ROBUST``: 2.9E-06 au; * MAD old BS to newBS + ``TREUTLER``: 4.5E-05; * (newBS) MAD ``NONE`` to ``ROBUST`` pruning: 1.4E-10 au; * (newBS) MAD ``NONE`` to ``TREUTLER`` pruning: 4.6E-05 au. ----; **timings** (speed ups); * benzene dimer : `ROBUST=1.16`; `TREUTLER=1.22`; PBE/aug-cc-pVTZ with grid (434,75); 16 Threads; . * C60 fullerene (C2h) : `ROBUST=1.33`; `TREUTLER=1.36`; PBE/aug-cc-pVDZ with grid (434,75); 16 Threads; . ----; **tough case**; Molecule 35 from the MB16-43 ('mindless benchmarking') benchmark set. Modelling following reaction:; `2x 35 + 20x H2 -> 2x LIH + 4x BH4 + 4x CH4 + O2 + 4x AlH4 + 2x SiH4 + P2 + CL2`; In essence, a diverse inorganic, main group chemistry reaction.; level of theory: PBE/def2-TZVP with (434,85) grid.; link to input file: https://gist.github.com/hokru/408873d71efb522f7de1f0cfe0cf9da0. _reaction energy_ ; * dev. old BS to new BS: -0.0011 kcal/mol ; * (newBS) `NONE` to `ROBUST`: -0.0003 kcal/mol; * (newBS) `NONE` to `TREUTLER`: 0.94978 kcal/mol (0.5 % of a reaction energy of 188 kcal/mol !); * speed-ups: `ROBUST=1.33 `; `TREULTER=1.36`. _absolute energy molecule 35_; * dev. old BS to new BS: 3.41e-07; * (newBS) `NONE` to `ROBUST`: 4.93e-07; * (newBS) `NONE` to `TREUTLER`: 1.46E-04. _gradient energy molecule 35_; * (newBS) MAD `NONE` to `ROBUST`: ~ 1E-7; * (newBS) MAD `NONE` to `TREUTLER`: ~ 1E-05. _grid point reduction molecue 35_; * ``ROBUST = 30.9 %``; * ``TREUTLER = 45.8 %``",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:4656,ROBUST,ROBUST,4656,https://psicode.org,https://github.com/psi4/psi4/pull/1591,5,['ROBUST'],['ROBUST']
Availability,"yne using basis cc-pvdz. memory 5000 mb. molecule Graphyne {; 0 1; C 1.396 0.000 0.000; C 0.698 1.209 0.000; C -0.698 1.209 0.000; C -1.396 0.000 0.000; C -0.698 -1.209 0.000; C 0.698 -1.209 0.000; H 1.240 2.147 0.000; H -1.240 2.147 0.000; H -2.479 0.000 0.000; H -1.240 -2.147 0.000; H 1.240 -2.147 0.000; C 2.798 0.000 0.000; C 4.020 0.000 0.000; C 5.422 0.000 0.000; C 8.214 0.000 0.000; C 7.516 1.209 0.000; C 6.120 1.209 0.000; C 6.120 -1.209 0.000; C 7.516 -1.209 0.000; H 8.058 2.147 0.000; H 5.578 2.147 0.000; H 9.297 0.000 0.000; H 5.578 -2.147 0.000; H 8.058 -2.147 0.000. symmetry c1; units angstrom; }. set globals {; reference rhf; basis cc-pvdz ; #freeze_core true; scf_type out_of_core; dipmom true; num_roots 4; }. set scf d_convergence 10; set detci e_convergence 8. thisenergy = energy('fci'). ---. I am getting this erorr and i am not able to correct this. any one can help me ? . PSIO_ERROR: unit = 41, errval = 12; PSIO_ERROR: 12 (error writing to file); Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/usr/local/psi4/share/psi/python/driver.py"", line 549, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/usr/local/psi4/share/psi/python/proc.py"", line 1481, in run_detci; psi4.transqt2(); RuntimeError: PSIO Error; file: /home/psi4.0b5/src/lib/libpsio/error.cc; ## line: 116. Output File. ```; -----------------------------------------------------------------------; PSI4: An Open-Source Ab Initio Electronic Structure Package; PSI 4.0.0-beta5 Driver. J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci., (2011) (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, M. Saitow, U. Bozkaya, A. Yu. Sokolov; ------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/61:1253,error,error,1253,https://psicode.org,https://github.com/psi4/psi4/issues/61,1,['error'],['error']
Deployability," ""--pcmsolver off"". . After successfull ./setup I went to the objdir and ran ""make"". Does anyone know, what can I do in this case? As far as I unserstand, I can only use mkl with intel compiler. Generally, I need psi4 to compute electronic density grids for fullCI and Coupled Cluster calculations of small molecules with huge basis sets. Thank you in advance.; Best regards,; Michael Medvedev. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; -- System : Linux; -- Processor type : x86_64; -- C++ compiler flags : -DRESTRICT=**restrict** -Xlinker -export-dynamic -fPIC -std=gnu++98 -mkl=parallel -openmp -O3 -no-prec-div -DNDEBUG -xHost; -- C compiler flags : -restrict -DRESTRICT=**restrict** -std=c99 -fPIC -mkl=parallel -open",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:4302,release,release,4302,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability," **History rewrite:**; Over time the Psi4 git repository has accumulated many large files (mostly boost binaries) that are not currently used; however, they still exists within the repository and are downloaded every time the repository is cloned. This has caused Psi4 to balloon to approximately 650MB, while only about 65MB of that is currently used. In order to reduce the repository size, these files will be removed from history. When this occurs **_all_** current Psi4 clones **_and_** forks will become invalid. These will need to be deleted and reforked/recloned. ; ## Schedule. We are currently planning to merge in the Boost removal and build system changes in the next day or so. It should be noted that while core Psi4 is stable, external projects such as ChemPS2 and EFP may not work. The build systems has also only seen compilation on half a dozen architectures and setups, you may encounter errors in the build process. A new branch named 1.0.x maintenance has been created that contains a stable and updated version of the 1.0 release. In effect, this means that the master branch will no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if you need additional time to rebase in a change.; ## Summary. Changes for developers:; - **WARNING!** All clones and forks will need to be",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:3084,update,updated,3084,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['update'],['updated']
Deployability, ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36hde5b4d6_0 ...; installing: pcmsolver-1.2.1-py36h8733eb9_0 ...; installing: pluggy-0.11.0-py_0 ...; installing: py-1.8.0-py36_0 ...; installing: pycosat-0.6.3-py36h14c3975_0 ...; installing: pycparser-2.19-py36_0 ...; installing: pylibefp-0.4+f42ffb8-py36h5a86982_1 ...; installing: pysocks-1.7.0-py36_0 ...; installing: ruamel_yaml-0.15.46-py36h14c3975_0 ...; installing: six-1.12.0-py36_0 ...; installing: v2rdm_casscf-0.8-py36hc3560e4_6 ...; installing: wcwidth-0.1.7-py36_0 ...; installing: cffi-1.12.3-py36h2e261b9_0 ...; installing: deepdiff-3.3.0-py36_1 ...; installing: mkl_random-1.0.2-py36hd81dba3_0 ...; installing: pydantic-0.23-py36_0 ...; installing: setuptools-41.0.1-py36_0 ...; installing: cryptography-2.6.1-py36h1ba5d50_0 ...; installing: networkx-2.3-py_0 ...; installing: pint-0.9-py36_2 ...; installing: pytest-4.5.0-py36_0 ...; installing: wheel-0.33.4-py36_0 ...; installing: pip-19.1.1-py36_0 ...; installing: pyopenssl-19.0.0-py36_0 ...; installing: urllib3-1.24.2-py36_0 ...; installing: requests-2.21.0-py36_0 ...; installing: conda-4.6.14-py36_0 ...; installing: h5py-2.8.0-py36h989c5e5_3 ...; installing: mkl_fft-,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:2703,install,installing,2703,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability," CTRL-C to abort the installation; - Or specify a different location below. [/home/chenh/psi4conda] >>> /home/chenh/ly/sourcefolders/psi4conda; PREFIX=/home/chenh/ly/sourcefolders/psi4conda; installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; in",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1371,install,installing,1371,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability," In function `boost::mpi::detail::packed_archive_recv(int, int, int, boost::mpi::packed_iarchive&, MPI_Status&)':; point_to_point.cpp:(.text+0x2c1): undefined reference to `MPI_Recv'; point_to_point.cpp:(.text+0x318): undefined reference to `MPI_Recv'; point_to_point.cpp:(.text+0x40a): undefined reference to `MPI_Free_mem'; point_to_point.cpp:(.text+0x4a7): undefined reference to `MPI_Alloc_mem'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::wait()':; request.cpp:(.text+0x82): undefined reference to `MPI_Waitall'; request.cpp:(.text+0xd4): undefined reference to `MPI_Wait'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::test()':; request.cpp:(.text+0x201): undefined reference to `MPI_Testall'; request.cpp:(.text+0x283): undefined reference to `MPI_Test'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(request.o): In function `boost::mpi::request::cancel()':; request.cpp:(.text+0x38e): undefined reference to `MPI_Cancel'; request.cpp:(.text+0x3a9): undefined reference to `MPI_Cancel'; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/boost-1.61.0-deyw7xs6bmycmara46vfwnd3xnpbivxe/lib/libboost_mpi-mt.a(exception.o): In function `boost::mpi::exception::exception(char const*, int)':; exception.cpp:(.text+0xaf): undefined reference to `MPI_Error_string'; collect2: error: ld returned 1 exit status; make[2]: *** [bin/psi4] Error 1; make[1]: *** [src/bin/psi4/CMakeFiles/psi4.dir/all] Error 2; make: *** [all] Error 2; ```. It looks to me like a problem with my external Boost installation. Can you confirm this? I just wanted to make sure there wasn't some linking flag I'm missing before contacting the Boost developers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/411:36572,install,installation,36572,https://psicode.org,https://github.com/psi4/psi4/issues/411,1,['install'],['installation']
Deployability," PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] This includes some changes I salvaged from the old clean-python branch.; - [x] Ambit builds with `ENABLE_ambit` as directed from the `external/upstream/ambit/CM`.; - [x] Ambit _does not_ link into Psi4, as Psi4 doesn't use it. So it's more like Psi4's build system carries it along.; - [x] The ambit plugin template _is_ in working build order (if you check out the plugin manually; the skeleton plugins are _not_ in working order). It detects the ambit package and links it in. It _doesn't_ however run. See error below that I bet @jturney can patch up in no time.; - [x] This is associated with branch `cmakelab2` in the main Jet ambit repo. If you haven't already hunted it down, below is the way to work on psi4 repo and ambit repo locally simultaneously. ```; #GIT_REPOSITORY https://github.com/jturney/ambit; #GIT_TAG cmakelab2; DOWNLOAD_COMMAND """"; SOURCE_DIR ""/path/to/ambit-directclone""; ```. * **User-Facing for Release Notes**. ## Questions; - [x] This is not ambit in full working order. This is ambit reintegrated to the point that ambit people can patch it up a bit and return it to full working order. ; - [x] @jturney, I didn't renovate the ambit CMake like on some other external projects. If you've a mind to do so, CheMPS2 is quite similar to Ambit in build artifacts and [my CheMPS2 branch config6](https://github.com/loriab/CheMPS2/tree/config6) is current state of the art. ```; Attention! This SCF may be density-fitted.; Traceback (most recent call last):; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/lib//psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/593:1069,Release,Release,1069,https://psicode.org,https://github.com/psi4/psi4/pull/593,1,['Release'],['Release']
Deployability," S 1 1.0; 20.0 1.0; S 1 1.0; 2.0 1.0; ****; Li 2; S 1 1.0; 10.0 1.0; S 1 1.0; 1.0 1.0; ****; }. energy('scf'); ```; should give me the first basis set on atom 1 and the second basis set on atom 2. What I get instead is. ```; $ psi4 . QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['LI']; Basis Sets: [('anonymous8452ca2a', 'anonymous8452ca2a', None)]; File Path: /tmp/crc, /tmp/crc, /home/work/psi4/install/share/psi4/basis; Input Blocks: anonymous8452ca2a. Traceback (most recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 271, in <module>; exec(content); File ""<string>"", line 48, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 493, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 2006, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1266, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); File ""/home/work/psi4/install/lib/psi4/driver/p4util/python_helpers.py"", line 115, in pybuild_wavefunction; basis = core.BasisSet.build(mol, ""ORBITAL"", basis); File ""/home/work/psi4/install/lib/psi4/driver/p4util/python_helpers.py"", line 77, in pybuild_basis; return_atomlist=return_atomlist); File ""/home/work/psi4/install/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 683, in pyconstruct; verbose=verbose); File ""/home/work/psi4/install/lib/psi4/driver/qcdb/libmintsbasisset.py"", line 902, in construct; (at + 1, key, text2)). BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: ['LI']; Basis Sets: [('anonymous8452ca2a', 'anonymous8452ca2a', None)]; File Path: /tmp/crc, /tmp/crc, /home/work/psi4/install/share/psi4/basis; Input Blocks: anonymous8452ca2a; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1270:1288,install,install,1288,https://psicode.org,https://github.com/psi4/psi4/issues/1270,5,['install'],['install']
Deployability," The final CompositeJK PR will be the refactoring of the CompositeJK backend to truly support arbitrary mixing and matching of J/K build algorithms. ## User API & Changelog headlines; - [x] The DO_LINK option has been removed.; - [x] The SCF_TYPE option ""LINK"" has been added, enabling use of the integral-direct density-fitted J + Linear Exchange K algorithm combination for JK computations. ## Dev notes & details; - [x] The new JK subclass ""DFJLinK"" has been added to Psi4. DFJLinK combines the integral-direct density fitted formation of J with the linear-scaling formation of the exact K through the LinK algorithm. DFJLinK supports both density screening and incremental Fock construction, using machinery similar to the DirectJK class to do so.; - [x] The computation of LinK, and all references thereof, have been removed from DirectJK. This includes, e.g., removal of the build_linK() function from DirectJK entirely.; - [x] All relevant tests, samples, and documentation (particularly those pertaining to LinK) have been updated to reflect the two previous changes. ## Questions; - [ ] How do we feel about having the integral-direct DF-J implementation in two separate JK subclasses? The plan is to remove this in the second CompositeJK PR, when DFJLinK and DFJCOSK are combined, but is the dual implementation of DF-J something people would take issue with?; - [ ] Do we want to the update the definition of num_computed_shells() for DFJLinK? For now, I have this set to the default JK definition for DFJLinK, and the issue is that, since there are shell triplet counts from DFJ and shell quartet counts from LinK, there would have to be a slightly more expansive change to how num_computed_shells() works in the JK class hierarchy to support DFJLinK. I'm thinking updating this will be a problem for the second CompositeJK PR, but I'm curious to see what others have to say. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://p",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762:4614,update,updated,4614,https://psicode.org,https://github.com/psi4/psi4/pull/2762,1,['update'],['updated']
Deployability," Then, there was #2354 that added remp2 E & G to `occ` and `dfocc` and made extensive improvements to `dfocc` in the matter of combined DIIS (vital for convergence) and int overflows. All based on pre-DIIS overhaul #2369 . To untangle this, I started from master, cherry-picked the dfocc2 commits, cherry-picked the #2354 commits, modernized the DIIS calls, then added the neglected stdsuite testing and attendant qcvar fixups for existing occ/dfocc methods and new methods remp2 and categories (1) and (2) from dfocc2 branch. That mega-changeset lives at #2633 for now. This PR breaks off the `occ` portion for review. ## Todos; - [x] @behnle added REMP2 and OREMP2 hybrid perturbation theories (https://doi.org/10.1063/1.5086168) with conventional integrals added to `occ` module, as originally proposed in #2354; - [ ] note that this uses a specialty QCEngine for reference values. https://github.com/MolSSI/QCEngine/pull/375 It'll build by itself. I'll need to mint a QCEngine patch release before building conda packages with this PR in master.; - [x] docs-wise, I picked off a bit and included it in this PR. on the whole, let's defer docs edits until the dfocc PR; - [x] reworked the run_occ* driver functions a bit so that method defs are localized and there's less risk of missing an internal setting when adding new methods.; - [x] added stdsuite testing for new methods remp2 energy and oremp2 energy and gradient. added stdsuite testing for existing E & G for omp2, omp2.5, omp3, oremp2, olccd and filled in some gaps for ccsd, ccsd(t), a-ccsd(t). all conventional ints. fixed up some mis-set byproducts uncovered by stdsuite testing: OO ROHF was printing and setting wrong plain MP2 energies, OMP3 & OMP2.5 wasn't setting right `Wfn.energy_`, stop setting ROHF MP3 and MP2.5 out of caution.; - [x] tightened the min rms_mograd_convergence from 6.0 to 6.5 so that stdsuite (3 mol/basis sets) could reliably compute energies, gradients, and findif gradients to 1e-6. ## Questions; - [x] so",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2653:1336,patch,patch,1336,https://psicode.org,https://github.com/psi4/psi4/pull/2653,2,"['patch', 'release']","['patch', 'release']"
Deployability," [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning. c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; Following warning is harmless if you've altered chgmult through `set_molecular_change` or `set_multiplicity`. Such alterations are an expert feature. Specifying in the original molecule string is preferred. Nonphysical masses may also trigger the warning.; ...; ```. ```; c: [1.0, 0]; fc: [0.0]; m: [2]; fm: [3]; ```; steems from https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1646. and can be silenced by setting `verbose=-1`,; the other is 4 lines below:. https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/molecule.py#L1650. This PR, adds `quiet` param to `to_dict` in Molecule and `energy` in Driver, and uses that in `ip_fitting` not to post both of them out. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] removed noise from stdout while running `ip_tunning`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] silences plain `print` from `Molecule.to_dict()` - `qcel.molparse.from_arrays` and warning around setting charge/multiplicity when running `ip_fitting`. This shouldn't change other code paths. ## Questions; - [ ] Do psi have any tests that test stdout with pytest?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3229:2240,release,release,2240,https://psicode.org,https://github.com/psi4/psi4/pull/3229,1,['release'],['release']
Deployability," [1.2+9d4a61c|1.2.1+406f4de|...|1.7+6ce35a5] would require; │ │ └─ blas 1.0 mkl, which can be installed;; │ └─ psi4 [0.5.360|1.0rc0|1.0rc213] would require; │ ├─ hdf5 1.8.16 , which does not exist (perhaps a missing channel);; │ └─ pychemps2 1.7.1 , which cannot be installed (as previously explained);; ├─ psi4-rt is installable with the potential options; │ ├─ psi4-rt [1.2|1.3|...|1.7] would require; │ │ └─ v2rdm_casscf [0.8 py27hbddea90_0|0.8 py35hbddea90_0|...|0.9 py39hf915834_9], which requires; │ │ └─ blas 1.0 mkl, which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.5* , which can be installed;; │ ├─ psi4-rt 1.1 would require; │ │ └─ python 3.6* with the potential options; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1d,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.10 would require; │ │ │ └─ openssl >=1.1.1e,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.10|3.6.12] would require; │ │ │ └─ openssl >=1.1.1g,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1k,<1.1.2a , which can be installed;; │ │ ├─ python 3.6.13 would require; │ │ │ └─ openssl >=1.1.1j,<1.1.2a , which can be installed;; │ │ ├─ python [3.6.2|3.6.3] would require; │ │ │ └─ openssl 1.0.* , which can be installed;; │ │ ├─ python 3.6.3 would require; │ │ │ └─ openssl >=1.0.2m,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.4 would require; │ │ │ └─ openssl >=1.0.2n,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.5|3.6.6] would require; │ │ │ └─ openssl >=1.0.2o,<1.0.3a , which can be installed;; │ │ ├─ python 3.6.6 would require; │ │ │ └─ openssl >=1.0.2p,<1.0.3a , which can be installed;; │ │ ├─ python [3.6.7|3.6.8] would require; │ │ │ └─ openssl >=1.1.1a,<1.1.2a , which can be installed;; │ │ └─ python 3.6.9 would require; │ │ └─ openssl >=1.1.1c,<1.1.2a , which can be installed;; │ └─ psi4-rt 1.1 would require; │ └─ python 2.7* , which can be installed;; └─ python 3.6** , which can be installed",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2912:3301,install,installed,3301,https://psicode.org,https://github.com/psi4/psi4/issues/2912,1,['install'],['installed']
Deployability," [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 conda-forge; certifi 2017.7.27.1 py36_0 conda-forge; chemps2 1.8.4 0 psi4/label/dev; cloog 0.18.0 0 ; decorator 4.1.2 py36_0 conda-forge; dftd3 3.2.0 7 psi4; dkh 1.2 1 psi4/label/dev; erd 3.0.6 1 psi4/label/dev; gcc-5 5.2.0 1 psi4; gcc-5-mp 5.2.0 0 psi4; gcp 2.0.1 0 psi4; gdma 2.2.6 3 psi4/label/dev; gmp 6.1.2 0 conda-forge; hdf5 1.8.17 11 conda-forge; intel-openmp 2018.0.0 h15fc484_7 ; ipykernel 4.6.1 py36_0 conda-forge; ipython 6.2.1 py36_0 conda-forge; ipython_genutils 0.2.0 py36_0 conda-forge; isl 0.12.2 0 ; jedi 0.10.2 py36_0 conda-forge; jupyter_client 5.1.0 py36_0 conda-forge; jupyter_core 4.4.0 py_0 conda-forge; libefp 1.5b1 0 psi4/label/dev; libgfortran 3.0.0 1 ; libint 1.2.1 1 psi4/label/dev; libsodium 1.0.10 0 conda-forge; libxc 3.0.0 6 psi4/label/dev; mkl 2018.0.0 hb4",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:2526,release,release,2526,https://psicode.org,https://github.com/psi4/psi4/issues/862,1,['release'],['release']
Deployability," a notebook, `sys.path` and `sys.executable` are the same, but when I `import psi4`, I get a message ""The kernel appears to have died. It will restart automatically."" In the terminal, I see: ; ```; [I 17:41:23.834 NotebookApp] Adapting to protocol v5.1 for kernel 56076279-b2b7-4f6a-8fb0-83b5b1f774c4; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; [IPKernelApp] ERROR | No such comm target registered: jupyter.widget.version; terminate called after throwing an instance of 'std::bad_cast'; what(): std::bad_cast; [I 17:41:41.146 NotebookApp] KernelRestarter: restarting kernel (1/5); ```. I think the first three lines are unrelated. The kernel never recovers and I can't import the module. Should I expect that Psi4 will work inside a `jupyter notebook` and if so, is there any way to get more information about what's going wrong?. **Edit:** I should add that to get `jupyter notebook` to see the `p4env` conda environment, I executed `conda install ipykernel --name p4env` and then `~/data/applications/psi4conda/envs/p4env/bin/python -m ipykernel install --user` (according to [these](https://github.com/jupyter/notebook/issues/1524) instructions). - CentOS Linux release 7.4.1708 (Core) ; - 3.10.0-693.5.2.el7.x86_64; - Python 3.6.3; - Jupyter 4.4.0; - Psi4 1.2a1.dev611+8fe3513; <details><summary>Output of `conda list`</summary><p>. ```; ca-certificates 2017.7.27.1 0 conda-forge; certifi 2017.7.27.1 py36_0 conda-forge; chemps2 1.8.4 0 psi4/label/dev; cloog 0.18.0 0 ; decorator 4.1.2 py36_0 conda-forge; dftd3 3.2.0 7 psi4; dkh 1.2 1 psi4/label/dev; erd 3.0.6 1 psi4/label/dev; gcc-5 5.2.0 1 psi4; gcc-5-mp 5.2.0 0 psi4; gcp 2.0.1 0 psi4; gdma 2.2.6 3 psi4/label/dev; gmp 6.1.2 0 conda-forge; hdf5 1.8.17 11 conda-forge; intel-openmp 2018.0.0 h15fc484_7 ; ipykernel 4.6.1 py36_0 conda-forge; ipython 6.2.1 py36_0 conda-forge; ipython_genutils 0.2.0 py36_0 conda-forge; isl 0.12.2 0 ; jedi 0.10.2 py36_0 conda-forge; jupyter_client 5.1.0 py36_0 conda-forge; jup",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862:2302,install,install,2302,https://psicode.org,https://github.com/psi4/psi4/issues/862,2,['install'],['install']
Deployability," adding machine-readable (for eg. VSCode) docstrings, adding const to arguments, replacing `int` with `size_t` to match `std::vector::operator[](std::size_t)` and cautiously deprecating member functions that deal with pointers. Not only are pointers more error-prone, they are currently involved in some strange interaction between `Dimension` and `Matrix` objects, resulting in awkward roundabout initialization/construction that I hope to untangle before Psi4 1.11? (1.11, or maybe 1.12?).; Please let me know if you feel the three deprecations in this PR would be too disruptive or otherwise undesirable, this PR is very much a ""request for comments"". ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] API change: The custom assignment operator for `Dimension` objects (`Dimension& operator=(const int*)`) is being deprecated. Unless someone speaks up, 1.10 may be the last release to have it.; - [x] API change: Cast-to-pointer operators for `Dimension` objects (`operator int*()` and `operator const int*() const`) are being deprecated. Unless someone speaks up, 1.10 may be the last release to have them.; - [x] Minor API change: Several constructors and member functions of `Dimension` are now using `size_t` instead of `int` for indexing:; −`Dimension::Dimension(int, const std::string&)` is now `Dimension::Dimension(size_t, const std::string&)`; −`void Dimension::init(int, const std::string&)` is now `void Dimension::init(size_t, const std::string&)`; −`int Dimension::n() const` is now `size_t Dimension::n() const`; −`int& Dimension::operator[](int)` is now `int& Dimension::operator[](size_t)`; −`const int& Dimension::operator[](int) const` is now `const int& Dimension::operator[](size_t) const`; −`const int& Dimension::get(int) const` is now `const int& Dimension::get(size_t) const`; −`void Dimension::set(int, int)` is now `void Dimension::set(size_t, int)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2953:1144,release,release,1144,https://psicode.org,https://github.com/psi4/psi4/pull/2953,1,['release'],['release']
Deployability," after #2388 introduces segfaults (details see below), which so far I have not yet been able to trace down. Any help on that would be much appreciated. ## User API & Changelog headlines; - Implementation of PCM and COSMO solvation models based on the ddx library. ## Dev notes & details; - Introduction of a NumIntHelper class to compute some integrals numerically using a DFT grid; - Introduction of ddx solvation model and new ddx options. ## Reproducer for the mysterious segfault; As part of rebasing against the current master I encountered a really strange segfault. I managed to produce a minimal example, which has really nothing to do with ddx and only adds a python interface to a simple numerical electrostatic integral. See here for a [trimmed-down diff](https://github.com/psi4/psi4/compare/master...mfherbst:psi4:segfault). On my machine checking out this `segfault` branch with `0_configure.sh`, building and running the `mytests/runtests.sh` script gives a segfault inside the numerical integration in the `PCMPotentialInt` class. Note that the code I added *is not even called*, the call to `PCMPotentialInt` happens from the pcm code *which I have not modified*. Now, commenting out; ```c++; PrintIntegralsFunctor printer;; potential_integrals_->compute(printer);; ```; the segfault disappears. I'm getting the weird feeling I'm doing something really stupid here and I just missed it. ## Questions; - [x] Thoughts on the NumIntHelper?; - [x] Is D -> D_cart needed or not ([this stuff](https://github.com/psi4/psi4/pull/2767/commits/108b6bb1a53cdc428933475dea991e08a3330d98#diff-48947c7a095c933d6843e0564043f051b0e54dff111fff222bf25cd968f6f9daR1769-R1780)); - [x] Any idea on the segfault when rebasing against master?. ## Checklist; - [x] Find and fix segfaults when using psi4 master; - [x] Remove debug restriction to one thread in numerical integrals; - [x] Documentation; - [x] Bring forward more options to change numerical grid details for DDX solvation models; - [x] ~~Merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767:1523,integrat,integration,1523,https://psicode.org,https://github.com/psi4/psi4/pull/2767,1,['integrat'],['integration']
Deployability," are now unified, so we don't need to edit all three generators when one is bugged.; - [x] Various PyBinding has been done. Among other things, the new Py-side compute_atom_map function from pyvib2 now works with psi4 molecules.; - [x] Fixes a bug in the `CharacterTable` copy constructor member initialization list, which used to require a string to be an integer.; - [x] Fixes a bug in vibrational analysis where the zero K enthalpy variable was misspelled.; - [x] Getting geometries for finite difference calculations is now Py-side.; - [x] Computing gradients from energies is now Py-side.; - [x] Computing hessians from gradients is now Py-side.; - [x] Computing hessians from energies is now Py-side.; - [x] Finish renaming the finite difference functions.; - [x] Overly picky changes for consistent style and commenting.; - [x] Review the findif test suite and add any tests as needed.; - [x] Add the banner.; - [x] Remove old FINDIF code (after migrating to attic).; - [x] Removed the C-side gradient writer.; - [x] Added several new gradient writing formats.; * **User-Facing for Release Notes**; - [x] A warning now displays if you attempt to access-by-index or iterate over an irreped object, instead of using a NumPy accessor.; - [x] Gradients can now be written, even for analytic hessians.; - [x] The .grad file will now only write the latest hessian. ## Questions; - [x] I had to change the internals of SymmetryOperation to make PyBind happy. I trust there are no objections?; - [x] Since pyvib2 made hessian writing no longer FINDIF's responsibility, shall I make gradient writing no longer FINDIF's responsibility as well? Then `comp_grad_from_hess` could return a Numpy array, like the `comp_hess_from_X` functions. ## Checklist; - [x] Tests added for any new features (or rather, edited in); - [x] [Relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1024:1340,Release,Release,1340,https://psicode.org,https://github.com/psi4/psi4/pull/1024,1,['Release'],['Release']
Deployability," developer a beer!; ```. The worst output was that one time I got two summaries for CBS energies at the end of the file, and the results were different. ```; ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -0.15577370 xtpl_highest_1; total CBS -1011.27544804; ---------------------------------------------------------------------------------------------------------; => Loading Basis Set <=. Name: DEF2-SVP; Role: ORBITAL; Keyword: BASIS; atoms 1, 3, 5, 13, 15, 17 entry N line 110 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 2, 4, 6, 14, 16, 18 entry C line 90 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 7, 9, 11, 19, 21, 23 entry O line 130 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs; atoms 8, 10, 12, 20, 22, 24 entry H line 15 file /theoryfs2/ds/cdsgroup/psi4-install/psi4-group-multiarch-c12/share/psi4/basis/def2-svp.gbs. Psi4 stopped on: Tuesday, 18 September 2018 03:03PM; Psi4 wall time for execution: 1 day, 4:22:27.10. *** Psi4 exiting successfully. Buy a developer a beer!; --------------------------------------------------------------------------------------------------; Stage Method / Basis Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / aug-cc-pvqz -1007.18544968 xtpl_highest_1; corl mp2 / aug-cc-pv[tq]z -3.93422466 corl_xtpl_helgaker_2; delta fno-ccsd(t) - mp2 / aug-cc-pvdz -4.79308051 xtpl_highest_1; total CBS -1015.91275485; ----------------------------------",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1279:1415,install,install,1415,https://psicode.org,https://github.com/psi4/psi4/issues/1279,1,['install'],['install']
Deployability, eternal loop in the ambit install. Trying to install the current HEAD with ambit enabled results in. -- Up-to-date: /home/work/psi4/psi4/include/psi4/FCMangle.h; -- Up-to-date: /home/work/psi4/psi4/include/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/FCMangle.h; -- Installing: /home/work/psi4/psi4/include/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4/psi4; -- Installing: /home/wo,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/460:941,Install,Installing,941,https://psicode.org,https://github.com/psi4/psi4/issues/460,2,['Install'],['Installing']
Deployability," external/upstream/libint2/all; …; -- Looking for posix_memalign - found; -- Could NOT find Eigen3 (missing: EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK) (Required is at least version ""2.91.0""); CMake Error at CMakeLists.txt:124 (message):; C++ API cannot be built without Eigen3; configure (via CMake) and install; Eigen3 and add the install prefix to CMAKE_PREFIX_PATH, or add; -DREQUIRE_CXX_API=OFF to the CMake command line if the C++ API is not; required. -- Configuring incomplete, errors occurred!; See also ""external/upstream/libint2/libint2_external-prefix/src/libint2_external-build/CMakeFiles/CMakeOutput.log"".; ninja: build stopped: subcommand failed.; ```. The source of libint2 is; https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L63. `build/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt` has the following line:; ```; 115:find_package(Eigen3 MODULE); ```; Hence `find_package` runs in only MODULE mode, where CMake searches `FindEigen3.cmake` (https://cmake.org/cmake/help/v3.18/command/find_package.html). Its location is set by the `CMakeLists.txt`:; ```; 6:list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules); ```. CMake passes only the `Eigen3_DIR` variable. https://github.com/psi4/psi4/blob/d725195826a1766a82940e8e2dab05c541c7377c/external/upstream/libint2/CMakeLists.txt#L87. but it is not used by `FindEigen3.cmake`, resulting in configuration error. https://github.com/evaleev/libint does not seem to have `find_package(Eigen3 MODULE)` line and `FindEigen3.cmake` file. A workaround is to `export EIGEN3_ROOT=/path/to/eigen3/include`, or patch; ```diff; --- a/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt; +++ b/external/upstream/libint2/libint2_external-prefix/src/libint2_external/CMakeLists.txt; @@ -114,3 +114,3 @@; ; -find_package(Eigen3 MODULE); +find_package(Eigen3); ; ```; and remove `FindEigen3.cmake`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2606:1972,configurat,configuration,1972,https://psicode.org,https://github.com/psi4/psi4/issues/2606,2,"['configurat', 'patch']","['configuration', 'patch']"
Deployability," here. -->; For some poorly understood confluence of reasons, for some users error messages can _sometimes_ get completely lost when Psi4 exits with a `PSIEXCEPTION`, especially when a PSIO error happens.; This can be observed in recent bug reports, see:. - https://github.com/psi4/psi4/issues/2970; - https://forum.psicode.org/t/sapt0-calculation-crashes-pointer-error/2839. In both of these cases the users were only seeing the error message that has been written to `cerr`, but not the string that `PSIEXCEPTION` should have printed. IIRC when I tried to research this quite a while ago, I have found this may be a bug in some versions of libstdc++. This PR adds a simple workaround: the exception message is also printed to `cerr` in `psio_error`. The only side effect, is that some users, who are currently not affected by the lost message problem, may start getting the same error message twice when a PSIO error happens. Spammy error exits are not great, but PSIO errors are not supposed to happen too often, and when they do loosing the error message is more annoying than having it be duplicated. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] PSIO error messages are now also printed to `cerr`, fixing an issue where (under some circumstances) large parts of the error message would never reach the user, . ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] The same error message that gets passed to `PSIEXCEPTION` is now printed to `cerr` before throwing in `psio_error`. ## Checklist; - [x] There is no easy way to add tests for ""are error messages getting delivered or not?""; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2997:1307,release,release,1307,https://psicode.org,https://github.com/psi4/psi4/pull/2997,1,['release'],['release']
Deployability," included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:78:76: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)0, (pybind11::detail::op_type)0, pybind11::detail::self_t, pybind11::detail::self_t> pybind11::detail::operator+(const pybind11::detail::self_t&, const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_l, self_t, self_t> op(const self_t &, const self_t &) { \; ^; /home/work/psi4/install/include/pybind11/operators.h:109:1: note: in expansion of macro ‘PYBIND11_BINARY_OPERATOR’; PYBIND11_BINARY_OPERATOR(add, radd, operator+, l + r); ^~~~~~~~~~~~~~~~~~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/cast.h:15,; from /home/work/psi4/install/include/pybind11/attr.h:13,; from /home/work/psi4/install/include/pybind11/pybind11.h:36,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:38,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/descr.h:116:36: note: previous definition of ‘pybind11::detail::descr pybind11::detail::operator+(pybind11::detail::descr&&, pybind11::detail::descr&&)’ was here; PYBIND11_NOINLINE descr friend operator+(descr &&d1, descr &&d2) {; ^~~~~~~~; In file included from /home/work/psi4/install/include/pybind11/stl_bind.h:13,; from /home/work/psi4/psi4/psi4/include/psi4/pybind11.h:40,; from /home/work/psi4/psi4/psi4/src/core.cc:34:; /home/work/psi4/install/include/pybind11/operators.h:104:65: warning: inline declaration of ‘pybind11::detail::op_<(pybind11::detail::op_id)13, (pybind11::detail::op_type)2, pybind11::detail::self_t, pybind11::detail::undefined_t> pybind11::detail::operator+(const pybind11::detail::self_t&)’ follows declaration with attribute ‘noinline’ [-Wattributes]; inline op_<op_##id, op_u, self",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1256:1671,install,install,1671,https://psicode.org,https://github.com/psi4/psi4/issues/1256,1,['install'],['install']
Deployability," including by specifying exceptions in footnotes. This discouraged updating since it was hard to know what was right w/o extensive testing and/or it was easier to glide over details. The hand-gen table has been replaced to be more general listing maximum capabilities, the parallelism column has been removed, and the complementary auto-gen summary table has been added; - [x] the main hand-generated capabilities table in introduction.rst and the docstring methods table in driver.py (shows up in https://psicode.org/psi4manual/master/energy.html etc.) have been reconciled with the current state of the procedures table. Devs are now admonished to update all three concurrently :-); - [x] Some investigation and searching of CDS's memory and comparison to GAMESS concluded that for arbitrary-order MPn and ZAPTn through DETCI that the written docs were right (MPn for RHF only and ZAPTn for ROHF only) and what was allowed was wrong (both for both). This has been reworked to match the written docs and various UpgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deployed. The MRCC definition dictionary has been moved from driver_util.py (in a fn) to a raw dict in procrouting/proc_data.py. Collection of qcvars has been maximized. closes #2634. replaces and closes #2638 EDIT: af",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:5529,Upgrade,UpgradeHelpers,5529,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['Upgrade'],['UpgradeHelpers']
Deployability," installing: python-3.6.8-h0371630_0 ...; Python 3.6.8 :: Anaconda, Inc.; installing: blas-1.0-mkl ...; installing: ca-certificates-2019.1.23-0 ...; installing: dftd3-3.2.1-h84218bc_2 ...; installing: dkh-1.2-h173d85e_2 ...; installing: gcp-2.0.2-h84218bc_1 ...; installing: gdma-2.2.6-h0e1e685_6 ...; installing: intel-openmp-2019.3-199 ...; installing: libgcc-ng-8.2.0-hdf63c60_1 ...; installing: libgfortran-ng-7.3.0-hdf63c60_0 ...; installing: libint-1.2.1-hb4a4fd4_6 ...; installing: libstdcxx-ng-8.2.0-hdf63c60_1 ...; installing: simint-0.7-h642920c_1 ...; installing: gau2grid-1.3.1-h035aef0_0 ...; installing: gmp-6.1.2-h6c8ec71_1 ...; installing: gsl-2.4-h14c3975_4 ...; installing: libffi-3.2.1-hd88cf55_4 ...; installing: libxc-4.3.4-h7b6447c_0 ...; installing: metis-5.1.0-hf484d3e_4 ...; installing: mkl-2019.3-199 ...; installing: ncurses-6.1-he6710b0_1 ...; installing: openssl-1.1.1b-h7b6447c_1 ...; installing: tbb-2019.4-hfd86e86_0 ...; installing: xz-5.2.4-h14c3975_4 ...; installing: yaml-0.1.7-had09818_2 ...; installing: zlib-1.2.11-h7b6447c_3 ...; installing: glpk-4.65-h3ceedfd_2 ...; installing: hdf5-1.10.2-hba1933b_1 ...; installing: libedit-3.1.20181209-hc058e9b_0 ...; installing: libefp-1.5.0-h84097be_1 ...; installing: readline-7.0-h7b6447c_5 ...; installing: suitesparse-5.2.0-h9e4a6bb_0 ...; installing: tk-8.6.8-hbc83047_0 ...; installing: ambit-0.3-h137fa24_1 ...; installing: chemps2-1.8.9-h8c3debe_0 ...; installing: sqlite-3.28.0-h7b6447c_0 ...; installing: asn1crypto-0.24.0-py36_0 ...; installing: atomicwrites-1.3.0-py36_1 ...; installing: attrs-19.1.0-py36_1 ...; installing: certifi-2019.3.9-py36_0 ...; installing: chardet-3.0.4-py36_1 ...; installing: cvxopt-1.2.0-py36hfa32c7d_0 ...; installing: dataclasses-0.6-py_0 ...; installing: decorator-4.4.0-py36_1 ...; installing: future-0.17.1-py36_0 ...; installing: idna-2.8-py36_0 ...; installing: jsonpickle-0.9.6-py36_0 ...; installing: more-itertools-7.0.0-py36_0 ...; installing: numpy-base-1.16.3-py36h",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1788:1562,install,installing,1562,https://psicode.org,https://github.com/psi4/psi4/issues/1788,1,['install'],['installing']
Deployability," into Psi4, as Psi4 doesn't use it. So it's more like Psi4's build system carries it along.; - [x] The ambit plugin template _is_ in working build order (if you check out the plugin manually; the skeleton plugins are _not_ in working order). It detects the ambit package and links it in. It _doesn't_ however run. See error below that I bet @jturney can patch up in no time.; - [x] This is associated with branch `cmakelab2` in the main Jet ambit repo. If you haven't already hunted it down, below is the way to work on psi4 repo and ambit repo locally simultaneously. ```; #GIT_REPOSITORY https://github.com/jturney/ambit; #GIT_TAG cmakelab2; DOWNLOAD_COMMAND """"; SOURCE_DIR ""/path/to/ambit-directclone""; ```. * **User-Facing for Release Notes**. ## Questions; - [x] This is not ambit in full working order. This is ambit reintegrated to the point that ambit people can patch it up a bit and return it to full working order. ; - [x] @jturney, I didn't renovate the ambit CMake like on some other external projects. If you've a mind to do so, CheMPS2 is quite similar to Ambit in build artifacts and [my CheMPS2 branch config6](https://github.com/loriab/CheMPS2/tree/config6) is current state of the art. ```; Attention! This SCF may be density-fitted.; Traceback (most recent call last):; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/bin/psi4"", line 223, in <module>; exec(content); File ""<string>"", line 76, in <module>; File ""/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/objdir27py35/stage/theoryfs2/ds/cdsgroup/psi4-compile/hrw-temp/install-psi4/lib//psi4/driver/driver.py"", line 447, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""./../skeletonambit/pymodule.py"", line 65, in run_skeletonambit; skeletonambit_wfn = psi4.core.plugin('skeletonambit.so', ref_wfn). RuntimeError: ambit::Tensor::build: Ambit has not been initialized.; ```. ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/593:1742,install,install-,1742,https://psicode.org,https://github.com/psi4/psi4/pull/593,2,['install'],['install-']
Deployability," isotope and different temperatures and nonstandard isotopes and for nonstandard isotopes up through vibrations and enthalpy. For entropy of isotopes, in particular translational and rotational entropy, we hit a snag. The good news is that I think we're right (go @psi-rking) and everyone else is wrong. ; - Q-Chem 4.3 & Molpro 2010.1; - For default isotope H2O, we agree completely; - For non-symmetry-changing D2O, we agree (both trans and rot), as both programs recompute the total molecular mass and the symmetry number is unchanged.; - For symmetry-changing HDO and DTO, we agree for trans entropy. But both programs still use the symmetry number of the parent, so rot entropy disagrees with us but agrees with each other.; - For all isotopologs, vib entropy agrees completely; - NWChem 6.6; - For default isotope H2O, we agree completely; - For _any_ non-default isotope D2O, HDO, DTO; - trans entropy disagrees since the total molecular mass is not recomputed.; - rot entropy disagrees since the symmetry number is not updated. And it disagrees with Q-Chem and Molpro (which also don't update the symmetry number) presumably because by not updating the molecular mass they also don't update the MOI.; - For all isotopologs, vib entropy agrees completely. So, @psi-rking, @jturney, and any others with thermo experience, is psi4 indeed right on this issue? Conditions, key results, and input files below. . Conditions. ```; HF/sto-3g. O -0.0000000000 0.0000000000 0.0711556763; H -0.0000000000 0.7580818420 -0.5646461096; H 0.0000000000 -0.7580818420 -0.5646461096. all STP. H2O: default masses; D2O: w/2.014101779; HDO: w/2.014101779; DTO: w/2.014101779, 3.01604927; ```. Psi4 (with new printing) (and fixing the molecule parser that wasn't playing nicely with the basis set detector so that isotopologs weren't even isoenergetic). ```; Electronic S 0.000 [cal/(mol K)] 0.000 [J/(mol K)] 0.00000000 [mEh/K] (multiplicity = 1); Translational S 34.608 [cal/(mol K)] 144.801 [J/(mol K)] 0.05515186",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/345:1572,update,updated,1572,https://psicode.org,https://github.com/psi4/psi4/issues/345,1,['update'],['updated']
Deployability," method, and it also provides the method by which density screening can be added directly to the relevant JK classes.; Second, this PR uses the shell_significant() framework to reimplement screening for certain JK methods. Most significantly, as implied in the first point, the biggest change in this regard was the removal of shell_significant_density() from TwoBodyAOInt into the domain and its reimplementation into the JK shell_significant() definitions. With this change, density screening is now the domain of individual JK classes rather than the TwoBodyAOInt class, which was one of the primary goals of this overall refactor PR set in the first place. Additionally, another method that was subject to slight changes from the shell_significant() framework was the Yoshimine PKJK algorithm, in which its test for shell significance was implemented using the shell_significant() framework. Composite JK algorithms commonly implemented a density-based screening within them, as part of their formulation, but a shell_significant() formalism has been added to SplitJK. This framework isn't unified the same way it is for the base JK class, because the needs for testing shell significance for different composite subalgorithms varies from method to method. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3098:2630,release,release,2630,https://psicode.org,https://github.com/psi4/psi4/pull/3098,1,['release'],['release']
Deployability," mpi; -- Toolset to be used: intel-linux; -- Looking for MKL_Free_Buffers; -- Looking for MKL_Free_Buffers - found; -- Looking for __builtin_expect; -- Looking for __builtin_expect - found; -- Looking for __builtin_prefetch; -- Looking for __builtin_prefetch - found; -- Looking for __builtin_constant_p; -- Looking for __builtin_constant_p - found; -- Looking for erf; -- Looking for erf - found; -- DKH in LibMints ENABLED; -- Detecting Fortran/C Interface; -- Detecting Fortran/C Interface - Found GLOBAL and MODULE mangling; -- Verifying Fortran/CXX Compiler Compatibility; -- Verifying Fortran/CXX Compiler Compatibility - Success; -- Use the commands in setup_command to reproduce this build; -- Configuring done; -- Generating done; -- Build files have been written to: /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/tmp/psi4public-0.3/objdir. configure step is done; now you need to compile the sources:. > > > cd objdir; > > > make. ---. The full out from the ./setup for the 0.3 release with the intel/13.1.0 compiler is:. ./setup --cc mpicc --cxx mpicxx --fc mpif77 --prefix /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 --omp --mpi --mkl parallel --cmake ~/bin/cmake/bin/cmake; /mnt/data/users/dm4/vol12/medvedevmg_1708/bin/cmake/bin/cmake -DCMAKE_Fortran_COMPILER=mpif77 -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DENABLE_MPI=ON -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_LIBERD=OFF -DENABLE_JKFACTORY=OFF -DENABLE_GPU_DFCC=OFF -DENABLE_DUMMY_PLUGIN=OFF -DENABLE_PCMSOLVER=OFF -DENABLE_CHEMPS2=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/mnt/data/users/dm4/vol12/medvedevmg_1708/bin/psi4 -DCMAKE_BUILD_TYPE=release /mnt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/201:9394,release,release,9394,https://psicode.org,https://github.com/psi4/psi4/issues/201,1,['release'],['release']
Deployability," name you want, and comment out any optional qc addons you don't want. ; 2. Then issue something like`conda env create -f Linux-buildrun-maxeco.yaml` and activate the environment. ; 3. Clone psi4, then `cmake -S. -Bobjdir -DBUILD_SHARED_LIBS=ON ...`, and it usually configures fine. ; 4. For Apple Silicon, there isn't a env yaml file yet, but replacing `libblas=*=*mkl` with `libblas=*=*accelerate` or `libblas=*=*openblas`, getting rid of other mkl lines, and aggressively pruning qc addons (not many ported to arm64) should do the trick.; 5. For Apple in general, you probably need the `target-sdk` stuff at https://github.com/psi4/psi4/blob/master/.github/workflows/ecosystem.yml; 6. For Linux, if you want a high-AM L2, replace this line `conda-forge/label/libint_dev::libint=2.7.3dev1` https://github.com/psi4/psi4/blob/master/devtools/conda-envs/Linux-buildrun-maxeco.yaml#L22 with `psi4/label/testing::libint2=2.7.2=h2fe1556_1` . Despite the different package names, versions, and channels, they're built from the same source, just different configuration. (I can't build a big AM w/i the 6h c-f time window.). ### Future Build Tools. Previously, the main build helper has been the `psi4-dev` conda package that combines a maximal set of build tools (compilers, cmake, etc.) and psi4 buildtime ecosystem packages along with a little script `psi4-path-advisor` to firmly configure cmake with conda env locations. As far as I know, this is pretty convenient and durable, especially for build-once-use-forever workflows. Complications I've heard of are (1) Mac `CONDA_BUILD_SYSROOT` sometimes required present/absent and (2) `psi4-dev` is monolithic, awkward to update, or sometimes out-of-date with psi4 master's requirements. I, for one, don't often use `psi4-dev` b/c I want more flexibility with switching out packages. **So, I'd be glad to hear thoughts on what form and contents the build helpers should take. A few plans and questions below, but any feedback appreciated.**. 1. Do you want",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2965:2536,configurat,configuration,2536,https://psicode.org,https://github.com/psi4/psi4/issues/2965,1,['configurat'],['configuration']
Deployability," no longer be 100% stable for anything beyond ""core"" Psi4 as defined by quicktests. . If you have changes to the Psi4 source code you will either need to rebase the CMake/build system change (hint: this is _not_ the occasion to learn to rebase) or rewrite these files by looking at a diff between the new version and your current version. A rebase of this patch is a considerable time investment with many small technical details, please contact us to help you if you decide to go this route. We will be contacting the authors of all current PR’s to help them with the transition. The inversion and history rewrite will take place on October 17th. Again, all forks and clones will need to be removed at this point as they will no longer be valid. Let us know if you need additional time to rebase in a change.; ## Summary. Changes for developers:; - **WARNING!** All clones and forks will need to be removed when the history rewrite occurs on October 17th. This means any current work on Psi4 will no longer be able to be merged. If you need additional time let us know ASAP!; - The build system has not been extensively tested, please try it out and report bugs.; - There is a completely new directory structure.; - No more Boost in core Psi4.; - Some external libraries may not work at current.; - Plugin structure is still fluid.; - GCC 4.9 is required due to C++11 regex. Keep in mind that ICC requires GCC. Changes for users:; - If you use any of the pre-compiled options nothing will likely change in your everyday workflow.; - If you compile Psi4 yourself, these changes will require a completely fresh compile. The build script has moved away from setup.py to a pure CMake input.; - After the inversion you will still have the option to use standard ""Psithon"" inputs or to import psi4 as a Python module.; ## Progress (master branch); - [x] CMake Rewrite; - [x] Kill the boost; - [x] Inversion; - [x] History rewrite; - [x] Official 1.1 release; ## . Sincerely,; - Lori, Jet, Andy, and Daniel",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468:5114,release,release,5114,https://psicode.org,https://github.com/psi4/psi4/issues/468,1,['release'],['release']
Deployability," officially part of the code. . Credit to @JoseMadriaga for the derivations ; [LocalCCSD1to10.pdf](https://github.com/psi4/psi4/files/11114337/LocalCCSD1to10.pdf). Useful References:; [Original DLPNO-CCSD Paper](https://aip.scitation.org/doi/full/10.1063/1.47735); [Sparse Maps II Paper](https://aip.scitation.org/doi/10.1063/1.4939030). Example Input File; ```; memory 20 GB. molecule mol {; 0 1; O 0.705 0.744 0.16; H -0.071 0.264 0.45; H 1.356 0.064 -0.014; symmetry c1; }. set {; basis cc-pVDZ; scf_type df; freeze_core true; pno_convergence normal; }; energy('dlpno-ccsd'); ```. ### Results (Waterclusters in TZ); [Speedups, relative to DF-CCSD]; ![wc_tz_speedups](https://user-images.githubusercontent.com/60559795/228892229-c3269bf9-3386-4861-8660-92a6dcc3685e.jpeg). [Percent Correlation Energy Recovered, relative to DF-CCSD, all >= 99.9%]; ![wc_tz_percent_corr_recovered](https://user-images.githubusercontent.com/60559795/228892322-7c968c62-f874-496c-84e3-06b65c84803d.jpeg). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Implement the DLPNO-CCSD algorithm. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feel free to use this code, it is not fully tested yet, but preliminary tests show encouraging results, and is MUCH faster than conventional CCSD; - [ ] If you benchmark my code, please post results in the thread. ## Questions; - [ ] Question1. ## Checklist; - [ ] Add documentation; - [ ] Add references to terms and equations; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2915:1343,release,release,1343,https://psicode.org,https://github.com/psi4/psi4/pull/2915,1,['release'],['release']
Deployability," only pops up for cbs/findif/nbody jobs, which can be confusing. This PR promotes to tag complaint to upon `import psi4` for uniformity.; - [x] ""OliP"" [reported a bug at the forum](http://forum.psicode.org/t/problems-with-cbs-and-version-1-6/2494) where an input like the below returned `‘<’ not supported between instances of ‘dict’ and ‘dict’ `. This came about because I was comparing well-behaved dertype per method tuples like; ```; ['hf', 'mp2', 'ccsd(t)', 'ccsd(t)']; [(2, {}), (1, {}), (1, {}), (1, {})]; ```. rather than the real-life cases one gets with ROHF. Sorting on only the dertype fixes the bug.; ```; ['hf', 'mp2', 'ccsd(t)', 'ccsd(t)']; [(2, {}), (0, {1: ""\nPsiException: select_mp2_gradient: Method 'mp2' with MP2_TYPE 'DF', FREEZE_CORE 'True', and REFERENCE 'ROHF' not available\n\n""}), (0, {1: ""\nPsiException: select_ccsd_t__gradient: Method 'ccsd(t)' with CC_TYPE 'CONV' and REFERENCE 'ROHF' not available\n\n""}), (0, {1: ""\nPsiException: select_ccsd_t__gradient: Method 'ccsd(t)' with CC_TYPE 'CONV' and REFERENCE 'ROHF' not available\n\n""})]; ```. ```; molecule N {; 0 4; N 0.00 0.00 0.00; }. set {; scf_type direct; reference rohf; r_convergence 6; d_convergence 7; e_convergence 8; freeze_core true; }. e_cbs = energy(‘cbs’,; scf_basis=‘aug-cc-pV[TQ5]Z’,; corl_wfn=‘mp2’,; corl_basis=‘aug-cc-pV[TQ]Z’,; delta_wfn=‘ccsd(t)’,; delta_basis=‘aug-cc-pV[DT]Z’); ```. - [x] @hokru reported that `energy('SCF/def2-SVP',bsse_type=['cp','nocp'],dft_functional=my_functional)` got broken with the distributed driver. That's patched up for string `dft_functional` at least.; - [x] I noticed that a change I made to `_qcvars_transitions` to help version reported would make `variables(include_deprecated_keys=True)` fail. that's fixed. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2590:1892,patch,patched,1892,https://psicode.org,https://github.com/psi4/psi4/pull/2590,1,['patch'],['patched']
Deployability," psi by GCC with OpenMP=ON and end up with both gomp and iomp5 linked, which is a subtle disaster.; - What we have been doing: cmake/math finds mkl_rt and outright adds iomp5, pthreads, etc. external/common/lapack packages those all into a target to pass along to blas-using dependencies. Meanwhile cmake/autocmake_omp detects just OpenMP flags (e.g., `-fopenmp` and `-qopenmp`) for the various compilers add adds them directly to `CMAKE_CXX_FLAGS` (for propagation to to psi4 (and consequently plugins) but **not** to deps (which might have OpenMP=OFF)). Actual OpenMP _libraries_ are not handled (except the aforementioned iomp5 hard-code) so (1) gomp can intrude with GCC and (2) the nice `-fopenmp=iomp5` capabilities of Clang aren't used.; - Trouble with sending me on long car trips (i.e., LSU) is that I begin plotting how things _should_ be. This PR is my take on answering this. It's insane to spring it at this point in the release cycle, but the first time after Setca that I tried building an OpenMP plugin, it was mixing omp libs in a sad manner, so _some_ fix is needed, maybe less drastic than this.; - New cmake (>=3.10, I think) makes nice targets for OpenMP that are per-lang (Psi only cares about CXX) and include both flags and libraries. So in this PR, BLAS is handled as before, except it stops after `mkl_rt` and doesn't add `iomp5;pthread;etc`. Those are still formed into `tgt::lapack` in cmake/common/lapack. But before formation of that final target, it first calls FindMathOpenMP that depending on compiler & isMKL=T/F & ENABLE_OPENMP=T/F, sets some stuff to guide FindTargetOpenMP. FindTargetOpenMP calls ordinary FindOpenMP provided by cmake which will return a flag-and-libs containing target from modern cmake or this is constructed in-file as compensation for old cmake. That target (which might or might not be present depending on if OpenMP is enabled or found for compiler) is passed back to FindMathOpenMP which links to it if present but _always_ returns a `tgt::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1031:1930,release,release,1930,https://psicode.org,https://github.com/psi4/psi4/pull/1031,1,['release'],['release']
Deployability," recent call last):; File ""/home/work/psi4/install/bin/psi4"", line 387, in <module>; exec(content); File ""<string>"", line 22, in <module>; File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1594, in frequency; H, wfn = hessian(name, return_wfn=True, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 1431, in hessian; plan.compute(); File ""/home/work/psi4/install/lib/psi4/driver/driver_findif.py"", line 1314, in compute; t.compute(client=client); File ""/home/work/psi4/install/lib/psi4/driver/task_base.py"", line 179, in compute; self.result = qcng.compute(; File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/compute.py"", line 108, in compute; output_data = executor.compute(input_data, config); File ""/home/susi/.conda/envs/p4env/lib/python3.10/site-packages/qcengine/programs/psi4.py"", line 233, in compute; output_data = psi4.schema_wrapper.run_qcschema(input_model, postclean=False).dict(); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 460, in run_qcschema; ret_data = run_json_qcschema(input_model.dict(), clean, False, keep_wfn=keep_wfn); File ""/home/work/psi4/install/lib/psi4/driver/schema_wrapper.py"", line 626, in run_json_qcschema; val, wfn = methods_dict_[json_data[""driver""]](method, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1386, in select_mrcc; return func(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 4935, in run_mrcc; ref_wfn = scf_helper(name, **kwargs); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/work/psi4/install/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159:9134,install,install,9134,https://psicode.org,https://github.com/psi4/psi4/issues/3159,1,['install'],['install']
Deployability," reported error with setting basis sets. As this seems a rather sane assumption to me, it is Now enforced. This uncovered a second error when ZMAT coordinates were used: energies at displacements would be off by ~4 hartrees. When the molecule is cloned in the process of getting a c1 wavefunction, I found that the coordinates of the cloned molecules differed from those of the original molecule, right before the basis sets were set. Telling the basis sets that the atoms are not what they actually are seems like the kind of thing that would lead to garbage energies, though I didn't get a detailed mechanism for this. To get the geometries consistent, I had to change the atom cloning procedure. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Molecule clone now guarantees that each elements of the atom_ list is identical to some element of the full_atom_ list.; - [x] Atom clone now guarantees that ZMATs with computed coordinates carry the computed coordinates over to the clone.; * **User-Facing for Release Notes**; - [x] Fixed a bug where using density fitting for a frequency computation would cause an error unless the symmetry was explicitly set to c1. ## Questions; - [x] Symmetry is used for the purposes of generating displacements, but not for labeling normal modes. Even if we can't take advantage of symmetry for the energetics, we should be able to use symmetry for displacements and normal modes. My hunch is that this is a problem with changing the symmetry of the molecule between the two findif calls, but I'd like Py-side findif to be accepted before looking into this, just in case. Sound good?. ## Checklist; - [x] Tests added for any newly functional features; - [x] [All of full tests run, modulo DFT benchmarks and plugins](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge (as soon as the last review is in)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1108:1620,Release,Release,1620,https://psicode.org,https://github.com/psi4/psi4/pull/1108,1,['Release'],['Release']
Deployability," the TOC, moving it to a separate page, to be followed by notes.; - [x] the main hand-generated capabilities table in introduction.rst tried to do a lot in specifying allowed refs, types, dertypes, and parallelism, including by specifying exceptions in footnotes. This discouraged updating since it was hard to know what was right w/o extensive testing and/or it was easier to glide over details. The hand-gen table has been replaced to be more general listing maximum capabilities, the parallelism column has been removed, and the complementary auto-gen summary table has been added; - [x] the main hand-generated capabilities table in introduction.rst and the docstring methods table in driver.py (shows up in https://psicode.org/psi4manual/master/energy.html etc.) have been reconciled with the current state of the procedures table. Devs are now admonished to update all three concurrently :-); - [x] Some investigation and searching of CDS's memory and comparison to GAMESS concluded that for arbitrary-order MPn and ZAPTn through DETCI that the written docs were right (MPn for RHF only and ZAPTn for ROHF only) and what was allowed was wrong (both for both). This has been reworked to match the written docs and various UpgradeHelpers have been positioned. Some tests had to change. Note that ZAPTn reduces to MPn for RHF, and DETCI was producing that correctly. However, DETCI MPn for ROHF wasn't producing anything we had confidence in, so it's good to get that disabled. Ugur's ROHF MP2 matches GAMESS `ospt=rmp` and DETCI's ROHF ZAPT2 matches GAMESS `ospt=zapt`, so I think this puts #311 to rest.; - [x] As reported in #2634, MRCC wasn't playing nicely with distributed driver due to the two-stage call-with-mrmtd then intercept-and-replace-mtd-with-dict. This scheme is replaced by an ordinary method call with MRCC backend indicated by `set qc_program mrcc`, just like intra-psi modules. Psi4 won't just default to MRCC if available; it must be specified. An UpgradeHelper has been deplo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:5166,update,update,5166,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['update'],['update']
Deployability," the `HF` object is then modified to include a contribution that is calculated by performing numerical integration of the basis over the EMBPOT coordinates, weights, and potentials. This functionality assumed that the values of phi calculated in the `BasisSet::compute_phi()` routine are always in a cartesian basis and not in a spherical basis, which was true up until the fix in #2210, which was included in the 1.4 release. Accordingly, an unnecessary AO to SO transformation is applied in the `HF::form_H()` routine every time, which results in inaccurate EMBPOT matrices being added to the core Hamiltonian. In order to correct this in the current version of Psi4, I have removed the AO to SO transformation and call `BasisSet::compute_phi()` on an appropriately sized vector. I have also added numerical gradients over the EMBPOT potential using the gau2grid library. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The user may supply an arbitrary potential evaluated on a numerical quadrature grid to an SCF calculation by saving the x, y, z, w, and v values to a human-readable `EMBPOT` file. The first line of the `EMBPOT` file must have the number of points inside of the file. The user must also include `set perturb_h true` and `set perturb_with embpot` in the Psi4 input. The potential will then be evaluated and included in the core Hamiltonian construction, and energy and gradient calculations. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fixed the EMBPOT functionality in `HF::form_H()` by removing AO to SO transformation and supplying an appropriately sized vector to the `BasisSet::compute_phi()` call.; - [x] Added function `MintsHelper::embpot_grad()` to ca",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3239:1409,release,release,1409,https://psicode.org,https://github.com/psi4/psi4/pull/3239,1,['release'],['release']
Deployability," with a random assortment of bytes. In the above example, the full host name should be `ip-172-31-XX-XXX.us-east-2.compute.internal`. We then examined how psi4 determines and processes the host name. It turns out, psi4 uses the `gethostname` function from the C API to get up to the first 40 bytes of the host name, and then it writes those bytes to `timer.dat`. The host name of this particular compute cluster is over 40 chars/bytes. This is unsafe because if a host name has more than 40 characters, the null byte (`\0`) won't be written to `timer.dat` to signify the end of the string, and psi4 will continue to write whatever is in memory past the 40 chars/bytes until it hits a null byte. This also explains the original error, b/c writing random bytes to a file can lead to non-utf-8-compliant files. It turns out that [linux defines a maximum host name length of 64](https://man7.org/linux/man-pages/man2/gethostname.2.html), so the easy fix here is to just increase the size of the host name buffer from 40 to 65 (== 64 + 1 for the null byte at the end). I have no idea why this length was previously limited to 40. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fix bug resulting in `UnicodeDecodeError` and corrupted `timer.dat` files. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] increase the buffer size used to retrieve the host name and enforce that the host name ends in a null byte before writing to `timer.dat`. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3043:3267,release,release,3267,https://psicode.org,https://github.com/psi4/psi4/pull/3043,1,['release'],['release']
Deployability," | C[^8] | McMurchie Davidson | any | 31Mar22, after #2414, v1.6, v1.7 |; | ~A[^6]~ | ~standardize ordering~ | ditto step B | #2537 | ditto step B | sss | `g5` | rm `_16` | rm `_8` | — |; | A' [^9] | flex solid-harm ordering | [loriab:new-cmake-2023-take2-b](https://github.com/loriab/libint/tree/new-cmake-2023-take2-b) https://github.com/evaleev/libint/pull/259 | 8May23, after #2861, v1.8, v1.9 (see also A'') | `libint-2.7.2-post1-5-4-3-6-5-4_mm4f12ob2_1` | sss | `eri_c4_d1_l5` | `_1`, c-f | c-f | c-f |; | A'' [^10] | flex solid-harm ordering, libtool-based | [upstream master](https://github.com/evaleev/libint/tree/master) any point after https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9 | 3Dec23, after #3047, v1.9 (see also A') | [libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz](https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.0-dev2-5-4-3-6-5-4_mm10f12ob2_0.tgz) | ss | `eri_hhhh_d1` | . [^1]: Assets off https://github.com/loriab/libint/releases/tag/v0.1 . Numbers are 4-center e-g-h AM, 3-center e-g-h AM.; [^3]: https://anaconda.org/psi4/libint/files L: `libint-1.2.1-hb4a4fd4_6.tar.bz2`, M: `libint-1.2.1-h1989688_2.tar.bz2`; [^4]: https://anaconda.org/psi4/libint2/files L: `libint2-2.6.0-hc9558a2_9.tar.bz2`, M: `libint2-2.6.0-h879752b_3.tar.bz2` W: `libint2-2.6.0-h2e52968_1.tar.bz2`; [^5]: Step 3 conda packages: [linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/linux-64/libint2-2.6.0-h2fe1556_13.tar.bz2), [osx-64/libint2-2.6.0-h879752b_6.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/osx-64/libint2-2.6.0-h879752b_6.tar.bz2) ~`libint2-2.6.0-h879752b_4.tar.bz2`~, [win-64/libint2-2.6.0-h2e52968_5.tar.bz2](https://anaconda.org/psi4/libint2/2.6.0/download/win-64/libint2-2.6.0-h2e52968_5.tar.bz2) ~`libint2-2.6.0-h2e52968_3.tar.bz2`~; [^6]: Step A conda packages: [linux-64/libint2-2.7.1-h2fe1556_16.tar.bz2](https://anaconda.org/psi4/libint2/2.7.1/download/linux-64/libin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2442:2368,release,releases,2368,https://psicode.org,https://github.com/psi4/psi4/issues/2442,1,['release'],['releases']
Deployability,"""`; - L: -/244/ 10/3229/4/4/303; - M: -/229/ 25/3229/6/2/304; - W: -/144/112/3229/2/4/303; - skipped on Linux are things like gpu_dfcc (needs gpus), mrcc (proprietary), cct3 (no package), fock-ci (apparently I packaged the wrong thing); - [ ] there's an unresolved issue on macOS where with Py39 adcc shows pulled from pypi but it tests fine. with Py310, adcc and others pulled from pypi and it doesn't get found for testing. leaving at Py39 for now, but mysterious; - [ ] I haven't removed all the addons from the Azure pipelines yet but I can if everyone comfortable. - Testing Strategy; - [x] `ctest` is familiar, easy to read, and doesn't require configuration. on the other hand, it can't test installations, it can't do parameterizations, and by passing through TestingMacros and runtest.py, you can't always pass environment info into it. Don't worry, it's staying exactly as it is. I've added a single short file to several ctest directories ...; - [x] moved `setup.cfg` to `pytest.ini` and install it. only pytest was using the setup.cfg file anyways. all labels (things you can `pytest -m quick` akin to `ctest -L quick`) are stored here instead of duplicated btwn setup.cfg and conftest.py. The GHA will complain if you hit unregistered label.; - [x] changed the pytest import_mode from default to ""importlib"". this means (1) we don't need to have empty `__init__.py` in all 500 ctest directories and (2) avoid name conflicts when collecting ctests. Result is that tests/pytests is no longer a module, so a lot of the `from .utils import ...` become `from utils import ...` etc. Those names are looking generic, so may need to rename in future. - Testing Details; - [x] in tests, rewrote `using(package)` function whose role is to detect whether package present and skip test otherwise. now the fn additionally adds ""addon"" label and the name of the package label, so one can run `pytest -m dftd3`. to do this, had to separate into two fns: `uusing` for nested decorator marks and `using` ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2454:2874,install,install,2874,https://psicode.org,https://github.com/psi4/psi4/pull/2454,1,['install'],['install']
Deployability,"# Description; Substantial changes to the Psi4 DFT infrastructure to add several hundred new DFT functional forms. In addition, adds the SAPT(DFT) and EP2 methods. Several major performance enhancements are included as well as well. This is also one of the primary patches for the Psi4 1.2 release. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] SCF Wavefunctions can now do Hessian-Vector builds see `RHF.Hx` and `RHF.solve` for examples. This functionality supports non-totally symmetric tensors.; - [x] The DFT V Potential object now has Hessian-Vector functionality.; - [x] Added many C++ calls to the Python interface.; - [x] Reworked the building of superfunctionals. Note that the coefficients set when building a functional are no longer modified by exact exchange or MP2 correlation factors.; - [x] DFT Functionals now takes advantage of polarized vs unpolarized DFT kernels.; - [x] Added generalized solvers in `p4util/solvers.py`. These include DIIS, CG, BiCGSTAB, and Davidson.; - [x] New density-fitted AO->MO transform object. More efficient than previous objects and has multiple modes depending on the type of computation (direct or AO storage).; - [x] ECP SCF energies.; - [x] ECP gradients by finite differences in Python.; - [x] Test case(s) and documentation.; - [x] Make sure frozen core code doesn't add contributions from ECP bearing atoms.; - [x] Add / document more basis sets, and add ECP info to existing Def2 series (w/help from @loriab). * **User-Facing for Release Notes**; - [x] Psi4's DFT now uses LibXC, several hundred new functionals are available.; - [x] DFT potential and gradient builds are now parallelized and vectorized, up to 30x faster on six cores.; - [x] Adds a new vectorized DF-JK builder, up to 4x as fast as previous version.; - [x] Adds culoumb-attenuated (CAM) functionals.; - [x] Adds the VV10 non-local correlation kernel.; - [x] Adds DSD functionals.; - [x] Extended second-order",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/698:265,patch,patches,265,https://psicode.org,https://github.com/psi4/psi4/pull/698,2,"['patch', 'release']","['patches', 'release']"
Deployability,"# Overview. This is version 2.0.0 of the Psi4 build system. It is designed to speed-up build times as well as aid in transitioning to a more modular model driven by QCDB or incorporated into the Pulsar framework.; ## Disclaimer. This is _NOT_ quite ready to merge yet, but represents a substantial change that I wanted developers to start looking at and provide feedback on. In particular:; - [x] Get remote builds via Travis-CI working; - [x] @lothian 's coupled cluster code tests are failing (really could use help there); - [x] Fix sow/reap tests (not using installed data dir?); - [x] Failing test cases:; - [x] cbs-xtpl-freq; - [x] fnocc2; - [x] tu4-h2o-freq ; - [x] Hook back-up: ; - [x] chemps2; - [x] erd; - [x] dkh; - [x] gdma; - [x] ambit; - [x] pcmsolver; - [ ] Get binary working (need help from @loriab); - [x] Test (and then most likely fix) plugin system; - [x] Move GTFock to external; - [x] Libint is now external, closes #355 ; ## Speed. By means of comparison, on my box the old build system took 34 minutes and this build took 14 minutes. Both build times are for a debug build, ignore the time to build Boost, use the default angular momentum, and are run on 6 cores. Furthermore, this new build does a dramatically better job of tracking dependencies among files. For example libint/libderiv should only build once and editing a single file in mints no longer triggers a full recompilation (of course touching a file like Molecule.h basically will). This means subsequent builds should be dramatically faster, in my experience so far typically only the file that was changed needs recompiled.; ## Modularity. Under the old build the entire Psi4 build project had to track dependencies for all plugins and external interfaces. This was quickly becoming a nightmare as evidenced by the 3,000,000 emails we have been getting about chemps2 breaking. I have transitioned us to what is known in CMake land as a superbuild. In such a build all pieces of a package, including the depend",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442:562,install,installed,562,https://psicode.org,https://github.com/psi4/psi4/pull/442,1,['install'],['installed']
Deployability,"## Big Picture of the Project; See #1783. tl;dr: The goal is to improve orbital convergence in `occ`, but I need the module cleaned up to make it easier to think about the code I'm needing to mess with. I'm breaking a monolith PR into several. ## Description of the PR; The current PR has two objectives. First, condense the MP2 amplitude functions, MP2 energy functions, and MP2 1RDM functions into one function each. Although several methods needed these functions with minimal changes, there were two or three functions created for each of those three. Dealing with how he handled spin-scaling forced me to take a second objective: to clean OCC's handling of spin-scaling variables. OCC previously allowed the user to overwrite the definitions of opposite-spin scaling and spin-component-scaling schemes and used far too many variables. The current scheme still allows users to make their own definitions, but those are now sent to custom variables. In addition, many keywords have been eliminated. OCC's handling of spin-scaling now differs from DFOCC's, but I am not fool enough to take on that module. Obligatory ping of @susilehtola and @hokru, who expressed opinions about this on Slack, and @loriab, who expressed many opinions about this on Slack. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] We have shed another 800+ lines of code.; - [x] Major refactor of spin-scaling in OCC. All keywords for manual handling of spin scaling in OCC are removed. Please use `os_scale` and `ss_scale` for custom scaling. Select the spin scaling method that goes to the current energy by the method string you pass to the energy call.; ~~- [ ] Update documentation accordingly.~~ Deferred to Lori PR. ## Checklist; - [x] Quick tests, occ related tests, manual diff checks, and `test_mp2.py` all pass. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1789:1691,Update,Update,1691,https://psicode.org,https://github.com/psi4/psi4/pull/1789,1,['Update'],['Update']
Deployability,"## DESCRIPTION; Using `DF_Helper`'s density fitting technology, both integral and exchange matrix computations can be sped up for in-core investigations. I have created a `JK` derived class, `symm_JK`, which wraps the technology of `DF_Helper` and enables its use for J/K building in Psi4. ## RESULTS; Here are some timing results for entire SCF procedures across various systems, using two different architectures. Notice that relative speedup between `symm_JK` and `DFJK` improves for non-uniform memory access (NUMA) architectures. ![april research update](https://user-images.githubusercontent.com/19575820/38739410-de32a49c-3f02-11e8-9512-c4edc165f259.png). ![april research update-1](https://user-images.githubusercontent.com/19575820/38739454-f5f0a6e2-3f02-11e8-9196-cdcd97cdcd34.png). ## TODO; The new JK building object, `symm_JK`, will be faster than DFJK for in-core implementations. However, it will be slower for disk-based implementations. ; - [x] Add check to figure out which object to use for J/K building. (in-core vs disk)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961:552,update,update,552,https://psicode.org,https://github.com/psi4/psi4/pull/961,2,['update'],"['update', 'update-']"
Deployability,"## Description. ## Dev notes & details; - [x] when we link of functions/classes outside psi4, it looks for the intersphinx object inventory to link to their docstring. this updates the location from the old RTD pages to the new GHpages docs for QCArchive. not a surprise that it broke since the QCFractal release is triggering site shuffling of all the supporting material. ## Checklist; - [x] docs build works locally. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3048:173,update,updates,173,https://psicode.org,https://github.com/psi4/psi4/pull/3048,2,"['release', 'update']","['release', 'updates']"
Deployability,## Description. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `set_tweak(vec)` killed off (deprecated since v1.5); - [x] allows LibXC v5 or v6; - [x] fixes one test for python 3.11 and requires a new pb11 for it. ## Checklist; - [ ] ~Tests added for any new features~; - [x] full tests run with libxc6 and python 3.11. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2817:149,release,release,149,https://psicode.org,https://github.com/psi4/psi4/pull/2817,1,['release'],['release']
Deployability,"## Description. #### background; We keep needing periodic table and physical constants data upstream of psi4 (psi4 Molecule, pyoptking, mol parsing, common driver, etc.), so it makes little sense that the Source of Truth is c-side Psi4 headers, `masses.h` and `physconst.h`. Nowadays, physical constants are in psi three times (c-side, py-side, qcdb) and masses are twice but of the 4 arrays in `masses.h`, only one, `an2masses` is ever called in theory, and I don't see it called in practice. #### solution; Move these aspects into their own [lightweight python module that's easily updated](https://github.com/qcdb/qcelemental). That module can write psi4 header files, which are what's copied here. #### stages; - [x] c-side `physconst.h` updated here CODATA 2010 (Andy c.2012) --> CODATA 2014; - [x] py-side `psi4.driver.constants.physconst.py` updated here, through autogeneration from c-side; - [x] qcdb-side `psi4.driver.qcdb.physconst.py` updated here, through copying and prefixing from py-side; - [x] c-side `masses.h` updated here from undated NIST document (that includes through element 117, so it can't be too old). changing this alone has no effect on the tests.; - [ ] py-side `psi4.driver.qcdb.periodictable` NOT updated here. (so effectively masses are unchanged in this PR.) Later, py-side psi4 will import this new module to get its periodictable data.; - [x] Implications to the test suite:; - [x] lots of nuclear repulsion energies wanted changing. I took them at their word; - [x] wherever we tested SCF or SCF+ to 9+ decimals, comparisons failed. I've copied in the new values. energy figures tended to be good beyond 6 decimals. #### PT changes; * Main major change is to Krypton, where the generic (non-isotope) element had been assigned to the wrong isotope. Then there's lots of unstable elements that had the same thing wrong, so the below generic elements differ by 1–13 [u]. Only other element to differ by > 1.e-5 is Darmstadtium.; ```; Checking z2el vs. Psi4 ... Check",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1213:584,update,updated,584,https://psicode.org,https://github.com/psi4/psi4/pull/1213,4,['update'],['updated']
Deployability,"## Description. A general update to the MCSCF module within Psi4.; ## Features; - [x] More canonical MCSCF printing, including NO occupation numbers.; - [x] Adds Augmented Hessian iterations.; - [x] Adds the popular MCSCF ""rotate"" command; - [x] Fixed rare segfault on macs.; - [x] Removed many memory leaks.; - [x] Switched a python-based driver for more flexibility in the future.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/482:26,update,update,26,https://psicode.org,https://github.com/psi4/psi4/pull/482,1,['update'],['update']
Deployability,"## Description. A series of updates to the Psi4 driver. Very large PR's is not my favorite thing to do on git, but unfortunately driver changes are complex and strongly tied together. Putting this up now as a way to help track everything this fixes.; ## Todos; - [x] General cleanup and reorganization of the driver.; - [x] Reorganized procedures into a single folder.; - [x] Reworking CBS and N-Body wrappers for easier use.; - [x] Above changes broke some of pywrap, need to get these fixed.; - [x] More canonical python raise error printing.; - [x] Reorganizes OEProp to use `D_subset_helper` instead of `Da_subset` to avoid pulling density matrices from multiple sources. Closes #193; - [x] Reworks how OEProp is called for SCF, DFT, DF-MP2, CI, and MCSCF. The full OEProp suite works for these now through the properties driver.; - [x] New test case for the above OEProp (scf_properties, mp2_properties, ci_properties), closes #356.; - [x] Freeze COM/ORIENT for FREEZE COORDINATE option and closes #179 ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/365:28,update,updates,28,https://psicode.org,https://github.com/psi4/psi4/pull/365,1,['update'],['updates']
Deployability,"## Description. Accumulated fixes from Mac binary build round; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] fix some ambit import and temporarily reroute source location until @jturney around to process cmake changes; - [x] in an effort to standardize internal builds as using static libraries and detected builds as using shared, **boost detection now looks for shared**; - [x] install `psi4.so` to site-packages rather than bin; - [x] fix mollerplesset plugin; - [x] misc. cleanup; - [x] switched Intel to `-qopenmp`; - [x] added a couple include paths so plugin includes so that plugins can be compiled against installed instead of source psi4; - [x] fix imports and iwl checks in plugin templates; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/413:423,install,install,423,https://psicode.org,https://github.com/psi4/psi4/pull/413,2,['install'],"['install', 'installed']"
Deployability,"## Description. All manner of sowreap cleanup and upgrade; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] make Hessian by both E & G return same non-mass-weighted matrix, relabel output, fixing #225 ; - [x] preserve `.1` files for optimization for cbs calcs, so no more multiple first cycles, fixing #303 ; - [x] sowreap testing machinery fixed up: catches more errors, works for optimizations, pep8-ified. @amjames, you may want to take a look at 31162be; - [x] new capability to do frequencies in sow/reap by finite difference of gradients, fixing psi4/psi4private#80; - [x] in order to do previous, needed format_molecule to preserve orientation, which zmat doesn't do naturally, so added `forcexyz=True` kwarg to optionally write in Carts (including no_com/no_reorient). conveniently, this fixes http://forum.psicode.org/t/embarrassingly-parallel-frequency-calculation-misbehaving/111 also.; - [x] general cleanup of db, opt, freq by E sow/reap procedures after wavefunction_pass, especially return statements and forcing return_wfn True, fixing #291 ; ## Questions; - [x] @psi-rking should probably take a look at 380a93c; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/318:50,upgrade,upgrade,50,https://psicode.org,https://github.com/psi4/psi4/pull/318,1,['upgrade'],['upgrade']
Deployability,"## Description. Bumped Clang Travis test to clang-3.8 from clang-3.7; - [x] Makes me hum ""New Slang"" by The Shins.; - [x] Makes Travis use the latest Clang (3.8) instead of 3.7 for the release build.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/439:185,release,release,185,https://psicode.org,https://github.com/psi4/psi4/pull/439,1,['release'],['release']
Deployability,"## Description. By adding optional target `psi4so` with an install location, I broke install.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] add `OPTIONAL` to psi4so install so normal install doesn't croak; - [x] go ahead and install sphinx docs into `$prefix/share/doc/psi4/html` if built; - [x] update samples; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/277:59,install,install,59,https://psicode.org,https://github.com/psi4/psi4/pull/277,6,"['install', 'update']","['install', 'update']"
Deployability,## Description. DF_SCF_GUESS was not completely suppressed for PK integrals. The code is now cleaned up and the documentation updated.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Clean up DF_SCF_GUESS so that it only acts on integral direct computations; - [x] Update the documentation; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/284:126,update,updated,126,https://psicode.org,https://github.com/psi4/psi4/pull/284,2,"['Update', 'update']","['Update', 'updated']"
Deployability,## Description. Distilli should provide PR testing on mac for all future updates. This is a test PR for this functionality.; ## Status; - [ ] Do NOT merge me.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/445:73,update,updates,73,https://psicode.org,https://github.com/psi4/psi4/pull/445,1,['update'],['updates']
Deployability,"## Description. Distribute test cases and misc.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] For each test case in `samples`, add a `test.in` (intact w/ `#TEST` lines) alongside the plain `input.dat` (w/o`#TEST` lines). This way one can test (by hand) from an installed copy (e.g., conda pkg).; - [x] In `setup`, be more explicit about how to handle argument values that argparse might want to interpret as arguments themselves. Response to http://forum.psicode.org/t/odd-behavior-of-setup/233; - [x] Fix bug that kept undefined literal `${MCONDA}` in `psi4-config` for conda packages. This bug made it useless for querying `psi4-config --includes` for plugin configuration.; ## Status; - [x] Ready to go. Nothing controversial here.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/401:305,install,installed,305,https://psicode.org,https://github.com/psi4/psi4/pull/401,2,"['configurat', 'install']","['configuration', 'installed']"
Deployability,"## Description. Documentation for plugin creation using binary distribution (on linux only).; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] Documents setup of conda envs (w gcc and openblas), compilation of Makefile.conda, and updates documentation of --new-plugin with `+ambit` keyword.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/366:270,update,updates,270,https://psicode.org,https://github.com/psi4/psi4/pull/366,1,['update'],['updates']
Deployability,"## Description. Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and makes F/I-SAPT postprocessing scripts available in install/share. ; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [ ] Enables the average citizen to quickly begin using F/I-SAPT.; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/467:142,install,install,142,https://psicode.org,https://github.com/psi4/psi4/pull/467,1,['install'],['install']
Deployability,"## Description. Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and makes F/I-SAPT postprocessing scripts available in install/share.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Enables the average citizen to quickly begin using F/I-SAPT.; ## Status; - [x] Ready to go. Looks ready to me, though there may well be further reST changes after viewing the docs build. @robparrish may want to look it over. We'll close the other PR.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/470:142,install,install,142,https://psicode.org,https://github.com/psi4/psi4/pull/470,1,['install'],['install']
Deployability,"## Description. Finally, the first of @bozkaya's new methods. These are the canonical (non-orbital-optimized, non-FNO) CC methods with UHF reference by density-fitting and Cholesky decomposition. Gradients available for the most popular methods. This is PR No. 5 in the mega-dfocc-remp series. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] new methods!; - [x] uhf df ccd E & G; - [x] uhf df ccsd E & G ; - [x] uhf df ccsd(t) E & G (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf df a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd-ccd E; - [x] uhf cd-ccsd E; - [x] uhf cd-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] pick over canonical methods and run some basic timings tests; - [x] TODO: kill `new` pass; - [x] TODO: there might be UHF CCD in there, too.; - [x] TODO: merge #2731 first. it has a lot of stdsuite changes that I don't want to rebase through. nevertheless, stdsuite on the new methods is working fine locally. the azure errors are that uhf cc methods are running rather than throwing NYI as it expects.; - [x] TODO: df ccsd(t) gradients need to be marked experimental and semi-hidden until optimization. REVISED 25 Oct; ```; Module comparison timings [s] for CCSD & CCSD(T) energy & gradient; * Benzene, C6H6; * Either aug-cc-pVDZ (192 nbf) or cc-pVDZ (119 nbf); all-electron; * Same singlet system run as RHF & UHF; * CC converged to 1e-7; * 20 GiB, 8 threads. ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2739:426,release,release,426,https://psicode.org,https://github.com/psi4/psi4/pull/2739,1,['release'],['release']
Deployability,"## Description. Fix for ROHF stability analysis.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes the old ROHF stability analysis code, to account for the updated ROHF ordering used in libtrans.; - [x] Provides a test (taken from Psi3) to verify the correctness of the ROHF stability code.; ## Notes. This code will surely be replaced by a Davidson-like solver sometime soon, but it may be useful for debugging such an implementation.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/280:202,update,updated,202,https://psicode.org,https://github.com/psi4/psi4/pull/280,1,['update'],['updated']
Deployability,"## Description. Fixed dftd3 calls when `LD_LIBRARY_PATH` empty. Activate new -d3 damping.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] The env passed into subprocess must be strictly a dict of strings. This was violated when PATH or LD_LIBRARY_PATH was empty, yielding a `TypeError: execve() arg 3 contains a non-string value` error. Fixed this.; - [x] Re-enable the `d3m` and `d3mbj` extensions. Adjust test case (unrelated DFT error still failing on psinet) and docs to match. Filled in `[Smith:2016:2197]` reference.; ## Questions; - [x] Do we want conda dftd3 automatically installed alongside binary? On one hand then ensures ppl can use dftd3. On the other, ppl may be surprised if their hand-cmopiled version of dftd3 isn't the one used anymore. **Ans** sounds like installation alongside is ok, so long as hand-compiled still preferentially chooseable; - [x] If adding dftd3 to the install list, want to add the one built purely from Grimme's code or the one with the `-d3m` and `-d3m(bj)` capabilities, as applied through a patch? **Ans** distribute `dftd3m`; ## Status; - [x] Ready to go.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/383:623,install,installed,623,https://psicode.org,https://github.com/psi4/psi4/pull/383,4,"['install', 'patch']","['install', 'installation', 'installed', 'patch']"
Deployability,"## Description. If a DFT functional gives `NaN` when we attempt to numerically integrate it, throw the functional under the bus immediately instead of leaving my ADIIS code to take the blame, i.e., give a better error message. Closes #2609. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2611:79,integrat,integrate,79,https://psicode.org,https://github.com/psi4/psi4/pull/2611,1,['integrat'],['integrate']
Deployability,"## Description. Increases compatibility with external analysis tools, by providing Gaussian formatted checkpoint file (FCHK) output. Also adds built-in distributed multipole analysis via Stone's GDMA package.; ## Todos; - [x] Add FCHK writer to libmints.; - [x] Incorporate GDMA 2, for distributed multipole analysis.; - [x] Add GDMA options, to prevent user from having to provide a separate input file.; - [x] Put GDMA results in the variables map.; - [x] Add GDMA test case.; - [x] Document FCHK writer and GDMA.; ## Questions; - [x] Although GDMA is released under GPL2, I want to try to contact Anthony Stone to get explicit permission to release his code as a subdirectory of Psi4. I don't think there are any legal problems with including an FCHK writer; I simply followed the [format description](http://www.gaussian.com/g_tech/g_ur/f_formchk.htm) and checked it against some of the GDMA examples. Anybody disagree?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/323:554,release,released,554,https://psicode.org,https://github.com/psi4/psi4/pull/323,2,['release'],"['release', 'released']"
Deployability,## Description. It was discovered that Psi4 was not properly passing Boost configuration to Ambit this PR rectifies that. Also bumps up the Ambit version tag to v0.1.1-alpha as other fixes were pushed to Ambit.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Fixes Boost configuration passing to Ambit.; - [x] Updates Ambit version tag to v0.1.1-alpha.; - [x] Ambit was not being forced linked into the binary on Linux.; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/275:75,configurat,configuration,75,https://psicode.org,https://github.com/psi4/psi4/pull/275,3,"['Update', 'configurat']","['Updates', 'configuration']"
Deployability,"## Description. Just removes the VERSION file, because the information is already contained in CMake's configuration files.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Gets rid of the superfluous VERSION file.; - [x] Allows me to see how the new template and contributing files work in practice.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/272:103,configurat,configuration,103,https://psicode.org,https://github.com/psi4/psi4/pull/272,1,['configurat'],['configuration']
Deployability,"## Description. License and unit printing overhaul from the Psi4 Meeting on 4/19/2016.; ## Todos; - [x] Update the GNU license for every file, finishes and closes #213 ; - [x] Adds script to always in /share/scripts to update these headers; - [x] Also contains the unit handling update, closes #357; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/363:104,Update,Update,104,https://psicode.org,https://github.com/psi4/psi4/pull/363,3,"['Update', 'update']","['Update', 'update']"
Deployability,"## Description. Minor change to the blank lines and units printed by Lowdin charge calculations. The purpose of this update is to make it easier to parse PSI4 output for different types of charges. Previous:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( ""\n\n Lowdin Charges [a.u.]:\n\n"");; ```. Updated:. ```; outfile->Printf( "" Mulliken Charges: (a.u.)\n"");. outfile->Printf( "" Lowdin Charges: (a.u.)\n"");; ```; ## Todos; - [x] Made Lowdin and Mulliken charge output consistent; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/334:117,update,update,117,https://psicode.org,https://github.com/psi4/psi4/pull/334,2,"['Update', 'update']","['Updated', 'update']"
Deployability,"## Description. Minor mods to gdma docs, commas in basis sets, and kJ/mol; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Make GDMA manual pdf linkable from sphinx docs, autodoc gdma setting of array variables, small other GDMA documentation tweaks; - [x] Add the warning about 5930 processors + fnocc + Intel 2015 compilers composed by @ryanmrichard ; - [x] Process basis sets in input parser a little differently so that can use commas in `6-311G(2d,2p)` mentioned in #43 ; - [x] Updated SAPT output format (@jgonthier & @andysim, note); - added third column in kJ/mol ; - realigned output columns (Total SAPT were off) and between SAPT levels; - changed `scal.` to `sc.` to save space; - adjusted fisapt formatting accordingly; - added `[]` around units; - [x] added kJ/mol in `cp()`, `n_body()`, `database()`; ## Questions; - [x] @andysim, I think you were the one who set it up in the input parser so that comma was always signal for python list. Do you foresee any trouble with the scheme here?; ## Status; - [x] Ready to go, though changes to thermo aren't in yet",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/330:524,Update,Updated,524,https://psicode.org,https://github.com/psi4/psi4/pull/330,1,['Update'],['Updated']
Deployability,"## Description. Modernization, efficiency, and flexibility improvements for the CI code.; ## Todos; - [x] RSP Diagonalization now writes out CIVectors for OPDM, TPDM, etc uses. Fixes #83.; - [x] Removes several deprecated features such as exporting of CI Vectors in an old format.; - [x] The Numpy interface has been updated. Now uses a single `std::vector` instead of a `double *`. This change has been propagated throughout the entire code.; - [x] More CI routines have been exported to the python layer allowing the creation of complex python-based CI methods.; - [x] Adds a new Matrix routine that removes irreps.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/372:317,update,updated,317,https://psicode.org,https://github.com/psi4/psi4/pull/372,1,['update'],['updated']
Deployability,"## Description. Refreshed all output.ref's in the tests folder. An interesting discovery is that some DFT methods (wB97X, and wB97) inhibit the Psi4 output printing. We need to fix this before this PR goes through, but I wanted to start in on checking some of the changes.; ## Todos; - [x] Several DFT functionals no longer print their output correctly. While the program still runs the input script (can be verified with python print), Psi4 printing has stopped. This needs to be fixed. ; - [x] Update dft1, dft1-alt, and dft2 test case output.ref's after the above change.; ## Spot check outputs. I don't think its possible to compare every single output, but I would like to borrow the following people to spot check a few outputs. We run quite a few tests, but they certainly are not comprehensive. This could potentially show holes in our testing strategy (like the above issue). . Probably the easiest way to do this is go to the ""Files changed"" tab at the top and use a browser search to find a file your interested in. This does require you to know the name of the file in question. Alternatively, you can download my branch and run a `git diff -w -b HEAD~4 filename`. The `-b -w` options are to help cleanup the diff a bit.; - [x] CC @lothian ; - [x] OCC/DFOCC @bozkaya ; - [x] Psithon/DFTD3/PyWrap/etc @loriab ; - [x] FNO-CC @edeprince3 ; - [x] Opt @psi-rking ; - [x] CI (myself); - [x] SCF/DFT @jturney @robparrish ; - [x] DCFT @andysim ; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315:496,Update,Update,496,https://psicode.org,https://github.com/psi4/psi4/pull/315,1,['Update'],['Update']
Deployability,"## Description. Several tweaks to prepare for the 1.0 release.; ## Todos; - [x] Throws a error if NumPy is not install and prints documentation for installation, closes #407.; - [x] Tweaks CI convergence and will throw PsiException if CI/MCSCF does not converge, closes #394.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/412:54,release,release,54,https://psicode.org,https://github.com/psi4/psi4/pull/412,3,"['install', 'release']","['install', 'installation', 'release']"
Deployability,"## Description. The DOI Foundation [started recommending a new resolver](https://www.doi.org/doi_handbook/3_Resolution.html#3.8). While their URL change may be a bit ironic, it's now [encrypted](https://www.ssllabs.com/ssltest/analyze.html?d=doi.org) and the old `dx` subdomain is being redirected. So, there is no urgency here. However, for consistency, this PRs suggests to update all static DOI links accordingly, plus the code that generates new DOI links. ## Checklist; - [-] Tests added for any new features; - [-] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1761:376,update,update,376,https://psicode.org,https://github.com/psi4/psi4/pull/1761,1,['update'],['update']
Deployability,## Description. The `GIT_TAG` argument to `ExternalProject_Add` was changed to `v1.1.3` to reflect a version bump in [PCMSolver](https://github.com/PCMSolver/pcmsolver/releases/tag/v1.1.3); ## Todos; - [x] Update the version of PCMSolver shipped with Psi4.; ## Questions; - [ ] @loriab should re-build the conda package; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/434:168,release,releases,168,https://psicode.org,https://github.com/psi4/psi4/pull/434,2,"['Update', 'release']","['Update', 'releases']"
Deployability,"## Description. The `GIT_TAG` argument to `ExternalProject_Add` was changed to `v1.1.4` to reflect a version bump in [PCMSolver](https://github.com/PCMSolver/pcmsolver/releases/tag/v1.1.4); I had introduced a bug with v1.1.3 The polarization charges were computed with a degraded accuracy. This was caught neither by the library own unit tests nor by Psi4 tests, as it becomes apparent only when trying to calculate higher-order response properties (available in DALTON, but I failed to run the PCM tests there...); I apologize for any inconvenience!; ## Todos; - [x] Update the version of PCMSolver shipped with Psi4.; ## Questions; - [x] @loriab should re-build the conda package; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/440:168,release,releases,168,https://psicode.org,https://github.com/psi4/psi4/pull/440,2,"['Update', 'release']","['Update', 'releases']"
Deployability,"## Description. Thermo and isotope improvements; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] fixed bug whereby mass specification in `molecule {...}` through `C@14.0` led to no basis fns being placed on those atoms; - [x] updated thermo printing to include kJ, Cp, and hopefully be easier to orient oneself in; - [x] compared our thermo output for isotopes to other programs' in new test case freq-isotope; ## Questions; - [x] Would be good to get #345 resolved; - [x] @psi-rking may want to look over new thermo printing (example [here](https://github.com/loriab/psi4/blob/b3lyp35/tests/freq-isotope/output.ref)); ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/348:267,update,updated,267,https://psicode.org,https://github.com/psi4/psi4/pull/348,1,['update'],['updated']
Deployability,"## Description. This PR addresses psi4/#249 in that it makes the docsctrings consistent with the procedures dict.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [X] The manual now reflects all energy() procedures; - [ ] Some procedures don't have explicit manual entries (DMRG, CASSCF, etc). I understand this is not a top priority, but when they are done, the links in the docstrings table should be updated.; ## Status; - [X] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/360:440,update,updated,440,https://psicode.org,https://github.com/psi4/psi4/pull/360,1,['update'],['updated']
Deployability,## Description. Update 6-31G\* basis set; ## Todos; - [ ] Add Ga-Kr atoms to complete 3rd row; ## Status; - [ ] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/335:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/335,1,['Update'],['Update']
Deployability,## Description. Update PCMSolver to v1.1.1; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Update PCMSolver to v1.1.1; - [x] Make sure that PCMSolver uses Boost version bundled with Psi4; - [x] Re-tighten thresholds in `compare_values`; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/338:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/338,2,['Update'],['Update']
Deployability,"## Description. Update links to Grimme's DFT-D3. Note that the link to the parameter source may not be correct - those with knowledge of the source, please chime in. Fixes #1084. ## Questions; - [ ] Is the link to the parameter source correct?. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1085:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/1085,1,['Update'],['Update']
Deployability,"## Description. Update of the scratch directory documentation.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] break up ""scratch files and the ~/.psi4rc file"" into separate sections so that we're not suggesting psi4rc is the best way to set your scratch; - [x] csh/bash example of setting PSI_SCRATCH; - [x] Example of a threaded job (needs approval); - [x] Edit the link on page https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/tutorial.rst in sentence ""For your convenience"" to point to something you created.; ## Questions; - [x] @loriab, @dgasmith : Could you have a look at the PBS job file example section and tell me if that looks convenient ?; - [x] @loriab : I actually don't understand what you mean by your last point. Does https://github.com/psi4/psi4/blob/master/samples/tu1-h2o-energy/input.dat need an update ?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/361:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/361,2,"['Update', 'update']","['Update', 'update']"
Deployability,## Description. Update the list of additional contributors printed at the top of the Psi4 output; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/320:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/320,1,['Update'],['Update']
Deployability,## Description. Update to new location of the FCHKWriter - now in core. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [ ] Reflect new location of writer so that examples work.; * **User-Facing for Release Notes**; - [ ] Updated documentation so that the example code snippets work. ## Status; - [x] Ready for review; - [ ] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1050:16,Update,Update,16,https://psicode.org,https://github.com/psi4/psi4/pull/1050,3,"['Release', 'Update']","['Release', 'Update', 'Updated']"
Deployability,"## Description. Updates the FNOCC documentation so that it includes a disclaimer about running in parallel on i7-5930 processors when compiling with Intel 15 and MKL 15.0.2; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] Has not introduced further Fortran; - [x] Has warned the world of an impending evil lurking in their somewhat homely appearing CCSD correlation energy, caused by an apparent Intel bug; ## Questions; - [ ] Is the placement of the disclaimer satisfactory?; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/324:16,Update,Updates,16,https://psicode.org,https://github.com/psi4/psi4/pull/324,1,['Update'],['Updates']
Deployability,"## Description. With prompting and help from @SebWouters this PR updates ChemPS2 to v1.7 for DMRG-CASPT2 computations.; ## Todos; - [x] Psi4 now uses ChemPS2 tag 1.7; - [x] ChemPS2 no longer requires GSL, nuked that from CMake; - [x] Fiddled with the CMake a bit to clear up BLAS linking issues; - [x] Names have moved from `dmrgci` to `dmrg-ci` following discussion with @loriab @SebWouters ; - [x] Updated `src/dmrg` to latest version from ChemPS2; - [x] Added CASPT2 test case; - [x] Closes #263, #266, and #384 ; - [ ] Issue #150 is still open, for 1.0 we really need to clean this up. I think the two largest issues are the documentation and the keyword review. I think @loriab and @dgasmith will have to handle the rest.; - [ ] We have been experiencing some linking issues. While this works on my linux box and OS X laptop a few others testing this compilation would be beneficial. May close #264.; ## Questions; - [x] Keywords have moved around to align to the ""plugin"" version of ChemPS2 with a few minor alterations. Please check these out @loriab @kannon92 @SebWouters ; - [x] Do we want to add additional test cases?; ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388:65,update,updates,65,https://psicode.org,https://github.com/psi4/psi4/pull/388,2,"['Update', 'update']","['Updated', 'updates']"
Deployability,## Description. Yearly sync of qcdb. And other issues that cropped up.; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] implemented and disabled new -D3 variants. consolidated dftd3-driving code into qcdb; - [x] qcdb synched from upstream and considerably updated for py3k; - [x] added scf5 to quicktests. it's only 20 seconds and was passing unpredictably until I started a fresh objdir; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/305:297,update,updated,297,https://psicode.org,https://github.com/psi4/psi4/pull/305,1,['update'],['updated']
Deployability,"## Description. docs and licenses and castup, oh my; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] few tweaks to the energy/grad docstring tables, #249 ; - [x] improve molecule and fn return docs, #351 & #352 ; - [x] update licenses in plugin template dir, since those are mixed py/c++ and awkward to do by script; - [x] hesitant replacement of cast-up with pyconstruct basis machinery. no differences detected in relevant output files (castup1/2/3, sapt2/4/5, pywrap-all), #285 ; - [x] do `[s]` on seconds in sapt; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/364:260,update,update,260,https://psicode.org,https://github.com/psi4/psi4/pull/364,1,['update'],['update']
Deployability,"## Description. mostly, polishes off CheMPS2; ## Todos. Notable points that this PR has either accomplished or will accomplish.; - [x] update dmrg keywords. add docs. fixes #414, #150; - [x] updates some tests for documentation; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/427:135,update,update,135,https://psicode.org,https://github.com/psi4/psi4/pull/427,2,['update'],"['update', 'updates']"
Deployability,"## Description. plugins from conda binary work; ## Todos; - [x] plugin Makefile.template had turned into 3 files with little differences, so ditched them and moved the configuration in cmake; - [x] updated conda and plugin docs; - [x] updated and condensed capabilities table. some features were getting exhaustively included, others not at all. and references weren't clear wrt energy or grad. so shrunk table, while deferring details to the individual module pages. everyone should look over this.; ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/370:168,configurat,configuration,168,https://psicode.org,https://github.com/psi4/psi4/pull/370,3,"['configurat', 'update']","['configuration', 'updated']"
Deployability,## Description. update docs and driver in prep for psiworkday; ## Status; - [x] Ready to go,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/354:16,update,update,16,https://psicode.org,https://github.com/psi4/psi4/pull/354,1,['update'],['update']
Deployability,## Description/Todos; - [x] Updated documentation for the `Ca_subset` and `Cb_subset` functions to explicitly show the accepted argument values. ## Checklist; - [x] Built the docs. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1882:28,Update,Updated,28,https://psicode.org,https://github.com/psi4/psi4/pull/1882,1,['Update'],['Updated']
Deployability,"## Description; **Currently a work-in-progress**. **Currently requires intel compiler**. Implements the simint two-electron integral library into Psi4. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [X] Implement ENABLE_SIMINT option; - [X] Download & build via ExternalProject_Add; - [ ] Download & use precompiled library; - [X] Simint is being used rather than libint; - [ ] Batching interface to interface classes in libmints (partially done); - [ ] Use batching in JK objects (partially done); - [ ] Fix some GCC issues in simint; - [ ] Port new batching interface to libint & erd; - [ ] Higher AM, or split between simint and erd; - [ ] Derivatives (WIP in simint...). * **User-Facing for Release Notes**; - [ ] Hmmm. ## Questions; - [ ] Where to put tarballs (that is more permanent for psi4). Git is probably not a good idea. ## Status; - [ ] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/533:759,Release,Release,759,https://psicode.org,https://github.com/psi4/psi4/pull/533,1,['Release'],['Release']
Deployability,"## Description; - Adds the popular `return_energy` field so that downstream programs can always easily obtain this quantity instead of trying to parse the level of theory and keyword.; - Now correctly updates the geometry of the output result if a molecule orientation is changed by Psi4.; - Psi4 may reorder atoms for non-contiguous fragments, schema input now throws if this is the case. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1011:201,update,updates,201,https://psicode.org,https://github.com/psi4/psi4/pull/1011,1,['update'],['updates']
Deployability,## Description; - Update to adcc 0.15.0 and adapt interface (plural forms of keys have been deprecated).; - Add PE-ADC test as adcc now automatically detects PE ground states and includes appropriate corrections. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1914:18,Update,Update,18,https://psicode.org,https://github.com/psi4/psi4/pull/1914,1,['Update'],['Update']
Deployability,"## Description; - [x] Addresses #1820 with new syntax. Let's see if Windows and Mac setups can cope.; - [x] Addresses #1819 with explicit rounding direction. before (stride, memory, collocation_size) `MEM 1 954741720.0000 1678037264`; ```; (dev10) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-release/objdir: (safeforqcel2018) grep iB dftmem.out ; Memory: 500.0 MiB; Memory set to 14.901 GiB by Python driver.; 1 Threads, 15258 MiB Core; DFHelper Memory: AOs need 3.981 GiB; user supplied 3.981 GiB. Using in-core AOs.; Memory [MiB]: 4076; Cached 100.0% of DFT collocation blocks in 12.502 [GiB].; ```; after `MEM 2 954741720.0000 1678037264`; ```; (dev10) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-release/objdir: (safeforqcel2018) grep iB dftmem2.out ; Memory: 500.0 MiB; Memory set to 14.901 GiB by Python driver.; 6 Threads, 15258 MiB Core; DFHelper Memory: AOs need 4.062 GiB; user supplied 4.062 GiB. Using in-core AOs.; Memory [MiB]: 4159; Cached 50.0% of DFT collocation blocks in 6.277 [GiB]. ```. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1823:301,release,release,301,https://psicode.org,https://github.com/psi4/psi4/pull/1823,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. --> ; Fixes a couple of minor issues for a research project of mine. See todos. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Within the OCC module, updating the opdm to the wavefunction; - [x] Exposed a function to update the num_frozen_uocc global. ## Checklist. - [x] quick tests, occ module tests, standard suite tests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2072:352,update,update,352,https://psicode.org,https://github.com/psi4/psi4/pull/2072,1,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; - [x] Releases keep getting easier and easier, but they still have a lot of little parts. I had snippets gathered all this year, so I gathered them back into the docs. This is a revision of postrelease, not prerelease or release. I'll add those once they come up again.; - [x] Old sections are commented (`..` is sphinx comment) rather than deleted in case I want to copy from them for nightly build setup (NYI). ## Checklist; - [x] docs build cleanly locally. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3059:110,Release,Releases,110,https://psicode.org,https://github.com/psi4/psi4/pull/3059,2,"['Release', 'release']","['Releases', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->. - [x] fix Eco (W) GHA by recognizing that updating the setup-miniconda version changed the environment path, so the find-the-iomp5-lib cmake cmd needed to change, too, for sapt.cc to compile.; - [x] wow, fixing Eco (M) GHA was not what I expected. To recap, without psi4 code changing or the binaries of any of our QC dependencies changing, Mac builds (Intel or Silicon) started issuing ""Illegal Instruction"" on Hartree--Fock water. :-( This affected any fresh conda env; for instance updating a ""working"" python 3.12.3 env to 3.12.4 was accompanied by many other package updates and led to a ""illegal instruction"" env upon recompiling psi. I know c-f has been updating how they handle the c stdlib (https://github.com/conda-forge/conda-forge.github.io/issues/2102). New environments apparently hit the new fundamental libraries, and those insert a breakpoint if you try to access out of bounds. So fixed the bounds error. :-). ```; (lldb) settings set -- target.run-args ""stage/bin/psi4"" ""../tests/tu1-h2o-energy/input.dat""; (lldb) run; Process 22217 launched: '/Users/loriab/linux/miniconda-silicon/envs/p4dev312cf_clone/bin/python' (arm64); Process 22217 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BREAKPOINT (code=1, subcode=0x11819b7e4); frame #0: 0x000000011819b7e4 core.cpython-312-darwin.so`std::__1::vector<double, std::__1::allocator<double> >::operator[][abi:fe180100](this=0x00000001013e5378 size=27, __n=27) at vector:1393:3; 1390	template <class _Tp, class _Allocator>; 1391	_LIBCPP_CONSTEXPR_SINCE_CXX20 inline _LIBCPP_HIDE_FROM_ABI typename vector<_Tp, _Allocator>::reference; 1392	vector<_Tp, _Allocator>::operator[](size_type __n) _NOEXCEP",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3194:886,update,updates,886,https://psicode.org,https://github.com/psi4/psi4/pull/3194,1,['update'],['updates']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Some setups were using a BLAS that doesn't support the extension AXPBY, so #2887 caused runtime can't-find-symbol errors. Most notably, this occurred for Mac users linking to Accelerate. This bypasses the trouble by rerouting to dscal+daxpy; - [x] clarifies who's getting scaled in the export docs.; - Note that the CI error was due to ongoing changes in QCArchive `next` branch. I've pinned the dep back a release so that psi4's interface to it can be fixed later. ## Questions; - [ ] Can someone confirm this works with the Accelerate setup? Below is a quick test.; ```; import psi4; import numpy as np. vecX = np.array([1., 1., 1.]); pvecX = psi4.core.Vector.from_array(vecX); print(pvecX.np) # 1. vecY = np.array([5., 5., 5.]); pvecY = psi4.core.Vector.from_array(vecY); print(pvecY.np) # 5. pvecX2 = pvecX.clone(); pvecX2.axpy(2.0, pvecY); print(pvecX2.np) # 11. pvecX2 = pvecX.clone(); pvecX2.axpby(2.0, 1.0, pvecY); print(pvecX2.np) # 11. pvecX2 = pvecX.clone(); pvecX2.axpby(2.0, 3.0, pvecY); print(pvecX2.np) # 13; ```. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2895:727,release,release,727,https://psicode.org,https://github.com/psi4/psi4/pull/2895,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Dev notes & details; This seems a silly PR since there's no net change to the physical constants, but it came up as a nice self-contained part of a DDD solution I'm working on. Plus, it closes #1795 .; - [x] instead of code importing physical constants from qcel everywhere, import it once, ensure that it's codata 2014 to match the c-side, and then everywhere in the driver that needs constants grabs this one instance. qcdb, too. for background, qcel has 2014 and 2018 with default 2014. so no net change.; - [x] removed some out-of-date import trials (csx and pasture) and co-opted the `dependency_check.py` for (1) the above physconst purpose and (2) to define some print formats that were cluttering `driver/__init__.py`, then renamed it `constants.py`. `extras.py` might have been better, but that gets confused with `psi4/extras.py`.; - [x] directed all the `pkg_resources` to qcel that has the same call https://github.com/MolSSI/QCElemental/blob/master/qcelemental/util/importing.py#L110-L116 . `pkg_resources` is deprecated, so this'll let us upgrade it consistently from one place someday. ## Checklist; - [ ] ~Tests added for any new features~; - [x] passes quicktests. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3027:1136,upgrade,upgrade,1136,https://psicode.org,https://github.com/psi4/psi4/pull/3027,1,['upgrade'],['upgrade']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; - [x] Psi doesn't use ambit directly so never has required a version. Now that it's had its python interface updated (kill the boost!), most uses in the presence of Psi4 will need the new version, so let's not let lingering old versions pass.; - [x] The ecosystem GHA seems to have settled in nicely to testing addons, so let's remove that responsibility from the Azure CI lanes.; - leaving dftd3 and gcp since they're fast, easy, and important; - now addons tested with less compiler variety on Linux, but I don't think that's too big a problem. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2546:199,update,updated,199,https://psicode.org,https://github.com/psi4/psi4/pull/2546,1,['update'],['updated']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; - [x] Something about how CMake detects NumPy during FindPython is different between NumPy 1.22 and 1.23; only on Windows. No apparent changes in CMake FindPython. No apparent changes in conda NumPy recipe. All header files in the same places in a Windows c-f 1.22 and 1.23 NumPy distribution. Linux builds fine with a c-f NumPy 1.23. I don't know what's the real change, so we'll tell CMake where to look in the Azure recipe and pass the hint on to psi4/CM for the second `find_package(Python ...)`.; - [x] My other theory for solving the Azure problem was that my patched `anaconda-client` was behind the times. That wasn't the problem, but it's updated to v1.10.0 anyways.; - [x] Pinned qcelemental and qcengine in Windows recipe; * There's upcoming changes to those packages such that all of psi4 should be pinned and then advanced with the changes. This does that for the Windows recipe.; * fixes #2614 where Windows conda package had _no_ qcel pinning, so depending on channel order, sometimes took a really old qcel and pydantic. after this, channel order shouldn't matter. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2624:656,patch,patched,656,https://psicode.org,https://github.com/psi4/psi4/pull/2624,2,"['patch', 'update']","['patched', 'updated']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Nowadays, ctest (quick) followed by pytest (quick) runs a lot of duplicate tests (unless the latter uses ""quick and api""). Let's not do that. This switches Azure to ctest(smoke) followed by pytest (quick).; - before: ; - W: 1h30m; - L: 41-57m; - after:; - W: 1h5m; - L: 34-38m; - In working on dfocc, I found some stdsuite updates that hadn't been ported from qcng to psi4 and some general improvements.; - [x] better check expected vs intended modules. (can catch if the default compute module for a method+circs changes.); - [x] `test_*_default` in stdsuite changed meaning slightly. now PASSED means get final method answer correctly and XFAIL means known NYI. formerly, inputs that got the final method answer correctly but were not able to supply some submethod (like same-spin mp2 for ccsd) also got the XFAIL result.; - [x] have a mini ref file so can add reference data w/o waiting for a new qcengine release; - [x] regex and human-directed error messages to simplify and consolidate NYI methods testing. ## Checklist; - [x] Tests added for any new features; - [x] full stdsuite runs. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2632:510,update,updates,510,https://psicode.org,https://github.com/psi4/psi4/pull/2632,2,"['release', 'update']","['release', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] With the release of Sphinx 4, a line in one of the cloud sphinx theme's extensions stopped working. Sphinx has long ago incorporated the extension's capability, so drop from list to allow newer Sphinx and fix the docs build workflow on master.; - [x] Further investigation on the ""expandtabs"" issue building the psi docs (https://github.com/pybind/pybind11/pull/2925), shows that neither of my first two fixes are any good. So let's `sed` a better file. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2179:196,release,release,196,https://psicode.org,https://github.com/psi4/psi4/pull/2179,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] switch gcp interface to QCEngine; - [x] add dftd4 interface calling QCEngine; - [x] update types return for disp. engine can handle ndarray, so leave arrays as np and shaped rather than flat lists; - [x] more tests -- psiapi, parameters extend func; - [x] add docs; - [x] note min qcng version, prob. v0.19; - [x] this passes cleanly locally but that's with custom engine and dftd4, so several PRs ahead of this one; - [x] allow doi as citations for dft; - [x] note that for `Mol.run_dftd4`, func overrides parameters in keeping with dftd4 API behavior, whereas in dftd3, parameters extend or override func. ## Questions; - [x] @jeffschriber should fisapt grab 2-body disp analysis or total disp analysis; - [x] a couple of the interface updates should be in v1.4 but d4 itself can be in v1.5. so this can get split after upstream settles down. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Aug 2021 Notes; - [x] rebased. the only thing that's left of the original PR checklist is dftd4 itself. gcp and dftd3 updates were pulled in in #2180.; - [x] note that it's not the dftd4 exe that this (that is, qcng) needs; rather, it's the dftd4 pymod that's needed.; - [x] one _can_ use the c-f `dftd4-python` conda package if you know how to set up your env to install both it and psi4 deps. But for linux only, I've prepared a `dftd4` conda package (not in final build form) off `-c psi4/label/dev`. ## Status; - [x] Ready for review; - [x] Ready for merge. EDIT: closes #1710",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2142:271,update,update,271,https://psicode.org,https://github.com/psi4/psi4/pull/2142,4,"['install', 'update']","['install', 'update', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; - [x] I was seeing 17m to solve the env last week, so let's switch to mamba solve.; - [x] Have to turn off analytic Hessian testing for windows since no ints.; - [x] Looks like it was testing twice -- one exe and one lib. Not really necessary.; - [x] Turn c-b back on. It was only off so I could get a green check on the release last week. ## Checklist; - ~Tests added for any new features~; - ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2961:460,release,release,460,https://psicode.org,https://github.com/psi4/psi4/pull/2961,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] It turns out one can build a psi4 with Fortran extensions (detected, not compiled) w/o a Fortran compiler by letting the CXX compiler handle the linking. This is very useful on Windows where we want a `clang-cl` C/CXX compiler, but the only cohesive Fortran-including stack is the ming (gcc/g++/gfortran) one. So this adds an option `psi4_SKIP_ENABLE_Fortran` to _not_ enable Fortran when the code otherwise would. It doesn't check that the circumstances are suitable (that is, all detected, none to-be-compiled). Works great on Windows (that's how the conda pkg has dkh); haven't tried it on Linux.; - [x] Increasingly, where the <project>Config.cmake files get installed to is configurable, esp. as there's no one place cmake looks for linux/mac/win. So adding that option `psi4_INSTALL_CMAKEDIR`. You won't see a change unless you were customizing `CMAKE_INSTALL_DATADIR`.; - [x] also fix a couple install locations that were obvious for windows install.; - [x] stop testing the extra cli qcf tests for qcf master since those are run on mac, and it hangs. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2946:1018,install,installed,1018,https://psicode.org,https://github.com/psi4/psi4/pull/2946,3,['install'],"['install', 'installed']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Update binder environment and regenerate image.; - [x] Fix obscure bug where `psi4 --test quick_not_d2ints` couldn't be run serial and needed `-n2`.; - [x] Update some headmatter badges. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2966:355,Update,Update,355,https://psicode.org,https://github.com/psi4/psi4/pull/2966,2,['Update'],['Update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] on c-f Linux and Mac, iomp5=omp, so need the threading ldd test altered to build psi4-dev pkg. also update some printing to f-strings; - [x] closes #3006 by adding a header. ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3007:455,update,update,455,https://psicode.org,https://github.com/psi4/psi4/pull/3007,1,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; - [x] Allow psi4 to be used with pydantic v1 or v2. ## Dev notes & details; - [x] still using pydantic v1 API but now tolerant of a v1 or v2 pydantic environment. qcel v0.26 and qcng v0.27 have recieved the same treatment. This is that part that's worthy of backport. It's already available on the c-f 1.8.1 build number `_2` conda packages, having been applied by patch.; - [x] bump qcel and qcng versions. for local build cases, switch from `python setup.py` to `pip install` from src. the latter is preferred as setup.py gets phased out, and, in any case, was necessary for qcel, which has transitioned from a setuptools to poetry build backend. this only handles the module, so if a module comes with an executable (e.g., `bin/qcengine` from qcng, that doesn't end up in the right place. ; - [x] fix docs GHA by constraining pb11 to 2.10 for the docs build spec. https://github.com/pybind/pybind11/pull/4679 seems to be the culprit. It's a good and standards-conforming change, but other tooling and/or typing stores on the internet to which sphinx refers all need time to adapt.; - [x] generalize a few cmake config dir locations for addons.; - [x] remove youtube links to F/I SAPT tutorials that have been taken private.; - [x] some build docs I had lying around. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3019:480,patch,patch,480,https://psicode.org,https://github.com/psi4/psi4/pull/3019,2,"['install', 'patch']","['install', 'patch']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] fix bug where final findif and nbody quantities are computed and probe-able but not printed or logged.; - [x] update CI for c-f based; - [x] add docs warnings about out-of-dateness for build; - [x] work around windows console not liking strikethrough; - [x] psi4.addons() isn't the definitive word on ecosys availability -- testing.using is -- but it's simpler. This updates the Grimme addons to detect the favored distributions. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2959:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2959,3,"['release', 'update']","['release', 'update', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] one test failed in full tests. I can't check it easily, but I think this is the fix after #2885 ; - [ ] Feature2. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2908:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2908,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2960:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2960,8,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `samples/` changes are autogenerated -- don't read them; - [x] update docs env to use psi4-path-advisor; - [x] the old versions of `variable`/`set_variable` fns on core and wfn have been warning-and-forwarding since v1.4 . we had a debugging case where that forward was the problem, so it's time to actually disable them. they'll still give upgrade advice but won't run; - [x] allow running a a GRID_ESP or GRID_FIELD property through qcschema. need to pass in grid.dat contents through `atin.extras[""extra_infiles""] = {""grid.dat"": <contents>}` and be sure to `atin.protocols.native_files = ""all""`, then one can retrieve through `atres.native_files[""grid_esp.dat""]` or `""grid_field.dat""` closes #2307 . ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3095:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3095,3,"['release', 'update', 'upgrade']","['release', 'update', 'upgrade']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Allow the use of upstream master for Libint2. The L2 build that v1.8 required also still works. ## Dev notes & details; - [x] Very recent L2 upstream master (after [10ca429217977bc2baac78fdaf3ac8d4f8aa05d9](https://github.com/evaleev/libint/commit/10ca429217977bc2baac78fdaf3ac8d4f8aa05d9) on 24 Nov) has everything Psi4 needs to run, namely Windows compatibility and runtime solid harmonic order (sho) switching. 🎉 ; - [x] However, for *this* L2 changeover, there's no particular reason to demand users switch from the L2 (loriab branch) you've been using since 8 May & v1.8. The runtime internals are all the same.; - [x] So the goal of this PR is to make Psi4 compatible with both L2 branches: May 2023 loriab and Nov 2023 upstream. The differences are:; - [x] there's a different components scheme, so max_am_eri=5 energy is represented as `eri_c4_5_d0` for May but `None` (if not patched) or `eri_hhhh_d0` (patched) for Nov. This PR makes sure psi4 can process both schemes for outfile printout and to redirect to findif if Hessian ints aren't available.; - [x] `find_package(Libint2 COMPONENTS eri_... cxx_ho ss.)` on May properly checks components but for Nov it's not picky. Only thing to do is be aware.; - [x] Note that upstream master has Jonathon's erfc nuclear fix, so a time is coming soon when your May 2023 L2 branches will have to be retired. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3047:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3047,3,"['patch', 'release']","['patched', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Einsums v0.6 needs gcc 11 or clang 16. don't want to bump psi4 requirements for opt'l dep, so bump gcc from 10->11 and don't build w/clang (currently 11). note that azure matrix vars like this _must_ be all caps to register. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3224:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3224,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] I think CI is hitting a brownout to deprecate the non-redundant mambaforge, so completing the switch. I've done it at other repos; - [x] windows nightly builds are in great demand, I don't have much more to delete to create space for them, and I'm tired of build always looking like it's failing at master. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3233:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3233,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] If you call `psi4.set_output_file()` (note that this is the usual fancy one, not the low-level `psi4.core.set_output_file()`), that file will have a psi4 header so suitable for cclib parsing. closes #2893; - [x] Sometimes you don't want psi4 managing the logging. Added a `inherit_loglevel` to exe and set_output_file so that psi4 doesn't tamper with loglevel. @bennybp request. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] we always had `set_output_file` and `print_header` separate, but I'm guessing that that was originally b/c former in C++ and latter in Py. Now that we have the former in python to set up logging, too, it's reasonable to combine them, I think. Note that in exe, we do need to set up threads & mem first so that header stats are as correct as possible.; - [x] I set it up so that the header prints whenever a new file is opened. seemed reasonable. had to rewire core.cc calls to take notice of ""stdout"". Any problem with that?; - [x] `-o stdout` now gets a logging file `stdout.log` bug? feature?; - [x] a plain `import psi4; psi4.energy()` is still going to print to screen w/o header. `import psi4; set_output_file(""asdf""); psi4.energy()` newly has a header. DDD calcs still have repetitive header, but it's no worse that before. ## Questions; - [x] @AlexHeide, does removing those two `root` lines in `psi4.__init__.py` mess up your optking logging?. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2932:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2932,1,['release'],['release']
Deployability,## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Libxc 5.2.3 (latest in the 5 series) has had full tests run; - [x] fix qcng to 0.25.0 for the sake of fsaptd-terms before #2791 fixes it again. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2815:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2815,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Of the three exchange calculations for non-decomposed FISAPT, skip the DCBS. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3133:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3133,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] PCMSolver now works with Windows. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] This note in Py docs was why pcmsolver through psiapi wasn't working on Windows https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile . ## Checklist; - [ ] ~Tests added for any new features~; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2972:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2972,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 can use a standard ordering Libint2 build. But not one that's in upstream master for now. If you really want, you can switch the internal spherical harmonics ordering Psi4 uses.; - [x] Psi4 works with next-gen Intel compilers `icpx` and now uses c++17 standard throughout. ## Dev notes & details; - [x] Prepare to use a L2 that can be initialized into gaussian or cca ordering for ``Operator::nuclear``. In practice, this means we can use the same built L2 as other open-source projects. https://github.com/evaleev/libint/pull/259; - [x] Make it easy to experiment with gss or sss ordering combinations with a build-time setting in psi `psi4_SHGAUSS_ORDERING`; - [ ] successor to #2537 . no plans to transition to `sss` though. grab the fchk changes from that PR so it can be closed unmerged. fchk changes can be a follow-up PR.; - [x] need to transform cmake var from str to int; - [x] need to print gau/std to output file; - [x] ~only Linux CI expected to pass, as that's the only conda package built with the new L2. unedit docs-cf, two azure files, and one ecosystem file~; - [x] removed all the `LGTM_SRC` stuff since it's defunct and all the ""CHOOSE"" stuff, since a master L2 won't work anymore b/c need the shg order switching.; - [x] finishes the job of fully C++17 from #2392 . Newest Intel compilers from 2023.0 oneapi (versions icpc 2021.8 and icpx 2023.0) are ok with Libint2 and C++17. For older Intel, there's a keyword `psi4_CXX_STANDARD_Libint2` that can be reset to 14.; - [ ] pull together accumulated xhost changes (hiccup here is that `icpx` can take `-xHost` but `icx` can't, and our `option_with_flags` routine tries both so it throws an unnecessary warning. not a must for this PR).; - [x] the linux L2 is my local c-b, ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2861:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2861,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] While not recommended to use a `/` character in your molecule labels, if you do, at least now it won't segfault if density fitting is involved. Thanks to @bennybp for the bug report. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Error can be triggered with below. Shows up in `DFHelper::put_tensor()`. ```; import psi4. mymol = psi4.Molecule.from_arrays(geom=[0, 0, 0, 2, 0, 0], elem=[""h"", ""h""], name=""h2/mol""). # segfaults if any DF (that is, following line commented). runs if DF suppressed (following line active); #psi4.set_options({""scf_type"": ""pk"", ""df_basis_guess"": ""false""}). ene = psi4.energy(""b3lyp/cc-pvtz"", molecule=mymol); print(ene); ```. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2984:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2984,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `basis_relativistic <name> {...}` now works; - [x] Python 3.11 basically tested. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Windows CI allowed to access new qcel bump 0.25.1 that has broader pint compatibility; - [x] closes #2754 and fixes dft-pruning test. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2764:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2764,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] fix for BrianQC in #3185 as suggested by @wszs. ## CI Fixes; - [x] mac eco: with cmake v3.30.0, FindPython got seemingly unrelated updates, and now it `Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)` as tested with longstanding np v1. I suspect an interaction with pb11 (hasn't greenlit 3.30 yet). so codedeps is restraining cmake to <=3.29; - [x] win eco, Part 1: so after the GHA win image issue (`Unexpected compiler version, expected Clang`) got fixed, we started seeing `error: capturing a structured binding is not yet supported in OpenMP`. That seems to be https://github.com/llvm/llvm-project/pull/80216 where a syntax warning in clang v18 collides with a MSVC header that L2 includes. That warning was shifted in clang v19 to only fire within OMP loops rather than generically, but v19 isn't released and the fix hasn't ported back to v18, so the only sol'n is to use v17, which we're now requesting from conda. Note that the Azure Win is asking for v17 directly from Chocolatey, so that's why it was ok.; - [x] win eco, Part 2: so we have clang v17 from conda and can get past libmints, then we hit `error: use of undeclared identifier 'omp_set_max_active_levels'` in sapt.cc . This is the only use of this in the code, and the error probably has to do with limited omp support by windows. Fortunately, it seems that passing the path to the `intel-openmp`-provided `omp.h` which is in the weird dir `${PREFIX}\opt\compiler\include` rather than letting it find the clang-provided omp.h did the trick. Moreover, at long last the `intel-openmp` package provides the libiomp5md.lib (import library) and libiomp5md.dll (runtime library) _pair_ needed at buildtime rather than just the latter. So we no longer need to link aga",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3186:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3186,2,"['release', 'update']","['release', 'updates']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] gdma is bumped from upstream v2.2.06 to v2.3.3 (can now use h-functions); - [x] gdma is now selectable at runtime, not just compile-time. use `conda install pygdma -c conda-forge` (presently in staged-recipes https://github.com/conda-forge/staged-recipes/pull/22882 ). ## Dev notes & details; - [x] A perhaps obscure point is that psi hasn't been using exactly upstream GDMA, which is a Fortran executable. Instead, Andy Simmonett did lots of I/O conversion and turned it into a library and bound some functions to C so psi could extract results w/o parsing. That's great, but it's meant we've been fixed at upstream v2.2.06.; - [x] I was startled to realize gdma is GPL. For background, roughly speaking, GPL probably does adhere to psi4 if libgdma statically linked, might adhere if dynamically linked (FSF thinks yes; everyone else thinks no; result is that any GPL makes ppl nervous), doesn't adhere if dlopen'ed or runtime optional. Conda-package-wise, we've always dynamically linked to libgdma, and scouring my memory, there was a plan to have an alternate gdma- and chemps2-free conda build of psi4 to remove doubt; that never happened.; - [x] To get past these problems and get a c-f package going, I; - [x] Started with current upstream https://gitlab.com/anthonyjs/gdma/-/tree/master and applied Andy's and Holger's gdma->libgdma changes; - [x] Updated the cmake buildsys with the usual checklist https://github.com/psi4/gdma/issues/6; - [x] Added back the gdma executable so c-f package wouldn't lose functionality from upstream; - [x] pybind11-'d the C functions Andy created; - [x] psi4-side, moved the gdma_interface c-side function over to the driver, so it's pure runtime; - [x] got the conda package going https://github.com/conda",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2968:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/2968,2,"['install', 'release']","['install', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] gets rid of old `conda-forge/label/libint_dev` that were littered around the CI files. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] In order to upload the big AM L2 v281, I had to delete some libint pkgs that were used in CI, so this fixes CI; - [x] Update the L2 src tarballs; - [x] Prep for some extra functions that L2 will someday provide; - [x] Do proper float testing on a file; - [x] build einsums (still optional) on linux azure. this needs min gcc10. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3107:213,release,release,213,https://psicode.org,https://github.com/psi4/psi4/pull/3107,2,"['Update', 'release']","['Update', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2746:212,release,release,212,https://psicode.org,https://github.com/psi4/psi4/pull/2746,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. #### Review guide; below are the key files for review; * proc.py; * sapt-compare/input.dat; * sapt.rst. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] update various build docs, especially for Libint2 and libecpint; - [x] a coalition including @konpat and @CDSherrill agree that it's better to update the default for elst terms for sapt0 in Ed's code for (1) physics and (2) match the other two sapt codes. this implements that decision. hopefully the docs additions are clear. glad of suggestions. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2582:291,update,update,291,https://psicode.org,https://github.com/psi4/psi4/pull/2582,2,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. (To review, turn on ""hide whitespace"" at the little gear to see that task_base changes are just deleted alternate logic.). ## User API & Changelog headlines; - [x] Since v1.7, Psi4 has supported legacy v0.15.8 qcfractal (latest release until Sep 2023) and the incipient ""next"" branch. ""next"" was released in Sep 2023 as v0.50, so for v1.9 we support only ""next"" (currently v0.52) and drop legacy support. ## Dev notes & details; - [x] Cancel all the v0.51 + tweaks we were using to keep snowflakes running and pull the new qcfractal v0.52; - [x] Cease supporting legacy (pre-next) v0.15.8 qcfractal in anticipation of the v1.9 release. Now the Mac eco GHA will be testing ""next"", not ""legacy"", so we're not restricted to old python.; - [x] Addresses the CMake version problem pointed out in closes #3089 ; - [x] T~he urllib3 thing I think might help the Win nightly build uploads~. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3090:308,release,release,308,https://psicode.org,https://github.com/psi4/psi4/pull/3090,3,['release'],"['release', 'released']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. @lothian, the primary files to look at are procedures/proc.py, cc.rst, preview_capabilities_ccenergy.rst, and (for example) cc13b/input.dat. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Conventional ccsd(t) gradients will now proceed as finite-difference calculations, which are much more memory efficient. If you still want to access the analytic gradients, add `set qc_module ccenergy`. ## Dev notes & details; - [x] the main change is disabling default conv rhf/uhf ccsd(t) analytic gradients through ccenergy in proc.py . they're still accessible by setting `qc_module=ccenergy` explicitly; - [x] changes to tests so that we're still testing the gradients; - [x] changes to the capabilities auto-documentation that starts with stdsuite, gets stored in samples/stdsuite_psi4.txt, and gets processed into docs tables, a viz preview of which are stored in sphinxman/source/.; - [x] simpler docs-building environment!. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). closes #2913 . ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2943:354,release,release,354,https://psicode.org,https://github.com/psi4/psi4/pull/2943,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. Collect SAPT changes in the progress of SAPT consolidation. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] avoid stumbling into memdf with disk algorithem. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3131:273,release,release,273,https://psicode.org,https://github.com/psi4/psi4/pull/3131,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. FISAPT itself untested, so logic for disp term may need adjustment. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3171:281,release,release,281,https://psicode.org,https://github.com/psi4/psi4/pull/3171,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. GXX 7.5 from conda is throwing bizarre assembly-level errors during libmints compile like `open CFI”` and `Error: .size expression for does not evaluate to a constant`. This compiler is working fine locally and the conda env hasn't changed since it was working fine on GHA. Searching suggests things like running of of memory for compile or binutils patches. conda has moved from 7.5 to 11.2 pinning, so that's probably a good next step. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2644:430,patch,patches,430,https://psicode.org,https://github.com/psi4/psi4/pull/2644,1,['patch'],['patches']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. Refactor `electric_field()` to return ElectricFieldInt rather than OneBodyAOInt. Fixes #2793 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] ElectricFieldInt returned now by `IntegralFactory.electric_field()`; - [x] Equivalent changes in `libmintshelper` made to stop immediate `static cast`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] ElectricFieldInt returned now by `IntegralFactory.electric_field()`; - [x] Equivalent changes in `libmintshelper`. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2795:308,release,release,308,https://psicode.org,https://github.com/psi4/psi4/pull/2795,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. This is a snapshot in which all n-body tests pass using QCManyBody locally. There's lots of code to be erased and reworked yet. And qcmb isn't installed in CI, so tests aren't expected to pass. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3160:223,install,installed,223,https://psicode.org,https://github.com/psi4/psi4/pull/3160,3,"['install', 'release', 'update']","['installed', 'release', 'updated']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. `Molecule::atom_at_position` is supposed to return the index of the atom found in a specified radius of a specified point in 3D space, or -1 if no atom is found in the radius. The current implementation assumes there is never more than one atom within the given radius, and returns the index of the first atom found to be within the tolerance.; This can hypothetically happen in two ways: the atoms are either extremely close, or the tolerance is set to a large value. The new implementation behaves more like one would expect it to behave: under the aforementioned extreme circumstances it throws an exception and informs the user with an error message. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] Detect corner case and throw error if encountered; - [x] Update docstrings to better describe implementation. ## Questions; - [x] Apparently, `qcdb.Molecule` has its own independent Python implementation of `atom_at_position`. As is, this PR means that calling `qcdb.Molecule.atom_at_position` and `psi4.core.Molecule.atom_at_position` from a Python program may return different results for the same geometry, if the aforementioned corner case happens.; Not sure what to do about this, at first glance it would be neater if both `qcdb.Molecule.atom_at_position` and `psi4.core.Molecule.atom_at_position` ended up calling the same C++ implementation, but I am not sure how feasible that would be.; Thoughts?. ## Checklist; - [x] No new features; - [x] `ctest -j24` and `make pytest` both passed locally. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2465:899,Update,Update,899,https://psicode.org,https://github.com/psi4/psi4/pull/2465,1,['Update'],['Update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. closes #2867 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] functionals created by dict (like TPSS or custom) weren't hitting XC_build where the libxc citation was being set. Fixed by setting the citation from a static fn on LibXCFunctional. ## Checklist; - [ ] ~Tests added for any new features~; - [ ] ~[All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests)~. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2877:228,release,release,228,https://psicode.org,https://github.com/psi4/psi4/pull/2877,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. closes #3040. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] print_variables prints array variables. (first and last element); - [x] Used this to test scf guesses in pytest.; - [x] Store new qc variable ""SCF TOTAL ENERGIES"" that is a list of all the SCF iteration energies. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3052:227,release,release,227,https://psicode.org,https://github.com/psi4/psi4/pull/3052,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; @carolinesargent identified a bug where running FSAPT with an external potential w/o having frozen the orientation with no_com + no_reorient would run but give the wrong answer. :-(. External potentials has long been one of those cases where we required the user to freeze the orientation at molecule creation time so that the potential could be set in the same frame. This couldn't be fixed driver-side because as soon as the `core.Mol` builds w/o freeze directives, it loses the original Cartesian coordinates. (The clone, set_nocom, set_noreorient calls in the driver allow _regular_ sapt to forego user setting by preventing the dimer, monoA, monoB from having different frames.). Happily, in the intervening period, @maxscheurer ran into exactly this problem for polarizable embedding potentials and solved it by tacking a copy of the original Cartesians onto the molecule. So we're applying this to FSAPT also. . I've been getting some segfaults that I think are a quirk of my directory, hence the cc31 testing. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Fixes bug where FSAPT with an external potential and without no_com/no_reorient set would return wrong answer. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Let's use this route to accommodate aux info in the frame of the Cartesianmol. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2934:1231,release,release,1231,https://psicode.org,https://github.com/psi4/psi4/pull/2934,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; A lot of error exits in `libdpd` are implemented with `exit(1)` or equivalent. This makes debugging harder, and results in less informative error messages when a test fails in the CI environment. This PR modernizes all `exit(1)` error exits in `libdpd` into `throw PSIEXCEPTION`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now prints more detailed error messages if an error happens in its DPD module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] All `exit(1)` and `exit(PSI_RETURN_FAILURE)` calls in `libdpd` have been replaced with a `throw PSIEXCEPTION`. ## Checklist; - [x] No new features; - [x] CI tests are failing only due to libint being in flux. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3117:493,release,release,493,https://psicode.org,https://github.com/psi4/psi4/pull/3117,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; A quick cleanup removing `new` and `delete` in favor of `std::vector` in SOBasis. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3024:295,release,release,295,https://psicode.org,https://github.com/psi4/psi4/pull/3024,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Added SAPT0-D4 and SAPT0-D4M methods and parameters along with a test. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3172:284,release,release,284,https://psicode.org,https://github.com/psi4/psi4/pull/3172,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Addressing Issue #2226, changing the gemm() method in Matrix.cc. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calculates row and column totals from rowspi_ and colspi_; - [x] Throws a Psi exception error if the dimensions don't match up. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2729:277,release,release,277,https://psicode.org,https://github.com/psi4/psi4/pull/2729,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds SAPT0-D and FISAPT-D routines, continuation of #1786. This code only works with the latest QCEngine commit, so it will fail the tests until the next QCEngine release. ## Todos; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [X] Add SAPT0-D and FISAPT0-D, for any -D variant available to HF; - [X] Enable access to pairwise dispersion decomposition from dftd3; - [x] Adapt fsapt.py analysis to use -D dispersion info. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests); - [x] Test fsaptdiff.py. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2081:243,release,release,243,https://psicode.org,https://github.com/psi4/psi4/pull/2081,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds optking keywords missed in #3204. For users, if these options are needed with an older version of Psi4, they can be passed through `psi4.optimize(..., 'optimizer_keywords'=)` to optking. Features require `optking >= 0.3.0`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Adds shortcut for freezing all dihedrals in a molecule `freeze_all_dihedrals` and `unfreeze_dihedrals` . ## Checklist; - [x] Ran -L opt subset; - [x] keywords checked explicitly in optking's tests . ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3209:442,release,release,442,https://psicode.org,https://github.com/psi4/psi4/pull/3209,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Adds shorthand for SPW92 functional. Also removes a spurious citation from SVWN. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calculations can be launched with SPW92. ## Questions; - [x] Can someone add in the test reference energies? I don't have a running version of Psi4... ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2784:294,release,release,294,https://psicode.org,https://github.com/psi4/psi4/pull/2784,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; After seeing some GCC warnings related to sprintf usage I decided to modernize SAPTDIIS label generation with the use of `std::string` and a new utility function to retain the output format of `%2d`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No user-visible changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New function: `to_str_width`: converts any type supported by `std::to_string` to an `std::string`, and prepends as many spaces as required to meet the specified minimum width.; - [x] `SAPTDIIS::get_vec_label` and `SAPTDIIS::get_err_label` are modernized to return an `std::string`, instead of a `char*` that the caller needs to deallocate.; - [x] Functions using these two functions have been adapted to the changes. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2804:413,release,release,413,https://psicode.org,https://github.com/psi4/psi4/pull/2804,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; After the removal of `sem_test` in #2776, the only remaining internal user of `libqt/schmidt_add.cc` is `libqt/david.cc`. That too is destined for removal, if its only user in `dfocc` is removed by #2684. So it looks like `schmidt_add` could be removed in the future, when all of its callers are gone. To keep the promise of not randomly breaking API without fair warning, this PR deprecates the function, setting up its eventual removal. Note that this `schmidt_add` is not the same function as the `schmidt_add` in `cceom` or `detci`, even though the name is the same. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `PSI_API` function `int schmidt_add(double** A, int rows, int cols, double* v)` is deprecated and 1.7 will be the last release with it present. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Deprecation message is added to `schmidt_add` in `libqt`. ## Questions; - [ ] This function was tagged as `PSI_API` in #1077 by @raimis, do we know why it was necessary back then?. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2822:784,release,release,784,https://psicode.org,https://github.com/psi4/psi4/pull/2822,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Apparently `errno` is not defined on FreeBSD by default, so we have to explicitly include `<cerrno>` in files that use it. This PR adds that include.; Fixes and closes #2810. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None? The offending code has not made it to any release yet. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `#include <cerrno>` is added to the few PSIO files that use `errno`. ## Checklist; - [x] No new features; - [x] CI tests are passsing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2811:388,release,release,388,https://psicode.org,https://github.com/psi4/psi4/pull/2811,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Around the time when the Boost dependency was being removed, some `PRAGMA_WARNING` manipulations were inserted, presumably to reduce warning noise during builds.; The Boost includes have since been removed and these are no longer necessary. `#include <memory>` thankfully does not require such guarding. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] No user visible changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Stop unnecessarily guarding `#include <memory>` with `PRAGMA_WARNING_IGNORE_DEPRECATED_DECLARATIONS` . ## Checklist; - [x] No new features; - [ ] CI tests are passing. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3088:517,release,release,517,https://psicode.org,https://github.com/psi4/psi4/pull/3088,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; As discussed in #2997 and #3117, no debugging information is produced in many places in Psi4. I believe this is because of improper calls to `exit()`, which is a remnant of the C history of Psi. #3117 replaces the calls to `exit()` with `throw`s in libdpd. This PR replaces the calls in the rest of Psi4. Sorry for the verbose changes; I ran clang-format on the files since my editor's indentation doesn't match that in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Obsoleted calls to `exit()` have been replaced by exceptions, which should better guarantee the passing of error messages to the end user. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Spurious calls to `exit()` have been removed in favor of exceptions, which should better guarantee error messages getting through to the user. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3118:639,release,release,639,https://psicode.org,https://github.com/psi4/psi4/pull/3118,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; As it says in the title, see #2942 and #2938. Closes #2942. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] `adcc` version `0.15.16` at least required due to bugfixes in `adcc`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Check `adcc` min version at runtime. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). closes #2938 closes #2942. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2944:273,release,release,273,https://psicode.org,https://github.com/psi4/psi4/pull/2944,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Both `normalize` and `schmidt_add` are now unused. `schmidt_add` is `PSI_API`, but it has been given a deprecation period of one release. The files will be submitted to the attic after this is merged. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` function `schmidt_add(double** A, int rows, int cols, double* v)` has been removed. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused `normalize` function and file are removed; - [x] Deprecated `PSI_API` function `schmidt_add` and file are removed. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2927:209,release,release,209,https://psicode.org,https://github.com/psi4/psi4/pull/2927,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Cleanup to libmints/petitelist to remove manual memory management in favor of `std::vector`. Some of the code was not really clear (use of both `len` and `length` in some of the SO objects). ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3026:404,release,release,404,https://psicode.org,https://github.com/psi4/psi4/pull/3026,1,['release'],['release']
Deployability,## Description; <!-- Provide a brief description of the PR's purpose here. -->; Closes #2712. Please do not use C-style casting for complicated types. ## Release Notes Delta; <!-- Notable points (developer or user-interest) that this PR has or will accomplish. -->; - [x] **Bugfix:** Seeding an SCF gradient with a ref_wfn that isn't SCF now raises an error rather than a segfault. ## Checklist; - [x] `grad` and `hess` ctests pass. ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2714:154,Release,Release,154,https://psicode.org,https://github.com/psi4/psi4/pull/2714,1,['Release'],['Release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Closes #2799 : prints out the name of the file that failed to open. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2801:281,release,release,281,https://psicode.org,https://github.com/psi4/psi4/pull/2801,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Closes #3115. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] The default definition for a molecule has been removed. Prior to this release, if a `molecule` had not been defined, Psi4 would run on a hydrogen molecule with bond length 0.74 Å. This change only affects Psithon input. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3116:227,release,release,227,https://psicode.org,https://github.com/psi4/psi4/pull/3116,2,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Definitions of various IO system call macros are currently replicated and/or scattered across files. These macros were added to paper over differences between Windows and Linux/Mac.; This PR coalesces all of them into `psio.h`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `SYSTEM_WRITE`, `SYSTEM_READ`, `SYSTEM_LSEEK`, `SYSTEM_OPEN`, `SYSTEM_CLOSE`, `SYSTEM_UNLINK`, `PSIO_OPEN_OLD_FLAGS`, `PSIO_OPEN_NEW_FLAGS `and `PERMISSION_MODE `are now only defined in `psio.h`, which is already included by pretty much all PSIO-related files anyways.; - [x] Same goes for the Windows specific `io.h` include, and the non-Windows `unistd.h`. ## Checklist; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2741:440,release,release,440,https://psicode.org,https://github.com/psi4/psi4/pull/2741,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Detci still has a few places where error termination is effected through printf+abort(). This PR replaces the calls to abort() in with `throw PSIEXCEPTION(msg)`. The rest of the codebase has more of this pattern, those are subject to future PRs to keep this one small. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] A few error terminations in the detci module now print a more detailed error information to the console, instead of just the error message in the output file. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Calls to `abort()` in detci are replaced with `throw PSIEXCEPTION(msg)`, where `msg` is the relevant error message taken from the context of the `abort()`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3168:482,release,release,482,https://psicode.org,https://github.com/psi4/psi4/pull/3168,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fix for the bug described in [issue #1968](https://github.com/psi4/psi4/issues/1968) about incorrectly loading ECPs for ghosted atoms. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Calculations using ghosted atoms that contain ECPs in the basis set can now be executed properly. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] When loading basis functions we check if we should skip loading ECPs (`skip_ghost_ecps`) and if `true` then we check if an atom is a ghost (`mol->Z(atom) == 0.0`). If yes we do not load ECPs fot it.; - [x] Added optional boolean argument `skip_ghost_ecps` for `construct_basisset_from_pydict` function. The default is `true`, we set it `false` for atomic calculations (like SAD guess). ## Questions; - [x] Are the check runs failing due to the changes in this PR?. ## Checklist; - [x] Minimal working example; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167:348,release,release,348,https://psicode.org,https://github.com/psi4/psi4/pull/3167,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes a bug encountered when running optimizations in BAKERJCC96. All calculations in a finite difference; calculation were writing orbitals to disk and overwriting the old orbitals. Only reference calculation should; be saved. In cases were the symmetry was lowered in one of the last displacements, subsequent gradient calculations; were failing to read orbitals. ``` ; File ""/home/zander/github/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 1761, in scf_helper; raise ValidationError(""Cannot compute projection of different symmetries.""); ```. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] scf_helper assumes orbitals should always be written. Passes `write_orbitals` = `false` through kwargs for displacements. ## Questions; - [ ] The new test is an optimization, would a test in ddd-function-kwargs or similar be preferred?. ## Checklist; - [x] Tests added for any new features; - [x] full ctest (Psi4, Psi4 + [CheMPS2, DFTD3, dkh, gCP, gdma, simint, ecpint]). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2827:775,release,release,775,https://psicode.org,https://github.com/psi4/psi4/pull/2827,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes a bug in `sad.cc`: pseudo-orbitals should be obtained by multiplying the orbital with the square root of their occupation to reproduce the correct density matrix C occ C^T. Closes #3137. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3138:406,release,release,406,https://psicode.org,https://github.com/psi4/psi4/pull/3138,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Fixes the buffer overflow error described in #3214 . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3215:266,release,release,266,https://psicode.org,https://github.com/psi4/psi4/pull/3215,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; GT will trial this before it's ready for merging, but it's good to get eyes on it and to not lose track of the changes. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Users of QCFractal `next` can now customize protocols, tags, priorities, and owner_groups. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Allow psi4 to turn all the knobs qcportal allows: https://github.com/MolSSI/QCFractal/blob/next/qcportal/qcportal/client.py#L903-L915. ## Questions; - [x] @bennybp look ok? Ben has looked this over and approved. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3013:333,release,release,333,https://psicode.org,https://github.com/psi4/psi4/pull/3013,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I have added an option to compute the necessary GRAC shifts for SAPT(DFT) automatically. I added a little extra logic to ""try harder"" at converging cations to hopefully fail less often if this option is specified. These changes will enable more users to call SAPT(DFT) more routinely in their workflows without having to consider acquiring GRAC shifts externally through their own logic or tabulated sources. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Automatically computes SAPT(DFT) GRAC shifts for monomer A and/or B; - [ ] Logic for trying extra options with level shifts to attempt to converge more cations in approximating the ionization potential. ## Questions; - [ ] Perhaps I should add a more challenging pytest in which the first cation SCF convergence attempt fails but the iterative options approach succeeds. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3232:624,release,release,624,https://psicode.org,https://github.com/psi4/psi4/pull/3232,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I think whoever brought up the new ""warnings"" in the sphinx log was on the right track. We do have the treat-warnings-as-errors flag on. It's the treat-broken-links-as-errors flag that we can't enable yet. Between that and the 9800 PR in the newest sphinx changelog released 17 Jan https://www.sphinx-doc.org/en/master/changes.html#release-4-4-0-released-jan-17-2022, I bet that's what's causing our docsbuild fail. Hopefully I haven't added any new syntax errors. - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2422:346,release,released,346,https://psicode.org,https://github.com/psi4/psi4/pull/2422,3,['release'],"['release-', 'released', 'released-jan-']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; I was looking through the source code to understand what the `DFT_REMOVE_DISTANT_POINTS` keyword does, and realized I could not understand what the `remove_distant_points` function was doing. I also suspect that that code was partly wrong. This PR cleans up that function so that it now does what it should. However, it is also evident that the logic of this function is not optimal. Instead of checking if any nucleus is within the maximal spatial extent of the basis set, one should check if any nucleus is within the extent of that nucleus' basis functions. This is just a drive-by commit, as I don't think it's worthwhile to spend time on Psi4's quadrature code, since [IntegratorXX](https://github.com/wavefunction91/IntegratorXX/) and [GauXC](https://github.com/wavefunction91/GauXC) offer a reusable solution that could be used also in Psi4 with significant negative LOCs. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3012:754,Integrat,IntegratorXX,754,https://psicode.org,https://github.com/psi4/psi4/pull/3012,3,"['Integrat', 'release']","['IntegratorXX', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Implements OpenOrbitalOptimizer support in Psi4. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] (Optional) If OpenOrbitalOptimizer support is enabled at compile-time, an improved atomic Hartree-Fock solver is used in the SAD, SADMO, and HUCKEL guesses. In contrast to the legacy solver in Psi4, the OpenOrbitalOptimizer atomic self-consistent field is fully symmetry aware, which is especially important for e.g. transition metal atoms. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3136:262,release,release,262,https://psicode.org,https://github.com/psi4/psi4/pull/3136,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Improvements discussed in a comment to #3043. The 64-character limit may not be valid on all architectures; this PR should avoid having to revisit the patch. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3044:231,patch,patch,231,https://psicode.org,https://github.com/psi4/psi4/pull/3044,2,"['patch', 'release']","['patch', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; In, SAPT(DFT), I removed setting ""DF_INTS_IO"" to ""SAVE"" because it blocked scf_type==""DF"" from accessing MemDF on its own. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3173:336,release,release,336,https://psicode.org,https://github.com/psi4/psi4/pull/3173,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; It is done. The beast lays slain.; This PR replaces the last calls of the `sq_rsp` function in the `dfoccwave::Tensor2d::diagonalize` overloads with the new DSYEV wrappers, and removes the function and its file. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Deprecated `PSI_API` function `void sq_rsp(int nm, int n, double **array, double *evals, int matz, double **evecs, double toler)` has been removed. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Merge `dfoccwave::Tensor2d::diagonalize` overloads to minimize code dupliaction; - [x] Add machine-readable docstrings in the header file; - [x] `dfoccwave::Tensor2d::diagonalize` overloads now throw on non-square matrices or diagonalizer failure; - [x] Replace calls of `sq_rsp` with `DSYEV_ascending` and `DSYEV_descending`; - [x] Delete `sq_rsp` function and file. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2928:425,release,release,425,https://psicode.org,https://github.com/psi4/psi4/pull/2928,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; It looks like `libmints/svd.cc` is unused. Psi4 appears to build just fine without it. It contains what looks like ancient LAPACK code that was auto-translated with f2c. This PR deletes the file. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused file `libmints/svd.cc` is deleted. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3169:409,release,release,409,https://psicode.org,https://github.com/psi4/psi4/pull/3169,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Just comments a cryptic line in xhost.cmake. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2983:258,release,release,258,https://psicode.org,https://github.com/psi4/psi4/pull/2983,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Looks like I didn't push the updated reference output for the MODHUCKEL guess... ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3011:109,update,updated,109,https://psicode.org,https://github.com/psi4/psi4/pull/3011,2,"['release', 'update']","['release', 'updated']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Main point is to add scipy to Windows conda requirements, so package builds. Also updates some labels for 3.8+. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2455:162,update,updates,162,https://psicode.org,https://github.com/psi4/psi4/pull/2455,1,['update'],['updates']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; My main goal is to provide an option for users to run FSAPT directly through the psiapi and not to have to create extra files and post-process the psi4 outputs. This is largely done by adding an fsapt analysis function to `./psi4/driver/driver.py`. I extended `fsapt.py` by moving its history to `psi4/driver/procrouting/sapt/fsapt.py` to enable users to either run the analysis directly after a `psi4.energy('fisapt0')` calculation through psi variables or through an `AtomicResults` as is demonstrated in `tests/pytests/test_fisapt.py`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] Addition of `./psi4/driver/driver.py:fsapt_analysis()` to call fsapt analysis through the psi4 module. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] FSAPT is now available directly through psi4 instead of post-processing output files; - [ ] FISAPT results can be stored in `AtomicResults` permitting the storage of results in a QCArchive database. ## Checklist; - [x] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3222:752,release,release,752,https://psicode.org,https://github.com/psi4/psi4/pull/3222,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; NOTE: this commit was applied to v1.8.1 even though not merge to master until after that release. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] closes #3003 we usually have pytest around, but it shouldn't be absolutely required. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3008:169,release,release,169,https://psicode.org,https://github.com/psi4/psi4/pull/3008,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; On the Fedora build system, `python` is not available which causes tests to fail.; This patch fixes this issue for good. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3216:168,patch,patch,168,https://psicode.org,https://github.com/psi4/psi4/pull/3216,2,"['patch', 'release']","['patch', 'release']"
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; PR #2684 has removed the last remaining call site of the `libqt` Davidson solver. This PR removes this unused function and file.; The file will be submitted to the attic after this is merged. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None, `david` was not `PSI_API`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Unused `libqt` function `david` and its file are removed.; - [x] Declared-but-never-defined function `print_block` is removed from `qt.h`. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2925:405,release,release,405,https://psicode.org,https://github.com/psi4/psi4/pull/2925,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; PR #2686 has accidentally added some superfluous includes of `libpsi4util/PsiOutStream.h`, and I also missed removing a superfluous printf line. No real harm done, but they can be removed. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Remove some includes added by #2686 ; - [x] Remove a printf added by #2686 . ## Checklist; - [x] No new features; - [ ] CI tests are passing. ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2813:402,release,release,402,https://psicode.org,https://github.com/psi4/psi4/pull/2813,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Printf format specifiers are required to match the type of the variable being printed. Using an incorrect format specifier may be UB. This PR resolves instances where the format specifier was incorrect. At least some of these have been triggering GCC warnings, so Psi4 now compiles with a couple fewer warnings. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Likely no user-visible changes. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] `cctransort/memcheck`: Replace 14 instances of `%1lu` being used for printing an `int`, with `%d`. Make argument `const`.; - [x] `detci/olsengraph.cc`: fix one instance of `%3d` being used for printing a `size_t` integer; - [x] `dlpno/mp2.cc`: fix 12 instances of %d being used for `size_t` integers; - [x] `fnocc/lowmemory_triples.cc`: fix `%i` being used to print a `long`; - [x] `libfock/DirectJK.cc`: fix %3d being used for `size_t` integer; - [x] `libfock/solver.cc`: fix %d being used for `size_t` integer; - [x] `libmints/cdsalclist.cc`: fix 5 instances of %d being used for `size_t` integers; - [x] `libmints/extern.cc`: fix 3 instances of %d being used for `size_t` integers. Make argument `const &`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2771:525,release,release,525,https://psicode.org,https://github.com/psi4/psi4/pull/2771,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Psi4 has wrappers for seven LAPACK functions which have been marked as deprecated by the LAPACK devs for a long time. These functions have also been marked as deprecated within Psi4. Luckily they are not marked as `PSI_API`, nor are they used by Psi4. This PR removes them. Note that the default git diff algorithm is getting confused by the repetitive text in `lapack_intfc.cc` and incorrectly indicates that some lines were added. The correct diff can be obtained with `--diff-algorithm=minimal` :; ```; $ git diff --stat --diff-algorithm=minimal master remove_deprecated_lapack; psi4/src/export_blas_lapack.cc | 7 -; psi4/src/psi4/libmints/psimath.cc | 50 --; psi4/src/psi4/libmints/psimath.h | 27 -; psi4/src/psi4/libqt/CMakeLists.txt | 19 -; psi4/src/psi4/libqt/lapack_intfc.cc | 1021 -----------------------------; psi4/src/psi4/libqt/lapack_intfc_mangle.h | 35 -; psi4/src/psi4/libqt/qt.h | 25 -; 7 files changed, 1184 deletions(-); ```. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now requires the LAPACK library to provide `DGGSVD3` and `DGGSVP3`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Fortran, C and C++ style wrappers for `DGEGS`, `DGEGV,` `DGELSX,` `DGEQPF,` `DGGSVD,` `DGGSVP` and `DTZRQF` are removed.; - [x] CMake checks for the availability of `DGGSVD3` and `DGGSVP3` are removed. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2823:1158,release,release,1158,https://psicode.org,https://github.com/psi4/psi4/pull/2823,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Refactored code in the WaveFunction class as per #2875. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] No changes to user experience. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Removed `nmo_` cache variable in favor of `nmopi_.sum()` to keep things in sync; - [ ] Refactored code to reflect removal of variable. ## Questions; - [ ] Best ways to test this change?. ## Checklist; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge. #2875",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2980:269,release,release,269,https://psicode.org,https://github.com/psi4/psi4/pull/2980,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Remove c++ optking. Add new python optking driver. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] RN 1 The fixed_* optimization keywords have been changed to ranged_* options; - [x] RN 2 output will be changed. Check output.dat for simple convergence / step info. output.log for detailed info; - [x] RN 3 IRC convergence behavior different for minima and substep. ; - [x] Downstream plugin users who were still getting wfn from globals will find it has now departed. Please follow the advice it's been issuing for years to do wfn passing. [LAB added]. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] New optimizer. Most of driver is very similar; - [x] Hessian Updating and optimization logic is in optking as much as possible; - [x] Restarting optimizations now supported. Optking can write entire state to disc (json); - [x] Driver attempts to symmetrize geometries; - [x] New keywords added. Some removed / updated. ; - [x] old optking removed from CMakeLists.txt from `/psi4/src/psi4`; - [x] optking py_funcs removed from core.cc; - [x] All tests have been verified for equal or better convergence. (except opt-irc-2); - [x] globals legacy gradient, wfn, and molecule removed [LAB added]. ## Questions; - [ ] A document describing differences between the optimzers may be necessary; - [ ] Unclear if I have fully removed old optking and building with new optking is fully working. ## Checklist; - [x] test15 tests restart; - [x] Can remove old deprecated set_gradient; - [x] ctest -L opt run. ## Status; - [x] Ready for review; - [ ] Ready for merge. For documentation on the new optimizer please see",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727:263,release,release,263,https://psicode.org,https://github.com/psi4/psi4/pull/2727,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Some overloads of `Matrix::diagonalize` in `libmints` are never called anywhere within Psi4, and some more are currently taking pointer arguments. They should be removed, but as discussed in #2693 the entire `Matrix` class is `PSI_API` and Forte is for sure using these diagonalization functions. To keep the promise of not randomly breaking API without fair warning, this PR deprecates said functions but keeps them usable. Call sites within Psi4 are however converted to use non-deprecated overloads, so after 1.7 is out, completing the removal should just be a simple deletion of the deprecated overloads. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix* eigvectors, Vector* eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(SharedMatrix& metric, SharedMatrix& eigvectors, std::shared_ptr<Vector>& eigvalues, diagonalize_order nMatz = ascending)` is deprecated and 1.7 will be the last release with it present.; - [x] `PSI_API` member function `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, int nMatz = 1)` is now using the `diagonalize_order` enum, like the other overloads: `Matrix::diagonalize(Matrix& eigvectors, Vector& eigvalues, diagonalize_order nMatz = ascending)`. But since `ascending = 1`, this should not cause disruptions. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should b",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2738:821,release,release,821,https://psicode.org,https://github.com/psi4/psi4/pull/2738,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; Sometime between https://github.com/psi4/psi4/commit/5b54376e4f358ec1318539d3ac0a2e42ea0483f8 and https://github.com/psi4/psi4/commit/7e4ecf968ec7920ab404cb357de827cf3785a254, the original(?) code for generating broken-symmetry guesses for UHF/UKS was disabled, and parts of it may have been removed since.; These days, the way to get a BS guess seems to be setting `guess_mix true`, which does not use the old BS code fragments in `scf_helper`.; So, as far as I can tell it is dead code. This PR removes it. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] None, option/feature has been defunct/superseded for 6+ years. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Defunct broken-symmetry code is removed from Python function `scf_helper`. ## Checklist; - [x] No new features; - [x] Tests run by the CI are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2774:722,release,release,722,https://psicode.org,https://github.com/psi4/psi4/pull/2774,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; TBA. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] TBA. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3114:218,release,release,218,https://psicode.org,https://github.com/psi4/psi4/pull/3114,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; TODO. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3101:219,release,release,219,https://psicode.org,https://github.com/psi4/psi4/pull/3101,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The `-H<path>` option for CMake is technically not part of the CMake public interface, it is not documented and was never meant for public use. Since CMake 3.13 there is a proper alternative, `-S<path>`, so Psi4 should use that and stop suggesting users to use `-H<path>`. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 no longer suggests users to use the undocumented `-H<path>` CMake option when building from source. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Replace `-H<path>` with `-S<path>` in CMake invokations. ## Questions; - [ ] I have no idea where to make a PR for fixing this in psi4-path-advisor. ## Checklist; - [x] No new features; - [x] CI tests are passing. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2797:486,release,release,486,https://psicode.org,https://github.com/psi4/psi4/pull/2797,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The common thread of this PR is be more explicit in what calculations Psi4 can do and conveying that to the user at runtime and through the docs. In practice, this involves expanding the coverage of stdsuite, using those results to autogenerate docs tables, reconciling hand-generated docs tables, referring to all in runtime errors, and cleaning stuff up along the way. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] MRCC now called with `set qc_module mrcc` rather than ""mr"" prefix onto method; - [x] Many NYI messages, whether from ManagedMethodError, MissingMethodError, or plain ValidationError from run_* fns have changed their wording and added content. On the whole, this should be helpful, but if you're searching for particular phrasing, you'll likely need to adjust regexes.; - [x] New tables in the docs with details on accessible methods.; - [x] Arbitrary-order MPn no longer runable with ROHF. Arbitrary-order ZAPTn no longer runable with RHF.; - [x] Running DF through CCENERGY (experimental, expert only) may now require `set qc_module ccenergy`. ## Dev notes & details; - [x] running stdsuite writes a storage file, and a new document_capabilities script turns the storage file into various tables that newly (1) include all-electron/frozen-core info (notated ""aefc"" in places), (2) show default modules and default e.g., mp2_type, (3) cover most single-ref ground-state total-energy methods, (4) are proven to honor return val and qcvar contracts. details of how and why this works are at [psi4/share/psi4/scripts/merge_stdsuite.py](https://github.com/psi4/psi4/pull/2731/files#diff-4a81ee0fb4705fe6acd6ac7f6417f5a899437a93780329a5f647a94eea425c24R8) . If you want to suggest changes to notation, keep in mind that main-body cell contents must be expressible in a single unicod",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731:584,release,release,584,https://psicode.org,https://github.com/psi4/psi4/pull/2731,1,['release'],['release']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->; The version of ADCC that the Psi4 CMake system currently requires (and tries to build if not found) is incompatible with C++17, and thus always fails to build. See https://github.com/adc-connect/adcc/issues/131 for the error message. This error was also mentioned in issue #2572.; This has been resolved by the ADCC/libtensor devs since, so bumping the required/built ADCC version to the latest release should fix _this particular_ issue with the ADCC build process. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Psi4 now requires ADCC version 0.15.13 or newer.; - [x] Fixed issue where building Psi4 from source with the ADCC plugin enabled-but-not-found resulted in a build failure with the error message `ISO C++17 does not allow dynamic exception specifications`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] CMake now looks for ADCC 0.15.13 or newer, if not found the 0.15.13 tarball is downloaded and built. ## Checklist; - [x] No new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2785:475,release,release,475,https://psicode.org,https://github.com/psi4/psi4/pull/2785,2,['release'],['release']
