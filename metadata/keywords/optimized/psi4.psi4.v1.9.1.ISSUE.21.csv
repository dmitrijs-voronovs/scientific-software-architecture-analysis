quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"Francesco recently checked in Rob's cube file generation code. Make sure there is a corresponding test case (maybe it's more of a sample, since not sure how to test that ... can at least make sure it runs, anyway). Also make sure there is documentation.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/116:98,test,test,98,https://psicode.org,https://github.com/psi4/psi4/issues/116,2,['test'],['test']
Testability,"From Daniel Schofield, 2/7/14: ""I have been attempting to run SAPT calculations in PSI4, but am having little success due to my inability to converge the df-hf step for one of my monomers (H2). I think this is due to a combination of using density fitting and the size of the ghosted basis set relative to this monomer i.e. if I run in a monomer centered basis set the calculation converges and if I run direct SCF (outside of SAPT) the calculation converges."". I have the test input/output files. Apparently the DF-HF is going non-variational on the dimer computation.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/54:473,test,test,473,https://psicode.org,https://github.com/psi4/psi4/issues/54,1,['test'],['test']
Testability,"From discussion today, the following tasks to wrap up https://github.com/psi4/psi4public/issues/103; - [x] In driver.py, delete reference-bearing methods from procedures table (multiple places). Delete table:energy_scf rst table and its analogies. Salvage 'hf' from them and move it into the main rst table.; - [x] In proc.py, remove much of parse_scf_cases, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [x] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [x] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/117:456,test,test,456,https://psicode.org,https://github.com/psi4/psi4/issues/117,1,['test'],['test']
Testability,"From discussion today, the following tasks:; - [ ] In `driver.py`, delete reference-bearing methods from procedures table (multiple places). Delete `table:energy_scf` rst table and its analogies. Salvage `'hf'` from them and move it into the main rst table.; - [ ] In `proc.py`, remove much of `parse_scf_cases`, maybe drop that fn and move it back into the run_scf\* as it was early this year.; - [ ] Inspect test cases for removed functionality and adapt them. Check that the uhf that originally prompted this post is still working. Check that every energy/gradient rhf/uhf/rohf/cuhf/etc scf/hf/b3lyp does something sensible or exits gracefully.; - [ ] Check the docs to see if they reference this functionality and adapt them.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-121430626:410,test,test,410,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-121430626,1,['test'],['test']
Testability,"From forum: http://forum.psicode.org/t/polarizability-error-ao-mux-has-an-unrecognized-shape/1916/3. The error is `ERROR: ""AO Mux"" has an unrecognized shape. Must be either (36, 36) or (5, 31)`; https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/response/scf_response.py#L176; The `vector` here, has still the original size. DIdn't trace it any further. Made up example for testing:; ```; molecule mol {; 0 1; O 0.44260 -0.88720 -0.29490; H 0.73940 -0.26640 -0.96690; H 0.79240 -0.54630 0.53350; }. basis {; assign verydiff; [verydiff]; spherical; ****; H 0; S 4 1.00; 1.301000D+01 1.968500D-02; 1.962000D+00 1.379770D-01; 4.446000D-01 4.781480D-01; 1.220000D-01 5.012400D-01; S 1 1.00; 1.220000D-01 1.000000D+00; S 1 1.00; 0.0297400 1.0000000; P 1 1.00; 7.270000D-01 1.0000000; P 1 1.00; 0.1410000 1.0000000; ****; O 0; S 9 1.00; 1.172000D+04 7.100000D-04; 1.759000D+03 5.470000D-03; 4.008000D+02 2.783700D-02; 1.137000D+02 1.048000D-01; 3.703000D+01 2.830620D-01; 1.327000D+01 4.487190D-01; 5.025000D+00 2.709520D-01; 1.013000D+00 1.545800D-02; 3.023000D-01 -2.585000D-03; S 9 1.00; 1.172000D+04 -1.600000D-04; 1.759000D+03 -1.263000D-03; 4.008000D+02 -6.267000D-03; 1.137000D+02 -2.571600D-02; 3.703000D+01 -7.092400D-02; 1.327000D+01 -1.654110D-01; 5.025000D+00 -1.169550D-01; 1.013000D+00 5.573680D-01; 3.023000D-01 5.727590D-01; S 1 1.00; 3.023000D-01 1.000000D+00; S 1 1.00; 0.0189600 1.0000000; P 4 1.00; 1.770000D+01 4.301800D-02; 3.854000D+00 2.289130D-01; 1.046000D+00 5.087280D-01; 2.753000D-01 4.605310D-01; P 1 1.00; 2.753000D-01 1.000000D+00; P 1 1.00; 0.0185600 1.0000000; D 1 1.00; 0.1000 1.0000000; D 1 1.00; 0.1000 1.0000000; ****; }; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1998:388,test,testing,388,https://psicode.org,https://github.com/psi4/psi4/issues/1998,1,['test'],['testing']
Testability,"From my perspective, we need to figure out the tuple data type in `index.cc` before I can flatten the `tuple` member of the `IndexIterator`, before I can run final speed tests. I was hoping Jet could show me VTune by then, but if that doesn't happen, I'll just run some computations from Allen's recent paper using Mk-MRCC with both versions and see if the update causes notable slowdowns.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1901#issuecomment-636794573:170,test,tests,170,https://psicode.org,https://github.com/psi4/psi4/pull/1901#issuecomment-636794573,1,['test'],['tests']
Testability,"From the little I know about FreeBSD, I'm guessing that it's not fitting into either the Mac or Linux channels that our build system expects. The build is well-tested by devs with Mac+AppleClang and Linux+Intel(GCC), and CI covers Linux+GCC and Linux+Clang. It's going to be tricky to debug remotely, but if you work it out and care to submit a PR, we'd be grateful (particularly if you updated to master from 1.1). One thing to watch out for (wrt #852) is to make sure CMake can't find a different (higher than 2.0) version of pybind11 _anywhere_ on your system. We try to nail it down in CMake, but sometimes it finds and uses a wrong version installed alongside another dependency. Naturally, if I recognize the cause for an error, I'm glad to help.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/853#issuecomment-343702224:160,test,tested,160,https://psicode.org,https://github.com/psi4/psi4/issues/853#issuecomment-343702224,1,['test'],['tested']
Testability,"Full tests is clean. And I've read over the new commits, and my LGTM! still stands.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1043#issuecomment-397325532:5,test,tests,5,https://psicode.org,https://github.com/psi4/psi4/pull/1043#issuecomment-397325532,1,['test'],['tests']
Testability,Full tests pass except DCFT5/6 which attempts to compare the energy to 10 decimal places. On that note it looks like the SCF/CCSD energy difference is about 5.e-10 or so. Not too surprising since the one-electron integrals are slightly different. Might try to rig up a test where we check the norm between the current and previous versions matrix elements for large basis sets and heavy atoms. ```; # 6 core update; nbf ntrial ao_overlap ao_kinetic ao_potential so_overlap so_kinetic so_potential; 0 28 1275 0.001758 0.000034 0.001248 0.001832 0.000177 0.001438; 1 98 104 0.002072 0.000253 0.004509 0.002503 0.000808 0.005072; 2 168 35 0.002780 0.000696 0.017807 0.003713 0.001938 0.019500; 3 238 17 0.003789 0.001310 0.044333 0.005827 0.003503 0.047694; 4 308 10 0.005321 0.002705 0.093579 0.009500 0.006423 0.096568; 5 378 6 0.007993 0.004080 0.178422 0.012842 0.009268 0.173306; 6 448 4 0.011465 0.006115 0.276808 0.017397 0.012930 0.282091; 7 518 3 0.015315 0.007962 0.426757 0.023739 0.018704 0.436435; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/592#issuecomment-277145466:5,test,tests,5,https://psicode.org,https://github.com/psi4/psi4/pull/592#issuecomment-277145466,2,['test'],"['test', 'tests']"
Testability,Further CI update - it seems the ddd-deriv test fails with this PR... but only on Windows.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2833#issuecomment-1372611138:43,test,test,43,https://psicode.org,https://github.com/psi4/psi4/pull/2833#issuecomment-1372611138,1,['test'],['test']
Testability,"Further to our discussion at Slack and e-mail, I made some tests on molecules with ECP's. Please see the attached G09 and psi4 input and log files. To obtain the psi4 results, the g- and h- shell coefficient of 0.000 in the Xe/Hg ECP has been replaced with 1D-10. A simple trapping of `tsum==0` in `erd_normalize_shell()` in `libmintsgshell.py` doesn't work properly - the term has to be sanity-checked in the loop before on lines 241-252. . For Hg, the `libmintsbasissetparser.py` had to be extended at line 202 to include the H-shell (thanks, Jesse). ![image](https://user-images.githubusercontent.com/5336995/36932575-1957f002-1ecb-11e8-84dc-b365f16b84b3.png). As can be seen from the table above, the absolute energies of the dimers are fine when compared to G09. The `nocp` interaction energy is also OK, however when CP-correction is involved, the results are not good - I imagine the ECP doesn't get properly ghosted. Finally, the psi4 calculations crash as `libmintsbasisset.py` is not able to find the basis sets for some reason - perhaps the basis set file is not passed into the routine properly? This also occurs when the basis set is defined in the job file using `basis { ... }`. [ECP-test.zip](https://github.com/psi4/psi4/files/1777311/ECP-test.zip)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/926:59,test,tests,59,https://psicode.org,https://github.com/psi4/psi4/issues/926,4,"['log', 'test']","['log', 'test', 'tests']"
Testability,"GaTech has known that dftd3-version returns wrong energy from one of the C++ functional calls, leading to a failed test, when build _for_ (not necessarily _on_) 5930 processor family. Fundamental cause is a different number of DFT grid points. @lazaroid at [the forum](http://forum.psicode.org/t/different-dft-grid-behaviour-on-different-machines-very-different-dft-enrgies/460/5) has given a good analysis of the problem. This issue admits that there is a problem.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/677:115,test,test,115,https://psicode.org,https://github.com/psi4/psi4/issues/677,1,['test'],['test']
Testability,"Gah! I didn't know about the pytest test cases (the standard tdscf-n set ran OK, somewhat surprisingly). A standard copy-paste and then missing one part that needed changing! I've corrected it. My version of pytest is too old to run the tests (apparently) but extracting the various bits out of the pytest file and running that as a standard input file worked OK.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2605#issuecomment-1154178074:36,test,test,36,https://psicode.org,https://github.com/psi4/psi4/pull/2605#issuecomment-1154178074,2,['test'],"['test', 'tests']"
Testability,"GauXC support, `snLinK` contains the implementation of the details of the Psi4/GauXC interface, and is responsible for calling GauXC within Psi4. When Psi4 is not built with GauXC support, snLinK will instead throw an exception upon construction, as implemented in a stub class. The `snLinK` class supports both CPU and GPU execution of GauXC, controllable at runtime via the `SNLINK_USE_GPU` keyword. Additionally, the `snLinK` class operates correctly regardless of the value of `psi4_SHGAUSS_ORDERING`, as well as for both Spherical and Cartesian basis sets. ; - [X] Updates the `test_compositejk.py` and `test_comprehensive_jk_screening.py` pytests to test sn-LinK functionalities, given that GauXC is installed.; - [X] Adds a new file, `gauxc_writer.py` to generate HDF5 files as input for GauXC's `standalone_driver` functionality. Reference files for benzene at the cc-pVDZ, cc-pVTZ, and cc-pVQZ basis set have been added, and a `test_gauxc_writer.py` file has been added to test the writer's functionality, given that GauXC is installed. . ## Notes; - Unlike COSX, which has a two-grid scheme currently, sn-LinK uses a single-grid scheme, simply converging the SCF on a single grid and leaving it at that. A multi-grid sn-LinK scheme is a potential idea for the future, but it is likely to be added as a separate PR.; - In terms of interfacing to GauXC, this PR only handles interfacing to the GauXC sn-LinK exact exchange algorithm through `CompositeJK`. GauXC, as I understand, also has capabilities for providing features such as standardized grids and functionals, but that is beyond the scope of this PR. ; - Currently, there is a an issue in the code wherein the code will break for cases where `SNLINK_FORCE_CARTESIAN` is turned on for calculations with symmetry enabled (i.e., non-C1 symmetry). For now, I simply have the code throw an exception for such cases, but it's worth noting. . ## Questions; - [X] N/A. ## Checklist; - [X] Tests added for any new features; - [X] All or relev",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150:5537,test,test,5537,https://psicode.org,https://github.com/psi4/psi4/pull/3150,1,['test'],['test']
Testability,"Generally I'd like the default log level to be more verbose and spam the log file instead of having something crucial missing and the user needs to repeat a calculation. That said, I haven't used the internal python logger object and these high numbers are and multiple categories unexpected and for a compchem program a bit confusing to be honest.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2512#issuecomment-1082310204:31,log,log,31,https://psicode.org,https://github.com/psi4/psi4/pull/2512#issuecomment-1082310204,3,['log'],"['log', 'logger']"
Testability,"Geom looks reasonable, and the calculation performed with the ghost atoms as *real* atoms goes just fine. Just this portion of the counterpoise-corrected intene goes off the rails. I've tested in both 1.6.x and 1.7.x; I don't have 1.8.x installed but if someone else does it's a very light weight calc to try. . Input:; ```set {; freeze_core true; basis def2-tzvppd; guess sad; }; molecule mol {; -1 1; @O -2.9015 2.0339 4.0653; @H -3.02228 2.5785 4.8759; @H -2.16632 1.41862 4.28713; O 0.0 0.0 0.0; C -0.67479 0.41341 -1.01466; O -0.87615 -0.42222 -1.96207; C -1.21823 1.79557 -1.10284; C -0.61745 2.829 -0.07843; H -1.1042 2.21706 -2.12009; H -2.30161 1.7313 -0.88466; H 0.4692 2.99187 -0.17478; H -0.84409 2.57987 0.97189; H -1.13803 3.76616 -0.33793; units angstrom; no_reorient; no_com; symmetry c1; }; energy('wb97m-v'); ```. Output:. ```. -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 (inplace). Git: Rev (inplace). D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish,; M. C. Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio,; A. Alenaizan, A. M. James, S. Lehtola, J. P. Misiewicz, M. Scheurer,; R. A. Shaw, J. B. Schriber, Y. Xie, Z. L. Glick, D. A. Sirianni,; J. S. O'Brien, J. M. Waldrop, A. Kumar, E. G. Hohenstein,; B. P. Pritchard, B. R. Brooks, H. F. Schaefer III, A. Yu. Sokolov,; K. Patkowski, A. E. DePrince III, U. Bozkaya, R. A. King,; F. A. Evangelista, J. M. Turney, T. D. Crawford, C. D. Sherrill,; J. Chem. Phys. 152(18) 184108 (2020). https://doi.org/10.1063/5.0006002. Additional Code Authors; E. T. Seidl, C. L. Janssen, E. F. Valeev, M. L. Leininger,; J. F. Gonthier, R. M. Richard, H. R. McAlexander, M. Saitow, X. Wang,; P. Verma, M. H. Lechner, A. Jiang, S. Behnle, A. G. Heide,; M. F. Herbst, and D. L. Poole. Previous Authors, Complete List of Code Contributors,; and Citations for Specific Modules; https://github.com/psi4/psi4/blob/master/codemeta.json; htt",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3051:186,test,tested,186,https://psicode.org,https://github.com/psi4/psi4/issues/3051,1,['test'],['tested']
Testability,"Geometric tests are here https://github.com/psi4/psi4/blob/master/tests/pytests/test_geometric.py , but they wouldn't have caught the problem you identified. If you feel like adding more, go for it, but I don't think this is a problem we're likely to relapse on. If you wanted to run those, from a compiled psi4 in `<objdir>`, execute the results of `stage/bin/psi4 --psiapi` to set up paths, then `pytest -v ../tests/pytests/test_geometric.py`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2872#issuecomment-1421267186:10,test,tests,10,https://psicode.org,https://github.com/psi4/psi4/pull/2872#issuecomment-1421267186,3,['test'],['tests']
Testability,Getting pretty close to merging this in. Failing tests case should be limited to the following:. ```; 22 - cc14 (Failed); 155 - docs-psimod (Failed); 187 - mints9 (Failed); ```. Docs and mints both require changes to the test case. `cc14` remains the only undiagnosed test failure.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/481#issuecomment-254326737:49,test,tests,49,https://psicode.org,https://github.com/psi4/psi4/pull/481#issuecomment-254326737,3,['test'],"['test', 'tests']"
Testability,"Ghost atoms should only carry basis functions (and in case of DFT xc quadrature grid points) but not ECPs. Psi4 does not remove the ECP. Tested for Psi4 Version 1.4a2.dev839+e273d32 installed via anaconda. Example: HF/def2-SVP for He-Xe dimer at 1 Angstrom separation, Xe as ghost atom. Expected energy: -2.855863 Hartree; Psi4: -2.818142 Hartree. Expected energy is obtained when removing ECP information from basis set file. Input file used for calculation:; ```; import psi4. geo = """"""; 0 1; he 0.0 0.0 0.0; @xe 1.0 0.0 0.0; """""". method = ""hf/def2-svp""; mol = psi4.geometry(geo). psi4.set_options({; 'scf_type': 'direct'; }). e = psi4.energy(method, molecule=mol); ```; Output file is attached.; [he-xe_ghost_hf_def2-svp_sp.log](https://github.com/psi4/psi4/files/4978823/he-xe_ghost_hf_def2-svp_sp.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1968:137,Test,Tested,137,https://psicode.org,https://github.com/psi4/psi4/issues/1968,3,"['Test', 'log']","['Tested', 'log']"
Testability,"Gibbs and scf-guess work on clang but not gcc?!. Gibbs fails due to; ```; Traceback (most recent call last):; File ""/home/travis/build/psi4/psi4/build/stage/bin/psi4"", line 287, in <module>; exec(content); File ""<string>"", line 69, in <module>; File ""/home/travis/build/psi4/psi4/build/stage/lib/psi4/driver/driver.py"", line 1026, in optimize; """"""input, such as DOCC, is correct."""""" % (current_sym, initial_sym)). ValidationError: Point group changed! (cs <-- c2v) You should restart using the last geometry in the output, after carefully making sure all symmetry-dependent input, such as DOCC, is correct.; ```; Fixing by setting c2v symmetry. scf-guess fails due to; ```; TestComparisonError: 	UHF energy, SAD guess (a.u.): computed value (-99.3839116) does not match (-99.5312257) to 6 digits.; ```; Fixing by setting right occupations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-449589237:674,Test,TestComparisonError,674,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-449589237,1,['Test'],['TestComparisonError']
Testability,"Git-hooks is probably a non-starter, so +1 for avoiding that. Another +1 for clang-format, I use it internally quite a bit with Google style and 4 spaces. Im kind of on the fence about this. A few notes:. Pros:; - Completely uniform style. Cons:; - We are constantly avoided errors, the `# pyflakes` and `# noqa` messages are messier than most of our python errors IMO.; - Plenty of times when we want something other than pep8 formatting (e.g. `VARH`).; - Completely uniform style (see previous point).; - If we override a single error in pyflakes, pyflakes will continue to fail for all further commits. It would become very easy just to ignore this test. Dont get me wrong, we should do periodic style cleanups. This is needed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/530#issuecomment-263272403:652,test,test,652,https://psicode.org,https://github.com/psi4/psi4/pull/530#issuecomment-263272403,1,['test'],['test']
Testability,"Give the newly committed fix a try, then if that's not satisfactory, reopen this. `psi4 --test` is what that preloading is actually affecting, so pass along any unexpected results of that. (Though I'm not sure if an error caused by a present but broken add-on should be skipped or failed.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/656#issuecomment-288422107:90,test,test,90,https://psicode.org,https://github.com/psi4/psi4/issues/656#issuecomment-288422107,1,['test'],['test']
Testability,"Given recent experience with #2192 and #2193, it would be good to include a threaded run of quicktests as part of the automatically running test suite. Unfortunately, it's not clear to me if this is _possible_. According to Holger, ""Azure offers only paid parallel jobs by default, but one can request a free upgrade. GHA gives 2-core machines but not sure if one can run things in parallel."" If not possible, we should come up with a protocol for making sure parallel test suite is checked semi-regularly.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2220:140,test,test,140,https://psicode.org,https://github.com/psi4/psi4/issues/2220,2,['test'],['test']
Testability,"Glad it worked out easily, but thanks for letting us know anyway. It's difficult to thoroughly test all combinations of systems, so reports like this are extremely helpful for identifying bugs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/905#issuecomment-361935414:95,test,test,95,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361935414,1,['test'],['test']
Testability,"Glad to hear it’s fixed. Yes, 1.0.54 is a few hundred commits ago. Currently we’re building up to a 1.1 release, but unless you need pcmsolver, ambit, or advanced plugin technology, the current development head should be perfectly useable. There is a later conda binary, but we’re keeping development snapshots under a different label, so that only releases are pulled with “conda update psi4 -c psi4”. You can get the development snapshots via “conda update psi4 -c psi4 -c psi4/label/test”. That will pull packages additionally from the “test” (name may change) label. The 1.0.54 to pre-1.1 changes are sufficiently drastic that you should probably do a fresh conda install of psi4, rather than just a conda update. > On Nov 26, 2016, at 5:45 PM, Holger Kruse <notifications@github.com> wrote:; > ; > Thanks! That fixes it.; > I wasn't aware the conda binary is so far behind the git version.; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/528#issuecomment-263090503>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ACNR6kYmnjd_KUOlMjljX6_8G0XiaKIcks5rCLaRgaJpZM4K8kr4>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/528#issuecomment-263098427:486,test,test,486,https://psicode.org,https://github.com/psi4/psi4/issues/528#issuecomment-263098427,2,['test'],['test']
Testability,"Glad to hear you were able to converge the geometry. I'll leave the ECP logging question to Lori, but I can speak to the orbital reading issue. The issue here is one of the two improvements to the orbital read/guess system that I need for my own research, so the permanent fix is high priority for me. However, the relevant code is intimately tied up with a part of the code that is currently unergoing a large rewrite, so I won't be able to start on the fixes until that's done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1704#issuecomment-524287571:72,log,logging,72,https://psicode.org,https://github.com/psi4/psi4/issues/1704#issuecomment-524287571,1,['log'],['logging']
Testability,"Go for the renaming and default toggling, I think, @JonathonMisiewicz. It's good to get the tests passing and converging under conditions other than early exit from iterations. If you have a non-diagonally dominant B-matrix case around, @bozkaya, it'd be nice to have that in the test suite to make sure we're not favoring one class of systems over others.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1777#issuecomment-571728193:92,test,tests,92,https://psicode.org,https://github.com/psi4/psi4/issues/1777#issuecomment-571728193,2,['test'],"['test', 'tests']"
Testability,Going to let this test out as another check on wavefunction_pass then ill merge it.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/254#issuecomment-184372725:18,test,test,18,https://psicode.org,https://github.com/psi4/psi4/pull/254#issuecomment-184372725,1,['test'],['test']
Testability,"Good idea about the asymmetric test, @loriab . I think mintshelper handles the case where the field breaks symmetry, but it would be nice to have a C1 symmetry test that has a [1,1,1] field applied, to test all components of the dipole derivatives in case they get broken at some point (only z components are tested now, for speed, but I have verified the other components manually). We can think about these in the next phase, where some code (mintshelper?) will provide the matrices of dipole derivatives for @psi-rking to use in the IR intensities.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/668#issuecomment-290934458:31,test,test,31,https://psicode.org,https://github.com/psi4/psi4/pull/668#issuecomment-290934458,4,['test'],"['test', 'tested']"
Testability,"Good idea, Andy. @ashutoshvt, just in case you haven't rebased recently, there were 5 tests in full tests that weren't passing for a while but are fixed now in upstream. So rebase before investigating.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/718#issuecomment-303895469:86,test,tests,86,https://psicode.org,https://github.com/psi4/psi4/pull/718#issuecomment-303895469,2,['test'],['tests']
Testability,"Good news -- Azure now has a ""rerun failed jobs"" button that is both findable and does as expected. That's triggered on this PR. Bad news -- this isn't the PR I should have triggered to test new adcc packages. So have now retriggered Azure on https://github.com/psi4/psi4/pull/1799",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1848#issuecomment-598787318:186,test,test,186,https://psicode.org,https://github.com/psi4/psi4/pull/1848#issuecomment-598787318,1,['test'],['test']
Testability,"Good news: it works fine for me. The patch below (n/c from @mlestep, I don't think) gives the output below (it just needed to be told to compute something).; ```; -; - outfile->Printf( ""\nProperties computed using the %s density matrix\n\n"", title_.c_str());; + if (title_ == """") {; + outfile->Printf(""OEProp: No title given, name of density matrix used for the following properties is %s\n"", Da_so_->name().c_str());; + } else {; + outfile->Printf( ""\nProperties computed using the %s density matrix\n\n"", title_.c_str());; + }; ```; ```; e, wfn = energy('MP2', return_wfn=True); oeprop(wfn, ""MULTIPOLES(1)""); ```; ```; Properties will be evaluated at 0.000000, 0.000000, 0.000000 [a0]; OEProp: No title given, name of density matrix used for the following properties is SCF density. Multipole Moments:. ------------------------------------------------------------------------------------; Multipole Electric (a.u.) Nuclear (a.u.) Total (a.u.); ------------------------------------------------------------------------------------. L = 1. Multiply by 2.5417462300 to convert to Debye; Dipole X : 0.0000000 0.0000000 0.0000000; Dipole Y : 0.0000000 0.0000000 0.0000000; Dipole Z : -0.2704549 1.1770271 0.9065722. --------------------------------------------------------------------------------; ```. Bad news: we [lost a test](https://github.com/psi4/psi4/commit/71bf174e60bc54b6a7424ce13dd28cef264fa850) (one of the two cc properties ones) and it fails. @amjames or TDC group, could you take a look?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1068#issuecomment-402301904:1320,test,test,1320,https://psicode.org,https://github.com/psi4/psi4/pull/1068#issuecomment-402301904,1,['test'],['test']
Testability,"Good to know, I updated my comment... Would be good to have tests for these integrals though. @andysim could the pseudospectral ints be handled by M-D somehow?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2414#issuecomment-1064376101:60,test,tests,60,https://psicode.org,https://github.com/psi4/psi4/issues/2414#issuecomment-1064376101,1,['test'],['tests']
Testability,"Good, I agree that is the best way to fix the documentation. I just put this in the example as a test:. ```; molecule {; 0 1; O 1.01646 0.05097 0.09714; H 1.98435 0.06069 0.05173; H 0.73761 0.24513 -0.81034; }. set basis cc-pVTZ. E, wfn = properties('ccsd', properties=['dipole'], return_wfn=True). nmopi = wfn.nmopi(); Da_so = wfn.Da(); SCa = core.Matrix(""Overlap times Ca"", nmopi, nmopi); SCa.gemm(False, False, 1.0, wfn.S(), wfn.Ca(), 0.0); Da_mo = Matrix.triplet(SCa, Da_so, SCa, True, False, False); molden(wfn, 'ccsd_no.molden', density_a=Da_mo); ```. and the corresponding output from Molden:. ```; COORDINATES; used for orbitals/density. X Y Z. 1 O -0.103043 0.072862 0.000000; 2 H -0.015287 -1.756185 0.000000; 3 H 1.650657 0.599812 0.000000; ; Mulliken Charges; ================; ; O -0.4661; H 0.2332; H 0.2332; ; Sum of Mulliken Charges: 0.0003; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1485#issuecomment-456160965:97,test,test,97,https://psicode.org,https://github.com/psi4/psi4/issues/1485#issuecomment-456160965,1,['test'],['test']
Testability,"Good, thanks!. Assuming [this is the log](https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=i386&ver=1%3A1.2.1-1&stamp=1546604357&raw=0) to look at, a few comments:; - no need for boost at all (`libboost-atomic1.67-dev libboost-atomic1.67.0 libboost-chrono-dev`); - psi 1.2 won't work with py < 3.5 (`Get:19 http://debian.csail.mit.edu/debian unstable/main i386 python2.7 i386 2.7.15-5 [299 kB]`); - production needs at least AM6 (`-DMAX_AM_ERI=4`) and preferably 7 or 8; - source is probably a little out of date as this turned to c++14 around Christmas (`-- Setting (unspecified) option psi4_CXX_STANDARD: 11`); - I think you were the one who wanted to be able to use a default theme rather than the psi custom one. this is available now (`-- Setting (unspecified) option SPHINX_THEME: sphinx_psi_theme`); - threaded blas that's not mkl can go wrong (`CMake Warning at external/common/lapack/CMakeLists.txt:50 (message):`) and unfortunately the test suite in single thread mode can't catch it. would be good to test it, perhaps with this script https://github.com/psi4/psi4/blob/master/psi4/share/psi4/scripts/test_threading.py#L270.; - it's finding an AM=5 libint (`-- [36mFound Libint 5[m: /usr/lib/libint.a (found version 1.2.0)`). this'll make it through the tests but not good for production.; - aha, you're targeting v1.2.1, not v1.3! nevermind what I said about c++14; - `ImportError: Install python module networkx`; - Unfortunately solutions to test failures aren't leaping to mind. Some are very strange for a consistent codebase (`TypeError: set_memory_bytes(): incompatible function arguments. The following argument types are supported:`)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1302#issuecomment-451508824:37,log,log,37,https://psicode.org,https://github.com/psi4/psi4/issues/1302#issuecomment-451508824,5,"['log', 'test']","['log', 'test', 'tests']"
Testability,"Granted. I was vaguely remembering that I also use 'valid_atom_map' to test whether RFO eigenvectors are symmetric - and they can be large and asymmetric. But for valid_atom_map it looks like I pass a tolerance in from optking, so I don't forsee any problems. Give it a shot.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/195#issuecomment-189456212:71,test,test,71,https://psicode.org,https://github.com/psi4/psi4/issues/195#issuecomment-189456212,1,['test'],['test']
Testability,"Great idea! I still have some concerns about potential ways to abuse `compute_gradient`, but my test cases won't even run for reasons far beyond the scope of this PR. Issue list is about to grow, but I'll be happy with the PR once the tests are updated. Thanks for this, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2200#issuecomment-869854948:96,test,test,96,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869854948,2,['test'],"['test', 'tests']"
Testability,"Great thanks! I'll add the tests right away. . And for `energy()` vs `tdscf()`, I don't feel too strongly either way. I like the simplicity of `energy()`, particularly since tdscf is only returning energies for now. `tdscf()` may be the way to go eventually since it is more flexible. One option is to have both work, easy to do since `energy()` is just calling a `tdscf()` function in `run_scf`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1885#issuecomment-626759803:27,test,tests,27,https://psicode.org,https://github.com/psi4/psi4/pull/1885#issuecomment-626759803,1,['test'],['tests']
Testability,"Great thanks, can you add a small test for that in one of the current gradient tests? Easy functionality to accidentally break in the future.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1320#issuecomment-441693522:34,test,test,34,https://psicode.org,https://github.com/psi4/psi4/pull/1320#issuecomment-441693522,2,['test'],"['test', 'tests']"
Testability,"Great to have test for this. . Shared pointers like [epot](https://github.com/psi4/psi4/pull/1900/files#diff-91bf9e90eb569eec33cd0e5edae2e2b4L1070) in this case are probably a bad idea in OpenMP.; Unfortunately I cannot test threading things on my mac. @timostrunk how important is threading here, performance wise? Is re-introducing openmp quickly crucial?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1900#issuecomment-633044819:14,test,test,14,https://psicode.org,https://github.com/psi4/psi4/pull/1900#issuecomment-633044819,2,['test'],['test']
Testability,Great! Can you also update `output.ref` in `tests/dft1`?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/453#issuecomment-236929158:44,test,tests,44,https://psicode.org,https://github.com/psi4/psi4/pull/453#issuecomment-236929158,1,['test'],['tests']
Testability,"Great! Once that's in and in the conda stack, let's add a test case before closing this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2971#issuecomment-1581441113:58,test,test,58,https://psicode.org,https://github.com/psi4/psi4/issues/2971#issuecomment-1581441113,1,['test'],['test']
Testability,"Great, LGTM. Ill merge it in after tests pass.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/480#issuecomment-253992394:35,test,tests,35,https://psicode.org,https://github.com/psi4/psi4/pull/480#issuecomment-253992394,1,['test'],['tests']
Testability,"Great, PR accepted, tested, synched btwn pub/priv, and now the binary builder can get to work. closed by 6c5512288ac3d16f2e3dee817b30cec4b9cbf9a5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/189#issuecomment-157126331:20,test,tested,20,https://psicode.org,https://github.com/psi4/psi4/issues/189#issuecomment-157126331,1,['test'],['tested']
Testability,"Great, glad it's working. I'll get your OpenBLAS patch added in, and it'll make its way back upstream to autocmake one day. Your `ldd` looks good. Only thing strikes me as odd is `libpython.so`. We stopped actually linking to this and now only require the interpreter, not the library. But maybe you're compiling 1.1a1 and the change happened afterward. In any case, when you update someday, don't be alarmed if that goes away. On the `#!/cluster/apps/python/2.7.12/x86_64/bin/python`, we go back and forth on whether to embed the specific compile-time version or a more generic `/usr/bin/env python2` or `usr/bin/env python3`. Advantages of the former: (a) user can be oblivious to what or if python in path at all, (b) conda does it this way. Advantages of the latter: (a) it's what Linux users expect to be happening, (b) avoids trouble of psi4 still using compile environment if you have separate compile and run-time environments. We've stuck with the former since it's friendlier to the inexperienced. Go right ahead and edit that line to a `/usr/bin/env` if it's more suited to your cluster, but I do recommend doing `python2` since the python2/3 headers are used during the build. By the way, on testing, there's `share/psi4/samples/*/test.in` files that'll print `SUCCESS`/`FAILED` to the screen and are handy for testing (or run `ctest -L quick -j4`)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-275136191:1204,test,testing,1204,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-275136191,3,['test'],"['test', 'testing']"
Testability,"Great, so that test case should work now?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/921#issuecomment-369674861:15,test,test,15,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-369674861,1,['test'],['test']
Testability,"Great, thanks for this. I just pushed a change that will fix this test case. @jgonthier We both attempted to fix sapt4 in two different ways, the merge accepted both fixes which consequently broke the test case again. I reverted to your way of doing this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260#issuecomment-184846589:66,test,test,66,https://psicode.org,https://github.com/psi4/psi4/issues/260#issuecomment-184846589,2,['test'],['test']
Testability,"Great, thanks very much for your testing!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-401160701:33,test,testing,33,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-401160701,1,['test'],['testing']
Testability,"Great, this can come in as soon as the tests pass. (And if clang format breaks anything, we should be concerned.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1956#issuecomment-659615041:39,test,tests,39,https://psicode.org,https://github.com/psi4/psi4/pull/1956#issuecomment-659615041,1,['test'],['tests']
Testability,"Great, will merge on test pass.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2419#issuecomment-1031840751:21,test,test,21,https://psicode.org,https://github.com/psi4/psi4/pull/2419#issuecomment-1031840751,1,['test'],['test']
Testability,"Greetings friends,; As per the developer wish list ( #402) it was decided that boost should be removed from Psi4 as there is little point in keeping it around when all the needed features are in C++11. When removing boost we gain:; - Fewer dependencies; - More canonical operations through C++ standards; - Simpler and more expressive python bindings; - Fewer python lib issues (in theory); - You will no longer get six pages of error messages when boost templates fail in some way; - Build simplification and faster compiler time; - Fewer compiler warning (lots from boost); - Less CI hassle; - There will be a party with cake and burning of a boost effigy (streamed and tweeted); ## . My primary goal is to tackle boost python and convert all existing code to PyBind11. Through this I will tackle the following boost libraries: python, tuple, lexical, shared_ptr, and math. I have a reasonable plan to accomplish this and initial tests show that I should be able to pull it off.; ## . However, there are other libraries that I could use help converting either in the form ideas or some of the grunt work. These are:. Boost filesystem:; - [x] `bin/fisapt/fisapt.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/create_new_plugin.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/create_new_plugin.cc:#include <boost/filesystem/operations.hpp>`; - [x] `bin/psi4/export_plugins.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/psi_start.cc:#include <boost/filesystem.hpp>`; - [x] `bin/psi4/python.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libcubeprop/csg.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libcubeprop/cubeprop.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libefp_solver/efp_solver.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libmints/basisset.cc:#include <boost/filesystem.hpp>`; - [x] `lib/libplugin/load_plugin.cc:#include <boost/filesystem.hpp>`. For most of these we would likely let Python handle the filesystem paths and just pass them into C-side as a `std::",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/450:932,test,tests,932,https://psicode.org,https://github.com/psi4/psi4/issues/450,1,['test'],['tests']
Testability,"Greetings to all. I've build the latest v1.7 release successfully but met some problem when running the test suites.; Test 243 failed with the following error:. ```bash; 243: psi4.driver.p4util.exceptions.TestComparisonError: root; 243: Arrays differ.	_compare_recursive: computed value does not match to atol=1e-06 (o-e: RMS 5.0e-01, MAX 1.6e+00, RMAX 2.0e+00).; 243: Expected:; 243: [[ 0.0291933 -0.3287121 0.7914111 -0.5145527]; 243: [ 0.1791863 -0.7419178 0.1002281 0.6382825]; 243: [ 0.5820757 -0.3705022 -0.5095786 -0.5140483]; 243: [ 0.7926083 0.4519231 0.3224164 0.2521612]]; 243: Observed:; 243: [[-0.029193323165 0.328712055763 -0.791411145833 0.514552749997]; 243: [ 0.179186290535 -0.741917790628 0.100228136947 0.638282528194]; 243: [ 0.582075699497 -0.370502185067 -0.509578634502 -0.514048272222]; 243: [ 0.792608291164 0.451923120902 0.322416398582 0.252161169688]]; 243: Difference (passed elements are zeroed):; 243: [[-0.058386623165 0.657424155763 -1.582822245833 1.029105449997]; 243: [ 0. 0. 0. 0. ]; 243: [ 0. 0. 0. 0. ]; 243: [ 0. 0. 0. 0. ]]; ```. It seems the first row is completely negated?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2828:104,test,test,104,https://psicode.org,https://github.com/psi4/psi4/issues/2828,3,"['Test', 'test']","['Test', 'TestComparisonError', 'test']"
Testability,H 4.146010000 0.670138000 -0.091664000; C 2.086723000 2.112200000 0.786974000; H 2.554904000 2.486532000 1.695110000; H 1.033654000 2.388008000 0.788088000. ## H 2.582213000 2.494888000 -0.107984000. -1 1; N 2.550604000 3.185553000 5.509348000; S 3.865000000 2.665127000 4.746515000; O 4.891829000 2.292305000 5.715170000; O 3.642766000 1.773130000 3.581966000; S 1.025248000 3.068609000 4.995638000; O 0.246352000 4.189349000 5.513482000; O 0.836696000 2.658767000 3.587628000; C 0.411145000 1.571382000 5.965005000; F 0.501921000 1.762057000 7.282003000; F -0.875249000 1.329423000 5.650112000; F 1.131303000 0.476913000 5.635681000; C 4.516291000 4.244100000 3.945648000; F 4.803355000 5.175437000 4.855959000; F 5.632032000 3.964007000 3.245064000; F 3.602028000 4.743185000 3.087596000; units angstrom; no_reorient; symmetry c1; }. set globals {; basis cc-pVDZ; scf_type DF; freeze_core True; guess sad ; basis_guess 3-21G; }. energy('sapt2+3-ct'). # This isn't the actual desired job but bowdlerised for testing purposes with resources used:. ```; Resource Usage on 2014-04-15 19:15:49.729365:; JobId: 3541235.r-man2 ; Project: z00 ; Exit Status: 1 (Linux Signal 1); Service Units: 234.73; NCPUs Requested: 4 NCPUs Used: 4; CPU Time Used: 166:41:09; Memory Requested: 10gb Memory Used: 6gb; Vmem Used: 6gb; Walltime requested: 75:00:00 Walltime Used: 58:40:56; jobfs request: 20480mb jobfs used: 14975mb; ```. # . # . ```; Resource Usage on 2014-04-08 04:57:17.482814:; JobId: 3502869.r-man2 ; Project: z00 ; Exit Status: 1 (Linux Signal 1); Service Units: 363.16; NCPUs Requested: 8 NCPUs Used: 8; CPU Time Used: 202:02:19; Memory Requested: 10gb Memory Used: 6gb; Vmem Used: 6gb; Walltime requested: 60:00:00 Walltime Used: 45:23:42; jobfs request: 20480mb jobfs used: 14975mb; ```. # . # . ```; Resource Usage on 2014-02-12 22:00:42.199941:; JobId: 2430324.r-man2 ; Project: z00 ; Exit Status: 0 (Linux Signal 0); Service Units: 511.06; NCPUs Requested: 16 NCPUs Used: 16; CPU Time Used: 224:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/57#issuecomment-42150482:1757,test,testing,1757,https://psicode.org,https://github.com/psi4/psi4/issues/57#issuecomment-42150482,1,['test'],['testing']
Testability,"HI @loriab,. I'm still having this issue with psi 1.2 (the released, not the dev one). It's quite erratic - sometimes it works, sometimes it doesn't.; I was trying to do some reproducible tests, but I couldn't in the end. I suspect the size of the path to the file is somehow relevant, but I really couldn't prove it with those tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948#issuecomment-442801726:188,test,tests,188,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-442801726,2,['test'],['tests']
Testability,"Had to swap the order of `[[nodiscard]]` and `PSI_API`, GCC is lenient about this but Clang is not.; GHA Eco (Linux and MacOS) CI tests are still broken for some reason unrelated to this PR.; Otherwise this should now be ready for merge, when convenient.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3104#issuecomment-1854509312:130,test,tests,130,https://psicode.org,https://github.com/psi4/psi4/pull/3104#issuecomment-1854509312,1,['test'],['tests']
Testability,Has this been tested with `make psi4so` yet? I'm not sure it would compile. There were a few changes in my commit that were needed to remove some ambiguity of some types. Or is this just laying the groundwork a bit?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/268#issuecomment-186917821:14,test,tested,14,https://psicode.org,https://github.com/psi4/psi4/pull/268#issuecomment-186917821,1,['test'],['tested']
Testability,"Have been going through the psi4 build in preparation for our new supercomputer and found a ""glitch"" in that all the psi4numpy tests failed with:; ImportError: No module named numpy; which puzzled me momentarily.; Chased it down to:; tests/runtest.py: pyexitcode = backtick([""python"", infile, "" > "", outfile]); Our python3 doesn't equivalence to python, and alias (which I usually use to get round this) didn't carry through though it may have if I put it in my dot files. Anyway the Q&D of python-> python3 did the trick but our system guys have pointed out:; [https://developers.redhat.com/blog/2019/05/07/what-no-python-in-red-hat-enterprise-linux-8/](https://developers.redhat.com/blog/2019/05/07/what-no-python-in-red-hat-enterprise-linux-8/); Something to keep in mind?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1708:127,test,tests,127,https://psicode.org,https://github.com/psi4/psi4/issues/1708,2,['test'],['tests']
Testability,"Have we changed what PSIDATADIR should point to?. On Mon, Mar 14, 2016 at 1:00 AM, Rollin King rking@bethel.edu wrote:. > An error has occurred. Traceback:; > ; > <class 'Boost.Python.ArgumentError'>: Python argument types in; > ; > ```; > psi4.scf(NoneType, NoneType); > ```; > ; > did not match C++ signature:; > ; > ```; > scf(boost::shared_ptr<psi::Wavefunction>, _object*, _object*): File; > ```; > ; > ""<string>"", line 47, in <module>; > ; > This is, for example, from the opt1 test case, but all jobs fail. I; > already tried removing my objdir completely and recompiling.; > ; > On Sun, Mar 13, 2016 at 8:58 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > The current head (0.4.156 / 7783818; > > https://github.com/psi4/psi4/commit/77838182dbdf260e7f39e4e554b64ee3c05a0da7; > > / 0.5.92) works fine for me on the test case above and on all the usual; > > test cases. What is the nature of your broken python?; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4/issues/310#issuecomment-196104469.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/310#issuecomment-196158996:484,test,test,484,https://psicode.org,https://github.com/psi4/psi4/issues/310#issuecomment-196158996,3,['test'],['test']
Testability,"Have you pulled in master in the last day or so? @dgasmith committed some fixes for the full test suite, which corrected about 5 or 6 failures. As far as I know, the full suite should pass with that change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/718#issuecomment-303895491:93,test,test,93,https://psicode.org,https://github.com/psi4/psi4/pull/718#issuecomment-303895491,1,['test'],['test']
Testability,"Have you tested this against Python 2, too? I'm getting the following error at execution time on my Mac with Python 2.7:. ```; Traceback (most recent call last):; File ""<string>"", line 29, in <module>; File ""/Users/jturney/Code/Chemistry/psi4/source/lib/python/driver.py"", line 618, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/Users/jturney/Code/Chemistry/psi4/source/lib/python/proc.py"", line 2123, in run_adc; scf_helper(name, **kwargs); File ""/Users/jturney/Code/Chemistry/psi4/source/lib/python/proc.py"", line 1457, in scf_helper; e_scf = psi4.scf(precallback, postcallback); TypeError: No registered converter was able to produce a C++ rvalue of type std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > from this Python object of type unicode; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/160#issuecomment-130013400:9,test,tested,9,https://psicode.org,https://github.com/psi4/psi4/pull/160#issuecomment-130013400,1,['test'],['tested']
Testability,"Have you tried installing into an environment (i.e., `conda create -n p4env python=3.8 psi4 -c psi4`)? Especially with heavy main environments like an Anaconda installation, there may be small pinning problems like mkl=2019.4 vs 2020.2 (b/c psi4 releases don't get rebuilt) that manifest as UnsatisfiableError. For most anyone, a recent psi4 would do. (Testing is the same as for releases.) `conda install psi4 -c psi4/label/dev`. The upper limit on python version is because psi4 must be built for each version. E.g., one could compile psi against a py3.9 alpha, but until one does (and checks that all the deps do, too), there's an upper limit to what can be installed. (That `2.7.*` is because the constraint solver can find _some_ psi4 for py27 in that channel; it won't be the one you want.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1979#issuecomment-671572540:353,Test,Testing,353,https://psicode.org,https://github.com/psi4/psi4/issues/1979#issuecomment-671572540,1,['Test'],['Testing']
Testability,"Haven't checked, but that's a redundant input, isn't it? `basis cc-pvdz` + `relativistic x2c` triggers the primary basis to decontract. That said, the answer in the docs for the x2c example is known wrong. Were you going to address that, @WDerricotte?. Let me know if I'm mistaken about any of this, as I don't run relativistic regularly. And if there's something that _should_ work, please make a test case of it so it will continue to work.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/662#issuecomment-288812442:398,test,test,398,https://psicode.org,https://github.com/psi4/psi4/issues/662#issuecomment-288812442,1,['test'],['test']
Testability,"Heads-up, @bozkaya, there are some changes in DFOCC that should make your code play nicely with external potentials and the like. The full test suite passes right now, but I welcome any input from you.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/844#issuecomment-343210050:139,test,test,139,https://psicode.org,https://github.com/psi4/psi4/pull/844#issuecomment-343210050,1,['test'],['test']
Testability,"Heal Test Suite, Orbital Convergence: OCC's Open-Heart Surgery VI",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1846:5,Test,Test,5,https://psicode.org,https://github.com/psi4/psi4/pull/1846,1,['Test'],['Test']
Testability,"Hello @raimis @loriab , I built psi4-v1.3.2 with visual studio 2019，I have changed the compilation option -openmp to -openmp:experimental(Although it does not fully support the syntax of openmp4.0), and fixed some include errors in the src。I compiled all the dependency libraries successfully，but at the end of the link an error occurred. I found that `FC_SYMBOL ""The type of Fortran name mangling"" 2`，I changed the value to 1 and get the same error. It looks like a problem with the calling interface of fortran, but i have no idea to solve it. Can you give me some ideas to solve this problem, thanks. ```; Error log:; [1262/1263] Linking CXX static library src\psi4\scfgrad\scfgrad.lib; [1263/1263] Linking CXX shared library src\core.cp37-win_amd64.pyd; FAILED: src/core.cp37-win_amd64.pyd src/core.lib ; cmd.exe /C ""cd . && ""C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" -E vs_link_dll --intdir=src\CMakeFiles\core.dir --rc=""D:\Windows Kits\10\bin\10.0.17763.0\x64\rc.exe"" --mt=""D:\Windows Kits\10\bin\10.0.17763.0\x64\mt.exe"" --manifests -- C:\PROGRA~2\MICROS~3\2019\COMMUN~1\VC\Tools\MSVC\1421~1.277\bin\Hostx64\x64\link.exe /nologo src\CMakeFiles\core.dir\export_benchmarks.cc.obj src\CMakeFiles\core.dir\export_blas_lapack.cc.obj src\CMakeFiles\core.dir\export_cubeprop.cc.obj src\CMakeFiles\core.dir\export_diis.cc.obj src\CMakeFiles\core.dir\export_fock.cc.obj src\CMakeFiles\core.dir\export_functional.cc.obj src\CMakeFiles\core.dir\export_mints.cc.obj src\CMakeFiles\core.dir\export_misc.cc.obj src\CMakeFiles\core.dir\export_oeprop.cc.obj src\CMakeFiles\core.dir\export_pcm.cc.obj src\CMakeFiles\core.dir\export_plugins.cc.obj src\CMakeFiles\core.dir\export_psio.cc.obj src\CMakeFiles\core.dir\export_trans.cc.obj src\CMakeFiles\core.dir\export_wavefunction.cc.obj src\CMakeFiles\core.dir\export_options.cc.obj src\CMakeFiles\core.dir\create_new_plugin.cc.obj src\CMakeFiles\core.dir\read_options.cc.obj s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-504616648:615,log,log,615,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-504616648,1,['log'],['log']
Testability,"Hello David. Single determinant PSI4 output works pretty well and have been tested.; There is nothing special in the code for PSI4 converter https://github.com/Konjkov/molden2qmc/blob/master/molden2qmc.py#L962. CASINO multi-determinant extension composes from some single determinant (i.e. PSI4 CASSCF(3,4) MOLDEN output) and electron promotion data.; 1-st determinant:; ground state; 2-nd determinant:; up electron promote from 2 orbital to 4; down electron promote from 2 orbital to 4; 3-rd determinant:; up electron promote from 2 orbital to 5; down electron promote from 2 orbital to 5; The first determinant is taken into account with the weighting factor = 0.972153; 2-nd with = 0.165709; 3-rd with = 0.165709; as described in PSI4 output:. MCSCF Root 0 energy = -24.563671749133171. Active Space Natural occupation numbers:; ; A 1.890162 A 1.000000 A 0.054919; A 0.054919; ; The 20 most important determinants:; ; * 1 0.972153 ( 0, 0) 2AX 3AA.; * 2 0.165709 ( 4, 3) 3AA 5AX.; * 3 0.165709 ( 2, 2) 3AA 4AX. symmetry is turned out.; For this multi-determinant configuration CASINO outputs (roughly). E = -24.431(1) ; var = 5.3(1) ; Total CASINO CPU time ::: 181.2400 seconds. if I take 2-nd and 3-rd determinants with weighting factor = -0.165709; CASINO outputs (roughly). E = -24.565(1) ; var = 5.0(1) ; Total CASINO CPU time ::: 256.1500 seconds. which very well coincides with the PSI4 output energy. Best, Vladimir.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/796#issuecomment-331682241:76,test,tested,76,https://psicode.org,https://github.com/psi4/psi4/issues/796#issuecomment-331682241,1,['test'],['tested']
Testability,"Hello Psi4. I have been doing some `oeprop` calculations and noticed that the `oeprop` module is case-sensitive, meaning some properties are not computed if requested from `oeprop` in lower case. Perhaps it is a common knowledge, but since this was not mentioned in the `oeprop` documentation - I bring it here. However, my issue is related to `MBIS_VOLUME_RATIOS`. When given in lower case to `oeprop` - Psi4 performs free-atom calculations for each atom type in the molecule (confirmed by `.log` file contents too), but does not perform (or at least does not print) the MBIS volume ratios. Thus, it seems like it does some premilinary MBIS calculations to get free-atom volumes, which is a bit surprising since I would expect it to ignore the `mbis_volume_ratios` option whatsoever (since it's lower-case). When given in upper case - Psi4 runs and prints as expected. The issue is really when the option is given in lower case. Observed with both Psi4 v.1.8 and 1.8.2 installed via `conda-forge`. Code to reproduce:. ```python; molecule lig {; 0 1; O 0.0 0.5 0.0; H 0.5 0.0 0.0; H -0.5 0.0 0.0. no_reorient; symmetry c1; }. set basis def2-TZVPPD; set print 2. grad, wfn = gradient('wb97m-d3bj', return_wfn=True); oeprop(wfn, 'dipole', 'quadrupole', 'mbis_volume_ratios'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3085:493,log,log,493,https://psicode.org,https://github.com/psi4/psi4/issues/3085,1,['log'],['log']
Testability,"Hello to my dear friends at PSI4. Nick Stair (@nstair) and I were just testing a brand new GPU implementation of ECPs, and ended up needing three codes to do the test. In many cases, all three codes match to the machine epsilon. However, for L+1 = F-type ECPs I'm afraid PySCF and Tachyon match and PSI4 out of the box does not. We see silent differences of O(1.0) au. So while I am not 100% certain, I have a strong suspicion that the F-type ECPs and higher are broke in PSI4. Maybe it is as simple as cranking the compiled L up one in the ECP library? I'm just worried about users silently running broke deep cores. Beer for you all if it is on our end, but thought it was worth raising. . Tech note: Note that the tests below are of the spectra of the V_pq matrices in the AO basis because Nick is too lazy/clever to reorder the PySCF basis functions. We also have tests lower in L of the PSI4 <-> Tachyon matrix elements (same basis ordering, of course!!) that match to mach eps. . ![image](https://user-images.githubusercontent.com/43890147/165858988-c31c42fa-9c58-4068-993a-5648bec9baaf.png)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2564:71,test,testing,71,https://psicode.org,https://github.com/psi4/psi4/issues/2564,4,['test'],"['test', 'testing', 'tests']"
Testability,"Hello! Thank you all for this amazing piece of code. . I would just like to know if it is possible to obtain the analytical gradient decomposed. In particular, I would like to know if the call:. `wfn = procedures['gradient'][lowername](lowername, molecule=molecule, **kwargs)`. can be modified to get me the gradient per KS-MO, exchange-correlation, and nuclear repulsion in a KS-DFT calculation (ideally from the Python API). I think this could be useful for many purposes, e.g. testing analytical gradients for custom Wee terms of the Hamiltonian, for instance; and it just requires exposing it. . Thanks in advance!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2130:480,test,testing,480,https://psicode.org,https://github.com/psi4/psi4/issues/2130,1,['test'],['testing']
Testability,"Hello, . I install psi4 from github in Ubuntu 16.04 with most recent version of intel MKL library, then I test using ctest.; I have one test ""dft-custom-gga"" failed. And I wonder how I can do to pass. I upload the log file below:. ```; 373/405 Testing: dft-custom-gga; 373/405 Test: dft-custom-gga; Command: ""/usr/bin/python2.7"" ""/root/psi4/tests/runtest.py"" ""/root/psi4/tests/dft-custom-gga/input.dat"" ""/root/psi4/build/testresults.log"" ""false"" ""/root/psi4"" ""false"" ""/root/psi4/build/tests/dft-custom-gga/output.dat"" ""/root/psi4/build/stage/share/psi4/bin/psi4"" ""/root/psi4/build/stage/share/psi4/share/psi4"" ""/root/psi4/build/stage/share/psi4/lib/""; Directory: /root/psi4/build/tests/dft-custom-gga; ""dft-custom-gga"" start time: Jun 09 20:39 CDT; Output:; ----------------------------------------------------------; Ne: PBE...........................................................PASSED; Ne: BLYP..........................................................PASSED; Traceback (most recent call last):; File ""/root/psi4/build/stage/share/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 2009, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/root/psi4/build/stage/share/psi4/lib//psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(). RuntimeError:; Fatal Error: Iterations did not converge.; Error occurred in file: /root/psi4/psi4/src/psi4/libpsi4util/process.cc on line: 112; The most recent 5 function calls were:; psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); <end of outp",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038:106,test,test,106,https://psicode.org,https://github.com/psi4/psi4/issues/1038,11,"['Test', 'log', 'test']","['Test', 'Testing', 'log', 'test', 'testresults', 'tests']"
Testability,"Hello, I am just trying to test my new installation of Psi4 and i see that It cannot find my `conda` installation for some reason. I am using Ubuntu 19.04 and installed Psi4 using `apt-get`. the python installation i have should be in my `conda` install, and should be in my system path, but psi4 is not picking up on it. . Do i need to install psi4 with `conda`, or can i keep my current installation as it is? I'd rather not install psi4 using `conda-forge` as it is really slow, while the PPA is pretty fast. Advice?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1705:27,test,test,27,https://psicode.org,https://github.com/psi4/psi4/issues/1705,1,['test'],['test']
Testability,"Hello, I have been trying to geometry optimize >100 dimer pairs of organic molecules. I have a 60% success rate. I am struggling with the 40% that fail. I have tried using second order convergence and level shifting. Below is an example of a citric acid dimer that fails to converge in 100 scf iterations. The systems all seem to follow the same trend. The first couple of iterations converge the wavefunction, but eventually the scf fails to converge. The starting dimer configuration is generated using a steepest descent MM energy minimization. I can provide the entire log file, or other files as well. On other runs I have tried using LEVEL_SHIFT, but it did not help. ```; molecule dimer {; C 999.407602 1002.751600 1001.828601; C 1000.887601 1002.788600 1001.459601; O 1001.420601 1002.207601 1000.537601; O 1001.632601 1003.490600 1002.306601; C 998.553602 1001.680601 1001.080601; C 997.058603 1001.817601 1001.472601; C 996.802603 1001.523601 1002.938600; O 996.673603 1002.368601 1003.793600; O 996.522603 1000.257601 1003.219600; C 999.058602 1000.222601 1001.385601; O 999.978601 999.942601 1002.133601; O 998.491602 999.266602 1000.641601; O 998.619602 1001.964601 999.673602; H 999.003602 1003.752600 1001.641601; H 999.352602 1002.590600 1002.911600; H 1002.505600 1003.321600 1001.914601; H 996.453603 1001.125601 1000.874601; H 996.697603 1002.829600 1001.259601; H 996.300603 1000.363601 1004.159600; H 999.068602 998.498602 1000.848601; H 999.237602 1001.315601 999.248602; --; C 1000.474601 997.570602 997.565602; C 999.917601 998.148602 996.273603; O 1000.520601 998.883602 995.519603; O 998.741602 997.650602 995.912603; C 1001.785601 998.271602 998.044602; C 1002.427600 997.524602 999.252602; C 1001.663601 997.719602 1000.554601; O 1000.490601 997.439602 1000.697601; O 1002.249601 998.561602 1001.401601; C 1001.507601 999.774602 998.424602; O 1000.400601 1000.275601 998.494602; O 1002.573600 1000.457601 998.849602; O 1002.730600 998.191602 996.966603; H 1000.645601 996.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338:573,log,log,573,https://psicode.org,https://github.com/psi4/psi4/issues/2338,1,['log'],['log']
Testability,"Hello, I've downloaded conda and Psi4 into my Ubuntu, along with Jupyter Notebook, but when I go to run the following code into my jupyter-notebook:. ```; import psi4; psi4.__version__. I receive this error:. ModuleNotFoundError Traceback (most recent call last); /tmp/ipykernel_2200/2591947057.py in <module>; ----> 1 import psi4; 2 psi4.__version__. ModuleNotFoundError: No module named 'psi4'; ```; I have conda installed psi4 and conda -V works properly. When I do Psi4 test I recieve: ""64 passed, 39 skipped, 7746 deselected, 2 xfailed"". The two that have failed are: . psi4conda/lib/python3.10/site-packages/psi4/tests/test_addons_qcschema.py::test_libefp XFAIL (EFP not transm...) [ 32%]; psi4conda/lib/python3.10/site-packages/psi4/tests/test_psi4_qcschema.py::test_psi4_cc XFAIL (no AtomicInput ...) [ 58%]. Any recommendations on what I can do to resolve these issue(s) or what I can check would be very helpful, thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3188:474,test,test,474,https://psicode.org,https://github.com/psi4/psi4/issues/3188,3,['test'],"['test', 'tests']"
Testability,"Hello,. I am a graduate student from Dr. Sokolov's lab at The Ohio State University. Over the last week or so, I have run some calculations with both Psi4 (version 1.3.2) and QChem (5.1.1) to hopefully get some information regarding the origin of this problem. All relevant input/output files are attached, in full, to this post. First, I ran the ADC(1) and ADC(2) tests provided in the test suite of Psi4 in both programs. The ADC(1) excitation energies match between the two programs:. ### **Psi4 1.3.2 energies output**; ```; 	1 A state: 0.3529478 (a.u.), 9.6041997 (eV); 	2 A state: 0.4215815 (a.u.), 11.4718175 (eV); 	3 A state: 0.4538994 (a.u.), 12.3512305 (eV); 	4 A state: 0.5246003 (a.u.), 14.2751021 (eV); 	5 A state: 0.5709848 (a.u.), 15.5372886 (eV); 	6 A state: 0.7050389 (a.u.), 19.1850862 (eV); 	7 A state: 1.0543763 (a.u.), 28.6910395 (eV); 	8 A state: 1.0720010 (a.u.), 29.1706341 (eV); 	9 A state: 1.1388267 (a.u.), 30.9890538 (eV); 	10 A state: 1.1821020 (a.u.), 32.1666340 (eV); 	11 A state: 1.1875445 (a.u.), 32.3147310 (eV); 	12 A state: 1.1982557 (a.u.), 32.6061991 (eV); 	13 A state: 1.1992474 (a.u.), 32.6331833 (eV); 	14 A state: 1.2585194 (a.u.), 34.2460572 (eV); 	15 A state: 1.2767037 (a.u.), 34.7408785 (eV); 	16 A state: 1.2815731 (a.u.), 34.8733809 (eV); 	17 A state: 1.3132971 (a.u.), 35.7366340 (eV); 	18 A state: 1.3296420 (a.u.), 36.1814011 (eV); 	19 A state: 1.3540510 (a.u.), 36.8456048 (eV); 	20 A state: 1.3585131 (a.u.), 36.9670246 (eV); ```. ### **QChem 5.1.1 energies output**; ```; Excitation energy: 9.604199 eV; Excitation energy: 11.471817 eV; Excitation energy: 12.351230 eV; Excitation energy: 14.275101 eV; Excitation energy: 15.537288 eV; Excitation energy: 19.185085 eV; Excitation energy: 28.691037 eV; Excitation energy: 29.170632 eV; Excitation energy: 30.989051 eV; Excitation energy: 32.166632 eV; Excitation energy: 32.314728 eV; Excitation energy: 32.606197 eV; Excitation energy: 32.633181 eV; Excitation energy: 34.246055 eV; Excitation ene",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344:365,test,tests,365,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-510952344,2,['test'],"['test', 'tests']"
Testability,"Hello,. I am working on a university project and want to confirm that Psi4 is running correctly. When I run the test that the binary installation guide specifies I get the following error:. ![image](https://cloud.githubusercontent.com/assets/26287438/24625066/cd1d8af4-187b-11e7-8cf9-ff6d285895e3.png)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/675:112,test,test,112,https://psicode.org,https://github.com/psi4/psi4/issues/675,1,['test'],['test']
Testability,"Hello,. I'm a developer at Schrodinger working on our QM engine, Jaguar. Recently I implemented wB97X-D3 and was using PSI4 to check my results. Interestingly, I found discrepancies in our SCF energies (difference of 0.003 Ha on a methane molecule), but the dispersion corrections matched to 1e-6. . After some investigation, I believe PSI4's wB97X-D3 functional is using the wrong parameters for the functional (the dispersion correction seems fine). . If you look in the output file, you can see . > ==> DFT Potential <==; >; > => Composite Functional: WB97X-D3ZERO <= ; >; > wB97X-d3zero Hyb-GGA Exchange-Correlation Functional; >; > J.-D. Chai and M. Head-Gordon, J. Chem. Phys. 128, 084106 (2008); >; > ....; > => Exchange-Correlation Functionals <=; >; > 1.0000 wB97X range-separated functional; >; > => Exact (HF) Exchange <=; >; > 0.8423 HF,LR [omega = 0.3000]; > 0.1577 HF . The HF exchange and omega printouts indicate that you are using wB97X parameters in the functional. But note that wB97X and wB97X-D3 differ in their functional parameters (for instance in wB97X-D3, omega=0.25. Other parameters differ as well. See Chai et al, dx.doi.org/10.1021/ct300715s, Table 1 for the full list). I did some testing by substituting wB97X parameters into Jaguar's wB97X-D3 call. Indeed, Jaguar then returns matching SCF energies with PSI4's wB97X-D3. I was comparing to PSI4 version: Psi4 1.4a2.dev723, Git: Rev {master} fb499f4. If you guys have fixed this in a newer version of PSI4, then great! If not, perhaps the parameters could be updated to match the paper? Of course, if I'm mistaken please let me know as well. Cheers,; Alan Chien",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2206:1212,test,testing,1212,https://psicode.org,https://github.com/psi4/psi4/issues/2206,1,['test'],['testing']
Testability,"Hello,. It seems that there may be a problem with the normalization of the contraction coefficients in the molden wavefunction format for d functions (and higher). An example computation on an test molecule (NH3) where exactly the same basis sets were given to ORCA and PSI4 can be downloaded here:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. The molden files are almost the same, except for the contraction coefficients of the D functions. Is there an authoritative source that can tell us what the correct normalization of the contraction coefficients in the molden file should be? Having different variants of the same format is a pain in terms of post-processing.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/60:193,test,test,193,https://psicode.org,https://github.com/psi4/psi4/issues/60,1,['test'],['test']
Testability,"Hello,; Has this been resolved? I have just hit that error:; iwl_buf_init: Can't open file 33; with a straight ccsd calculation. I've been looking into coupled cluster variants for one of our users who has a monster job which is giving our programs all sorts of grief. I decided to simplify and go with something easily doable - molpro caffeine test with cc-pvtz basis (input as below) but the default psi4 calculation seems to be grinding slowly due to IO (clocking 2% cpu utilisation of 16 processors) and ""scf_type direct"" gives the aforementioned error.; I'm using a fresh build I pulled(?) yesterday.; Best wishes,; Rika. molecule caffeine {; units bohr; 0 1; C 1.50 -0.505274704 0.000000; C -0.535187033 -2.058190923 0.000000; C 2.65 -4.522014770 0.000000; C 1.346731167 2.284891446 0.000000; C -3.463010598 1.525507419 0.000000; C -1.745695607 5.842896101 0.000000; C -5.228750999 -2.835032850 0.000000; C 6.295922772 -1.343301717 0.000000; N 3.617453017 -2.104182389 0.000000; N 0.151176399 -4.614309103 0.000000; N -3.029497084 -1.135014970 0.000000; N -1.247933362 3.102880179 0.000000; O 3.102683166 3.787581194 0.000000; O -5.585618888 2.429058396 0.000000; H 3.895327083 -6.157733721 0.000000; H -2.816386000 6.395195000 -1.672580; H -2.816386000 6.395195000 1.672580; H 0.068926104 6.808767386 0.000000; H -6.392104000 -2.520913000 -1.673960; H -6.392104000 -2.520913000 1.673960; H -4.537919087 -4.771667968 0.000000; H 7.459103496 -3.040539942 0.000000; H 6.719940000 -0.221440000 1.677441; H 6.719940000 -0.221440000 -1.677441; }. set basis cc-pvtz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/35#issuecomment-41624543:345,test,test,345,https://psicode.org,https://github.com/psi4/psi4/issues/35#issuecomment-41624543,1,['test'],['test']
Testability,"Hello,; One of our users hit a problem last year on our supercomputer with his SAPT (energy('sapt2+3-ct')) jobs. Our sysadmins flagged low cpu utilisation for his jobs for which we decided that 4 cpus would give him optimum efficiency. However, the jobs were large enough as to take > 1000 hours (also frowned upon by our sysadmins) so I was asked to look into whether he could make better parallel use of the processors. We had some teething problems bringing our new supercomputer on line last year so I wanted to rule out issues on our side and I think I have now ruled out issues with IO, memory and threading (that had affected other programs).; Furthermore, during the investigations we noticed that ""top"" showed an almost equal alternation between one cpu and maximum cpus thus averaging above/below 50% use no matter how many cpus were requested. Roger Amos and I had a quick look at the SAPT papers and decided there wasn't anything intrinsic about the method that wouldn't allow it to parallel or would cause this behaviour (note I initially thought it might be a load imbalance between monomer basis and dimer basis calculations but it isn't). Also, subsequently we were asked to look into the performance of energy('fno-df-ccsd(t)') and that doesn't show this serial/parallel alternation.; Do you have any thoughts on this and have suggestions for determining optimum number of processors (does it depend on memory?) for this sort of calculation?; Thanks.; Rika; PS Do you need an input deck for this? Originally, the smallest case he had showing this behaviour took 230 hrs (seemed to be ok for his 60 hr SAPT job) but since then I think I have a 48 hr test case that will also display this behaviour. I'll need to ask the user for permission to pass it on first though.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/57:1666,test,test,1666,https://psicode.org,https://github.com/psi4/psi4/issues/57,1,['test'],['test']
Testability,"Hello,; it works fine for me with a relatively recent psi4 (Git: Rev {master} a3d8d93). It also works with the latest dev. conda package (837e345). Which psi4 version are you using? If it's anything older, try [updating](http://www.psicode.org/psi4manual/master/conda.html#how-to-update-a-psi4-binary).; Peter. Log: [{master} a3d8d93](https://github.com/psi4/psi4/files/1811137/master.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936#issuecomment-373012577:311,Log,Log,311,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373012577,1,['Log'],['Log']
Testability,"Here are a list of files that are compiled, but never called in any test in Psi's library. Generated by the inverse of a coverage report:. ```; src/psi4/libciomr/add_arr.cc; src/psi4/libciomr/add_mat.cc; src/psi4/libciomr/eigout.cc; src/psi4/libciomr/ffile.cc; src/psi4/libciomr/mxmb.cc; src/psi4/libpsio/get_length.cc; src/psi4/libpsio/tocdel.cc; src/psi4/libpsio/zero_disk.cc; src/psi4/libqt/mat_in.cc; src/psi4/libqt/orient_fragment.cc; src/psi4/libqt/rootfind.cc; src/psi4/libqt/rotate_vecs.cc; src/psi4/libqt/slaterdset.cc; src/psi4/libqt/sort.cc; src/psi4/libqt/strncpy.cc; src/psi4/libqt/v_3.cc; src/psi4/libqt/zmat_point.cc; src/psi4/libdpd/file4_print.cc; src/psi4/libdpd/memfree.cc; src/psi4/libmints/mints/orthog.cc; src/psi4/libmints/mints/svd.cc; src/psi4/libthce/thce/laplace.cc; src/psi4/libthce/thce/thcew.cc; src/psi4/libfock/fock/PSJK.cc; src/psi4/lib3index/3index/dealias.cc; src/psi4/lib3index/3index/pstensor.cc; src/psi4/lib3index/3index/qr.cc; src/psi4/lib3index/3index/schwarz.cc; src/psi4/ccdensity/G_norm.cc; src/psi4/ccdensity/add_core_UHF.cc; src/psi4/ccdensity/add_ref.cc; src/psi4/ccdensity/ael.cc; src/psi4/ccdensity/classify.cc; src/psi4/ccdensity/densgrid_RHF.cc; src/psi4/ccdensity/distribute.cc; src/psi4/ccdensity/file_build.cc; src/psi4/ccdensity/get_frozen.cc; src/psi4/ccdensity/idx_error.cc; src/psi4/ccdensity/idx_permute.cc; src/psi4/ccdensity/resort_gamma.cc; src/psi4/ccdensity/resort_tei.cc; src/psi4/ccdensity/x_xi_check.cc; src/psi4/ccenergy/cc2_WabijT2.cc; src/psi4/cceom/check_sum.cc; src/psi4/cceom/hbar_norms.cc; src/psi4/cceom/norm_HC1.cc; src/psi4/cceom/sigmaCC3_RHF.cc; src/psi4/cceom/sort_amps.cc; src/psi4/cchbar/Wabei_RHF_FT2_a.cc; src/psi4/cclambda/overlap_LAMPS.cc; src/psi4/cclambda/BL2_AO.cc; src/psi4/cclambda/Lmag.cc; src/psi4/cclambda/WabeiL1.cc; src/psi4/cclambda/check_sum.cc; src/psi4/cclambda/halftrans.cc; src/psi4/cclambda/spinad_amps.cc; src/psi4/ccresponse/print_X.cc; src/psi4/cctriples/ET_AAA.cc; src/psi4/cctriples/ET_AAB.cc; ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/525#issuecomment-262124158:68,test,test,68,https://psicode.org,https://github.com/psi4/psi4/issues/525#issuecomment-262124158,1,['test'],['test']
Testability,"Here is `psi4 --test`:; (p4env) [henrique@dhcppc3 ~] $ psi4 --test; ================================================================ test session starts =================================================================; platform linux -- Python 3.6.6, pytest-3.8.0, py-1.6.0, pluggy-0.7.1 -- /home/henrique/bin/anaconda3/envs/p4env/bin/python; cachedir: .pytest_cache; rootdir: /home/henrique, inifile:; collected 22 items . bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_gdma PASSED [ 4%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED [ 9%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_chemps2 PASSED [ 13%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_dftd3 SKIPPED [ 18%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED [ 22%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_pcmsolver PASSED [ 27%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED [ 31%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_simint PASSED [ 36%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 40%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED [ 45%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf SKIPPED [ 50%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED [ 54%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_grimme_3c SKIPPED [ 59%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_dkh PASSED [ 63%]; bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_ad",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:16,test,test,16,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,8,['test'],"['test', 'tests']"
Testability,"Here is a script can orthogonalize orbitals between different geometries. However it does not consider frozen orbitals. They can be simply added following the comments inside the script. ```; #!/usr/bin/python; import psi4. # some global variables; nirrep = None; nrdoccpi = None; nruoccpi = None; nactvpi = None; nmopi = None. """"""; This function makes (C1)^T S2 C1 orthogonal; C1: converged CASSCF orbitals at geometry 1; S2: SO overlap matrix at geometry 2; return: orthogonal orbitals; """"""; def ortho_orbs(wfn1, wfn2, semi = True):; title = ""\n ==> Orthogonalize Orbitals Between Different Geometries <==\n""; psi4.core.print_out(title). # make sure there is no frozen orbitals; psi4.core.print_out(""\n Testing frozen orbitals ... ""); global nirrep; nirrep = wfn2.nirrep(); nfdoccpi = psi4.core.Dimension.from_list(psi4.core.get_option(""DETCI"",""FROZEN_DOCC"")); nfuoccpi = psi4.core.Dimension.from_list(psi4.core.get_option(""DETCI"",""FROZEN_UOCC"")); nf = nfdoccpi.n() + nfuoccpi.n(); if nf != 0:; psi4.core.print_out(""False""); raise ValueError(""I am too lazy to consider frozen orbitals.""); else:; psi4.core.print_out(""Pass""). # get C1 and S2; C1 = wfn1.Ca(); S2 = wfn2.S(). # figure out irreps and orbital spaces; global nmopi; global nrdoccpi; global nactvpi; global nruoccpi; nmopi = wfn2.nmopi(); nrdoccpi = psi4.core.Dimension.from_list(psi4.core.get_option(""DETCI"",""RESTRICTED_DOCC"")); nactvpi = psi4.core.Dimension.from_list(psi4.core.get_option(""DETCI"",""ACTIVE"")); nruoccpi = psi4.core.Dimension(nirrep); for i in range(nirrep):; nruoccpi[i] = nmopi[i] - nrdoccpi[i] - nactvpi[i]. # create subspace orbitals: core, active, virtual; psi4.core.print_out(""\n Preparing orbitals of subspaces ... ""); Ccore = psi4.core.Matrix(""C core"", nmopi, nrdoccpi); Cactv = psi4.core.Matrix(""C actv"", nmopi, nactvpi); Cvirt = psi4.core.Matrix(""C virt"", nmopi, nruoccpi). # fill in data to orbitals of subspaces; for h in range(nirrep):; offset1 = nrdoccpi[h]; offset2 = nactvpi[h] + offset1. for i in range(nmo",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/758#issuecomment-313731339:705,Test,Testing,705,https://psicode.org,https://github.com/psi4/psi4/issues/758#issuecomment-313731339,1,['Test'],['Testing']
Testability,Here is the output from psrecord (--log mem.log):; Everything was fine during the SCF in this case but it started picking up memory pretty quickly after starting with the gradient until it was killed when reaching 10GB. I also attached the input and output files. [mem.log](https://github.com/psi4/psi4/files/3066180/mem.log); [out.txt](https://github.com/psi4/psi4/files/3066184/out.txt); [in.txt](https://github.com/psi4/psi4/files/3066185/in.txt),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-481899244:36,log,log,36,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-481899244,4,['log'],['log']
Testability,Here's single-thread wB97X run with chrinide's input after two optimization cycles (it's still going). Max real 11 gb and virtual 12.4 gb. [bgobbi_wB97x_n1.log](https://github.com/psi4/psi4/files/3074059/bgobbi_wB97x_n1.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590#issuecomment-482626995:156,log,log,156,https://psicode.org,https://github.com/psi4/psi4/issues/1590#issuecomment-482626995,2,['log'],['log']
Testability,"Here's some of the errors in frequencies pre-fix; max is for HOOH TS. I've cherry-picked the commit into pyvib2, and the tests, if handy, are [here](https://github.com/loriab/psi4/blob/a4219be5e605a8f3f92fde127fdac4c187eaa70e/tests/python/vibanalysis/input.py). * CO2; ```; 	exp: [ 761.1526 761.1526 1513.3122 2580.1495]; 	obs: [ 765.97192061+0.j 954.84604992+0.j 1511.98600598+0.j; 2577.29764966+0.j]; 	dif: [ 4.81932061+0.j 193.69344992+0.j -1.32619402+0.j -2.85185034+0.j]; ```; * Ethene; ```; 	exp: [ 885.4386 1073.4306 1080.4104 1135.9390 1328.7166 1467.8428; 1565.5328 1831.6445 3287.3173 3312.1889 3371.7974 3399.4232]; 	obs: [ 885.43769105+0.j 1073.42980093+0.j 1080.48361108+0.j; 1135.93848940+0.j 1341.57874983+0.j 1467.71701985+0.j; 1565.53257843+0.j 1831.21804884+0.j 3287.31942795+0.j; 3312.16817472+0.j 3373.24482206+0.j 3399.42544494+0.j]; 	dif: [ -9.08947590e-04+0.j -7.99067003e-04+0.j 7.32110847e-02+0.j; -5.10595379e-04+0.j 1.28621498e+01+0.j -1.25780152e-01+0.j; -2.21567931e-04+0.j -4.26451164e-01+0.j 2.12794906e-03+0.j; -2.07252822e-02+0.j 1.44742206e+00+0.j 2.24494358e-03+0.j]; ```; * CH3 & NH3 ok; * Formaldehyde; ```; 	exp: [ 1325.3286 1359.7579 1637.4774 2013.4255 3108.9786 3183.3975]; 	obs: [ 1325.82947096+0.j 1376.06130208+0.j 1637.37151242+0.j; 2010.83034420+0.j 3108.93196717+0.j 3185.06227338+0.j]; 	dif: [ 0.50087096+0.j 16.30340208+0.j -0.10588758+0.j -2.59515580+0.j; -0.04663283+0.j 1.66477338+0.j]; ```; * HOOH TS; ```; 	exp: [ 0.0000+278.6136j 1128.8155 +0.j 1364.3495 +0.j; 1698.2924 +0.j 4140.0257 +0.j 4146.4749 +0.j ]; 	obs: [ 0.00000000+273.62786912j 1122.20829758 +0.j 1385.41184315 +0.j; 1715.97750485 +0.j 4143.48648522 +0.j 4306.47193962 +0.j ]; 	dif: [ 0.00000000-4.98573088j -6.60720242+0.j 21.06234315+0.j; 17.68510485+0.j 3.46078522+0.j 159.99703962+0.j ]; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/903#issuecomment-361040047:121,test,tests,121,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361040047,2,['test'],['tests']
Testability,Here's the input file:. ```; #! Test. memory 120 GB. molecule {; C -0.3648219 -0.2558995 0.0923050; C -0.8237370 -0.4341058 1.4009892; C 0.0631893 -0.4945023 2.4676115; C 1.4325282 -0.3891253 2.2383352; C 1.9137275 -0.2544564 0.9427619; C 1.0188673 -0.2008603 -0.1248541; S 1.6337601 -0.0364981 -1.7761054; C 0.4221959 -1.0586124 -2.5697098; C 0.8238102 -1.8523826 -3.6439926; C -0.0849812 -2.6907175 -4.2763478; C -1.3956898 -2.7594648 -3.8167039; C -1.7946816 -1.9614268 -2.7530877; C -0.9127618 -1.0695029 -2.1338664; C -1.3561501 -0.1563074 -1.0295856; C -1.9665877 1.0501577 -1.2219860; C -3.4084245 1.3237948 -1.5387008; C -4.1778103 0.9153814 -2.6656460; C -3.6040754 0.3592572 -3.8324065; C -4.3883329 -0.0114701 -4.8966852; C -5.7880208 0.1587824 -4.8485691; C -6.3715656 0.7419527 -3.7516437; C -5.5875462 1.1595529 -2.6489158; C -6.1606962 1.8632603 -1.5594824; C -5.3698613 2.3529990 -0.5506849; C -3.9860050 2.0985433 -0.5554402; C -2.9661061 2.5564496 0.4375737; C -1.6390824 2.2179359 -0.2602651; C -1.1154328 3.3910761 -1.1017198; H -0.3127358 -0.6228208 3.4762500; H -1.8927706 -0.5052113 1.5726366; H 1.8586583 -1.8262256 -3.9659948; H 0.2398716 -3.3060821 -5.1077784; H -2.1089392 -3.4246186 -4.2897038; H -2.8205109 -1.9987160 -2.4069456; H -3.0590481 1.9923608 1.3740789; H -3.0646319 3.6174136 0.6841579; H -0.8780603 1.9494578 0.4669513; H -1.8608701 3.7224689 -1.8292206; H -0.8671432 4.2380262 -0.4563872; H -0.2145328 3.1009119 -1.6469308; H 2.1299487 -0.4343560 3.0671308; H -2.5302569 0.2498912 -3.8883093; H -5.8058019 2.9352268 0.2545431; H -3.9272763 -0.4346889 -5.7821545; H -7.4432146 0.9114819 -3.7244639; H -7.2306828 2.0442982 -1.5581508; H -6.3974861 -0.1494268 -5.6908797; H 2.9804384 -0.2081479 0.7541413; }. set {; basis dzvp; scf_type df; reference uks; }. set_num_threads(4). gradient('b3lyp-D3BJ'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1547#issuecomment-465428116:32,Test,Test,32,https://psicode.org,https://github.com/psi4/psi4/issues/1547#issuecomment-465428116,1,['Test'],['Test']
Testability,Hey Distelli testing is now passing!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235411756:13,test,testing,13,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235411756,1,['test'],['testing']
Testability,"Hey PSI4 developers,. I am writing a plugin to test a JK algorithm. I want to run SCF in my plugin and test the new JK algorithm. . Even though I pass a converged scf wavefunction to the plugin, the SCF procedure doesn't converge. It seems that the wavefunction passing is messed up here. . Here is the basic structure of the plugin:. ```; SharedWavefunction kevin_plugin(SharedWavefunction ref_wfn, Options& options); {; boost::shared_ptr<Wavefunction> scf(new scf::RHF(ref_wfn, options, PSIO::shared_object()));; double scf_energy = scf->compute_energy();; } ; ```. I run the plugin as follows:. ```; import kevin_plugin. molecule H20 {; 0 1; H; O 1 1.08; H 2 1.08 1 107.5; units bohr; }. set globals {; basis sto-3g; df_basis_scf cc-pvdz-jkfit; df_basis_mp2 cc-pvdz-ri; scf_type df; reference RHF; }; refenergy, refwfn = energy('scf', return_wfn=True); energy('kevin_plugin', ref_wfn=refwfn); ```. Here is the first scf:. ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-RHF iter 0: -75.66716318225211 -7.56672e+01 7.87344e-01; @DF-RHF iter 1: -73.90687341477560 1.76029e+00 2.74191e-02; @DF-RHF iter 2: -73.91391789759025 -7.04448e-03 3.08278e-03 DIIS; @DF-RHF iter 3: -73.91403288011436 -1.14983e-04 4.69651e-04 DIIS; @DF-RHF iter 4: -73.91403606558048 -3.18547e-06 5.07365e-05 DIIS; @DF-RHF iter 5: -73.91403611477740 -4.91969e-08 6.26518e-06 DIIS; @DF-RHF iter 6: -73.91403611547619 -6.98790e-10 5.20238e-09 DIIS; ```. Here is the scf after my plugin is called:. ```; @DF-RHF iter 1: 15.38889387804263 1.53889e+01 0.00000e+00; @DF-RHF iter 2: -72.40376803946150 -8.77927e+01 3.34064e-01 DIIS; @DF-RHF iter 3: -72.40376803946153 -2.84217e-14 3.34064e-01 DIIS; @DF-RHF iter 4: -72.40376803946151 1.42109e-14 3.34064e-01 DIIS; @DF-RHF iter 5: -72.40376803946153 -1.42109e-14 3.34064e-01 DIIS; @DF-RHF iter 6: -72.40376803946153 0.00000e+00 3.34064e-01 DIIS; @DF-RHF iter 7: -72.40376803946148 4.26326e-14 3.34064e-01 DIIS; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/419:47,test,test,47,https://psicode.org,https://github.com/psi4/psi4/issues/419,2,['test'],['test']
Testability,"Hey all, I have updated the code to account for the two density matrices present in UHF. I ran a couple of tests. UHF does just as well as RHF for similar test cases with respect to screening and parallel performance. I have also discovered that density screening is not very effective for systems with diffuse basis sets (like aug-cc-pvdz)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-759736713:107,test,tests,107,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-759736713,2,['test'],"['test', 'tests']"
Testability,"Hey everyone,. I got the code through Valgrind for the stability test case and I did find an invalid read, but in the orbital rotation parameters that occurs after all the roots are computed. I'm correcting it now and investigating all divisions occurring in the code for small numbers. @jturney Could you just run the stability1 test case if it does not take too much time ? From what I understood the observed error was not even fully reproducible on Travis, which is going to make difficult to correct it. If you can see it on your machine you could also test the new version once I commit it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182873969:65,test,test,65,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182873969,3,['test'],['test']
Testability,"Hey there! I've been working with @averyparr and wanted to chime in on the _specific_ issue of omega in wb97m-v. I'm don't think this is worth promoting to a bigger issue, but at least so if someone else is searching and finds this issue, there's some context. In _addition_ to the patches made in #2643, there's another change that needs to happen to enable one to set `omega` in wb97m-v. Specifically, the version of libxc that psi4 pulls in is 5.1.5 (https://github.com/psi4/psi4/blob/master/external/upstream/libxc/CMakeLists.txt#L18) . This version is old enough that the C file for wb97m-v is missing a _lot_ of content compared to it's other wb97 cousins (see https://gitlab.com/libxc/libxc/-/blob/5.1.5/src/hyb_mgga_xc_wb97mv.c#L38 and compare to, e.g., https://gitlab.com/libxc/libxc/-/blob/5.1.5/src/hyb_gga_xc_wb97.c#L145). Because `xc_func_info_get_n_ext_params` ends up returning 0 (since it's not properly set in wb97m-v), psi4 thinks there's nothing it can set (`NPAR` is 0 and the names are NULL). . Unfortunately this isn't fixed until version 5.3 (https://gitlab.com/libxc/libxc/-/blob/release-5.3.0/src/hyb_mgga_xc_wb97mv.c), which isn't yet a stable release. It's pretty easy to monkey-patch your own libxc 5.2.3+, which _seems_ to work just fine with psi4, but I haven't run any tests besides the basic ones that run during installation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2641#issuecomment-1198448773:1300,test,tests,1300,https://psicode.org,https://github.com/psi4/psi4/issues/2641#issuecomment-1198448773,1,['test'],['tests']
Testability,"Hey,. Q1: The current code can only perturb along the specified axis. We could adapt it to handle rotations we'd just have to be careful with symmetry; it shouldn't be difficult. Q2: Any code that uses the `MintsHelper::so_potential` (not `MintsHelper::ao_potential`) will have the perturbation applied. I had tested this a few years ago for MP2 and CCSD. Might be a good idea to make sure there's a test included for it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/302#issuecomment-192282809:310,test,tested,310,https://psicode.org,https://github.com/psi4/psi4/issues/302#issuecomment-192282809,2,['test'],"['test', 'tested']"
Testability,"Hi @Hassenky. You should be able to use (and modify) the test files. https://github.com/psi4/psi4/blob/5801071a3b022497b8ae6bd157d9669f11c3b6d3/tests/dmrg/natural-orbital/input.dat; https://github.com/psi4/psi4/blob/5801071a3b022497b8ae6bd157d9669f11c3b6d3/tests/dmrg/scf-n2/input.dat; https://github.com/psi4/psi4/blob/5801071a3b022497b8ae6bd157d9669f11c3b6d3/tests/dmrg/ci-h2o/input.dat. Just leave out the last two lines from these files and give it try?. Once Daniel's pull request to chemps v1.7 is also accepted, you should be able to use dmrg-caspt2:. https://github.com/dgasmith/psi4/blob/13b56a618a17f57eeeacf66ef0a2a020daacdbb9/tests/dmrg/caspt2-n2/input.dat. Best wishes,; Sebastian",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-222653883:57,test,test,57,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-222653883,5,['test'],"['test', 'tests']"
Testability,"Hi @bozkaya, glad you're continuing to work on this. I worry that we're combining too many things here. I can see that saving the deltaMP2 energies are relevant to getting the FNO energies working, but changes to the tensor class and UHF-DF-CCSD perhaps are not. . For the latter two, I suggest a separate PR. If you send git patches of the commits where you added those features/fixes (can add `.patch` to end of GH commit view like https://github.com/psi4/psi4/commit/28caec54bff4a0ef39f01269cb94a930f6bd7223.patch or can do on the command line, https://stackoverflow.com/questions/6658313/generate-a-git-patch-for-a-specific-commit), I can get that PR started for you. The changes in those diffs/patches should be new work on, for example, the tensor class, not historical changes. For this PR, mainly what's needed are the deltaMP2 changes (again, if you'll send a patch, I'll add it to this PR) and tests. For the tests, it'll be straightforward to start from this branch and add new files.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1390#issuecomment-462830483:904,test,tests,904,https://psicode.org,https://github.com/psi4/psi4/pull/1390#issuecomment-462830483,2,['test'],['tests']
Testability,"Hi @dgasmith, forgot to report back. I updated `v2rdm_casscf` and it seems to have solved the issue indeed:; ```; $ psi4 --test; /home/je714/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; =============================================== test session starts ===============================================; platform linux -- Python 3.5.3, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- /home/je714/psi4conda/bin/python; cachedir: .cache; rootdir: /home/je714, inifile:; collected 19 items. psi4conda/lib/python3.5/site-packages/psi4/tests/test_aaa_profiling.py::test_threaded_blas xfail; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_gdma PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_chemps2 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_libefp PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_pcmsolver PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_erd PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_simint PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_json PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED; psi4conda/lib/python3.5/s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710#issuecomment-305441942:123,test,test,123,https://psicode.org,https://github.com/psi4/psi4/issues/710#issuecomment-305441942,8,['test'],"['test', 'tests']"
Testability,"Hi @djcole56, the immediate issue is fixed in #2273, and I think that can be merged after a couple test case adjustments. We were going to backport that one. The other half of the issue that isn't troubling you @jeffschriber was going to work on. Are you more interested in the v1.4.x or the v1.5.devx series?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2272#issuecomment-925817914:99,test,test,99,https://psicode.org,https://github.com/psi4/psi4/issues/2272#issuecomment-925817914,1,['test'],['test']
Testability,"Hi @hokru, I uploaded `psi4/label/dev::dftd4-3.5.0` packages (py intf present, so these are equiv to `conda-forge::dftd4-python` and tried out this branch with a mix of packages so that I could add some more helpful error messages. So there's one commit here and two over at qcengine. Also I hopefully got around all the CI checks here, but we'll see. Locally, this passes with `c-f::gcp-correction` and `psi4::dftd4`. ```; # Any line starting with the # character is a comment line; #! Sample HF/cc-pVDZ H2O computation. memory 600 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; ene = energy('r2scan-d4'); compare_values(-76.38149185, ene, 6, 'asdf'). energy('r2scan-3c/') # slash unsets basis from above; compare_values(-76.41834614, variable('SCF TOTAL ENERGY'), 6, 'SCF energy') #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1444523360:811,TEST,TEST,811,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1444523360,1,['TEST'],['TEST']
Testability,"Hi @j3mdamas,. Yes, the defaults version 4.8.5 was just below our minimum of 4.9. And then we try to stay on the modern side of the string-passing change at gcc 5.1(https://greek0.net/blog/2016/10/29/gcc_compatibility/) since people compile against our packages. The `gcc-5` on the psi4 channel is one I swiped from msarahan a year or so ago at the time of our last gcc crisis. I'd very much like to go back to using a defaults channel gcc, esp. for the gcc/libgcc separation. I tried out their `gcc_linux-64` at SciPy and it worked great. I planned to use their new toolchain system underneath Intel compilers but haven't had a chance to work on it. One aspect that might be immediately helpful to you is that because of our initial drive to make psi4 as static as possible, the psi4 package has no `libstdc++.so` runtime dependency. Only dep is on `libgcc_s.so` which can usually be picked up anywhere. In fact, we keep `gcc-5` away from travis builds so that different compilers can be properly tested. Below is a dependency readout from a recent build for general consultation. And yes, I've hit the conda inspect multiple packages message, too. There are plans down the road to drop `std::regex`, which means we could go back to general c++11 compliance and 4.8.5 would be ok. But because the packages are compiled against, we'd prefer to stay >=5.2 anyways. So summary is that current setup is stable but not ideal and we're not attached. Just haven't had time or need to roll out the latest tools. Short of another gcc packages revamp, are there particular problems/conflicts we could help tackle?. ```; + ldd -v /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/core.so; 	linux-vdso.so.1 => (0x00007fff87fc4000); 	libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f4318faf000); 	libc.so.6 => /lib64/libc.so.6 (0x00007f4318bed000); 	libpcm.so.1 => /scratch/psilocaluser/conda-builds/psi4_1506620042465/_t_env/lib/python3.6/site-packages/psi4/../../..",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/812#issuecomment-332960335:998,test,tested,998,https://psicode.org,https://github.com/psi4/psi4/issues/812#issuecomment-332960335,1,['test'],['tested']
Testability,"Hi @jminuse, thanks for the informative bug report. I'm almost certain that this suspicious 1.4rc1 behavior was fixed in 1.4rc2 by #2139, which tightened the integral screening after we switched integral engines from `libint` to `libint2`. . Your observations are consistent with what we saw: very wrong and/or oscillatory SCF energies. I also checked that your test case gives a reasonable energy with 1.4rc1 when I set the keyword `INTS_TOLERANCE` to 0, which was the temporary workaround for that bug.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211#issuecomment-869217302:362,test,test,362,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869217302,1,['test'],['test']
Testability,"Hi @loriab and @robertodr,. Thanks for your effort!. Regarding `Psithon` and `PsiAPI`, we are using both. For older products (e.g. https://github.com/Acellera/htmd/blob/master/htmd/qm/psi4.py), it is still `Psithon`, but will change to `PsiAPI` eventually. For new development, we (at least me) are already using `PsiAPI.` So ideal, the both should work consistently. Regarding a simple specific usage from https://github.com/Acellera/htmd/blob/master/htmd/qm/psi4.py, we have two scripts:; ```bash; $ cat run.sh; #!/bin/sh. export HTMD_PSI4_WORKDIR=$(pwd); psi4 -i psi4.in -o psi4.out &> psi4.log; ```; ```python; $ cat psi4.in; set_num_threads( 8 ); memory 2.000000 gb. set { reference rks }; set { basis cc-pVDZ }. molecule MOL {; 0 1; noreorient; nocom; symmetry c1; O 1.014300 -0.002300 0.060500; O 2.462400 -0.107500 -0.002400; H 0.821200 -0.823600 -0.430600; H 2.655500 0.713700 0.488700; }. pcm = { ; Medium { Solvent = Water }; Cavity { Type = GePol }; }. set optking { dynamic_level = 1 }. energy, wfn = optimize('B3LYP-D3', return_wfn=True). import os; os.chdir(os.environ['HTMD_PSI4_WORKDIR']). oeprop(wfn, 'DIPOLE', 'QUADRUPOLE', 'MULLIKEN_CHARGES'). with open('psi4out.xyz', 'w') as f:; f.write('4 ' ); f.write('%.12f\n' % energy); f.write(MOL.save_string_xyz()); ```; We need that the working directory to be not changed after `optimize` (and `energy`) returns as we do some analysis and write a few files in general (in this case just `psi4out.xyz`). So, we have an ugly hack to fix it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-357208169:594,log,log,594,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-357208169,1,['log'],['log']
Testability,"Hi @maxscheurer. Let me briefly react to your comments. > If the elec_only functionality is working, one could add LR-DDX for TDDFT. I can look up where the line of code needs to be added. If we want to add this, you could probably generate reference data with Gaussian, if it's not too much to ask. Nice idea, but it is not yet been tested to the point where I would be confident in it. I have this planned as a follow-up to this one ... I'll add a todo for now. > Will it be possible to add nuclear gradients in a follow-up PR? I think this would be a much appreciated feature by a lot of Psi users. Yes absolutely. That takes a bit of work (as more quantities are needed on the psi4-side), but ddx has them and naturally it would make sense to carry that forward to psi4. > What about performance in general? Did you run some small benchmark comparing to the existing PCM implementation? . I did not benchmark things rigorously, but e.g. on nitro-aniline in an STO-3G basis the timings were noticably different. In that setup the main load of the SCF is on the pcm. Here the SCF needs around 150s for PCMsolver and around 40s for ddx. Please take this with a grain of salt as I have done zero testing in how this scales or translates to realistic setups.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2767#issuecomment-1335539496:334,test,tested,334,https://psicode.org,https://github.com/psi4/psi4/pull/2767#issuecomment-1335539496,4,"['benchmark', 'test']","['benchmark', 'tested', 'testing']"
Testability,"Hi @susilehtola, I've been following Libxc v5.1 https://gitlab.com/libxc/libxc/-/issues/186 with interest. When I compiled this branch (after rebase; including your fixes from the spring, thanks!) in late December against the the Libxc 5.0 branch, I got about the same Psi4 test results as recorded above -- lots of `Matrix::power: C_DSYEV failed`. However, when I compile this branch against the new Libxc 5.1 hotfix branch, I don't even get that far. After disabling OpenMP, I get segfaults (dft-psivar):; ```; (gdb) bt; #0 0x00007ffff78351d7 in raise () from /lib64/libc.so.6; #1 0x00007ffff78368c8 in abort () from /lib64/libc.so.6; #2 0x00007ffff782e146 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007ffff782e1f2 in __assert_fail () from /lib64/libc.so.6; #4 0x00007fffed70db12 in xc_mix_func (func=func@entry=0x555556ca7500, np=np@entry=255, rho=rho@entry=0x555556e575c0, sigma=sigma@entry=0x555556ccda80, lapl=lapl@entry=0x0, tau=tau@entry=0x0, zk=0x555556771300, vrho=0x55555e164460, vsigma=0x555556c12720, vlapl=0x0, vtau=0x0, v2rho2=0x0, v2rhosigma=0x0, v2rholapl=0x0, v2rhotau=0x0, v2sigma2=0x0, ; v2sigmalapl=0x0, v2sigmatau=0x0, v2lapl2=0x0, v2lapltau=0x0, v2tau2=0x0, v3rho3=0x0, v3rho2sigma=0x0, v3rho2lapl=0x0, v3rho2tau=0x0, v3rhosigma2=0x0, v3rhosigmalapl=0x0, v3rhosigmatau=0x0, v3rholapl2=0x0, v3rholapltau=0x0, v3rhotau2=0x0, v3sigma3=0x0, v3sigma2lapl=0x0, v3sigma2tau=0x0, v3sigmalapl2=0x0, v3sigmalapltau=0x0, v3sigmatau2=0x0, ; v3lapl3=0x0, v3lapl2tau=0x0, v3lapltau2=0x0, v3tau3=0x0, v4rho4=0x0, v4rho3sigma=0x0, v4rho3lapl=0x0, v4rho3tau=0x0, v4rho2sigma2=0x0, v4rho2sigmalapl=0x0, v4rho2sigmatau=0x0, v4rho2lapl2=0x0, v4rho2lapltau=0x0, v4rho2tau2=0x0, v4rhosigma3=0x0, v4rhosigma2lapl=0x0, v4rhosigma2tau=0x0, v4rhosigmalapl2=0x0, v4rhosigmalapltau=0x0, ; v4rhosigmatau2=0x0, v4rholapl3=0x0, v4rholapl2tau=0x0, v4rholapltau2=0x0, v4rhotau3=0x0, v4sigma4=0x0, v4sigma3lapl=0x0, v4sigma3tau=0x0, v4sigma2lapl2=0x0, v4sigma2lapltau=0x0, v4sigma2tau2=0x0, v4sigmala",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754391084:274,test,test,274,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754391084,1,['test'],['test']
Testability,"Hi Lori, thank you for the PR and I really should buy you a beer. It would be useful to show the linking information, which I do not find under ""Build Psi4"". I think we should see `Linking CXX shared library core.cpython*.so` if it works as intended. However, I see `Linking CXX shared module core.cpython*.so` [here](https://dev.azure.com/fevange/Forte/_build/results?buildId=64&view=logs&j=969f314f-c02d-5da0-0600-6f21de6a62ef&t=c92288d5-3ca0-581f-2955-a086c2d0fb85&l=3375).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2103#issuecomment-773428084:385,log,logs,385,https://psicode.org,https://github.com/psi4/psi4/pull/2103#issuecomment-773428084,1,['log'],['logs']
Testability,"Hi Lori,. I can not reproduce failings on my computers. Could you send me output files for the failed tests so that I see what is gong wrong?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/190#issuecomment-157834251:102,test,tests,102,https://psicode.org,https://github.com/psi4/psi4/issues/190#issuecomment-157834251,1,['test'],['tests']
Testability,"Hi Lori,. I have just checked your output file for dfomp2p5-grad1. However, your input file is wrong. Please compare it with the following, which is the one in the public repo:. #! DF-OMP2.5 cc-pVDZ gradients for the H2O molecule. ref_vals = [ #TEST; [ 0.000000000000, 0.00000000000000, 0.01227994599573], #TEST; [ 0.000000000000, 0.00200475312336, -0.00613997299786], #TEST; [ 0.000000000000, -0.00200475312336, -0.00613997299786] #TEST; ] #TEST; ref = psi4.Matrix(3, 3) #TEST; ref.set(ref_vals). memory 256 mb. molecule h2o {; 0 1; o; h 1 0.958; h 1 0.958 2 104.4776; }. set {; basis cc-pvdz; df_basis_scf cc-pvdz-jkfit; df_basis_cc cc-pvdz-ri; scf_type df; guess sad; freeze_core true; }; gradient('df-omp2.5'). grad = psi4.wavefunction().gradient() #TEST; compare_matrices(ref, grad, 5, ""Analytic gradients"") #TEST",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/190#issuecomment-157840562:245,TEST,TEST,245,https://psicode.org,https://github.com/psi4/psi4/issues/190#issuecomment-157840562,8,['TEST'],['TEST']
Testability,"Hi Lori,. I was testing the new call name conventions for a while. Now, we have MP2_TYPE, MP_TYPE, CC_TYPE, CEPA_TYPE to switch between DF/CD/CONV. I guess it will be somewhat confusing for users to remember all of these options. . I think we can merge all this options into a global option. For example, we may define CORRELATION_TYPE as a new option (or POST_HF_TYPE), and instead of MP2_TYPE/MP_TYPE/CC_TYPE/CEPA_TYPE we will have a global option which will switch between DF/CD/CONV. Hence, with this definition we will just need to set SCF_TYPE and CORRELATION_TYPE options. What do you think? @loriab @CDSherrill . Ugur",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/245#issuecomment-195054616:16,test,testing,16,https://psicode.org,https://github.com/psi4/psi4/issues/245#issuecomment-195054616,1,['test'],['testing']
Testability,"Hi Lori,. dfomp2p5-grad2 and df-omp3-grad2 tests were failing due to wrong scf solutions. Both are fixed now. . Best regards,; Ugur.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/190#issuecomment-157844332:43,test,tests,43,https://psicode.org,https://github.com/psi4/psi4/issues/190#issuecomment-157844332,1,['test'],['tests']
Testability,"Hi Psi4 developers,. The QCSchema method of input to Psi4 is super convenient and plays well with standard I/O packagers like QCEngine, but it only allows the computation of a limited number of properties:. https://github.com/psi4/psi4/blob/9163cbd08865d26129cfbaf5c302fc14f870f30f/psi4/driver/schema_wrapper.py#L69-L71. It would be really convenient to compute other oeprops as well, especially GRID_ESP, using the schema framework. Would it be possible / desirable to have this in Psi4? . **Example use**. ```python; model = qcelemental.models.AtomicInput(; molecule=mol,; driver=""properties"",; model={""method"": ""SCF"", ""basis"": ""sto-3g"", properties=[""GRID_ESP"", ""GRID_FIELD""]},; keywords={""scf_type"": ""df"",; ""grid"": my_mol_grid}; ). result = qcengine.compute(model, ""psi4""). assert result.properties.grid_esp is not None; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2307:777,assert,assert,777,https://psicode.org,https://github.com/psi4/psi4/issues/2307,1,['assert'],['assert']
Testability,"Hi Yi,. Thanks for your work and the comments. I've been discussing some with Jonathon, and I think if you could do the below, that will clarify all the scaling factor and testing aspects of the PR, so we can move on to the I/O optimization and routing logic parts. Please let me know of any concerns. * accept the various GH suggestions clarifying the scaling scheme changes (only if you agree with them, of course). Feel free to make the changes locally, rather than through the GH interface, if that makes the git operations easier.; * edit sapt-dft1 test to be something like the below. This adds an extra section without the deltaHF correction. The analogous value in test sapt-dft2 is `DHF = -1.42620815`. This passes on master for me, so having the dHF=False pass on your PR will help verify the separate routing logic you added. With this in place, there won't be a need to separate out tests into another PR.; ```; #! SAPT(DFT) aug-cc-pVDZ interaction energy between Ne and Ar atoms. DHF = -0.01189736 #TEST; Eref_nh = {""SAPT ELST ENERGY"": -0.10190449, #TEST; ""SAPT EXCH ENERGY"": 0.36545706, #TEST; ""SAPT IND ENERGY"": -0.00840483, #TEST; ""SAPT DISP ENERGY"": -0.24398704, #TEST; ""CURRENT ENERGY"": 0.01122234} #TEST. Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:172,test,testing,172,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,6,"['log', 'test']","['logic', 'test', 'testing', 'tests']"
Testability,"Hi all! I did a little more exploration into this. It seems that, as I suspected, there are other grid configurations that can crash COSX. From the testing I did, here are some different combinations of pruning scheme and spherical points that crash the COSX code:. ROBUST: 74, 146, 230, 266; TREUTLER: 74, 230, 266; NONE: 74, 230, 266 . Given that I set these spherical points for the initial COSX grid and that the resulting exception was a DSYEV failure, as in the initial posting of this issue, my guess is that these grid configurations lead to negative weights, as well. It seems that, overall, the observed crashing is more dependent on the number of spherical points in the grid than the pruning scheme itself, although the latter has some impact.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890#issuecomment-1468093214:148,test,testing,148,https://psicode.org,https://github.com/psi4/psi4/issues/2890#issuecomment-1468093214,1,['test'],['testing']
Testability,"Hi all! I was working on folding the `PK_ALGO` keywords into `SCF_SUBTYPE`, and I ran into an issue that may be worth discussing. . By default, using `OOC_YOSHIMINE` and `OOC_REORDER` as `SCF_SUBTYPE`s the way we were discussing causes the calculation to throw an exception. The issue is because, in the SAD guess, DFJK is used by default; and `SCF_SUBTYPE` applies to the SAD guess DFJK (at least MemDFJK currently, and soon DiskDFJK) as well. Since `OOC_YOSHIMINE` and `OOC_REORDER` would be used as the keyword for the SAD DFJK, and since DFJK doesn't support those keywords explicitly for `SCF_SUBTYPE`, the calculation throws an exception. Note that setting `SAD_SCF_TYPE=DIRECT` eliminates this issue entirely. There are probably a few ways to resolve this, if we choose to explicitly continue on this path:. 1. As mentioned above, simply force `SAD_SCF_TYPE` to another option (like `DIRECT`) for PK calculations. I'll admit I'm not a big fan of this approach since DF is more performant, although it may not matter in the grand scheme of things since it's just the SAD guess. ; 2. Force `OOC_YOSHIMINE` and `OOC_REORDER` to work with the DFJK algorithms. The logical way to do this would be to have those keywords act the exact same as `SCF_SUBTYPE=OUT_OF_CORE` for DFJK. I'm a bit iffy on this one, as well, since it may imply that the three out-of-core keywords have different impacts on DFJK when they really don't. Documentation can clear that up, but still. What does everyone think?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2926#issuecomment-1523608327:1167,log,logical,1167,https://psicode.org,https://github.com/psi4/psi4/pull/2926#issuecomment-1523608327,1,['log'],['logical']
Testability,"Hi all, . I just updated the density screening code with the UHF/ROHF cases. I also added a test in the test_erisieve.py pytest file that ensures the same number of shell quartets are being screened out with RHF and UHF.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-924242589:92,test,test,92,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-924242589,1,['test'],['test']
Testability,"Hi all, I added integral hashing to the direct JK class for separate J and K matrix builds, to avoid doing redundant, expensive ERI computations when building linK and then building J. I also reran all the C tests (all passing).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-981225085:208,test,tests,208,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-981225085,1,['test'],['tests']
Testability,"Hi all,. As part of a large benchmarking study, I've been computing the interaction energies of various hexamine dimers. With PBEh-3c, I've gotten some suspiciously large errors relative to CCSD(T)/CBS. I have used 590, 99 (spherical,radial) points, and I've also compared the energies to Orca (using defgrid3... after recommendations from issue #2304). Psi4 and Orca differ by as many as .3-.4 kJ/mol, depending on the dimer, which is a large percent error. One test case is summarized below:. | Program | Monomer A (H) | Monomer B (H) | Dimer AB (H)| $E_{int}$ (kcal/mol)| ; |---------|-------------|-------------|-----------|-----------|; | Psi4 | -453.84229689692728 | -453.84229689783353 | -907.68447385499462 | 0.075263339533 |; |Orca | -453.842841688023 | -453.842841698644 | -907.685688152560 | -0.002990642998 |. | Program | $E_{int}$ (kJ/mol)| Notes|; |---------|-------------| ----|; | Psi4 | 0.31490181 | |; |Orca | -0.01251285 | |; | Benchmark | -0.00315431 | Focal Point CCSD(T)/CBS with Psi4 |. I have noticed this warning in all of my Psi4 hexamine/PBEh-3c files:; `Warning: Molecule has a spherically-symmetric moment of charge but lacks icosahedral, octahedral, and tetrahedral symmetry.` . CDS figures this has something to do with the grid placement. Any ideas of how to alleviate this warning while keeping the same geometries and/or what the energy difference could be attributed to? I've tried different basis sets, different number of grid points, `symmetry c1`, `molecule.symmetrize(1e-3)`, no pruning scheme (rather than `robust`). The only time I have been able to get the warning to go away is when I use `bsse_type='cp'`, but I really shouldn't be running the calculation with cp correction because that is already included in the PBEh-3c calculation. Output files for the above example are attached, as well as a graph of Psi4 and Orca interaction energies for all dimers tested. . [Psi4-214-int.txt](https://github.com/psi4/psi4/files/9200713/Psi4-214-int.txt); [Orca-21",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2647:28,benchmark,benchmarking,28,https://psicode.org,https://github.com/psi4/psi4/issues/2647,3,"['Benchmark', 'benchmark', 'test']","['Benchmark', 'benchmarking', 'test']"
Testability,"Hi all,. I am out of Country for the International Junior Science Olympiad (IJSO), hence I could not catch up with you. I know the problem for large molecules, it is because of int. I think if I change all ints to long long int, the problem will be solved. When I find an available time I can take a look. Meanwhile, you can use your patch and update dfocc as long as your patch passes all dfocc tests. Alternatively, a volunter may change all int data types to LLI for dfocc. @devinamatthews @dgasmith . Best regards,",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-562608405:396,test,tests,396,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-562608405,1,['test'],['tests']
Testability,"Hi all,. I am trying Psi4 4.0.0-beta4 today, but encountered a problem when parsing input and fetching corresponding basis set info. Here is a sample input file,; # =======================; # ! sample input. memory 500 mb. molecule test {; Li 0.000 0.000 0.000; }. set reference uhf; set globals = {; scf_type direct; basis 6-31G; e_convergence 10; }. this_energy = energy('scf'); # =======================. running with Psi 4.0.0-beta4 on Linux, compiled with intel composer xe 2013 (x86-64). The error message is: ; # =======================. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/home/ren/soft/Psi4/share/psi/python/driver.py"", line 526, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 489, in run_scf; scf_helper(name, **kwargs); File ""/home/ren/soft/Psi4/share/psi/python/proc.py"", line 707, in scf_helper; e_scf = PsiMod.scf(precallback, postcallback); RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for LI; file: /home/ren/soft/psi4.0b4/src/lib/libmints/basisset_parser.cc; line: 339; # =======================. Is it a but or am I wrong anywhere?; I appreciate any help and suggestions,; Hao",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/7:232,test,test,232,https://psicode.org,https://github.com/psi4/psi4/issues/7,1,['test'],['test']
Testability,"Hi all,. I have been benchmarking energy calculations of various organic small-molecule dimers in Psi4. These dimers have minimum monomer separations (closest intermolecular contact) up to 15 Å. To determine which method produces interaction energies closest to coupled cluster results, I have graphed the partial crystal lattice energy contributions (a scaled sum of the dimer interaction energies) for subsets of dimers with monomer separations between (n, n+1). Odd behavior arose when analyzing results of benzene. PBEh-3c returned errors _much_ larger than any other method. To investigate these results, PBE, PBEh, and PBEh-3c were run in ORCA (5.0.1) and Psi4 (1.4rc3). Results are shown below. Methods denoted with an asterisk are those which use a fine grid (total points = 6340328). Methods without an asterisk used the default grid (Psi4 total points = 253270; ORCA total points = 56510). ![subplot-8](https://user-images.githubusercontent.com/87093097/134976005-f5bf7501-27d2-40c0-b033-06b33126f8dc.png). The graph shows that while PBE generally agrees in Psi4 and ORCA, PBEh and PBEh-3c disagree when comparing the two software packages and default grid points are used. When Psi4 uses a fine grid, the results align more-so with ORCA -- and the coupled cluster results. Two individual dimers have been chosen to highlight the differences in interaction energies:. | Benzene Dimer | Min. Monomer Separation (Å) | Interaction Energy (kJ/mol) | Software | Spherical Points | Radial Points | Total Points |; |---|---|---|---|---|---|---|; | 2mer-0+1 | 2.544 | -6.01017169 | ORCA | 194 | OptM3 with GC (2021) | 56510 |; | | | -6.09347943 | Psi4 | 302 | 75 | 253270 |; | | | -6.06158176 | Psi4 | 5810 | 99 | 6340328 |; | 2mer-0+77 | 11.016 | -0.03777130 | ORCA | 194 | OptM3 with GC (2021) | 56510 |; | | | -0.09279455 | Psi4 | 302 | 75 | 253270 |; | | | -0.03957357 | Psi4 | 5810 | 99 | 6340328 |. To me, this seems to be a systematic issue with Psi4 calculating interaction energies with PBE",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2304:21,benchmark,benchmarking,21,https://psicode.org,https://github.com/psi4/psi4/issues/2304,1,['benchmark'],['benchmarking']
Testability,"Hi all,. I have installed psi4-1.3 in Win10/WSL-Ubuntu18.04 successfully, and when run 'psi4 --test', only _dftd3_ and _grimme_3c_ failed. I have found that psi4-v1.3 integrated dftd3 shown error when run ""dftd3""under WSl:. **_Segmentation fault (core dumped)_**. Then I rebuild _dftd3_ under WSL and use the newly build _dftd3_, then the 'psi4 --test' show all pass. So, this is just a build-bug report.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1587:95,test,test,95,https://psicode.org,https://github.com/psi4/psi4/issues/1587,2,['test'],['test']
Testability,"Hi all,. I have test PSI4 1.3.1 in Win10/WSL, the tests with test_snsmp2 & test_psi4_cc failed:. ```; ____________________________________________________ test_snsmp2 ______________________________________________________. @pytest.mark.smoke; @using_snsmp2; def test_snsmp2():; """"""snsmp2/he-he"""""". HeHe = psi4.geometry(""""""; 0 1; He 0 0 0; --; He 2 0 0; """"""). > e = psi4.energy('sns-mp2'). miniconda3/envs/psi/lib/python3.6/site-packages/psi4/tests/test_addons.py:935:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; miniconda3/envs/psi/lib/python3.6/site-packages/psi4/driver/driver.py:556: in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); miniconda3/envs/psi/lib/python3.6/site-packages/snsmp2/snsmp2.py:81: in run_sns_mp2; m1mhigh = c.compute('m1', 'm', 'high', mp2=True, mp2_dm=True); miniconda3/envs/psi/lib/python3.6/site-packages/snsmp2/wavefunctioncache.py:386: in compute; self._init_ns(calc); miniconda3/envs/psi/lib/python3.6/site-packages/snsmp2/wavefunctioncache.py:143: in _init_ns; return self._init_upcast_C(oldcalc=candidate, calc=calc); miniconda3/envs/psi/lib/python3.6/site-packages/snsmp2/wavefunctioncache.py:172: in _init_upcast_C; new_wfn = self._basis_projection(oldcalc, calc); miniconda3/envs/psi/lib/python3.6/site-packages/snsmp2/wavefunctioncache.py:187: in _basis_projection; old_wfn = core.Wavefunction.from_file(read_filename); miniconda3/envs/psi/lib/python3.6/site-packages/psi4/driver/p4util/python_helpers.py:156: in _core_wavefunction_from_file; wfn_data = np.load(wfn_data).item(); miniconda3/envs/psi/lib/python3.6/site-packages/numpy/lib/npyio.py:447: in load; pickle_kwargs=pickle_kwargs); _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. fp = <_io.BufferedReader name='pytest_output.m1-m-low.14086.180.npy'>, allow_pickle = False; pickle_kwargs = {'encoding': 'ASCII', 'fi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1611:16,test,test,16,https://psicode.org,https://github.com/psi4/psi4/issues/1611,3,['test'],"['test', 'tests']"
Testability,"Hi all,. I just built Psi4 on mac os x, and everything seem to build and test fine. However, in doing a calculation I received the following error: . ```; An error has occurred Py-side; Traceback:; <class 'Boost.Python.ArgumentError'>: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(_object*, boost::shared_ptr<psi::Wavefunction>): File ""<string>"", line 28, in <module>. File ""/usr/local/psi4/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); ```. Input was:. ```; import psi4. molecule {; C 0.012220093121 -0.717626540721 0.000000000000; O -0.062545506204 0.679938040344 0.000000000000; H 0.518735639503 -1.098516178616 0.883563931671; H 0.518735639503 -1.098516178616 -0.883563931671; H -1.002097021106 -1.091505681690 0.000000000000; H 0.811765758420 1.042084199023 0.000000000000; }. set globals {; basis 6-31g*; }. energy('scf'); oeprop(""MULLIKEN_CHARGES""); ```. Commenting out the `oeprop` line not surprisingly gets rid of the error. . I doubt any of the rest of this matters, but... I did get two errors building, in case they're relevant, but I've seen them in other open issues:. ```; The following tests FAILED:; 254 - pywrap-opt-sowreap (Failed); 263 - sapt4 (Failed); Errors while running CTest; make: *** [test] Error 8; ```. Command used to configure: `./setup -DBUILD_CUSTOM_BOOST=TRUE --python /usr/bin/python objdir`; Compiler: gcc/g++/gfortran from hpc.sourceforge.net; OS: OS X 10.10.5",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/260:73,test,test,73,https://psicode.org,https://github.com/psi4/psi4/issues/260,3,['test'],"['test', 'tests']"
Testability,"Hi all,. I was using the MRCC interface to compute the CCSDT energy of a trimer at the quadruplet spin state. Psi4 seems to initiate the computation correctly, but the MRCC computation stops after printing; `Calculation of MP denominators...`; without performing the CC iterations, but still printing `Normal termination of mrcc.` ; I tried the water example provided in the MRCC interface manual:; `molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('mrccsdt')`; It works fine as is, it also works fine if I change the multiplicity to `0 3` with `reference uhf` but not if I change it to `1 4` with `reference uhf`. It then fails at the same point than my original trimer computation. I notice that the output file of the successful triplet computation prints `Spin multiplicity: 3` twice whereas this line is missing in the failing quadruplet computations (see attached files).; [test.out.txt](https://github.com/psi4/psi4/files/1713187/test.out.txt); [test_quad.out.txt](https://github.com/psi4/psi4/files/1713188/test_quad.out.txt). Running the quadruplet directly through MRCC using their input file works fine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/915:911,test,test,911,https://psicode.org,https://github.com/psi4/psi4/issues/915,2,['test'],['test']
Testability,"Hi all,. Just a report. Current conda v2rdm_casscf build was not compatible with the production psi4-1.3.2+ecbda83 version(Tested under Win10 WSL Ubuntu1804). ```; Traceback (most recent call last):; File ""/root/miniconda3/envs/psi/bin/psi4"", line 177, in <module>; import psi4; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/psi4/__init__.py"", line 82, in <module>; from .driver import endorsed_plugins; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; import v2rdm_casscf; File ""/root/miniconda3/envs/psi/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; psi4.core.plugin_load(sofile); RuntimeError:; Fatal Error: load_plugin: Cannot open library: core.so: cannot open shared object file: No such file or directory; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; The most recent 5 function calls were:. forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source; libgdma.so 00007F0370F460DC for__signal_handl Unknown Unknown; libpthread-2.27.s 00007F03763F2890 Unknown Unknown Unknown; ld-2.27.so 00007F0376616A31 Unknown Unknown Unknown; libc-2.27.so 00007F03761472DF _dl_catch_excepti Unknown Unknown; libc-2.27.so 00007F037614736F _dl_catch_error Unknown Unknown; libdl-2.27.so 00007F0375DD1735 Unknown Unknown Unknown; libdl-2.27.so 00007F0375DD10B3 dlclose Unknown Unknown; core.cpython-36m- 00007F0371E280E7 Unknown Unknown Unknown; core.cpython-36m- 00007F037202C9B2 Unknown Unknown Unknown; core.cpython-36m- 00007F03720539F6 Unknown Unknown Unknown; core.cpython-36m- 00007F0371AFD0D6 Unknown Unknown Unknown; python3.6 00007F03769C4B36 PyCFunction_Call Unknown Unknown; python3.6 00007F03769C1A5E PyObject_Call Unknown Unknown; python3.6 00007F0376AC1834 Unknown Unknown Unknown; python3.6 00007F0376ABF37F Py_FinalizeEx Unknown Unknown; python3.6 0000",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1775:123,Test,Tested,123,https://psicode.org,https://github.com/psi4/psi4/issues/1775,1,['Test'],['Tested']
Testability,"Hi all,. Running the following per the docs works as expected:; ```; >>> conda create -n p4env psi4 -c psi4; >>> conda activate p4env; >>> psi4 --version; 1.6.1; ```. And I'm able to use psi4 in PsiAPI mode as expected (can run the h2o geometry opt and freq calcs) after entering a python shell. However, when I try to use Psi4 in Psithon mode like so, I obtain an error:. ```; >>> psi4 -i input.dat -o output.dat; A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.23.1; ```. Is this a compile issue in the Psi4 executable on conda?. In case it's helpful, I'm using a Mac (v.11.3.1) and running conda (4.12.0) with python 3.9.13. The input file I was trying to use contains:. ```; memory 600 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; energy('scf'); ```. The tests module ran 92 / 4121 tests, and two failed (test_gdma and test_psi4_cc), but these seem unrelated to the current issue.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2661:834,test,tests,834,https://psicode.org,https://github.com/psi4/psi4/issues/2661,2,['test'],['tests']
Testability,"Hi all. I've been using psi4 inside of a docker container for over a year. Suddenly, the same build process fails to produce a usable psi4 install. I get the following exception when trying to run `psi4 --version` (or any other psi4 command) inside the container: ; ```sh; (base) root@3434e5974c7f:/# psi4 --version; Traceback (most recent call last):; File ""/opt/conda/lib//python3.9/site-packages/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: /opt/conda/lib//python3.9/site-packages/psi4/core.cpython-39-x86_64-linux-gnu.so: undefined symbol: __intel_sse4_strlen. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/opt/conda/bin/psi4"", line 183, in <module>; import psi4 # isort:skip; File ""/opt/conda/lib//python3.9/site-packages/psi4/__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: /opt/conda/lib//python3.9/site-packages/psi4/core.cpython-39-x86_64-linux-gnu.so: undefined symbol: __intel_sse4_strlen; ```. The simplest repro can use the following `Dockerfile`:. ```; FROM continuumio/miniconda3:4.10.3; RUN conda install psi4=1.5 -c psi4; ```. Then:; `docker build -t psi4-test .`. Then to enter the container:. `docker run -it psi4-test bash`. Then inside the containter run:. `psi4 --version`. Has something changed on the conda repos that now results in missing libraries, specifically those containing `__intel_ss34_strlen`? Strange that this very simple build processes worked for one year+ and now fails... Have repro'd on multiple systems. Thanks so much!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2596:1207,test,test,1207,https://psicode.org,https://github.com/psi4/psi4/issues/2596,2,['test'],['test']
Testability,"Hi all. Thanks for the quick response! :). I implemented b86bpbe in; nwchem back in the day, but psi4's results are a bit off (not too; much, a bit over 1e-3). I'll try to figure out what's going on when I; have some time (attending a conference right now), add b86bpbe to; the dft1 test, and update the pull request.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/438#issuecomment-230823292:283,test,test,283,https://psicode.org,https://github.com/psi4/psi4/pull/438#issuecomment-230823292,1,['test'],['test']
Testability,"Hi all，. I have found that the qcengine 0.13.0 was not compatible with PSI4 dev version,. when use qcengine 0.13.0, show below error:. ```; ======================================================== ERRORS ========================================================; _____________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py ______________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_addons.py:7: in <module>; from qcengine.testing import using_mp2d; E ImportError: cannot import name 'using_mp2d' from 'qcengine.testing' (/root/miniconda3/envs/psi4/lib//python3.7/site-packages/qcengine/testing.py); ______________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py _______________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_mp2d.py:7: in <module>; from qcengine.testing import using_mp2d; E ImportError: cannot import name 'using_mp2d' from 'qcengine.testing' (/root/miniconda3/envs/psi4/lib//python3.7/site-packages/qcengine/testing.py); _________ ERROR collecting miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py _________; ImportError while importing test module '/root/miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; miniconda3/envs/psi4/lib/python3.7/site-packages/psi4/tests/test_qcng_dftd3_mp2d.py:10: in <module>; from qcengine.testing import is_program_new_enough, using_dftd3, using_dftd3_321, usi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1782:347,test,tests,347,https://psicode.org,https://github.com/psi4/psi4/issues/1782,9,['test'],"['test', 'testing', 'tests']"
Testability,"Hi everyone,. I newly compiled Psi4 Rev {master} d7d117e pulled from the latest Master, with Intel MKL 2018.1.163 and GNU compilers version 5.4.0. I used the following cmake options to try to get most of the optional modules and get CheMPS2 interprocedural optimization to work:; cmake -H. -Bobj_rel -DMAX_AM_ERI=6 -DENABLE_ambit=ON -DENABLE_CheMPS2=ON -DENABLE_dkh=ON -DENABLE_libefp=ON -DENABLE_simint=ON -DENABLE_gdma=ON -DENABLE_PCMSolver=ON -DENABLE_snsmp2=ON -DENABLE_v2rdm_casscf=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_AR=/usr/bin/gcc-ar -DCMAKE_RANLIB=/usr/bin/gcc-ranlib. Everything configures and builds like a charm, then all tests run except those that seem to end with a segfault shortly before the 2-RDM computation starts:; 401 - v2rdm_casscf-v2rdm1 (Failed); 402 - v2rdm_casscf-v2rdm2 (Failed); 403 - v2rdm_casscf-v2rdm3 (Failed); 404 - v2rdm_casscf-v2rdm4 (Failed); 405 - v2rdm_casscf-v2rdm5 (Failed); 406 - v2rdm_casscf-v2rdm6 (Failed). make pytest shows all non-skipped tests passed. I also see ; 363 - dft-custom-hybrid (Failed); but this one is because the GCP software is not installed so I guess the test should have been skipped in this case. I don't actually need to run 2-RDM computations but I thought I should let you know.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/905:636,test,tests,636,https://psicode.org,https://github.com/psi4/psi4/issues/905,3,['test'],"['test', 'tests']"
Testability,"Hi everyone,. I was testing the ADC(2) code in Psi4 on small molecules and noticed that the results I obtained were significantly different from Q-Chem. The SCF and MP2 energies match very well. For N2 (r = 1.2 A) with cc-pVDZ basis, here's a summary of the energies for the 8 lowest-lying singlet states from Q-Chem 4.4.1 compared to Psi4 1.1:. Q-Chem 4.4.1:; MP2 ground-state energy: -109.2579498247; Excitation energy: 8.385211 eV; Excitation energy: 8.385211 eV; Excitation energy: 8.832813 eV; Excitation energy: 9.441957 eV; Excitation energy: 9.441957 eV; Excitation energy: 13.868446 eV; Excitation energy: 13.868446 eV; Excitation energy: 14.791430 eV. Psi4 1.1: ; MP2 ground-state energy: -109.25794982519506; ->	1 A state : 0.3113289 (a.u.), 8.4716885 (eV); ->	2 A state : 0.3113289 (a.u.), 8.4716885 (eV); ->	3 A state : 0.3343892 (a.u.), 9.0991916 (eV); ->	4 A state : 0.3565394 (a.u.), 9.7019279 (eV); ->	5 A state : 0.3565394 (a.u.), 9.7019279 (eV); ->	6 A state : 0.5069575 (a.u.), 13.7950140 (eV); ->	7 A state : 0.5069575 (a.u.), 13.7950140 (eV); ->	8 A state : 0.5127312 (a.u.), 13.9521243 (eV). The Q-Chem energies agree with my standalone code. For N2 with STO-3G basis I simply get zero excitation energies with Psi4:. ==> ADC(2) Computation <== ; ; -> 1 A state : 0.0000000 (a.u.), 0.0000000 (eV); Non-iterative: 0.3864160 (a.u.), 10.5149136 (eV); ┆ ┆ Occ Vir Coefficient ; --------------------------------------------- ; ; Converged in 2 iteration. ; Squared norm of the S component: 1.0000000 ; The S vector is rotated up to 90.000 (deg.) ; #WARNING: Strongly rotated from the CIS state! ; ; -> 2 A state : 0.0000000 (a.u.), 0.0000000 (eV); Non-iterative: 0.4145495 (a.u.), 11.2804653 (eV); ┆ ┆ Occ Vir Coefficient ; --------------------------------------------- ; ; Converged in 2 iteration. ; Squared norm of the S component: 1.0000000 ; The S vector is rotated up to 90.000 (deg.) ; #WARNING: Strongly rotated from the CIS state! . Any idea about what's going on? . My inpu",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033:20,test,testing,20,https://psicode.org,https://github.com/psi4/psi4/issues/1033,1,['test'],['testing']
Testability,"Hi everyone,. Two short questions regarding https://github.com/psi4/psi4/blob/a5f51268e0385916830a2065ed34052cf1fab647/tests/props1/input.dat:. Q1: Is there a generalization of. ```; set scf perturb_h true; set scf perturb_with dipole_z; set scf perturb_magnitude 0.001; ```. to specific unit vectors? Or alternatively, can one specify a dipole perturbation as follows. ```; set scf perturb_with dipole_vec; set scf perturb_magnitude [ 0.001 * cos_theta, 0.001 * sin_theta, 0.0 ]; ```. in which a vector can be placed? I do understand that as an alternative I can rotate the geometry, but I'm just wondering. Q2: Are those integrals ( i | T + V_nuc + field . dipole | j ) also present in subsequent calculations (mp2, ccsd, dmrg)?. Thanks!; Seb",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/302:119,test,tests,119,https://psicode.org,https://github.com/psi4/psi4/issues/302,1,['test'],['tests']
Testability,"Hi everyone,. You can use my CASPT2 test test13 (; https://github.com/SebWouters/CheMPS2/blob/master/tests/test13.cpp.in ),; but with DMRG instead of FCI as solver. Just make sure to use a very small; Davidson residual tolerance for the last sweep (1e-9 or 1e-10). Best wishes,; Sebastian",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388#issuecomment-223890082:36,test,test,36,https://psicode.org,https://github.com/psi4/psi4/pull/388#issuecomment-223890082,2,['test'],"['test', 'tests']"
Testability,"Hi folks - I'd like to help with this, although I'm not familiar with the psi4 code internals. Do you need reference values for the tests? (on what systems?). I'm wondering if the gcp part of r2SCAN-3c would affect the results in any test with a single molecule; do we need something like a water dimer?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1732451176:132,test,tests,132,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1732451176,2,['test'],"['test', 'tests']"
Testability,"Hi guys,. I have been experimenting with symlinks to conda distributions. They have been working generally fine, but I am facing some issues with psi4. I've started with the tests. Running: `pytest -v /home/joao/miniconda3/lib/python3.6/site-packages/psi4/tests/*.py`, where `/home/joao/miniconda3` is a real/physical path, works fine:. ```; ============================================================== test session starts ===============================================================; platform linux -- Python 3.6.1, pytest-3.1.2, py-1.4.34, pluggy-0.4.0 -- /home/joao/miniconda3/bin/python; cachedir: .cache; rootdir: /home/joao/miniconda3/lib/python3.6/site-packages/psi4/tests, inifile:; collected 20 items . test_aaa_profiling.py::test_threaded_blas XPASS; test_addons.py::test_gdma PASSED; test_addons.py::test_mrcc SKIPPED; test_addons.py::test_chemps2 PASSED; test_addons.py::test_dftd3 PASSED; test_addons.py::test_libefp PASSED; test_addons.py::test_pcmsolver PASSED; test_addons.py::test_erd PASSED; test_addons.py::test_simint PASSED; test_addons.py::test_json PASSED; test_addons.py::test_cfour SKIPPED; test_addons.py::test_v2rdm_casscf SKIPPED; test_addons.py::test_grimme_3c SKIPPED; test_addons.py::test_dkh PASSED; test_psi4.py::test_psi4_basic PASSED; test_psi4.py::test_psi4_cas PASSED; test_psi4.py::test_psi4_cc PASSED; test_psi4.py::test_psi4_dfmp2 PASSED; test_psi4.py::test_psi4_sapt PASSED; test_psi4.py::test_psi4_scfproperty PASSED. =============================================== 15 passed, 4 skipped, 1 xpassed in 124.33 seconds ================================================; ```. Running `pytest -v -k 'not test_gdma' /home/joao/current/lib/python3.6/site-packages/psi4/tests/*.py`, where `/home/joao/current` is a symlink to `miniconda3`, gives me:. ```; ============================================================== test session starts ===============================================================; platform linux -- Python 3.6.1, pytest-3.1.2, py-1.4.34, pl",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:174,test,tests,174,https://psicode.org,https://github.com/psi4/psi4/issues/820,4,['test'],"['test', 'tests']"
Testability,"Hi there, thanks a lot for including me on this. :) . Transition state optimization is implemented, but we have not tested it extensively against other codes. It does work quite well for in-house applications containing 50+ atoms. I'm very interested to see how you run these optimizations directly in Psi4. It should be a lot more efficient than calling Psi4 repeatedly on the command line. Also happy to provide examples of constrained optimization. Let me know if you need any.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1813#issuecomment-615052462:116,test,tested,116,https://psicode.org,https://github.com/psi4/psi4/pull/1813#issuecomment-615052462,1,['test'],['tested']
Testability,"Hi! I'm following the [official tutorial](https://psicode.org/psi4manual/master/psiapi.html) to run a simple HF computation using Psi4:; ```; H2 = psi4.geometry(""""""; units au; H 0 0 0; H 1.4 0 0; """"""; ). psi4.set_module_options('scf', {'e_convergence': '1e-3'}). psi4.energy('scf/cc-pvdz'); ```. However, it seems that after I manually set the energy convergence threshold to `1e-3`, the program still used the default value `1e-6` for the computation based on its output log: ; ```; ==> Algorithm <==. SCF Algorithm Type is DF.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is SAD.; Energy threshold = 1.00e-06; Density threshold = 1.00e-06; Integral threshold = 1.00e-12; ```. Did I use the wrong method to change the option (even though it's recommended in the same tutorial)? If so, what is the correct way to do it in Python? Thank you!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2990:472,log,log,472,https://psicode.org,https://github.com/psi4/psi4/issues/2990,1,['log'],['log']
Testability,"Hi!; Thanks for the great work here!; I'm new to psi4, and currently try to run a few benchmark calculations. I'm trying to compare runtimes of psi4 with other software, and was hoping to use timer.dat for that, but I'm having some trouble understanding what each entry means. . One thing I'm interested in is the time per scf iteration of a rks/uks DFT, but I'm having trouble reading that information from timer.dat. Any help would be greatly appreciated!. Thanks!; Martin",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2601:86,benchmark,benchmark,86,https://psicode.org,https://github.com/psi4/psi4/issues/2601,1,['benchmark'],['benchmark']
Testability,"Hi, I created brand new `conda` environment and then installed `psi4` with:. ```; conda install psi4 psi4-rt python=3.6 -c psi4; ```. and then tried to run a test input, like so:. ```; # Any line starting with the # character is a comment line; #! Sample HF/cc-pVDZ H2O computation. memory 600 mb. molecule h2o {; O; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; energy('scf'); ```. I receive a segmentation fault and see the following Traceback:. ```TraceBack; psi4 test.in test.out; Traceback (most recent call last):; File ""/xxx/anaconda3/envs/psi4/bin/psi4"", line 177, in <module>; import psi4; File ""/xxx/anaconda3/envs/psi4/lib//python3.6/site-packages/psi4/__init__.py"", line 82, in <module>; from .driver import endorsed_plugins; File ""/xxx/anaconda3/envs/psi4/lib//python3.6/site-packages/psi4/driver/endorsed_plugins.py"", line 33, in <module>; import v2rdm_casscf; File ""/xxx/anaconda3/envs/psi4/lib//python3.6/site-packages/v2rdm_casscf/__init__.py"", line 45, in <module>; psi4.core.plugin_load(sofile); RuntimeError:; Fatal Error: load_plugin: Cannot open library: core.so: cannot open shared object file: No such file or directory; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1563933640427/work/psi4/src/psi4/libplugin/load_plugin.cc on line: 52; The most recent 5 function calls were:. forrtl: severe (174): SIGSEGV, segmentation fault occurred; ```. This also happens if I make the input file use the Python API. This is using:. - `conda` 4.8.3; - RHEL 7.6. Yikes. I just typed `psi4 --version` to grab the version and also received the Traceback, so something deep inside psi4 appears to be broken. I wasn't able to find a similar issue on GitHub, so apologies if this is already known. I tried to update `libint` based on this [thread](https://github.com/psi4/psi4/issues/1533), but that didn't fix this.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1984:158,test,test,158,https://psicode.org,https://github.com/psi4/psi4/issues/1984,3,['test'],['test']
Testability,"Hi, thank you very much for your response. > I would ordinarily advise putting psi4 is a separate conda env, not the base one. That seems awkward in colab (has to be activated per cell!) but is a possibility, https://stackoverflow.com/questions/53031430/conda-environment-in-google-colab-google-colaboratory. I tried this and am able to install psi4 and even import it without any errors. [psi4-test.txt](https://github.com/psi4/psi4/files/8883628/psi4-test.txt) contains the results of `psi4 --test`; kindly let me know if this mean that psi4 is in functional state.; Here is the `conda list` output in case it is needed.; [psi4-env_conda-list.txt](https://github.com/psi4/psi4/files/8883643/psi4-env_conda-list.txt). Now I have some compatibility issues against python3.8 but that's with other packages I am trying to use. Just to make sure, psi4 is no longer supported on python3.7, right?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2598#issuecomment-1152894724:395,test,test,395,https://psicode.org,https://github.com/psi4/psi4/issues/2598#issuecomment-1152894724,3,['test'],['test']
Testability,"Hi,. **Goal**. My goal is to run thermodynamic analysis on big molecules using the psi4 module however on bigger molecules the frequency calculations becoming exceedingly slow and I wonder what is the reason if there is something wrong with my setup. . **Question 1**. The molecule I am working with is private but I have provided a z-matrix of methanol as a test:. ```python. methanol = """"""\; O11; H11 O11 0.9316; C11 O11 1.4349 H11 107.5890; H12 C11 1.1029 O11 111.8699 H11 0.0000; H13 C11 1.1029 O11 111.8699 H11 122.9683; H14 C11 1.1029 O11 111.8699 H11 -118.5158; """"""; ```. Picture:. <img width=""413"" alt=""Screenshot 2024-01-23 at 4 48 12 PM"" src=""https://github.com/psi4/psi4/assets/11812946/0b006708-ebaf-45f4-af19-bb5c9f80b513"">. Here's the full script:. ```python. import psi4; import numpy as np. psi4.set_options({; 'scf_type': 'df',; 'g_convergence': 'gau_loose',; 'freeze_core': 'true',; 'reference': 'rhf',; 'save_jk': True,; 'geom_maxiter': 50,; }). psi4.set_output_file('free_energy_run.out'); psi4.set_num_threads(8); psi4.set_memory('8 GB'). universe = psi4.geometry(methanol); universe.update_geometry(); universe.print_in_input_format(). energy, wave_function = psi4.freq(; 'hf/6-31G*',; return_wfn=True,; molecule=universe,; dertype='gradient'; ). ```. So this calculation happens pretty rapidly with methanol but as I get to a system of 50ish atoms and 193 displacements needed it takes more than 24 hours so I was thinking there was a convergence problem somewhere or perhaps it's taking a really long time for those calculations? . **Analysis**. I was looking at the time for the calculations of the gradient. ```python. Module time:; user time = 0.37 seconds = 0.01 minutes; system time = 0.02 seconds = 0.00 minutes; total time = 0 seconds = 0.00 minutes; ```. it's pretty fast for a small system. However, for my system it's pretty slow per iteration. ```python. Module time:; 	user time = 738.22 seconds = 12.30 minutes; 	system time = 17.29 seconds = 0.29 minutes; 	total ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3125:359,test,test,359,https://psicode.org,https://github.com/psi4/psi4/issues/3125,1,['test'],['test']
Testability,"Hi,. I am new to psi4 and am having a question about how to read in initial guess wfn. Below is my input:; ```; memory 4000 mb; molecule mol {; 0 3; 	O 1.09800 -0.01685 0.05354; 	O 2.24893 -0.01685 0.05354; }; set basis 6-31g*; set puream false; set reference uhf; set scf_type direct; set guess read; e, wfn = energy('scf', molecule=mol, return_wfn=True, restart_file=""./psi-wfn.npy"") ; molden(wfn, 'psi4-out.molden'); wfn.to_file('psi-wfn-new'); ```; But it does not seem to use the guess wfn (psi-wfn.npy) and still need 12 cycles to converge (I kept the same basis set and method in this test).; ```; SCF Guess: Superposition of Atomic Densities via on-the-fly atomic UHF.; ```. I also did a comparison test where I have these two subsequential jobs in the same input file, and I found the second job loaded the wfn file from the previous job. Do I need to change the naming of the wfn file to a specific format? Or does psi4 currently support reading .npy (or other types of the wfn files) from different jobs? Thanks in advance for you help!. Best,; Chenru",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1936:592,test,test,592,https://psicode.org,https://github.com/psi4/psi4/issues/1936,2,['test'],['test']
Testability,"Hi,. I am running Psi4 on Microsoft Azure. We have a 32 CPU and 128 GB of memory for running our workflow Ubuntu 20.04. When I run our code I get for optimizing `psi4.optimize` I get an initial segmentation fault. Python version 3.7, and psi4 version 1.7. It's odd because with . psi4.set_memory('128GB'); psi4.get_memory(). I can see psi4 has that allocated memory. When I run:. `psi4 --test`. ```; /_pytest/config/__init__.py"", line 620, in _importconftest; assert mod not in mods; AssertionError; ```. This gets returned. What is going on here, any hints?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3154:388,test,test,388,https://psicode.org,https://github.com/psi4/psi4/issues/3154,3,"['Assert', 'assert', 'test']","['AssertionError', 'assert', 'test']"
Testability,"Hi,. I am trying to install psi4 from source, as I need one feature recently added in psi4.; I am working on MacOS but uses GNU compiler (v8.3.0) because I don't manage to make it work with clang, and I'm usually always using GNU anyway. After several trial and error, I manage to build the code with the following CMake options:. cmake -H. -Bobjdir -DCMAKE_CXX_FLAGS=""-march=native"" -DOpenMP_LIBRARY_DIRS=/opt/intel/lib. Once built, I tried the ctest command to see if everything was working, but all tests fail with the error that libiomp5 seems to not be found. However, I have the following libraries in /opt/intel/lib:; libiomp5.a; libiomp5.dylib; libiomp5_db.dylib; libiompstubs5.a; libiompstubs5.dylib. Here is the error output for the test:; ```; 252/448 Testing: nbody-convergence; 252/448 Test: nbody-convergence; Command: ""/usr/local/bin/python3"" ""/Users/bsenjean/Documents/Git_repositories/psi4/tests/runtest.py"" ""/Users/bsenjean/Documents/Git_repositories/psi4/tests/nbody-convergence/input.dat"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/testresults.log"" ""false"" ""/Users/bsenjean/Documents/Git_repositories/psi4"" ""false"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/tests/nbody-convergence/output.dat"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/bin/psi4"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/share/psi4"" ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/""; Directory: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/tests/nbody-convergence; ""nbody-convergence"" start time: Apr 16 15:44 CEST; Output:. Traceback (most recent call last):; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Library not loaded: @rpath/libiomp5.dylib; Referenced from: /Users/bsenjean/Documents/Git_repositories/ps",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870:502,test,tests,502,https://psicode.org,https://github.com/psi4/psi4/issues/1870,6,"['Test', 'test']","['Test', 'Testing', 'test', 'tests']"
Testability,"Hi,. I encountered the following error message after I did the --test after installation. ""_ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_addons.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_dft_benchmarks.py _; 'scf' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_fcidump_energy.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_molecule_to_string.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_psi4.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_qcvars.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_solvers.py _; 'unittest' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_tdscf_excitations.py _; 'unrestricted' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_tdscf_products.py _; 'unittest' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_vector.py _; 'quick' not found in `markers` configuration option; _ ERROR collecting envs/p4env/lib/python3.7/site-packages/psi4/tests/test_vibanalysis.py _; 'quick' not found in `markers` configuration option; "". I am wondering what the issues are, and if the issues are just with the test files. Thanks. JJ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1902:65,test,test,65,https://psicode.org,https://github.com/psi4/psi4/issues/1902,13,['test'],"['test', 'tests']"
Testability,"Hi,. I just started to use PSI4 and wanted to test whether my installation is able to work with CFOUR. When running PSI4 with the following input:. ```. #!CFOUR test. molecule {; O; H 1 R; H 1 R 2 A. R=0.958; A=104.5; }. set {; cfour_CALC_level=CCSD(T); cfour_BASIS=AUG-PVQZ; cfour_SCF_CONV=12; cfour_CC_CONV=12; }. energy(‘cfour’); ```. Psi4 is complaining about the basis set:. QcdbException BasisSetNotFound: BasisSet::construct: Unable to find a basis set for atom 1 for key BASIS among:; Shell Entries: [‘O’]; Basis Sets: [(’(AUTO)’, ‘(AUTO)’, None)]; File Path: /scr/tobias/psi.1379622…cfour.14c28cc5, /scr/tobias/psi.1379622…cfour.14c28cc5, /xstorage/tobias/bin/psi4/share/psi4/basis; Input Blocks:. Traceback (most recent call last):; File “/xstorage/tobias/bin/psi4/bin/psi4”, line 338, in; exec(content); File “”, line 31, in; File “/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/psi4/driver/driver.py”, line 501, in energy; wfn = procedures[‘energy’][lowername](lowername, molecule=molecule, **kwargs); File “/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/psi4/driver/procrouting/interface_cfour.py”, line 185, in run_cfour; cfour_infile.write(write_zmat(lowername, dertype, molecule)); File “/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/psi4/driver/procrouting/interface_cfour.py”, line 461, in write_zmat; qbs = core.BasisSet.build(molecule, “BASIS”, core.get_global_option(‘BASIS’)); File “/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/psi4/driver/p4util/python_helpers.py”, line 85, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(mol.to_dict(),; File “/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/psi4/driver/qcdb/libmintsbasisset.py”, line 696, in pyconstruct; bs, msg, ecp = BasisSet.construct(parser, mol,; File “/xstorage/tobias/bin/psi4/lib//python3.8/site-packages/psi4/driver/qcdb/libmintsbasisset.py”, line 918, in construct; raise BasisSetNotFound(f’BasisSet::construct: Unable to find a basis set for atom {at + 1} fo",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2608:46,test,test,46,https://psicode.org,https://github.com/psi4/psi4/issues/2608,2,['test'],['test']
Testability,"Hi,. I tried to install release 1.0 from source. The setup script that configures the installation stops with some errors (the entire log of the configuration attempt is at the bottom of this post). Errors:. ```. CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:9 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Ds.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:10 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:134,log,log,134,https://psicode.org,https://github.com/psi4/psi4/issues/581,12,"['log', 'test']","['log', 'tests']"
Testability,"Hi,; could you take a look at the attached runs. The tar.gz file includes three geometry optmmization jobs of the same molecule from three different starting conformations. They all fail on our cluster due to memory issues. The cluster is using cgroups. I am asking slurm for 10gb and specifying ```memory 8.0 Gb```. Two of the jobs are have the following error message (rec19_4405620.log, rec284_4405895.log):; ```slurmstepd: error: Detected 1 oom-kill event(s) in step 4405620.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler. ```. while the third has this error (rec24_4405625.log):; ```Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4-multiout_1550197239473/work/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::tocwrite(unsigned long); ```. - One job (rec284_pid139597.out) was killed before the first scf even started.; - the other two were killed during the first gradient evaluation (rec19_pid139597.out, rec24_pid139597.out) . These are just three jobs out of 500 similar ones that failed. I picked them to show a couple of divers failures. The input files are included as well (*.dat).; I tried the same thing with B3LYP and it worked.; Psi4 used: ```Psi4 1.3rc2```. Any ideas?; Thanks,; Alberto; [psi4.wb97.tar.gz](https://github.com/psi4/psi4/files/3040711/psi4.wb97.tar.gz)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1590:385,log,log,385,https://psicode.org,https://github.com/psi4/psi4/issues/1590,3,['log'],['log']
Testability,"History contamination aside, the need to ""fix"" the new frozen core and ECP test indicates that some other commit in the last few days has **changed** the computed energies for this case. I strongly recommend we figure out what the cause of this change is before pulling in. Oddly enough, it looks like #1456 was merged before Peter's last commit that passed started running. I'm assuming that's a perfect alibi for #1456, which was going to be my prime suspect otherwise.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-452654324:75,test,test,75,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-452654324,1,['test'],['test']
Testability,"Hmm, I got an ADIIS error in windows (on a pytest) for my tests. Is this to be expected?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2550#issuecomment-1104634251:58,test,tests,58,https://psicode.org,https://github.com/psi4/psi4/pull/2550#issuecomment-1104634251,1,['test'],['tests']
Testability,"Hmm, I'm struggling to get my tests to give me a good agreement. From the [original publication](http://dx.doi.org/10.1007/s00214-005-0681-9) for the cc-pvdz-PP pseudopotentials for the Cu (and other) metals, the ionisation energy of Cu should be 165.26 kcal/mol with CCSD(T). In Gaussian 09, with the basis set downloaded from EMSL, I get an energy of 165.75 kcal/mol, which I suppose is reasonable. In Psi4, I get an energy of 166.02 kcal/mol. In case of Au ionisation energy, the difference (200.23 kcal/mol in the paper, 202.92 kcal/mol in Psi4) is more than 1%. I'm quite stumped. If anyone has any idea what's going on, please let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/937#issuecomment-376531582:30,test,tests,30,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-376531582,1,['test'],['tests']
Testability,"Hmm, can't test because I haven't pulled the latest rebase, but maybe props4 should have _only_ `quicktests`, not both `shorttests;quicktests`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235154773:11,test,test,11,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235154773,1,['test'],['test']
Testability,"Hmm, more inclined to trust qchem and libxc here. The old Psi4 probably handled singularities in a different way. I think I’m ok with these differences. . -Daniel Smith; Sent from my iPhone. . > On Feb 11, 2018, at 14:13, PeterKraus <notifications@github.com> wrote:; > ; > @PeterKraus commented on this pull request.; > ; > In tests/libxc/dft-water/input.dat:; > ; > > + 'wB97': -76.3680050769001, #TEST; > +'HCTH120': -76.37568880282406, #TEST; > + 'dlDF': -76.8428069903893, #TEST; > + 'PBE0': -76.30113068157736, #TEST; > + 'B97-1': -76.36001872648792, #TEST; > + 'PW91': -76.35555307829662, #TEST; > + 'B97-D': -76.34490642131334, #TEST; > + 'M05': -76.3495817363072, #TEST; > + 'B3LYP': -76.38509296980465, #TEST; > +'HCTH407': -76.37515280900291, #TEST; > +'HCTH147': -76.37958046443578, #TEST; > + 'SOGGA': -75.97737386477169, #TEST; > + 'B97-2': -76.35924563701468 #TEST; > +} #TEST; > +; > +for func in qchem_data.keys(): #TEST; > I've tried implementing SOGGA, however there's a problem:; > ; > Water test:; > SOGGA Psi4 dev: -75.9775599; > SOGGA Psi4 1.0: -75.9773739; > SOGGA Q-Chem: -75.9775523; > ; > My implementation comfortably passes against Q-Chem, but doesn't pass the tight criterium compared to old Psi4.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/880#issuecomment-365470158:328,test,tests,328,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-365470158,17,"['TEST', 'test']","['TEST', 'test', 'tests']"
Testability,"Hmm, the build with internal Boost failed for other reasons. Nothing was printed to STDOUT, but the `$build-dir/CMakeFiles/CmakeError.log` file contains:. ```; Determining if the function MKL_Free_Buffers exists failed with the following output:; Change Dir: /scratch/ajstewart/spack-stage/spack-stage-HKaV_0/psi4-0.5/spack-build/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/gmake"" ""cmTC_13b4e/fast""; /usr/bin/gmake -f CMakeFiles/cmTC_13b4e.dir/build.make CMakeFiles/cmTC_13b4e.dir/build; gmake[1]: Entering directory `/scratch/ajstewart/spack-stage/spack-stage-HKaV_0/psi4-0.5/spack-build/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_13b4e.dir/CheckFunctionExists.c.o; /blues/gpfs/home/software/spack/lib/spack/env/gcc/gcc -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -DCHECK_FUNCTION_EXISTS=MKL_Free_Buffers -o CMakeFiles/cmTC_13b4e.dir/CheckFunctionExists.c.o -c /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/cmake-3.5.2-vxtbzsxomc5qwe4axqm2nog2bpy5v4ya/share/cmake-3.5/Modules/CheckFunctionExists.c; Linking C executable cmTC_13b4e; /blues/gpfs/home/software/spack/opt/spack/linux-x86_64/gcc-6.1.0/cmake-3.5.2-vxtbzsxomc5qwe4axqm2nog2bpy5v4ya/bin/cmake -E cmake_link_script CMakeFiles/cmTC_13b4e.dir/link.txt --verbose=1; /blues/gpfs/home/software/spack/lib/spack/env/gcc/gcc -std=c99 -DRESTRICT=__restrict__ -DFUNDERSCORE=1 -fPIC -fopenmp -DCHECK_FUNCTION_EXISTS=MKL_Free_Buffers CMakeFiles/cmTC_13b4e.dir/CheckFunctionExists.c.o -o cmTC_13b4e -rdynamic; CMakeFiles/cmTC_13b4e.dir/CheckFunctionExists.c.o: In function `main':; CheckFunctionExists.c:(.text+0x15): undefined reference to `MKL_Free_Buffers'; collect2: error: ld returned 1 exit status; gmake[1]: *** [cmTC_13b4e] Error 1; gmake[1]: Leaving directory `/scratch/ajstewart/spack-stage/spack-stage-HKaV_0/psi4-0.5/spack-build/CMakeFiles/CMakeTmp'; gmake: *** [cmTC_13b4e/fast] Error 2; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/411#issuecomment-226015782:134,log,log,134,https://psicode.org,https://github.com/psi4/psi4/issues/411#issuecomment-226015782,1,['log'],['log']
Testability,"Hmm, there seems to be an issue with temporary files being left behind in the `energy` and `gradient` calls if they're not routed through the `cbs_gufunc` routines. If I call `clean()` in between the failing tests [like so for `cbs-xtpl-energy`](https://github.com/psi4/psi4/files/1886155/cbs-xtpl-energy-mod.txt), the test passes fine. `_cbs_gufunc()` calls `clean()` for single calls here:; https://github.com/psi4/psi4/blob/c1bb2fef750fc7a214fd873f8a7c095780017bf9/psi4/driver/driver_cbs.py#L1571-L1580",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379446318:208,test,tests,208,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379446318,2,['test'],"['test', 'tests']"
Testability,"Hmm, well thats interesting. Would you mind running the boroxine test case with the DF-MP2 module and post the result? Best way to access this module is to simply request 'energy('MP2')`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/408#issuecomment-225929051:65,test,test,65,https://psicode.org,https://github.com/psi4/psi4/issues/408#issuecomment-225929051,1,['test'],['test']
Testability,"Hmmm, people should double check this list.... it may be that we have a; useful feature and nobody bothered to write a test case for it (development; of the test cases was not done in a systematic fashion...). In particular; @lothian and @fevangelista should check that these bits really are; extra/obsolete. On Mon, Nov 21, 2016 at 10:37 PM, Lori A. Burns notifications@github.com; wrote:. > I cleared out all the library files on the list, and they didn't put up a; > fight. Doing a full testsuite now.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/issues/525#issuecomment-262139161, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9Qdk9MUAdFAT5TwLyNOX22XiVbROAWks5rAmNtgaJpZM4K40wH; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/525#issuecomment-262319020:119,test,test,119,https://psicode.org,https://github.com/psi4/psi4/issues/525#issuecomment-262319020,3,['test'],"['test', 'testsuite']"
Testability,"Hmmm. The fnocc2 can be explained by the following diff.... ```; -energy('g2'); -refg2 = -76.332048016380 #TEST; -refgibbs = -76.349644827450 #TEST; +energy('g2',dertype=1); +refg2 = -76.332048079709 #TEST; +refgibbs = -76.349644891507 #TEST; ```. that was part of my last set of commits. I updated the reference values to reflect that I'd switched to analytic Hessians. Then when I committed it, I realized that analytic Hessians require angular momentum beyond what Travis can handle, so I switched back to finite differences but forgot to roll back the reference values. Feel free to revert the reference values, and that'll be fine. The other two problems appear to be a seg fault, so I'll try to check out your changes and see if I can reproduce. Sorry for the hassle.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235102762:107,TEST,TEST,107,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235102762,4,['TEST'],['TEST']
Testability,"Holger, very glad you are taking this on!. On Fri, Apr 5, 2019, 2:32 AM Holger Kruse <notifications@github.com> wrote:. > Description; >; > This *work-in-progress* PR implements standard grid pruning techniques,; > where one assumes that the electron density is largely isotropic close to; > the atomic centre and thus coarse grids are sufficient. Typically the; > atomic integration sphere is divided into several (3-4) regions where the; > outer region gets the most accurate grid and the grid get step-wise more; > coarse towards the inner region(s).; >; > Additionally this PR changes the Bragg-Slater (BS) radii and completes the; > Treutler-Ahlrichs integration code with the recommended mapping values. Old; > radii were of unknown origin.; >; > *Because of the updated BS radii, this PR will impact the total energies; > of any DFT calculation and can change how many grid points are generated; > even without pruning.* (11/33 DFT tests fail); > Todos; >; > Notable points (developer or user-interest) that this PR has or will; > accomplish.; >; > - updated BS radii and extended to 104 elements; > - implementation of missing Treutler-Eta mapping parameter; > - DFT_PRUNE_TYPE keyword:; > - Treutler grid pruning (DFT_PRUNE_TYPE=TREUTLER); > - a more robust grid pruning (DFT_PRUNE_TYPE=ROBUST); > - old pruning using a function (DFT_PRUNE_TYPE=FUNCTION); > - modified Becke mu from Ochsenfeld for smoother integration (however; > no time savings); > - possibility to scale Treutler-Etas to better treat diffuse basis sets; > - better print out of options; > - testing and error overview; > - option to properly disable all pruning (currently only indirect way); >; > Questions; >; > - How to C++? Explicit guidance or help is welcome.; > - All the very tight DFT and VV10 tests break or will break. How to; > 'solve' that?; > - Do we want to be able to switch between old and new BS radii (as; > expert-only option)?; > - DFT_PRUNING_SCHEME re-work to not have DFT_PRUNE_TYPE as competing; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922:939,test,tests,939,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-480256922,1,['test'],['tests']
Testability,"Hooray, that looks great. Skipped or xfailed is no problem (just how we handle testing optional dependencies). Outright failed is a problem, but I don't see any of those. I think you're good to go. I wish I understood clearly what was causing your psi4conda problem, but that's awkward to debug. I suspect interference in python path btwn active python (in anaconda) and active psi4 (in psi4conda).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875260933:79,test,testing,79,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875260933,1,['test'],['testing']
Testability,"Hooray, we finally have clean CI and tests on this combo dfocc+remp PR!. Now, I'll break off `occ` as the first piece for review. . I think I favor `REMP` to `REMP2` in QCVariables, just to be specific.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2633#issuecomment-1200053455:37,test,tests,37,https://psicode.org,https://github.com/psi4/psi4/pull/2633#issuecomment-1200053455,1,['test'],['tests']
Testability,"How about diverting to findif, like PCM? This'll need changing for DDD, but at least we'll notice. (Note that PR not in self-consistent state at present. test needs replacing.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2200#issuecomment-869848956:154,test,test,154,https://psicode.org,https://github.com/psi4/psi4/pull/2200#issuecomment-869848956,1,['test'],['test']
Testability,"How did these evade me? Everything should be calling `BasisSet::pyconstruct`.; - [x] @fevangelista There's one in cubeprop (https://github.com/psi4/psi4/blob/master/src/lib/libcubeprop/csg.cc#L321). Does it need to endure? And is it related to the ""ESP task requires"" note in file:///Users/loriab/linux/psihub/publicface/psi4/objdir/doc/sphinxman/html/cubeprop.html .; - [x] hf.cc I don't think https://github.com/psi4/psi4/blob/master/src/lib/libscf_solver/hf.cc#L1529 ever gets called, but I should test. This one actually is still active, but I switched it over in 58db333; - [x] dftensor.cc Anyone know if this gets called regularly? at all? https://github.com/psi4/psi4/blob/master/src/lib/lib3index/dftensor.cc#L78",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/285:501,test,test,501,https://psicode.org,https://github.com/psi4/psi4/issues/285,1,['test'],['test']
Testability,"How did you come to be running those as none are in the test suite? `large-atoms` is waiting on ECP tech. `min-input` was essentially replaced by the stdsuite. The latter two can't run outside of ctest anyways, and I don't think we want to encourage the sowreap capability.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2234#issuecomment-876570990:56,test,test,56,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-876570990,1,['test'],['test']
Testability,How fares this? Can tests be added (even integral-level ones like https://github.com/psi4/psi4/blob/master/tests/mints3/input.dat if that's where the development is at)?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1081#issuecomment-583591202:20,test,tests,20,https://psicode.org,https://github.com/psi4/psi4/pull/1081#issuecomment-583591202,2,['test'],['tests']
Testability,"How timely. Unless he's really quick with a test case, I think sep PR. It definitely qualifies as bugfix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/978#issuecomment-385631564:44,test,test,44,https://psicode.org,https://github.com/psi4/psi4/pull/978#issuecomment-385631564,1,['test'],['test']
Testability,"However, now my test run crashes with the message below. Is it trying to write a file in a directory where I don't have permissions or so?. Traceback (most recent call last):; File ""/home/apps/psi/psi4conda/bin/psi4"", line 248, in <module>; exec(content); File ""<string>"", line 31, in <module>; File ""/home/apps/psi/psi4conda/lib//python3.6/site-packages/psi4/driver/driver.py"", line 460, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/apps/psi/psi4conda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 860, in select_ccsd_t_; return func(name, **kwargs); File ""/home/apps/psi/psi4conda/lib//python3.6/site-packages/psi4/driver/procrouting/proc.py"", line 2197, in run_ccenergy; core.cctransort(ref_wfn). RuntimeError: ; Fatal Error: PSIO Error; Error occurred in file: /scratch/psilocaluser/conda-builds/psi4_1495014881710/work/psi4/src/psi4/libpsio/error.cc on line: 129; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::psio_error(unsigned int, unsigned int); psi::PSIO::rw(unsigned int, char*, psi::psio_address, unsigned long, int); psi::psio_write(unsigned int, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). *** Psi4 encountered an error. Buy a developer more coffee!; *** Resources and help at github.com/psi4/psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1557#issuecomment-467172255:16,test,test,16,https://psicode.org,https://github.com/psi4/psi4/issues/1557#issuecomment-467172255,1,['test'],['test']
Testability,"Hrm, I was under the impression that none of the dmrg tests are being exercised by `quicktests`, so I run the dmrg tests in addition. Granted, this does not strictly have anything to do with `quicktests` I guess, but I think the dmrg tests should either interface with `quicktests` or at least be of the same order of magnitude.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/474#issuecomment-249299134:54,test,tests,54,https://psicode.org,https://github.com/psi4/psi4/issues/474#issuecomment-249299134,3,['test'],['tests']
Testability,"Hrm, I would've sworn it's refblas, but after checking it seems the Debian chemps-1.7 build pulled in ATLAS (base version). It's still curious that this would be the only failing testcase if there's an issue with the linear algebra packages...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-222316099:179,test,testcase,179,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-222316099,1,['test'],['testcase']
Testability,"Huh, what about that - the tests pass now, even though functionally the code should be the same as before. So, this is ready to be merged.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-450631970:27,test,tests,27,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-450631970,1,['test'],['tests']
Testability,"I *think* I have a version that maintains the nice printing functionality (and shoves the necessary info into a struct, and actually uses the nicer `LebedevGridMgr::findOrderByNPoints` function and other `LebedevGridMgr` functions) but I can't actually test if this builds until I get home due to #reasons. I'll shove it upstream on my local branch and see if it breaks in the test builder.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2736#issuecomment-1270690643:253,test,test,253,https://psicode.org,https://github.com/psi4/psi4/pull/2736#issuecomment-1270690643,2,['test'],['test']
Testability,"I Driver Interface (MDI)](https://github.com/MolSSI/MDI_Library). MDI is an effort of [The MolSSI](https://molssi.org/) to improve and standardize the process of interoperating codes within the computational molecular sciences domain. In particular, MDI supports interoperability within a driver-engine paradigm, in which a driver code controls the high-level operations of one or more engine codes, orchestrating complex calculations like QM/MM or advanced sampling. This PR provides all functionality required for Psi4 to act as an MDI engine. This makes it possible for external codes to exercise control over Psi4 in a manner similar to what is possible using Psi4’s existing API (albeit with a much smaller subset of the functionality), but with the advantage of cross-code generality (all MDI commands are defined by [The MDI Standard](https://molssi.github.io/MDI_Library/html/mdi_standard.html)) and the option of fast inter-code communication via the MPI or TCP/IP methods (selected by the user at runtime). The PR adds [The MDI Library](https://molssi.github.io/MDI_Library/html/index.html), which handles the details of inter-code communication, as an external dependency. The MDI Library compiles with CMake and has no additional requirements, although it will link to an MPI library if one is found. ## Todos; Notable points (developer or user-interest) that this PR has or will accomplish.; - [x] Include the MDI Library as an external dependency; - [x] Add functionality for Psi4 to respond to MDI commands as defined by [The MDI Standard](https://molssi.github.io/MDI_Library/html/mdi_standard.html); - [x] Add the --mdi command-line option, which causes Psi4 to run as an MDI engine.; - [ ] Document the use of Psi4 as an MDI Engine. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1676:1866,Test,Tests,1866,https://psicode.org,https://github.com/psi4/psi4/pull/1676,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"I _suspect_ I've found the bug. The culprits are lines like [these](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/occ/t2_2nd_general.cc#L197-L203). I'm going to give a simplified presentation of the theory to explain why this particular bug caused T2 convergence problems but no other obvious problems:; In OMP3 theory, you write a Lagrangian energy functional, which is the OMP2 Lagrangian energy functional plus additional terms. In OMP2.5, you multiply those new terms by a factor of 1/2. The terms enforcing the first order amplitude constraint are all in the OMP2 part of the Lagrangian, and the terms enforcing the second order amplitude constraint are all in the additional terms of the Lagrangian. Now, the OMP2.5 in `occ` is the OMP3 implementation _except_; (1) additional terms not containing second order amplitudes are explicitly halved, and; (2) additional terms containing second order amplitudes are implicitly halved by halving the second order T2 amplitudes. Let's imagine we got the exactly right second order T2 amplitudes. We then halve them, per step 2 above. On the next iteration, of course we're going to find our second order amplitudes are off!. I've made the changes on a local branch. OMP3 tests all pass, but `omp2p5-grad2` has changed in the fifth decimal place, which is enough to cause a failure. This could indicate a problem with my changes, or that there was error in the test gradients because the second order amplitudes were not well converged. While a finite difference test should resolve this, I can't converge the relevant OMP equations in the current Psi implementation sufficiently tightly to test... I'm going to hack out a Psi4Numpy implementation to settle the matter. In the meantime, obligatory ping of @bozkaya in case I've missed something.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1808#issuecomment-583900866:1228,test,tests,1228,https://psicode.org,https://github.com/psi4/psi4/issues/1808#issuecomment-583900866,4,['test'],"['test', 'tests']"
Testability,I added a global `SCREENING` that can either be `SCHWARZ` or `CSAM` and is recognized by the JK objects. There's also an extra test to compare scf energies.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1499#issuecomment-497372547:127,test,test,127,https://psicode.org,https://github.com/psi4/psi4/pull/1499#issuecomment-497372547,1,['test'],['test']
Testability,I added a short gradient test as requested and the DOI I wanted.; From my side this is ready.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1320#issuecomment-444155213:25,test,test,25,https://psicode.org,https://github.com/psi4/psi4/pull/1320#issuecomment-444155213,1,['test'],['test']
Testability,"I added some experimental changes to `electricfield.{cc,h}` in order to compute; field integrals (for the induction operator) and electric field expectation values (needed to solve for induced moments) for multiple sites/coordinates at once. Even though I don't like the code I implemented, it gives massive performance improvements.; In my tests (Python code is uploaded [here](https://gist.github.com/maxscheurer/4736a100ff5de12190ef27f7bc2eaade)), I computed integrals at 2000 random points for Water/cc-pVQZ, for which I get a 25x speed-up compared to the existing implementation. EFP would also benefit from these performance improvements. Since the code is rather ugly at the moment, I'm thankful for any suggestions on how to proceed from here.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1401#issuecomment-502876555:341,test,tests,341,https://psicode.org,https://github.com/psi4/psi4/pull/1401#issuecomment-502876555,1,['test'],['tests']
Testability,"I added tests that check ccsort/transqt2 give the same results as other tests provided they are installed. These tests will not fiddle with the `run_cctransort` option if pasture is not installed. I also cleaned up some of my fixup commits since the twin PR has been closed. . The last things I need to do is finalize the pasture install instructions to go in the PastureNotFoundError message, and then this is ready to go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/534#issuecomment-265466569:8,test,tests,8,https://psicode.org,https://github.com/psi4/psi4/pull/534#issuecomment-265466569,3,['test'],['tests']
Testability,I added the finite difference test and I documented the function.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2389#issuecomment-1004063072:30,test,test,30,https://psicode.org,https://github.com/psi4/psi4/pull/2389#issuecomment-1004063072,1,['test'],['test']
Testability,I added various error statistics over the S22 benchmark set.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-495132122:46,benchmark,benchmark,46,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-495132122,1,['benchmark'],['benchmark']
Testability,"I agree that `ROBUST` should be the default. We might want to leave the default to no pruning and then make an issue reviewing the timings, accuracy, and change log notes before switching the default over. Whenever we change the results the DFT code obtains even if minor I do get a little nervous.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-495416288:161,log,log,161,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-495416288,1,['log'],['log']
Testability,"I agree that `cclambda` should honor the user's `r_convergence` choice, but the default settings we chose are not to avoid breaking tests but because tighter settings are wholly unnecessary (and often exceedingly difficult to achieve) for transition properties. The `cc55` test case just revealed the problem on certain hardware.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2520#issuecomment-1089609984:132,test,tests,132,https://psicode.org,https://github.com/psi4/psi4/issues/2520#issuecomment-1089609984,2,['test'],"['test', 'tests']"
Testability,I agree that a CMake Libint1 build failed to be least common denominator for downstream on two fronts: (1) no `.pc` files and (2) no `libr12` library. I've fixed the first one Libint-side. Second I don't particularly have time for and can't do anyways until someone volunteers to test the resulting `libr12`. The one-line patch on the packager side to use the libtool build with Psi4 is above. Closing.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1589#issuecomment-495759282:280,test,test,280,https://psicode.org,https://github.com/psi4/psi4/issues/1589#issuecomment-495759282,1,['test'],['test']
Testability,"I agree that option B is the best. The effect of the fix will be very minor. This can be easily tested by comparing to DCT code with conventional integrals (and we have done this in the past). Also, current version of the code should recover the exact DCT energy and gradient when using a very large auxiliary basis set.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1579#issuecomment-474901373:96,test,tested,96,https://psicode.org,https://github.com/psi4/psi4/issues/1579#issuecomment-474901373,1,['test'],['tested']
Testability,"I agree that with no charges the function that I changed should not be called. I am running the benchmark on a shared cluster, so the differences in the speedup with no charges reflect the uncertainty in the benchmark. Although the pairs of columns with and without charges are run on the same node in the same job. I ran the benchmark again using `schedule(dynamic)` to directly compare to `schedule(guided)` copied from my last comment. Cores | Guided, no charges | Guided, with charges | Dynamic, no charges | Dynamic, with charges; ---- | ---- | ---- | ---- | ----; 1 | 1.00 | 1.00 | 1.00 | 1.00; 2 | 1.67 | 1.29 | 1.60 | 1.26; 4 | 2.72 | 2.18 | 2.66 | 2.07; 8 | 3.92 | 3.57 | 3.74 | 3.40; 16 | 4.87 | 5.04 | 4.68 | 5.06; 32 | 5.80 | 7.21 | 5.11 | 7.16. It looks like `dynamic` is slightly lower speedup than `guided`, but the two results are probably indistinguishable given the precision of my benchmark. This might also depend on the system and basis set used. The heaviest atom in my system is an oxygen with a jun-cc-pVDZ basis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1946#issuecomment-656907868:96,benchmark,benchmark,96,https://psicode.org,https://github.com/psi4/psi4/pull/1946#issuecomment-656907868,4,['benchmark'],['benchmark']
Testability,"I agree with @andysim --- Rollin's bug was only uncovered with debug flags; turned on, so it makes sense to retain at least one debug build. On Thu, Feb 11, 2016 at 8:56 AM, Andy Simmonett notifications@github.com; wrote:. > Thanks, @jgonthier https://github.com/jgonthier. Given that the Travis; > CI tests run every time somebody submits or merges a PR, we're going to be; > running that test a lot. If we don't see the problem again, it was probably; > just a strange artifact of the invalid read that was non-deterministic. If; > we keep seeing it after you have fixed that read, we probably just need to; > reduce the optimization level for that one routine. Either way, thanks for; > checking it.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/pull/237#issuecomment-182875337.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182877975:302,test,tests,302,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182877975,2,['test'],"['test', 'tests']"
Testability,"I agree with the point that the code should go through and report zeros, so; we can do database stuff, etc. I think the thermo code can easily be fixed for this (in fact Brandon has a; new version that has already been tested for atoms). Looks like the first; failure we're hitting is in finite differences. @psi-rking should give; that some thought. David. On Thu, Mar 31, 2016 at 11:31 PM, drhaney notifications@github.com wrote:. > Mac's Beer & Wine confirms that they will happily reserve gift cards for; > you at the register, and you developers need to do better if you want that; > beer.; > ; > Usually, a QC app 'fails' gracefully on atomic systems.; > By 'fail', I mean that it should: _handle stupid requests gracefully._; > ; > In practice, the app returns ZPE, Ethermal, Hthermal = 0.0,0.0,0.0, and a; > reasonable total entropy 30 < S <40 cal/mol-K. Granted, Stotal = Strans and; > may be of little value. The user adds in some Boltzmann kT multiples to; > internal E,H as needed.; > ; > Total energies and enthalpies of atoms are needed for calculating; > molecular enthalpies of formation by the atomization method. I want this; > because I'm writing composite method modules for Psi4 with the goal of; > replicating Gaussian and GAMESS results.; > ; > It may be invidious to point out that Gaussian, GAMESS, and Nwchem are all; > well-behaved on the atomic cases, but those applications are why I'm here.; > [rant on egregious software licenses and general dislike of Fortran; > redacted]; > ; > Next up: CCSD(T) and the H2 molecule, MP2 correlation energy of the; > hydrogen atom. (joke!); > Thanks to all.; > -drh; > ; > —; > You are receiving this because you commented.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/332#issuecomment-204230882",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/332#issuecomment-204388708:219,test,tested,219,https://psicode.org,https://github.com/psi4/psi4/issues/332#issuecomment-204388708,1,['test'],['tested']
Testability,"I agree, it'd be nice to catch those and warn ppl off from that feature of GBS format. In the existing logic https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasissetparser.py#L183-L184 is already catching only `<element symbol(s)> 0` through the zero near the end of https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasissetparser.py#L115. This would be a general (to all files read), not specific, catch, but if you change that `0` in [the regex](; https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasissetparser.py#L115) to `\d+` then add the below after https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/libmintsbasissetparser.py#L184, does that catch and provide better guidance?. ```; gbsint = int(atom_array.match(line).group(2)); if gbsint != 0:; raise ValidationError(""""""Gaussian94BasisSetParser::parse: Unsupported basis to atom by number assignment. Use ""assign"" statements as in https://github.com/psi4/psi4/blob/master/tests/mints2/input.dat : line %d: %s"""""" % (lineno, line)); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1270#issuecomment-455333178:103,log,logic,103,https://psicode.org,https://github.com/psi4/psi4/issues/1270#issuecomment-455333178,2,"['log', 'test']","['logic', 'tests']"
Testability,"I agree, may as well test. Here's a slight extension of your original problem input. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. def unaug_focal(func, label, **kwargs):; kwargs['scf_basis'] = kwargs.get('scf_basis', 'cc-pVQZ'); kwargs['scf_scheme'] = kwargs.get('scf_scheme', driver_cbs.xtpl_highest_1). kwargs['corl_wfn'] = kwargs.get('corl_wfn', 'mp2'); kwargs['corl_basis'] = kwargs.get('corl_basis', 'cc-pV[TQ]Z'); kwargs['corl_scheme'] = kwargs.get('corl_scheme', driver_cbs.corl_xtpl_helgaker_2). kwargs['delta_wfn'] = kwargs.get('delta_wfn', 'ccsd(t)'); kwargs['delta_wfn_lesser'] = kwargs.get('delta_wfn_lesser', 'mp2'); kwargs['delta_basis'] = kwargs.get('delta_basis', 'cc-pV[dT]Z'); kwargs['delta_scheme'] = kwargs.get('delta_scheme', driver_cbs.corl_xtpl_helgaker_2). if label == 'custom_function':; label = 'Unaug Focal'; return driver_cbs.cbs(func, label, **kwargs). ans = 0.0131014 #TEST; E_func = energy(unaug_focal, bsse_type=""nocp""); E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(ans, E_method_basis, 6, ""IE mtd/bas"") #TEST; compare_values(ans, E_cbs, 6, ""IE cbs"") #TEST; compare_values(ans, E_func, 6, ""IE func"") #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1119#issuecomment-410490928:21,test,test,21,https://psicode.org,https://github.com/psi4/psi4/pull/1119#issuecomment-410490928,5,"['TEST', 'test']","['TEST', 'test']"
Testability,I also experienced no change by trying that. Watching the build logs I noticed both ERD and LibInt are built. I do not recall this being the default behavior when I was using ERD about a year ago. Is it possible some of the CMake infrastructure changes caused this?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/171#issuecomment-133544184:64,log,logs,64,https://psicode.org,https://github.com/psi4/psi4/issues/171#issuecomment-133544184,1,['log'],['logs']
Testability,"I also got the Python frontends fixed, so libxc 5.1.0 should be good for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-754879190:73,test,testing,73,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-754879190,1,['test'],['testing']
Testability,I also ran a full test suite; nothing DFT related fails; ```; 	102 - cubeprop (Failed); 	103 - cubeprop-frontier (Failed); 	368 - cubeprop-esp (Failed); 	385 - psi4numpy-cphf (Failed); 	386 - psi4numpy-dfmp2 (Failed); 	387 - psi4numpy-rhf (Failed); 	388 - psi4numpy-rhf-gradient (Failed); 	389 - psi4numpy-rhf-hessian (Failed); 	390 - psi4numpy-fci (Failed); 	392 - python-energy (Failed); 	393 - python-curve (Failed); 	394 - python-pubchem (Failed); 	395 - python-mints9 (Failed); 	396 - python-mints2 (Failed); 	397 - python-cc54 (Failed); 	398 - python-3-index-transforms (Failed); 	399 - python-vibanalysis (Failed); 	400 - python-mints13 (Failed); 	401 - python-memdfjk (Failed); 	402 - json-v11-energy (Failed); 	403 - json-v11-gradient (Failed); 	404 - json-schema-1-energy (Failed); 	405 - json-schema-1-ghost (Failed); 	406 - json-schema-1-orient (Failed); 	407 - json-schema-1-throws (Failed); 	408 - json-schema-1-gradient (Failed); 	409 - json-schema-1-properties (Failed); 	469 - chemps2-scf-n2 (Failed); 	470 - chemps2-ci-h2o (Failed); 	471 - chemps2-caspt2-n2 (Failed); 	472 - chemps2-natural-orbital (Failed); 	473 - chemps2-caspt2-small (Failed); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1260#issuecomment-424435249:18,test,test,18,https://psicode.org,https://github.com/psi4/psi4/pull/1260#issuecomment-424435249,1,['test'],['test']
Testability,"I also tried reinstalling via executing the .exe file in my downloads directory and the same error pops up . ""C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.""",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875174721:132,test,test,132,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875174721,1,['test'],['test']
Testability,"I am beginning to think we should forgo Travis CI with debug and focus it solely on release builds. That's where differences between the generated binaries is going to differ the most. > Just would like to add that if we use travis, you basically must let all test cases pass before merging. This sounds great to me. We shouldn't allow code to be committed that potentially causes problems for users using compiler combinations we do not routinely use. Initially, we may have many random issues arising such as the possible memory issue in the stability code but it's better for the code and the user to investigate and fix them. > Extra fun to debug as we do not have a compiled gcc 5.0 around. This is a downside of travis. No, this is an upside of Travis CI. I have an Ubuntu box that already has gcc 5 installed. If needed, I can run Psi4 through it and Valgrind. . It's also great to have other resources for testing Psi with. We do have the [testboard](https://testboard.org/cdash/index.php?project=Psi) where additional compiler combinations can be added. However, the testboard is not holding anyone accountable to fixing the code. I propose Travis CI release builds with the following compiler versions:; - clang: 3.5, 3.6, 3.7, 3.8; - gcc: 4.8, 4.9, 5.2. clang 3.5 was released on September 3, 2014 and gcc 4.8.0 was released on March 22, 2013.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182861777:260,test,test,260,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182861777,5,['test'],"['test', 'testboard', 'testing']"
Testability,"I am currently building a high throughput program to calculate various one electron properties of large sets of molecules. . I am using psi4 1.81 and interacting with the program via the python API. First I optimise the geometry using the QCEngine wrapper, and then run a single point calculation with psi4.energy() where I return the wfn object and run psi4.oeprop(wfn). I am currently using the PBE0/def2-TZVPPD with the DDX solvent model DDX-4.0 level of theory. However, I began noticing the calculation would hang at a certain point, regardless of the level of theory and usage of the ddx solvent model (but seemed to hang quicker with more expansive methods), where the calculation would indefinitely stop at this stage:. ```; ==> Primary Basis <==. Basis Set: DEF2-TZVPPD; Blend: DEF2-TZVPPD; Number of shells: 136; Number of basis functions: 358; Number of Cartesian functions: 398; Spherical Harmonics?: true; Max angular momentum: 3; ```. I suspected a memory leak so I logged with memory usage at each stage of the calculation with:. ```; def log_memory_usage():; process = psutil.Process(); print(f""Memory Usage: {process.memory_info().rss / 1024 ** 2} MB"", flush=False); ```. When applying this function to this section of my code:. ``` ; print('memory use before E wfn'); log_memory_usage() ; E, wfn = psi4.energy(f'{settings.method}/{settings.basis}', molecule = molecule_psi4, return_wfn = True); print('memory use after E wfn'); log_memory_usage() ; psi4.oeprop(wfn,""GRID_ESP"",""GRID_FIELD"",""MULLIKEN_CHARGES"", ""LOWDIN_CHARGES"", ""DIPOLE"",""QUADRUPOLE"", ""MBIS_CHARGES""); print('memory use after oeprop'); log_memory_usage() ; ``` ; The output to my file with the above logging was:. ```; memory use before E wfn; Memory Usage: 3715.3828125 MB; --; memory use after E wfn; Memory Usage: 3783.52734375 MB; --; memory use after oeprop; Memory Usage: 3802.50390625 MB; --; memory use before wfn interaction; Memory Usage: 3802.50390625 MB; memory use after wfn interaction; Memory Usage: 380",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3146:980,log,logged,980,https://psicode.org,https://github.com/psi4/psi4/issues/3146,1,['log'],['logged']
Testability,"I am currently testing out the ddx solvent model implementation (https://psicode.org/psi4manual/master/ddx.html) in my high throughput script. However, currently the DDX_SOLVENT_EPSILON option being ignored in favor of DDX_SOLVENT. . According to the manual, DDX_SOLVENT is ignored if DDX_SOLVENT_EPSILON is supplied. Initially I took this as meaning one could *just* supply the DDX_SOLVENT_EPSILON value directly. However, without supplying the DDX_SOLVENT field too, the calculation fails with `psi4.driver.p4util.exceptions.ValidationError: Required option 'DDX_SOLVENT' is missing.`. Hence, in my high throughput script I provided a placeholder in this field if the DDX_SOLVENT_EPSILON option is selected:. ```; #check if dialetric constant is specified or not; if settings.ddx_settings.epsilon is not None:; print('ddx numeric option'); psi4.set_options({""ddx"": ""true"", #supply a solvent here to see if epsilon then gets picked up; ""DDX_SOLVENT_EPSILON"": settings.ddx_settings.epsilon,; ""DDX_RADII_SET"": settings.ddx_settings.radii_set,; ""DDX_MODEL"": settings.ddx_settings.ddx_model,; ""DDX_SOLVENT"":""water""}) #without this calculation fails with psi4.driver.p4util.exceptions.ValidationError: Required option 'DDX_SOLVENT' is missing.; else:; print('ddx solvent option'); psi4.set_options({""ddx"": ""true"",; ""DDX_SOLVENT"": settings.ddx_settings.solvent,; ""DDX_RADII_SET"": settings.ddx_settings.radii_set,; ""DDX_MODEL"": settings.ddx_settings.ddx_model}); ```; However, when I run a testcase when inspecting the output file, the solvent_epsilon is printed out as 78.3553 not the test value 4 which I used in my test run. . It appears the issue lies in the if else statement in psi4/driver/procrouting/solvent/ddx.py, where the if statement core.has_option_changed(""DDX"", ""DDX_SOLVENT_EPSILON"") is not assigned as true (I added print statements to validate this):; ```; solvent = core.get_option(""DDX"", ""DDX_SOLVENT"").lower(); print(f'solvent option chosen is {solvent}') ; if core.has_option_changed(",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3119:15,test,testing,15,https://psicode.org,https://github.com/psi4/psi4/issues/3119,1,['test'],['testing']
Testability,"I am encountering a problem when doing CCSD(T)/aug-cc-pvtz single point calculations with ghost atoms.; Here is an example input python script:; ```; import psi4; geo = """"""; 1 1; N -0.319514960239 -0.379524306855 0.559765629138; C 0.352425639761 0.409233493145 -0.624276970862; H 0.896212339761 1.229129293145 -0.190264570862; H -0.369712060239 1.007481593145 -1.165777070862; H -0.938830632741 -1.202223388474 0.119295063837; H 0.486503344736 -0.886226229665 1.149670412527; H -0.828245898402 0.406267805382 1.174683175564; H 0.972884518932 -0.173541567396 -1.382567158105; @H 0.158794175371 0.181939104529 -0.283074336970; @H -0.134424730413 -0.162256050585 0.233613708927; """""". mol = psi4.geometry(geo); model = ""ccsd(t)/aug-cc-pvtz"". psi4.set_memory('13GB'). psi4.set_num_threads(8). psi4.core.set_output_file(""psi4_ccsdt.outp""). psi4.set_options({; }); e = psi4.energy(model, molecule=mol). print(e); ```. The SCF converges, but then the calculation crashes, with the following output at the end of the log file (I have attached the full log file to the issue.):; ```; Wfn Parameters:; --------------------; Wavefunction = CCSD_T; Number of irreps = 1; Number of MOs = 275; Number of active MOs = 275; AO-Basis = NONE; Semicanonical = false; Reference = RHF; Print Level = 1. IRREP # MOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A 275 0 9 0 266 0; Transforming integrals...; IWL integrals will be deleted.; (OO|OO)...; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 1; Constructing frozen core operators; Row and column block dimensions of A; (n = 1): 275 ; (n = 1): 275 ; Row and column block dimensions of B; (n = 1): 276 ; (n = 1): 275 ; Row and column block dimensions of C; (n = 1): 275 ; (n = 1): 275 ; Asym: 0, Bsym: 0, Csym: 0; Mismatch in index Ha = 0; ```. Additionally, the following error message is given:; ```; Traceback (most recent call last):; File ""/oasis/tscc/scratch/ebullvul/projects/POPC/timi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2916:1008,log,log,1008,https://psicode.org,https://github.com/psi4/psi4/issues/2916,2,['log'],['log']
Testability,"I am having some trouble with test case simint-scf5 failing, specifically in the singlet CUKS PK case. In principle, my changes should not have affected this test case, and so I wonder if it is a problem with the test case. I recall that at one time we had removed testing of CUKS because we found it to be numerically unstable and Rob wasn't able to remove the numerical instability. But we decided to leave in CUKS as a feature because it worked most of the time and therefore could be helpful to users. This particular test case is a bit strange ... we are testing O2 for a singlet with CUKS? While one *can* run CUKS on a singlet, this seems like a really odd thing to do... What seems to be happening is that the guess orbitals are core Hamiltonian, and they are high-spin open-shell. This being the case, the CUHF runs and happily leaves the computation high-spin open-shell. Then obviously the triplet state obtained has a different energy than the singlet state energy that is being compared. I am not sure why we are getting a high-spin open-shell guess, since the computation knows it's a singlet. Charge = 0; Multiplicity = 1; Electrons = 16; Nalpha = 8; Nbeta = 8. ==> Algorithm <==. SCF Algorithm Type is PK.; DIIS enabled.; MOM disabled.; Fractional occupation disabled.; Guess Type is CORE. ... Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u; DOCC [ 3, 0, 0, 0, 0, 2, 1, 1 ]; SOCC [ 0, 0, 1, 1, 0, 0, 0, 0 ]. @CUHF iter 1: -129.99407460698782 -1.29994e+02 3.58550e-01; @CUHF iter 2: -138.94369344094056 -8.94962e+00 1.91667e-01 DIIS; @CUHF iter 3: -149.19229734982372 -1.02486e+01 5.23276e-02 DIIS; @CUHF iter 4: -149.61401801756168 -4.21721e-01 8.25602e-03 DIIS; @CUHF iter 5: -149.62784456434520 -1.38265e-02 7.20728e-04 DIIS; @CUHF iter 6: -149.62803800931584 -1.93445e-04 1.87787e-04 DIIS; @CUHF iter 7: -149.62804359068420 -5.58137e-06 2.42248e-05 DIIS; @CUHF iter 8: -149.62804290255499 6.88129e-07 3.86408e-06 DIIS; @CUHF iter 9: -149.62804316316681 -2.60612e-07 2.79748e-07",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/738:30,test,test,30,https://psicode.org,https://github.com/psi4/psi4/issues/738,6,['test'],"['test', 'testing']"
Testability,"I am looking to update the failing dft test where absolute energies are tested. Looking for opinions and advice:. options:; * A) reduce the comparison thresholds, where necessary. Down to 5 or 6 (from 7 or even higher); * B) make new reference values using the new BS radii. Perhaps cleanest test history about the origin of the numbers and best for gradients; * C) a mixture of both. these `ctest -L dft` fail on my machine:; 157 - dft-grad-lr1 (Failed); 159 - dft-grad-lr3 (Failed); 167 - dft-grad-meta (Failed); 169 - dft-grad1 (Failed); 170 - dft-grad2 (Failed); 171 - dft-psivar (Failed); 173 - dft1 (Failed); 174 - dft-vv10 (Failed); 178 - dft-omega (Failed); 390 - dft-custom-mgga (Failed); 423 - dftd3-grad (Failed); 431 - pcmsolver-dft (Failed)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-494012739:39,test,test,39,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-494012739,3,['test'],"['test', 'tested']"
Testability,"I am new to Psi4 and quantum chemistry in general. The [PsiAPI tutorial](https://psicode.org/psi4manual/master/psiapi.html) is helpful in getting started, but doesn't mention use of `psi4.core.clean()`. I can't find any mention of this function in the docs, except [here](https://psicode.org/psi4manual/master/api/psi4.core.clean.html). A newbie like me may try to run two calculations in series. In my case, I got:; ```; Traceback (most recent call last):; File ""test.py"", line 47, in <module>; h2oi = energyFromGeometryFile('geometries/01.xyz', method=""ccsd""); File ""test.py"", line 27, in energyFromGeometryFile; return calculateEnergy(text, method, basis); File ""test.py"", line 12, in calculateEnergy; e = psi4.energy(method + '/' + basis); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/driver.py"", line 525, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 871, in select_ccsd; return func(name, **kwargs); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 2894, in run_ccenergy; ref_wfn = scf_helper(name, **kwargs) # C1 certified; File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/proc.py"", line 1887, in scf_helper; e_scf = scf_wfn.compute_energy(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 82, in scf_compute_energy; self.initialize(); File ""/home/ubuntu/build/build/stage/lib/psi4/driver/procrouting/scf_proc/scf_iterator.py"", line 197, in scf_initialize; self.form_H(); RuntimeError: ; Fatal Error: PSIO_ERROR: 18 (Incorrect block end address). Practical advice: This error is probably disk related. First, check that your scratch isn’t full.; Second, make sure that you’re setting scratch (""psi4 -s"" or ""export PSI_SCRATCH"") rather than letting it ; default to /tmp. Third, run the job again to see if the error is reproducible.; If it persists, finally, file a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3164:464,test,test,464,https://psicode.org,https://github.com/psi4/psi4/issues/3164,3,['test'],['test']
Testability,"I am not 100% convinced the dispersion handling - the way it's currently implemented - is very good. I'd propose the following:. - move all method and functional specific parameters from elsewhere into `qcdb/dashparam.py`. This includes citation handling that's currently done in `procrouting/empirical_dispersion.py`. - the rest of psi4 python-side should be ""parameter-agnostic"", ie there are obvious differences whether the dispersion _type_ is das2009, d2, or d3 (or later vv10) - this should get figured out (as it currently is) in `procrouting/empirical_dispersion.py` accordingly. . - the parameters and citations should be passed into the `EmpiricalDispersion` class from outside, whether it's the functional's dictionary or user overrides or dashparams database. It might be helpful to settle on _one_ interface as opposed to the currently-used two (tuple_params tuple or dashparams dict in kwargs). In fact, EmpiricalDispersion class shouldn't be doing any parameter lookup on its own. The `dashparam.dashcoeff` dict is already trawled through in `procrouding/dft_funcs/dict_builder`, where we modify the method's name and aliases, the dispersion `dashparam` dict can (should?) be appended too. However, I have a feeling that this is a little bit of a scope creep. I'm quite happy with the functional part as it is now and wouldn't mind having this merged as is (if the tests pass), and leave the empirical / non-local dispersion re-work for eg. the VV10 implementation...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-375392872:1380,test,tests,1380,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-375392872,1,['test'],['tests']
Testability,"I am not really sure the Pade matters. However I am still a bit confused by the wording: ""ROT is defined by DOCC + ACT + VIR removed"", what is removed? I have not tried to compare the ROT vs individual blocks of DOCC + ACT + VIR, maybe I should do that to figure out what's wrong. The PR is now failing on a molden test (which apparently I contributed to :) but I am wondering if such test is meaningful. After all the orbital phase is arbitrary so the test could fail without anything being wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1847#issuecomment-597961289:315,test,test,315,https://psicode.org,https://github.com/psi4/psi4/pull/1847#issuecomment-597961289,3,['test'],['test']
Testability,"I am open to finding a way to force the user into using only the appropriate combinations of `basis`/`basis_relativistic` if that sounds like a more sensible choice. In principle it would be enough to eliminate the `basis_relativistic` option and always set `basis_relativistic` to a decontracted version of `basis`. However, this could be problematic when the decontracted basis has linear dependencies (I am working on this issue but I am currently slightly stuck/too busy).; The reason we have so many options was just for testing reasons, and to allow cases where `basis_relativistic` is a basis different from `basis` (e.g. to remove linear dependencies directly in the deconstructed basis). The HF example above should do. Once you address the Python issue I can run some checks. Beside external tests, there is at least one way to tell if things are internally consistent in psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/662#issuecomment-288920918:526,test,testing,526,https://psicode.org,https://github.com/psi4/psi4/issues/662#issuecomment-288920918,2,['test'],"['testing', 'tests']"
Testability,"I am pretty sure this is a false failure in travis due to a server being down (see log below). Can someone from @psi4/p4pub-rw restart the travis tests? I don't think I should need to push a commit just to get the build to run. . ```; $ git checkout -qf FETCH_HEAD; Adding APT Sources (BETA); $ export DEBIAN_FRONTEND=noninteractive; 0.18s$ curl -sSL ""http://llvm.org/apt/llvm-snapshot.gpg.key"" | sudo -E apt-key add -; gpg: no valid OpenPGP data found.; The command ""curl -sSL ""http://llvm.org/apt/llvm-snapshot.gpg.key"" | sudo -E apt-key add -"" failed and exited with 2 during .; Your build has been stopped. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/395#issuecomment-222983339:83,log,log,83,https://psicode.org,https://github.com/psi4/psi4/pull/395#issuecomment-222983339,2,"['log', 'test']","['log', 'tests']"
Testability,"I am seeing large differences in wB97X-D3BJ energy between 1.4.0 and 1.3.2, and between different 1.4.0 installations. It seems that installing 1.4.0 with `-c anaconda` can cause the differences between 1.4.0 installations, possibly because it replaces the default linear algebra libraries with MKL versions. Such an installation runs 50% faster, but also gives wrong energies in some situations, sometimes by more than a Hartree. I've only seen the problem with clusters and large basis sets, which suggests it's a numerical issue. I've tested PBE, M06-2X, and wB97X-D3BJ, and so far it only appears in wB97X-D3BJ. Also, the error goes away if less RAM is provided (say, 10 GB instead of 32 GB). This suggests it may be related to the new ability of Psi4 1.4.0 to do in-core omega integrals (https://github.com/psi4/psi4/pull/1749). Working env: `conda create --name psi4_v1.4.0 python=3.8 psi4 psi4-rt -c psi4 -y`. Broken env: `conda create --name psi4_v1.4.0_mkl python=3.8 psi4 psi4-rt -c psi4 -c anaconda -y`. Example script: https://drive.google.com/file/d/1c0wZO47h9ooRXQMzTW9eETLWozo4MT_O/view?usp=sharing. To reproduce: install psi4 via conda with `-c anaconda` as shown, activate the env, then run the provided script `python psi4_1.4.0_omega_issue.py`. The energy should be approximately -1965.2319, but will instead give something like -1963.3023.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2279:538,test,tested,538,https://psicode.org,https://github.com/psi4/psi4/issues/2279,1,['test'],['tested']
Testability,"I am trying to build psi4 using Intel 2017 compilers, gcc=5.4 on an Ubuntu system. - Tried with python version 2.7.2 as well as 3.5. (Following is with Python 3.5) **The error with Python 2.7 is same as following.** . - Also, tried gcc/g++ 4.9.3 version. Same problem persists. I have run this before starting to build;; ```; source /opt/intel/bin/compilervars.sh intel64; export MATH_ROOT=$MKLROOT; export LD_PRELOAD=/opt/intel/mkl/lib/intel64/libmkl_core.so:/opt/intel/lib/intel64/libiomp5.so. ```; The Error logs and output are attached (check bottom of the post). Any suggestions ? . ```; ./setup --prefix=""/home/vayu/ChemPackage/psi4/opt_ins"" --cc=icc --cxx=icpc --fc=ifort --mkl=parallel build; Configuring system: Ubuntu; cmake -DCMAKE_Fortran_COMPILER=ifort -DCMAKE_C_COMPILER=icc -DCMAKE_CXX_COMPILER=icpc -DENABLE_MPI=OFF -DENABLE_SGI_MPT=OFF -DENABLE_OMP=ON -DENABLE_VECTORIZATION=OFF -DENABLE_CSR=OFF -DENABLE_SCALAPACK=OFF -DENABLE_SCALASCA=OFF -DENABLE_UNIT_TESTS=OFF -DENABLE_STATIC_LINKING=OFF -DENABLE_PLUGINS=OFF -DENABLE_CXX11_SUPPORT=ON -DLIBINT_OPT_AM=5 -DEXECUTABLE_SUFFIX= -DENABLE_AUTO_BLAS=ON -DENABLE_AUTO_LAPACK=ON -DMKL_FLAG=""-mkl=parallel"" -DMKL_FLAG_SET=ON -DENABLE_AUTO_BLAS=OFF -DENABLE_AUTO_LAPACK=OFF -DCMAKE_INSTALL_PREFIX=/home/vayu/ChemPackage/psi4/opt_ins -DCMAKE_BUILD_TYPE=release /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0. -- User set explicit MKL flag which is passed to the compiler and linker: -mkl=parallel; -- This disables math detection and builtin math libraries; -- Setting -DHAVE_MKL_BLAS and -DHAVE_MKL_LAPACK; CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/scf.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. CMake Error: File /home/vayu/ChemPackage/psi4/git_clone/psi4/psi4-1.0/doc/sphinxman/source/cfour.rst does not exist.; CMake Error at doc/sphinxman/CMakeLists.txt:22 (configure_file):; configure_file Proble",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/629:511,log,logs,511,https://psicode.org,https://github.com/psi4/psi4/issues/629,1,['log'],['logs']
Testability,"I am trying to run a porphyrin radical calculation with 1700 basis functions. I call dferi->compute() in my plugin and it seems that during the generation of the MO DF integrals, there is some sort of segmentation fault. I generate all of the MO integrals using density fitting. . I have a minimal plugin available to test this input. . The input is given below: . ```; memory 100 gb; molecule {; 0 1; C 0.68541667 0.00000000 4.17724008; C -0.68541667 0.00000000 4.17724008; C -1.07715949 0.00000000 2.85236290; C 1.07715949 0.00000000 2.85236290; N 0.00000000 0.00000000 2.03366350; C 2.35903958 0.00000000 2.45806358; C 2.81721573 0.00000000 1.05258796; N 2.05486054 0.00000000 0.01405448; C 2.88740001 0.00000000 -1.13057937; C 4.23537365 0.00000000 0.67022148; C 4.27600326 0.00000000 -0.70111647; C 2.48623109 0.00000000 -2.40919453; C 1.07657777 0.00000000 -2.84029441; N 0.00000000 0.00000000 -2.02366514; C -0.68542522 0.00000000 -4.16299454; C 0.68542522 0.00000000 -4.16299454; C -2.88740001 0.00000000 -1.13057937; N -2.05486054 0.00000000 0.01405448; C -2.81721573 0.00000000 1.05258796; C -4.23537365 0.00000000 0.67022148; C -4.27600326 0.00000000 -0.70111647; C -2.35903958 0.00000000 2.45806358; C -2.48623109 0.00000000 -2.40919453; C -1.07657777 0.00000000 -2.84029441; H 1.32705735 0.00000000 5.04949752; H -1.32705735 0.00000000 5.04949752; H 3.13133350 0.00000000 3.22359766; H 5.09358852 0.00000000 1.32905912; H 5.16675318 0.00000000 -1.31569036; H 3.24762417 0.00000000 -3.18492574; H -1.32960963 0.00000000 -5.03269392; H 1.32960963 0.00000000 -5.03269392; H -5.09358852 0.00000000 1.32905912; H -5.16675318 0.00000000 -1.31569036; H -3.13133350 0.00000000 3.22359766; H -3.24762417 0.00000000 -3.18492574; units angstrom; }. set {; reference rhf; scf_type DF; guess SAD; d_convergence 4; e_convergence 4; basis cc-pvqz; df_basis_mp2 cc-pvqz-ri; }. set dfmp2 {; print 1; }. energy('dfmp2'). dfmp2.exampleFN(); ```. My plugin is given below:. ```; /*; *@BEGIN LICENSE; *; * dfm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/157:318,test,test,318,https://psicode.org,https://github.com/psi4/psi4/issues/157,1,['test'],['test']
Testability,"I am wondering if CPU and memory use are handled correctly in the MRCC interface. I am running some hig-level coupled cluster benchmarks but MRCC appears to run mostly single threaded, and doesn't use a lot of memory. Is the `memory` statement in Psi4 copied to the MRCC input file? I could not find the used MRCC input in the scratch directory...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3165:126,benchmark,benchmarks,126,https://psicode.org,https://github.com/psi4/psi4/issues/3165,1,['benchmark'],['benchmarks']
Testability,"I and my colleagues are trying to transition into using JSON in- and output files for Psi4 to add another layer of structure to our database. We understand that this is a work in progress, but I can't find any examples of what would work for optimization and/or frequency calculations in the examples dir (https://github.com/psi4/psi4/tree/master/tests/json). I tried changing one of the example input files to adapt it to our own type of calculations, but I just get errors while running it using the --qcschema flag as I can't seem to get the structure of the JSON file right. Is there an unfinished guide on how to create these JSON files?. Let say I have a non-JSON file that looks like the following:; ```; molecule mol_water {; 0 1; O 0.000000000 0.000000000 0.117000000; H 0.000000000 0.763400000 -0.468100000; H 0.000000000 -0.763400000 -0.468100000. units angstrom; no_reorient; }. set globals {; basis aug-cc-pVTZ; dft_spherical_points 434; dft_radial_points 85; }. set_memory(25000000000). try:; optimize('pwpb95-d3bj'); except SCFConvergenceError as e:; unconverged_scf_wfn = e.wfn; unconverged_scf_wfn.to_file(unconverged_scf_wfn.get_scratch_filename(180)); set guess read; optimize('pwpb95-d3bj'). E, wfn = frequency('pwpb95-d3bj', return_wfn=True); print(wfn.frequencies().get(0, 0)); ```. How would it be expressed as a valid JSON file?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2117:347,test,tests,347,https://psicode.org,https://github.com/psi4/psi4/issues/2117,1,['test'],['tests']
Testability,"I assume this is also valid for DFT? If yes, it might be a good thing to also put in a DFT test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-499966992:91,test,test,91,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-499966992,1,['test'],['test']
Testability,I believe this is corrected. Please test @fevangelista . Thanks!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/132#issuecomment-121978883:36,test,test,36,https://psicode.org,https://github.com/psi4/psi4/issues/132#issuecomment-121978883,1,['test'],['test']
Testability,I believe we have clean DDD test suite.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1351#issuecomment-568168497:28,test,test,28,https://psicode.org,https://github.com/psi4/psi4/pull/1351#issuecomment-568168497,1,['test'],['test']
Testability,"I can certainly try it. The crash seems to be related to the LRU caching mechanism, and it fails when it tries to lseek() on a file that is not open. Maybe the logic that would open the file sees that there is enough memory to hold everything in RAM and skips the file open, but then later the the sort assumes that file has been opened.; This is also supported by the `cachelevel 0` workaround working fine, just slowly. The fact that an LRU caching related function is getting called is unexpected by itself, as the [CC docs](https://psicode.org/psi4manual/master/cc.html) claim that LRU is not the default caching algorithm.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1246008451:160,log,logic,160,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1246008451,1,['log'],['logic']
Testability,"I can confirm that I can now build a freshly checked-out tree without needing to edit anything. (I did have to use -DOpenMP_LIBRARY_DIRS to point at the Intel version of libiomp5.so.). I did get:. `No such TARGET ""OpenMP::OpenMP_C""` and `No such TARGET ""OpenMP::OpenMP_Fortran""`. in the cmake output but it built and (the few tests before I killed it) ran fine. As a further test, I've also tried enabling lots of other optional bits (ambit, CheMPS2, dkh, libefp, simint, gdma, PCMSolver, and snsmp2) to check whether the fortran error caused any issues with them. It looks like everything builds apart from ambit (which looks like it was only just re-enabled and so probably needs tweaking somewhere). Building ambit bails out with the same lack of MathOpenMP that I was seeing before #1053:. ```; -- Detecting MathOpenMP -- ?OpenMP=ON, ?MKL= MKL, LANG=C;CXX;Fortran, C/CXX/Fortran=GNU/GNU/; -- Found TargetOpenMP: 1 ; CMake Error at /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find MathOpenMP (missing: MathOpenMP_MESSAGE); Call Stack (most recent call first):; /usr/share/cmake-3.11/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /var/tmp/build/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/FindMathOpenMP.cmake:108 (find_package_handle_standard_args); /usr/share/cmake-3.11/Modules/CMakeFindDependencyMacro.cmake:48 (find_package); /var/tmp/build/psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake:44 (find_dependency); cmake/FindTargetLAPACK.cmake:30 (find_package); CMakeLists.txt:90 (find_package). -- Configuring incomplete, errors occurred!; See also ""/var/tmp/build/psi4/objdir/external/upstream/ambit/ambit_external-prefix/src/ambit_external-build/CMakeFiles/CMakeOutput.log"".; See also ""/var/tmp/build/psi4/objdir/external/upstream/ambit/ambit_external-prefix/src/ambit_external-build/CMakeFiles/CMakeError.log"".; external/upstream/ambit/CMakeFiles/ambit_external.dir/bu",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400326280:326,test,tests,326,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400326280,2,['test'],"['test', 'tests']"
Testability,"I can confirm that your input, @psi-rking, seems to work fine. I don't see any indeterminism either. When I turn symmetry off entirely, though, the IRC does quit early and I'm not sure why. I poked around the code a bit -- debugging this is a real headache, since I wrote it 6 years ago and the logic is pretty convoluted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-346417491:295,log,logic,295,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-346417491,1,['log'],['logic']
Testability,"I can confirm these test cases fail on my machine with a psi4public pull from yesterday (OpenSuse 13.2, gcc 4.8.3)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/190#issuecomment-157368626:20,test,test,20,https://psicode.org,https://github.com/psi4/psi4/issues/190#issuecomment-157368626,1,['test'],['test']
Testability,I can do some more detailed testing on the scope of this bug next week. (Something has come up that will commandeer the rest of this week for me.). The thing that I still don't understand is why this bug only afflicts _unrestricted_ references. Perhaps the indexing convention disagreement is limited to only a few integral blocks? I only checked that there was an index disagreement for the case I linked.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1288#issuecomment-435176464:28,test,testing,28,https://psicode.org,https://github.com/psi4/psi4/issues/1288#issuecomment-435176464,1,['test'],['testing']
Testability,"I can now finally explain why this bug is happening:; Assume you're cloning a ZMAT atom. [This line](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/coordentry.h#L372) I added in #1108 enforces that if ZMAT coordinates were computed for the parent, they be computed for the clone atom. When giving a ZMAT atom coordinates in space, the reference atoms need to already have coordinates in space computed. Psi checks this, naturally enough, with`CoordEntry.computed_` (via a getter). Because of that line in #1108, `computed_` will always be set correctly for ZMAT atoms, so if you only ever use ZMAT atoms, all is well. However, there is no mechanism in place to compute coordinates for Cartesians as well, so those are listed as not computed when Psi checks `computed_`. The fix seems clear enough to me: add a `compute` call in `CartesianEntry::clone` to mirror the one in `ZMatrixEntry::clone`. Because changes in `molecule` can have wide-reaching repercussions, I'll hold off on testing the fix until @loriab is done fixing the full test suite, so I can use it to safety check this PR. And with that realization, I am quite hopeful to get this in Psi 1.3 after all.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1379#issuecomment-448234589:998,test,testing,998,https://psicode.org,https://github.com/psi4/psi4/pull/1379#issuecomment-448234589,2,['test'],"['test', 'testing']"
Testability,I can re-review when this passes tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731#issuecomment-1271707869:33,test,tests,33,https://psicode.org,https://github.com/psi4/psi4/pull/2731#issuecomment-1271707869,1,['test'],['tests']
Testability,"I can see an argument for both fast and rigorous CI solutions, and don't really have a strong opinion on how we should proceed. The minimal test may become important as we start getting more PRs; it's nice to be able to see if they're valid in a short window. That route is fine for me, as long as we plug the gaps with another test solution. Right now we only deal with a handful of PRs a day at most, so having to wait a few hours isn't too bad, which means your more extensive testing idea is valid. As I said, I don't really have a strong opinion; I was just making some suggestions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182898239:140,test,test,140,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182898239,3,['test'],"['test', 'testing']"
Testability,I can see the point for reducing the number of builds. I'm for it now. I'm wondering what's up with that failed test case.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182590148:112,test,test,112,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182590148,1,['test'],['test']
Testability,"I can try it out on ubuntu. A good test will also to run it actually on; debian/sid. Perhaps we can ask Michael?. 2015-07-20 17:37 GMT-04:00 Lori A. Burns notifications@github.com:. > Good point! I made commit 7e4889b; > https://github.com/psi4/psi4public/commit/7e4889b924e67be11c5f7b5d42c85673a90c5c17; > . If CMake pastes together a PATHS and PATH_SUFFIX and NAMES, it should; > get the Debian locations. If you should happen to try it out, let me know.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/150#issuecomment-123051328. ## . ---. dr. ir. Sebastian Wouters; Fellow of the Belgian American Educational Foundation; Princeton University; (address) Department of Chemistry; Frick Laboratory 351; Princeton, NJ 08544, USA; (e-mail) sebastianwouters@gmail.com. ---",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/150#issuecomment-123084638:35,test,test,35,https://psicode.org,https://github.com/psi4/psi4/issues/150#issuecomment-123084638,1,['test'],['test']
Testability,I can try to test PR #388 on top of 1.0rc on Debian this weekend along with the newly uploaded v1.7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/150#issuecomment-221836576:13,test,test,13,https://psicode.org,https://github.com/psi4/psi4/issues/150#issuecomment-221836576,1,['test'],['test']
Testability,I can't explain why the second instance is not reading the orbitals. A couple of quick tests that would be useful: a) does adding `set guess read` before the call to your plugin (and after the SCF call) change the behavior? and b) does the same thing happen if you call SCF instead of your plugin on the second function call?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/419#issuecomment-227780765:87,test,tests,87,https://psicode.org,https://github.com/psi4/psi4/issues/419#issuecomment-227780765,1,['test'],['tests']
Testability,"I can't quite figure out how to pass custom vectors via Psithon/PsiAPI using `psi4.properties`.; If I pass a list of vectors (e.g., dipole integrals), [this](https://github.com/maxscheurer/psi4/blob/1528bcfda6d55d32712f3e6be4b21a45abe90e55/psi4/driver/procrouting/proc.py#L2962) code block obviously fails... Directly passing vectors to `cpscf_linear_response` obviously works somehow, but I could not find anything in the test suite that explicitly covers the ""user-provided vector""-case at all... Are there any plugins/3rd party codes relying on calling `cpscf_linear_response` directly with custom vectors as arguments, @loriab?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2266#issuecomment-964890817:423,test,test,423,https://psicode.org,https://github.com/psi4/psi4/pull/2266#issuecomment-964890817,1,['test'],['test']
Testability,"I can't reproduce it on my linux systems. What are the system and compiler; specs where you see the problem?. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Fri, Feb 5, 2016 at 1:19 PM, Andy Simmonett notifications@github.com; wrote:. > All of the clang tests are still failing on the CI system. It's not; > related to Boost, and appears to be a problem in the cctransort code. I; > cannot reproduce this problem on my linux machine - are you seeing it at; > all, @jturney https://github.com/jturney?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/230#issuecomment-180480448.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-180492708:257,test,tests,257,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-180492708,1,['test'],['tests']
Testability,"I cannot reproduce this one. I pulled your branch and rebased it to master (which has not introduced any changes to the moinfo code) and it ran cleanly with address and memory sanitizers on my mac. I modified your changes to read:; ```c++; if (ref_wfn.frzcpi().n() != nirreps_ref) exit(42);; std::cout << ""DIMENSIONS "" << ref_wfn.frzcpi().n() << "" "" << nirreps_ref << std::endl;; ```; and it gave the following output:; ```; (base) QuickSilver:~/programming/psi4/obj_asserts (fix_nirreps) > DYLD_INSERT_LIBRARIES=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/10.0.0/lib/darwin/libclang_rt.asan_osx_dynamic.dylib psi4; Performing finite difference calculations; 5 displacements needed ... 1 2 3 4 5; 8 displacements needed.; 1DIMENSIONS 4 4; 2DIMENSIONS 4 4; 3DIMENSIONS 4 4; 4DIMENSIONS 4 4; 5DIMENSIONS 4 4; 6DIMENSIONS 4 4; 7DIMENSIONS 4 4; 8; ```; I tried the psimrcc-fd-freq1 test also and it runs just fine.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1521#issuecomment-462363479:927,test,test,927,https://psicode.org,https://github.com/psi4/psi4/pull/1521#issuecomment-462363479,1,['test'],['test']
Testability,"I checked `ctest -R sapt` because I was expecting sapt6 to fail, being the most thorough per-term and per-sapt-level test. However, the Ind30 fault doesn't show up at that level because (1) we check elst/exch/ind/disp components but not e.g., elst10, elst20 terms and (2) the deltaHF term by definition compensates for (read: hides) the induction term problem. So current test suite is ok, though that itself is a failure demanding more tests. :-)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1803#issuecomment-582743062:117,test,test,117,https://psicode.org,https://github.com/psi4/psi4/pull/1803#issuecomment-582743062,3,['test'],"['test', 'tests']"
Testability,"I checked all the optimization tests. I saw no major problems. A few of the cases now converge a bit faster. . opt-lindep-change/input.dat could be updated to the current energy after 3 steps, but this is not essential as we don't fully optimize this case. for opt10: we've changed basis sets, which is the reason for the different energy in the new output.ref. For some of the older cases, the testing criterion should be tightened. Specifically for ; opt1, opt1-fd, opt4, and opt5. The default SCF algorithm changed from PK->DF, and these output's are older. So I expect someone simply reduced the checking to only 3 decimals to maintain a PASS. We should tighten this up and be able to get 6 decimals in the energy - at least 5 - in a full optimization, at least. Note for tests such as opt 2, pk is specified and 6 decimals are checked already.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-197012335:31,test,tests,31,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-197012335,3,['test'],"['testing', 'tests']"
Testability,I checked the gradients with my pre-made tests and everything seems to be working properly. Thanks.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/184#issuecomment-157532425:41,test,tests,41,https://psicode.org,https://github.com/psi4/psi4/issues/184#issuecomment-157532425,1,['test'],['tests']
Testability,"I cleared out all the library files on the list, and they didn't put up a fight. Doing a full testsuite now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/525#issuecomment-262139161:94,test,testsuite,94,https://psicode.org,https://github.com/psi4/psi4/issues/525#issuecomment-262139161,1,['test'],['testsuite']
Testability,"I compiled psi4, got coffee, and cmake decided it was time to recompile from scratch in case someone ninja edited my build. Cmake always has your back. . -Daniel Smith; Sent from my iPhone. . > On Apr 18, 2016, at 19:16, Lori A. Burns notifications@github.com wrote:; > ; > It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!; > ; > Who dares to decouple libint from our build system such that it could become a detectable ExternalProject_Add CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/355#issuecomment-211638331:333,test,testing,333,https://psicode.org,https://github.com/psi4/psi4/issues/355#issuecomment-211638331,2,['test'],"['test', 'testing']"
Testability,"I compiled this PR with clang, ran `gibbs`, and still got the exact same error as Travis reports. ```; Structure for next step:; Cartesian Geometry (in Angstrom); C 0.0000000000 0.0000000000 0.0000000000; H 0.0000000000 0.8836649185 -0.6248454599; H 0.8836649185 0.0000000000 0.6248454599; H -0.8836649185 0.0000000000 0.6248454599; H 0.0000000000 -0.8836649185 -0.6248454599; ; Fatal Error: User specified point group (C2v(Z)) is not a subgroup of the highest detected point group (Cs(Z)). If this is because the symmetry increased, try to start the calculation again from the last geometry, after checking any symmetry-dependent input, such as DOCC.; ```. This problem is not specific to gcc compilers, and it looks to be a bug in finding the highest point group. I'm puzzled how the original test didn't run into this problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-449682307:795,test,test,795,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-449682307,1,['test'],['test']
Testability,"I completely agree with @bgpeyton and @amjames that there are probably misuses of Z & mass in the code resulting from unclear or inconsistent definitions (I think there's even cases where the `Mol.property()` fn differs in behavior from the `Mol.fproperty()` fn (that includes dummy atoms). It would be great to survey the code and hunt these down. My trepidation comes in because Mol is delicate w/the two versions of ghosting (type A (not reversible): `@C`, type B (reversible): `extract_subset(1, 2)`) and I worry that changes would start an avalanche. In fact I definitely recommend _not_ ""fixing"" `Mol.Z()` the way I would like (`C` and `@C` both return 6) because lots of places in the Mol code depend on using that fn as a test for type A ghostedness. > I'm very unfamiliar with how masses and fragment identities are passed around. Is there a case in which having the ghost masses zero would keep you from making a properly-massed all-real-atoms copy of that molecule? That would definitely preclude any option of setting them zero permanently. What happens is that every atom at parse-time gets read into a CoordEntry object that holds Z, ghost, charge, mass, element symbol, coords, etc. If the atom is type-A ghost, then Z, ghost, and charge get set accordingly. There is no other info so type-A is not eligible to return to reality. The fragmentation pattern is also stored at parse-time with all-`Real`. For a trimer, when you `extract_subsets(1, 2)`, the `Mol.fragment_types_` gets reset to `[Real, Ghost, Absent]`. The CoordEntries don't change, but every function in Mol is trained to iterate over the frags, and handle Ghost or Absent differently, so that in the fn output, they _appear_ ghosted (type B) or absent. Because the mass, Z info in the CoordEntry is unchanged, this ghostedness is reversible. So in the type B sense, mass must not be set to 0 permanently b/c then type B would be irreversible. I suppose you're advocating zeroing mass for type A? That'd be more consistent",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-363473061:730,test,test,730,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363473061,1,['test'],['test']
Testability,"I confirmed that sapt8 got broken because we stopped storing `Ind20,u` in the `Ind20,r` variable in usapt0.cc. I am not sure where the `SAPT IND ENERGY` variable that is used for the test is defined. Does open-shell SAPT0 even go through `sapt_jk_terms.py` ? It seems like the code flow changed a bit since I implemented it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/908#issuecomment-364678447:183,test,test,183,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364678447,1,['test'],['test']
Testability,"I couldn’t say concretely, but some other programs will switch to an appropriate reference for open-shell. For psi4, it would have to be rhf/rks because we don’t have roks. This would be convenient at times, for instance, running databases of mixed closed/open shell. Propositions to be considered:. (i) Keeping reference in one place, that is, as a keyword. Consequences: retire rhf/uhf/rohf & rscf/uscf/roscf. (ii) If molecule is open-shell _and_ no reference has been specified, switch to uhf. This could be tricky b/c we’re not set up to do this driver-side. Also, there’d still be no way to use r/ro, as appropriate, in a series of molecules w/o explicitly setting reference. Lori. > On Jun 8, 2015, at 10:48 AM, David Sherrill notifications@github.com wrote:; > ; > Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; > That sounds ok to me (then reference just has to be defined properly).; > ; > What about DFT, do we define functional properly and do energy('dft'), etc.?; > ; > David; > ; > On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Fixed by 6f6d3aa; > > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > > though I rather think now that defining hf/rhf/uhf/rohf/rsch/roscf/uscf for; > > energy() was a bad idea (by me) a few years ago (except for ""hf"" itself).; > > Nevertheless, as this ticket points out, having defined these names only; > > for energy() confounds the driver logic. These convenience names are now in; > > place for gradient() and property().; > > ; > > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > > prop() if others concur with my present assessment.; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/103#issuecomment-109846967.; > > ; > > —; > > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/103#issuecomment-110021718.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110183382:2598,log,logic,2598,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110183382,1,['log'],['logic']
Testability,"I currently plan to combine the three geometry generators into one because their logic is so similar. Could you be more specific about the interface changes and desired new features _after_ the C++ code is moved over? If combining the geometry generators is obviously going to break something down the road, best to find out now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/884#issuecomment-360926158:81,log,logic,81,https://psicode.org,https://github.com/psi4/psi4/issues/884#issuecomment-360926158,1,['log'],['logic']
Testability,I defer to Lori on whether this belongs in `tests/python` or `tests/pytest`. I'm not sure what the difference is.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2252#issuecomment-882967221:44,test,tests,44,https://psicode.org,https://github.com/psi4/psi4/pull/2252#issuecomment-882967221,2,['test'],['tests']
Testability,"I deleted some testing L2 packages yesterday to make way for a bigAM one, and it looks like CI was using them. If you want CI to work now, you can make some of the edits in #3107 . Sorry for the trouble. Or we can solve it after that gets merged.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3114#issuecomment-1867890605:15,test,testing,15,https://psicode.org,https://github.com/psi4/psi4/pull/3114#issuecomment-1867890605,1,['test'],['testing']
Testability,"I did a couple more things here:. 1) At the suggestion of the reviewers, I added individual reference energies for the current composite methods (which were acquired at tight tolerances - 1e-10 for D and E convergence, and 1e-14 for ERI screening). The COSX and LinK methods now test against these corresponding reference energies at the normal 1e-6 atol. . 2) With 1) in mind, I made more sweeping changes as well. First, the reference energies are now kept in a dictionary rather than spread out across different variables. This improves readability and should facilitate the addition of new methods, Composite or otherwise, to the scf5 testing suite. Additionally, composite methods are tested in a loop per test case. This will facilitate the testing of new Composite methods added to Psi4, as will happen in the future.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768#issuecomment-1310496110:279,test,test,279,https://psicode.org,https://github.com/psi4/psi4/pull/2768#issuecomment-1310496110,5,['test'],"['test', 'tested', 'testing']"
Testability,"I did some testing with both files. When loading them into molden (version 5.1), the program prints the Mulliken charges on screen. The results are odd:. molden file from ORCA:; N 1.3673; H 0.0711; H 0.2191; H 0.3448; Sum of Mulliken Charges: 2.0024. molden file from PSI4:; N 1.3673; H 0.0711; H 0.2191; H 0.3448; Sum of Mulliken Charges: 2.0024. Obviously, both are wrong. Apparently, the D orbitals have very little influence on the Mulliken charges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/60#issuecomment-53036550:11,test,testing,11,https://psicode.org,https://github.com/psi4/psi4/issues/60#issuecomment-53036550,1,['test'],['testing']
Testability,I didn't factor in that the weights can be negative. Somehow I thought they must be positive.; There are many 'big' negative weights in the smoke test. IMO it should remain an expert option and somewhat hidden.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1581#issuecomment-475173509:146,test,test,146,https://psicode.org,https://github.com/psi4/psi4/pull/1581#issuecomment-475173509,1,['test'],['test']
Testability,"I didn't find the right fedora build log yesterday, so if it's online and you want a minimal patch, I'd appreciate a link. But, if you don't mind a heavy patch, the below for external/upstream/qcelemental/CMakeLists.txt worked fine locally for me just now. That is, psi4 (master) configured, _didn't_ build qcel, and detected it fine at runtime. ```; #if(NOT (${CMAKE_DISABLE_FIND_PACKAGE_qcelemental})); # include(FindPythonModule); # find_python_module(qcelemental ATLEAST 0.24.0 QUIET); #endif(); #; #if(${qcelemental_FOUND}); # message(STATUS ""${Cyan}Found qcelemental${ColourReset}: ${PY_qcelemental} (found version ${qcelemental_VERSION})""); add_library(qcelemental_external INTERFACE) # dummy; #; #else(); # if(${CMAKE_INSIST_FIND_PACKAGE_qcelemental}); # message(FATAL_ERROR ""Suitable qcelemental could not be externally located as user insists""); # endif(); #; # include(ExternalProject); # message(STATUS ""Suitable qcelemental could not be located, ${Magenta}Building qcelemental${ColourReset} instead.""); #; # file(TO_NATIVE_PATH ""${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}"" _install_lib); #; # ExternalProject_Add(qcelemental_external; # BUILD_ALWAYS 1; # URL https://github.com/MolSSI/QCElemental/archive/v0.25.1.tar.gz; # CONFIGURE_COMMAND """"; # UPDATE_COMMAND """"; # BUILD_COMMAND ${Python_EXECUTABLE} setup.py build; # BUILD_IN_SOURCE 1; # INSTALL_COMMAND ${Python_EXECUTABLE} setup.py install; # --record=record.txt; # --single-version-externally-managed; # --install-lib=${_install_lib}); #endif(); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1670186967:37,log,log,37,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1670186967,1,['log'],['log']
Testability,"I didn't realized you had opened an issue, I fixed it for you in commit 42345de37df6827356fe7215aa2745b36c946d9e. If you are still interested look at tests/cubeprop/CMakeLists.txt basically the command is:. ``` cmake; file(COPY <name> DESTINATION ${CMAKE_CURRENT_BINARY_DIR}); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/116#issuecomment-122034848:150,test,tests,150,https://psicode.org,https://github.com/psi4/psi4/issues/116#issuecomment-122034848,1,['test'],['tests']
Testability,"I didn't try too hard to break it on public (which doesn't have wavefunction_pass) so it's possible this never appears before the infrastructure changes. But nevertheless, those changes on the whole are for the better, and it's disturbing that infrastructure changes + suitable tweaking to make the extensive occ/dfocc test suite pass can still hide a situation like this. `Ecorr`, `Emp2AA`, etc. are computed out of sight. ... Aha! Initializing variable (below) seems to help in https://github.com/psi4/psi4/blob/master/src/bin/dfocc/mp2_direct.cc#L90; Only affects UHF. Will continue explorations along these lines. ```; 121 if (mo_optimized == 0) Esosmp2AB = sos_scale * Emp2AB;; 122 else if (mo_optimized == 1) Esosmp2AB = sos_scale2 * Emp2AB;; 123 ; 124 Emp2_t1 = 0.0;; 125 if (reference == ""ROHF"" && orb_opt_ == ""FALSE"") {; 126 if (wfn_type_ == ""DF-OMP2"" || wfn_type_ == ""CD-OMP2"") {; 127 //Singles-contribution; 128 Emp2_t1 = 0.0;; 129 //Alpha; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/244#issuecomment-183550049:319,test,test,319,https://psicode.org,https://github.com/psi4/psi4/issues/244#issuecomment-183550049,1,['test'],['test']
Testability,"I do not know if this is possible in Psi4, but in Molpro and Orca one can (ab)use the CASSCF program to do HF calculations, and they tend to have very different convergence properties. I have recently found that doing this in Molpro 2015 really helps converging some very stubborn ROHF calculations.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-874638315:272,stub,stubborn,272,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-874638315,1,['stub'],['stubborn']
Testability,"I do think that the dcft/pywrap-alias changed sample files are just due to my sloppiness in changing the tests before packing up the tarball. SUMMARY should not be changing its contents for a given set of psi4/tests. It may, though, change its ordering of the contents and trigger your changed-source-alert. Thus, I think it's best to drop tracking it and see that it gets cleaned up when distclean runs. That directory doesn't need an ascii index when a formatted html index exists. Our original plan was to web-host docs for each public release of the code, but admittedly, even I can't find the address of the older versions just now. If you want to package up a thousand html files, we'll try to remove the minor obstacles.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/14#issuecomment-22985263:105,test,tests,105,https://psicode.org,https://github.com/psi4/psi4/issues/14#issuecomment-22985263,2,['test'],['tests']
Testability,"I don't find any problems with it when running plain `ctest -R pywrap-freq-e-sowreap`. But in a larger sense, you're quite right that it's not doing anything. Back in the pre-CMake day, the Makefile took additional steps and actually ran all those displacements https://github.com/psi4/psi4/blob/4.0b5/tests/pywrap-freq-e-sowreap/Makefile.in , then ran https://github.com/psi4/psi4/blob/master/tests/pywrap-freq-e-sowreap/tests so as to make a proper test case. This multi-psi4 invokation hasn't yet been ported to the CMake/CTest system. So it's good that this is a ticket.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/168#issuecomment-135167238:302,test,tests,302,https://psicode.org,https://github.com/psi4/psi4/issues/168#issuecomment-135167238,4,['test'],"['test', 'tests']"
Testability,"I don't have enough compute for a full test run currently :). Maybe ""Forces a even distribution of occupations across the last partially occupied orbital shell"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/773#issuecomment-319410297:39,test,test,39,https://psicode.org,https://github.com/psi4/psi4/issues/773#issuecomment-319410297,1,['test'],['test']
Testability,"I don't know how detailed the FCIDUMPs are to know if this'd be easy or hard, but would a `compare_fcidump` like [compare_cubes](https://github.com/psi4/psi4/blob/da39266fcb0b84203cdd9a3935e6e98600a688a4/psi4/driver/p4util/util.py#L364) as used in https://github.com/psi4/psi4/blob/master/tests/cubeprop/input.dat be appropriate?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/700#issuecomment-301206187:289,test,tests,289,https://psicode.org,https://github.com/psi4/psi4/pull/700#issuecomment-301206187,1,['test'],['tests']
Testability,"I don't know how you are reading in the Hessian here, since I don't know how to automatically read files like ""hooh.21221.hess"" now that we have pid's in the name. (BTW, it appears the current psi4 test cases actually use an empirical Hessian.). These jobs are failing because the ""Point 1"" on the IRC is being judged 'converged' immediately before a gradient is even run. (The logic in the code is messy, since the optimizer doesn't actually call the gradient.) So optking needs to do displacements from the TS (where the gradient is zero) but return a not-converged signal to the python optimize. This usually works. I tried the following:. ```; set {; g_convergence gau_verytight; basis dzp; opt_type irc; cart_hess_read true; hessian_write true; }. hessian('scf', dertype=1); h2o2.reset_point_group('c2'); energy = optimize('scf'). ```; and everything worked fine. The problem in my testing is not indeterminism. There is something about the calculation setup that is causing optking not to compute the gradient after the first irc_step(). Perhaps @avcopan could figure out what is going on?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-346373530:198,test,test,198,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-346373530,3,"['log', 'test']","['logic', 'test', 'testing']"
Testability,"I don't know why clang was so slow here. When I was testing on a working branch, the clangs finished in 42 min or so (27 & 35). [This](https://anaconda.org/conda-forge/llvmdev/files) might be a 3.9 clang. It's hard to tell without downloading the packages. On the whole, I expect travis to have a more diverse compiler selection. Should we ultimately aim for:; - clang 3.6, python 2.7; - clang 3.9, python 3.5; - gcc 4.9, python 2.7; - gcc 6, python 3.5",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/510#issuecomment-259565547:52,test,testing,52,https://psicode.org,https://github.com/psi4/psi4/pull/510#issuecomment-259565547,1,['test'],['testing']
Testability,I don't reproduce a failure of `tests/pytests/test_standard_suite.py::test_mp2_hessian_module` on master. I don't have enough details to say more. `sapt7` is indeed unrelated to this PR. See #2327.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-946763755:32,test,tests,32,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-946763755,1,['test'],['tests']
Testability,I don't see any issues cropping up. I should make some documentation updates though to inform users how `optking` inherits logging from `psi4`. Just that users should make sure to import psi4 before optking for optking to inherit logging from psi4.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2932#issuecomment-1526303923:123,log,logging,123,https://psicode.org,https://github.com/psi4/psi4/pull/2932#issuecomment-1526303923,2,['log'],['logging']
Testability,"I don't see how that is possible - that test failed even when I tried it with the ```CORE``` guess above. The SCF must have converged since the job isn't crashing, and CH4 is a simple closed-shell molecule so there shouldn't be any problems with different HF solutions. This is also confirmed by the finite difference tests that pass for that molecule. Whatever this test job is testing, its problems appear to be unrelated to this merge request. IMHO it shouldn't even be checking the vibrational frequencies and eigenmodes, but rather the raw Hessian which is way less ambiguous. From the output it is not clear what it is actually checking. Looks like they are eigenvectors, but the code is massaging them somehow, like you said. As you can see, the differences are arising only from the degenerate modes, so the related test code must not be working properly. The problem is that comparing eigenvectors for degenerate modes, you have to allow not only for rotations among the vectors, but also flipping the sign of the individual eigenvectors. Maybe this is not taken into account in the test code and that's what is causing the problems?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-452085216:40,test,test,40,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-452085216,6,['test'],"['test', 'testing', 'tests']"
Testability,"I don't see much more I can do here. The convergence behavior seems perfectly reasonable to me. It's just an annoying case where the next step changing the energy by less than 1e-6 doesn't mean you're within 1e-6 of the converged energy. Do you just need me to check if I agree with the new treatment of `occ` convergence?. The other point which may be valuable for test suite purposes is that there are multiple LCCD energy functions. There's the projective function (linearize the normal CCD energy function) and the variational function (just use the Lagrangian). The projective function is simple but non-variational, where the variational function is variational but as implemented in `occ` reads multiple V^4 quantities from disk. I believe the variational functional is the default in fnocc, but I'd need to read over the code to be certain. I assume Eugene's version doesn't run into the V^4 problem... If you want to try the variational function in the test suite, `set ccl_energy true`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959:366,test,test,366,https://psicode.org,https://github.com/psi4/psi4/pull/1980#issuecomment-682990959,2,['test'],['test']
Testability,"I don't think `ints_tolerance` is set in the `ao-casscf-sp` test. grep might've picked up the reference output file, which apparently was generated using tighter settings than the actual test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2139#issuecomment-804512308:60,test,test,60,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804512308,2,['test'],['test']
Testability,"I don't think the inferring of grid order from `lebedev_mapping` was *ever* correct, to be clear. I believe (but am not 100% sure) that the new way of gaining the information (using information from `LebedevGridMgr`) proposed in #2736 works?. I can test -- do you have a simple input I can test with my build of that patch?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2754#issuecomment-1292381264:249,test,test,249,https://psicode.org,https://github.com/psi4/psi4/issues/2754#issuecomment-1292381264,2,['test'],['test']
Testability,I don't think you can adjust the reference b/c it's analytic vs fd. https://github.com/psi4/psi4/blob/f8a5f63abeb916750e00fdad7c3bb55a5dfa481f/tests/dft-freq-analytic/input.dat#L18-L19. maybe adjust the screening in the test for now. have you run stdsuite? there could be more of these.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2834#issuecomment-1349577053:143,test,tests,143,https://psicode.org,https://github.com/psi4/psi4/pull/2834#issuecomment-1349577053,2,['test'],"['test', 'tests']"
Testability,"I don't understand what Peter means by ""separate tests from docs"". I suspect the word ""tests"" should be ""samples,"" and I have no concrete idea as to how this PR combines them. My best guess is have ""a build of the documentation target"" not be what re-generates `samples`. I strongly disagree with removing git command line instructions. They will work in 99% of cases, and not following these instructions could cause merge conflicts that will take more effort from core devs to shepherd new devs through. For the sample regeneration section: Give examples of why changes might not be okay. Move the bullet point explaining the point of the auto-commit up a level. For the documentation section: I don't understand the point of the first bullet point. Explain why an edit to this branch might be needed. Explain the difference between deploy-preview and the `sphinxman-html` download. Make clear that editing the PR branch is also needed for the `sphinxman-html` download.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2364#issuecomment-981993088:49,test,tests,49,https://psicode.org,https://github.com/psi4/psi4/pull/2364#issuecomment-981993088,2,['test'],['tests']
Testability,I don't understand your comment about `_mergedapis_compare_matrices`. Assume I know nothing about the test infrastructure.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2395#issuecomment-1007032833:102,test,test,102,https://psicode.org,https://github.com/psi4/psi4/pull/2395#issuecomment-1007032833,1,['test'],['test']
Testability,"I dont have access to that paper at the moment, but a few notes for you:; - If you need to tweak functionals (@susilehtola this is a good example) please checkout [this](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/dft_funcs/hyb_superfuncs.py#L230) example. - For VV10 you can specify it via the python interface:; ```python; def build_myvv10_superfunctional(name, npoints, deriv, restricted):; sup = core.SuperFunctional.blank(); sup.set_name('HF+VV10'); sup.set_x_alpha(1.0). # Set VV10 parameters. If these are changed we assume you want VV10.; sup.vv10_b(...); sup.vv10_c(...). return sup. func_call = energy('SCF', dft_functional= build_myvv10_superfunctional); ```. The DFT code is likely the most class/inheritance/convoluted C++ code we have besides perhaps integrals. So probably not a great place to start in :). . - Post-SCF only VV10 is a good idea and just a matter of code logic. We need a flag somewhere that computes [this](https://github.com/psi4/psi4/blob/f03a896a2d70eac47137cf471dda4805e483586d/psi4/src/psi4/libfock/v.cc#L213) at the end of a SCF computation. The SCF iterations are in a bit of a state of flux due to the python porting; however, this should be pretty easy once merged as we have access to that Py-side.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/870#issuecomment-347998008:907,log,logic,907,https://psicode.org,https://github.com/psi4/psi4/issues/870#issuecomment-347998008,1,['log'],['logic']
Testability,"I encountered this problem with wB97X-D3BJ/def2-TZVPD, but PBE/def2-TZVPD shows the same, with the added problem that the erroneously low energy is also oscillatory. The psi4=1.4rc2 energy is -1144.303 Hartree, and the psi4=1.4rc1 energy oscillates between -1146.416 and -1146.534 Hartree. . Once again, this problem is specific to the algorithm that uses in-core AOs. If scf_type DF is provided with less RAM (say 10 GiB) such that it uses disk, the energy is correct (-1144.303 Hartree). I note that PBE requires only 20 GiB to run in-core, and thus might be easier for testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258:572,test,testing,572,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869060258,1,['test'],['testing']
Testability,"I figure this was probably caught already, but I thought I should submit a report just in case. I was running some test calculations in psi4 (v 0.4.0, Ubuntu) and I got the following error while trying to calculate Mulliken charges:. ```; [Screen output]. Traceback (most recent call last):; File ""<string>"", line 58, in <module>; File ""/home/kratz/bin/miniconda/share/psi4/python/p4util/util.py"", line 41, in oeprop; oe = psi4.OEProp(wfn); Boost.Python.ArgumentError: Python argument types in; OEProp.__init__(OEProp, str); did not match C++ signature:; __init__(P7_object, N5boost10shared_ptrIN3psi12WavefunctionEEE); ```. The DFT calculation that ran before the Mulliken charges completed. Just the oeprop command failed. This did not happen with an older copy on a different computer (PSI4 v 0.3.593, CentOS). As I was typing this report I tried to reinstall psi4 from conda on my CentOS machine, and I got a failure during the SAPT0 test calculations as well:. ```; [Conda output]. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32. Traceback (most recent call last):; File ""<string>"", line 36, in <module>; File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/driver.py"", line 647, in energy; procedures['energy'][lowername](lowername, **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 3072, in run_sapt; e_dimer = scf_helper('RHF', **kwargs); File ""/wsu/home/ft/ft08/ft0805/work/exec/miniconda/miniconda/pkgs/psi4-0.3.593-py27_gab46761/share/psi4/python/proc.py"", line 1972, in scf_helper; e_scf = psi4.scf(precallback, postcallback); Boost.Python.ArgumentError: Python argument types in; psi4.scf(NoneType, NoneType); did not match C++ signature:; scf(N5boost10shared_ptrIN3psi12WavefunctionEEE, P7_object, P7_object); ```. -kratz",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240:115,test,test,115,https://psicode.org,https://github.com/psi4/psi4/issues/240,2,['test'],['test']
Testability,"I finally managed to get a small test case: ; [small2_in.txt](https://github.com/psi4/psi4/files/2199056/small2_in.txt); [small2_out.txt](https://github.com/psi4/psi4/files/2199057/small2_out.txt). ```; DF-SCF gradient test: computed value (-0.25836946643405045) does not match (-0.11351758729533379).; DF-SCF gradient test: computed value (0.020545640137366858) does not match (0.012569715618282922).; DF-SCF gradient test: computed value (-0.020205828245199342) does not match (-0.014701497891262322).; etc.; ```. * Increasing memory to 2.5 Gb passes the test (MEM_DF and DISK_DF). Oddly, perhaps, using 0.5 Gb memory I get (both DISK_DF):; ```; Memory (MB): 357; Algorithm: Core; ```; and with 2.5 Gb:; ```; Memory (MB): 1788; Algorithm: Core. ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1095#issuecomment-405361551:33,test,test,33,https://psicode.org,https://github.com/psi4/psi4/issues/1095#issuecomment-405361551,5,['test'],['test']
Testability,"I fixed the `cam-b3lyp` and removed duplicate `b2gpplyp`. However, I'm not sure about the `LC-wPBE` vs `LRC-wPBE` question: the first one is by [Vydrov and Scuseria](https://doi.org/10.1063/1.2409292), the second one is by [Rohrdanz et al.]( https://doi.org/10.1063/1.3073302). Confusing nomenclature. Also, it might be helpful to merge PR #880 before merging this one, tests for N12, N12-SX ans MN12-SX are in there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/916#issuecomment-364769227:370,test,tests,370,https://psicode.org,https://github.com/psi4/psi4/pull/916#issuecomment-364769227,1,['test'],['tests']
Testability,"I followed your installation instructions for [Linux](http://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-command-line). The machine I'm installing this on is CentOS 7.2 kernel 3.10.0-327.36.1.el7.x86_64 GNU/Linux; Running `psi4 --test` gives the following error traceback:. <details>. ```; /home/je714/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; =============================================== test session starts ===============================================; platform linux -- Python 3.5.3, pytest-3.0.7, py-1.4.33, pluggy-0.4.0 -- /home/je714/psi4conda/bin/python; cachedir: .cache; rootdir: /home/je714, inifile:; collected 19 items. psi4conda/lib/python3.5/site-packages/psi4/tests/test_aaa_profiling.py::test_threaded_blas xfail; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_gdma PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_chemps2 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_libefp PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_pcmsolver PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_erd PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_simint PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_json PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf FAILED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::te",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:285,test,test,285,https://psicode.org,https://github.com/psi4/psi4/issues/710,5,['test'],"['test', 'tests']"
Testability,I found a copy of the function to computer the nuclear contribution to the dipole moment in the Molecule class. So I am going to leave that part of the refactoring for another PR. I think this is ready to go once all tests pass.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1400#issuecomment-444600475:217,test,tests,217,https://psicode.org,https://github.com/psi4/psi4/pull/1400#issuecomment-444600475,1,['test'],['tests']
Testability,"I found the bypass_scf option hard to get working based on the documentation and only (kind of!) figured it out by looking at the rasci-ne test and digging through source code. So, here's a stab at improving it...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/25:139,test,test,139,https://psicode.org,https://github.com/psi4/psi4/pull/25,1,['test'],['test']
Testability,I got down to 11 test failures w/ py3.4.3.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/160:17,test,test,17,https://psicode.org,https://github.com/psi4/psi4/pull/160,1,['test'],['test']
Testability,"I had a bit of time to work on Windows build. Current status of dependencies:; - *libint*: with some hacking (https://github.com/raimis/libint/tree/win) I have manged to build it (https://ci.appveyor.com/project/raimis/libint). There are no tests, so high probability of not detected issues.; - *libxc*: with some more hacking (https://github.com/raimis/libxc/tree/win) I have to managed to build it too (https://ci.appveyor.com/project/raimis/libxc).; - *gau2grid*: it need just a few changes (https://github.com/raimis/gau2grid/tree/win) to compile (https://ci.appveyor.com/project/raimis/gau2grid). Though I have not managed to make the test to work. It seems, `ctypes` behave differently on Windows. Finally, I have reached a point to stat building *Psi4* (https://github.com/raimis/psi4/tree/win) and got stuck with MKL configuration and other `cmake` related problems (https://ci.appveyor.com/project/raimis/psi4). @loriab, for Linux builds, do you use MKL from `conda` or install it manually?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-390236786:241,test,tests,241,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-390236786,2,['test'],"['test', 'tests']"
Testability,"I had a typo! You did maybe only HF. ```; import psi4. psi4.geometry('H -.5 0 0\nH .5 0 0'). set global {; basis def2-SVP; scf_type direct; }. num=gradient('scf',dft_functional='wb97x',dertype=0); ana=gradient('scf',dft_functional='wb97x',dertype=1); compare_matrices(ana, num, 5, ""LR grad""). ```; That seems to pass with 5 decimals at least.; I would test a larger molecule, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/867#issuecomment-346646875:352,test,test,352,https://psicode.org,https://github.com/psi4/psi4/issues/867#issuecomment-346646875,1,['test'],['test']
Testability,"I had looked into the integer overflow issues in the DF code with MP3 as an example several months ago. The negative memory values reported are of course integral overflows and one can fix the printing of memory requirements by changing the int to a type that holds larger integers. But the actual problem happens later when, if I understand correctly, an array index becomes bigger than 2,147,483,647. . In my DF-MP3 test calculation this happened in the main loop in mp3_WabefT2. . Memory for I, Vs, Va, Ts, and Ta was successfully allocated, but then the quantity a * navirA * nQ became too large. I forced it to long or long-long, so the product could be evaluated (and printed printed out) as 2148655392 (as opposed to -2146311904 with int) but this positive value ""anavirAnQ3"" was illegal for the subsequent contraction. I->contract(false, true, navirA * nb, navirA, nQ, K, K, 0, anavirAnQ3, 1.0, 0.0);. So, it is the array index, and not the array value, that is bigger than the 32-bit integer. And our math libraries index arrays with the 32-bit integer type! . I tried to compile Psi against MKL and OpenBLAS with 64-bit index arrays (the ILP64 interface) but the resulting program was not stable. So, if my thinking is correct, I am afraid we do not have an easy fix as long as Psi4 expects math libraries with 32-bit integer indices. I can share some debug code (modified dfocc.h, df_ref.cc, tei_grad_corr.cc, df_corr.cc, ref_grad.cc, and mp3_W_intr.cc with some long int and printf statements) and sample outputs if anybody thinks this is helpful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1764#issuecomment-561544849:418,test,test,418,https://psicode.org,https://github.com/psi4/psi4/issues/1764#issuecomment-561544849,1,['test'],['test']
Testability,"I had the same issue when I tested cdomp2-2. Here's the list of all my failed tests:; 76:cdomp2-2; 123:dfmp2-grad2; 125:dfmp2-grad4; 127:dfomp2-2; 129:dfomp2-4; 131:dfomp2-grad2; 303:stability2. I am using Ubuntu 14.04 with ATLAS for BLAS and LAPACK. Update:; After I changed to Intel MKL, the only failed case in tests is 303:stability2. Because it's just a value off, I just ignore it and continue installing. > ## Output:; > ; > Nuclear repulsion energy..........................................PASSED; > Reference energy..................................................PASSED; > Stability eigenvalues with symmetry: computed value (0.094068) does not match (0.0940977919192).; > Check your output file for reporting of the matrices.; > An error has occurred python-side. Traceback (most recent call last):; > ; > File ""<string>"", line 58, in <module>; > ; > File ""/home/mrabsence/Downloads/soft/psi4/share/python/p4util/util.py"", line 209, in compare_matrices; > raise TestComparisonError(""\n""); > ; > TestComparisonError: ; > ; > Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); > <end of output>; > Test time = 1.80 sec",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-223730550:28,test,tested,28,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-223730550,6,"['Test', 'test']","['Test', 'TestComparisonError', 'tested', 'tests']"
Testability,"I had to add some additional hunks, for the no longer existing `datastructures.py` and `scipy_hungarian.py`, not sure those are the correct fixes, but the testsuite (as far as Debian runs it, 143 test cases at least) now passes except for a numerical issue in `matrix1` (`Eigenvectors: computed value (0.0291933) does not match (-0.02919332316478252).`) and some other python problems in `pywrap-align{,-chiral`:. ```; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/qcdb/util/gph_uno_bipartite.py"", line 109, in _enumMaximumMatching; if g.node[kk]['bipartite'] == 0:; ^^^^^^. AttributeError: 'Graph' object has no attribute 'node'; ```. For completeness, those are the additional hunks:. ```; Index: psi4/psi4/driver/qcdb/datastructures.py; ===================================================================; --- psi4.orig/psi4/driver/qcdb/datastructures.py; +++ psi4/psi4/driver/qcdb/datastructures.py; @@ -58,11 +58,11 @@ class QCAspect(collections.namedtuple('Q; for d in ['doi', 'comment', 'glossary']:; dicary.pop(d); if isinstance(self.data, (np.ndarray, np.number)):; - if self.data.dtype == np.complex:; + if self.data.dtype == complex:; dicary['data'] = [dicary['data'].real.tolist(), dicary['data'].imag.tolist()]; else:; dicary['data'] = dicary['data'].tolist(); - elif isinstance(self.data, (complex, np.complex)):; + elif isinstance(self.data, (complex, complex)):; dicary['data'] = [self.data.real, self.data.imag]; ; return dicary; Index: psi4/psi4/driver/qcdb/util/scipy_hungarian.py; ===================================================================; --- psi4.orig/psi4/driver/qcdb/util/scipy_hungarian.py; +++ psi4/psi4/driver/qcdb/util/scipy_hungarian.py; @@ -93,14 +93,14 @@ def linear_sum_assignment(cost_matrix, r; % (cost_matrix.shape,)); ; if not (np.issubdtype(cost_matrix.dtype, np.number) or; - cost_matrix.dtype == np.dtype(np.bool)):; + cost_matrix.dtype == np.dtype(bool)):; raise ValueError(""expected a matrix containing numerical entries, got",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2865#issuecomment-1407791101:155,test,testsuite,155,https://psicode.org,https://github.com/psi4/psi4/issues/2865#issuecomment-1407791101,2,['test'],"['test', 'testsuite']"
Testability,I had to set `export PYTHONPATH=$PYTHONPATH:<path_to_s-dftd3_install_dir>/lib/python3.10/site-packages/`. For QCEngine to recognize `s-dftd3` as an engine the import needs to work. That's the internal test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2936#issuecomment-1531213641:201,test,test,201,https://psicode.org,https://github.com/psi4/psi4/issues/2936#issuecomment-1531213641,1,['test'],['test']
Testability,"I have a dimer complex in z-matrix form that I am calculating the interaction energy. I have two scripts, one is the an object that lives inside my software and the other is an external script that I use for testing the configurations for psi4. . When I run the python on the external script, the function returns the total energy:. ```python; dimer_energy = psi4.energy(; theory,; molecule=dimer2,; bsse='cp'; ); ```; However, if I run this programmatically, although the same result in terms of the output file but the dimer energy returned is the interaction energy. . I am running this on `hf/6-31g*' so not SAPT. Is there something that I am missing where psi4 decides to return the interaction energy over the dimer energy and why would I see this inconsistency in my code. Kind of lost on this one.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2730:208,test,testing,208,https://psicode.org,https://github.com/psi4/psi4/issues/2730,1,['test'],['testing']
Testability,"I have a good setup for vtune on some clusters. Do you have any inputs/scripts I can test?. Tangentially related, I'm getting a better look at the overall thread scaling. In density-fitted HF, the infamous dcopy is a very prominent problem - it's memory bound, so it takes only a few cores for the memory bandwidth to be saturated. If there's any other specific types of calculations you'd like to see, let me know.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/592#issuecomment-276103836:85,test,test,85,https://psicode.org,https://github.com/psi4/psi4/pull/592#issuecomment-276103836,1,['test'],['test']
Testability,"I have a system, where I'm interested in running sapt2+/aug-cc-pVDZ calculation. However, it quits after the start of SAPT2+. ```; //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // SAPT2+ //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. *** tstart() called on cnode3005; *** at Sat Feb 29 03:11:38 2020. SAPT2+ ; Ed Hohenstein; 6 June 2009. Orbital Information; --------------------------; NSO = 1061; NMO = 1061; NRI = 3161; NOCC A = 69; NOCC B = 56; FOCC A = 19; FOCC B = 15; NVIR A = 992; NVIR B = 1005. Estimated memory usage: 140951.0 MB. Natural Orbital Cutoff: 1.000E-06; Disp(T3) Truncation: Yes; CCD (vv|vv) Truncation: Yes; MBPT T2 Truncation: Yes. Monomer A: 486 virtual orbitals dropped; Monomer B: 598 virtual orbitals dropped; ```; This the end of the log file.; ```; /home/XXX/psi4conda/lib/python3.5/site-packages/v2rdm_casscf/v2rdm_casscf.so loaded.; forrtl: severe (174): SIGSEGV, segmentation fault occurred; Image PC Routine Line Source ; libpcm.so.1 00007F6CEC755A15 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC753637 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC66BF32 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC66BD86 Unknown Unknown Unknown; libpcm.so.1 00007F6CEC63A38D Unknown Unknown Unknown; libpcm.so.1 00007F6CEC63D75D Unknown Unknown Unknown; libpthread.so.0 00000034CF00F710 Unknown Unknown Unknown; core.so 00007F6CF40872D2 Unknown Unknown Unknown; core.so 00007F6CF4087EDA Unknown Unknown Unknown; core.so 00007F6CF408927E Unknown Unknown Unknown; core.so 00007F6CF404A1F0 Unknown Unknown Unknown; core.so 00007F6CF3F6CDF7 Unknown Unknown Unknown; core.so 00007F6CF33B0027 Unknown Unknown Unknown; core.so 00007F6CF33F983F Unknown Unknown Unknown; core.so 00007F6CF33C3CEA Unknown Unknown Unknown; core.so 00007F6CF33C3BB4 Unknown Unknown Unknown; core.so 00007F6CF304A32C Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6B8FDD1 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C184A6 Unknown Unknown Unknown; libpython3.5m.so. 00007F6CF6C18FC9 Unknown Unknown",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1828:756,log,log,756,https://psicode.org,https://github.com/psi4/psi4/issues/1828,1,['log'],['log']
Testability,I have a working psi4 version again and will do some testing. Using `print 5` I see the Fock matrix becomes `nan` at the end which is definitely not good :-). I don't think ADIIS should turn on for the final iteration.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2890#issuecomment-1460466266:53,test,testing,53,https://psicode.org,https://github.com/psi4/psi4/issues/2890#issuecomment-1460466266,1,['test'],['testing']
Testability,"I have added a test case similar to the test case for the gradient. I do not know of other codes that have this capability but the test case enumerate all the necessary terms and check for the correct expansion formula for a trimer truncated at the two-body level. Without this PR, the many-body expansion terms for the Hessian are not summed up correctly if the VMFC basis set superposition error scheme is used. The `_sum_cluster_ptype_data` function is supposed to construct the total cluster gradient or Hessian from the fragment computations. Documentation is beyond the scope of this trivial PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2389#issuecomment-1003755930:15,test,test,15,https://psicode.org,https://github.com/psi4/psi4/pull/2389#issuecomment-1003755930,3,['test'],['test']
Testability,I have added one more test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1042#issuecomment-433259411:22,test,test,22,https://psicode.org,https://github.com/psi4/psi4/pull/1042#issuecomment-433259411,1,['test'],['test']
Testability,"I have been concerned for some time that there seems to be some little; symmetry-breaking noise in nearly all Psi4 gradients, and I have not taken; the time to follow up on it. It puzzles me, because we never saw stuff; like this in Psi3... those gradients were already symmetric and did not; need a ""symmetrize"" function to be called.... The only part of Psi that; I've checked that seems immune to this problem is Daniel Crawford's CC; gradients, which are perfectly symmetric. On Wed, Jan 30, 2019 at 10:40 AM Jonathon Misiewicz <; notifications@github.com> wrote:. > Discovered while remedying test cases where reference numbers needed to be; > changed due to my upcoming #1143; > <https://github.com/psi4/psi4/issues/1143> fix. DFOCC gradients are not; > symmetrized. If you'd like an example, just look in the reference output; > files; > <https://github.com/psi4/psi4/blob/master/tests/dfomp3-grad2/output.ref#L603-L604>!; > Symmetry of the overlap gradient is broken in the seventh decimal place.; > The other terms have some errors, but much smaller. That the overlap; > gradient is most afflicted is unsurprising, since the overlap integrals are; > contracted against one of the many ""generalized Fock matrices"". This one; > depends on the 1RDM and 2RDM, which are not currently symmetrized.; >; > I'm hoping to include this in 1.3 with the #1143; > <https://github.com/psi4/psi4/issues/1143> fix, since this bug could lead; > to optimizations failing, as we saw with DFMP2 two weeks ago (#1483; > <https://github.com/psi4/psi4/pull/1483>). Because individual terms are; > printed, the individual terms need to be symmetrized, and it may take me; > some time to find where the symmetrize calls need to be placed. If it; > takes too long, I'm fine with delaying to 1.4.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/1504>, or mute the thread; > <https://github.com/notif",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1504#issuecomment-458993782:598,test,test,598,https://psicode.org,https://github.com/psi4/psi4/issues/1504#issuecomment-458993782,2,['test'],"['test', 'tests']"
Testability,"I have built it from the recent master, this is the HEAD:; ```git; commit d7529df57c2815cfb43a88d9b739c94c3a2322c4 (HEAD -> master, origin/master, origin/HEAD); Author: Susi Lehtola <susi.lehtola@alumni.helsinki.fi>; Date: Thu Aug 15 15:55:09 2019 +0300. Add some short and simple tests to make sure calculations work in weird basis sets. (#1701); ```. cmake options I used. ```bash; CC=icc CXX=icc FC=ifort cmake .. -DCMAKE_INSTALL_PREFIX=/home/filip/software/psi4-1.4rc-opt -DMAX_AM_ERI=7 -DBLAS_TYPE=MKL -DENABLE_OPENMP=ON -DENABLE_simint=ON -DCMAKE_CXX_FLAGS=""-march=haswell"" -DCMAKE_C_FLAGS=""-march=haswell"" -DSIMINT_VECTOR=avxfma; ```. To the second point, I've stripped down my test case, in which I noticed this issue, as it has some external dependencies (not publicly available yet, cause it's WIP). I can confirm I'm seeing a crash with the script I have provided. See below:; EDIT: conda pre-built binaries 1.3.2 works fine. Is it my build issue?; ```;  python minimal.py . *** tstart() called on filip-ThinkPad-E495; *** at Sun Aug 25 15:47:40 2019. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // Guess SCF, 3-21G Basis //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. => Loading Basis Set <=. Name: 3-21G; Role: ORBITAL; Keyword: BASIS; atoms 1-2 entry HE line 28 file /home/filip/software/psi4-1.4rc-opt/share/psi4/basis/3-21g.gbs . ---------------------------------------------------------; SCF Castup computation ; ---------------------------------------------------------; SCF; by Justin Turney, Rob Parrish, Andy Simmonett; and Daniel G. A. Smith; UHF Reference; 1 Threads, 500 MiB Core; ---------------------------------------------------------. ==> Geometry <==. Molecular point group: c1; Full point group: C_inf_v. Geometry (in Angstrom), charge = 0, multiplicity = 1:. Center X Y Z Mass ; ------------ ----------------- ----------------- ----------------- -----------------; HE 0.000000000000 0.000000000000 -1.481692970000 4.002603254130; Gh(HE) 0.000000000000 0.000000000000 1.4816",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282:281,test,tests,281,https://psicode.org,https://github.com/psi4/psi4/pull/1706#issuecomment-524633282,2,['test'],"['test', 'tests']"
Testability,I have download the Psi4conda-1.3.2-py37-Linux-x86_64.sh and install it on a scientific Linux 6 computer with ldd (GNU libc) 2.12.; The installation finish without any error and I got a `Segmentation fault` when running `psi4 --test`. `conda list` gives. ```; # packages in environment at /users/grte2001/psi4conda:; #; # Name Version Build Channel; ambit 0.3 h137fa24_1 psi4; asn1crypto 0.24.0 py37_0 ; atomicwrites 1.3.0 py37_1 ; attrs 19.1.0 py37_1 ; blas 1.0 mkl ; ca-certificates 2019.1.23 0 ; certifi 2019.3.9 py37_0 ; cffi 1.12.3 py37h2e261b9_0 ; chardet 3.0.4 py37_1 ; chemps2 1.8.9 h8c3debe_0 psi4; conda 4.6.14 py37_0 ; cryptography 2.6.1 py37h1ba5d50_0 ; cvxopt 1.2.0 py37hfa32c7d_0 ; decorator 4.4.0 py37_1 ; deepdiff 3.3.0 py37_1 psi4; dftd3 3.2.1 h84218bc_2 psi4; dkh 1.2 h173d85e_2 psi4; future 0.17.1 py37_0 ; gau2grid 1.3.1 h035aef0_0 psi4; gcp 2.0.2 h84218bc_1 psi4; gdma 2.2.6 h0e1e685_6 psi4; glpk 4.65 h3ceedfd_2 ; gmp 6.1.2 h6c8ec71_1 ; gsl 2.4 h14c3975_4 ; h5py 2.8.0 py37h989c5e5_3 ; hdf5 1.10.2 hba1933b_1 ; idna 2.8 py37_0 ; intel-openmp 2019.3 199 ; jsonpickle 0.9.6 py37_0 psi4; libedit 3.1.20181209 hc058e9b_0 ; libefp 1.5.0 h84097be_1 psi4; libffi 3.2.1 hd88cf55_4 ; libgcc-ng 8.2.0 hdf63c60_1 ; libgfortran-ng 7.3.0 hdf63c60_0 ; libint 1.2.1 hb4a4fd4_6 psi4; libstdcxx-ng 8.2.0 hdf63c60_1 ; libxc 4.3.4 h7b6447c_0 psi4; metis 5.1.0 hf484d3e_4 ; mkl 2019.3 199 ; mkl_fft 1.0.12 py37ha843d7b_0 ; mkl_random 1.0.2 py37hd81dba3_0 ; more-itertools 7.0.0 py37_0 ; ncurses 6.1 he6710b0_1 ; networkx 2.3 pypi_0 pypi; numpy 1.16.3 py37h7e9f1db_0 ; numpy-base 1.16.3 py37hde5b4d6_0 ; openfermion 0.9 py37hd763080_1 psi4; openfermionpsi4 0.4 py37h934b37d_0 psi4; openssl 1.1.1b h7b6447c_1 ; pcmsolver 1.2.1 py37h142c950_0 psi4; pint 0.9 py37_2 psi4; pip 19.1.1 py37_0 ; pluggy 0.11.0 pypi_0 pypi; psi4 1.3.2+ecbda83 py37h31b3128_0 psi4; psi4-rt 1.3.2 py37ha6b60c8_0 psi4; py 1.8.0 py37_0 ; pycosat 0.6.3 py37h14c3975_0 ; pycparser 2.19 py37_0 ; pydantic 0.23 py37_0 psi4; pylibefp ,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792:228,test,test,228,https://psicode.org,https://github.com/psi4/psi4/issues/1792,1,['test'],['test']
Testability,"I have got a working *Psi4* build on Windows! Though many tests still failing due to hard-coded paths and other platform specific stuff, which I will fix eventually. The porting requires many small code changes as MSVC don't support several non-standard features present in GCC and clang. So, I will start with several trivial to PRs, to make future merging easier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-401782072:58,test,tests,58,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-401782072,1,['test'],['tests']
Testability,"I have installed mkl-devel, but now I have a new issue:. ```; CMake Error at tests/fsapt-terms/CMakeLists.txt:4 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-terms/../../psi4/share/psi4/fsapt/fsapt.py"". CMake Error at tests/fsapt-allterms/CMakeLists.txt:6 (file):; file COPY cannot find; ""/server-home1/.../psi4/tests/fsapt-allterms/../../psi4/share/psi4/fsapt/fsapt.py"".; ```. Is there a cmake comment I should look at in the psi4 documentation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/954#issuecomment-381277308:77,test,tests,77,https://psicode.org,https://github.com/psi4/psi4/issues/954#issuecomment-381277308,4,['test'],['tests']
Testability,"I have made one final commit here to update the comment, this should be OK to merge unless someone else wants to chime in. The tests run by the CI are passing, here is hoping there will no surprises the next time someone runs the full test suite.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2700#issuecomment-1252900992:127,test,tests,127,https://psicode.org,https://github.com/psi4/psi4/pull/2700#issuecomment-1252900992,2,['test'],"['test', 'tests']"
Testability,"I have no horse in this race in terms of is the behavior of `Molecule.mass` or `Molecule.Z` acting strangely, but the inconstancy is a problem. If we took every property test in the suite and added a test where ghost atoms are involved I think we would turn up some failures since the way molecular weight is calculated in `optrot.cc` as @bgpeyton described does not properly ignore ghosted atoms and i wouldn't be surprised if there were others.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-363463003:170,test,test,170,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363463003,2,['test'],['test']
Testability,"I have not followed this thread closely, but I have a couple of comments.; 1. Someone mentioned that the OPDM is supposed to be stored in wfn in the; AO basis. AJ then asked if this meant he should backtransform it to the SO; basis. I'm not sure that question got answered....and AO and SO are not; equivalent in molecules with point group symmetry. Do I understand; correctly that OPDMs are stored all the way back in the AO (not SO) basis?; 2. I looked through the CI and CC output with Lori yesterday. Both outputs; are totally logical for what they are doing, yet they are inconsistent with; each other in terms of numbering roots. For the case of CCEOM, because; excited states are all treated together, it is very logical to number the; EOM states 1, 2, 3, etc. That then means the ground state, if it is in; this same numbering scheme, has to be labeled root 0. For the CI outputs,; everything is lumped together, so it is logical to number the ground state; as 1. If we make things consistent, it is easier to change the CI; numbering to match the CC numbering. This also has the advantage that the; CC numbering will work well for CIS, TDDFT, etc. So that we can easily loop over things, I favor any lists of energies or; dipoles as also including the ground state (state 0). So, we can have. CI/CC ROOT 0 ENERGY [or whatever it's called, I forget]; CI/CC ROOT 1 ENERGY; etc. as well as. CI/CC ROOT 0 DIPOLE x; CI/CC ROOT 1 DIPOLE x. Including ROOT 0 in the lists above will remove unnecessary annoying logic; when looping over roots for processing/printing output. For CI use cases,; we will always want to loop over all roots including ROOT 0. For the ground state only, we can also duplicate the ROOT 0 information; into variable names without the ""ROOT n"" designation, which is what people; will want to grab if they just want g.s. info. CI/CC DIPOLE x. (Actually, strictly speaking, the root number that should go here should; probably be FOLLOW_ROOT, which defaults to ROOT1 (now should",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-260126337:531,log,logical,531,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-260126337,3,['log'],['logical']
Testability,"I have now run almost the _entire_ test suite with 100% pass rate. (DFT benchmarks and fsapt-1 excluded as they always time out and are not relevant to these changes.) If there are still concerns about the metadata, tell me sooner rather than later. Next step is documenting the metadata. Also, am I correct in assuming that we want the optimization sow/reap code ripped up as well? I assume that wouldn't be very useful, without the sow/reap code in hessian and gradient.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1289#issuecomment-432227345:35,test,test,35,https://psicode.org,https://github.com/psi4/psi4/pull/1289#issuecomment-432227345,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"I have overhauled this interface in #365 for SCF/DFT/MP2/CI so that the following now works:. ``` python; prop('above_method', properties=['any_opdm_func']); ```. See [here](http://www.psicode.org/psi4manual/master/oeprop.html?highlight=oeprop) for full OEProp functionality; this documentation and the `property` documentation also had a facelift in the PR. Full tests suites can be found in the following test cases:; - ci-properties ('transition_dipole', etc, works here); - mp2-properties; - scf-properties. I did not touch occ/dfocc/cc due to how they integrated their OEProp calls, but I would assume that this will eventually be deprecated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/40#issuecomment-213409294:364,test,tests,364,https://psicode.org,https://github.com/psi4/psi4/issues/40#issuecomment-213409294,2,['test'],"['test', 'tests']"
Testability,"I have reap.py in tests/ now, and pywrap-db2 is working in addition to pywrap-freq-e-sowreap, but pywrap-opt-sowreap is still failing. That appears to be a bug or an error in the input file since I can't even run that one ""by-hand"". ; Error shown below:. ```; Traceback (most recent call last):; File ""<string>"", line 24, in <module>; File ""/home/ajay/psi4/source/lib/python/driver.py"", line 1191, in optimize; thisenergy = gradient(name, **kwargs); File ""/home/ajay/psi4/source/lib/python/driver.py"", line 824, in gradient; fmaster.write(p4util.format_options_for_input().encode('utf-8')); TypeError: format_options_for_input() takes exactly 1 argument (0 given); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/192#issuecomment-157864804:18,test,tests,18,https://psicode.org,https://github.com/psi4/psi4/pull/192#issuecomment-157864804,1,['test'],['tests']
Testability,"I have rerun the benchmarks at: https://markus-beuckelmann.de/blog/boosting-numpy-blas.html. The results are:. pypi numpy 1.21.3: ; ```; Dotted two 4096x4096 matrices in 0.74 s.; Dotted two vectors of length 524288 in 0.26 ms.; SVD of a 2048x1024 matrix in 0.83 s.; Cholesky decomposition of a 2048x2048 matrix in 0.09 s.; Eigendecomposition of a 2048x2048 matrix in 6.14 s.; ```. conda-forge 1.21.0: ; ```; Dotted two 4096x4096 matrices in 0.67 s.; Dotted two vectors of length 524288 in 0.25 ms.; SVD of a 2048x1024 matrix in 0.72 s.; Cholesky decomposition of a 2048x2048 matrix in 0.08 s.; Eigendecomposition of a 2048x2048 matrix in 5.33 s.; ```. This time around the results are not meaningfully different. Something must have been throwing them off before, so my apologies for the red herring regarding the different builds. They seem to be using the same BLAS. That just makes the prospect of *actually* using Accelerate for numpy and scipy all the more exciting! I will try to look into how to do this and report back if I find out how to do so. (Or maybe someone else knows, since it seems like it should be possible to do now.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-961497818:17,benchmark,benchmarks,17,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-961497818,1,['benchmark'],['benchmarks']
Testability,"I have seen the same result in both v1.7 and v1.9. Below is my input:. ```; molecule {; C 43.447574615 4.402106285 18.442501068; Cl 43.539905548 3.305690527 19.834751129; H 43.777095795 3.891677380 17.581066132; H 42.397209167 4.711723328 18.365312576; H 44.039062500 5.304682255 18.653499603; Na 43.090690613 5.591814041 21.935888290; 1 1; }; set print 2; set basis def2-TZVPPD; set gradient_write on; G, wfn = gradient(""WB97M-D3BJ"", return_wfn=True); wfn.energy(); wfn.gradient().print_out(); ```. Output:; [psi 1.7](https://github.com/psi4/psi4/files/15100254/dimer_0001.txt); [psi 1.9](https://github.com/psi4/psi4/files/15100255/test.txt). Output gradient:. ```; -Total Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.017612153536 -0.030226835448 -0.016364611072; 2 -0.001951550496 0.000510350455 -0.012196966883; 3 -0.006845878529 0.008632172968 0.016317898785; 4 -0.007830360016 0.005006082123 0.005314350686; 5 -0.000151463183 0.010716793785 0.004937148905; 6 -0.000804674189 0.005151834777 0.001952651442; ```. The total gradient of the geometry is (in Hatree/Bohr):. ```; 0.000028227123 -0.00020960134 -0.000039528137; ```. This seems quite large! When converted to kcal/mol/A, it's almost 0.25 kcal/mol/A. I am training a machine learning potential, which needs data in high accuracy. To find the source, I set `set print 2`, and found the source is XC Gradient. Other parts are good. ```; -XC Gradient: ; Atom X Y Z ; ------ ----------------- ----------------- ----------------- ; 1 0.023413713156 -0.034618654043 0.016561407807 ; 2 0.004295152287 -0.082574073389 0.110502690803 ; 3 0.057058934205 -0.084984859487 -0.155578605215 ; 4 -0.165454990449 0.054800035457 -0.007744542989 ; 5 0.081560548449 0.141475784522 0.033034928588 ; 6 -0.000845130524 0.005692165589 0.003184592861 ; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3161:634,test,test,634,https://psicode.org,https://github.com/psi4/psi4/issues/3161,1,['test'],['test']
Testability,"I have the expanded OMP2/OCEPA hessian formulas in a Jupyter notebook, and I know they're implemented in DFOCC. Seeing how that choice affects convergence would be an interesting test some time. (Well, assuming DFOCC orbital convergence gets straightened out...)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1829#issuecomment-594950777:179,test,test,179,https://psicode.org,https://github.com/psi4/psi4/pull/1829#issuecomment-594950777,1,['test'],['test']
Testability,I have updated the call points for the new signature of `triplet/doublet` and tests pass locally with warnings converted to errors. So this is ready for final review + merge. @psi4/maintainers,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1349#issuecomment-456894587:78,test,tests,78,https://psicode.org,https://github.com/psi4/psi4/pull/1349#issuecomment-456894587,1,['test'],['tests']
Testability,I have updated the reference on my branch and will file a pull request (on private) as soon a I manage to build and run some tests. For the moment I have updated the wiki (`git clone` ---> `git clone --recursive`),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/189#issuecomment-157114525:125,test,tests,125,https://psicode.org,https://github.com/psi4/psi4/issues/189#issuecomment-157114525,1,['test'],['tests']
Testability,"I have vague memories about some of the DSD methods changing parameters; from one paper to another. I discussed this with Jan Martin way back when; via email, and thought the situation was somewhat confusing. Without; remembering this any more clearly than I do, I suppose Holger's idea of; using the more recent paper is probably a good one. On Wed, Mar 7, 2018 at 12:43 PM, Holger Kruse <notifications@github.com>; wrote:. > i remember the omega issue from a forum post: http://forum.psicode.org/t/; > wb97x-definition-bug/480; >; > I think ORCA was used for all the DSD developments. There you can defined; > DHDF compositions in the input file (see e.g. my reference outputs). If; > manual defining parameters for another program really counts as a good test; > is perhaps debatable because typos never come alone ;); >; > Are the non-dispersion forms of DSD-PBEP86 from both papers really; > different? I hope not...; > Anyway, I'd stick with the 2013 paper in doubt because it is the latest; > ""update"".; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/922#issuecomment-371221109>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdkpodkciT2JkrcNFW-gbLDLpUy4Mks5tcBwzgaJpZM4SJ0Uw>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-371240538:758,test,test,758,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-371240538,1,['test'],['test']
Testability,"I haven't encountered this behavior myself, but it does sound faulty. Since there's the binary as fallback and more and more pieces are using c++11, I don't think we're avoiding it anymore. @robertodr was talking about the feasibility of using some advanced cmake features to handle this problem more logically (https://cmake.org/cmake/help/v3.1/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html). They will require bumping our required cmake version, but, for developers, that's not so bad.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/188#issuecomment-157058625:301,log,logically,301,https://psicode.org,https://github.com/psi4/psi4/issues/188#issuecomment-157058625,1,['log'],['logically']
Testability,"I haven't reloaded all my freq familiarity, but I did various comparisons around the time of the thermo update, but [molpro](https://github.com/psi4/psi4/blob/master/tests/freq-isotope/molpro.out#L469-L481) and [psi4](https://github.com/psi4/psi4/blob/master/tests/freq-isotope/output.ref#L4113-L4136) match, and there's other examples in that folder. Psi4 output vibs through both findif routes I'm confident are nmw (through analytic I haven't looked at). Normalization sounds good to me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/644#issuecomment-286563411:166,test,tests,166,https://psicode.org,https://github.com/psi4/psi4/pull/644#issuecomment-286563411,2,['test'],['tests']
Testability,I haven't run any tests but it looks like it succeeded this time. Thanks.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3006#issuecomment-1627820604:18,test,tests,18,https://psicode.org,https://github.com/psi4/psi4/issues/3006#issuecomment-1627820604,1,['test'],['tests']
Testability,"I haven't tested it, but one issues seems (as far as I read the traceback docs) that the exception message from the `SyntaxError` contains the offending line before the normal content, which is `ExceptionName: <text>`. . Though syntax errors usually crash for me like this:. ```; Traceback (most recent call last):; File ""/Users/kruse/qc/psi4.bin/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 29; print '1'; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print('1')?. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/Users/kruse/qc/psi4.bin/bin/psi4"", line 348, in <module>; suspect_lineno = traceback.extract_tb(exc_traceback)[1].lineno - 1 # -1 for 0 indexing; IndexError: list index out of range; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1920#issuecomment-639484204:10,test,tested,10,https://psicode.org,https://github.com/psi4/psi4/issues/1920#issuecomment-639484204,1,['test'],['tested']
Testability,I haven't tested locally but `-c conda-forge/label/psi4_dev` does not seem to be mandatory because 1.8 is now in `main` at https://github.com/conda-forge/psi4-feedstock/tree/main. But `-c conda-forge/label/libint_dev` still seems to be required. Do you confirm @loriab?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1548158932:10,test,tested,10,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1548158932,1,['test'],['tested']
Testability,"I haven't tested with gdma. You mean you see this behavior with this PR?. I wouldn't ""expect"" any of the tests to fail (erd should more or less be a drop-in replacement for libint). But, at least for me, but many tests still fail.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-275581979:10,test,tested,10,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-275581979,3,['test'],"['tested', 'tests']"
Testability,"I implemented OMP2.5 gradients with obsessively tight convergence criteria.; The fixed-Psi implementation agrees with Psi4Numpy OMP2.5 gradients within testing tolerance, but the current-Psi implementation does not. Note that `omp2p5-grad2` only has one independent gradient parameter, being a diatomic. The values the three implementations give for this parameter are:; ```; Psi4Num: 0.011650390674; New Psi: 0.011650262043; ^; Old Psi: 0.011614594883; ^; ```. My conclusion is that my fix is correct, and the reference values are not correct to within testing values, although close enough to correct to not have caused a problem for most users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1808#issuecomment-584134023:152,test,testing,152,https://psicode.org,https://github.com/psi4/psi4/issues/1808#issuecomment-584134023,2,['test'],['testing']
Testability,"I incorporated Francesco's suggestion of std::stod(). It worked fine in my tests. Only for a hand-edited intco.dat would these checks ever matter. (I discovered that if the user tries a string like ""hello"" for the value, it doesn't even pass through our initial psithon syntax code for some reason.) The important thing is that we allow zero values. BTW, I wonder why I can't see Francesco's comment on github's website (https://github.com/psi4/psi4/pull/535). Are there private comments?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/535#issuecomment-264558498:75,test,tests,75,https://psicode.org,https://github.com/psi4/psi4/pull/535#issuecomment-264558498,1,['test'],['tests']
Testability,"I increased the default threshold to 1e-15 as this seems slightly favoured. (not re-doing the timing benchmark, should be very similar)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1581#issuecomment-499173418:101,benchmark,benchmark,101,https://psicode.org,https://github.com/psi4/psi4/pull/1581#issuecomment-499173418,1,['benchmark'],['benchmark']
Testability,"I just added a test case. Documentation is already in place, but it should probably be expanded with instructions on how to use .cube files.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/116#issuecomment-121737099:15,test,test,15,https://psicode.org,https://github.com/psi4/psi4/issues/116#issuecomment-121737099,1,['test'],['test']
Testability,"I just committed a version with the user-vector stuff removed, more transparent handling of prefactors, and less code duplication for restricted/unrestricted. The code is now a lot easier to read, I hope the reviewers will agree 😉 ; I'll now add the test cases suggested by @JonathonMisiewicz 👍",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2266#issuecomment-966913098:250,test,test,250,https://psicode.org,https://github.com/psi4/psi4/pull/2266#issuecomment-966913098,1,['test'],['test']
Testability,"I just compiled psi4 using Intel compilers 16.0.3 20160415 (icc icpc ifort). When I tested it with opt-irc-1 and opt-irc-2, the segmentation fault appeared. (System Ubuntu 14.04). Output for opt-irc-1: (It seems to be interrupted after the first SCF HESS). ```; -----------------------------------------------------------------------; Psi4: An Open-Source Ab Initio Electronic Structure Package; Psi4 1.0.54 Driver. Git: Rev {master} 8d4cec3 . J. M. Turney, A. C. Simmonett, R. M. Parrish, E. G. Hohenstein,; F. A. Evangelista, J. T. Fermann, B. J. Mintz, L. A. Burns, J. J. Wilke,; M. L. Abrams, N. J. Russ, M. L. Leininger, C. L. Janssen, E. T. Seidl,; W. D. Allen, H. F. Schaefer, R. A. King, E. F. Valeev, C. D. Sherrill,; and T. D. Crawford, WIREs Comput. Mol. Sci. 2, 556-565 (2012); (doi: 10.1002/wcms.93). Additional Contributions by; A. E. DePrince, U. Bozkaya, A. Yu. Sokolov, D. G. A. Smith, R. Di Remigio,; R. M. Richard, J. F. Gonthier, H. R. McAlexander, M. Saitow, and; B. P. Pritchard; -----------------------------------------------------------------------. Psi4 started on: Mon Aug 22 01:48:05 2016. Process ID: 28503; PSI4DATADIR: /usr/local/psi4/share/psi4; Memory level set to 256.000 MB. ==> Input File <==. --------------------------------------------------------------------------; #! Compute the IRC for HOOH torsional rotation at the RHF/DZP level of theory. ; # Print; # the path to a trajectory file for visualization; # in Jmol.; # grep '@IRC' on the output to see a nice printout; # of the progress of your IRC computation. molecule h2o2 {; H 0.0000000000 0.9803530335 -0.8498671785; O 0.0000000000 0.6988545188 0.0536419016; O 0.0000000000 -0.6988545188 0.0536419016; H 0.0000000000 -0.9803530335 -0.8498671785; }. # g_convergence needs to be tight for IRCs:; set g_convergence gau_verytight. set {; basis dzp; opt_type irc; geom_maxiter 50; irc_direction backward; }. frequencies('scf'). # Lower point group from C2v to C2; h2o2.reset_point_group('c2'). energy = optimi",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/463:84,test,tested,84,https://psicode.org,https://github.com/psi4/psi4/issues/463,1,['test'],['tested']
Testability,"I just compiled this branch and it looks like the test that I have still doesn't work. I think I remember trying to flip this as well and eventually concluded that the issue was ""something weird"" because `update_geometry` _should_ update the symmetry information.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/299#issuecomment-191828792:50,test,test,50,https://psicode.org,https://github.com/psi4/psi4/pull/299#issuecomment-191828792,1,['test'],['test']
Testability,"I just had a look at the tests, I realise I had been using a string as the input for the solvent, but it should be float/int type! So this was indeed user error.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3119#issuecomment-1906149071:25,test,tests,25,https://psicode.org,https://github.com/psi4/psi4/issues/3119#issuecomment-1906149071,1,['test'],['tests']
Testability,"I just noticed that the UKS gradients are off when nthreads>1. Failing tests are: dft_grad_lr2, dft_grad_lr3, dft_grad_meta, dft-grad2. An example case is:. ```; func_reference = psi4.Matrix.from_list([ #TEST; [ 0., 0., -5.23600907e-02], #TEST; [ 0., 0., 5.23600907e-02]]) #TEST; cam_b3lyp_reference = psi4.Matrix.from_list([ #TEST; [ 0., 0., -1.09138077e-01], #TEST; [ 0., 0., 1.09137576e-01]]) #TEST; func_uks_reference = psi4.Matrix.from_list([ #TEST; [ 0., 0., 1.77777928e-03], #TEST; [ 0., 0., -1.77777928e-03]]) #TEST; cam_b3lyp_uks_reference = psi4.Matrix.from_list([ #TEST; [ 0., 0., -3.46813335e-02], #TEST; [ 0., 0., 3.46809033e-02]]) #TEST. molecule {; H 0.000 0.000 0.000; F 0.000 0.000 1.100; }. set {; scf_type df; basis cc-pvdz; dft_radial_points 120; dft_spherical_points 434; e_convergence 12; d_convergence 10; points 5; }. molecule {; 1 2; H 0.000 0.000 0.000; F 0.000 0.000 1.100; }. set reference uks. anl_grad = gradient('scf', dft_functional=""CAM-B3LYP"", dertype=1); fd_grad = gradient('scf', dft_functional=""CAM-B3LYP"", dertype=0); compare_matrices(cam_b3lyp_uks_reference, anl_grad, 6, ""Analytic vs Reference CAM Gradients"") #TEST; compare_matrices(anl_grad, fd_grad, 4, ""Analytic vs FD CAM Gradients"") #TEST; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2941:71,test,tests,71,https://psicode.org,https://github.com/psi4/psi4/issues/2941,15,"['TEST', 'test']","['TEST', 'tests']"
Testability,"I just pulled the code, and will see if I can figure it out. > On Feb 1, 2016, at 1:57 PM, Justin Turney notifications@github.com wrote:; > ; > Something in the recent version of Psi4 is causing coupled cluster test cases to fail on our cluster. It also appears in the clang version of the Travis CI builds. I'm using Intel compiler on our cluster.; > ; > Is there a new transqt/ccsort module, if so it appears to be failing in it:; > ; > From cc1 test output:; > ; > ```; > Wfn Parameters:; > --------------------; > Wavefunction = CCSD; > Number of irreps = 4; > Number of MOs = 25; > Number of active MOs = 25; > AO-Basis = NONE; > Semicanonical = false; > Reference = RHF; > Print Level = 1; > ; > IRREP # MOs # FZDC # DOCC # SOCC # VIRT # FZVR; > ----- ----- ------ ------ ------ ------ ------; > A1 12 0 3 0 9 0; > A2 2 0 0 0 2 0; > B1 4 0 1 0 3 0; > B2 7 0 1 0 6 0; > Transforming integrals...; > IWL integrals will be deleted.; > (OO|OO)...; > Presorting SO-basis two-electron integrals.; > Sorting File: SO Ints (nn|nn) nbuckets = 1; > Transforming the one-electron integrals and constructing Fock matrices; > Starting first half-transformation.; > Sorting half-transformed integrals.; > First half integral transformation complete.; > Starting second half-transformation.; > Two-electron integral transformation complete.; > (OO|OV)...; > Starting second half-transformation.; > Two-electron integral transformation complete.; > (OO|VV)...; > Starting second half-transformation.; > Two-electron integral transformation complete.; > (OV|OO)...; > Starting first half-transformation.; > Sorting half-transformed integrals.; > First half integral transformation complete.; > Starting second half-transformation.; > Two-electron integral transformation complete.; > (OV|OV)...; > Starting second half-transformation.; > Two-electron integral transformation complete.; > (OV|VV)...; > Starting second half-transformation.; > Two-electron integral transformation complete.; > (VV|OO)...; > Starti",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178134633:211,test,test,211,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178134633,2,['test'],['test']
Testability,I just pushed some changes that make most of the tests pass for me (at least the ones that have run so far). I will run a more complete set and let you know how it goes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/587#issuecomment-275585286:49,test,tests,49,https://psicode.org,https://github.com/psi4/psi4/pull/587#issuecomment-275585286,1,['test'],['tests']
Testability,"I just refactored my code to reduce code duplicity (Ran all C-Tests, still passed). I changed the build_JK function by adding two boolean switches that determine whether to build J and/or K. So the function header is now; `build_JK(ints, D, J, K, do_J, do_K)`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-977378952:62,Test,Tests,62,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-977378952,1,['Test'],['Tests']
Testability,"I just removed opt10 from all ctest labels. Its still present, but will not run unless you specifically request it. It looks like the reference opt10 ran in about 45 minutes on 8 threads. @psi-rking If you are just testing angular dependancies can you reduce this to something like 6-31G?. Edit: Whoops, misread timing data. > On Feb 15, 2016, at 9:27 AM, Justin Turney notifications@github.com wrote:; > ; > Yeah, we should have that mechanism to leave it as a longertest. Maybe that's what @dgasmith https://github.com/dgasmith has already done.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4/issues/253#issuecomment-184228286.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-184233000:215,test,testing,215,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-184233000,1,['test'],['testing']
Testability,I just tested on my box and I think it is as simple as changing line 4 of `psi4/src/bin/psi4_main/CMakeLists.txt` from. ```; COMMAND ${CMAKE_COMMAND} -E copy ...; ```. to. ```; COMMAND ${CMAKE_COMMAND} -E copy_if_different ...; ```. The `version.h` file only changes the the git commit sha changes (only on commits and pulls). Another consequence of the cmake rewrite is that before you could've simply typed `make mints/fast` in your objdir and it would just compiled libmints. Now's there the required step of `cd objdir/psi4_core-prefix/src/psi4_core-build` before `make mints/fast`.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239052313:7,test,tested,7,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239052313,1,['test'],['tested']
Testability,"I just tested the code in this PR and works well for my purposes, i.e. loading the FCHK file into HORTON to perform a density partitioning. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1475#issuecomment-456190882:7,test,tested,7,https://psicode.org,https://github.com/psi4/psi4/pull/1475#issuecomment-456190882,1,['test'],['tested']
Testability,"I keep hearing about this ""problem"" also elsewhere, but the fact is that the regular grid for cube files is ill fitted for integrating the density of steep regions (e.g. at the nuclei). ; python-based integrator for testing: https://gist.github.com/hokru/71c61f5afb2e5921b5b4955fed70f5db. cubes were made for visualization not for further analysis, iirc. Does chargemol only work with cube files?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311#issuecomment-433074513:216,test,testing,216,https://psicode.org,https://github.com/psi4/psi4/issues/1311#issuecomment-433074513,1,['test'],['testing']
Testability,"I leave most of the environment variable stuff for PSI4 in the hands of conda. I have a modified/compiled version of PSI4 on just one of my machines, but PSI4 crashes on all of them for one electron properties. I saw the crash while I was running a testing script, so I know that it printed correct results for HF, PBE0, gradient, and PBE0+point-charges calculations. The only test of mine that failed involved recovering charges from a QM calculation. ```; [input file]. set_num_threads(8); memory 256 mb; set reference rhf; set basis 6-31G*; set guess sad; set scf_type df. psi4_io.set_specific_path(32,'./'); psi4_io.set_specific_retention(32,True); psi4_io.set_specific_path(180,'./'); psi4_io.set_specific_retention(180,True). molecule LICHM_0 {; 0 1; O 0.87273600000000 0.00000000000000 -1.2467539999999; H 0.28827300000000 0.00000000000000 -2.0108530000000; H 0.28827300000000 0.00000000000000 -0.4826550000000; symmetry c1; no_reorient; no_com; }. Chrgfield = QMMM(); Chrgfield.extern.addCharge(-1.3062266666666,-0.6489658001839,0.00000001660701,1.10730418839000); Chrgfield.extern.addCharge(0.35180666666666,-0.7534241883900,-0.0000000536004,1.26252019981607); Chrgfield.extern.addCharge(0.86636000000000,-0.7788030060160,0.13229430272998,1.13268305579077); Chrgfield.extern.addCharge(-1.3062266666666,-0.9086401998160,-0.0000000166070,1.15806181160999); Chrgfield.extern.addCharge(0.10176666666666,-0.8041818116099,0.00000005360047,1.00284580018392); Chrgfield.extern.addCharge(0.86636000000000,-0.7788029939839,-0.1322943027299,1.13268294420922); Chrgfield.extern.addCharge(0.51284666666666,-0.7965191998160,0.76409898339298,1.73166981160999); Chrgfield.extern.addCharge(-1.7440911751517,-0.6778443974775,0.64528811991560,1.64918444879139); Chrgfield.extern.addCharge(0.85696271562354,-0.6894742127334,0.82228626070531,1.58968679653742); Chrgfield.extern.addCharge(0.51284666666666,-0.5368448001839,0.76409901660701,1.68091218839000); Chrgfield.extern.addCharge(-0.5989622639259,-0.65551960",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:249,test,testing,249,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,2,['test'],"['test', 'testing']"
Testability,"I left a code note above on perhaps why the `pg_` wasn't copied. But Ben's changes look like sensible ones to have always existed, and I think this is fundamental enough that if it broke something, it would show up in a test case. So if all the tests pass and we can replace the `new_mol = psi4.Molecule.create_molecule_from_string(mol.create_psi4_string_from_molecule())` in the driver with clones again, I'd say go for it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/299#issuecomment-191822729:220,test,test,220,https://psicode.org,https://github.com/psi4/psi4/pull/299#issuecomment-191822729,2,['test'],"['test', 'tests']"
Testability,"I like the options-processing macros, @ryanmrichard. Here you meant `AND`, yes? Or even better, `if(NOT DEFINED ${variable})`? https://github.com/ryanmrichard/psi4/blame/CMakeRewrite/cmake/Psi4Macros.cmake#L11. You may want to copy Psi4Macros from libint back over to psi4 (diff here: https://github.com/loriab/libint1/commit/e99270099119e51da745ae9ef34f20e6bd7b14ff) as I fixed that processing problem, expanded to bool options, elaborated printing, and tested a range of input values/specification routes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-236132448:455,test,tested,455,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-236132448,1,['test'],['tested']
Testability,"I made a disteli account when I saw your experimentation last week. When I click ""details"" to see the test output, I get a 404 page. Are there settings to increase the visibility of the test outputs?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235117364:102,test,test,102,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235117364,2,['test'],['test']
Testability,"I made a pass at the docs, very minimal. Not sure how extensive it should be. @maxscheurer the pe-tdscf test for RHF does not pass on my mac with cppe via pip. Excitation energy number 3 is off, rest is fine. No idea why, right now. ```; !----------------------------------------------------------------------------------!; ! !; ! PE OSCILLATOR STRENGTH: computed value does not match to atol=1e-05. !; ! Expected: !; ! [0.000004406911 0.000089321058 0.432081257 0.113168661 0.0190262828 ] !; ! Observed: !; ! [0.000004444431 0.000089181257 0.432105919683 0.113174232326 0.019027243438] !; ! Difference (passed elements are zeroed): !; ! [0.000000000000e+00 0.000000000000e+00 2.466268274193e-05 0.000000000000e+00 !; ! 0.000000000000e+00] !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006#issuecomment-694478253:104,test,test,104,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-694478253,1,['test'],['test']
Testability,"I may be doing something wrong, but the outputs I get seems unexpected. When running the following example with or without point charge, the same energy is computed:. ```; # Simple example to test QMMM charges. molecule {; 0 1; He 0.0 0.0 0.0; symmetry c1; }. Chrgfield = QMMM(); Chrgfield.extern.addCharge(0.0,0.0,5.0,-1.0); psi4.set_global_option_python('EXTERN', Chrgfield.extern). set {; basis aug-cc-pvtz; }. energy('scf'); ```. Either with or without, the energy is: -2.8612063084748378 Hartree. ```; grep ""Total Energy ="" *.out; with.out: Total Energy = -2.8612063084748378; without.out: Total Energy = -2.8612063084748378; ```. Full in and outputs are attached: [qmmm_test.zip](https://github.com/psi4/psi4/files/3884810/qmmm_test.zip) These are based on the documentation here: http://www.psicode.org/psi4manual/1.2/scf.html#external-potentials-and-qm-mm",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1757:192,test,test,192,https://psicode.org,https://github.com/psi4/psi4/issues/1757,1,['test'],['test']
Testability,"I may not be impartial, but I like the CMake colors a lot. LGTM. We have been tossing around the idea of moving tests around to make a bit more sense. - quicktests - Does psi work? tu1/scf-property/dfmp2-1/sapt1/cc1/casscf-sp only; - normaltests - Best coverage possible in a 20 minute envelope. (10 minutes on 2-thread travis); - longtests - Anything that runs in 15 minutes; - no modifier - All psi tests (including the 30 minutes - 1.5 hour tests). Obviously not in this PR, but something to ponder. @robertodr I found the colors on Stackoverflow, so I would say yes :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/524#issuecomment-262012104:112,test,tests,112,https://psicode.org,https://github.com/psi4/psi4/pull/524#issuecomment-262012104,3,['test'],['tests']
Testability,"I meant to add last night that if you haven't already, please test with a mol with ghosts, dummy atoms, ecp's, away from std orientation, etc. (since you're handing over mol info to gauxc). And if you ask for a snlink gradient, it does something sensible? Thanks.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2173350671:62,test,test,62,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2173350671,1,['test'],['test']
Testability,I moved everything up one level so `tests/pasture/ccsorttransqt2/*` —> `pasture-ccsortrransqt2/*`,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/534#issuecomment-265484472:36,test,tests,36,https://psicode.org,https://github.com/psi4/psi4/pull/534#issuecomment-265484472,1,['test'],['tests']
Testability,"I need some help with the cube prop test case. The way I set the test case requires comparing the cube files generated with some reference cube files, stored in tests/cubeprop. How can I copy these files in the directory in which tests are executed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/116#issuecomment-122019947:36,test,test,36,https://psicode.org,https://github.com/psi4/psi4/issues/116#issuecomment-122019947,4,['test'],"['test', 'tests']"
Testability,"I need to update the test for cc5, which is currently failing even though; it's not run automagically. It seems that the reference output was; overwritten by an output from a failed calculation. -TDC. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Sun, Apr 3, 2016 at 9:10 PM, Daniel Smith notifications@github.com; wrote:. > As a note: not all CC tests are tested through Perl. Actually looking at; > the output has caught a few bugs so far, although it does require someone; > intimately familiar with the tests to do so.; > ; > I would be happy if we could get eyes on every test, but if it doesn’t; > happen its not a big deal.; > ; > > On Apr 3, 2016, at 8:59 PM, Andy Simmonett notifications@github.com; > > wrote:; > > ; > > Sorry for the delay. The DCFT tests look good to me. I think we can also; > > check of the CC tests; if I remember correctly, those tests are actually; > > validated by comparing the output to the reference using a separate Perl; > > script. If the tests run successfully, it means that the output is present; > > and correct, or Perl wouldn't be able to parse it.; > > ; > > —; > > You are receiving this because you authored the thread.; > > Reply to this email directly or view it on GitHub <; > > https://github.com/psi4/psi4/pull/315#issuecomment-205091286>; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/pull/315#issuecomment-205094545",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-205097386:21,test,test,21,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-205097386,9,['test'],"['test', 'tested', 'tests']"
Testability,"I note that our EOM-CC3 test cases do not include one in which states of; different symmetries are obtained in the same job, so this seems likely to; be a genuine bug (though I could have sworn that we had such calculations; working initially). The EOM-CC3 algorithm we use computes one state at a; time, but the scratch quantities are likely to be different sizes for; different irreps. To get around this for now, I suggest simply running the two states in; separate jobs. -TDC. P.S. I removed the scf_type keyword and reproduced the error, so that's not; the problem. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Wed, Mar 9, 2016 at 12:40 PM, Andrew James notifications@github.com; wrote:. > @Konjkov https://github.com/Konjkov could you show some of the output; > above the PSIO_ERROR? I am not sure that DF integrals is the culprit; > here. It would be easier to track down if I could see where in the second; > exited state it is failing. I ran the input you posted but I don't see the; > same PSIO_ERROR.; > ; > It is strange that the first excited state would be able to run if the; > integrals were incompatible. Also, the file number 128 is a temporary file; > used by the CC codes to store things with a short lifetime. If the; > integrals were the source of the problem I would expect this kind of error; > to show up when trying to read some persistent quantity, which would then; > be used to compute the values that would go into file 128.; > ; > @kannon92 https://github.com/kannon92 do you have an input that will; > cause the PSIO_ERROR if DF is used? The driver should probably soft-fail; > with a warning to turn DF off in these cases. It would be very frustrating; > for a job to run this far just to fail.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/307#issuecomment-194417745.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/307#issuecomment-194423967:24,test,test,24,https://psicode.org,https://github.com/psi4/psi4/issues/307#issuecomment-194423967,1,['test'],['test']
Testability,I noticed that sapt8 test case is broken (no idea if it's because of me or not). It has 0.0 stored in `SAPT IND ENERGY` Psivar instead of the actual uncoupled value. I tried to modify sapt_util.py to make it compute the uncoupled induction energy for `SAPT IND ENERGY`but that did not fix the test case. I don't see where else `SAPT IND ENERGY` is set. Are the uncoupled energy values even available to sapt_util.py ?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/908#issuecomment-364643141:21,test,test,21,https://psicode.org,https://github.com/psi4/psi4/pull/908#issuecomment-364643141,2,['test'],['test']
Testability,"I noticed that the code for the nonapproximated E(20)exch-disp saves its final result in `variable('sapt exch-disp20(s^inf) energy')` as it should, but never actually prints the result to the output file. For example, when I run the test in `tests/sapt-exch-disp-inf`, the comparison of values with the reference passes, but I never learn from the output what the actual result is. The simple fix is to change the do_print option to True [when the nonapproximated E(20)exch-disp code is called.](https://github.com/psi4/psi4/blob/3d2403c43e2cf8df699ff6e382a4ae2e3a0a5faa/psi4/driver/procrouting/sapt/sapt_mp2_terms.py#L282). I can make this fix myself - look out for a simple PR.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2317:233,test,test,233,https://psicode.org,https://github.com/psi4/psi4/issues/2317,2,['test'],"['test', 'tests']"
Testability,"I officially opened up a PR for v2rdm_casscf, at https://github.com/loriab/v2rdm_casscf/pull/5, which removes ERISieve from v2rdm_casscf and replaces it with TwoBodyAOInt. Once that is added in, we can progress with this PR, as that is the current bottleneck preventing this PR from passing CI testing. Ideally, there's no fun surprises after that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2933#issuecomment-1561805862:294,test,testing,294,https://psicode.org,https://github.com/psi4/psi4/pull/2933#issuecomment-1561805862,1,['test'],['testing']
Testability,I only have a version compiled from source right now (macOS) and it works correctly. I'll try and get a conda test on my linux box later this afternoon.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311744982:110,test,test,110,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311744982,1,['test'],['test']
Testability,"I overlooked this when previously checking the documentation. The CI/MCSCF example from the following page does not work: http://www.psicode.org/psi4manual/1.3/molden.html. A minor issue is that `'ci'` is not a valid method. The second problem is that the `wfn.opdm` method should be replaced by `wfn.get_opdm`. (A useful example can be found in the source tree: `tests/molden2/input.dat`). I believe this is a correct example, but it would be nice if someone more familiar with the CI code could confirm and explain a few questions below. (I would be happy to make a PR with updated documentation.). ```; molecule {; 0 1; H 0.0 0.0 0.0; H 0.0 0.0 1.0; }. set basis cc-pVTZ; set opdm true. E, wfn = energy('fci', return_wfn=True); molden(wfn, 'no_root1.molden', density_a=wfn.get_opdm(0, 0, ""A"", True)); ```. Main questions:; - Is this example correct? It runs and seems to give sensible results.; - Which levels of theory (other than FCI and CASSCF) can be used? (CISD gives an error: `AttributeError: 'psi4.core.Wavefunction' object has no attribute 'get_opdm'`.); - How can one use the first two arguments to `get_opdm`? They are documented here in the source code: https://github.com/psi4/psi4/blob/880f87f5b2765ed00efaf6dd63c406b574c40157/psi4/src/psi4/detci/ciwave.h#L141 but setting anything else than `0, 0` for the first two arguments does not work: `Fatal Error: CIWavefunction::get_opdm: Requested OPDM was not formed!` I tried to add `set tdm true`, but this had no effect. (Also, I guess writing out a transition density matrix to a Molden file makes little sense.); - When the last argument is `True`, does this mean the frozen-core is included in the density matrix?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1638:364,test,tests,364,https://psicode.org,https://github.com/psi4/psi4/issues/1638,1,['test'],['tests']
Testability,I presume this actually fixes props2 (in which case should also add back to tests/CM). My concern is the change that people won't automatically get their multipoles at the origin w/o explicitly asking and that behaviour is different btwen Cart/ZMat (psi4/psi4#782). Anyone else concerned?. The scf-coverage problems we've been seeing have been compilation dependent after DF_Helper merge. Do you consider the changes to this test a fix to slightly flawed test?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/808#issuecomment-332288034:76,test,tests,76,https://psicode.org,https://github.com/psi4/psi4/pull/808#issuecomment-332288034,3,['test'],"['test', 'tests']"
Testability,"I pulled up issue 782 to remind my self what is going on, but the comments; there are somewhat terse and they don't do enough to jog my memory even; though I had a conversation with Lori about it. I'm not sure the wider; community will be able to comment much on this point without doing a little; homework to figure out what is being asked about. Could we have a bit more; commentary describing the issue?. On Tue, Sep 26, 2017 at 2:16 PM, Lori A. Burns <notifications@github.com>; wrote:. > I presume this actually fixes props2 (in which case should also add back; > to tests/CM). My concern is the change that people won't automatically get; > their multipoles at the origin w/o explicitly asking and that behaviour is; > different btwen Cart/ZMat (psi4/psi4#782; > <https://github.com/psi4/psi4/issues/782>). Anyone else concerned?; >; > The scf-coverage problems we've been seeing have been compilation; > dependent after DF_Helper merge. Do you consider the changes to this test a; > fix to slightly flawed test?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/808#issuecomment-332288034>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qds6BK6y5mzxnLMsYRrJP9RA8FGQ6ks5smT9mgaJpZM4PkgZ8>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/808#issuecomment-332291477:572,test,tests,572,https://psicode.org,https://github.com/psi4/psi4/pull/808#issuecomment-332291477,3,['test'],"['test', 'tests']"
Testability,"I pushed a fix to the molden1 test. The issue with the dipole moment is more complex. I think the OPDM and the MOs are certainly not consistent. . One solution would be to converge the orbitals and then do the following:; - transform orbs. to either canonical or natural basis; - transform integrals; - solve the CI problem; - compute 1/2-RDMs. @dgasmith: since you are more familiar with the mcscf code, can you think of a place where we can put these orbital transformations (semi/nat) before the computation of the OPDM? Better, if you have a few minutes could you try to implement the above code?. Also, is there a way I can access the full Fock matrix with frozen docc and virt blocks? This is of course irrelevant now, but I am thinking that in the future if we try to do gradients of MRPTs it might be better if we have all blocks diagonalize the Fock matrix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/722#issuecomment-304537094:30,test,test,30,https://psicode.org,https://github.com/psi4/psi4/pull/722#issuecomment-304537094,1,['test'],['test']
Testability,"I put in a debug statement in the `AO_core()` routine; ```; // a fraction of memory to use, do we want it as an option? ; if (memory_ < required_core_size_) {; outfile->Printf(""memory = %lu < required_core_size = %lu, turning core off\n"",(long unsigned) memory_,(long unsigned) required_core_size_);; AO_core_ = false;; }; ```; and I see the following in the log file; ```; ==> Primary Basis <==. Basis Set: PCSEG-0; Blend: PCSEG-0; Number of shells: 313; Number of basis function: 489; Number of Cartesian functions: 489; Spherical Harmonics?: true; Max angular momentum: 1. => Loading Basis Set <=. Name: (PCSEG-0 AUX); Role: JKFIT; Keyword: DF_BASIS_SCF; atoms 1-2 entry SI line 742 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 3 entry F line 383 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 4 entry O line 323 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 5-8 entry N line 263 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 9-43 entry C line 203 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs ; atoms 44-90 entry H line 23 file /home/work/psi4/install/share/psi4/basis/def2-sv_p_-jkfit.gbs . memory = 256000000 < required_core_size = 671520055, turning core off; memory = 256000000 < required_core_size = 671520055, turning core off; ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 489 489 0 0 0 0; -------------------------------------------------------; Total 489 489 165 165 165 0; -------------------------------------------------------. ==> Integral Setup <==. DFHelper Memory: AOs need 5.003 GiB; user supplied 27.940 GiB. Turning off in-core AOs.; ```. That is, the routine gets called twice in the basis set up phase with the default memory 256 MB. This is why the initialization is screwed up. Someone else's job to fix",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666#issuecomment-503720160:359,log,log,359,https://psicode.org,https://github.com/psi4/psi4/issues/1666#issuecomment-503720160,1,['log'],['log']
Testability,"I ran (cd doc; make) which amounts to the same I guess. I understand that the web-hosted documentation is great, but having the HTML along with the binaries would be more canonical, in case a user is using an older version but looking at the latest docs online. What I am not quite clear about yet is whether the content of SUMMARY gets changed based on present functionality (some dcft tests appear to have been dropped for me), or whether that is due to outdated source files. If it is strictly the latter, then yeah, making sure those are uptodate at tarball release would suffice I think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/14#issuecomment-22983952:387,test,tests,387,https://psicode.org,https://github.com/psi4/psi4/issues/14#issuecomment-22983952,1,['test'],['tests']
Testability,"I ran QZ Benzene (nso = 510). With 198.6 s walltime, we have...; ```; V: Grid : 1.383u 0.067s 1.243w 1 calls; | build grid : 1.183u 0.050s 1.093w 1 calls; | post-process grid : 0.200u 0.017s 0.150w 1 calls; DFH: sparsity prep : 2.067u 0.050s 1.461w 1 calls; | Libint2ERI::Libint2ERI : 1.417u 0.033s 1.055w 1 calls; Libint2ERI::Libint2ERI : 2.533u 0.033s 1.575w 2 calls; JK: (A|Q)^-1 : 1.300u 1.417s 1.553w 1 calls; | Libint2ERI::Libint2ERI : 0.000u 0.000s 0.000w 1 calls; JK: (A|mn) : 8.933u 0.050s 5.485w 3 calls; JK: (Q|mn) : 11.483u 0.083s 7.061w 3 calls; JK: (Q|mn) Write : 0.017u 0.583s 0.492w 3 calls; HF: Form core H : 0.133u 0.017s 0.086w 1 calls; HF: Form S/X : 0.183u 0.000s 0.117w 1 calls; HF: Guess : 0.233u 0.050s 0.164w 1 calls; | SAD Guess : 0.233u 0.050s 0.158w 1 calls; HF: Form G : 243.750u 9.350s 170.286w 8 calls; | RV: Form V : 179.867u 2.167s 122.104w 8 calls; | | Properties : 98.583u 0.933s 67.840w 15912 calls; | | Functional : 4.683u 0.150s 3.401w 15912 calls; | | | DFT NaN Check : 0.067u 0.033s 0.040w 15912 calls; | | V_xc : 76.250u 0.833s 50.572w 15912 calls; | JK: D : 0.017u 0.000s 0.005w 8 calls; | JK: USO2AO : 0.017u 0.000s 0.000w 8 calls; | JK: JK : 63.833u 7.183s 48.154w 8 calls; | | JK: (Q|mn) Read : 0.150u 4.217s 4.160w 25 calls; | | JK: J : 2.933u 0.017s 1.907w 25 calls; | | | JK: J1 : 1.333u 0.017s 0.862w 25 calls; | | | JK: J2 : 1.517u 0.000s 0.983w 25 calls; | | JK: K : 59.583u 0.683s 39.733w 25 calls; | | | JK: K1 : 54.533u 0.583s 36.065w 25 calls; | | | JK: K2 : 5.033u 0.100s 3.662w 25 calls; | JK: AO2USO : 0.000u 0.000s 0.000w 8 calls; HF: Form F : 0.000u 0.000s 0.011w 8 calls; HF: Form D : 0.000u 0.000s 0.007w 8 calls; HF: DIIS : 0.950u 0.350s 1.000w 7 calls; HF: Form C : 1.617u 0.017s 1.373w 7 calls; ```. NaN check time is negligible, and I think this resolves @hokru's concern. I'll re-trigger tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2611#issuecomment-1180695095:1855,test,tests,1855,https://psicode.org,https://github.com/psi4/psi4/pull/2611#issuecomment-1180695095,1,['test'],['tests']
Testability,"I ran ```conda create -n <p4env> psi4 -c psi4/label/dev -c conda-forge``` and it worked. makes sense since rdkit uses conda-forge as well. I then ran ```psi4 --test``` and here are the results. does it matter some were skipped/ failed?. ```; (psi4env) C:\Users\erikc>psi4 --test; =========================================================================== test session starts ===========================================================================; platform win32 -- Python 3.8.10, pytest-6.2.4, py-1.10.0, pluggy-0.13.1 -- C:\Users\erikc\psi4conda\envs\psi4env\python.exe; cachedir: .pytest_cache; rootdir: C:\Users\erikc; collected 3356 items / 3301 deselected / 55 selected. psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_gdma SKIPPED (Not detecting module gdma. Install package if necessary to enable tests.) [ 1%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker1 PASSED [ 3%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_ipi_broker2 PASSED [ 5%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED (Not detecting module mrcc. Install package if necessary to enable tests.) [ 7%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_chemps2 SKIPPED (Not detecting module chemps2. Install package if necessary to enable t...) [ 9%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_mp2d SKIPPED (Not detecting module mp2d. Install package if necessary to enable tests.) [ 10%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_dftd3 PASSED [ 12%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_libefp SKIPPED (Not detecting module libefp. Install package if necessary to enable tests.) [ 14%]; psi4conda/envs/psi4env/lib/site-packages/psi4/tests/test_addons.py::test_pcmsolver[pcm_helper] SKIPPED (Not detecting module pcmsolver. Install package if neces...) [ 16%]; psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:160,test,test,160,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,7,['test'],"['test', 'tests']"
Testability,"I ran `sapt1` on an s390x box now and compared the output to `output.ref` and one thing is weird:. ```; - Geometry (in Bohr), charge = 0, multiplicity = 1:; + Geometry (in Bohr), charge = 0, multiplicity = 2:; ```. Nothing else much stands out besides `output.ref` being from an older version so having some other strings here and there. When SAPT would start. ```; - SAPT0 ; - Ed Hohenstein; - 6 June 2009; ```; I immediately get the backtrace:; ```; +Traceback (most recent call last):; + File ""/usr/bin/psi4"", line 269, in <module>; + exec(content); + File ""<string>"", line 53, in <module>; + File ""/usr/lib/s390x-linux-gnu/psi4/driver/driver.py"", line 492, in energy; + wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); + File ""/usr/lib/s390x-linux-gnu/psi4/driver/procrouting/proc.py"", line 3438, in run_sapt; + e_sapt = core.sapt(dimer_wfn, monomerA_wfn, monomerB_wfn); +; +RuntimeError: ; +Fatal Error: Laplace Quadrature requested for (E_HUMO - E_LOMO)/(E_LUMO-E_HOMO) > 7.0 * 10^12, quadratures are not designed for this range.; ```. I checked and adding `DENOMINATOR_ALGORITHM CHOLESKY` to `input.dat` makes the test pass:. ```; Nuclear Repulsion Energy..........................................PASSED; SAPT0 Eelst.......................................................PASSED; SAPT0 Eexch.......................................................PASSED; SAPT0 Eind........................................................PASSED; SAPT0 Edisp.......................................................PASSED; SAPT0 Etotal......................................................PASSED; ```. I'll try to step through the code first before I start recompiling with the patches you suggested.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462#issuecomment-451695207:1151,test,test,1151,https://psicode.org,https://github.com/psi4/psi4/issues/1462#issuecomment-451695207,1,['test'],['test']
Testability,"I ran pytest quick tests, all pytest still running",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3148#issuecomment-2012993067:19,test,tests,19,https://psicode.org,https://github.com/psi4/psi4/pull/3148#issuecomment-2012993067,1,['test'],['tests']
Testability,"I ran some tests to try to reproduce the error, and I found that the point where the error started _differed_ between runs. Sometimes, it ended after printing B(2, 1, 3), sometimes it printed *R(0,1) as infinity and said the optimization failed, sometimes it said it was generating an empirical Hessian for each fragment and failed after that... Is this what you're seeing?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/989#issuecomment-385065247:11,test,tests,11,https://psicode.org,https://github.com/psi4/psi4/issues/989#issuecomment-385065247,1,['test'],['tests']
Testability,"I ran some tests with a hotfix of #859, and while there was still some variation, it was confined to the last decimal place, even after nine points on the path. So yes, this is a bug closely tied to #859 after all. Note to Self:. Said hotfix was inserting the following line of code under the ""Test for convergence"" section of opt_data.cc:; `if (Opt_params.opt_type == OPT_PARAMS::IRC && g_iteration() == 1) return false;`; I recall some rare cases where the second iteration would be taken as the stationary point. I'm having a hard time reproducing this, but checking if the Hessian has a negative eigenvalue would fix it. I do not have the time at the moment to figure out how I would actually check that, in the C++ code. This explains nothing about the symmetry problem, but I would be completely unsurprised if there was some symmetrizing step somewhere in this logic.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-346434514:11,test,tests,11,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-346434514,3,"['Test', 'log', 'test']","['Test', 'logic', 'tests']"
Testability,"I ran the complete test suite with; ```; $ ctest; ```; and got a bunch of crashes with the newest master b167f473fadf6e6b75dcc505b33822fc46169f8e, see below. [psimrcc-fd-freq2-bactrace.log](https://github.com/psi4/psi4/files/2423146/psimrcc-fd-freq2-bactrace.log); [fci-tdm-bactrace.log](https://github.com/psi4/psi4/files/2423147/fci-tdm-bactrace.log); [fci-tdm-2-bactrace.log](https://github.com/psi4/psi4/files/2423148/fci-tdm-2-bactrace.log); [cubeprop-bactrace.log](https://github.com/psi4/psi4/files/2423149/cubeprop-bactrace.log); [cc46-bactrace.log](https://github.com/psi4/psi4/files/2423150/cc46-bactrace.log); [cc47-bactrace.log](https://github.com/psi4/psi4/files/2423151/cc47-bactrace.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1255#issuecomment-425002556:19,test,test,19,https://psicode.org,https://github.com/psi4/psi4/issues/1255#issuecomment-425002556,13,"['log', 'test']","['log', 'test']"
Testability,"I really couldn't care less about pluralization in function names, but this is going to break the three findif related tests in `cookbook`. Expected timeline on getting this in? The changes to read/write wavefunction syntax will impact the updated orbital guess code I should be submitting tomorrow. I also never thought I'd see you _remove_ hand-formatting. See the read/write wavefunction code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1394#issuecomment-443564379:119,test,tests,119,https://psicode.org,https://github.com/psi4/psi4/pull/1394#issuecomment-443564379,1,['test'],['tests']
Testability,"I rebased, but it still used MSVC? The appveyor log does not show the beginning, not sure how BLAS is linked and why C_SDOT is missing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1261#issuecomment-430585190:48,log,log,48,https://psicode.org,https://github.com/psi4/psi4/pull/1261#issuecomment-430585190,1,['log'],['log']
Testability,"I recall that the test suite runs in serial. We'd love a parallel version, but @loriab has had other priorities. Do correct me if I'm wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2941#issuecomment-1531525344:18,test,test,18,https://psicode.org,https://github.com/psi4/psi4/issues/2941#issuecomment-1531525344,1,['test'],['test']
Testability,"I reduced the active space of the `dmrg-caspt2-n2` testcase (see http://anonscm.debian.org/viewvc/debichem/unstable/psi4/debian/patches/relax_dmrg_caspt2_test.patch?view=markup), and (now?) some architectures show slightly different results, e.g. powerpc:. ```; DMRG-SCF Energy...................................................PASSED; DMRG-CASPT2 Energy: computed value (-107.5036885) does not match (-107.5036855) to 6 decimal places.; ```. See https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=powerpc&ver=1%3A1.0~rc-2&stamp=1464563141 for the full log. This also happened on arm64, i386 (x86-32) and ppc64. The differences are quite small, but mentioning here nevertheless.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-222506368:51,test,testcase,51,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-222506368,2,"['log', 'test']","['log', 'testcase']"
Testability,"I remember that we needed to fudge the spaces a bit as we needed more space flexibility that the standard 4 slots allowed. In that particular test case there are no virtual orbitals as the CI space (we define as active occupied) spans everything besides frozen occ and frozen virt. This is due to both CISD being defined as a special case of RASCI and the fact that in CI (MCSCF) land a true virtual space is a non-active, but rotable orbital.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1469#issuecomment-454533362:142,test,test,142,https://psicode.org,https://github.com/psi4/psi4/pull/1469#issuecomment-454533362,1,['test'],['test']
Testability,"I remember the episode but not the exact error (though it was in sapt and cubeprop tests). Something about pybind's behavior being less forgiving than boost's. Also psi4 modules behaved differently wrt how much control they took upon themselves vs giving to the AIOHandler lib. I think I standardized that aspect a bit. Good news is that I think you can adjust the synchronization again, so long as the tests pass (since it was broken test cases before that prompted the change). Or the inversion may have spontaneously healed the problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/596#issuecomment-277503822:83,test,tests,83,https://psicode.org,https://github.com/psi4/psi4/issues/596#issuecomment-277503822,3,['test'],"['test', 'tests']"
Testability,"I removed the Prop baseclass in the upcoming commits (pending tests). i had to add a Da_name accessor to prop though, because OEProp uses the Da matrix as a fallback if no title is given.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1133#issuecomment-413024630:62,test,tests,62,https://psicode.org,https://github.com/psi4/psi4/pull/1133#issuecomment-413024630,1,['test'],['tests']
Testability,"I run Psi4 version 1.4 and Python 3.8 on Ubuntu 20.04.1. I wanted to calculate termochemistry properties and found that running the following:; ```; frequency(""scf""); frequency(""hf""); ```; somehow broke after optimization has completed. Although I redirected stderr to log file, there is nothing. I only receive one word in polish meaning obliterated or annihilated (in the terminal not log file). It also seems that running; ```; frequency(""mp2""); ```; resulted in displacements. . I openend a thread at [Psi forum](http://forum.psicode.org/t/optimization-complete-obliterated-annihilated/2301) regarding the issue. There is my input file. I created the issue because the returning information that I received lacks any information why does the calculation fail.; Thanks in advance for handling the problem.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2297:269,log,log,269,https://psicode.org,https://github.com/psi4/psi4/issues/2297,2,['log'],['log']
Testability,I saw one like that before. I'll try to track it down. I haven't tested this PR against py2 though. Do you have any idea if any custom from_python typemaps / convereters are registered currently registered?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/160#issuecomment-130014713:65,test,tested,65,https://psicode.org,https://github.com/psi4/psi4/pull/160#issuecomment-130014713,1,['test'],['tested']
Testability,"I see a 3c smoke test in here, so I think it's best for me to update the branch with the 3c PR contents, before merging. Thoughts, @loriab ? Excellent stuff in this one - sorry for the delayed review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/627#issuecomment-283403855:17,test,test,17,https://psicode.org,https://github.com/psi4/psi4/pull/627#issuecomment-283403855,1,['test'],['test']
Testability,"I see the same issue with Psi4 installed on Ubuntu 16.04.1 LTS, compiled with gcc 5.4.0. It is also using ATLAS for BLAS/LAPACK, and my build is a debug build. The following test cases fail:; 77 - cdomp2-2 (Failed); 125 - dfmp2-grad2 (Failed); 127 - dfmp2-grad4 (Failed); 129 - dfomp2-2 (Failed); 131 - dfomp2-4 (Failed); 133 - dfomp2-grad2 (Failed). I'll update as I switch to another BLAS/LAPACK.; Other test cases fail but they might be related to different problems:; 188 - mints9 (Failed); 268 - pywrap-checkrun-rhf (Failed); 269 - pywrap-checkrun-rohf (Failed); 270 - pywrap-checkrun-uhf (Failed); 314 - fsapt1 (Timeout); 321 - python-energy (Failed); 322 - python-curve (Failed); 323 - python-pubchem (Failed); 324 - json-energy (Failed); 325 - json-gradient (Failed)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-277545780:174,test,test,174,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-277545780,2,['test'],['test']
Testability,"I see this was without augmented keyword, with that added the test above crashes as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1557#issuecomment-467161900:62,test,test,62,https://psicode.org,https://github.com/psi4/psi4/issues/1557#issuecomment-467161900,1,['test'],['test']
Testability,"I see we have a plugin error here https://dev.azure.com/psi4/psi4/_build/results?buildId=5535&view=logs&j=f237aa60-f90a-5f4e-46d5-6f838a77d991&t=e678ab3d-f7fc-50f0-56d8-3349f4950165&l=9304 . That's very possibly pre-existing -- I should have retained skeletons in ctest when I deduplicated the ctest and pytest calls. The ""missing packages"" link doesn't work for me. What is the text? Does running the `test_sapt_dft1` test in particular work for you locally?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2980#issuecomment-1583061943:99,log,logs,99,https://psicode.org,https://github.com/psi4/psi4/pull/2980#issuecomment-1583061943,2,"['log', 'test']","['logs', 'test']"
Testability,"I see your results, too. What's the overall intent of the `num_frozen_docc` here? Are you wanting plain frozen core or is this preparation for something more complex? Note that we did address frozen core in sapt fairly recently, https://github.com/psi4/psi4/pull/2271, and that solution in itself is making use of `num_frozen_docc`. When I switch your first line to `set freeze_core true`, water is reasonable again. ```; > grep -e ""Final E"" lizsapt2.out ; @DF-RHF Final Energy: -272.35982173084625; @DF-RHF Final Energy: -196.32485863378869; @DF-RHF Final Energy: -76.03485411063548; @DF-RHF Final Energy: -272.35997062909757; @DF-RHF Final Energy: -196.32485863377360; @DF-RHF Final Energy: -76.03485447822362; ```. In SAPT, frozen-core will influence a delta-MP2 correction (irrelevant here) and possibly (I'm not sure if there are conditions) dispersion https://github.com/psi4/psi4/blob/master/tests/sapt10/input.dat#L59-L63 since those are mp2-like terms. You're right that HF energies themselves should be indifferent. Without experimenting much, I venture that the presence of the sapt fc correction and all the wfn passing w/i sapt is causing the bad QC. Possibly `num_frozen_docc` should be disabled for SAPT, if newly fixed `freeze_core=True` works for you. Or else `num_frozen_docc` needs a separate fix.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1207141235:899,test,tests,899,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1207141235,1,['test'],['tests']
Testability,"I should add, the `der_type` keywords were already in the tests. I'm not sure how pervasive they are, but we should probably weed them all out.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-231269343:58,test,tests,58,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-231269343,1,['test'],['tests']
Testability,I should point out that I'm running cc1 test case. If I put a breakpoint at cctransort.cc:386 the file sizes are:. ```; -rw-r--r-- 1 jturney hfs 2280 Feb 2 15:53 /tmp/psi.16572.h2o.100; -rw-r--r-- 1 jturney hfs 12744 Feb 2 15:53 /tmp/psi.16572.h2o.180; -rw-r--r-- 1 jturney hfs 10564 Feb 2 15:53 /tmp/psi.16572.h2o.32; -rw-r--r-- 1 jturney hfs 114472 Feb 2 15:53 /tmp/psi.16572.h2o.34; -rw-r--r-- 1 jturney hfs 40688 Feb 2 15:53 /tmp/psi.16572.h2o.35; -rw-r--r-- 1 jturney hfs 233504 Feb 2 15:53 /tmp/psi.16572.h2o.41; -rw-r--r-- 1 jturney hfs 784 Feb 2 15:53 /tmp/psi.16572.h2o.61; -rw-r--r-- 1 jturney hfs 11848 Feb 2 15:53 /tmp/psi.16572.h2o.62; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178812501:40,test,test,40,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178812501,1,['test'],['test']
Testability,"I simplified the omega setter interface for the `HJS_PBE` https://github.com/psi4/psi4/pull/1101/files#diff-375f534fffdbfb11f5ae38dace0c3ab71230ea1f9eed95df51d21fdfd2589e4aL218-R221 and that fixed custom and smoke. Is that what you had in mind with ""named parameter setter"", @susilehtola?. Now only the ft97 is a problem among ctests. pytests were clean before, but I'll check again. Are any of these now available in v5.1 that I should be activating?. ```; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: B3TLAP not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: BP86VWN not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: LDA0 not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: CAM-LDA0 not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: LRC-BOP not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: PBEsol not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: t-HCTH not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: t-HCTHh not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: wM05-D not in Psi4.; SKIPPED [1] ../tests/pytests/test_dft_benchmarks.py:295: wM06-D3 not in Psi4.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755032163:473,test,tests,473,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755032163,10,['test'],['tests']
Testability,"I strongly agree with Lori about having this as a regression test rather than an accuracy test. Put the new, approximate energies with all the others. That should be a good indicator to others working with the SCF system of what accuracy to expect.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2768#issuecomment-1309250403:61,test,test,61,https://psicode.org,https://github.com/psi4/psi4/pull/2768#issuecomment-1309250403,2,['test'],['test']
Testability,"I suspect https://github.com/MolSSI/QCEngine/blob/master/qcengine/programs/empirical_dispersion_resources.py#L884 in qcng will need expansion to the extra parameters. And https://github.com/MolSSI/QCEngine/blob/master/qcengine/programs/empirical_dispersion_resources.py#L904 might need populating with the defaults like the `_get_d3_definitions` below since the changes aren't in parameters.toml in dftd4 project. Please let me know if it's not behaving rationally -- the approach made sense for flexibility once upon a time, but I fear the logic is tangled nowadays.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2121#issuecomment-1368076353:541,log,logic,541,https://psicode.org,https://github.com/psi4/psi4/issues/2121#issuecomment-1368076353,1,['log'],['logic']
Testability,"I suspect that in several of these, the problem is that the downstream; codes need the (conventional or DF) integrals written to disk. This got; handled by some logic where necessary for scf_type = disk_df, apparently,; but did not get handled for mem_df. Works ok for ccenergy? It also needs conventional integrals written to; disk. Maybe that is getting intercepted correctly. On Mon, May 14, 2018 at 6:14 PM, Lori A. Burns <notifications@github.com>; wrote:. > Posting Dom's very nice summary for easier perusal and searchability.; > Effective scf_type df Testing: mem_df & disk_df; >; > All tests listed below examine calls to both energy() and gradient() when; > employing the scf_type mem_df and scf_type disk_df settings. Each test; > employs a different model chemistry (indicated in the test description); > and the; > Physicists' water molecule, unless otherwise indicated.; >; > 1. Physicists' water, HF/6-31G; > - *TEST FAILED*; > - Error message:; >; > Traceback (most recent call last):; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; > exec(content); > File ""<string>"", line 30, in <module>; > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; > return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; > ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; > wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); > File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; > scf_wfn = scf_helper(name, post_scf=False, **kwargs)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128:161,log,logic,161,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-389018128,5,"['Test', 'log', 'test']","['Testing', 'logic', 'test', 'tests']"
Testability,I suspect this was fixed in #1414 that made sure dftd3-using tests weren't run if dftd3 not available.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1418#issuecomment-451602694:61,test,tests,61,https://psicode.org,https://github.com/psi4/psi4/issues/1418#issuecomment-451602694,1,['test'],['tests']
Testability,"I tested atom Ne because I saw it in the user manual (pp. 20) as an example. Strangely it works, and Psi4 terminated successfully.; Buy you a beer for Ne.... Hao",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/7#issuecomment-19470203:2,test,tested,2,https://psicode.org,https://github.com/psi4/psi4/issues/7#issuecomment-19470203,1,['test'],['tested']
Testability,"I tested my code after rebasing, still looks just like it did before. I updated the timings and errors graphs based on the results of my rebased code (I used an intel compiler this time, rather than GCC)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2187#issuecomment-855159767:2,test,tested,2,https://psicode.org,https://github.com/psi4/psi4/pull/2187#issuecomment-855159767,1,['test'],['tested']
Testability,"I tested my code on the S22by7 dimer set (1 core, direct SCF only, no df guess) using different screening thresholds. https://docs.google.com/spreadsheets/d/1aja4HIT-jzz8f6vRTX8c1YDMPStpq2TW8lRM6-WiVBk/edit?usp=sharing",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-748496859:2,test,tested,2,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-748496859,1,['test'],['tested']
Testability,"I tested the psi4 package on `linux-64` using the staged-recipes artifacts and it works perfectly. The tests were performed on an in-house QM package and I only did a single point gradient computation on a single and simple molecule. Two things maybe:. - I add to use the `conda-forge/label/libint_dev` channel for libint.; - Upon importing `psi4` I noticed a bunch of prints that wasnt here before:. ```; psi4_module_loc='/home/hadim/conda_envs/lib/python3.9/site-packages/psi4'; pymod='/python3.9/site-packages/lib/psi4'; pymod_dir_step='../../../..'; data_dir='/home/hadim/conda_envs/lib/python3.9/site-packages/psi4/../../../../share/psi4'; executable='/home/hadim/conda_envs/bin/psi4'; executable='/home/hadim/conda_envs/bin/psi4'; data_dir='/home/hadim/conda_envs/lib/python3.9/site-packages/psi4/../../../../share/psi4'; data_dir='/home/hadim/conda_envs/share/psi4'; ```. Is it coming from package development, and you'll remove it moving forward?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2300#issuecomment-1483937938:2,test,tested,2,https://psicode.org,https://github.com/psi4/psi4/issues/2300#issuecomment-1483937938,2,['test'],"['tested', 'tests']"
Testability,"I think (B) with a comment in the tests about why updated. We want to keep checking to the same precision, but like physconst updates, the ref value has changed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-494026644:34,test,tests,34,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-494026644,1,['test'],['tests']
Testability,I think I found out what is going on. Both ORCA and PSI4 are indeed writing the wrong contraction coefficients. I've done the same computation with Gaussian. Then I loaded the Gaussian log file into molden and wrote out a molden file. That one can be loaded back as an input for molden and it gives the right Mulliken charges:. N 0.0380; H -0.2742; H 0.0121; H 0.2242; Sum of Mulliken Charges: 0.0001. It seems that the the molden format uses exactly the same normalization conventions of Gaussian. (Gaussian prints the same contraction coefficients in the log file when the gfinput option is used.) These number seem to follow the same conventions as the Gaussian94 basis set format. (See the EMSL database for some examples.). I've update the archive file:. https://dl.dropboxusercontent.com/u/4871688/moldenbug.tar.bz2. Now it also contains the Gaussian calculation and the molden file made with molden.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/60#issuecomment-53039792:185,log,log,185,https://psicode.org,https://github.com/psi4/psi4/issues/60#issuecomment-53039792,2,['log'],['log']
Testability,"I think I've stumbled across this problem when trying to get hessians for comparison with finite difference code. The below input completes on our cluster in under a minute, operating on dev199. It took about 1.8 hours for jobs to finish when I didn't change the scf_type. Curiously, this is the same amount of time it took when I forgot to include the memory line. Could the bug be the DF code not using all the memory it has available? If so, then the bug OP saw wasn't the computation getting eternally stuck, but that trying to get an analytic hessian with around 1500 basis functions and only 500 MiB feels like an eternity. ```; #! SCF DZ finite difference frequencies by energies for C4NH4; memory 30gb. molecule c4nh4 {; units angstrom; -1 1; C 0.000000000000 0.000000000000 1.119905811674; N 0.000000000000 0.000000000000 2.310087277449; C 0.000000000000 0.000000000000 -0.231085072523; C -0.781617287494 0.000000000000 -1.483869398827; C 0.781617287494 0.000000000000 -1.483869398827; H -1.274488047821 -0.899961499592 -1.835960153318; H -1.274488047821 0.899961499592 -1.835960153318; H 1.274488047821 0.899961499592 -1.835960153318; H 1.274488047821 -0.899961499592 -1.835960153318; }. # *** Test all frequencies by 3-pt formula.; set {; basis dz; d_convergence 13; scf_type pk; }. scf_e, scf_wfn = frequencies('scf', dertype=2, return_wfn=True); fd_freqs = scf_wfn.frequencies(); clean(); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1145#issuecomment-429553898:1204,Test,Test,1204,https://psicode.org,https://github.com/psi4/psi4/issues/1145#issuecomment-429553898,1,['Test'],['Test']
Testability,"I think `cpscf_linear_response` does not yet support UHF references (for example [here](https://github.com/psi4/psi4/blob/9485035a0cd5d9a39582c9d7c4406f64aa12b838/psi4/driver/procrouting/response/scf_response.py#L164)...). Adding this feature would require some coding and testing, or instead a clean `NotImplementedError` should be thrown.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2265#issuecomment-892409803:273,test,testing,273,https://psicode.org,https://github.com/psi4/psi4/issues/2265#issuecomment-892409803,1,['test'],['testing']
Testability,I think charge comes first among the arguments. https://github.com/psi4/psi4/blob/master/tests/extern1/input.dat#L24 Your input possibly interpreted as no charge.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1757#issuecomment-557979152:89,test,tests,89,https://psicode.org,https://github.com/psi4/psi4/issues/1757#issuecomment-557979152,1,['test'],['tests']
Testability,"I think for your purpose, I'd use `ElectrostaticInt` from C++ (I'm using `ao_multipole_potential` because of tests from Python). `ElectrostaticInt` uses L2, whereas multipole potential ints will use M-D in the future.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2473#issuecomment-1067313088:109,test,tests,109,https://psicode.org,https://github.com/psi4/psi4/pull/2473#issuecomment-1067313088,1,['test'],['tests']
Testability,I think if we can get a test for this in the `tests/mrcc` folder this will be good to go.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/634#issuecomment-286584588:24,test,test,24,https://psicode.org,https://github.com/psi4/psi4/pull/634#issuecomment-286584588,2,['test'],"['test', 'tests']"
Testability,I think in other orbital test we attempted to take magnitudes or norms to remove these issues. ROT is DOCC + ACT + VIR with the inactive pieces removed. I can see how the previous message was confusing.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1847#issuecomment-598212613:25,test,test,25,https://psicode.org,https://github.com/psi4/psi4/pull/1847#issuecomment-598212613,1,['test'],['test']
Testability,"I think it's pretty clear that this is not a problem in the code - the calculations run and give the correct result - but in the test itself that has degenerate modes which don't appear to be treated properly by the test code. Because the vibrational analysis part was also marked as ```xfail``` in the test suite, I found it reasonable to mark the Hessian test as ```xfail```, too. There still remain checks on more complicated molecules, which don't have degenerate frequencies. As cofirmed by @loriab, all tests pass, so this one is good to go!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-452068699:129,test,test,129,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-452068699,5,['test'],"['test', 'tests']"
Testability,"I think it's worth mentioning that #1235 also adds the unique feature of doing composite calculations using arbitrary options (frozen core, relativistic effects) or basis sets - it's not just a developer interest PR. For performance, the grid work @zachglick in #1291 and obviously your DFT grid cache in #1233 (which you mention in the top section) are pretty huge. I don't know if you're planning to do any benchmarking, especially wrt. the discussion we had at PsiCon - even if it's just Psi4 1.2.1 vs Psi4 1.3a1 vs Psi4 1.3rc, it would be good to show how much improvement there actually is, especially on > 8 threaded jobs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1406#issuecomment-445236768:409,benchmark,benchmarking,409,https://psicode.org,https://github.com/psi4/psi4/issues/1406#issuecomment-445236768,1,['benchmark'],['benchmarking']
Testability,"I think its this way so that people can use the `READ` keyword for failed jobs without a PID. We do have a PID restart mechanism; however, its not tested or used AFAIK. . There are quite a few read/writes coming from Python libraries these days so a pure Psi4 C++ module would not work. You could have a unified namespace that includes the PID. This is what `core.get_writer_file_prefix(scf_molecule.name())` tries to do; however, without a PID.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/548#issuecomment-266883432:147,test,tested,147,https://psicode.org,https://github.com/psi4/psi4/issues/548#issuecomment-266883432,1,['test'],['tested']
Testability,I think pywrap-alias does use some of detci's more obscure methods (below). I was also remembering a bad bout I had with ddd before last Christmas where Windows only hung up for detci mp5 run only by exe or by api. ```; (py38) >>> grep -e 'PASSED' -e 'D E T C I' ../tests/pywrap-alias/input.out ; [1] Au std...........................................................................PASSED; [2] MP2 sp...........................................................................PASSED; MP2 route check.................................................................PASSED; [3] MP3 occ..........................................................................PASSED; MP3 route check.................................................................PASSED; [4] MP3 detci (energy and route check)...............................................PASSED; [5] MP4 fnocc........................................................................PASSED; (a 'D E T C I' module); [6] MP11 sp..........................................................................PASSED; (a 'D E T C I' module); [7] ZAPT4 sp.........................................................................PASSED; (a 'D E T C I' module); [8] FCI sp...........................................................................PASSED; [9] MP2.5 sp.........................................................................PASSED; [10] cbs()............................................................................PASSED; [11] db().............................................................................PASSED; [12] CISD sp..........................................................................PASSED; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544:266,test,tests,266,https://psicode.org,https://github.com/psi4/psi4/pull/1991#issuecomment-683898544,1,['test'],['tests']
Testability,"I think that I know where the linking against the Python library comes from. Usually when using CMake to build software, I am using the ccmake GUI and use the toggle option to show all available variables (as I usually also add compiler flags etc.). I noticed that cmake detected the correct Python interpreter (2.7.12), but it also had a variable for the Python library, which was pointing to /usr/lib64/libpython2.6.so (system Python that was installed with the operating system). In order to avoid mixing between different Python versions, I have set the CMake variable to the 2.7.12 version of the library. Maybe CMake picked it up this way and added it to the libraries that are linked. Thank you for pointing me to the tests in the samples directory. Best regards",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-275138618:725,test,tests,725,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-275138618,1,['test'],['tests']
Testability,"I think that looks good, @dgasmith. @jturney, how about a weekly build/test for the full matrix (and OSX) using the Docker solution that @dgasmith proposed before. That would give us complete coverage of compilers and debug/release, but on a slight delay. We'd catch most bugs before that stage with the limited Travis builds. Just a thought.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182893800:71,test,test,71,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182893800,1,['test'],['test']
Testability,I think that should have done the trick. (I ran the tdscf tests and then overwrote the respective output.ref files with the generated output.dat files.) I think the only differences are numerical errors during SCF and then formatting of the output. All final results should be unchanged.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2605#issuecomment-1155599085:58,test,tests,58,https://psicode.org,https://github.com/psi4/psi4/pull/2605#issuecomment-1155599085,1,['test'],['tests']
Testability,"I think the ADC(2) code has some special corrections it can apply, but I; would have thought that those were turned off by default... On Wed, Jun 6, 2018 at 3:52 PM Alexander Sokolov <notifications@github.com>; wrote:. > Hi everyone,; >; > I was testing the ADC(2) code in Psi4 on small molecules and noticed that; > the results I obtained were significantly different from Q-Chem. The SCF; > and MP2 energies match very well.; >; > For N2 (r = 1.2 A) with cc-pVDZ basis, here's a summary of the energies; > for the 8 lowest-lying singlet states from Q-Chem 4.4.1 compared to Psi4; > 1.1:; >; > Q-Chem 4.4.1:; > MP2 ground-state energy: -109.2579498247; > Excitation energy: 8.385211 eV; > Excitation energy: 8.385211 eV; > Excitation energy: 8.832813 eV; > Excitation energy: 9.441957 eV; > Excitation energy: 9.441957 eV; > Excitation energy: 13.868446 eV; > Excitation energy: 13.868446 eV; > Excitation energy: 14.791430 eV; >; > Psi4 1.1:; > MP2 ground-state energy: -109.25794982519506; > -> 1 A state : 0.3113289 (a.u.), 8.4716885 (eV); > -> 2 A state : 0.3113289 (a.u.), 8.4716885 (eV); > -> 3 A state : 0.3343892 (a.u.), 9.0991916 (eV); > -> 4 A state : 0.3565394 (a.u.), 9.7019279 (eV); > -> 5 A state : 0.3565394 (a.u.), 9.7019279 (eV); > -> 6 A state : 0.5069575 (a.u.), 13.7950140 (eV); > -> 7 A state : 0.5069575 (a.u.), 13.7950140 (eV); > -> 8 A state : 0.5127312 (a.u.), 13.9521243 (eV); >; > The Q-Chem energies agree with my standalone code. For N2 with STO-3G; > basis I simply get zero excitation energies with Psi4:; >; > ==> ADC(2) Computation <==; >; > -> 1 A state : 0.0000000 (a.u.), 0.0000000 (eV); > Non-iterative: 0.3864160 (a.u.), 10.5149136 (eV); > ┆ ┆ Occ Vir Coefficient; > ---------------------------------------------; >; > Converged in 2 iteration.; > Squared norm of the S component: 1.0000000; > The S vector is rotated up to 90.000 (deg.); > #WARNING: Strongly rotated from the CIS state!; >; > -> 2 A state : 0.0000000 (a.u.), 0.0000000 (eV); > Non-iterative: 0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1033#issuecomment-395444918:246,test,testing,246,https://psicode.org,https://github.com/psi4/psi4/issues/1033#issuecomment-395444918,1,['test'],['testing']
Testability,"I think the GH test was a success, but we'll have to remove the (blocking) lgtm approval",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-265476766:15,test,test,15,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-265476766,1,['test'],['test']
Testability,I think the `np-array-interface` [test](https://github.com/psi4/psi4/blob/master/tests/numpy-array-interface/input.dat) should be checking for this already: it is hitting `Matrix.np_read()` after writing it into file.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1607#issuecomment-485812426:34,test,test,34,https://psicode.org,https://github.com/psi4/psi4/pull/1607#issuecomment-485812426,2,['test'],"['test', 'tests']"
Testability,"I think the best course of action is for me to take this as part of my foray into the `cc` mega-module, after I'm through with the test pass. Incidentally, the current plan for my `cc` module pass is: get `cc` tests off perl, this issue, move variables to `wfn`, move `ccdensity` to Matrix objects, then give `ccdensity` a Wavefunction. There's a lot more that could be done, but my primary interest is in syncing up densities across multiple modules.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2308#issuecomment-1042970149:131,test,test,131,https://psicode.org,https://github.com/psi4/psi4/issues/2308#issuecomment-1042970149,2,['test'],"['test', 'tests']"
Testability,"I think the verbose output is ok here, @hokru , because pytest suppresses the output by default. If the test happens to fail, running that test with output enabled could help with debugging possibly. I totally agree that the CTests inputs should stay minimal because they ultimately get converted into sample inputs for users to have as starting points for job inputs. The Windows test failure looks like we need a `using_resp` like mechanism to conditionally activate resp; I'm sure you have it under control, Lori.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2065#issuecomment-744433410:104,test,test,104,https://psicode.org,https://github.com/psi4/psi4/pull/2065#issuecomment-744433410,3,['test'],['test']
Testability,"I think they're in `samples/`, @JonathonMisiewicz, which only gets regenerated from `tests/` upon docs build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1274#issuecomment-426048466:85,test,tests,85,https://psicode.org,https://github.com/psi4/psi4/pull/1274#issuecomment-426048466,1,['test'],['tests']
Testability,"I think this all makes sense and the fact that this didn't break tests is pretty impressive (or says something about our test?). I don't thin these is a reason to assume that X is symmetric either. We seem to assume this in some places of the code however, but this should be restricted to the SCF code. It would be good for @andysim/ @jturney to comment on this as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1781#issuecomment-575314304:65,test,tests,65,https://psicode.org,https://github.com/psi4/psi4/pull/1781#issuecomment-575314304,2,['test'],"['test', 'tests']"
Testability,"I think this is enough for now. I want to very carefully check the handling of perturbations before making this accessible enough to be tested by our normal suite. For posterity, standard usage with the current interface is:; ```; std::shared_ptr<OneBodySOInt> wOBI(integral_->so_rel_potential());; OperatorSymmetry msymm(OperatorSymmetry::L, molecule_, integral_, soFactory_);; auto wMats = msymm.create_matrices(""SO Relativistic Potential"");; wMats.insert(wMats.begin(), soFactory_->create_matrix(""SO Relativistic Potential""));; wOBI->compute(wMats);; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157:136,test,tested,136,https://psicode.org,https://github.com/psi4/psi4/pull/3174#issuecomment-2152661157,1,['test'],['tested']
Testability,I think this is finally ready. All tests seem to be passing.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2328#issuecomment-1074703959:35,test,tests,35,https://psicode.org,https://github.com/psi4/psi4/pull/2328#issuecomment-1074703959,1,['test'],['tests']
Testability,"I think this is mostly good to go, I'll add a test or two soon. I would like a little feedback on if there's a better way to store the excitation energies. I kind of just throw them in Wavefunction one at a time. I'm sure all of that will change anyway with @robertodr 's changes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1885#issuecomment-626184715:46,test,test,46,https://psicode.org,https://github.com/psi4/psi4/pull/1885#issuecomment-626184715,1,['test'],['test']
Testability,"I think this is on the final stretch. Once the new tests are in, I'll go through the functionals again and make sure they match Q-Chem. I don't particularly like the way YAPF formats the dictionaries - sometimes the name is on the next line, which is a bit odd. . Also, the B97-D case is weird. It seems that in `master`, calling B97-D doesn't apply dispersion at all!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-370327984:51,test,tests,51,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370327984,1,['test'],['tests']
Testability,"I think this must be python2.6. I tested `re.sub` in 2.7.10 and 2.6.9, and `re.sub` takes `flags` just fine as a kwarg in 2.7.10, but not in 2.6.9.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/169#issuecomment-133203439:34,test,tested,34,https://psicode.org,https://github.com/psi4/psi4/issues/169#issuecomment-133203439,1,['test'],['tested']
Testability,"I think we can add by class like https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc_table.py#L216 . Just have to be careful to use `not` logic because `is_gga` is True for all, rather than being the final classification, as we think of it. https://github.com/psi4/psi4/blob/master/tests/docs-dft/input.dat",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1664#issuecomment-502138356:156,log,logic,156,https://psicode.org,https://github.com/psi4/psi4/pull/1664#issuecomment-502138356,2,"['log', 'test']","['logic', 'tests']"
Testability,I think what we need to do is organize the non-XC custom functionals into a series of tests like `tests/test-custom-gga` where all of the custom functionals that we build in `gga_superfuncs.py` should be there. Similar folders for hybrid/double hybrid. Right now its kind of scattered all over the place. If you could start your tests in that manner it would be very helpful. This could be a good project for a new-dev to clean up. @susilehtola One more example why we need access to parameters in LibXC.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/877#issuecomment-349731179:86,test,tests,86,https://psicode.org,https://github.com/psi4/psi4/pull/877#issuecomment-349731179,4,['test'],"['test-custom-gga', 'tests']"
Testability,"I think you have to add `.def(""irrep_labels"", &Molecule::irrep_labels, ""docstring"")` back to `export_mints`. But now it can be an ordinary export, not the complicated lambda. Same for any other export lambda you deleted as unnecessary. That should fix the tests. After that, lgtm!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/780#issuecomment-322811651:256,test,tests,256,https://psicode.org,https://github.com/psi4/psi4/pull/780#issuecomment-322811651,1,['test'],['tests']
Testability,I think you need some more data for shorter bond lengths for one; your computed `re` is right at the bottom end of the input values. I'd also recommend testing to see how sensitive the results are to the grid spacing.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1600#issuecomment-483463782:152,test,testing,152,https://psicode.org,https://github.com/psi4/psi4/issues/1600#issuecomment-483463782,1,['test'],['testing']
Testability,I think you'll need to rebase @jeffschriber to get the code that goes with the latest cppe package so tests can pass.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1885#issuecomment-641549862:102,test,tests,102,https://psicode.org,https://github.com/psi4/psi4/pull/1885#issuecomment-641549862,1,['test'],['tests']
Testability,"I think you're correct, but I don't see that from the output of `git diff 772caf9bad7aaddc27265c8c5349be3d85f4db98 input.dat`, which reads as. ```; -scf_dz, wfn_dz = freq('SCF/cc-pVDZ', return_wfn=True, der_type=1); +scf_dz, wfn_dz = freq('SCF/cc-pVDZ', return_wfn=True, dertype=1); compare_values(wfn_dz.frequencies().get(0), 1809.2345729, 2, ""SCF/cc-pVDZ Frequency 1"") #TEST; compare_values(wfn_dz.frequencies().get(1), 3923.1569958, 2, ""SCF/cc-pVDZ Frequency 2"") #TEST; compare_values(wfn_dz.frequencies().get(2), 4020.1821381, 2, ""SCF/cc-pVDZ Frequency 3"") #TEST; +#; +# These lines use the analytic frequency algorithm instead, but the angular momentum is too high for; +# the Travis tests. Uncomment the next four lines if you want to test analytic frequencies and have; +# a version of psi4 compiled with sufficiently high angular momentum.; +#; +##scf_dz, wfn_dz = freq('SCF/cc-pVDZ', return_wfn=True); +##compare_values(wfn_dz.frequencies().get(0), 1809.279, 2, ""SCF/cc-pVDZ Frequency 1"") #TEST; +##compare_values(wfn_dz.frequencies().get(1), 3923.138, 2, ""SCF/cc-pVDZ Frequency 2"") #TEST; +##compare_values(wfn_dz.frequencies().get(2), 4020.128, 2, ""SCF/cc-pVDZ Frequency 3"") #TEST; ```. It looks like the only (non-comment line) change was the switch from `der_type` to the correct `dertype` keyword. We only had finite difference Hessians before, so the `der_type` keyword was irrelevant. I had to correct it to avoid getting analytic Hessians to run. It doesn't look like the reference values have been changed, and in both the old and new versions the frequencies should come from finite differences.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235107538:372,TEST,TEST,372,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235107538,8,"['TEST', 'test']","['TEST', 'test', 'tests']"
Testability,"I thought about the explicit checking of psivars. In fact, I figured that if anything would fail the test suite, it would be if there were tests which checked these (evidently there was not). I could possibly add one at a later date- it would help keep plugins which parse a dictionary created by `core.get_variables()` from randomly breaking.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/857#issuecomment-344102578:101,test,test,101,https://psicode.org,https://github.com/psi4/psi4/pull/857#issuecomment-344102578,2,['test'],"['test', 'tests']"
Testability,"I thought based on a [previous post](https://github.com/psi4/psi4/pull/2611#issuecomment-1163642423), that there was a distinct format for spin-unrestricted and spin-restricted cases, but I can see there was a misunderstanding. How is this output?; [output.dat.log](https://github.com/psi4/psi4/files/8985763/output.dat.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2611#issuecomment-1166386314:261,log,log,261,https://psicode.org,https://github.com/psi4/psi4/pull/2611#issuecomment-1166386314,2,['log'],['log']
Testability,"I thought it might be useful to share the failed tests of psi4 (using commit e4070d0024742579a445) on our systems. We have 4 failed tests:. ```; The following tests FAILED:; 223 - opt10 (Timeout); 240 - pubchem1 (Failed); 241 - pubchem2 (Failed); 255 - pywrap-opt-sowreap (Failed); 264 - sapt4 (Failed); ```. The `pubchem` is probably just the firewall blocking stuff. Several times I've seen things like:. ```; 253: Unable to read the PSI4 Python folder - check the PSIDATADIR environmental variable; 253: Current value of PSIDATADIR is /user/scratch/gent/vsc403/vsc40307/EB/swalot/software/PSI/4.0b6-20160201-intel-2016a-mt-Python-2.7.11/share/psi4; ```. Where the value of `PSIDATADIR` is the install path instead of the build path. I think `pywrap-opt-sowreap` fails because of this. For the `sapt4` test:. ```; 264/305 Testing: sapt4; 264/305 Test: sapt4; Command: ""/apps/gent/CO7/haswell-ib/software/Python/2.7.11-intel-2016a/bin/python"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/runtest.py"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/tests/sapt4/input.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/testresults.log"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d"" ""false"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4/output.dat"" ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/bin/psi4""; Directory: /dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/obj/tests/sapt4; ""sapt4"" start time: Feb 15 13:13 CET; Output:; ----------------------------------------------------------; Traceback (most recent call last):; File ""<string>"", line 65, in <module>; File ""/dev/shm/ward/PSI/4.0b6-20160201/intel-2016a-mt-Python-2.7.11/psi4public-e4070d0024742579a445e084da9dde078310094d/lib/pytho",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253:49,test,tests,49,https://psicode.org,https://github.com/psi4/psi4/issues/253,6,"['Test', 'test']","['Test', 'Testing', 'test', 'tests']"
Testability,"I thought the octupoles were re-shaped Py-side to be arrays of the appropriate dimension? The following line passes tests and shows octupoles as a 3-by-3-by-3 matrix. ```; compare_values(np.array([0, 0, -0.9526489, 0, 0, 0, -0.9526489, 0, 0, 0, 0, 0, 0, 0, -0.9526489, 0, -0.9526489, 0, -0.9526489, 0, 0, 0, -0.9526489, 0, 0, 0, -6.8644462]).reshape((3, 3, 3)),; variable(""MP2 OCTUPOLE""), 4, ""MP2 OCTUPOLE"") #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2479#issuecomment-1069276890:116,test,tests,116,https://psicode.org,https://github.com/psi4/psi4/pull/2479#issuecomment-1069276890,2,"['TEST', 'test']","['TEST', 'tests']"
Testability,"I thought this was fixed long ago, but upon testing, that must have been `gradient`, `hessian`, and `frequency`, as `optimize` is indeed faulty. @psi-rking, I can intercept this in the psi driver, but would you prefer to intercept in optking?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2971#issuecomment-1566364965:44,test,testing,44,https://psicode.org,https://github.com/psi4/psi4/issues/2971#issuecomment-1566364965,1,['test'],['testing']
Testability,"I threw a +1 behind lori's comments about checking the SCF energy in the test, but otherwise. LGTM",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-265447202:73,test,test,73,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-265447202,1,['test'],['test']
Testability,"I tried both `freq1` and `freq2` tests, but could not find any problems with GCC8 (with sanitizers) on my Mac. My linux machines have a kernel that [doesn't allow the use of sanitizers](https://github.com/google/sanitizers/issues/856) so I can't test those. However, if I put the same print statement into an Intel linux build, I see the exact same output that I posted above - *i.e.* that both dimensions are the same. It appears that the mismatch in dimensions is only happening on windows, which is very strange. Can anybody else confirm the behavior on Linux and/or Mac?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1521#issuecomment-462437495:33,test,tests,33,https://psicode.org,https://github.com/psi4/psi4/pull/1521#issuecomment-462437495,2,['test'],"['test', 'tests']"
Testability,"I understand the docs (https://www.openmp.org/spec-html/5.0/openmpse57.html) such that an integer of `1` is the same behaviour as `(omp_set_nested(0);` where 0 is a bool. > If the environment variable is set to false, the initial value of max-active-levels-var is set to 1. The `max-active-levels-var` corresponds to `omp_set/get_max_active_levels`. Below does seem to pass the sapt-tu5 test with jaQZ (and which I can make fail with `omp_set_max_active_levels(0);`). . ```; #ifdef _OPENMP; omp_set_max_active_levels(1);; #endif; ```. The threading test gives the same level of threading as compiling with `omp_set_nested(0)` (and conda psi4). . Though I am hesitant making a 'too quick' PR about it. Opinions?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1820#issuecomment-625417041:387,test,test,387,https://psicode.org,https://github.com/psi4/psi4/issues/1820#issuecomment-625417041,2,['test'],['test']
Testability,I understand you as saying it's a good test because there is no point to it. Try explaining again.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2371#issuecomment-986971402:39,test,test,39,https://psicode.org,https://github.com/psi4/psi4/issues/2371#issuecomment-986971402,1,['test'],['test']
Testability,"I understand, but my logic in that case was that the Psi vars would appear exactly like the associated quantity in the output file, just to decrease possible confusion arising form all these different quantities.; If you'd prefer to have `ENERGY` spelled out for homogeneity reasons in the Psi vars, just let me know and I'll make the change, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/480#issuecomment-253120506:21,log,logic,21,https://psicode.org,https://github.com/psi4/psi4/pull/480#issuecomment-253120506,1,['log'],['logic']
Testability,"I uploaded my code, psi4 running log and result analysis to google drive: https://drive.google.com/file/d/1yifEuHhVXDsQh30toR0C69HzhE8rYqpn/view?usp=sharing. > ""I mean, a correlation coefficient of 0.62 is ridiculous. The calculations really should be nearly identical. Are you sure the molecular charges and multiplicities are set correctly?"". Conformer benchmark provides the charge of each molecule, multiplicity is set to 1 by default. (Psi4-Test/main.py line 63) ; @PeterKraus . > ""Set d_convergence. The default is 1e-6. You could set it to smaller numbers and see if the correlation improves. If you set it too low, the equations may not converge. You will see this problem if you try to set it below 1e-12, but you will probably see it at a larger number."". I tried to set d_convergence to 1e-7, but the calculation results are the same as the results of d_convergence=1e-6. The file I uploaded contains the running logs of both. (Psi4-Test/psi4_energy.csv, Psi4-Test/psi4_energy_tight.csv, Psi4-Test/conformer_benchmark/psi4_log); @JonathonMisiewicz . > ""I've only skimmed paper associated with the benchmarking data, but it looks like they used wB97X-D3/def2-TZVP, not wB97X-D/def2-SVP. They only refer to wB97X-D once, and use wB97X-D3 everywhere else. In section 4.2, they say that only B3LYP-D3BJ and PBE-D3BJ were selected to be tested with def2-SVP."". The file I uploaded contains the calculation results of wB97X-D3/def2-TZVP and wB97X-D/def2-SVP. (Psi4-Test/psi4_energy.csv, Psi4-Test/psi4_energy_tight.csv, Psi4-Test/conformer_benchmark/psi4_log); @ajs99778 . > ""Are you able to reproduce the benchmark energy for any conformer using wB97X-D/def2-SVP or wB97X-D3/def2-TZVP in ORCA 4.0.1? "" ""Also, ORCA 4.0.1 is several years old. I don't know if ORCA had any bug fixes/changes over the years that would impact their results, but you might want to compare to ORCA 5.0.1 energies as well."". Unfortunately, I don’t have ORCA license, so I can’t use ORCA.; @ajs99778",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-973862383:33,log,log,33,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-973862383,13,"['Test', 'benchmark', 'log', 'test']","['Test', 'benchmark', 'benchmarking', 'log', 'logs', 'tested']"
Testability,"I used Psi4 to calculate the energy of molecules in Conformer Benchmark dataset ( https://github.com/ghutchis/conformer-benchmark/ 702 molecules, each molecule has about 10 conformations). I tried three versions of Psi4 respectively, including V1.3.2, V1.4 and V1.4.1, and then calculated the correlation between the results of the three versions. The results are shown in the following table. The consistency is not high, especially v1.4.1, which is greatly different from the other two versions. Why are the calculation results of different versions so different?. In addition, I also calculated the correlation between Psi4 results and Orca results (from Conformer benchmark), the correlation is not high, why?. ![image](https://user-images.githubusercontent.com/16797849/141259545-c20d1c6c-6fe1-44ec-a0de-1bb8980db327.png). my code:; ```Python; def run_psi4_calc(xyz_str, dtype='xyz', basis_set='WB97X-D/def2-SVP', reference='uks', max_iter=100):. psi4.set_options({; 'reference': reference,; 'maxiter': max_iter; }). mol = psi4.core.Molecule.from_string(xyz_str, dtype=dtype); energy = psi4.energy(basis_set, molecule=mol). return energy. # get molecular 3d coordinates from Conformer benchmark; xyz_str = get_xyz_str(). energy = run_psi4_calc(; xyz_str=xyz_str,; dtype='xyz+',; basis_set='WB97X-D/def2-SVP',; reference='uks',; max_iter=100; ); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351:62,Benchmark,Benchmark,62,https://psicode.org,https://github.com/psi4/psi4/issues/2351,4,"['Benchmark', 'benchmark']","['Benchmark', 'benchmark']"
Testability,"I used the PSI4 to run SAPT0-D3 calculation. I tested both D3 and D3mbj correction, however, they all have the errors. The error is the assertion error: pairwise sum = -0.17086444... ! =energy -0.17086561.; The key word i used in my script is the following : ; set {; scf_type DF; freeze_core True; basis jun-cc-pVDZ; soscf true; soscf_max_iter 30; }; energy(""sapt0-d3"")",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2914:47,test,tested,47,https://psicode.org,https://github.com/psi4/psi4/issues/2914,2,"['assert', 'test']","['assertion', 'tested']"
Testability,"I usually find their packages to be of excellent quality. Which is your bug report? I remember a lightning talk, I think, at a recent SciPy about efforts to bring openblas up to snuff. Apparently even all their internal tests (or maybe it was numpy's tests) weren't passing for a long time. I agree that runtime processor detection is a build dimension to which conda has not expanded. That's why psi uses Intel compilers to add some multiarch optimizations. But why should cpu detection affect the numerical results?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-387070709:220,test,tests,220,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-387070709,2,['test'],['tests']
Testability,I view `props3` and `scf-cov` fixing up a slightly shaky/flawed test. For `props2` this is fixing an issue caused by the Cart/ZMat changes. Let me comment there further to keep that discussion contiguous.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/808#issuecomment-332294941:64,test,test,64,https://psicode.org,https://github.com/psi4/psi4/pull/808#issuecomment-332294941,1,['test'],['test']
Testability,"I was able to build and link against the latest homebrew boost 1.60.0, running the tests now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/243#issuecomment-217522431:83,test,tests,83,https://psicode.org,https://github.com/psi4/psi4/issues/243#issuecomment-217522431,1,['test'],['tests']
Testability,I was able to get the json file down to 5MB. . It's a little challenging to get it smaller since I wanted a comprehensive test (up through d-orbitals) for four different two-electron integral tensors.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2502#issuecomment-1091841264:122,test,test,122,https://psicode.org,https://github.com/psi4/psi4/pull/2502#issuecomment-1091841264,1,['test'],['test']
Testability,"I was following the CMake manual: ""SHARED libraries are linked dynamically and loaded at runtime. MODULE libraries are plugins that are not linked into other targets but may be loaded dynamically at runtime using dlopen-like functionality."" Guess I was wrong? Maybe @fevangelista can test that out?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1640#issuecomment-490072262:284,test,test,284,https://psicode.org,https://github.com/psi4/psi4/pull/1640#issuecomment-490072262,1,['test'],['test']
Testability,I was running `mp2/cc-pvqz-ri` and also `mp2/cc-pvqz` and saw the difference in the energy and was thinking I needed to explicitly set ri. . Thanks for clarifying that. Really helps before I scale. . Will update soon with some test results.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2747#issuecomment-1279098432:227,test,test,227,https://psicode.org,https://github.com/psi4/psi4/issues/2747#issuecomment-1279098432,1,['test'],['test']
Testability,"I was running the following input as a test:. ```set memory 4GB. molecule {; 0 3; O -0.5974387171 -0.0000000000 0.0000000000; O 0.5974387171 0.0000000000 0.0000000000. }. set {; reference rohf; d_convergence 10; e_convergence 10; basis_guess True; max_force_g_convergence 1e-7; freeze_core True; }. E = energy('mp2/heavy-aug-cc-pv([tq]+d)z + D:ccsd(t)/heavy-aug-cc-pv(d+d)z'); H = frequency('mp2/heavy-aug-cc-pv([tq]+d)z + D:ccsd(t)/heavy-aug-cc-pv(d+d)z', mode='continuous', dertype=0); ```. When computing the energy I get the following CBS summary. Everything looks good to me, matches what I get manually computing these (what I was testing). ``` ; ---------------------------------------------------------------------------------------------------------; Method / Basis Rqd Energy [Eh] Variable; ---------------------------------------------------------------------------------------------------------; hf / heavy-aug-cc-pv(t+d)z * -149.65690150 HF TOTAL ENERGY; mp2 / heavy-aug-cc-pv(t+d)z * -150.13698909 MP2 TOTAL ENERGY; hf / heavy-aug-cc-pv(q+d)z * -149.66713397 HF TOTAL ENERGY; mp2 / heavy-aug-cc-pv(q+d)z * -150.17732219 MP2 TOTAL ENERGY; hf / heavy-aug-cc-pv(d+d)z -149.62212747 HF TOTAL ENERGY; mp2 / heavy-aug-cc-pv(d+d)z * -150.01871638 MP2 TOTAL ENERGY; ccsd / heavy-aug-cc-pv(d+d)z -150.00685110 CCSD TOTAL ENERGY; ccsd(t) / heavy-aug-cc-pv(d+d)z * -150.02005663 CCSD(T) TOTAL ENERGY; ---------------------------------------------------------------------------------------------------------. ==> Stages <==. ---------------------------------------------------------------------------------------------------------; Stage Method / Basis Wt Energy [Eh] Scheme; ---------------------------------------------------------------------------------------------------------; scf hf / heavy-aug-cc-pv(q+d)z 1 -149.66713397 xtpl_highest_1; corl mp2 / heavy-aug-cc-pv([tq]+d)z 1 -150.20675446 corl_xtpl_helgaker_2; corl hf / heavy-aug-cc-pv([tq]+d)z -1 -149.67460090 corl_xtpl_helgaker_2; delta",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1897:39,test,test,39,https://psicode.org,https://github.com/psi4/psi4/issues/1897,2,['test'],"['test', 'testing']"
Testability,"I was thinking _downgrading_ pb11, not _updating_ it, but ok (2.10 mentions py311 compatibility anyways). I looked through the deps logs from the last good one to this one, and I don't see any red flags.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2656#issuecomment-1203302540:132,log,logs,132,https://psicode.org,https://github.com/psi4/psi4/issues/2656#issuecomment-1203302540,1,['log'],['logs']
Testability,"I was trying to run a Gaussian-2 energy calculation for hydrogen disulfide, which appears in the original G2 test set: http://scitation.aip.org/content/aip/journal/jcp/94/11/10.1063/1.460205. The job terminated after calculating the MP4(SDTQ) total energy, with message:. RuntimeError: sanity check failed! Gaussian94BasisSetParser::parser: Unable to find the basis set for S in /opt/science/psi/psi4/share/psi/basis/6-311g_2df_p_.gbs. When I examine the 6-311g_2df_p_.gbs file, I see that it only has entries for H, He, Li, Be, B, C, N, O, F, Ne, K, Ca. According to the comment at the top of the file it's supposed to have been merged from 6-311G*\* and 6-311G on the EMSL Basis Set Exchange. I double checked on the BSE and these basis sets also have entries for Na, Mg, Al, Si, P, S, Cl, Ar, Ga, Ge, As, Se, Br, Kr, I, as expected.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/58:109,test,test,109,https://psicode.org,https://github.com/psi4/psi4/issues/58,1,['test'],['test']
Testability,"I will add some timings and check the gradient soon(TM).; The various dft gradient tests do generally _not_ pass with `ROBUST` pruning. Didn't check errors, but those tests are often very tight. Finally, pruning _on_ by default (`ROBUST` scheme)?? I'd argue that is what users expect since most (all?) big QM programs do this. Possibly wants more thorough testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591#issuecomment-495351118:83,test,tests,83,https://psicode.org,https://github.com/psi4/psi4/pull/1591#issuecomment-495351118,3,['test'],"['testing', 'tests']"
Testability,"I will admit I considered that, then decided I didn't want to reformat the map into the initializer because it was long and I was lazy. My bigger concern is still: what was the consequence of `order_` being incorrectly 0 for so long, and who actually uses this property up-stream? The git commit where this was added says `Hack DFT grids to retain indexing data for ISA` but the only files touched were:. ```; src/lib/libfock/cubature.cc.REMOVED.git-id; src/lib/libfock/cubature.h; src/lib/libfock/gridblocker.h; ```. And I can't find anywhere that seems to use `order_` or the `order()` method of `SphericalGrid`. . Unfortunately, trying to look further back in the history of `cubature.cc` results in several instances of `psi4/src/psi4/libfock/cubature.cc.REMOVED.git-id` which (I think?) means things were stripped from the repo at some point, and the resulting commit stuff is all assigned to the wrong person (e.g., nearly `all` of `cubature.cc` is assigned to one commit 7e4ecf968e from dgasmith). `print_details` is the only place the `spherical_grids_` are ever apparently used, and I can comment out the block where they print nicely. _That_ function is only ever used in `v.cc` and only if `print_ > 2`. I don't think this is used much, and is creating unnecessary complexity, and doesn't feature in any tests I can find. I'm running through tests now to see if just... removing this entirely breaks anything. Short of `print_details` being accessible through some print settings, it doesn't appear that any of this is even exposed on the python side anyway?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2736#issuecomment-1268644487:1315,test,tests,1315,https://psicode.org,https://github.com/psi4/psi4/pull/2736#issuecomment-1268644487,2,['test'],['tests']
Testability,"I will leave the fix in PSI4 to someone else if you don't mind. I've added a workaround for this issue in our Molden parser. Feel free to take a look: https://github.com/theochem/iodata/blob/596cac8db3d3795eaed704b35c99b71b25447bc1/iodata/formats/molden.py#L506-L536 . If someone wants to code a Python version of the Molden writer, please do so with regression tests. I've gone through some trouble to fix small bugs in the C++ code in previous PRs and it would be a shame to reintroduce similar bugs in a Python rewrite. (It is easy to introduce small mistakes.) In general, to test the generated molden files, one can always load them into the Molden program and check if the total charge is correct, as well as the Mulliken charges, which can be compared to the output of `psi4.oeprop(wfn, ""MULLIKEN_CHARGES"")`. This can be verified with increasing angular momentum of the AO basis and pure versus Cartesian conventions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1973#issuecomment-665087544:362,test,tests,362,https://psicode.org,https://github.com/psi4/psi4/issues/1973#issuecomment-665087544,2,['test'],"['test', 'tests']"
Testability,"I will not review this until both tests pass and somebody from GATech (Zach, Lori, David Poole) does a thorough review pass. I have no strong opinion on whether this comes in for 1.6 or 1.7, but if this PR doesn't make 1.6, there needs to be a separate PR which implements the API changes. That PR _must_ come in for 1.6.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2543#issuecomment-1094954498:34,test,tests,34,https://psicode.org,https://github.com/psi4/psi4/pull/2543#issuecomment-1094954498,1,['test'],['tests']
Testability,"I wish there was a way to cut down the repetition in variable description, but from the user standpoint, that probably is the way to go... I'll get docs up and un-draft this (hopefully tonight) and save test pass for tomorrow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2569#issuecomment-1129511560:203,test,test,203,https://psicode.org,https://github.com/psi4/psi4/pull/2569#issuecomment-1129511560,1,['test'],['test']
Testability,"I won't close then. @raimis could you test PR #818?. Yeah, we use psithon. Could be interesting to change to psiapi, but we're happy with the passing the input to bin/psi4.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/817#issuecomment-356786390:38,test,test,38,https://psicode.org,https://github.com/psi4/psi4/issues/817#issuecomment-356786390,1,['test'],['test']
Testability,"I would find it a bit odd that Q-Chem does not add in any MP2 pieces considering the recent dipole benchmarking paper showing that DH's were very good, see [here](https://pubs.acs.org/doi/abs/10.1021/acs.jctc.7b01252). Though I do not have access while traveling and cannot read the details. @hokru do you have a paper of the ""proper"" implementation?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1333#issuecomment-436276152:99,benchmark,benchmarking,99,https://psicode.org,https://github.com/psi4/psi4/issues/1333#issuecomment-436276152,1,['benchmark'],['benchmarking']
Testability,"I would like to implement a faster way to do ESP fits than what is found here:; https://github.com/psi4/psi4numpy/tree/master/One-Electron-Property/Restrained-Electrostatic-Potential. The solution above is writing multiple grids on disk, yet the strength of the python and C++ APIs of Psi4 should be to have these in memory and allow for fast multithreaded evaluations. My development proposal would be a little more involved, but also give the Psi4 API a lot more power. I would split the whole OEProp class into:. OEPropCalc; This class will get all currently existing logic to calculate the requested properties. Most properties are already calculated as SharedMatrix. This class will not be allowed to have any kind of output, unless a bulk property is requested (such as a grid).; OEProp; This class gets all output handling, it will only call the respective OEPropCalc functions and then use the existing code for output. Data will be passed between OEPropCalc and OEProp as SharedPointer and therefore not cost overhead. Exception to this rule would be the functions writing grids, which will get an in-memory and a direct write solution.; Reason:; Currently OEProp sometimes exposes data in memory (such as Mulliken charges using wfn.set_array) and sometimes not (such as Multipoles only via stdout or outfile). The approach above would allow internal code use of SharedMatrices directly (OEPropCalc would get a public python API) and keep existing functionality untouched. Once the split is done, I would also split the GridEvaluation routines to either write a grid-XXX.dat (the existing functionality) or to keep the grids in memory (new functionality) and generate them with a grid taken from memory using the existing GridIterator interface. Are there any objections or is somebody else currently working on this?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1116:571,log,logic,571,https://psicode.org,https://github.com/psi4/psi4/issues/1116,1,['log'],['logic']
Testability,I would prefer to use `do_LinK` as user facing option over a general `do_linear_exchange`. LinK is not the only available linear scaling exchange implementation in the literature. Also please let the user know that LinK is active. At least I didn't see it in the test output files.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-976673987:263,test,test,263,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-976673987,1,['test'],['test']
Testability,I'd appreciate a test for this one. [Here](https://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest) is a StackOverflow example of testing that an exception gets raised.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2222#issuecomment-869688596:17,test,test,17,https://psicode.org,https://github.com/psi4/psi4/pull/2222#issuecomment-869688596,3,"['assert', 'test']","['assert-that-an-exception-gets-raised-in-pytest', 'test', 'testing']"
Testability,I'd forget the formatting changes if I didn't do them now. Changes made. Will merge once tests re-pass.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2250#issuecomment-897617828:89,test,tests,89,https://psicode.org,https://github.com/psi4/psi4/pull/2250#issuecomment-897617828,1,['test'],['tests']
Testability,"I'd like to run some calculations with modified nuclear attraction potentials that are expressible as user-defined ECPs, but I don't want the potential to replace any core electrons. I ran a test calculation for an argon atom using the aug-cc-pVDZ basis set and a custom ECP defined in a .gbs file as follows,. ```; AR 0 ; AR-ECP 0 0 ; spherical potential ; 1 ; 1 3.0 18.0 ; ```. Then I print out the ECP integrals produced by `mints.ao_ecp()` and I get a matrix with only zeros. However, when I change the ECP specification to replace 2 core electrons,. ```; AR 0 ; AR-ECP 0 2 ; spherical potential; 1; 1 3.0 18.0; ```. I now get (presumably) the actual ECP integrals, not a zero matrix. Interestingly, these ECP integrals are exactly the same for [He] core (2 electrons) and [Ne] core (10 electrons), but they are zeroed out for no core. Is there an unnecessary sanity check somewhere that zeroes out ECP integrals (or skips their calculation) if the number of electrons replaced by ECP is zero? If so, may I request dropping this check? The capability to compute zero-electron ECPs might be useful for dispersion-corrected atom-centered potentials (DCACPs) of Roethlisberger, DiLabio, ... and for computing nuclear integrals with a regularized Coulomb potential. P.S. I have never tested this thing prior to the move to LibECPInt.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2651:191,test,test,191,https://psicode.org,https://github.com/psi4/psi4/issues/2651,2,['test'],"['test', 'tested']"
Testability,"I'd like to team up on this, but Psi4 is trying to get back into the science business from having been in the infrastructure business for much of the past year, so our rewriting energies are depleted. On the monolithic vs. modular, on the whole I agree with preferring the latter, but I'm thinking that math detection is also going to have to be installed alongside packages so system dependencies can be detected from installed projects, and a single alternate file like [FindPythonLibsNew](https://github.com/pybind/pybind11/blob/master/tools/FindPythonLibsNew.cmake) (originally from numpy, i think) is more palatable than installing half-a-dozen+ files. So I'm guessing that on the core math, we'll probably keep applying bandaids but will be glad to serve as a test bed in developing needed specs and solutions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/537#issuecomment-264468397:766,test,test,766,https://psicode.org,https://github.com/psi4/psi4/issues/537#issuecomment-264468397,1,['test'],['test']
Testability,"I'd prefer to keep the blurb simple, and if at all possible, separate tests from docs. Why not go with something like:; ```; @loriab : ; Your PR is modifying Psi4's documentation. To make your life easier, we've built ; the updated docs for you. You can preview your changes online at [netlify/...](), ; or locally by downloading [this zip archive](). Please incorporate any further changes by adding commits to this PR.; ```. The samples issue is more complex. I'd avoid trying to teach folks how to use git in an automated blurb. ```; @loriab:; Your PR is modifying Psi4's test suite. To keep the `samples` suite in sync with; `tests`, we have created an automated commit [checksum]() to your PR branch. Please review, merge, or otherwise address the changes proposed in the automated commit ; into your PR before merging the PR into Psi4's `master`. Feel free to ask for help in ; the PR if you have any questions.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2364#issuecomment-981706469:70,test,tests,70,https://psicode.org,https://github.com/psi4/psi4/pull/2364#issuecomment-981706469,3,['test'],"['test', 'tests']"
Testability,"I'd rather have @davpoolechem officially sign off on this first. It'll be an hour before the test suite check finishes, anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2155#issuecomment-973164399:93,test,test,93,https://psicode.org,https://github.com/psi4/psi4/pull/2155#issuecomment-973164399,1,['test'],['test']
Testability,"I'll approve this when Zach's comments are addressed. Otherwise, this looks great!. Thanks a lot for the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2496#issuecomment-1077840949:105,test,tests,105,https://psicode.org,https://github.com/psi4/psi4/pull/2496#issuecomment-1077840949,1,['test'],['tests']
Testability,"I'll be fixing this shortly. This fix imposes stricter convergence criteria, so test cases may start failing. Because #1429 also is changing test cases involving df-omp2, I'll refrain until that is accepted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1143#issuecomment-450276166:80,test,test,80,https://psicode.org,https://github.com/psi4/psi4/issues/1143#issuecomment-450276166,2,['test'],['test']
Testability,"I'll break with our normal protocol and count my review as the third, because @CDSherrill has given approval (the tests pass).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1469#issuecomment-454855676:114,test,tests,114,https://psicode.org,https://github.com/psi4/psi4/pull/1469#issuecomment-454855676,1,['test'],['tests']
Testability,I'll have time tomorrow to update the docs and tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/634#issuecomment-283811506:47,test,tests,47,https://psicode.org,https://github.com/psi4/psi4/pull/634#issuecomment-283811506,1,['test'],['tests']
Testability,"I'll respond to the other points (although slowly), but what failing test are you talking about? Travis and AppVeyor both passed, and `ctest -E bench` on my machine did too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1289#issuecomment-434865331:69,test,test,69,https://psicode.org,https://github.com/psi4/psi4/pull/1289#issuecomment-434865331,1,['test'],['test']
Testability,"I'll review this once it passes tests. `test_cppe.py:test_cppe_tdscf_uhf` is currently failing. Based on the error message, this has nothing to do with CPPE but represents an indexing error in the code. For a first debug attempt, I would recommend removing both CPPE and the comparison against reference energies, and make sure the TDSCF completes in the first place. Let me know if you need assistance.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2605#issuecomment-1153836192:32,test,tests,32,https://psicode.org,https://github.com/psi4/psi4/pull/2605#issuecomment-1153836192,1,['test'],['tests']
Testability,"I'll test and commit, if it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1409#issuecomment-444995141:5,test,test,5,https://psicode.org,https://github.com/psi4/psi4/pull/1409#issuecomment-444995141,1,['test'],['test']
Testability,"I'm a bit confused about how to debug the test locally and also wanted to clarify my understanding of what is going on in the test. If I understand correctly, the test takes the `input.dat` file in`tests/sapt-dft1` and runs it through the built version of psi. Once this is done, it checks that there is nothing in `stdout` or `stderr` (as per line 230 of `tests/pytests/addons.py`) and that the test ran through successfully. I've been using ![this](https://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests) as a general guide for setting stuff up and running tests, but I'm not sure exactly how everything fits together. I could be totally off here, but I'm guessing that by removing the variable, there is some part of the test which expected a cached version of the `nmo_` variable, but now that it is being calculated every time, there is a mismatch between input and output. Any help or guidance with this would be much appreciated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2980#issuecomment-1583630169:42,test,test,42,https://psicode.org,https://github.com/psi4/psi4/pull/2980#issuecomment-1583630169,9,['test'],"['test', 'tests']"
Testability,"I'm a little worried about the 0 coefficient handling. The 0 coefficient means ""no local potential."" (See the discussion in #newdev on Nov. 9.) Replacing that with a ""really small but existing local potential"" just _sounds_ like it will create nasty surprises down the road. Good luck getting the tests passing!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/937#issuecomment-373309541:297,test,tests,297,https://psicode.org,https://github.com/psi4/psi4/pull/937#issuecomment-373309541,1,['test'],['tests']
Testability,"I'm about to commit the appropriate changes; it was just a silly dimensioning issue, as expected. Sorry for completely forgetting about this, and thanks to @CDSherrill for reminding me. Would you mind running it through your inputs as an extra set of checks, @loriab? Also, would you mind making the necessary cleanup in tests/libefp? I can get to it later if not.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/115#issuecomment-171483571:321,test,tests,321,https://psicode.org,https://github.com/psi4/psi4/issues/115#issuecomment-171483571,1,['test'],['tests']
Testability,"I'm afraid I have a habit of finding obscure bugs! :-) I'd forgotten about needing the additional vectors for linear bends. I'll poke about a bit more to see if I can track it down a bit more. As an aside, is there any real advantage of ""multi"" mode over ""single"" mode, apart form the former appearing to be (in my mind!) more of a logical way of thinking? I'll do some more tests...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/680#issuecomment-295595920:332,log,logical,332,https://psicode.org,https://github.com/psi4/psi4/issues/680#issuecomment-295595920,2,"['log', 'test']","['logical', 'tests']"
Testability,I'm confused: `samples/scf-guess` appears to contain the same calculations and tests as `tests/scf-guess`.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1537#issuecomment-465489348:79,test,tests,79,https://psicode.org,https://github.com/psi4/psi4/pull/1537#issuecomment-465489348,2,['test'],['tests']
Testability,"I'm familiar with the deep copy stuff because I wrote some of it. Everything here seems good to me. If there were any unexpected consequences, they should have been caught by the test suite.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2302#issuecomment-927966888:179,test,test,179,https://psicode.org,https://github.com/psi4/psi4/pull/2302#issuecomment-927966888,1,['test'],['test']
Testability,"I'm fixing the test file. Right now, I think I'm having issues with units.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2328#issuecomment-1068084388:15,test,test,15,https://psicode.org,https://github.com/psi4/psi4/pull/2328#issuecomment-1068084388,1,['test'],['test']
Testability,"I'm going over DFOCC now. It may not help, but certainly won't hurt. The reduced dependencies will improve parallelization, which may not help on Travis but will locally. The redundant files list is super useful, @dgasmith. We should certainly make sure that any functions contained therein are either tested (DFOCC, PSIMRCC, CC*, etc.) or removed (libqt, libciomr).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/525#issuecomment-262127128:302,test,tested,302,https://psicode.org,https://github.com/psi4/psi4/issues/525#issuecomment-262127128,1,['test'],['tested']
Testability,I'm going to learn VTune and then start running timing tests. Let me know if there are any things you want me to be sure to test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1901#issuecomment-638154935:55,test,tests,55,https://psicode.org,https://github.com/psi4/psi4/pull/1901#issuecomment-638154935,2,['test'],"['test', 'tests']"
Testability,"I'm happy to talk orbital ordering at PsiCon. One of the points I'll be making in my talk is the importance of keeping this sort of thing documented. I'll be pushing one more commit momentarily, when build and dipole tests pass again. After that, it'll be good to merge.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2818#issuecomment-1337609687:217,test,tests,217,https://psicode.org,https://github.com/psi4/psi4/pull/2818#issuecomment-1337609687,1,['test'],['tests']
Testability,"I'm looking at; https://github.com/psi4/psi4/blob/31219187caa9e8736b3323b078324f85d8c9cd6f/psi4/src/read_options.cc#L1612. which indicates the pseudospectral method is implemented, but only for CPHF. However, although I can find the integrals in `libmints`, I'm unable to see where the code is called. I was thinking that if one-electron integrals are now faster (related to PCM?), implementing a seminumerical exchange algorithm should be relatively straightforward. It might be really beneficial in Psi4 since although RI is really fast, exact integrals are quite slow at present, which is a problem for e.g. benchmark calculations that would be feasible with a seminumerical approach.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1818:611,benchmark,benchmark,611,https://psicode.org,https://github.com/psi4/psi4/issues/1818,1,['benchmark'],['benchmark']
Testability,"I'm looking for anharmonic modes of vibration of complexes. Good point on the optimization and frequency, for testing purposes I bring the level of theory down to hartree-fock just to make it go faster. On production code runs, the level of theory and basis set are consistent. . I have been playing around with both `frequency()` and `hessian()`. I chose the hessian last night because of this:. https://psicode.org/psi4manual/master/api/psi4.driver.qcdb.vib.harmonic_analysis.html#psi4.driver.qcdb.vib.harmonic_analysis. https://psicode.org/psi4manual/master/freq.html. Where the harmonic analysis is documented showing the IR intensities. The first parameter was a hessian matrix so I went back to go look at how to produce that. Maybe I went down a different rabbit hole. . https://github.com/psi4/psi4/blob/821134f62396ba27f9bcb8fbfa93ea2c370b7616/tests/pytests/test_vibanalysis.py. Line 17-40 I kind of copied your guys test to get the code running. I was actually confused with dipole derivatives and how to produce them and pass them in appropriately. . Ah okay! the frequency has it built in and I can see it. I got confused on the docs. . ```python; theory = 'hf/6-31g*'; ; energy, wave_function = psi4.optimize(; theory,; return_wfn = 'yes',; molecule=universe; ). frequencies = psi4.frequencies(; theory,; ref_gradient=wave_function.gradient(),; molecule=universe. ); ```. Ouput:. ```python; Freq [cm^-1] 1557.5017 4053.2831 4197.9898 ; Irrep A1 A1 B2 ; Reduced mass [u] 1.0830 1.0449 1.0829 ; Force const [mDyne/A] 1.5478 10.1143 11.2435 ; Turning point v=0 [a0] 0.2672 0.1686 0.1627 ; RMS dev v=0 [a0 u^1/2] 0.1966 0.1219 0.1198 ; IR activ [km/mol] 92.6794 13.8599 85.5429 ; Char temp [K] 2240.8982 5831.7720 6039.9727 ; ----------------------------------------------------------------------------------; 1 O 0.00 -0.00 -0.07 0.00 -0.00 0.05 0.00 -0.07 -0.00 ; 2 H -0.00 0.43 0.56 0.00 0.59 -0.39 0.00 0.56 -0.43 ; 3 H 0.00 -0.43 0.56 0.00 -0.59 -0.39 0.00 0.56 0.43 ; ```. So I want to ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2698#issuecomment-1227099808:110,test,testing,110,https://psicode.org,https://github.com/psi4/psi4/issues/2698#issuecomment-1227099808,3,['test'],"['test', 'testing', 'tests']"
Testability,"I'm not keen on not storing the scalars, but I can't argue with your logic. Perhaps keep the tests, and show the tensor->scalar processing within the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2022#issuecomment-719251676:69,log,logic,69,https://psicode.org,https://github.com/psi4/psi4/pull/2022#issuecomment-719251676,3,"['log', 'test']","['logic', 'tests']"
Testability,"I'm not sure how big of an issue numpy/BLAS/LAPACK would be for windows, because it would appear that mkl-linked numpy, mkl, and mkl-dev packages for windows are all available on the intel conda channel. So if numpy is able to link correctly I'm sure we would be able to as well. . I think @TiborGY thoughts on I/O related code are spot on, but I don't think we would have that much code elsewhere that would be incompatible, maybe some assumptions are made in driver code about how paths are formatted and those would be fairly simple to find/fix. . I actually don't think it would be terribly difficult for us to get psi working at least with *some* compiler on windows, really the only serious obstacle I see is that none of the developers have windows hardware to do the necessary leg work to get things working. Once things are set up we can probably rely on CI testing for windows keeping things working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-381759781:867,test,testing,867,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-381759781,1,['test'],['testing']
Testability,"I'm not sure how this could be tested, since the dumps are pretty lengthy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/700#issuecomment-301204873:31,test,tested,31,https://psicode.org,https://github.com/psi4/psi4/pull/700#issuecomment-301204873,1,['test'],['tested']
Testability,"I'm not sure what the conventions are, if any, for computing transition density matrices in other codes. Might see what a code like Q-Chem does. . I agree it'd be nice to have some OPDM test. Maybe some small test like H2 would suffice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1910#issuecomment-637050250:186,test,test,186,https://psicode.org,https://github.com/psi4/psi4/pull/1910#issuecomment-637050250,2,['test'],['test']
Testability,"I'm not sure what the problem is but this works fine, I'm happy to say :). set optking {. frozen_dihedral = ("". 5 1 2 6. 4 1 2 6. 3 1 2 6. ""). }. #optimize(""hf/3-21G""). import optking. set basis 3-21g. optking.optimize_psi4('hf'). On Fri, Jan 15, 2021 at 6:42 PM Lori A. Burns <notifications@github.com>; wrote:. > Can be fixed with a bigger basis like cc-pvdz. The gradient is fine, so I; > think the trouble is in predicting the next geom step, so may be of; > interest to @psi-rking <https://github.com/psi-rking>; >; > molecule {; > 0 1; > C -0.167039 -0.712374 -0.022325; > O 0.119573 0.677072 0.056530; > H -0.453842 -0.989160 -1.036819; > H -0.997038 -0.962046 0.638968; > H 0.691232 -1.312038 0.284396; > H 0.775814 0.817745 0.757350; > }; >; > set optking {; > frozen_dihedral = (""; > 5 1 2 6; > 4 1 2 6; > 3 1 2 6; > ""); > }; > #set {; > # geom_maxiter 2; > # g_convergence GAU_LOOSE; > #}; > #memory 6GB; > #set_num_threads(6); > #psi4_io.set_default_path(""/home/phy/Desktop/projects/2021/amoeba/test/poltype/scratch/Psi4-methanol""); > #for _ in range(1):; > # try:; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # break; > # else:; > # try:; > # set opt_coordinates cartesian; > # optimize('hf/3-21G'); > # break; > # except OptimizationConvergenceError:; > # pass; > #clean(); >; > optimize(""hf/3-21G"") # segfaults; > #optimize(""hf/cc-pvdz"") # 4 iter; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/2084#issuecomment-761275679>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AA4C4TBAEFTYTU5HYJQMMSDS2DOHPANCNFSM4WETR7OA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278:1007,test,test,1007,https://psicode.org,https://github.com/psi4/psi4/issues/2084#issuecomment-761373278,1,['test'],['test']
Testability,"I'm not sure why it caused the output file to disappear, but there was an actual failing test case that i could see when running locally, which should be fixed now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/721#issuecomment-304401397:89,test,test,89,https://psicode.org,https://github.com/psi4/psi4/pull/721#issuecomment-304401397,1,['test'],['test']
Testability,I'm okay with this (once tests pass) but do want to see the docs. I especially need to know _how developers decide what's worth logging_.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2512#issuecomment-1081905619:25,test,tests,25,https://psicode.org,https://github.com/psi4/psi4/pull/2512#issuecomment-1081905619,1,['test'],['tests']
Testability,"I'm rather confused on the flag situation. Points:. * we were getting reports at the forum that the Win conda package (built during the Azure CI) wasn't working for some machines; * a package built after switching the ENABLE_XHOST from `/arch:AVX2` to `/arch:AVX` seemed to work for all; * even before #2377, that flag wasn't active: https://dev.azure.com/psi4/psi4/_build/results?buildId=3455&view=logs&j=f31c9f97-4411-58e7-49ac-fc73f645e6b6&t=37c784ef-3eed-5b43-b403-e5baa44c3c05&l=32; ```; 2021-11-28T04:42:21.6163025Z -- The CXX compiler identification is Clang 13.0.0 with MSVC-like command-line; 2021-11-28T04:42:25.0744510Z -- Check for working C compiler: C:/Program Files/LLVM/bin/clang-cl.exe - skipped; 2021-11-28T04:42:25.4493255Z -- Check for working CXX compiler: C:/Program Files/LLVM/bin/clang-cl.exe - skipped; 2021-11-28T04:42:26.3103349Z -- Setting option ENABLE_XHOST: ON; 2021-11-28T04:42:26.6553541Z -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Success, Appending; ```; * this PR at first commit that adds `/arch:AVX` to CMAKE_CXX_FLAGS generates a bunch of the below; ```; 2021-12-16T22:33:46.0792776Z -- Build files have been written to: D:/a/1/b/build/psi4-core-prefix/src/psi4-core-build; 2021-12-16T22:33:46.0793909Z [6/9] Performing build step for 'psi4-core'; 2021-12-16T22:33:50.7743244Z [1/1263] Building CXX object src\psi4\libdpd\CMakeFiles\dpd.dir\buf4_mat_irrep_row_zero.cc.obj; 2021-12-16T22:33:50.8074886Z clang-cl: warning: argument unused during compilation: '/arch:AVX' [-Wunused-command-line-argument]; 2021-12-16T22:33:50.8077002Z [2/1263] Building CXX object src\psi4\libdpd\CMakeFiles\dpd.dir\buf4_mat_irrep_row_wrt.cc.obj; 2021-12-16T22:33:50.8080336Z clang-cl: warning: argument unused during compilation: '/arch:AVX' [-Wunused-command-line-argument]; 2021-12-16T22:33:50.8416165Z [3/1263] Building CXX object src\psi4\libdpd\CMakeFiles\dpd.dir\buf4_mat_irrep_row_init.cc.obj; ```. So perhaps the original #2292 fix was a dud, and we've just gotte",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2384#issuecomment-997024098:399,log,logs,399,https://psicode.org,https://github.com/psi4/psi4/pull/2384#issuecomment-997024098,1,['log'],['logs']
Testability,"I'm reasonably sure there was a reason why that `""f_options"" != False` check was necessary at some point, I just don't remember it right now. As long as all test pass, it should be fine, and I'm guessing DDD will make changes to the routines anyway.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2028#issuecomment-723523530:157,test,test,157,https://psicode.org,https://github.com/psi4/psi4/pull/2028#issuecomment-723523530,1,['test'],['test']
Testability,I'm still curious about json-schema_0_properties. I'll look around to see if there are more 1e- energies tested to confirm if this test is just set too strict.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404038707:105,test,tested,105,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404038707,2,['test'],"['test', 'tested']"
Testability,"I'm surprised the parser actually allows for this at all. The ""clever"" cast-up basis selection was implemented in #1484, but if the default is over-ridden, it's hands off. Whoever fixes this should probably check whether the values in [this test](https://github.com/psi4/psi4/blob/master/tests/basis-ecp/input.dat) are sensible.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1972#issuecomment-666180197:241,test,test,241,https://psicode.org,https://github.com/psi4/psi4/issues/1972#issuecomment-666180197,2,['test'],"['test', 'tests']"
Testability,"I'm surprised you're still awake at this time! I applied the fix that you suggested to the old code, but nothing changed. I have attached an [output.txt](https://github.com/psi4/psi4/files/6173157/output.txt) that matches the debug printing in the latest commit (sorry for the mess). The overall results are in the lines starting with ""native"" and ""libecp"" in the first column, with some intermediate quantities in the indented lines above those. I'm still adding more debug info to get to the source of the problem. The structure of the nonzero values looks good, so I think it's just normalization or something similar at this point. No obligation to go through this mess of course, but any insights you might have are very greatly appreciated :) The old code values are the numbers being dumped into the buffer right now, so the test passes. This is just the `scf-ecp` test case for now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135#issuecomment-803005054:832,test,test,832,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803005054,2,['test'],['test']
Testability,I'm the opposite: Testing intermediate compiler releases is important and the 5 concurrent build limit is unimportant. We're not talking about about an enormous about of time testing.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182893146:18,Test,Testing,18,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182893146,2,"['Test', 'test']","['Testing', 'testing']"
Testability,"I'm trying to compile your branch, to test on my machine, but keep hitting an incompatibility related to a `toupper` macro. Have you ever seen this before?. ```; In file included from /Users/andysim/rmrpsi4/psi4/src/lib/libparallel/p_fprintf.cc:30:; In file included from /Users/andysim/rmrpsi4/psi4/src/lib/libparallel/parallel.h:40:; In file included from /Users/andysim/rmrpsi4/psi4/src/lib/libparallel/process.h:38:; In file included from /Users/andysim/rmrpsi4/psi4/src/lib/liboptions/liboptions.h:43:; In file included from /Users/andysim/rmrpsi4/psi4/src/lib/libpsi4util/exception.h:33:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/sstream:174:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ostream:138:; In file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ios:216:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__locale:466:15: error: C++ requires a type; specifier for all declarations; char_type toupper(char_type __c) const; ^; /Users/andysim/miniconda/include/python2.7/pyport.h:731:29: note: expanded from macro 'toupper'; #define toupper(c) towupper(btowc(c)); ```. Both the HomeBrew and Conda versions of Python seem to have this issue. I just did a simple `cmake -DCMAKE_BUILD_TYPE=Debug ..` to configure, and it found the appropriate Python libs (I also removed the HomeBrew Python completely, to force Conda to be used.). I can see what the problem is, but I have no idea why it's occuring now, _i.e._, which flags we used before to avoid the problem. Any ideas?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235109795:38,test,test,38,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235109795,1,['test'],['test']
Testability,I'm trying to debug the failing test cases and I've run `clang-format` on some of the CC sources. Don't hate me (too much) when you look at the diffs.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/810#issuecomment-337288321:32,test,test,32,https://psicode.org,https://github.com/psi4/psi4/pull/810#issuecomment-337288321,1,['test'],['test']
Testability,"I'm using icpc 16.0.1 and I get the same failing test, scf5 with:. ```; PsiException: Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/322#issuecomment-227418754:49,test,test,49,https://psicode.org,https://github.com/psi4/psi4/issues/322#issuecomment-227418754,1,['test'],['test']
Testability,"I've added a new test called fsapt-ext that uses a water trimer, performing F-SAPT on two waters and representing the third as an external potential with TIP3P charges. The test runs in less than a minute on my machine. I've left the fsapt-ref folder as this is part of the output of the FISAPT module. I also verified that the test breaks without my revisions.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1608#issuecomment-492705223:17,test,test,17,https://psicode.org,https://github.com/psi4/psi4/pull/1608#issuecomment-492705223,3,['test'],['test']
Testability,I've added a test case for an FCIDUMP generated from an RHF wavefunction. I doesn't seem to have been picked up by Travis though...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355832001:13,test,test,13,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355832001,1,['test'],['test']
Testability,I've added a test for UHF integral dumps. The tests are in both as PsiAPI _and_ as Psithon. The former is failing without any particularly informative error message. Suggestions on how to troubleshoot?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355999602:13,test,test,13,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355999602,2,['test'],"['test', 'tests']"
Testability,I've added the checks for the deriv >= 1 spin-restricted case. Let me know if this is about right. The output is attached.; [nan_output.log](https://github.com/psi4/psi4/files/8960850/nan_output.log). I'll add the other cases after early feedback on the current messages.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2611#issuecomment-1163531527:136,log,log,136,https://psicode.org,https://github.com/psi4/psi4/pull/2611#issuecomment-1163531527,2,['log'],['log']
Testability,I've added the proposed file content to a new test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3167#issuecomment-2122245664:46,test,test,46,https://psicode.org,https://github.com/psi4/psi4/pull/3167#issuecomment-2122245664,1,['test'],['test']
Testability,"I've authorized the test suite to run. This is our way of confirming that nothing is obviously broken. If everything passes (as I expect it should), there's nothing on your end yet to do. If it fails, give it a quick look and flag Lori or I if you need assistance in identifying the issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2667#issuecomment-1212275829:20,test,test,20,https://psicode.org,https://github.com/psi4/psi4/pull/2667#issuecomment-1212275829,1,['test'],['test']
Testability,"I've been fiddling with isapt with the FISAPT_DO_PLOT set to true to generate cube files, etc. The coordinates in the resultant geom.xyz files are very wrong, although the energies appear to be correct and all tests pass. Running tests/isapt/input.dat through a conda nighty build (1.4a2.dev723) generates the following geom.xyz file (in both the plot and fsapt subdirectories):; ```; 19; 0 1 C5H12O2; O 0.000000000000 2.942220000000 0.000000000000; H 0.000000000000 2.054360000000 0.000000000000; O 0.000000000000 0.000000000000 0.000000000000; H 0.000000000000 0.000000000000 -1.284510000000; C 2.330480000000 -1.002690000000 0.000000000000; C 1.897250000000 0.000000000000 0.000000000000; C 2.282320000000 1.506690000000 0.000000000000; C 1.822040000000 2.846080000000 0.000000000000; C 2.379050000000 4.020990000000 0.000000000000; H 3.412460000000 -1.030300000000 0.000000000000; H 2.053620000000 -1.843720000000 0.000000000000; H 1.827140000000 -1.163820000000 0.000000000000; H 2.362430000000 0.000000000000 -1.576360000000; H 3.369620000000 1.514140000000 0.000000000000; H 1.812510000000 1.380600000000 1.281400000000; H 2.143440000000 2.929670000000 -1.338430000000; H 3.473200000000 4.024000000000 0.000000000000; H 2.035350000000 3.992160000000 1.536350000000; H 2.024810000000 4.967850000000 0.000000000000; ```; which has lots of seemingly random (although repeatable) x, y, or z coordinates set to zero (and overlapping atoms) when compared with the expected geom.xyz from the plot-ref subdirectory:; ```; 19. O 0.399870000000 2.942220000000 -0.265350000000; H 0.058930000000 2.054360000000 -0.509620000000; O 0.481220000000 0.302770000000 -0.777630000000; H 0.261060000000 -0.500050000000 -1.284510000000; C 2.330480000000 -1.002690000000 0.037710000000; C 1.897250000000 0.315330000000 -0.590090000000; C 2.282320000000 1.506690000000 0.297090000000; C 1.822040000000 2.846080000000 -0.294320000000; C 2.379050000000 4.020990000000 0.496390000000; H 3.412460000000 -1.030300000000 0.1",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1954:210,test,tests,210,https://psicode.org,https://github.com/psi4/psi4/issues/1954,2,['test'],['tests']
Testability,"I've been investigating orbital convergence problems in the `occ` module, such as in [this test case](https://github.com/psi4/psi4/blob/master/tests/omp2-3/input.dat). I find that convergence massively improves when I turn level shifting _off_, as it is [on by default](https://github.com/psi4/psi4/blob/master/psi4/src/read_options.cc#L2695). `grep -inr 'level_shift' .` indicates that the level shifting is currently being used exclusively [to scale the diagonal elements of the B matrix in the orbital optimization step of DIIS](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/occ/diis.cc#L74-L77). @bozkaya, I know this is old code, but can you comment on why you did the level shifting this way? This doesn't seem similar to any level shifting scheme I've ever seen. My quick numerical tests indicate that this makes convergence _much worse_, and getting rid of this heals some tests that @loriab is currently concerned about. Comments from @susilehtola are also welcome for this one.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1777:91,test,test,91,https://psicode.org,https://github.com/psi4/psi4/issues/1777,4,['test'],"['test', 'tests']"
Testability,"I've decided that this bugfix will require some discussion before we can act because changes to the number of MOs resulting from changing linear dependencies in the basis can yield a number of different errors. If nmo increases (as in this test case), then HF::dump_to_checkpoint() fails when it attempts to write too many orbital energies. However, if nmo decreases, then the use of the previous set of MOs will fail because they will be mis-read, producing an incorrect initial guess. We should put this down as a topic for discussion at the next hack-a-thon.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/32#issuecomment-37137150:240,test,test,240,https://psicode.org,https://github.com/psi4/psi4/issues/32#issuecomment-37137150,1,['test'],['test']
Testability,"I've diffed the universal and existing jkfit/jfit with diff_gbs.py (screenshot below), and all's well. (black is unchanged, blue adds an element, yellow is different but I don't really care about thallium and we don't use jfit anyways. I think if you edit the basis in tests mints9 and python/mints9 to universal, that should finally heal CI. Thanks for fixing this up. ![Screen Shot 2020-02-06 at 8 24 05 PM](https://user-images.githubusercontent.com/2314730/73992981-dd5e1b00-491e-11ea-8ddb-b2c115f232e1.png)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1804#issuecomment-583191559:269,test,tests,269,https://psicode.org,https://github.com/psi4/psi4/pull/1804#issuecomment-583191559,1,['test'],['tests']
Testability,"I've discussed this PR with Yi. This is just to confirm that we want to change the default exch-disp scaling scheme, as the new one appears to be more reliable. Apparently the previous test case didn't break because the exch-disp scheme was manually selected in the test case, rather than utilizing the (updated) default.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1281369067:185,test,test,185,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1281369067,2,['test'],['test']
Testability,"I've filed https://github.com/ddsolvation/ddX/issues/142 over at the parent project. Further investigation makes me uncertain whether our test reference may just have a built-in bug, in which case I hate to pin to a worse version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2921#issuecomment-1535504340:138,test,test,138,https://psicode.org,https://github.com/psi4/psi4/pull/2921#issuecomment-1535504340,1,['test'],['test']
Testability,"I've found storing Cholesky vectors on disk is hugely advantageous when running e.g. functional benchmarks. Does the code also handle range-separated functionals? In that case you also need the short-range integrals, and the separation constant may be different between functionals.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/405#issuecomment-225004764:96,benchmark,benchmarks,96,https://psicode.org,https://github.com/psi4/psi4/pull/405#issuecomment-225004764,1,['benchmark'],['benchmarks']
Testability,"I've got a branch that's only two days removed from master, and its smoke tests are clean. There is a problem with psi4 and qcng 0.28, but I'm sure you're on linux. After pulling tags, one does have to rebuild for the versioning to take effect. But if you're sure that's not it, go ahead and execute the results of `<objdir>/stage/bin/psi4 --psiapi`. It shouldn't be necessary for ctest, but considering those failures are those tests running the python command _and_ those that use qcengine, best to make sure of paths. Beyond that, see if `<objdir>/Testing/Temporary/LastTest.log` has some output clues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3028#issuecomment-1683215745:74,test,tests,74,https://psicode.org,https://github.com/psi4/psi4/issues/3028#issuecomment-1683215745,4,"['Test', 'log', 'test']","['Testing', 'log', 'tests']"
Testability,"I've got a new version of the fjt code ready to test, however it's based off of master. There is a conflict with this branch and master (export_mints.cc). Could someone more familiar with the changes rebase/merge master into this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/592#issuecomment-276474446:48,test,test,48,https://psicode.org,https://github.com/psi4/psi4/pull/592#issuecomment-276474446,1,['test'],['test']
Testability,"I've just tested the following:; * cloned to `/external_disk/gits/psi4`; * from there, configured to `/tmp` via `cmake -S. ... -DCMAKE_INSTALL_PREFIX=/home/auser/installs/psi4 -B/tmp/compile-psi4`; * build in `/tmp/compile-psi4` via `cmake --build .`; * test internal install via `/tmp/compile-psi4/stage/bin/psi4 --test`; * install via `cmake --build . --target install` to `/home/auser/installs/psi4`; * test external install via `/home/auser/installs/psi4/bin/psi4 --test`. That spans an external disk, an account home, and `/tmp/`, and I don't observe the mis-installed quadratures files you report. You are using CMake variables, not environment variables to configure this, right? Do you have a link to the recipe you're using? This is what I use for conda, if that's any help. https://github.com/psi4/psi4meta/blob/master/conda-recipes/psi4-multiout/build.sh#L120",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2683#issuecomment-1215839867:10,test,tested,10,https://psicode.org,https://github.com/psi4/psi4/issues/2683#issuecomment-1215839867,5,['test'],"['test', 'tested']"
Testability,"I've made changes and then had only the opt-irc-2 test case fail. Now I notice that others are having problems: https://testboard.org/cdash/testSummary.php?project=3&name=opt-irc-2&date=2016-02-27 . This is only a slight discrepancies at the end of a long IRC. In my case, at least, the number of IRC steps is the same. Do convergence keyword need tightening to preserve the reference progress of the IRC? Or does the compare_values check just need loosening to account for variance after many many optimization cycles? @avcopan, could you investigate?. Energy of last IRC point: computed value (-92.869134) does not match (-92.868907) to 5 decimal places.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/290:50,test,test,50,https://psicode.org,https://github.com/psi4/psi4/issues/290,3,['test'],"['test', 'testSummary', 'testboard']"
Testability,I've made the changes requested and added a test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2328#issuecomment-1040476266:44,test,test,44,https://psicode.org,https://github.com/psi4/psi4/pull/2328#issuecomment-1040476266,1,['test'],['test']
Testability,"I've merged all your changes into the development repository. (Except for the grendel changes- there would have been some doubly defined functions, and I think grendel is only intended to work with Python 2.7. There's no test cases for it.) fd-freq-energy is fixed, too. It just needed comments instead of an exit(). Your changes will appear in the next release (and we'll try not to re-introduce the Python 2 syntax), but if it would help your github stats, we can merge your pull requests into the psi4release flat repo. I'll keep your format_kwargs_for_input suggestion in mind. The file written by that has to pass through the inputparser minimally scathed, which might be tricker in binary. I suspect the whole process needs to be rejiggered (for python 3 and other considerations). We've considered setting up nightly builds/tests/valgrinds of the code. Buildbot certainly looks well-suited for this, and I'll bring it up the next time we're contemplating this. One complication for its use from your intent is that the research groups actively stifle variety in architecture/OS/library versions for sanity in running jobs. Most development is done on Mac laptops, and most production runs are on various Linux flavors/intel compilers/Python 2.6/2.7. But automated testing is certainly something we should do, if we can gather a suitable variety of unused boxes. I'm glad to hear you're a convert to psi4. Please do let us know of any other problems you find or features that would be particularly useful.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/9#issuecomment-20587095:221,test,test,221,https://psicode.org,https://github.com/psi4/psi4/pull/9#issuecomment-20587095,3,['test'],"['test', 'testing', 'tests']"
Testability,"I've modified the regex as per your comments in #934, the attached test file and outputs show that all possible combinations (that at least I could think of) pass fine. [output.txt](https://github.com/psi4/psi4/files/1888795/output.txt); [input.txt](https://github.com/psi4/psi4/files/1888796/input.txt)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379658445:67,test,test,67,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379658445,1,['test'],['test']
Testability,I've only run `ctest -L smoke` in the `build/` directory and it all seems to pass:; ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 6: casscf-sp; 1/20 Test #6: casscf-sp ........................ Passed 12.07 sec; Start 21: cc1; 2/20 Test #21: cc1 .............................. Passed 6.74 sec; Start 138: dfmp2-1; 3/20 Test #138: dfmp2-1 .......................... Passed 78.01 sec; Start 228: fcidump; 4/20 Test #228: fcidump .......................... Passed 4.32 sec; Start 385: sapt1; 5/20 Test #385: sapt1 ............................ Passed 59.83 sec; Start 419: scf-property; 6/20 Test #419: scf-property ..................... Passed 9.06 sec; Start 434: tu1-h2o-energy; 7/20 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 470: tdscf-1; 8/20 Test #470: tdscf-1 .......................... Passed 5.19 sec; Start 471: tdscf-2; 9/20 Test #471: tdscf-2 .......................... Passed 3.84 sec; Start 472: tdscf-3; 10/20 Test #472: tdscf-3 .......................... Passed 12.44 sec; Start 473: tdscf-4; 11/20 Test #473: tdscf-4 .......................... Passed 11.39 sec; Start 487: ddd-deriv; 12/20 Test #487: ddd-deriv ........................ Passed 17.49 sec; Start 492: psi4numpy-rhf; 13/20 Test #492: psi4numpy-rhf .................... Passed 2.68 sec; Start 494: psi4numpy-rhf-hessian; 14/20 Test #494: psi4numpy-rhf-hessian ............ Passed 2.55 sec; Start 499: python-energy; 15/20 Test #499: python-energy .................... Passed 2.27 sec; Start 514: json-schema-1-gradient; 16/20 Test #514: json-schema-1-gradient ........... Passed 2.83 sec; Start 518: dftd3-energy; 17/20 Test #518: dftd3-energy ..................... Passed 49.54 sec; Start 523: sapt0-d; 18/20 Test #523: sapt0-d .......................... Passed 379.12 sec; Start 524: fsapt-d; 19/20 Test #524: fsapt-d .......................... Passed 487.00 sec; Start 526: dftd4-energy; 20/20 Test #526: dftd4-energy ..................... Passed 128.98 sec. 100% tests p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523:89,Test,Test,89,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2372776523,11,['Test'],['Test']
Testability,"I've only skimmed paper associated with the benchmarking data, but it looks like they used wB97X-D3/def2-TZVP, not wB97X-D/def2-SVP. They only refer to wB97X-D once, and use wB97X-D3 everywhere else. In section 4.2, they say that only B3LYP-D3BJ and PBE-D3BJ were selected to be tested with def2-SVP. Are you able to reproduce the benchmark energy for any conformer using wB97X-D/def2-SVP or wB97X-D3/def2-TZVP in ORCA 4.0.1? I believe the ORCA input would have; ```; ! wB97X def2-SVP D2; ```; or ; ```; ! wB97X-D3 def2-TZVP; ```. In addition to using the newer version of Psi4 that fixes the bug Jonathon mentioned, ensure that you are comparing like-for-like by spot checking a few of the energies in the benchmark data set using the same software and settings. Using a different dispersion correction and basis set would explain the poor agreement between Psi4 1.4.1 and ORCA 4.0.1. Also, ORCA 4.0.1 is several years old. I don't know if ORCA had any bug fixes/changes over the years that would impact their results, but you might want to compare to ORCA 5.0.1 energies as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2351#issuecomment-971118827:44,benchmark,benchmarking,44,https://psicode.org,https://github.com/psi4/psi4/issues/2351#issuecomment-971118827,4,"['benchmark', 'test']","['benchmark', 'benchmarking', 'tested']"
Testability,"I've rebased on top of Jeff's (#1885) changes. I need to implement the handling of triplets _à la_ famous program. Is there a way to have the `TDSCF_STATES` option be either an array or an integer? It would be good to move the logic for apportioning states per irrep (and triplets) further up from `tdscf_excitations`, I think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-642655962:227,log,logic,227,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-642655962,1,['log'],['logic']
Testability,"I've rebased this so that dev psi4 is working with dev libxc (soon to be libxc v5). Haven't tried fixing up psi for xc changes in the last year+, so there are failing tests at present. * Libxc master is still labeled 4.3.4, which is the same as the very different release branch current psi is accustomed to. Probably the easiest way to work with clones of both projects and be sure of what you're getting is to build libxc master (`-DBUILD_SHARED_LIBS=ON`), install it, edit the `ConfigVersion.cmake` file to `4.4`, go to psi, force uninstall libxc conda package if libxc is in your active env, edit external/upstream/libxc/CM to 4.4, build psi passing `-DLibxc_DIR=/path/to/dir/of/ConfigVersion`, build psi, check you've got the right one with `ldd stage/lib/psi4/core`.; * Errors at present:; ```; 	158 - dft-grad-lr1 (Failed); 	159 - dft-grad-lr2 (Failed); 	160 - dft-grad-lr3 (Failed); 	175 - dft1 (Failed); 	177 - dft1-alt (Failed); 	179 - dft3 (Failed); 	180 - dft-omega (Failed); 	213 - frac-ip-fitting (Failed); 	338 - sapt-dft-lrc (Failed); 	364 - soscf-dft (Failed); 	397 - dft-custom-hybrid (Failed); 	399 - dft-custom-gga (Failed); 	443 - dftd3-energy (Failed); ```; ```; >>> pytest ../tests/pytests/test_dft_benchmarks.py -rws -v -n12; [gw8] [ 5%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[B5050LYP- - ]; [gw7] [ 18%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[MN12-SX- - ]; [gw5] [ 22%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[SCAN0- - ]; [gw8] [ 33%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[wB97- - ]; [gw6] [ 36%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[wB97X-D- - ]; [gw6] [ 43%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[wB97X-V- - ]; [gw2] [ 47%] FAILED ../tests/pytests/test_dft_benchmarks.py::test_dft_bench_ionization[SCAN- - ]; [gw8] [ 54%] FAILED ../tests/pytests/test_dft_benchm",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-601509105:167,test,tests,167,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-601509105,1,['test'],['tests']
Testability,"I've reinstalled everything and indicated the path to the libstdc++, so this might fix the issue I had before (I'm running the tests now and I'll see). Just a small question. I did the ```otool -L``` as follows, does the output looks good to you ?. ```; otool -L /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so:; 	@rpath/core.cpython-37m-darwin.so (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.250.1); 	@rpath/libmkl_rt.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libiomp5.dylib (compatibility version 5.0.0, current version 5.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libgomp.1.dylib (compatibility version 2.0.0, current version 2.0.0); 	/usr/local/opt/gcc@8/lib/gcc/8/libstdc++.6.dylib (compatibility version 7.0.0, current version 7.25.0); 	/usr/local/lib/gcc/8/libgcc_s.1.dylib (compatibility version 1.0.0, current version 1.0.0); ```. About numpy, I have something like this, does it look good as well ?; ```; otool -L /usr/local/lib/python3.7/site-packages/numpy/core/_multiarray_umath.cpython-37m-darwin.so; /usr/local/lib/python3.7/site-packages/numpy/core/_multiarray_umath.cpython-37m-darwin.so:; 	@loader_path/../.dylibs/libopenblasp-r0.3.7.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1252.50.4); ```. Otherwise, do you advise me to download the INTEL distribution ? https://software.intel.com/en-us/distribution-for-python/choose-download",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614842621:127,test,tests,127,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614842621,1,['test'],['tests']
Testability,"I've run full tests with both py27 & py36 and both report the following. The last two are b/c hungarian not installed – not a problem. The first two are b/c MemDFJK isn't handling Cartesian basis sets right. I'm not sure how those other errors you were seeing came about, @schiebermc. Was there a point in this branch where full tests was clean? There's been upheaval to `master`, so we could reason from there. ```; The following tests FAILED:; 	187 - fd-freq-energy-large (Failed); 	212 - mints8 (Failed); 	375 - pywrap-align (Failed); 	376 - pywrap-align-chiral (Failed); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-384197920:14,test,tests,14,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-384197920,3,['test'],['tests']
Testability,"I've run some timing tests. First, with DLPNO-MP2 on 1644 basis functions, the same job in triplicate:. | Before PR | After PR |; | --- | --- |; | 2:43:56.48 | 2:44:54.51 |; | 2:44:17.27 | 2:44:03.06 |; | 2:45:08.16 | 2:44:24.98 |. And now DF-DCT with 384 basis functions, this time in duplicate:; | Before PR | After PR |; | --- | --- |; | 1:03:58.53 | 1:03:52.70|; | 1:03:49.19 | 1:03:48.30 |. I can run additional tests if requested, but the PR has negligible impact on performance time, as expected. The PR is ready for more serious review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2369#issuecomment-993839945:21,test,tests,21,https://psicode.org,https://github.com/psi4/psi4/pull/2369#issuecomment-993839945,2,['test'],['tests']
Testability,I've run tests on both Linux and Mac systems to confirm this behavior.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/148:9,test,tests,9,https://psicode.org,https://github.com/psi4/psi4/issues/148,1,['test'],['tests']
Testability,"I've run this test (`opt10`) without limits on 128 GB RAM and 20 threads and it takes:. ```; Total time:; user time = 36215.14 seconds = 603.59 minutes; system time = 882.69 seconds = 14.71 minutes; total time = 2280 seconds = 38.00 minutes; ```. So the test works, it just takes some time.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-184231418:14,test,test,14,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-184231418,2,['test'],['test']
Testability,"I've run this test with both SCF and B3LYP and, although neither; successfully identifies a TS, neither throws an error either. On Tue, Mar 29, 2016 at 2:24 PM, Daniel Smith notifications@github.com; wrote:. > @psi-rking https://github.com/psi-rking Just FYI this bug occurs with; > SCF/DFT or MP2 for a cheaper.; > ; > For me, the primary concern is the symmetry mapping error is fairly; > generic. I think a bit clearer error message (if possible) would be; > sufficient.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/issues/10#issuecomment-203062097",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/10#issuecomment-203440132:14,test,test,14,https://psicode.org,https://github.com/psi4/psi4/issues/10#issuecomment-203440132,1,['test'],['test']
Testability,"I've seen this happen, though not on identical codebases. Added scf5 to quicktests so we could monitor with TravisCI. Then I saw it on Blueridge (https://testboard.org/cdash/testDetails.php?test=8074282&build=66614) to be mysteriously healed the next day (https://testboard.org/cdash/testDetails.php?test=7019761&build=66801). Then @bennybp reported it happens intermittantly on an identical codebase (https://github.com/psi4/psi4/issues/321#issuecomment-198631685). So now I believe it exists. Compilers (in my case) were Intel 2015.0.3.187.; - `Singlet PK CUHF energy: computed value (-149.6304503) does not match (-149.5905972) to 6 decimal places.`; - `Singlet PK UHF energy: computed value (-149.6484410) does not match (-149.5905972) to 6 decimal places`; - In my case, I think the guess occupancy spontaneously changed.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/322:154,test,testboard,154,https://psicode.org,https://github.com/psi4/psi4/issues/322,6,['test'],"['test', 'testDetails', 'testboard']"
Testability,"I've seen this, though it hasn't been a problem. Anyone recall whether this has always (last few months) been the case or only recently? If the latter, maybe the [pytest checks](https://github.com/psi4/psi4/blob/master/tests/pytest/test_addons.py#L7-L20) are involved.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/656#issuecomment-287771809:219,test,tests,219,https://psicode.org,https://github.com/psi4/psi4/issues/656#issuecomment-287771809,1,['test'],['tests']
Testability,I've tested the mrcc interface within about a year. _But_ I only have the old mrcc (c. 2014) before it learned how to do SCF itself.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536:5,test,tested,5,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2070634536,1,['test'],['tested']
Testability,"I've tried this out, and tests are clean. However, the output is confusing with no iterations printed. Fortunately, the same effect can be had with `fail_on_maxiter=False`. Then the output is:. ```. ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @RKS iter 0: -128.84964605391272 -1.28850e+02 1.60374e-02. PsiException: Could not converge SCF iterations in 0 iterations. Energy and/or wave function did not converge, but proceeding anyway.; ```. Function reorganization is good, imo. I'll suggest edits.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2073#issuecomment-767629805:25,test,tests,25,https://psicode.org,https://github.com/psi4/psi4/pull/2073#issuecomment-767629805,1,['test'],['tests']
Testability,"I've tweaked the https://github.com/MolSSI/QCEngine/pull/393/files PR slightly, and I think it's ready for merge. Here, I've added a few tests (b97-3c, r2scan2-3c, and r2scan2-d4) and tried them with several combinations of old/new gcp, old/new dftd3, and 3.4/3.5 dftd4, so I'm semi-confident they run when they ought and give helpful errors when they can't. The tests I added cover energy and gradient, but they're purely internal -- no reference values from a separate implementation. What further tests are wanted?. The labels/selectors for pytest should be in good shape (that is, tests will skip if wrong gcp/d3/d4 detected). CTest selectors aren't in good shape, so if you get helpful ""can't run"" errors, that's expected; wrong values aren't expected.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2842#issuecomment-1672766348:137,test,tests,137,https://psicode.org,https://github.com/psi4/psi4/pull/2842#issuecomment-1672766348,4,['test'],['tests']
Testability,"I've written a patch to allow for a custom frozen policy that is a bit clunky but safer than `num_frozen_docc` (because it applies per-atom rules, so works properly for cases like SAPT, MBIS_VOLUME_RATIOS, etc) -- once I can be sure this builds in vanilla psi4 (trying now) I will re-run my test jobs and submit the patch. . Still not sure what to do about `scf::HF::compute_fcpi` because I'm still a newbie to the code base (and this patch does NOT fix that issue).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2631#issuecomment-1208404402:291,test,test,291,https://psicode.org,https://github.com/psi4/psi4/issues/2631#issuecomment-1208404402,1,['test'],['test']
Testability,"IIRC speedups of seminumerical methods increase with larger basis sets, so you may want to benchmark those as well...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2567#issuecomment-1120024084:91,benchmark,benchmark,91,https://psicode.org,https://github.com/psi4/psi4/pull/2567#issuecomment-1120024084,1,['benchmark'],['benchmark']
Testability,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version 7.2.0; -- Found OpenMP_C: -qopenmp ; -- Found OpenMP_CXX: -qopenmp",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524:3857,Test,Test,3857,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386785524,2,['Test'],['Test']
Testability,"ILD_FPIC: ON; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Setting (unspecified) option SIMINT_VECTOR: avx; -- Psi4 install: /usr/local/psi4; -- Found PythonInterp: /home/termo/miniconda3/envs/p4dev35/bin/python (found suitable version ""3.5.5"", minimum required is ""2.7"") ; -- Found PythonLibs: /home/termo/miniconda3/envs/p4dev35/lib/libpython3.5m.so; -- Found Python 3.5: /home/termo/miniconda3/envs/p4dev35/bin/python (found version 3.5.5); -- Found LAPACK MKL: /home/termo/miniconda3/envs/p4dev35/lib/libmkl_rt.so;...; -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found HDF5: /home/termo/miniconda3/envs/p4dev35/lib/libhdf5.so;... (found version 1.10.1); -- Performing Test HAS_CPP14_FLAG; -- Performing Test HAS_CPP14_FLAG - Success; -- Found pybind11: /home/termo/miniconda3/envs/p4dev35/include/python3.5m (found version 2.2.3); -- HDF5: Using hdf5 compiler wrapper to determine C configuration; -- Found CheMPS2: /home/termo/miniconda3/envs/p4dev35/lib/libchemps2.so.3 (found version 1.8.7); -- Found dkh: /home/termo/miniconda3/envs/p4dev35/lib/libdkh.so (found version 1.2); -- Found libefp: /home/termo/miniconda3/envs/p4dev35/lib/libefp.so.1.5 (found version 1.5.0); -- Found gau2grid: /home/termo/miniconda3/envs/p4dev35/lib/libgg.so (found version 1.0.1); -- Found gdma: /home/termo/miniconda3/envs/p4dev35/lib/libgdma.so (found version 2.2.6); -- Found Libint 6: /home/termo/miniconda3/envs/p4dev35/lib/libint.so (found version 1.2.0); -- Found PCMSolver: /home/termo/miniconda3/envs/p4dev35/lib/libpcm.so.1 (found version 1.2.1.0); -- Found Libxc: /home/termo/miniconda3/envs/p4dev35/lib/libxc.so (found version 4.0.2); -- Found base compiler version ; CMake Error at cmake/custom_cxxstandard.cmake:39 (if):; if given",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883:4156,Test,Test,4156,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386441883,2,['Test'],['Test']
Testability,IPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:428: Not detecting module libefp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13803,test,tests,13803,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['test'],['tests']
Testability,IPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14283,test,tests,14283,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['test'],['tests']
Testability,"IS; @DF-RKS iter 6: -76.33541735566205 -1.04765e-08 1.19390e-06 DIIS; @DF-RKS iter 7: -76.33541735595242 -2.90370e-10 2.40194e-07 DIIS. ==> Post-Iterations <==. Orbital Energies (a.u.); -----------------------. Doubly Occupied: . 1A -19.184718 2A -1.000452 3A -0.509499 ; 4A -0.360493 5A -0.281933 . Virtual: . 6A 0.113651 7A 0.212439 8A 0.827371 ; 9A 0.915633 10A 0.937398 11A 0.938267 ; 12A 1.123156 13A 1.234184 14A 1.763048 ; 15A 1.774444 16A 1.811716 17A 2.329295 ; 18A 2.632599 19A 3.611500 . Final Occupation by Irrep:; A ; DOCC [ 5 ]. Energy converged. @DF-RKS Final Energy: -76.33541735595242. => Energetics <=. Nuclear Repulsion Energy = 8.9272515369995578; One-Electron Energy = -122.8414514085261118; Two-Electron Energy = 44.6070248999700425; DFT Exchange-Correlation Energy = -7.0282423843959076; Empirical Dispersion Energy = 0.0000000000000000; PCM Polarization Energy = 0.0000000000000000; EFP Energy = 0.0000000000000000; Total Energy = -76.3354173559524156. Alert: EFP and PCM quantities not currently incorporated into SCF psivars. Properties will be evaluated at 0.000000, 0.000000, 0.000000 Bohr; ==> Properties <==. Properties computed using the SCF density matrix. Nuclear Dipole Moment: (a.u.); X: 14.2834 Y: 0.0000 Z: -23.5602. Electronic Dipole Moment: (a.u.); X: -15.1523 Y: -0.0000 Z: 23.6231. Dipole Moment: (a.u.); X: -0.8689 Y: -0.0000 Z: 0.0628 Total: 0.8712. Dipole Moment: (Debye); X: -2.2085 Y: -0.0000 Z: 0.1597 Total: 2.2143. Saving occupied orbitals to File 180. *** tstop() called on machtiani1 at Wed Feb 10 19:35:42 2016; Module time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; Total time:; user time = 23.90 seconds = 0.40 minutes; system time = 1.02 seconds = 0.02 minutes; total time = 4 seconds = 0.07 minutes; [Error prints before oeprop]; ```. The other crash I saw was just the input/output from the conda install test. Let me know if you need more information.; -kratz",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/240#issuecomment-182660528:9292,test,test,9292,https://psicode.org,https://github.com/psi4/psi4/issues/240#issuecomment-182660528,1,['test'],['test']
Testability,"Ideally there should be a test-case attached sooner rather than later. I think a simple-but-intuitive way to do this would be to add a keyword named something like `irc_n_steps` which tells OPTKING to `return OptReturnSuccess` after a given number of converged IRC points. Then you could do something like `set irc_n_steps 10` in your test case to avoid passing through the minimum, after which the steps may become unpredictable. I could help with that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-351224954:26,test,test-case,26,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-351224954,2,['test'],"['test', 'test-case']"
Testability,"If I do analytic frequency calculation with HF it seems eternally stuck (with full cpu load) - for this particular molecule at least. attached log with optimization and frequency calculation that is stuck when using analytical and full successful log with dertype=""gradient"". ```; E, wfn = optimize('HF',return_wfn=True); #E, wfn = frequencies('HF',return_wfn=True, dertype='gradient'); E, wfn = frequencies('HF',return_wfn=True). ```; [2202-HF-analytic.log](https://github.com/psi4/psi4/files/2307871/2202-HF-low-analytic.log); [2202-HF-gradient.log](https://github.com/psi4/psi4/files/2307873/2202-HF-low.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1145:143,log,log,143,https://psicode.org,https://github.com/psi4/psi4/issues/1145,6,['log'],['log']
Testability,"If I have Iodine in a molecule I get wrong atom (from I[53] to Mn[25]) in header in cube file:. example:; ```; molecule mol {; 0 1; I 1.05590 0.00000 0.00000; C -1.05590 0.00000 0.00000; H -1.44970 -1.02090 0.00000; H -1.44980 0.51040 0.88420; H -1.44970 0.51050 -0.88410; }. set scf_type df; set basis def2-SVP. E, wfn = energy('pbe',return_wfn=True); set cubeprop_tasks ['density']; set CUBIC_GRID_OVERAGE [8.0, 8.0, 8.0]; set CUBIC_GRID_SPACING [0.17, 0.17, 0.17]; cubeprop(wfn). ```. cube header:; ```. Psi4 Gaussian Cube File.; Property: Dt [e/a0^3]. Isocontour range for 85% of the density: (0.0575417,0); 5 -12.299260 -10.002258 -9.689907; 123 0.170000 0.000000 0.000000; 113 0.000000 0.170000 0.000000; 115 0.000000 0.000000 0.170000; 25 0.000000 0.438284 -0.000000 -0.000001; 6 0.000000 -3.552440 -0.000000 -0.000001; 1 0.000000 -4.296614 -1.929221 -0.000001; 1 0.000000 -4.296803 0.964516 1.670895; 1 0.000000 -4.296614 0.964705 -1.670708; ```; [CH3I.log](https://github.com/psi4/psi4/files/2245612/CH3I.log)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1113:961,log,log,961,https://psicode.org,https://github.com/psi4/psi4/issues/1113,2,['log'],['log']
Testability,"If I have time this weekend, I'm going to try making a small little pair of Python extension modules that are each linked to a separate copy of MKL and see if I can reproduce anything like this. I _think_ that must be the relevant difference between my test and yours. Weirdness about two simultaneous copies of BLAS libraries being loaded + threads seems to be involved in #748 as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/755#issuecomment-312399904:253,test,test,253,https://psicode.org,https://github.com/psi4/psi4/issues/755#issuecomment-312399904,1,['test'],['test']
Testability,"If I merge the current `master`, all test pass except `cubeprop-esp`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174715:37,test,test,37,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174715,1,['test'],['test']
Testability,"If Psi is built with debug symbols, I observe that the `cc53` test fails randomly. Failure rate seems to be somewhere between 50% and 80%. If Psi is not built with debug symbols, the test works perfectly. When the bug appears, the LLDB reports `malloc: *** error for object 0x100000000: pointer being freed was not allocated`. The most relevant part of the stack trace is ; ```; frame #5: 0x00000001050d3b64 core.cpython-36m-darwin.so`psi::DPD::free_dpd_block(this=0x000000011485c9c0, array=0x000000011485cb50, n=3, m=3) at block_matrix.cc:176; frame #6: 0x0000000105124f85 core.cpython-36m-darwin.so`psi::DPD::file2_mat_close(this=0x000000011485c9c0, File=0x00007ffeefbf7718) at file2_mat_close.cc:46; frame #7: 0x0000000103c092dc core.cpython-36m-darwin.so`psi::cctriples::EaT_RHF() at EaT_RHF.cc:247; frame #8: 0x0000000103c5477f core.cpython-36m-darwin.so`psi::cctriples::cctriples(reference_wavefunction=std::__1::shared_ptr<psi::Wavefunction>::element_type @ 0x0000000102a00e00 strong=7 weak=2, options=0x00000001067bf240) at triples.cc:154; frame #9: 0x0000000103b45e93 core.cpython-36m-darwin.so`psi::cclambda::CCLambdaWavefunction::compute_energy(this=0x00000001018f4e18) at cclambda.cc:324; ```. I'll leave this bug to somebody familiar with the CC code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1376:62,test,test,62,https://psicode.org,https://github.com/psi4/psi4/issues/1376,2,['test'],['test']
Testability,"If `/Users/hugomacdermott/Desktop/dev/psi4_build/` is your `CMAKE_INSTALL_PREFIX`, then this is fine, but you can make development a little easier by skipping the `install` step. In your `objdir/` is a `stage/` dir with a complete install that gets updated with every `make`. It's this installation that gets run with `ctest`. I'd seek that, then run the results of `objdir/stage/bin/psi4 --psiapi` and check that the `which` & `python -c ` commands returns paths in `objdir/stage/`. This way there's a quick turnaround between edit/make/test. I don't see anything necessarily wrong with what you posted. The above is just a setup that can reduce confusion if you forget the install step.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2775#issuecomment-1314638646:538,test,test,538,https://psicode.org,https://github.com/psi4/psi4/pull/2775#issuecomment-1314638646,1,['test'],['test']
Testability,"If a guess basis cleans up most of the discrepancies, then I think we're ok; for now, until the revamped SAD guess can go in. On Wed, Apr 20, 2016 at 10:04 AM, Lori A. Burns notifications@github.com; wrote:. > Landing on the correct SCF solution is tricky, and guaranteeing it is; > trickier still. I hear that in psi3, users routinely supplied docc/socc; > arrays to guide to the intended solution. Fortunately, psi4 has a variety; > of guesses to obtain the right solution, and someday, as @dgasmith; > https://github.com/dgasmith mentioned, a next-generation SAD guess will; > assure correctness for the ground states of elements, at least. But without; > a root-finding driver over the SCF code that attempts and discards guesses/; > does basis projections/ evaluates the nature of the system (which can be; > computational expensive), we cannot fix some system and method combinations; > without injuring others. It should be noted that no QC methodology to date; > is completely black box and no program always obtains the correct minima; > with default options. We are glad to have the lithium report at hand and; > will be pleased to use them to test the future SAD guess, but this is not a; > n issue that will be fixed by 1.0.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4/pull/335#issuecomment-212439352",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/335#issuecomment-212443074:1154,test,test,1154,https://psicode.org,https://github.com/psi4/psi4/pull/335#issuecomment-212443074,1,['test'],['test']
Testability,"If anybody needs this immediately, the patch to get threaded gradients working is. ```; --- a/psi4/src/psi4/libmints/mintshelper.cc; +++ b/psi4/src/psi4/libmints/mintshelper.cc; @@ -2469,11 +2469,12 @@ SharedMatrix MintsHelper::three_idx_grad(const std::string& aux_name, const std:; auto idx3p = idx3_matrix->pointer();; #pragma omp parallel for; for (int aux = 0; aux < np; aux++) {; + auto elt = &data[ntri * aux];; for (int p = 0; p < nprim; p++) {; for (int q = 0; q <= p; q++) {; - idx3p[aux][p * nprim + q] = *data;; - idx3p[aux][q * nprim + p] = *data;; - data++;; + idx3p[aux][p * nprim + q] = *elt;; + idx3p[aux][q * nprim + p] = *elt;; + elt++;; }; }; }; ```. I want to make sure that the quick tests pass with threading before submitting the PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2192#issuecomment-863224877:706,test,tests,706,https://psicode.org,https://github.com/psi4/psi4/issues/2192#issuecomment-863224877,1,['test'],['tests']
Testability,"If going to C1 makes a difference, then a couple of likely reasons are that; 1) we are symmetrizing the step if C2 is included; or 2) it's surprisingly; easy to get the wrong orbital occupations for hydrogen peroxide. It will; be less convoluted in the new python version (which still needs; debugged...). On Wed, Nov 22, 2017 at 11:18 AM, avcopan <notifications@github.com> wrote:. > I can confirm that your input, @psi-rking <https://github.com/psi-rking>,; > seems to work fine. I don't see any indeterminism either. When I turn; > symmetry off entirely, though, the IRC does quit early and I'm not sure; > why. I poked around the code a bit -- debugging this is a real headache,; > since I wrote it 6 years ago and the logic is pretty convoluted.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/860#issuecomment-346417491>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTB2jUneo6c5HZCbvvkm44FnlmnO9ks5s5FdLgaJpZM4QeK0n>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/860#issuecomment-346421257:723,log,logic,723,https://psicode.org,https://github.com/psi4/psi4/issues/860#issuecomment-346421257,1,['log'],['logic']
Testability,"If it was purely representation, then test case shouldn't have failed. Or check on test was too tight.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/980#issuecomment-385264045:38,test,test,38,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-385264045,2,['test'],['test']
Testability,"If it's been tested to work correctly on ; ```; option_with_flags(ENABLE_ASAN ""Enables address sanitizer (requires similarly compiled Python and Numpy)"" OFF; ""-fsanitize=address -fno-omit-frame-pointer"" ""-nonsense""); ```; and; ```; ""-nonsense"" ""-fsanitize=address -fno-omit-frame-pointer""); ```; then I really like @robertodr 's patch. Do you think the `unset(CMAKE_REQUIRED_FLAGS)` needs to be `CACHE`? I don't understand these things; just know that they can go very wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845#issuecomment-343300716:13,test,tested,13,https://psicode.org,https://github.com/psi4/psi4/pull/845#issuecomment-343300716,1,['test'],['tested']
Testability,"If it's just the installing-untested-prog aspect, I _think_ that which exe to run can be reset through the testing macros. So possibly, could register tests in both modes, staged and installed exe's. The risk of everything breaking in the install file rearrangement was deemed larger (and worth testing in its own right) than the trouble of installing, finding some tests broken, deleting the install dir.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235914479:107,test,testing,107,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235914479,4,['test'],"['testing', 'tests']"
Testability,"If the test is `input.py`/psiapi, it needs to be in `tests/python/fcidump/` to pick up. has to be psithon/`input.dat` to be `tests/fcidump/`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-355837812:7,test,test,7,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-355837812,3,['test'],"['test', 'tests']"
Testability,"If the tests can be fixed and we can go back to testing all test cases; soon, that's fine. If there are persistent problems then the troublesome; tests could be removed from the list temporarily while they get patched up. On Tue, Nov 22, 2016 at 3:37 PM, Lori A. Burns notifications@github.com; wrote:. > At the moment, just quicktests (~118) because cc14 and mints9 are still; > failing. The latter is my fault, the former is a mystery. Failures make the; > conda build fail, so the test suite needs to be clean before go back to; > running all.; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/524#issuecomment-262358481, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AC9Qdm1_eSI8ptMLf1jUlyVER46R1xZpks5rA1J3gaJpZM4K4Unt; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/524#issuecomment-262370710:7,test,tests,7,https://psicode.org,https://github.com/psi4/psi4/pull/524#issuecomment-262370710,5,['test'],"['test', 'testing', 'tests']"
Testability,"If two atoms get within 0.5 Bohr of each other, psi4 crashes. I tracked this down to the overlap matrix having NAN in rows/columns involving AOs centered on the overlapping atom. This seems to be a problem in the part of the code that computes atom mappings, because when I change the tol in petitelist.h:62 to:; `int **compute_atom_map(const Molecule* mol, double tol = 0.1);`; (and the line above), the problem goes away. It seems the AO shells are not created for the overlapping atom, even though parts of the code expect them. Setting c1 symmetry does not help. Here's a small input deck that recreates the problem:. ```; #! H Ghost test. molecule h { ; -1 1; H 0.00000000 0.00000000 0.0; Gh(He) 0.0000000000 0.0000000000 0.2; }. set {; SCF_TYPE DIRECT; DF_SCF_GUESS FALSE; print 4; }. basis {; assign sto-3g; }; energy('scf'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/195:638,test,test,638,https://psicode.org,https://github.com/psi4/psi4/issues/195,1,['test'],['test']
Testability,"If we plan to test many methods in this way, shouldn't this be a pytest?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2836#issuecomment-1356234732:14,test,test,14,https://psicode.org,https://github.com/psi4/psi4/pull/2836#issuecomment-1356234732,1,['test'],['test']
Testability,"If you haven't already, take a look at https://github.com/psi4/psi4/blob/master/tests/isapt2/input.dat#L6 to see if setting total chgmult might be needed for your fragments.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2870#issuecomment-1412882795:80,test,tests,80,https://psicode.org,https://github.com/psi4/psi4/issues/2870#issuecomment-1412882795,1,['test'],['tests']
Testability,"If you haven't rebased recently, I wouldn't worry about the Windows error immediately, but Peter's right about tests. The test_psi4_qcschema.py is awkward to work with, so `tests/json/` is a good place to add tests. There's a lot of `run_json` in there to preserve backwards compatibility, but use `run_qcschema` instead.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2126#issuecomment-790260786:111,test,tests,111,https://psicode.org,https://github.com/psi4/psi4/pull/2126#issuecomment-790260786,3,['test'],['tests']
Testability,"If you need some help working out what's going wrong, please send over the test output you're getting. I've just looked through your changes and I'm not seeing anything that looks out of place. . I remember there being one bug that I fixed in libecpint that will have been in the Psi4 code, but it will have only been noticeable with a specific class of ECPs (those that have an n=1 term (or n=-1 depending on your convention). The line is https://github.com/psi4/psi4/blob/d16d02e69238f1b0d90a2f1283f38e818873e748/psi4/src/psi4/libmints/ecpint.cc#L473 and should be changed to . ```tooSmall = tooSmall || ( intValues(l, i) < tolerance );```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135#issuecomment-802994469:75,test,test,75,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-802994469,1,['test'],['test']
Testability,"If you supply two fragments to Psi4, it will assume the multiplicity of the combined system is the multiplicity of the first fragment, not the multiplicity of the high spin combination. For instance, Psi will attempt to treat the following molecule as a singlet rather than a triplet. Switching the order of the fragments will make Psi look for the triplet. Switching both to be triplets, where the high spin combination is a quintet, will have Psi look for triplets. I haven't tested how it handles more than two fragments. ```; molecule {; 0 1 ; H -0.7589216703 0.0000000000 3.1082565820; H 0.7589216703 0.0000000000 3.1082565820; O 0.0000000000 0.0000000000 2.5216012101; -- ; 0 3 ; S 0.0000000000 0.0000000000 -0.4748174225; O 0.0000000000 0.0000000000 -1.9641940526; symmetry c1; no_reorient; no_com; }. set {; reference uhf ; scf_type direct; basis cc-pVDZ; }. energy('scf'); ```; Attempted on `Git: Rev {master} 9994682`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1106:478,test,tested,478,https://psicode.org,https://github.com/psi4/psi4/issues/1106,1,['test'],['tested']
Testability,"If you want to try the new compilers version, create a new environment `conda create -n psi4 python=3.6 -c psi4/label/agg` (only things from psi4 channel in `conda list` should be psi4, libint, libxc). Should be safe to install jupyter in the same env. Strongly suggest jupyter (and numpy) from defaults (where they're well into the process of rebuilding everything with the new compilers), not conda-forge (where they're considering how to use them). I've been getting psi4 to build this way for less than a day, so it's very much a trial package. If that doesn't work (and I won't be able to test it myself until Monday), no, there's nothing actionable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/862#issuecomment-345422371:594,test,test,594,https://psicode.org,https://github.com/psi4/psi4/issues/862#issuecomment-345422371,1,['test'],['test']
Testability,"If you'd like to be adventurous, the current development head at https://github.com/jturney/psi4/commits/CMakeRewrite-KillTheBoost should meet your requirements of clean build, new dmrg syntax, and current CheMPS2 (1.8+). It's in a state where all CheMPS2 build issues are in final form, and the non-CheMPS2 code is steady again (only one of 300+ tests broken and that one, finite diff freq of mcscf, won't interfere with you). . You'll need a fairly modern compiler (https://github.com/jturney/psi4/blob/CMakeRewrite-KillTheBoost/cmake/CheckCompilerVersion.cmake) and gcc>=4.9 (unless using Clang). But otherwise, should be clean with something like:. ```; cmake -H. -Bobjdir \; -DCMAKE_C_COMPILER=icc \; -DCMAKE_CXX_COMPILER=icpc \; -DMAX_AM_ERI=5 \; -DENABLE_CheMPS2=ON \; -DPYTHON_EXECUTABLE=/theoryfs2/ds/cdsgroup/miniconda/envs/py2basics/bin/python2.7 \; -DPYTHON_LIBRARY=/theoryfs2/ds/cdsgroup/miniconda/envs/py2basics/lib/libpython2.7.so \; -DPYTHON_INCLUDE_DIR=/theoryfs2/ds/cdsgroup/miniconda/envs/py2basics/include/python2.7 ; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/464#issuecomment-246363626:347,test,tests,347,https://psicode.org,https://github.com/psi4/psi4/issues/464#issuecomment-246363626,1,['test'],['tests']
Testability,"If you're willing to take on properly assigning root psivars in cc*, that'd be splendid, @amjames. It's very true that CC psivars are pretty much ground state only and that not much has been done in the way of CC property psivars since the testing has been through `output.ref` comparison rather than `compare_values()`. One thing that will have to be resolved is indexing, as CI starts from 1. I can't even remember what position I took at the Last Great Debate on this, but I think I favor 0-indexed now, as it make the GS distinctive from ESs. Will query detci ppl tomorrow. But, yes, if you see your way clear toward fixing this up, go for it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-259603617:240,test,testing,240,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-259603617,1,['test'],['testing']
Testability,"Im still not completely sure that there is a way to bridge the two. Ultimately the modification in-place leads to quite a few errors; however, the Psithon API make the in-place a logical operation. It would be better to do something like:; ```; new_mol = molecule.update({""var1"": 5, ""var2"": 6}); ```; or something similar. Getting that across in something like Psithon would be difficult I think.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/782#issuecomment-332298418:179,log,logical,179,https://psicode.org,https://github.com/psi4/psi4/issues/782#issuecomment-332298418,1,['log'],['logical']
Testability,"In Python 3.6, the extern object (keyword set to a Python object) is being double freed at end of execution, leading to a crash. Builds fine, runs fine, unless extern set, so only shows up for test cases extern1 and extern2. These have been conditionally and temporarily removed from test suite until this fixed. Can force a fix by clearing options before end of file, `psi4.core.clean_options()`. This is a reference counting issue and will _not_ be fixed for 1.1.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/666:193,test,test,193,https://psicode.org,https://github.com/psi4/psi4/issues/666,2,['test'],['test']
Testability,"In `psi4/src/read_options.cc:847` can you add the following lines:. ```; /*- For SAPT(DFT) computes the S^inf Exchange-Induction terms !expert -*/; options.add_bool(""DO_IND_EXCH_SINF"",false);; ```. and in `psi4/driver/procrouting/sapt/sapt_proc.py:165` change the induction call there to:. ```; ind = sapt_jk_terms.induction(; hf_cache,; sapt_jk,; True,; maxiter=core.get_option(""SAPT"", ""MAXITER""),; conv=core.get_option(""SAPT"", ""D_CONVERGENCE""),; Sinf=core.get_option(""SAPT"", ""DO_IND_EXCH_SINF"")); ```. Recompile the code. You should now be able to run the test by setting `DO_IND_EXCH_SINF True` in the options block.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/921#issuecomment-369403851:558,test,test,558,https://psicode.org,https://github.com/psi4/psi4/pull/921#issuecomment-369403851,1,['test'],['test']
Testability,"In cases where reference values are not matched perfectly (but the test should pass) is it better to loosen the comparison or update the reference value. I assume updating the reference value is the way to go but I want to have some record of asking before I start slightly changing reference values. Secondarily, should the reference values be updated in general at some point so that users don't stumble across an instance where the value is slightly off and wonder why?. Explanation:; I've expanded the number of tests I'm running since I started cleaning up core.cc. In the opt specific tests the convergence is usually tight enough that the nuclear repulsion energies match the reference values just fine for both optimizers. There are some tests like cc1-3 that are failing due to being just above threshold. `atol = 0.001` the difference is `~ 0.0017`. These tests are using the default `qchem` convergence criteria ~ `3e-4` max_force. Both optimizers finish well below the criteria and geometries match to 1e-4 Angstroms and 0.001 degrees. Geometries are the same. There are around 5 or 6 tests failing like this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1262512828:67,test,test,67,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1262512828,6,['test'],"['test', 'tests']"
Testability,"In my case cc55 is the one that fails. On Jul 15, 2015, at 11:26 AM, psi4 <notifications@github.com<mailto:notifications@github.com>> wrote:. https://testboard.org/cdash/viewTest.php?onlyfailed&buildid=21549 shows cc54 for me. —; Reply to this email directly or view it on GitHubhttps://github.com/psi4/psi4public/issues/130#issuecomment-121651794. ---. This e-mail message (including any attachments) is for the sole use of; the intended recipient(s) and may contain confidential and privileged; information. If the reader of this message is not the intended; recipient, you are hereby notified that any dissemination, distribution; or copying of this message (including any attachments) is strictly; prohibited. If you have received this message in error, please contact; the sender by reply e-mail message and destroy all copies of the; original message (including attachments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/130#issuecomment-121658832:150,test,testboard,150,https://psicode.org,https://github.com/psi4/psi4/issues/130#issuecomment-121658832,1,['test'],['testboard']
Testability,"In my case, there is a dependency on Python 2.7 library in /usr/lib64. It might be the problem since when using Python 3.5 out of my miniconda, I had no problems with GCC. The only other thing that changes is my `PATH` variable where `/usr/bin` has a higher priority so that Python 2.7 is default instead of 3.5, but that should not change the library paths. My problem with `source activate` was indeed because of the `tcsh` shell. Finally, Psi4 with Python 2.7 compiled and tested successfully, only `psimrcc-fd-freq2` fails. With Python 3.5, there are more test failures, namely:; The following tests FAILED:; 9 - cbs-delta-energy (Failed); 10 - cbs-xtpl-energy (Failed); 12 - cbs-xtpl-gradient (Failed); 13 - cbs-xtpl-opt (Failed); 14 - cbs-xtpl-func (Failed); 15 - cbs-xtpl-wrapper (Failed); 118 - dfmp2-1 (Failed); 168 - freq-isotope (Failed); 170 - fnocc2 (Failed); 175 - gibbs (Failed); 192 - mp2-def2 (Failed); 202 - nbody-he-cluster (Failed); 203 - numpy-array-interface (Failed); 255 - psimrcc-fd-freq2 (Failed); 259 - psithon2 (Failed); 260 - pubchem1 (Failed); 261 - pubchem2 (Failed); 262 - pywrap-alias (Failed); 263 - pywrap-all (Failed); 265 - pywrap-cbs1 (Failed); 270 - pywrap-db1 (Failed); 271 - pywrap-db2 (Failed); 273 - pywrap-freq-e-sowreap (Failed); 274 - pywrap-freq-g-sowreap (Failed); 275 - pywrap-molecule (Failed); 276 - pywrap-opt-sowreap (Failed); 287 - sapt6 (Failed); 307 - tu6-cp-ne2 (Failed); 312 - options1 (Failed); 317 - psi4numpy-rhf (Failed); 318 - psi4numpy-dfmp2 (Failed); 319 - dftd3-energy (Failed); 320 - dftd3-grad (Failed); 321 - dftd3-psithon2 (Failed); 322 - dftd3-version (Failed). I looked at one of them and the problem was the formatting of some printing command. I didn't investigate further.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-252852440:476,test,tested,476,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-252852440,3,['test'],"['test', 'tested', 'tests']"
Testability,"In my experience (at least on remote hosts running relatively modern versions of Ubuntu derivatives, 18.04 and up), starting a process in the background and then doing a `logout` keeps the process running indefinitely. Simply closing the Putty window, etc. does not, the same happens if the network connection is interrupted, eventually the process will be killed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1983#issuecomment-677612812:171,log,logout,171,https://psicode.org,https://github.com/psi4/psi4/issues/1983#issuecomment-677612812,1,['log'],['logout']
Testability,"In our docs it says `SVWN | SVWN3 (RPA)` for psi4 and I took `VWN3` in QChem. But libxc nomenclature is `VWN_RPA` (no added 3) for what psi4 uses and in Qchem that is `VNW1RPA` because why not :). ```; qchem svnw(RPA): -0.0285 0.0405 0.0405 ; ```; That agrees well with psi4, yay! I locally tested also PW92 with qchem and psi4 and they agree as well.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2766#issuecomment-1305889380:291,test,tested,291,https://psicode.org,https://github.com/psi4/psi4/pull/2766#issuecomment-1305889380,1,['test'],['tested']
Testability,In samples one has TEST lines filtered away and test has lines remaining.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1537#issuecomment-465580642:19,TEST,TEST,19,https://psicode.org,https://github.com/psi4/psi4/pull/1537#issuecomment-465580642,2,"['TEST', 'test']","['TEST', 'test']"
Testability,"In the ""enable (or psi4 requires it)"" case, I think there _is_ a dummy library from https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/external/gdma/CMakeLists.txt#L21. Regarding the ""is for dependency resolution"", good to know, I'll try not to break that. :-). Regarding Note 2, I think that's the other dummy library, https://github.com/ryanmrichard/psi4/blob/CMakeRewrite/cmake/Psi4Macros.cmake#L184. I've got it so a successful `find_package(gdma CONFIG)` introduces a `gdma::gdma` target replete with libs, includes, and `-DUSE_GDMA` in it's INTERFACE w/o any subsequent `add_library()`. Big restriction I've found so far is that such target is scope of found dir and below (no subsequent `add_library(target_again UNKNOWN IMPORTED GLOBAL)`). I'm just seeing how this fits into the superbuild and if cuts down some logic.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-238061055:824,log,logic,824,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-238061055,1,['log'],['logic']
Testability,"In the slightly modified codebase I work off of -- I flipped the `[]` to a `.at()` and tests now fail due to `std::out_of_range`, as expected, given that the map is starting and staying empty until accessed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2735#issuecomment-1267612768:87,test,tests,87,https://psicode.org,https://github.com/psi4/psi4/issues/2735#issuecomment-1267612768,1,['test'],['tests']
Testability,"Indeed, considering the nature of the test, [my comment](https://github.com/psi4/psi4/issues/980#issuecomment-385264045) was wrongheaded.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/980#issuecomment-385264868:38,test,test,38,https://psicode.org,https://github.com/psi4/psi4/issues/980#issuecomment-385264868,1,['test'],['test']
Testability,Indeed. Happily with the new `.devN` versioning scheme we're not guaranteeing that `master` is always passing full tests. (conda pkgs _are_ so guaranteed.) Glad all healed now.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/718#issuecomment-303896265:115,test,tests,115,https://psicode.org,https://github.com/psi4/psi4/pull/718#issuecomment-303896265,1,['test'],['tests']
Testability,"Inherit CCLambdaWavefunction from CCEnergyWavefunction and further; build a class around CCLambdaWavefunction. ## Description; This PR just contains the inheritance of the CCLambdaWavefunction from the CCEnergyWavefunction, but no other functional changes or features.; The main motivation for this was so that this can be merged before the clang-format of the cclambda module in #1206 that seems to be happening before #1061. It would be nice to have these changes in before the formatting. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1257:512,Test,Tests,512,https://psicode.org,https://github.com/psi4/psi4/pull/1257,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"Initial testing looks good– db2 and freq-e-sowreap pass for me, too. I just checked in minor tweaks (de024f86f0f978029cb2acaae5469636a3ecf6ab) for printing and so that `reap.py` can catch OPT file names, too. The problem with opt-sowreap that you quoted above is now fixed. Unfortunately, optimizations need multiple sow/reap passes (https://github.com/psi4/psi4/blob/4.0b5/tests/pywrap-opt-sowreap/Makefile.in). If you hardwire `first_out = 'OPT-master.in'` in `reap.py` (otherwise it's looking for instructions in the wrong file), the job makes it through the first optimization cycle, so that's an improvement, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/192#issuecomment-157884587:8,test,testing,8,https://psicode.org,https://github.com/psi4/psi4/pull/192#issuecomment-157884587,2,['test'],"['testing', 'tests']"
Testability,"InlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== Address 0x18 is not stack'd, malloc'd or (recently) free'd; ==98805== ; ==98805== ; ==98805== Process terminating with default action of signal 11 (SIGSEGV); ==98805== Access not within mapped region at address 0x18; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805== by 0x4FE0CE: _PyFunction_Vectorcall (call.c:342); ==98805== If you believe this happened as a result of a stack; ==98805== overflow in y",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3200:2676,test,test,2676,https://psicode.org,https://github.com/psi4/psi4/issues/3200,1,['test'],['test']
Testability,"Installing `ambertools >=20` alongside `psi4` on MacOS with:. ```; conda create --name psi4-at-test -c conda-forge -c psi4/label/dev ""ambertools >=20"" psi4; ```. results in unresolvable dependencies. Using `mamba` instead of `conda` for dependency resolution gives potentially useful output:; ```; Encountered problems while solving.; Problem: nothing provides gcc-5-mp needed by psi4-1.2a1.dev458+efadaad-py35_gnu_0; ```; This problem was first reported by @SimonBoothroyd, hampering MacOS tests for [openff-recharge](https://github.com/openforcefield/openff-recharge).",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2024:95,test,test,95,https://psicode.org,https://github.com/psi4/psi4/issues/2024,2,['test'],"['test', 'tests']"
Testability,"Installing `networkx` fixes `pywrap-align` and `pywrap-align-chiral`. However, the other tests still fails for me.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-403465760:89,test,tests,89,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-403465760,1,['test'],['tests']
Testability,"Instead of comparing the raw eigenvectors, I'd compare that the vectors span the same space, which can be checked simply by ```<i|i> = 1``` and ```sum_j <i|j><j|i>=1```, where you can restrict the sum over ```j``` to the degenerate eigenmodes in question. If one already is checking the eigenvalues, then checking the full span of the lowest eigenmodes should be enough. The fitting of the vectors is not in the test code. It could also be done just by constructing the projection ```P=<old|new>```, checking that the eigenvalues of ```P P^T``` and ```P^T P``` are 1, and rotating the basis with ```P```.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-452087935:412,test,test,412,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-452087935,1,['test'],['test']
Testability,"Instead of testing for +-2 a one could add `""DFT_WEIGHTS_TOLERANCE"": -1.0` to the pytest (with new reference values) to remove numerical issues. In case the issue appears again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2446#issuecomment-1045032535:11,test,testing,11,https://psicode.org,https://github.com/psi4/psi4/pull/2446#issuecomment-1045032535,1,['test'],['testing']
Testability,"Intel, there's a keyword `psi4_CXX_STANDARD_Libint2` that can be reset to 14.; - [ ] pull together accumulated xhost changes (hiccup here is that `icpx` can take `-xHost` but `icx` can't, and our `option_with_flags` routine tries both so it throws an unnecessary warning. not a must for this PR).; - [x] the linux L2 is my local c-b, but mac and windows are from c-f staged-recipes. apparently any Hessian ERIs cause the Windows build to hang longer than the 6h Azure allows, so the W package is hessin-ints-less for TEI (I kept the onebody 2der). This isn't too debilitating since only HF and SVWN have analytic hessians anyways, so when an incapable L2 is detected (imagine that -- we can ask L2 what it can do!), it falls back to FD. That would be easy enough except the tests check too tightly for 3-pt FD to match analytical refs. So I've added a `d2ints` label to ctest and pytest to allow not running. This should probably convert to a skipif someday. Most of the tests I've checked individually and they would pass if findif points=5.; - [x] You notice a ""new"" boost-cpp dependency. Compiling against the header-only L2 C++11 interface (as psi4 does) requires a select few boost headers. In building the L2 package, one can either ask L2 to copy those few files in to `include/libint2/boost/` (that is, vendor boost) or not, effectively passing the problem along to the consumer (psi). In my own conda packages for L2, I did the former, so psi didn't need any boost. For the c-f L2 packages, I figured it was better practice to not vendor, hence the ""new"" dep. It's header-only, not boost::python or any of the boost compiled libs, so not too much trouble, I think. ## Questions; Can look at the libmints files to form an opinion on these.; - [x] `libint2::initialize()` was called three times, but `libint2::finalize()` only once. I added two more, but should I have?; - [x] Also, since we need to set the ordering, should the init be centralized in core.cc, or is it fine as is?; - [ ] tech",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2861:2638,test,tests,2638,https://psicode.org,https://github.com/psi4/psi4/pull/2861,1,['test'],['tests']
Testability,Interesting find hokru and something that can be easily tested!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2491#issuecomment-1075521918:56,test,tested,56,https://psicode.org,https://github.com/psi4/psi4/issues/2491#issuecomment-1075521918,1,['test'],['tested']
Testability,"Interesting stuff. As for the Apple M1, I guess it depends whether we'll be pushing out a released and tested binaries for Apple M1 before clang gets around fixing the defaults, right?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2384#issuecomment-1003964836:103,test,tested,103,https://psicode.org,https://github.com/psi4/psi4/pull/2384#issuecomment-1003964836,1,['test'],['tested']
Testability,Interesting. Guess more testing is needed for the `copy_if_different`.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-239053971:24,test,testing,24,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-239053971,1,['test'],['testing']
Testability,"Investigate DIIS/SAD memory requirements at low memory ranges. cc44 (that sets memory artificially low for other reasons) segfaults in parallel apparently during SAD. The DIIS rewrite is a possible trigger, as test was ok under these conditions at ` 2c5b6e3 - (master) Merge pull request #2191 from loriab/libxc514 (11 months ago) <Andy Simmonett>`. This error is unlikely to be hit under normal running conditions.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2576:210,test,test,210,https://psicode.org,https://github.com/psi4/psi4/issues/2576,1,['test'],['test']
Testability,"Is `run.log` posted to the travis output log? If so, I would add a banner between the running of the test cases and printing their outputs for clarity. PS: I added several people to my psi4/psi4 fork so that they can make their own changes as desired. It looks like the organization permission transference is different for public and private repositories?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/247#issuecomment-183702374:8,log,log,8,https://psicode.org,https://github.com/psi4/psi4/pull/247#issuecomment-183702374,3,"['log', 'test']","['log', 'test']"
Testability,Is a test needed or wanted? I didn't find an existing `db` test setup.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2034#issuecomment-802792572:5,test,test,5,https://psicode.org,https://github.com/psi4/psi4/pull/2034#issuecomment-802792572,2,['test'],['test']
Testability,"Is it possible to use `options=None` in the class definition? Then the options are mostly not required at all in the current commits above. Yes, I implemented the Client so that you always can calculate the current energy/force of the initialised molecule, which enables testing of the passed on configuration. When ipi is available, it will also be used for communicating back to the driver.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-654485806:271,test,testing,271,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-654485806,1,['test'],['testing']
Testability,"Is the proposal to replace uhf/rhf/rohf -> hf for energy(), grad(), etc?; That sounds ok to me (then reference just has to be defined properly). What about DFT, do we define functional properly and do energy('dft'), etc.?. David. On Sun, Jun 7, 2015 at 11:04 PM, Lori A. Burns notifications@github.com; wrote:. > Fixed by 6f6d3aa; > https://github.com/psi4/psi4public/commit/6f6d3aa1d039e4501bc5c5dc4190da1758e1c889; > though I rather think now that defining hf/rhf/uhf/rohf/rsch/roscf/uscf for; > energy() was a bad idea (by me) a few years ago (except for ""hf"" itself).; > Nevertheless, as this ticket points out, having defined these names only; > for energy() confounds the driver logic. These convenience names are now in; > place for gradient() and property().; > ; > I'd be glad to rip out the lot (except for ""hf"") from energy(), grad(),; > prop() if others concur with my present assessment.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/103#issuecomment-109846967.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/103#issuecomment-110021718:685,log,logic,685,https://psicode.org,https://github.com/psi4/psi4/issues/103#issuecomment-110021718,1,['log'],['logic']
Testability,Is there a specific test that fails? It seems ok on my test machine; (Intel Xeon E5-2698 v3 Haswell) with GCC 4.8.5,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-198626795:20,test,test,20,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-198626795,2,['test'],['test']
Testability,"Is there any test coverage of the new `messy` behavior? If not, could we add it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2191#issuecomment-859899767:13,test,test,13,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-859899767,1,['test'],['test']
Testability,"Is there anything in particular you wanted feedback on, or did you just want to see if this passed tests?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731#issuecomment-1262298899:99,test,tests,99,https://psicode.org,https://github.com/psi4/psi4/pull/2731#issuecomment-1262298899,1,['test'],['tests']
Testability,"Is this both conventional and DF, like the RHF Hessians? I'm adding a note to the paper to consult with you so assertion can be deleted if wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/842#issuecomment-590177244:111,assert,assertion,111,https://psicode.org,https://github.com/psi4/psi4/pull/842#issuecomment-590177244,1,['assert'],['assertion']
Testability,"Is this something I broke?. ```; $ python ../.scripts/travis_print_failing.py; <<< Failing outputs follow. >>>; python-mints9 failed. Here is the output:; Traceback (most recent call last):; File ""../.scripts/travis_print_failing.py"", line 32, in <module>; with open(badoutfile, 'r') as ofile:; FileNotFoundError: [Errno 2] No such file or directory: 'tests/python-mints9/output.dat'; The command ""python ../.scripts/travis_print_failing.py"" exited with 1.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/721#issuecomment-304083044:352,test,tests,352,https://psicode.org,https://github.com/psi4/psi4/pull/721#issuecomment-304083044,1,['test'],['tests']
Testability,"Issue carried over from [forums](http://forum.psicode.org/t/cant-run-relativistic-calcs-with-decontracted-basis-sets/1177). If the input basis set is decontracted, Psi will fail to recognize the basis set when trying to use a decontracted version of the input basis for relativistic computations. The following input file will fail due to the commented out line. ```; molecule {; 0 1; CL 0.000000000000 0.000000000000 -0.035925275852; H 0.000000000000 0.000000000000 1.246511684916; symmetry c1; }. basis {. set {; basis cc-pvdz-decon; #basis_relativistic cc-pvdz-decon; df_basis_scf cc-pvdz-jkfit; reference rhf ; e_convergence 1.e-10; relativistic x2c ; }. energy('scf'); ```. The bug itself is probably an easy fix once you know what information is not being handled/passed correctly in the basis set machinery. The hard part is knowing that machinery well enough to figure out where. Reporter also noted that this is a blind spot in the test suite, so additional tests here are welcome.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1471:941,test,test,941,https://psicode.org,https://github.com/psi4/psi4/issues/1471,2,['test'],"['test', 'tests']"
Testability,It affect only `cc52` test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1476#issuecomment-454165383:22,test,test,22,https://psicode.org,https://github.com/psi4/psi4/pull/1476#issuecomment-454165383,1,['test'],['test']
Testability,"It can't find the reference files. I'll pull this test out since it does not provide additional coverage anyway. Just for my own edification, how would you get it to work? Hardcoding the reference file paths doesn't seem a good solution...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-356219963:50,test,test,50,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-356219963,1,['test'],['test']
Testability,It could be helpful to know what `ldd -v <prefix>/lib/python3.<x>/site-packages/psi4/core*so` (approximate path) produces. And if the segfault was immediate or on a particular test (I learned recently that `gcp` exe unnecessarily used too high a glibc).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1792#issuecomment-607282725:176,test,test,176,https://psicode.org,https://github.com/psi4/psi4/issues/1792#issuecomment-607282725,1,['test'],['test']
Testability,"It does not necessarily always cause an abort of the python process.; My test fails during libmints writing out integrals at the end of an SCF and gives a normal error message. (`cc11` test with cc-pVQZ basis set in a 50MiB RAMDISK). ```; [...]. !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO_ERROR: 12 (error writing to file) !; ! Error occurred in file: /Users/kruse/qc/psi4/psi4/src/psi4/libpsio/error.cc on !; ! line: 131 !; ! The most recent 5 function calls were: !; ! !; !----------------------------------------------------------------------------------!. Psi4 stopped on: Sunday, 06 November 2022 04:44PM; [...]; ```. I would suggest to merge and see how it behaves for our users.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2756#issuecomment-1304902426:73,test,test,73,https://psicode.org,https://github.com/psi4/psi4/pull/2756#issuecomment-1304902426,2,['test'],['test']
Testability,It does seem that the only test cases failing are two of the test suite.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/129#issuecomment-121719138:27,test,test,27,https://psicode.org,https://github.com/psi4/psi4/issues/129#issuecomment-121719138,2,['test'],['test']
Testability,"It does seem to be set to non-default in various tests https://github.com/psi4/psi4/search?p=1&q=diis_min_vecs . But if it's not providing an actual useful knob, I'm good with deprecate and remove.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2401#issuecomment-1010176887:49,test,tests,49,https://psicode.org,https://github.com/psi4/psi4/issues/2401#issuecomment-1010176887,1,['test'],['tests']
Testability,"It doesn't really bother me that it takes 2-6 hours for Travis CI to build the 15 types, nor do I think it's hindering anything. I would actually like to see additional types added (specifically Mac, but I think there were other issues with that). It should be noted that we can merge pull requests in before Travis CI has completed testing. Travis CI is there as a safety net.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182562754:333,test,testing,333,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182562754,1,['test'],['testing']
Testability,"It hits the troublesome geometry a couple optimization iterations in, so not guaranteed. But given that this error hasn't popped up for 10 years, micro-wiggle is a good bet. btw, `conda install psi4 -c psi4/label/agg` will get you a working `-ng`-compiler package at the moment. Though that's my sandbox channel and so the latest package mayn't always be working.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/948#issuecomment-380151298:296,sandbox,sandbox,296,https://psicode.org,https://github.com/psi4/psi4/issues/948#issuecomment-380151298,1,['sandbox'],['sandbox']
Testability,It is entirely possible that it works better with `clang`. I'll try to run the same test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/794#issuecomment-335272408:84,test,test,84,https://psicode.org,https://github.com/psi4/psi4/pull/794#issuecomment-335272408,1,['test'],['test']
Testability,"It is unclear to me why the new ipi2 test fails as I get a slightly different result for the final gradient:; Gradient on travis:; ```; -Total Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.000471409888 -0.006768777549 -0.000000000000; 2 0.000447921170 -0.006988127109 0.000000000000; 3 -0.000919134197 0.013753786479 0.000000000000; ```; Local gradient:; ```; -Total Gradient:; Atom X Y Z; ------ ----------------- ----------------- -----------------; 1 0.000471373615 -0.006768232833 -0.000000000005; 2 0.000447935618 -0.006988074312 0.000000000003; 3 -0.000919106219 0.013753539258 0.000000000001; ```. If this variation is expected, I could loose the `compare_array` criterion from 7 digits to e.g. 6?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1057#issuecomment-501177242:37,test,test,37,https://psicode.org,https://github.com/psi4/psi4/pull/1057#issuecomment-501177242,1,['test'],['test']
Testability,"It looked like there was maybe an [issue with ADCC](https://dev.azure.com/psi4/psi4/_build/results?buildId=2571&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=41b51342-9bfb-52c2-7efb-0050141a3f7e&l=14) being pulled from the wrong place and perhaps [numpy missing from the env](https://dev.azure.com/psi4/psi4/_build/results?buildId=2571&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a&t=5e4b1b6b-6132-52d3-8c01-735063f4c831&l=18). These may be a side-effect of the pb11 problem, but just wanted to point them out in case you hadn't already seen.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2074#issuecomment-754136729:117,log,logs,117,https://psicode.org,https://github.com/psi4/psi4/pull/2074#issuecomment-754136729,2,['log'],['logs']
Testability,It looks like gcc5.5 has a grievance with the deprecated syntax https://dev.azure.com/psi4/psi4/_build/results?buildId=2687&view=logs&j=258bfeeb-871e-502d-292b-61cd4e6d17f6&t=7c2e2bd2-871d-5948-1d43-9089e6bce09a&l=253 . Looks like it came about in gcc6 https://stackoverflow.com/a/33096368 . I can confirm gcc 7.3 is ok with it. What do we want to do? Give up the deprecated enum value or bump the gcc requirement?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2092#issuecomment-767181973:129,log,logs,129,https://psicode.org,https://github.com/psi4/psi4/pull/2092#issuecomment-767181973,1,['log'],['logs']
Testability,It looks like one of the three test configurations failed due to a timeout. The other two passed fine. I think this is ready for review.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/721#issuecomment-304529137:31,test,test,31,https://psicode.org,https://github.com/psi4/psi4/pull/721#issuecomment-304529137,1,['test'],['test']
Testability,"It looks like something went wrong with the commit. I'm seeing a lot of changes to test cases, including ones I know that I made for findif.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1274#issuecomment-426047769:83,test,test,83,https://psicode.org,https://github.com/psi4/psi4/pull/1274#issuecomment-426047769,1,['test'],['test']
Testability,"It looks like the [cc-pV5Z](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/cc-pv5z.gbs#L92-L167) basis exists for Li, but the [aug-cc-pV5Z](https://github.com/psi4/psi4/blob/master/psi4/share/psi4/basis/aug-cc-pv5z.gbs) files doesn't contain an entry for that atom. Were your tests with CC calculations on a molecule that does not contain Li?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1557#issuecomment-467160257:292,test,tests,292,https://psicode.org,https://github.com/psi4/psi4/issues/1557#issuecomment-467160257,1,['test'],['tests']
Testability,"It looks like the tests are failing because for some reason the `6-31G*` basis is being used as a spherical basis and not cartesian. However, I'm not sure where `puream` option is being changed since you placed `cartesian` in the gbs file correctly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/335#issuecomment-205399523:18,test,tests,18,https://psicode.org,https://github.com/psi4/psi4/pull/335#issuecomment-205399523,1,['test'],['tests']
Testability,"It looks like those changes did the trick. The tests passed fairly quickly on travis, but i'm not sure what the timings were like before so i don't know how much impact the header refactoring had. When you think this one's good, could you ping us on Slack, please? The seg fault seems to be hitting a few people so it would be good to get it in quickly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1398#issuecomment-444294885:47,test,tests,47,https://psicode.org,https://github.com/psi4/psi4/pull/1398#issuecomment-444294885,1,['test'],['tests']
Testability,"It may be as simple as extending a test like:. ``` python; props, wfn = psi4.properties('CCSD/cc-pVDZ"", return_wfn=True); prop = psi4.core.OEProp(wfn); ...; prop.compute(). compare_value(…) # TEST; ```. Just to ensure that the OPDM remains valid during changes. Good examples could be scf-properties or ci-properties test cases. Cheers,; Daniel Smith. > On Nov 9, 2016, at 18:45, Andrew James notifications@github.com wrote:; > ; > @jturney https://github.com/jturney do you mean if you use OEprop from python side?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub https://github.com/psi4/psi4/pull/506#issuecomment-259559771, or mute the thread https://github.com/notifications/unsubscribe-auth/ABsBcdANRkkc09DCv2AR8vkQDiiFfWCmks5q8lsAgaJpZM4Krp5j.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/506#issuecomment-259561352:35,test,test,35,https://psicode.org,https://github.com/psi4/psi4/pull/506#issuecomment-259561352,3,"['TEST', 'test']","['TEST', 'test']"
Testability,"It might be that an SCF is converging onto an excited state, i.e. it's using different occupations, and the optimal geometry for that state doesn't have the wanted geometry. If this is the case, it should be possible to make the gibbs test finish by specifying ```docc``` as well, but then this would just hide the more serious bugs with the linked lists etc. @JonathonMisiewicz can you file a bug about the issue since you can reproduce it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-450198971:235,test,test,235,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-450198971,1,['test'],['test']
Testability,It now builds fine with gpu_dfcc and the tests run OK. Thanks for your help.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-401160052:41,test,tests,41,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-401160052,1,['test'],['tests']
Testability,"It seems that were it counts the correct python is used. Main CMake; ```; -- Setting (unspecified) option CMAKE_INSTALL_LIBDIR: lib; -- Setting (unspecified) option PYMOD_INSTALL_LIBDIR: /; -- Setting (unspecified) option ENABLE_GENERIC: OFF; -- Setting (unspecified) option CMAKE_INSTALL_MESSAGE: LAZY; -- Setting (unspecified) option psi4_CXX_STANDARD: 11; -- Found PythonInterp: /usr/bin/python (found version ""2.7.12"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so; -- Found Python 2.7: /usr/bin/python; -- Found libefp: /usr/qc/psi4.bin/lib/libefp.a (found version 1.3.0); -- Found libint: /usr/qc/psi4.bin/lib/libint.a (found version 1.1.6); -- Suitable pybind11 could not be located, Building pybind11 instead.; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED. ```. psi4-core cmake:; ```; - The C compiler identification is GNU 5.4.0; -- The CXX compiler identification is GNU 5.4.0; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc; -- Check for working C compiler: /usr/qc/gcc54/bin/gcc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++; -- Check for working CXX compiler: /usr/qc/gcc54/bin/g++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Checking for restrict keyword; -- keyword found : __restrict__; -- Found PythonInterp: /usr/bin/python (found version ""2.7.12"") ; -- Found PythonLibs: /usr/lib64/libpython2.7.so ; -- Using pybind11: /usr/qc/psi4.git/objdir/stage/usr/qc/psi4.bin/include (version 2.0.0 for Py2.7.12 and -std=c++11) ; -- Using Python 2.7: /usr/bin/python ; -- Looking for include file pthread.h ; -- Looking for include file pthread.h - found ; -- Looking for pthread_create ; -- Looking for pthread_create - found ; -- Found Threads: TRUE ; -- ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/577#issuecomment-273732640:772,Test,Test,772,https://psicode.org,https://github.com/psi4/psi4/issues/577#issuecomment-273732640,1,['Test'],['Test']
Testability,"It seems to work fine with the chemps-1.7 in debian, all three tests pass. One thing I noticed is that the `dmrg-caspt2-n2` test case takes a long time to run - can it be scaled down a bit? I guess @dgasmith created that test case?. ```; Test project /«PKGBUILDDIR»/builddir/tests; Start 319: dmrg-scf-n2; 1/3 Test #319: dmrg-scf-n2 ...................... Passed 9.36 sec; Start 320: dmrg-ci-h2o; 2/3 Test #320: dmrg-ci-h2o ...................... Passed 15.42 sec; Start 321: dmrg-caspt2-n2; 3/3 Test #321: dmrg-caspt2-n2 ................... Passed 594.31 sec. 100% tests passed, 0 tests failed out of 3; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-222313007:63,test,tests,63,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-222313007,10,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"It seems unlikely a numpy interface would change. You might try running one of the tests that runs `fsapt.py` internally like `fsapt-terms`. You'll have to move the fsapt.py file to the launch directory or hardwire its path in the test. If your numpy error shows up there, I'd believe numpy or env problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2281#issuecomment-902432397:83,test,tests,83,https://psicode.org,https://github.com/psi4/psi4/issues/2281#issuecomment-902432397,2,['test'],"['test', 'tests']"
Testability,"It should be noted that the keywords did change slightly and all tests had to be tweaked. I am guessing that the Psi4 and ChemPS2 binary versions are out of sync at the moment. Ill look into this today. Cheers,; Daniel Smith. > On May 31, 2016, at 7:51 AM, Hassenky notifications@github.com wrote:; > ; > The DMRG-natural-orbital calculation also has the same error.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub https://github.com/psi4/psi4/issues/384#issuecomment-222666388, or mute the thread https://github.com/notifications/unsubscribe/ABsBcX6MG6G0p8O-MC63teMY64rE_uWKks5qHCDcgaJpZM4IjFna.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/384#issuecomment-222667765:65,test,tests,65,https://psicode.org,https://github.com/psi4/psi4/issues/384#issuecomment-222667765,1,['test'],['tests']
Testability,"It should do but I'll check once the test suite with python 3 has finished and let you know. I am running the full test suite which is revealing a few more compatibility issues. Most are minor and easily fixed. The major problem is that iteritems and itervalues are used in several places. Unfortunately these have been (essentially) replaced in python 3 with the items and values methods, which return lists (rather than memory efficient generators) in python 2. I'm not sure what to do about this--one option is to just use the items and values methods, but that uses more memory in python 2. Another alternative is to write a function which returns iteritems in python 2 and items in python 3, but that's quite intrusive. Thoughts?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/9#issuecomment-20534484:37,test,test,37,https://psicode.org,https://github.com/psi4/psi4/pull/9#issuecomment-20534484,2,['test'],['test']
Testability,It should never be `.../psi4/share` that is running. That's source code. When running tests in `objdir` it should be the staged one and when installed it should be the installed version.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-240470127:86,test,tests,86,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-240470127,1,['test'],['tests']
Testability,"It shouldn't: the JK object and HF object should have similar performance. I haven't benchmarked at all, but this is needed for DFT hessians",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1550#issuecomment-466442856:85,benchmark,benchmarked,85,https://psicode.org,https://github.com/psi4/psi4/pull/1550#issuecomment-466442856,1,['benchmark'],['benchmarked']
Testability,"It sounds like we're taking the path of deprecation, then. > It does seem to be set to non-default in various tests https://github.com/psi4/psi4/search?p=1&q=diis_min_vecs . But if it's not providing an actual useful knob, I'm good with deprecate and remove. Half of those are setting an option in the DCT module, not the SCF module. As for the others, the samples were last generated pre-1.1. Something else killed the knob, perhaps the Py-side inversion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2401#issuecomment-1010179974:110,test,tests,110,https://psicode.org,https://github.com/psi4/psi4/issues/2401#issuecomment-1010179974,1,['test'],['tests']
Testability,"It still works for the `-xHost` `-march=native` case, so I would say it passes your test (haven't tried though!) I was asking myself the same about `CACHE`, but I think it's never set in cache, so we should be safe.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/845#issuecomment-343303520:84,test,test,84,https://psicode.org,https://github.com/psi4/psi4/pull/845#issuecomment-343303520,1,['test'],['test']
Testability,"It was revealed that single point can behave a little differently between `set basis bas; energy(mtd)` and `energy(mtd/bas)` calls. (copied from #2575). https://github.com/psi4/psi4/pull/2575#discussion_r876092414. Pre-ddd, CBS wrapper issues a `clean()` btwn calcs. Plain string modelchem calcs like `energy('hf/cc-pvdz')` were getting caught and also being cleaned, meaning their behavior was slightly different than `set basis cc-pvdz \n energy('hf')`. With ddd, this is no longer happening, so for occasional string modelchem calcs (that is, `energy|gradient|hessian(""mtd/bas"")` only), you may need to add a clean in the input. A few test cases now sport extra cleans. Signatures of this problem are PSIO errors and, in an obscure case, CC amplitudes being all zeros when called as mtd/bas. An example is shown below, collected by modifying steps 6 & 7 of `cbs-xtpl-energy-conv` test:. | | master (pre-v1.6) | ddd (v1.6) |; |-------------------------------------|---------------------------------------------|---------------------------------------------|; | set basis bas; energy(mtd); clean() | ok | ok |; | set basis bas; energy(mtd) | `PSIO_ERROR: (Incorrect block end address)` | `PSIO_ERROR: (Incorrect block end address)` |; | energy(mtd/bas); clean() | ok | ok |; | energy(mtd/bas) | ok | `PSIO_ERROR: (Incorrect block end address)` |. So after DDD, the two approaches behave the same. But psio errors aren't user friendly. Should we reconsider whether to auto clean after an energy() call? Advanced users would need to save more files explicitly. Maybe should clean() _before_ an energy() call.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2583:638,test,test,638,https://psicode.org,https://github.com/psi4/psi4/issues/2583,2,['test'],['test']
Testability,"It was tested with higher angular momentum, which is why I’m confused. Lori and I sat down at the last hackathon to try and find problem cases, but couldn’t reproduce the error. What I’m really struggling with is the origin of the importance of atom order in the test provided in #901. It’s probably related to the fact that I only take derivatives on center A and use translational invariance relations to get the rest, but my flu addled brain is failing me right now. For the same reason, yes, this took me a while to track down. Oh well, hopefully this is the last bug we ever have in the hessians. Or anywhere... > On Jan 27, 2018, at 8:16 PM, Daniel Smith <notifications@github.com> wrote:; > ; > @dgasmith commented on this pull request.; > ; > Awesome.; > ; > In psi4/src/psi4/libmints/overlap.cc:; > ; > > @@ -336,7 +336,7 @@ void OverlapInt::compute_pair_deriv2(const GaussianShell& s1, const GaussianShel; > buffer_[(0*size)+ao12] += (4.0*a1*a1*x[l1+2][l2]*y[m1][m2]*z[n1][n2] -; > 2.0*a1*(2*l1+1)*x[l1][l2]*y[m1][m2]*z[n1][n2]) * over_pf;; > if (l1 > 1); > Hmm, I think you just never tested anything beyond P orbitals. This if statement will not be hit without D or higher.; > ; > I wish we could put weights on commits so that we could crank this one up. Three lines changed, but I am sure quite a bit of time looking into it.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/903#issuecomment-361030347:7,test,tested,7,https://psicode.org,https://github.com/psi4/psi4/pull/903#issuecomment-361030347,3,['test'],"['test', 'tested']"
Testability,"It was thought more physically sound for orbital puream to govern all. After we noticed inconsistency, there was a crackdown and [long test](https://github.com/psi4/psi4/blob/master/tests/castup3/input.dat). Though my faint recollection was that the main trouble came from cast-up basis sets influencing the puream of the main calc. So a pure-sph might be ok.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-385684550:135,test,test,135,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385684550,2,['test'],"['test', 'tests']"
Testability,"It works for me locally, but you're right that the `==` doesn't make for a robust test. I'll improve that -- thanks for the notice.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3014#issuecomment-1636633947:82,test,test,82,https://psicode.org,https://github.com/psi4/psi4/issues/3014#issuecomment-1636633947,1,['test'],['test']
Testability,"It would be great to move the finite difference code Python-side for a variety of reasons. This would require the following steps:; - [x] Finished exporting `CdSalcList` to Python, see `psi4/src/export_mints.cc:512`. Some decisions will need to be made about the matrix factory input (which isn't used) and the ""need irreps"" keyword might want to be nicely wrapped for Python.; - [x] Pop out `fd_geoms_1_0` / `fd_1_0 Python side and add unit tests. Explore various interface types. I know a big one to consider is to use dictionaries rather than list so that we can do something like: compute gradient, do some checks, compute Hessian without duplicating computations, etc.; - [x] Move the rest of the fd code Python side.; - [x] Replace C calls with Py calls and remove C++ code. Many folks might want to comment on this so please make a PR after/during step one for review.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/884:442,test,tests,442,https://psicode.org,https://github.com/psi4/psi4/issues/884,1,['test'],['tests']
Testability,"It would be valuable to developers, nightly builds, and CI testing if libint could be compiled once, then linked in as needed, like we can do for Boost. Much developer anger when CMake spontaneously decides the integrals need recompiling could be soothed! We could test molecules larger than He with density-fitted quad-zeta! The next NSF green initiative could applaud our energy savings!. Who dares to decouple libint from our build system such that it could become a detectable `ExternalProject_Add` CMake module? I think we need to be able to pass in MAX_AM, and it would be nice to have it build both static and shared libraries.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/355:59,test,testing,59,https://psicode.org,https://github.com/psi4/psi4/issues/355,2,['test'],"['test', 'testing']"
Testability,"It's `dftd3` run through the psi4 interface. All we've done is tack on `-abc` to the command and then parse the `E6(abc)` line. @dsirianni, maybe page up in your terminal and check (or re-run) d3zero vs d3bj that the output line is exactly the same (for our regex to handle). Another thing to test is whether `dftd3 -func bp -abc <molfile>` outright gives exactly the same thing (`bp` is the turbomole for bp86, iirc). you can grab the text of the molfile from that big dictionary that gets printed with verbose=4. That will make sure that the ATM value when run from `.dftd3param` file (which is what psi always does) matches when `dftd3` uses its internal parameters for bp86. Thanks for the help, @hokru. I was really hoping those four numbers were supposed to be the same.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1151#issuecomment-417121617:293,test,test,293,https://psicode.org,https://github.com/psi4/psi4/pull/1151#issuecomment-417121617,1,['test'],['test']
Testability,"It's a duplicate of #391 . Unfortunately, python3-numpy is linked to ATLAS on Debian, so it will not be very easy to get around this, but I have (again) confirmed that if I set `blas.so` and `lapack.so` to something else than ATLAS then the `cdomp2-2` test passes:. ```; 	CD-OMP2 Total Energy (a.u.).......................................PASSED; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1461#issuecomment-451659665:252,test,test,252,https://psicode.org,https://github.com/psi4/psi4/issues/1461#issuecomment-451659665,1,['test'],['test']
Testability,"It's a pure Distelli issue, all tests pass on Mac. LGTM.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/486#issuecomment-258141679:32,test,tests,32,https://psicode.org,https://github.com/psi4/psi4/pull/486#issuecomment-258141679,1,['test'],['tests']
Testability,"It's all conda, but I can do an entire fresh install just to test this. On Oct 11, 2017 21:07, ""Lori A. Burns"" <notifications@github.com> wrote:. > See if you can check that a proper gcc is being loaded for psi4/core.so.; > That cxx11::basic_string<char, std::char_traits brings to mind the; > pre-/post-gcc-5.1 string issue. Is anything here compiled yourself or is it; > all conda?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/820#issuecomment-335915587>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AKTzQolTJ-EViA2tp1K0qf6SdZIdHlKOks5srRHYgaJpZM4P19oY>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820#issuecomment-335970314:61,test,test,61,https://psicode.org,https://github.com/psi4/psi4/issues/820#issuecomment-335970314,1,['test'],['test']
Testability,"It's matching qchem (the default setting) behavior of `max_F and (max_DE or max_disp)` https://github.com/psi4/psi4/blob/master/psi4/src/psi4/optking/opt_data.cc#L237 . Agree that it looks suspicious b/c the `o|*| ` symbols only indicate looking-at-this, not the detailed logic. Logic could be reconsidered (and it wouldn't hurt for me to read the q-chem manual every 10 years), but I think it's working as intended.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1947#issuecomment-655840367:272,log,logic,272,https://psicode.org,https://github.com/psi4/psi4/issues/1947#issuecomment-655840367,2,"['Log', 'log']","['Logic', 'logic']"
Testability,"It's no problem -- they're just warning that some of the test subset labels haven't been registered. All those warnings have vexed others, too, so it's set up to be fixed in #1351 and #1814 by the setup.cfg file. Thanks for the report!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1902#issuecomment-633174321:57,test,test,57,https://psicode.org,https://github.com/psi4/psi4/issues/1902#issuecomment-633174321,1,['test'],['test']
Testability,"It's not `np.float` but `np.double`, but shouldn't https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/numpy_helper.py#L540 be treated similarly, or is that not relevant (or maybe just not exercised by the testsuite)?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2845#issuecomment-1407771245:214,test,testsuite,214,https://psicode.org,https://github.com/psi4/psi4/pull/2845#issuecomment-1407771245,1,['test'],['testsuite']
Testability,"It's not going well. Still trying to solve the env after 20 min, and something wants hdf5 1.10.2 https://dev.azure.com/psi4/psi4/_build/results?buildId=1786&view=logs&j=96451287-da82-57a8-2c11-8da7db9ab71a",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1848#issuecomment-598804826:162,log,logs,162,https://psicode.org,https://github.com/psi4/psi4/pull/1848#issuecomment-598804826,1,['log'],['logs']
Testability,"It's not much advertised, but the cc* modules can do some density fitting. In particular, it's found that:; * df-cc2 rhf gradients run and equal findif gradients. #2137; * df-ccsd rhf gradients run and differ from conventional by <1.e-6 . Jonathon finds that not all terms make use of DF and not hooked up to DF gradient tech.; * df-ccsd rhf energies run and differ from fnocc by 2e-7 for correlation energy (inconsistent ref energy so printing and qcvars differ more); * df-ccsd uhf energies print NYI msg; * df-ccsd rohf energies run and are plausible compared to conventional. But plumbing-wise, these aren't ready to activate:; * ccenergy vs. (fnocc, dfocc) choose a different reference. ccenergy uses CONV as the ints are needed anyways. others choose DF since that's the SCF_TYPE setting; * is DF used thoroughly enough to match DF-only implementations? if not, is it used in the expensive places so that it's worth calling instead of the reliable CONV?; * does df-rohf need validation and if so, from where?. Current state of accessibility for DF CCENERGY is that CCSD has been barred by it being a managed method, while CC2 could be accessed by turning on `cc_type=df`. Probably any DF in CCENERGY is accessible through `energy(""ccenergy"")` with a lot of manual option setting. When I converted CC2 to a managed method (locally), that broke the DF-CC2 gradient test https://github.com/psi4/psi4/blob/master/tests/pytests/test_gradients.py#L41 and reminded me that DF in CCENERGY was semi-active. For now, I plan to add an escape clause to the CC2 managed gradient so that the test can run but otherwise leave DF CCENERGY inaccessible and out of stdsuite and capabilities tables.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2710:1369,test,test,1369,https://psicode.org,https://github.com/psi4/psi4/issues/2710,3,['test'],"['test', 'tests']"
Testability,"It's possible recent changes have introduced errors with the v15 Intel compilers. See, e.g.,. https://testboard.org/cdash/buildSummary.php?buildid=24529. The overall dashboard is here, and you can see that all instances of the v15 builds have started dying in libscfsolver/hf.cc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/155#issuecomment-126317935:102,test,testboard,102,https://psicode.org,https://github.com/psi4/psi4/issues/155#issuecomment-126317935,1,['test'],['testboard']
Testability,"It's too bad thus is not working properly!. If the Molden output from Psi is being used as input to the QMC, and the; wrong CI energy is obtained, then it may be that we have a bug in the; Molden output writer. (Are we sure the CAS orbitals are the ones being; written out, and not HF orbitals?). The signs on the determinants printed by Psi4 code are well tested, and so; I think it is extremely unlikely they could be wrong. It is much more; likely that there is some kind of mismatch between the orbitals being used; in the CAS and the orbitals being put into the QMC code. Possible due to a; bug in the Molden writer, or possibly due to some kind of enforced phase; convention in the QMC code that is incompatible with the phase of the; orbitals from Psi. On Sep 23, 2017 9:47 AM, ""Daniel Smith"" <notifications@github.com> wrote:. > @CDSherrill <https://github.com/cdsherrill> Perhaps you could comment on; > this?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/796#issuecomment-331640263>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9QdiI93WW1UBA9Fg9JkauL9vxRKM6uks5slRnvgaJpZM4PK23n>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/796#issuecomment-331666710:357,test,tested,357,https://psicode.org,https://github.com/psi4/psi4/issues/796#issuecomment-331666710,1,['test'],['tested']
Testability,"It’s not really an SVN/CVS thing, IMHO. We were using Git for a very long time before making the public/private split and the core developers are extremely familiar with Git’s distributed nature. The old way of developing Psi was to have a private repo (which used to be CVS, then SVN, then Git/SVN, before switching completely to Git) and to only release static tarballs every now and then. Lori touched on the reason for the private repo - we need to be able to collaborate with each other but don’t want to release certain features until we’ve been able to write them up and test them. The idea of having the private repo be a local one is fine if you’re working in isolation, but most of our code is developed collaboratively so we need a central place, like GitHub, to be able to store the repo. Adding a public mirror was just a convenient way to provide more timely updates than static releases, and we have not been diligent enough in keeping this synced up. If GitHub were to allow more fine-grained control of branch access, perhaps we could collapse down to one repo. As things stand, I think that removing the private repo would prevent people from working together on new features that are to be released at a later date. These issues were mooted a few years ago when we set the dual repo system up. If there’s been a GitHub update in the intervening time that allows more fine-grained access, or if anybody has a better idea that doesn’t interrupt our workflow, then we’re always open to suggestions. Andy. > On May 3, 2015, at 11:50 AM, Ryan Richard notifications@github.com wrote:; > ; > I think the short answer may be that a lot of the developers are still used; > to version control models like SVN or CVS.; > ; > Honestly I think you have the right idea though, with git there really; > isn't a need for two repositories for an open source code so long as we; > adopt the accompanying philosophy. It's now a matter of getting everyone; > on board.; > ; > Sent from my Android (with",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/88#issuecomment-98498738:578,test,test,578,https://psicode.org,https://github.com/psi4/psi4/issues/88#issuecomment-98498738,1,['test'],['test']
Testability,"JK class. The shell_significant() function can then be redefined specifically for different JK derived classes as needed. The existence of shell_significant() provides a unified framework for performing screening for any JK method, and it also provides the method by which density screening can be added directly to the relevant JK classes.; Second, this PR uses the shell_significant() framework to reimplement screening for certain JK methods. Most significantly, as implied in the first point, the biggest change in this regard was the removal of shell_significant_density() from TwoBodyAOInt into the domain and its reimplementation into the JK shell_significant() definitions. With this change, density screening is now the domain of individual JK classes rather than the TwoBodyAOInt class, which was one of the primary goals of this overall refactor PR set in the first place. Additionally, another method that was subject to slight changes from the shell_significant() framework was the Yoshimine PKJK algorithm, in which its test for shell significance was implemented using the shell_significant() framework. Composite JK algorithms commonly implemented a density-based screening within them, as part of their formulation, but a shell_significant() formalism has been added to SplitJK. This framework isn't unified the same way it is for the base JK class, because the needs for testing shell significance for different composite subalgorithms varies from method to method. . ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests a",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3098:2045,test,test,2045,https://psicode.org,https://github.com/psi4/psi4/pull/3098,1,['test'],['test']
Testability,"Just a followup on the fnocc2 error. I had passed in the `dertype=1` flag to reduce AM requirements; that flag got lost in your merge of my PR. I think the current solution is better; we now use analytic frequencies in that test case because the AM requirements have been reduced since I fixed the erroneous AM check in libmints. The clang-3.8 failure is caused by two things: 1) the Boost detection fails and 2) building Boost fails because of [this bug](https://bugzilla.redhat.com/show_bug.cgi?id=1120995), which was fixed in clang 3.4. For some crazy reason, Travis is providing 3.4 even though we specifically request 3.8. I noticed that some of the tests do get version 3.8, so I'm not sure it's a problem with out YML but will poke around a little. This will all go away (and our build time will drop) when the Boost detection works with Travis again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235144008:224,test,test,224,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235144008,2,['test'],"['test', 'tests']"
Testability,"Just a general note, if the lesson hadn't been hammered in already by @PeterKraus's experiences with sapt-ecp: small basis sets are _very_ susceptible to `DF_FITTING_CONDITION`. The opt-irc-1 test, which was healed by propagating the condition value, was taking ~15 opt cycles to converge each IRC point with 1e-12 (and finally failed on one) but takes ~4 cycles with 1e-10.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1494#issuecomment-457323824:192,test,test,192,https://psicode.org,https://github.com/psi4/psi4/pull/1494#issuecomment-457323824,1,['test'],['test']
Testability,"Just a little update: unless jturney has an opposition, I think we can safely delete the error message. I'm now trying to clean up the synchronization issues. I found the problem with cubeprop, and I'm working on the errors in the sapt tests, which seem to be even more subtle.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/596#issuecomment-278105814:236,test,tests,236,https://psicode.org,https://github.com/psi4/psi4/issues/596#issuecomment-278105814,1,['test'],['tests']
Testability,"Just a note to confirm, that error looks like a mismatch between an old version of Psi4 and new version of the test. Midbonds were added fairly recently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/936#issuecomment-373023252:111,test,test,111,https://psicode.org,https://github.com/psi4/psi4/issues/936#issuecomment-373023252,1,['test'],['test']
Testability,"Just a quick note on the failing tests so I don't forget: `dft-smoke` fails because it includes DSD-PBEP86 (which was parametrised for -D2, now is parametrised without it); `dftd3-energy` fails because of `dashparams['sr8']` not being passed in. It would make sense to generalise that interface somewhat - set defaults and then update from the passed-in dict.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-370332915:33,test,tests,33,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-370332915,1,['test'],['tests']
Testability,"Just a quick update - I'm making a little bit of progress. I hacked my local branch to get valgrind info from the test machines. Here's the pertinent section of the resulting error:. `vex amd64->IR: unhandled instruction bytes: 0xF 0xB 0x89 0xD1 0x48 0x89 0x45 0xC8; ==20864== valgrind: Unrecognised instruction at address 0x22fd55c.; ==20864== at 0x22FD55C: psi::DPD::buf4_sort(psi::dpdbuf4*, int, psi::indices, std::string, std::string, char const*) (buf4_sort.cc:1977); ==20864== by 0x191AEB0: psi::cctransort::sort_tei_rhf(boost::shared_ptr<psi::PSIO>, int) (sort_tei_rhf.cc:35); ==20864== by 0x18F8C81: psi::cctransort::cctransort(psi::Options&) (cctransort.cc:472); ==20864== by 0x1434733: py_psi_cctransort() (python.cc:497); ==20864== by 0x144C47D: _object* boost::python::detail::invoke<boost::python::to_python_value<double const&>, double (*)()>(boost::python::detail::invoke_tag_<false, false>, boost::python::to_python_value<double const&> const&, double (*&)()) (invoke.hpp:75)`. I'm digging around now, because I can't see anything obviously wrong in those lines of code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178350753:114,test,test,114,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178350753,1,['test'],['test']
Testability,Just added this as a test case too for pyOptking (which had no trouble with it).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2208#issuecomment-868823284:21,test,test,21,https://psicode.org,https://github.com/psi4/psi4/issues/2208#issuecomment-868823284,1,['test'],['test']
Testability,Just cleaned from obsolete code/comments. Ready to go when passes tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/722#issuecomment-305353983:66,test,tests,66,https://psicode.org,https://github.com/psi4/psi4/pull/722#issuecomment-305353983,1,['test'],['tests']
Testability,"Just discussed this with the team. Unfortunately we don't see a straightforward way to add this capability to SAPT without adding some complex logic, and SAPT dying in the middle of a calculation seems rare enough that we're reluctant to add the complex logic to fix something that shouldn't be happening often. Sorry!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/51#issuecomment-37975385:143,log,logic,143,https://psicode.org,https://github.com/psi4/psi4/issues/51#issuecomment-37975385,2,['log'],['logic']
Testability,Just finish the tests!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-408884434:16,test,tests,16,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-408884434,1,['test'],['tests']
Testability,"Just out of interest, does `dft-bench-ionisation` (where the wB97X-D functional is a good canary) pass with your ICC + MKL build?. With GCC, I had success with netlib and blis - OpenBLAS seems to be hit-and-miss, and I didn't try with MKL. However, as I mentioned before, the `dft-custom-gga` always passes for me, and it's the other test that fails.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1038#issuecomment-397376716:334,test,test,334,https://psicode.org,https://github.com/psi4/psi4/issues/1038#issuecomment-397376716,1,['test'],['test']
Testability,"Just out of interest, does this fix the `energy(cbs, ... , bsse_type=[...])` calls? The ""method/basis"" syntax for CBS works fine, but ""explicit"" returns the total energy. I'm not sure what's the expected behaviour, but I think it should be consistent:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ```; returns:; ```; TestComparisonError: 	Interaction energy: computed value (445.7515388) does not match (0.0131014) to 6 digits.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/975#issuecomment-383597174:667,TEST,TEST,667,https://psicode.org,https://github.com/psi4/psi4/pull/975#issuecomment-383597174,2,"['TEST', 'Test']","['TEST', 'TestComparisonError']"
Testability,"Just tested and the check on compiler version is still needed, since earlier compilers might not be feature-complete and CMake doesn't check for all features when setting the standard.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-281120873:5,test,tested,5,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-281120873,1,['test'],['tested']
Testability,"Just to prevent things falling in between the cracks, @loriab and I have discussed this issue on Slack a while ago, and the consensus was that while adding FC spec to `Molecule` might be attractive because it's easier to do, it really ought to belong to the `Wavefunction` object. . To paraphrase @loriab's comments, as the `Wavefunction` owns a `Basisset` which owns a `Molecule` anyway, it is the most logical place to plug this logic in. It should process options like `frozen_docc Int` or `freeze_core True` (or any possible `freeze_core N` spec where `N` is the N-th previous noble gas, or potential per-fragment `frozen_docc`). For the latter case (`freeze_core True`), it should take into account the fragment charge, or any electrons already frozen by ECP's, so that atoms such as Ca2+ with FC have some valence electrons.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1350#issuecomment-445241427:404,log,logical,404,https://psicode.org,https://github.com/psi4/psi4/pull/1350#issuecomment-445241427,2,['log'],"['logic', 'logical']"
Testability,"Just updated the last commit to fix `mintshelper_` copying. For the shallow copy, the copy and the original use the same `mintshelper_`, so all the `set_basisset` I was doing was wasted lines. For the deep copy, I just needed to copy from the original `mintshelper_`, not the new one. Follow-up PR should have a test for this, as I need some other infrastructure in place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1970#issuecomment-664461196:312,test,test,312,https://psicode.org,https://github.com/psi4/psi4/pull/1970#issuecomment-664461196,1,['test'],['test']
Testability,KIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_add,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14442,test,tests,14442,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['test'],['tests']
Testability,KIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1240: Not detecting module cct3. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1286: Not detecting module psixas. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:25: Not detecting module gdma. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons_qcschema.py:75: Not detecting module ipi. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\te,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:14601,test,tests,14601,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['test'],['tests']
Testability,"Kicking out Boost and libint has substantially reduced our compile time. However, we're still running up against Travis-CI's 50 min max (~10 min of that are in tests). So, here's the facts. Any suggestions for reducing compile time welcome. There are thoughts in the air of moving `bin`s to external projects, where they can be tested separately, but less drastic suggestions preferred. ```; psi4 5216.132 100%; ---------------------------------; dfocc 490.372 9.4%; ccdensity 489.191 9.4%; mints 327.399 6.3%; dpd 321.392 6.2%; psimrcc 297.722 5.7%; core 285.259 5.5%; ccenergy 242.782 4.7%; occ 227.323 4.4%; cclambda 167.325 3.2%; dcft 156.295 3.0%; cceom 156.036 3.0%; ccresponse 137.6 2.6%; fock 136.653 2.6%; sapt_solver 125.653 2.4%; detci 123.652 2.4%; optking 118.63 2.3%; ccsort 118.255 2.3%; cchbar 107.15 2.1%; mcscf 106.969 2.1%; cctriple 91.443 1.8%; iwl 90.624 1.7%; fnocc 77.272 1.5%; qt 69.421 1.3%; functional 65.807 1.3%; psio 59.924 1.1%; scf_solver 57.751 1.1%; trans 51.991 1.0%; cctransort 49.189 0.9%; ciomr 47.597 0.9%; 3index 45.95 0.9%; fisapt 39.127 0.8%; adc 37.382 0.7%; transqt2 34.06 0.7%; thce 33.156 0.6%; findif 31.708 0.6%; scfgrad 30.889 0.6%; moinfo 26.539 0.5%; parallel 23.011 0.4%; dfmp2 19.045 0.4%; options 12.27 0.2%; psi4util 11.808 0.2%; plugin 10.044 0.2%; cubeprop 9.776 0.2%; efp_solver 9.012 0.2%; diis 7.406 0.1%; dmrg 7.377 0.1%; mrcc 6.772 0.1%; gdma_interface 4.447 0.1%; disp 4.221 0.1%; sapt 4.092 0.1%; cholesky 3.863 0.1%; thermo 3.677 0.1%; efp_interface 3.21 0.1%; filesystem 0.613 0.0%. ```. Note to future (http://stackoverflow.com/questions/5962285/cmake-compilation-statistics):. ```; >>> cat time-icpc; #!/bin/bash; { time /path/to/icpc ""$@""; } 2> >(cat <(echo ""/path/to/icpc $@"") - >> /path/to/timeresults.txt); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/525:160,test,tests,160,https://psicode.org,https://github.com/psi4/psi4/issues/525,2,['test'],"['tested', 'tests']"
Testability,"Kind of an interesting edge case, since the SOCC orbitals area always assumed to be of the same spin the sorting breaks the multiplicity. This could be widely considered a ""bug"" as the sorting *should* be aware of this in a perfect world. At the same time, CUHF for closed shell doesn't make a ton of sense so perhaps the other way to do it is have CUHF complain if a closed shell molecule is given? We can likely find similar errors when running UHF in singlet mode. Some logic to switch between RHF and UHF can be added if a user doesnt specify a reference.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/738#issuecomment-307631551:473,log,logic,473,https://psicode.org,https://github.com/psi4/psi4/issues/738#issuecomment-307631551,1,['log'],['logic']
Testability,"Knocked about 10% off the total time to limit AM to 4. Going to close this for now, not sure a test branch will help us much more. Time to see how this fares in the wild.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235437711:95,test,test,95,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235437711,1,['test'],['test']
Testability,L [ 82%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf conv fc: dd -grd0] PASSED [ 82%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf conv ae: dd -grd1] PASSED [ 83%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf conv ae: dd -grd0] PASSED [ 83%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf conv ae: dd -grd1] PASSED [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf conv ae: dd -grd0] PASSED [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf conv ae: dd -grd1] XFAIL [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf conv ae: dd -grd0] PASSED [ 85%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df fc: dd -grd1] PASSED [ 85%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df fc: dd -grd0] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df fc: dd -grd1] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df fc: dd -grd0] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df fc: dd -grd1] XFAIL [ 87%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df fc: dd -grd0] PASSED [ 87%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df ae: dd -grd1] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df ae: dd -grd0] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df ae: dd -grd1] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df ae: dd -grd0] PASSED [ 89%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df ae: dd -grd1] XFAIL [ 89%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df ae: dd -grd0] PASSED [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf cd fc: dd -grd1] XFAIL [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_defau,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:20249,test,tests,20249,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,LANG=en_US.UTF-8; DEBUG_FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -pipe; F77=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gfortran; CXX=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-c++; MPM_LAUNCHER=/home/termo/intel/debugger_2018/mpm/mic/bin/start_mpm.sh; OBJCOPY=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-objcopy; INTEL_PYTHONHOME=/home/termo/intel/debugger_2018/python/intel64/; SHLVL=1; HOME=/home/termo; FORTRANFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; DEBUG_CPPFLAGS=-D_DEBUG -D_FORTIFY_SOURCE=2 -Og; CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -pipe; FC=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gfortran; _CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu; GCC=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-gcc; ADDR2LINE=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-addr2line; CONDA_PYTHON_EXE=/home/termo/miniconda3/bin/python; LOGNAME=termo; CLASSPATH=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mpi/intel64/lib/mpi.jar; XDG_DATA_DIRS=/usr/local/share:/usr/share:/var/lib/snapd/desktop; SSH_CONNECTION=185.107.12.100 44238 10.0.0.4 22; CONDA_DEFAULT_ENV=p4dev35; PKG_CONFIG_PATH=/home/termo/intel/compilers_and_libraries_2018.2.199/linux/mkl/bin/pkgconfig; LESSOPEN=| /usr/bin/lesspipe %s; DEBUG_CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -pipe; RANLIB=/home/termo/miniconda3/envs/p4dev35/bin/x86_64-conda_cos6-linux-gnu-ranlib; INFOPATH=,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448:8328,LOG,LOGNAME,8328,https://psicode.org,https://github.com/psi4/psi4/issues/1004#issuecomment-386642448,1,['LOG'],['LOGNAME']
Testability,"LEAR_SCHEME=SBECKE` ('smooth Becke' after: 10.1063/1.5049435. Better for weak interactions, but no time savings/no screening); - [x] extends `DFT_PRUNING_SCHEME` keyword with:; - [x] Treutler grid pruning ``TREUTLER``; - [x] a more robust grid pruning variant of it ``ROBUST``; - [x] new variables: ``XC GRID TOTAL POINTS``, ``XC GRID SPHERICAL POINTS``, ``XC GRID RADIAL POINTS``; - [x] `print > 2` adds (existing but unused) debug grid print out; - [x] tight DFT tests are updated with new values due to the new Bragg-Slater radii used; - [x] testing and error overview; - [x] option to properly disable all pruning (currently only indirect way); - [x] tests below indicate a reduction of the grid size by 30 and 45% using `ROBUST` and `TREUTLER` pruning, respectively. This leads to a 15-20% speed up for small molecules.; - [x] the following tests have been updated because of the new BS radii: `dft-b3lyp`; `dft-custom-mgga`, `dft-grad-lr1`, `dft-grad-lr3`, `dft-grad-meta`, `dft-grad1`, `dft-grad2`, `dft-omega`, `dft-psivar`, `dft-vv10`, `dft1`, `dftd3-grad`, `dftd3-version`, `frac-traverse`, `opt13`, `pcmsolver-dft`, `pcmsolver-dipole`; - [x] new test: `dft-pruning`. ## Questions; - Pruning enabled by default? -> not this PR, but after further testing yes. ## Checklist; - [x] Documentation; - [x] Pruning Tests added; - [x] All relevant `ctests` pass; (http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge. ----; Tests. ![grid_osc](https://user-images.githubusercontent.com/1648640/55870801-a6499c80-5b89-11e9-957d-68a08aa8ca41.png); ----; **pytest DFT benchmarks:**. _Interaction energies:_; With the introduced `ROBUST` pruning scheme (less aggressive variant of `TREUTLER`) all `dft_benchmark_interaction` tests pass. With `TREUTLER` 21 of 92 fail. For comparison, the `FUNCTION` schemes are all very aggressive, failure rate(!): ; - `P_SLATER=39/92`; - `D_SLATER=89/92`; - `LOG_SLATER=61/92`;",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1591:1821,test,tests,1821,https://psicode.org,https://github.com/psi4/psi4/pull/1591,2,['test'],"['test', 'tests']"
Testability,"LGTM, waiting on tests now. Not sure why distelli is not running on these PR's, but still going strong on Inversion.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/479#issuecomment-254008157:17,test,tests,17,https://psicode.org,https://github.com/psi4/psi4/pull/479#issuecomment-254008157,1,['test'],['tests']
Testability,LGTM. (I want to test lgtm counting),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/473#issuecomment-249286005:17,test,test,17,https://psicode.org,https://github.com/psi4/psi4/pull/473#issuecomment-249286005,1,['test'],['test']
Testability,LGTM. +🍺 for adding a test case,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-265362937:22,test,test,22,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-265362937,1,['test'],['test']
Testability,"LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_filesystem.so -DBoost_PYTHON_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_python.so -DBoost_REGEX_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_regex.so -DBoost_SERIALIZATION_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_serialization.so -DBoost_SYSTEM_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_system.so -DBoost_THREAD_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_thread.so -DBoost_TIMER_LIBRARY_RELEASE=/cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64/libboost_timer.so /scratch/appssf/psi4-1.0. -- BLAS: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); -- LAPACK: using explit library (/cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so); CMake Error at tests/cubeprop/CMakeLists.txt:2 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_1_1-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:3 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_2_2-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:4 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_3_1-B2.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:5 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_4_3-A1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:6 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Psi_a_5_1-B1.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:7 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Da.cube.ref"". CMake Error at tests/cubeprop/CMakeLists.txt:8 (file):; file COPY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Db.cube.ref"". CMake Error at tests/cubeprop/",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:6833,test,tests,6833,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['test'],['tests']
Testability,"Landing on the correct SCF solution is tricky, and guaranteeing it is trickier still. I hear that in psi3, users routinely supplied docc/socc arrays to guide to the intended solution. Fortunately, psi4 has a variety of guesses to obtain the right solution, and someday, as @dgasmith mentioned, a next-generation SAD guess will assure correctness for the ground states of elements, at least. But without a root-finding driver over the SCF code that attempts and discards guesses/ does basis projections/ evaluates the nature of the system (which can be computational expensive), we cannot fix some system and method combinations without injuring others. It should be noted that no QC methodology to date is completely black box and no program always obtains the correct minima with default options. We are glad to have the lithium report at hand and will be pleased to use them to test the future SAD guess, but this is not an issue that will be fixed by 1.0.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/335#issuecomment-212439352:880,test,test,880,https://psicode.org,https://github.com/psi4/psi4/pull/335#issuecomment-212439352,1,['test'],['test']
Testability,"Last two pass now (https://testboard.org/cdash/viewTest.php?onlydelta&buildid=44436), so item complete.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/190#issuecomment-158097011:27,test,testboard,27,https://psicode.org,https://github.com/psi4/psi4/issues/190#issuecomment-158097011,1,['test'],['testboard']
Testability,"Latest force push is a rebase of the branch, and a new commit with test cases. I still need one more reviewer. The actual coding is just replacing `nsopi` with `nmopi` in cases when we're obviously dealing with molecular orbitals, so should be an easy review!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2233#issuecomment-875774733:67,test,test,67,https://psicode.org,https://github.com/psi4/psi4/pull/2233#issuecomment-875774733,1,['test'],['test']
Testability,"Launching GDMA calculations from a python script or python interpreter causes a sudden crash. Ouptu files indicates that previous steps finish with no eroor and a GDMA input file is created, as well as a log file (fort.52, attached) with this message: `Could not open psi4 output for writing.unit = 51`. On the contrary, launching the same calculations with the psi4 executable does not produce any error. This bug was originally reported and discussed on the [psi4 forum](http://forum.psicode.org/t/psi-gdma-causes-python-to-crash-could-not-open-psi4-output-for-writing-unit-51/1126?u=flolangenfeld). The bug can be reproduce using the sample gdma h2o.dat file and its [python equivalent](http://forum.psicode.org/t/psi-gdma-causes-python-to-crash-could-not-open-psi4-output-for-writing-unit-51/1126/4?u=flolangenfeld)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1334:204,log,log,204,https://psicode.org,https://github.com/psi4/psi4/issues/1334,1,['log'],['log']
Testability,"Leave those tests as they are, and create new tests for the fixed option. I also insist that you include a warning about those keyword changes in the documentation for SAPT(DFT), and in the output or logging file whenever SAPT(DFT) runs. This could cause users to get different numbers with the exact same input file.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1165691789:12,test,tests,12,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1165691789,3,"['log', 'test']","['logging', 'tests']"
Testability,"Let me test something with the DFT part. edit: main suspect is the ""wrong"" VWN correlation",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2766#issuecomment-1305868903:7,test,test,7,https://psicode.org,https://github.com/psi4/psi4/pull/2766#issuecomment-1305868903,1,['test'],['test']
Testability,Libecpint CI testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2580:13,test,testing,13,https://psicode.org,https://github.com/psi4/psi4/pull/2580,1,['test'],['testing']
Testability,"Log file attached.; [memdfjk.txt](https://github.com/psi4/psi4/files/3302510/memdfjk.txt). The issue is simple, however, and the fix is in #1667 as I posted already above.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1666#issuecomment-503214336:0,Log,Log,0,https://psicode.org,https://github.com/psi4/psi4/issues/1666#issuecomment-503214336,1,['Log'],['Log']
Testability,"Log: [log.txt](https://github.com/psi4/psi4/files/10191011/log.txt). Version: 1.7; Python-3.9; py39-qcengine-0.26.0; FreeBSD 13.1. But this script prints version fine:; ```; from qcengine.programs.psi4 import Psi4Harness. p4h = Psi4Harness(); print(""version={}"".format(p4h.get_version())); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2831:0,Log,Log,0,https://psicode.org,https://github.com/psi4/psi4/issues/2831,3,"['Log', 'log']","['Log', 'log']"
Testability,"Looking at the CI failure logs, it seems that the issue is with the package ""Pint"":. `ImportError: cannot import name 'quantity' from 'pint' (C:\Miniconda\envs\baseenv\lib\site-packages\pint\__init__.py). This particular error seems to commonly show up for the failed CI tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2762#issuecomment-1293471883:26,log,logs,26,https://psicode.org,https://github.com/psi4/psi4/pull/2762#issuecomment-1293471883,2,"['log', 'test']","['logs', 'tests']"
Testability,"Looking at this, how much overlap does this have with the current dispersion function? What is the chance we could combine the two. Do you need pointers on where to hook this into tests?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1490#issuecomment-456614330:180,test,tests,180,https://psicode.org,https://github.com/psi4/psi4/pull/1490#issuecomment-456614330,1,['test'],['tests']
Testability,"Looks fine to me. Thanks Lori!. -Rob. On Thu, Sep 22, 2016 at 8:32 PM, Lori A. Burns notifications@github.com; wrote:. > Description; > ; > Documents F/I-SAPT capabilities, adds F/I-SAPT test cases and samples, and; > makes F/I-SAPT postprocessing scripts available in install/share.; > Todos; > ; > Notable points that this PR has either accomplished or will accomplish.; > - Enables the average citizen to quickly begin using F/I-SAPT.; > ; > Status; > - Ready to go. Looks ready to me, though there may well be further; > reST changes after viewing the docs build. @robparrish; > https://github.com/robparrish may want to look it over. We'll close; > the other PR.; > ; > ---; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/psi4/psi4/pull/470; > Commit Summary; > - FISAPT does not need INTS_TOLERANCE 0.0 any more (bug fixed in; > LibFock previously); > - Removed extra pymol file in fsapt; > - Remove dependency on absolute path from copy_pymol scripts in fsapt; > - Short correctness test (1s) of fsapt0; > - Full example of fsapt0; > - Full example of fisapt0; > - Shorter version of tests/isapt1; > - Example of fsapt0 difference analysis; > - Hook up and clean fisapt test makefiles; > - Added a good bit of sphinx docs on FISAPT; > - update samples. docstring f/isapt tests; > - a few mods to fisapt docs that I can detect w/o seeking the built; > docs; > ; > File Changes; > - _M_ doc/sphinxman/CMakeLists.txt; > https://github.com/psi4/psi4/pull/470/files#diff-0 (6); > - _A_ doc/sphinxman/source/Total.png; > https://github.com/psi4/psi4/pull/470/files#diff-1 (0); > - _A_ doc/sphinxman/source/VA.png; > https://github.com/psi4/psi4/pull/470/files#diff-2 (0); > - _M_ doc/sphinxman/source/bibliography.rst; > https://github.com/psi4/psi4/pull/470/files#diff-3 (16); > - _A_ doc/sphinxman/source/fisapt.rst; > https://github.com/psi4/psi4/pull/470/files#diff-4 (351); > - _M_ doc/sphinxman/source/methods.rst; > https://github.com/psi4/psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/470#issuecomment-249267903:187,test,test,187,https://psicode.org,https://github.com/psi4/psi4/pull/470#issuecomment-249267903,1,['test'],['test']
Testability,Looks good to me from the CMake/math point of view. The foreach [here](https://github.com/psi4/psi4/pull/591/commits/242c33255741ca6783ce13d4143ed7096ef79766) looks a bit overkill. Will it be possible for me to take these changes over to Autocmake? The grand plan there is to split up the math detection monolith into individual modules. I am asking this because this now becomes GPL code and Autocmake is BSD. Advantage of taking it to Autocmake would be more testing exposure to other codes.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/591#issuecomment-276088154:461,test,testing,461,https://psicode.org,https://github.com/psi4/psi4/pull/591#issuecomment-276088154,1,['test'],['testing']
Testability,"Looks good to me, and particularly the tests. Thanks for fixing this.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2191#issuecomment-859723675:39,test,tests,39,https://psicode.org,https://github.com/psi4/psi4/pull/2191#issuecomment-859723675,1,['test'],['tests']
Testability,"Looks good! Defaulting to semicanonical MO's is probably a good idea. Can you think of a reason that we wouldnt want to do this?. We may want to add some sort of test to this just to ensure that we are not actually changing the energy. One idea would to be in a test to do:. ```; # Solve and leave the Wavefunction active; set MCSCF_CI_CLEANUP False; set MCSCF_DPD_CLEANUP False; cas_e, cas_wfn = energy(""CASSCF"", return_wfn=True). # Update energy; cas_wfn.transform_mcscf_integrals(approx_integrals_only); nci_iter = cas_wfn.diag_h(1.e-10, 1.e-10); current_energy = core.get_variable(""MCSCF TOTAL ENERGY""). # Compare the energy; compare_values(cas_e, cas_wfn, 8, ""Rotated Orbital Energy Invariance""); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/722#issuecomment-304474246:162,test,test,162,https://psicode.org,https://github.com/psi4/psi4/pull/722#issuecomment-304474246,2,['test'],['test']
Testability,"Looks good, can you post some raw gradients for `[D,T]` and `[T,Q]` under different schemes? Id like to examine the convergence pattern. Be good to add these to the tests as well, best to have tests that go back to static quantities.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1042#issuecomment-433249247:165,test,tests,165,https://psicode.org,https://github.com/psi4/psi4/pull/1042#issuecomment-433249247,2,['test'],['tests']
Testability,Looks good. Can you add a test in `/tests/dft1/` that compares the result against another program with a prior implementation?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/438#issuecomment-230646972:26,test,test,26,https://psicode.org,https://github.com/psi4/psi4/pull/438#issuecomment-230646972,2,['test'],"['test', 'tests']"
Testability,Looks great so far! I retract my statement about the code being bad in the absence of PCMSolver; I wasn't actually running the tests themselves. I just grabbed a PCM input from the test suite and it's no surprise that it failed when I didn't compile PCM.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/246#issuecomment-183835547:127,test,tests,127,https://psicode.org,https://github.com/psi4/psi4/pull/246#issuecomment-183835547,2,['test'],"['test', 'tests']"
Testability,"Looks great. CI should pass now after a rebase. And note that `tests/pytest/` has moved to `tests/pytests/` to follow Peter's links. Ref values _much_ appreciated, even if they're only a warning that we differ from you rather than we're not matching literature.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1645#issuecomment-492646574:63,test,tests,63,https://psicode.org,https://github.com/psi4/psi4/pull/1645#issuecomment-492646574,2,['test'],['tests']
Testability,"Looks like 0-60 cal/mol, thanks for already doing this benchmark!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1677#issuecomment-510938024:55,benchmark,benchmark,55,https://psicode.org,https://github.com/psi4/psi4/issues/1677#issuecomment-510938024,1,['benchmark'],['benchmark']
Testability,"Looks like @jturney and @lothian picked up some frac faults just as I’ve managed to squelch all of mine. The problem is that the scf convergence goes haywire occasionally at different fractional occupations on different computers (sometimes just failing to converge, sometimes converging to wrong values). Fiddling with `frac_start` and `mom_start` around https://github.com/psi4/psi4public/blob/master/tests/frac/input.dat#L126 for different points usually helps. If you could identify which point is giving trouble (`grep electron.`) that’d help in devising an input file that works everywhere. Or in commenting out the points most likely to offend. https://testboard.org/cdash/viewTest.php?onlyfailed&buildid=23176; https://testboard.org/cdash/viewTest.php?onlyfailed&buildid=23168; https://testboard.org/cdash/viewTest.php?onlyfailed&buildid=23173",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/129#issuecomment-124147126:403,test,tests,403,https://psicode.org,https://github.com/psi4/psi4/issues/129#issuecomment-124147126,4,['test'],"['testboard', 'tests']"
Testability,Looks like I was getting my tests confused when running your issues. The eigenvectors are indeed wrong. Fixed in #566. As a note the diagonalization is a bit unstable and you will get slightly different results between programs.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/558#issuecomment-271923039:28,test,tests,28,https://psicode.org,https://github.com/psi4/psi4/issues/558#issuecomment-271923039,1,['test'],['tests']
Testability,Looks like `gdma` is still the culprit:; ```; 117/118 Test #335: gdma-gdma1 .......................***Failed 1.55 sec; ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/605#issuecomment-277151141:54,Test,Test,54,https://psicode.org,https://github.com/psi4/psi4/pull/605#issuecomment-277151141,1,['Test'],['Test']
Testability,Looks like a logic breakdown around `/psi4/driver/procedures/proc.py:1140`. For now if you simply comment out `/psi4/driver/procedures/proc.py:1164-1165` everything should work as expected. Ill fix this up in a patch and switch one of our `basis_guess` test cases to an explicit basis so we can catch this in the future.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/484#issuecomment-256802735:13,log,logic,13,https://psicode.org,https://github.com/psi4/psi4/issues/484#issuecomment-256802735,2,"['log', 'test']","['logic', 'test']"
Testability,"Looks like it is because `lock_frame_` is set to true. Try setting it to false right before the call to `update_geometry`. That also seems to make the small test work. Edit: it is set to whatever the rhs is set to, which would usually be true.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/299#issuecomment-191841132:157,test,test,157,https://psicode.org,https://github.com/psi4/psi4/pull/299#issuecomment-191841132,1,['test'],['test']
Testability,"Looks like it's failing on travis in; ```stage/lib/psi4/tests/test_vibanalysis.py::test_hessian_vs_cfour[methane-H_analytic] FAILED [ 93%]```. so the analytic Hessian for CH4 is failing, but the finite difference calculations based on forces or energies are both okay... I don't really see what could be going wrong here: if it's doing the neutral molecule, this PR hasn't changed anything!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-451646889:56,test,tests,56,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-451646889,1,['test'],['tests']
Testability,Looks like the tests are 1-2 minutes on one core and have been added to shorttests. Great!,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/257#issuecomment-184851903:15,test,tests,15,https://psicode.org,https://github.com/psi4/psi4/pull/257#issuecomment-184851903,1,['test'],['tests']
Testability,"Looks like there are a few test cases where SAD may converge onto a different solution than the previously used guess. Namely, on my computer the tests that fail on CI run just fine, and the SAD guess gives the same solution, only with a slightly lower energy in a fewer number of iterations. ROHF is tricky due to the existence of many local minima.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-447636721:27,test,test,27,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-447636721,2,['test'],"['test', 'tests']"
Testability,"Looks like there are some unrelated test failures, but this one is ready to go. As shown by the changes in the pytest guess energies, the new code reaches a considerably lower SAD guess energy for the HF molecule: -100.02909951427 vs -99.63941801281894. Large improvements are expected especially for systems containing hydrogen atoms, since the existing code only includes 0.5 electrons on those atoms.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707:36,test,test,36,https://psicode.org,https://github.com/psi4/psi4/pull/3138#issuecomment-2149267707,1,['test'],['test']
Testability,Looks like this isnt handling custom basis sets correctly and a few other python pieces like inline for-based lists and dicts. Failing tests are:. ```; The following tests FAILED:; 	 60 - cc49 (Failed); 	 93 - cubeprop (Failed); 	120 - dfmp2-1 (Failed); 	187 - mints2 (Failed); 	206 - mp2-property (Failed); 	235 - opt1 (Failed); 	256 - psimrcc-ccsd_t-1 (Failed); 	257 - psimrcc-ccsd_t-2 (Failed); 	258 - psimrcc-ccsd_t-3 (Failed); 	262 - psimrcc-pt2 (Failed); 	263 - psimrcc-sp1 (Failed); 	268 - pywrap-alias (Failed); 	310 - stability1 (Failed); 	322 - options1 (Failed); 	335 - dftd3-energy (Failed); 	339 - gdma-gdma1 (Failed); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/658#issuecomment-289183019:135,test,tests,135,https://psicode.org,https://github.com/psi4/psi4/pull/658#issuecomment-289183019,2,['test'],['tests']
Testability,"Looks like this just needs a couple mild testing changes and a rebase, then RTG.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1383#issuecomment-443467862:41,test,testing,41,https://psicode.org,https://github.com/psi4/psi4/pull/1383#issuecomment-443467862,1,['test'],['testing']
Testability,Looks like this may have caused some trouble in eom-ccsd (#786) that the tests didn't catch.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/780#issuecomment-323517982:73,test,tests,73,https://psicode.org,https://github.com/psi4/psi4/pull/780#issuecomment-323517982,1,['test'],['tests']
Testability,"Looks like we lost threading again at some point, especially in PSIthon. Kudos to @schiebermc for convincing me, even after pytest profiling showed all was in working order. I don't know when this actually happened. Fix seems easy enough for PSIthon, though I still wanted to run it by the core-devs, but PsiAPI is a little trickier. * PsiAPI, import psi4 before numpy: `python thread.py` --> _NO thread_; * PsiAPI, import numpy before psi4: `python thread.py` --> _THREAD_; * PSIthon, `bin/psi4` imports psi4 which imports numpy: `psi4 thread.py` --> _NO thread_ (yes, even if you comment out the thread setting line); * PSIthon, `bin/psi4` inserting `import numpy as np` [here](https://github.com/psi4/psi4/blob/master/psi4/run_psi4.py#L157-L158) to effectively import numpy before psi4: `psi4 thread.py` --> _THREAD_. `thread.py` test file (essentially [this](https://github.com/psi4/psi4/blob/master/tests/pytest/test_aaa_profiling.py)); ```; import time. # good; import numpy as np; import psi4. # bad; #import psi4; #import numpy as np. def test_threaded_blas():; threads = 20. times = {}. size = [200, 500, 2000, 4000]; threads = [1, threads]. for th in threads:; psi4.set_num_threads(th). for sz in size:; nruns = max(1, int(1.e10 / (sz ** 3))). a = psi4.core.Matrix(sz, sz); b = psi4.core.Matrix(sz, sz); c = psi4.core.Matrix(sz, sz). tp4 = time.time(); for n in range(nruns):; c.gemm(False, False, 1.0, a, b, 0.0). retp4 = (time.time() - tp4) / nruns. tnp = time.time(); for n in range(nruns):; np.dot(a, b, out=np.asarray(c)). retnp = (time.time() - tnp) / nruns; print(""Time for threads %2d, size %5d: Psi4: %12.6f NumPy: %12.6f"" % (th, sz, retp4, retnp)); if sz == 4000:; times[""p4-n{}"".format(th)] = retp4; times[""np-n{}"".format(th)] = retnp; assert psi4.get_num_threads() == th. rat1 = times[""np-n"" + str(threads[-1])] / times[""p4-n"" + str(threads[-1])]; rat2 = times[""p4-n"" + str(threads[0])] / times[""p4-n"" + str(threads[-1])]; print("" NumPy@n%d : Psi4@n%d ratio (want ~1): %.2f"" % (t",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/755:833,test,test,833,https://psicode.org,https://github.com/psi4/psi4/issues/755,2,['test'],"['test', 'tests']"
Testability,"Looks like you tried to fix the test cases that formerly tested scf findif-by-grad freq and now are accessing the analytic freq by adding `der_type=1`. Sounds like a good plan to me, as we don't want this PR lingering and getting out of sync. The `der_type=1` didn't work. Perhaps try `dertype=1`, which I think is what the driver acts on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-231261903:32,test,test,32,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-231261903,2,['test'],"['test', 'tested']"
Testability,"Lori introduced a mechanism to run any `ctest` through `pytest` [in a recent PR](https://github.com/psi4/psi4/pull/2454), so I don't think it'd be worth it unless there's a very clear ""test template"" that all of your tests follow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2513#issuecomment-1084628549:185,test,test,185,https://psicode.org,https://github.com/psi4/psi4/pull/2513#issuecomment-1084628549,2,['test'],"['test', 'tests']"
Testability,Lori says the parsing of manually specified (general) basis sets is a little quirky and could use improvement. We may have one user complaint on this topic we could use as a test case.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/43:174,test,test,174,https://psicode.org,https://github.com/psi4/psi4/issues/43,1,['test'],['test']
Testability,"Lori seems to have approved, and nobody else has put a hold on this PR in the week since I put out the last call, so I don't think there are objections from core devs. Fix the merge conflict, and I can merge it in once tests pass.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2093#issuecomment-932623393:219,test,tests,219,https://psicode.org,https://github.com/psi4/psi4/pull/2093#issuecomment-932623393,1,['test'],['tests']
Testability,"Lori, is there a way to link examples in the manual to test case input files?. Francesco. On Jul 17, 2015, at 8:50 PM, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, @ssh2https://github.com/ssh2. @tmpchemhttps://github.com/tmpchem hunted down all the malfunctioning manual entries this week. Two bullets fixed by psi4/psi4@e1bae5bhttps://github.com/psi4/psi4/commit/e1bae5b028c15aef889480978e4f70d247f8821e. ## . Reply to this email directly or view it on GitHubhttps://github.com/psi4/psi4public/issues/149#issuecomment-122461767. ---. This e-mail message (including any attachments) is for the sole use of; the intended recipient(s) and may contain confidential and privileged; information. If the reader of this message is not the intended; recipient, you are hereby notified that any dissemination, distribution; or copying of this message (including any attachments) is strictly; prohibited. If you have received this message in error, please contact; the sender by reply e-mail message and destroy all copies of the; original message (including attachments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/149#issuecomment-122476853:55,test,test,55,https://psicode.org,https://github.com/psi4/psi4/issues/149#issuecomment-122476853,1,['test'],['test']
Testability,MOM Bugfix and Test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2270:15,Test,Test,15,https://psicode.org,https://github.com/psi4/psi4/pull/2270,1,['Test'],['Test']
Testability,MP2 DFJK logic fix and DFJK docs,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1012:9,log,logic,9,https://psicode.org,https://github.com/psi4/psi4/pull/1012,1,['log'],['logic']
Testability,"MP2 only requires the `(ia|ia)` block of two-electron integrals. In density-fitting, this means only the `(P|Q)^-1/2 (Q|ia)` block of three-center ERIs is needed. Rob's `dfmp2` code transforms the `|μν)` integrals to `|ia)` first and then multiplies by `(P|Q)^-1/2`. Ugur's code multiplies by `(P|Q)^-1/2` first and then transforms the `|μν)` quantities to `|ia)`. I notice that at least for RHF (UHF not tested) Rob's code is much faster than Ugur's for this integral transformation step. Which isn't too surprising. The integral transformations have the same scaling, but Rob's `(P|Q)^-1/2` step is _O(aux^2 mo^2)_, while Ugur's is _O(aux^2 occ vir)_. Ugur's procedure makes sense in the general case where you also need `|ii)` and `|aa)` quantities, but not for MP2. After #1390 goes in, @bozkaya, would it make sense to have custom logic for DFMP2 to change the order of contractions? I think we would see significant speedups.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1726:405,test,tested,405,https://psicode.org,https://github.com/psi4/psi4/issues/1726,2,"['log', 'test']","['logic', 'tested']"
Testability,"MRCC-related CTests pass with an older version (2019 with some unknown patches) of MRCC, but the 2022 release broke the interface (again?).; For what its worth, it also no longer works with Molpro 2015. ```; (p4dev) gytibor@CRD-MILAN-3:~/psi4/objdir$ ctest -L mrcc -j`getconf _NPROCESSORS_ONLN` --rerun-failed --output-on-failure; Test project /home/gytibor/psi4/objdir; Start 499: mrcc-ccsdt; Start 500: mrcc-ccsd_t_; Start 501: mrcc-ccsdt_q_; Start 502: mrcc-rohf_ccsdt_q_; Start 503: mrcc-optfreq; 1/5 Test #499: mrcc-ccsdt .......................***Failed 0.62 sec; forrtl: No such file or directory; forrtl: severe (29): file not found, unit 75, file /tmp/mrcc_67625/KEYWD; Image PC Routine Line Source; dmrcc 0000000001284F08 Unknown Unknown Unknown; dmrcc 00000000012A12A2 Unknown Unknown Unknown; dmrcc 00000000004AE4BD Unknown Unknown Unknown; dmrcc 0000000000507E55 Unknown Unknown Unknown; dmrcc 000000000040D9DD Unknown Unknown Unknown; dmrcc 00000000004021AA Unknown Unknown Unknown; dmrcc 0000000000400DF2 Unknown Unknown Unknown; dmrcc 00000000013571F9 Unknown Unknown Unknown; dmrcc 0000000000400CCA Unknown Unknown Unknown; Traceback (most recent call last):; File ""/home/gytibor/psi4/objdir/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 27, in <module>; File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/driver.py"", line 599, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/psi4/objdir/stage/lib/psi4/driver/procrouting/proc.py"", line 4732, in run_mrcc; for line in open('iface'):. FileNotFoundError: [Errno 2] No such file or directory: 'iface'. Printing out the relevant lines from the Psithon --> Python processed input file:; h 1 1.0 2 104.5; """""",""h2o""); core.IO.set_default_namespace(""h2o""); core.set_global_option(""BASIS"", ""cc-pvdz""); core.set_global_option(""FREEZE_CORE"", ""true""); --> energy('mrccsdt'); compare_values( 8.801465529972, variable(""NUCLEAR REPULSION ENERGY""), 6, 'N",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2497:331,Test,Test,331,https://psicode.org,https://github.com/psi4/psi4/issues/2497,2,['Test'],['Test']
Testability,Mac-Psinet Testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/445:11,Test,Testing,11,https://psicode.org,https://github.com/psi4/psi4/pull/445,1,['Test'],['Testing']
Testability,"Make failing ""psi4 --test"" to return non-zero status",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1363:21,test,test,21,https://psicode.org,https://github.com/psi4/psi4/pull/1363,1,['test'],['test']
Testability,Make sure `dmrcc` is in your path https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc_table.py#L269. other logic is https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/proc.py#L1369,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3159#issuecomment-2071586810:125,log,logic,125,https://psicode.org,https://github.com/psi4/psi4/issues/3159#issuecomment-2071586810,1,['log'],['logic']
Testability,"Make sure you install. Sent from my Android (without spellcheck). Please forgive the brevity. On Jul 25, 2016 7:40 PM, ""Andy Simmonett"" notifications@github.com wrote:. > The patch I just pushed allows it to compile. The tests all fail instantly; > on my laptop, so I still have some more work to do, but that's almost; > certainly user error.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/psi4/psi4/pull/442#issuecomment-235119557, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AFCRi08tfysGPjLLYYwmAXVcqfjyQ7CVks5qZUlygaJpZM4JHR4P; > .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235119690:221,test,tests,221,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235119690,1,['test'],['tests']
Testability,"Makes sense to me. I will be heading home soon and they are still running. I will reply tomorrow morning with how the different fixes behaved, and, I will check for any ominous looking messages in the logfile.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2338#issuecomment-953192603:201,log,logfile,201,https://psicode.org,https://github.com/psi4/psi4/issues/2338#issuecomment-953192603,1,['log'],['logfile']
Testability,"Many of the modules got a size_t pass (eff. long int) during lgtm season. But no one dares touch Bozkaya modules until that PR (in my name) goes in, and that needs several tests added to ensure we’re not breaking stuff as we go.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1679#issuecomment-511962199:172,test,tests,172,https://psicode.org,https://github.com/psi4/psi4/issues/1679#issuecomment-511962199,1,['test'],['tests']
Testability,"Many tests fail: 143 failed, 576 warnings, 282 errors",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3099:5,test,tests,5,https://psicode.org,https://github.com/psi4/psi4/issues/3099,1,['test'],['tests']
Testability,"Matt can you run your test cases for a pure GGA (BLYP is fine). Be curious to see the timing difference there. I have a hunch that you may be a bit faster than you would expect not due to pure J construction cost, but data movement for the entire build.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-382565081:22,test,test,22,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-382565081,1,['test'],['test']
Testability,May be [fixed](https://github.com/Homebrew/homebrew-core/pull/516). @bennybp Do you have an easy setup to test this out?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/243#issuecomment-217271211:106,test,test,106,https://psicode.org,https://github.com/psi4/psi4/issues/243#issuecomment-217271211,1,['test'],['test']
Testability,Maybe I should mention that the current version works and I am running tests.; That's also why debug statement are still included.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1860#issuecomment-612134583:71,test,tests,71,https://psicode.org,https://github.com/psi4/psi4/pull/1860#issuecomment-612134583,1,['test'],['tests']
Testability,Maybe duplicate the test so that it tests `P::e.globals` and `Wfn.variables`. Or leave it as-is. It was a handy check that the globals was missing.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/697#issuecomment-300801278:20,test,test,20,https://psicode.org,https://github.com/psi4/psi4/issues/697#issuecomment-300801278,2,['test'],"['test', 'tests']"
Testability,Maybe just add these 2 tests to the Travis tests set?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404114896:23,test,tests,23,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404114896,2,['test'],['tests']
Testability,Maybe soscf (http://psicode.org/psi4manual/master/autodir_options_c/module__scf.html#soscf) as in https://github.com/psi4/psi4/blob/master/samples/soscf2/test.in,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/420#issuecomment-227933710:154,test,test,154,https://psicode.org,https://github.com/psi4/psi4/issues/420#issuecomment-227933710,1,['test'],['test']
Testability,"Me neither. Oh well, easier for me to patch up than outsider anyway. Plus, I finally figured out why `@using_snsmp2`, `@using_cppe`, etc. weren't enabling/skipping tests as they ought -- will be fixed in next qcel.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1929#issuecomment-643563633:164,test,tests,164,https://psicode.org,https://github.com/psi4/psi4/pull/1929#issuecomment-643563633,1,['test'],['tests']
Testability,"Meh, I'll make the change anyway. molden1 and molden2 tests are ok now. Thanks for the info! :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/454#issuecomment-237103831:54,test,tests,54,https://psicode.org,https://github.com/psi4/psi4/pull/454#issuecomment-237103831,1,['test'],['tests']
Testability,"Memory usage seems to climb upon repeating calculations in the same process. Here's my test script:. ```; import os; import psi4; import psutil. def check_resources():; process = psutil.Process(os.getpid()); return f""Memory used by process: {process.memory_info().rss / (1024 ** 2):.2f} MB"". cyanamide = psi4.geometry(""""""; C 0.000 0.239 0.000; N -0.044 1.395 0.000; N 0.134 -1.155 0.000; H -0.315 -1.556 0.837; H -0.315 -1.556 -0.837; """"""). for n in range(21):; psi4.energy(""r2scan-3c""); psi4.core.clean(). with open(""psi4.log"", ""a"") as f2:; f2.write(f""{n}: {check_resources()}\n""); ```. Here's what I get:. ```; 0: Memory used by process: 498.48 MB; 1: Memory used by process: 463.73 MB; 2: Memory used by process: 538.73 MB; 3: Memory used by process: 610.47 MB; 4: Memory used by process: 726.72 MB; 5: Memory used by process: 788.34 MB; 6: Memory used by process: 848.44 MB; 7: Memory used by process: 904.81 MB; 8: Memory used by process: 912.50 MB; 9: Memory used by process: 912.62 MB; 10: Memory used by process: 1016.02 MB; 11: Memory used by process: 1022.06 MB; 12: Memory used by process: 1037.52 MB; 13: Memory used by process: 1037.52 MB; 14: Memory used by process: 1036.77 MB; 15: Memory used by process: 1039.41 MB; 16: Memory used by process: 1039.16 MB; 17: Memory used by process: 1039.16 MB; 18: Memory used by process: 1039.16 MB; 19: Memory used by process: 1092.38 MB; 20: Memory used by process: 1094.72 MB; ```. After the first call, only about 500 MB of memory have been claimed; after 10 calls, this has crept up to over 1 GB. This could cause issues e.g. in an *ab initio* MD context, or simply in a lengthy optimization...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3207:87,test,test,87,https://psicode.org,https://github.com/psi4/psi4/issues/3207,2,"['log', 'test']","['log', 'test']"
Testability,"Mentioned in PR #975 . The behaviour between the two equivalent CBS modes is inconsistent when passed through nbody driver:. ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 0 0 2; }. set {; scf_type df; mp2_type df; cc_type df; e_convergence 7; reference rhf; }. E_method_basis = energy(""MP2/cc-pv[tq]z + D:CCSD(T)/cc-pv[dt]z"", bsse_type=""nocp""); E_cbs = energy(cbs, bsse_type=""nocp"", corl_wfn=""mp2"", corl_basis=""cc-pv[tq]z"",; delta_wfn=""ccsd(t)"", delta_basis=""cc-pv[dt]z""). compare_values(E_method_basis, E_cbs, 6, ""Interaction energy"") #TEST ; ``` . In the first case, `name = ""MP2/[...]""` so the sequence is:; ```; energy() -> _nbody_gufunc() -> [-> _cbs_gufunc() -> cbs()] * n => recurse back; ```; In the second case, `name = cbs` which has `__call__`, so:; ```; energy() -> cbs() -> [-> energy() -> _nbody_gufunc()] * x => recurse back; ```; I am not sure what the best way of solving this is: ; - option 1) is to extend the n-body driver to accept `__call__`-able `name`s, ; - option 2) is to bounce out of cbs() when `bsse_type` is passed in, but this would require generating a string-based representation of the cbs method anyway. I don't mind having a go at this once I know which is the preferred solution!",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/977:539,TEST,TEST,539,https://psicode.org,https://github.com/psi4/psi4/issues/977,1,['TEST'],['TEST']
Testability,Migrate energy-based `cc` tests to new standard,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2440:26,test,tests,26,https://psicode.org,https://github.com/psi4/psi4/pull/2440,1,['test'],['tests']
Testability,Mild reminder to throw in an [extra Windows test](https://github.com/psi4/psi4/pull/1760#issuecomment-568071614) to debug what I hope is a borderline tolerance instability.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-571203823:44,test,test,44,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-571203823,1,['test'],['test']
Testability,Mine attached ; [fci.log](https://github.com/psi4/psi4/files/6811314/fci.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2243#issuecomment-879327366:21,log,log,21,https://psicode.org,https://github.com/psi4/psi4/issues/2243#issuecomment-879327366,2,['log'],['log']
Testability,Misc. testing changes,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2397:6,test,testing,6,https://psicode.org,https://github.com/psi4/psi4/pull/2397,1,['test'],['testing']
Testability,Missing DFT Test coverage,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1266:12,Test,Test,12,https://psicode.org,https://github.com/psi4/psi4/issues/1266,1,['Test'],['Test']
Testability,"Modified sirius.chem.vt.edu sphinxman pages to redirect to . http://www.psicode.org/psi4manual/master/index.html. Please test at your convenience, loriab.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/112#issuecomment-121294877:121,test,test,121,https://psicode.org,https://github.com/psi4/psi4/issues/112#issuecomment-121294877,1,['test'],['test']
Testability,More distelli testing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449:14,test,testing,14,https://psicode.org,https://github.com/psi4/psi4/pull/449,1,['test'],['testing']
Testability,"Most (83%) fail. I've been using tu1 and scf5 in particular. Of all the test cases, only mrcc-ccsdt, mrcc-ccsdt_q_, psimrcc-pt2, cc36, cc55, dcft[12348], docs-*, fd-freq-energy, fd-freq-gradient, matrix1, mints[23459], mcscf1, mcscf3, mom, mp2-grad1, omp2-1, omp2-grad1, props1, psithon1, various pywraps, rasci-h2o, rasscf-sp, pubchem1, scf[34], zaptn-nh2 _do_ pass. And that's _with_ the aforementioned commenting.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/321#issuecomment-198629513:72,test,test,72,https://psicode.org,https://github.com/psi4/psi4/issues/321#issuecomment-198629513,1,['test'],['test']
Testability,"Most of tests include well-behaved molecules such as H2O. However, cd-omp2-2 includes the NO molecule, which has a problematic electronic structure. I tried it both on may mac and linux cluster (centos 6.3). In linux I used intel compiler and MKL. It is difficult to guess the source problem unless debugging the source code. I would debug the code but I can not reproduce the error on my machines. Therefore, I suspect that it might be related to the blas library.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-222317064:8,test,tests,8,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-222317064,1,['test'],['tests']
Testability,"Most of the developers have Travis turned on in our psi4 forks (esp. as we each hosted _the_ Psi4 for a different phase over the summer). So every time we push a branch and make a PR back to psi4/psi4, Travis is running twice. According to [this](https://docs.travis-ci.com/user/customizing-the-build#Safelisting-or-blocklisting-branches), we can turn on/off travis for certain branches. So this PR hopefully keeps Travis running on all the psi4/psi4 PRs and any long-term non-PR branches you add, while turning it off for the branches that are covered under psi4/psi4 master testing. At least I think that's how this works.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/595:576,test,testing,576,https://psicode.org,https://github.com/psi4/psi4/pull/595,1,['test'],['testing']
Testability,"Most repo's use travis CI as a full testing suite, which is great if your code is relatively light. However, Psi4 is a bit heavy for something like travis and a full build matrix could take days on a free account (assuming they don't send us a polite email). What I would like to see is a very light travis that does 5 builds (the maximum concurrent instances for a free travis account) with an option through Docker that will do full builds on local boxes. What this gives us is a cursory check in about an hour to make sure everything is going well before we either devote the resources for a full check or decide the change is trivial enough to not worry about (documentation, test suite additions, etc). Just would like to add that if we use travis, you basically _must_ let all test cases pass before merging.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/237#issuecomment-182581290:36,test,testing,36,https://psicode.org,https://github.com/psi4/psi4/pull/237#issuecomment-182581290,3,['test'],"['test', 'testing']"
Testability,Move CPPE tests to pytests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2140:10,test,tests,10,https://psicode.org,https://github.com/psi4/psi4/pull/2140,1,['test'],['tests']
Testability,Move incore/OOC decision logic for DPD sorting into a separate function,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2717:25,log,logic,25,https://psicode.org,https://github.com/psi4/psi4/pull/2717,1,['log'],['logic']
Testability,"My apologies on the late reply. I am unable to replicate this problem with icpc 16.0.2. Admittedly I used the version of Psi4 in #442. That being said, I am skeptical that fully scoping the function is actually causing @edeustua's compile error (I am fairly certain that you can always fully scope a function/type in C++). @edeustua, can you post the actual error log, as well as the configure command you used?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/444#issuecomment-232716913:364,log,log,364,https://psicode.org,https://github.com/psi4/psi4/issues/444#issuecomment-232716913,1,['log'],['log']
Testability,"My attempts to write a test failed, for the simple reason that I can't converge some of the SCFs. I'm adding EDIIS and ADIIS support before attempting this again. I'm not sure about ADIIS, but EDIIS works for fractional occupation SCF according to the original paper, so I can use that to make the problem easier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2289#issuecomment-916903299:23,test,test,23,https://psicode.org,https://github.com/psi4/psi4/issues/2289#issuecomment-916903299,1,['test'],['test']
Testability,"My best guess (with the latest development version 6833bd5645022b232b82e4ffc84496e5be143506) would be as follows, for a CCSD calculation:. molecule test {; N -0.0074552142 0.0447633077 0.0549133281; H 0.7912317854 0.0113343077 0.0235803281; H -0.3132442140 -0.8795806918 0.2831263280; H -0.3744022140 0.2462893076 -1.0696916713; units angstrom; }; set {; basis cc-pVDZ; freeze_core True; guess sad; }; e, wfn = energy('CCSD', return_wfn=True); molden(wfn, 'ccsd_no.molden', density_a=wfn.Da()). However, the file `ccsd_no.molden` does not give reasonable charges when loaded into Molden:. Mulliken Charges; ================; ; N -0.0793; H -0.4048; H -0.2581; H -0.5537; ; Sum of Mulliken Charges: -1.2959. (There were no such problems with Molden files from plain SCF calculations.). The sum of the occupation numbers in the Molden file is 6.0465. Shouldn't that sum be 10 in this example? Furthermore, with a too-low sum of occupation numbers, I would expect a positive sum of Mulliken charges, so presumably, there is something else going wrong too. I'm not sure if `wfn.Da()` is the right way to get the density matrix? That was just a guess.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/504:148,test,test,148,https://psicode.org,https://github.com/psi4/psi4/issues/504,1,['test'],['test']
Testability,"My compilations pass the ion-test, but I too get no psiapi speedup. But after using (another) of my openblas binaries for a bit I am not exactly happy. The FNO-DF-CCSD iterations do not seem to thread correctly, or very poorly. (visually checking with `top`). The conda `1.2rc2` binary I just tried is sooo much faster and puts good load on all 16 cores. At this point I don't feel like pursuing an OpenBLAS solution anymore. Maybe if our lab buys AMD servers...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-390898246:29,test,test,29,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-390898246,1,['test'],['test']
Testability,My current hypothesis: the OpenMP stuff I added in sointegral_twobody.h may be screwed up. It could be wiser to just completely remove all OpenMP reference in there and just set nthread = 0 for now.; As soon as the build is done on my machine I'll test it...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/387#issuecomment-222257195:248,test,test,248,https://psicode.org,https://github.com/psi4/psi4/pull/387#issuecomment-222257195,1,['test'],['test']
Testability,"My errors appeared before the code even loads – at the Python stage – and; happens on both my laptop and desktop Macs. I'm going to grab a fresh; clone and try it again (though I doubt that will fix the problem, given; that the error also occurs on my nightly test builds). But first I have to; land in Atlanta. -TDC. ## . Prof. T. Daniel Crawford; crawdad@vt.edu. On Tue, Feb 2, 2016 at 2:18 PM, Justin Turney notifications@github.com; wrote:. > Yup, that was our problem. The test cases are passing.; > ; > Not sure if @lothian https://github.com/lothian is doing something; > similar.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/230#issuecomment-178825893.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178826938:260,test,test,260,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178826938,2,['test'],['test']
Testability,"My goal is to use `psi4` for a mixed QM/MM simulation (mechanical and electrostatic embedding). I am aware of a previous issue (https://github.com/psi4/psi4/issues/341), however, I have a MD engine at hand and would like to use `psi4` as QM engine only (i.e. energies and gradients on a given molecule with external potential). In that regard, I am wondering what is the best way to use `psi4` to calculate gradients on external point charges from C++. . I am aware of the class `ExternalPotential`, which is demonstrated from the Python side here: https://github.com/psi4/psi4/tree/master/tests/extern1. It looks to me like the following function will return gradients on a given molecule caused by the points charges but not the other way round:. ```C++; /// Compute the gradients due to the external potential; SharedMatrix computePotentialGradients(std::shared_ptr<BasisSet> basis, std::shared_ptr<Matrix> Dt);; ```. However, I could not find any corresponding function that computes gradients on point charges. In case the functionality is not implemented yet, I am happy to volunteer code.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2472:590,test,tests,590,https://psicode.org,https://github.com/psi4/psi4/issues/2472,1,['test'],['tests']
Testability,"My guess is that the performance would be better with fewer threads, since too much parallellization can hurt performance. The 50 Hartree difference in energy suggests that the compilation on Summit is not good. Did you run the Psi4 test suite?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965:233,test,test,233,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2367489965,1,['test'],['test']
Testability,"My laptops finds accelerate on Yosemite without any options set as well. Could this be a Xcode issue?. -Daniel Smith; Sent from my iPhone. . > On Jul 16, 2015, at 18:37, Justin Turney notifications@github.com wrote:; > ; > We should not have to explicitly state the usage of the Accelerate; > framework. The test for the system BLAS is sufficient as libblas.\* and; > liblapack.\* both reference Accelerate. This has been the case for the last; > several versions of Mac OS X. Is this not the case of other people's Macs?; > ; > -Jet; > ; > ls -l /usr/lib/libblas\* /usr/lib/liblapack*; > /usr/lib/libblas.dylib ->; > ../../System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib; > /usr/lib/liblapack.dylib ->; > ../../System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib; > ; > Justin Turney, Ph.D.; > Senior Research Scientist; > CCQC/UGA; > ; > On Thu, Jul 16, 2015 at 6:18 PM, Lori A. Burns notifications@github.com; > wrote:; > ; > > Actually, you still do have to pass --accelerate to setup, as it's not on; > > by default. @robertodr https://github.com/robertodr , is there a reason; > > accelerate shouldn't be on by default for release builds?; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/psi4/psi4public/issues/36#issuecomment-122120131.; > > ; > > —; > > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/36#issuecomment-122124114:308,test,test,308,https://psicode.org,https://github.com/psi4/psi4/issues/36#issuecomment-122124114,1,['test'],['test']
Testability,"My one line of code worked, so this is ready for review. I'm still debating whether it's worth adding a test, given the timeout problems we've started to see and how hard it would be to trigger the bug this test would catch. The test question is the only holdup I see from being ready to merge.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1379#issuecomment-448456482:104,test,test,104,https://psicode.org,https://github.com/psi4/psi4/pull/1379#issuecomment-448456482,3,['test'],['test']
Testability,"My thoughts on the questions:; > How much validation do we want?. I would think that input would need to be validated always as the source is unknown, and output should be validated as part of the test suite, but then does not need to be validated at run-time before they are returned since (ideally) the test-suite ensures that our output jsons always adhere to the schema. Is there a best practice followed by applications using JSON APIs? For example does the JSON ""consumer"" always hold responsibility for checking that the object received is valid, or is it up to the JSON ""producer"" to ensure that objects are valid before sending them? . >A full test suite should like come from the schema itself?. Not sure what you mean here. Should the schema project provide functionality to validate objects that can be used by applications adhering to the schema to test that their JSON generating functions are generating valid objects? That would be great, and would reduce the amount of work that needs to be done by devs of individual QC packages to adopt the interface. > How we will we handle extra psi vars? Is the current setup sufficient.; If the schema allows for extra/arbitrary fields somewhere, we could provide all psivars/arrays there. If not then I guess we can just add handling of additional psivars in the future as they apply to new revisions of the schema?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/979#issuecomment-384995562:197,test,test,197,https://psicode.org,https://github.com/psi4/psi4/pull/979#issuecomment-384995562,4,['test'],"['test', 'test-suite']"
Testability,"NTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""VMFC-CORRECTED {nb}-BODY INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY THROUGH {nb}-BODY"", 1.7),; ""COUNTERPOISE CORRECTED TOTAL ENERGY"": (""CP-CORRECTED TOTAL ENERGY"", 1.7),; ""COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""CP-CORRECTED INTERACTION ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED TOTAL ENERGY"": (""NOCP-CORRECTED TOTAL ENERGY"", 1.7),; ""NON-COUNTERPOISE CORRECTED INTERACTION ENERGY"": (""NOCP-CORRECTED INTERACTION ENERGY"", 1.7),; ""VALIRON-MAYER FUNCTION COUTERPOISE TOTAL ENERGY"": (""VALIRON-MAYER FUNCTION COUNTERPOISE TOTAL ENERGY"", 1.7), # note misspelling; ""VALIRON-MAYER FUNCTION COUTERPOISE INTERACTION ENERGY"": (""VMFC-CORRECTED INTERACTION ENERGY"", 1.7),; ``` ; - [x] added managed mode for scf gradient. it's not wholly effective at consolidating code, though, since only triggers for `gradient(""hf"")`, not `gradient(correlated)`. digits to compare has to be relaxed, but this has been seen with other qc programs, too.; - [x] Distributed driver should not be advertised for use with QCFractal at this time. It hasn't been tested in a while, and mem, cores, etc. setting may need tweaking in a non-continuous mode. Use it experimentally and report back.; - [x] n-body wrapper can no longer do embedding with internally calculated Mulliken charges. Charges must now be provided with `embedding_charges` kwarg.; - [x] stdsuite: consolidated the caller fn to remove duplicate code. added HF Hessian testing, through DF can't be uncommented until refs released in qcng.; - [x] the addition of ccsd iterations qcvar to dfocc could maybe be reverted. ## Questions; - [x] Any critical eye or independent tests that you can bring to the manybody wrapper much appreciated, @jeffschriber. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2575:7257,test,tested,7257,https://psicode.org,https://github.com/psi4/psi4/pull/2575,6,"['Test', 'test']","['Tests', 'tested', 'testing', 'tests']"
Testability,Neat! `reap.py` looks general– can it be moved up into tests/ so that pywrap-db2 and pywrap-opt-sowreap can use it?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/192#issuecomment-157589425:55,test,tests,55,https://psicode.org,https://github.com/psi4/psi4/pull/192#issuecomment-157589425,1,['test'],['tests']
Testability,"Need to explicitly allow pickles (which we need to since building objects) in NumPy 16.3. See https://github.com/numpy/numpy/issues/12759 . @dgasmith, needed [here](https://github.com/psi4/psi4/blob/fbb2ff444490bf6b43cb6e027637d8fd857adcee/psi4/driver/p4util/numpy_helper.py#L385), too? quicktests passes w/o. This should fix travis. ## Checklist; - [ ] ~Tests added for any new features~; - [x] quicktests passes. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1607:355,Test,Tests,355,https://psicode.org,https://github.com/psi4/psi4/pull/1607,1,['Test'],['Tests']
Testability,"Nevermind, possibly. I had tried one increase of user memory and it still failed but when I double it, it works fine. So this test can be easily fixed. But the real question is are we willing to have more jobs pass through the in-core/disk choice stage with a false negative and instead hit the error further on. I'm thinking that's not good.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1233#issuecomment-428756860:126,test,test,126,https://psicode.org,https://github.com/psi4/psi4/pull/1233#issuecomment-428756860,1,['test'],['test']
Testability,New DFT Logic Documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/805:8,Log,Logic,8,https://psicode.org,https://github.com/psi4/psi4/pull/805,1,['Log'],['Logic']
Testability,"New LinK PR opened, comments on this are certainly welcome, but I still need to make my tests and update the docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2359#issuecomment-974334935:88,test,tests,88,https://psicode.org,https://github.com/psi4/psi4/pull/2359#issuecomment-974334935,1,['test'],['tests']
Testability,"New info is that http://d3f8ykwhia686p.cloudfront.net/1live/intel/Intel_PUMag_Issue11_CBWR.pdf is relevant. . Test case is dz/df/uhf via `for i in {1..20}; do MKL_CBWR=AVX stage/bin/psi4 chgbasic.in ; done`; * always passes: `COMPATIBLE`, `SSE2`, `AVX`, `AUTO`; * mixed pass/fail: `MKL_CBWR` unset; * always fails: `SSE4_2`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1896#issuecomment-633623036:110,Test,Test,110,https://psicode.org,https://github.com/psi4/psi4/pull/1896#issuecomment-633623036,1,['Test'],['Test']
Testability,"Nice, thanks for the heads up! I'll give it a test and then get it in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/263#issuecomment-185199613:46,test,test,46,https://psicode.org,https://github.com/psi4/psi4/issues/263#issuecomment-185199613,1,['test'],['test']
Testability,"No UHF-MP2 gradients in my code. Sorry. -Rob. On Mon, Jul 13, 2015 at 3:30 PM, Lori A. Burns notifications@github.com; wrote:. > for df-mp2, these are the cases:; > uhf energy: good, this is is Rob's code (we're pretty sure; test); > rohf energy: we think this may be in Rob's code, but not verified vs other; > codes; > uhf grad: we think this may be in Rob's code, but not verified vs other; > codes; > rohf grad: no good. Ugur doesn't support rohf scf being fed into his omp2; > w/o subsequent opt; > ; > ticket task: verify the above with the code and with the authors. if; > needed, re-route in driver (see mp2_type as example in proc.py. If; > anything looks to hard or want to defer, create a new ticket for it, and do; > all you can to close out this one.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/psi4/psi4public/issues/107.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/107#issuecomment-121080590:225,test,test,225,https://psicode.org,https://github.com/psi4/psi4/issues/107#issuecomment-121080590,1,['test'],['test']
Testability,No `nuke_frac` tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2289:15,test,tests,15,https://psicode.org,https://github.com/psi4/psi4/issues/2289,1,['test'],['tests']
Testability,No idea: the mp2-module test works fine using my branch on my computer. dfmp2-ecp also fails on my computer.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-447907994:24,test,test,24,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-447907994,1,['test'],['test']
Testability,"No merge goes unpunished ... Something of #1475 and the gdma interface aren't playing nicely. I'll look at it, but posting here for general notification and in case anyone takes it up while I do some meetings. ```; (p4dev37) psilocaluser@bash:psinet:/home/psilocaluser/gits/hrw-quaternary/objdir37: (master) stage/bin/psi4 ../tests/gdma/gdma1/input.dat . RHF density not found; Job abandoned; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1523:326,test,tests,326,https://psicode.org,https://github.com/psi4/psi4/issues/1523,1,['test'],['tests']
Testability,"No problem @andysim It was just, as you say, confusing! The updated `input.dat` is basically [`tests/props1/input.dat`](https://github.com/psi4/psi4/blob/master/tests/props1/input.dat) with CPCM for HF and KS-B3LYP. I will just update the `output.ref` and this one in ready to go :wink:",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/665#issuecomment-291544765:95,test,tests,95,https://psicode.org,https://github.com/psi4/psi4/pull/665#issuecomment-291544765,2,['test'],['tests']
Testability,"No problem on all the issues. Glad you're testing the code. The `env=lenv` is basically to fulfill the ""addons may be in PSIPATH or PATH"" promise and to remove envvar noise from the execution environment. [This](https://github.com/psi4/psi4/blob/master/psi4/driver/procrouting/interface_cfour.py#L142-L148) is pretty much it. My first thought is that there might be some envvar you have set that is important for `xcfour` to run correctly but is getting cut from `lenv`. Maybe `printenv` and see if anything looks likely? We can certainly pass more through if warranted.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/661#issuecomment-288484811:42,test,testing,42,https://psicode.org,https://github.com/psi4/psi4/issues/661#issuecomment-288484811,1,['test'],['testing']
Testability,"No problem on the failing test case. In fact, due to build infrastructure changes in another branch, these PRs will probably be cherry-picked onto the other branch rather than merged directly. The failing test case can be remedied by adding the extra arg to https://github.com/psi4/psi4/blob/master/share/python/driver.py#L1825 . Even if you set it up right in C++ with a default argument, Boost takes some convincing to allow that different signature automatically py-side. And since ""Kill the Boost"" is happening w/i a few weeks, no use working much with Boost on the alternate signature. (We're just replacing Boost with something else that will still allow exporting C++ functionality to Python)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/454#issuecomment-236931254:26,test,test,26,https://psicode.org,https://github.com/psi4/psi4/pull/454#issuecomment-236931254,2,['test'],['test']
Testability,"No problem, @amjames. PCM involves two PRs on two repos both being worked on by two people and has been through some non-trivial rebases. So I'm grateful to you for field-testing it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/599#issuecomment-279816796:171,test,testing,171,https://psicode.org,https://github.com/psi4/psi4/pull/599#issuecomment-279816796,1,['test'],['testing']
Testability,"No problem, @andysim, I'm glad my practical tests and your docs readings are in agreement. Do you or @jturney happen to know the ""restrict"" status of libint?; - grepping the code, there's no trace of `restrict`; - it's written in C so restrict should be handled automatically (I think); - except the generated files are `.cc`, so CMake builds them as `CXX`, where imposing restrict would need detection of the proper compiler flag; - if libint _is_ written under the restrict contract, we need to either; - change the `.cc` to `.c` so CMake builds them as C and handles restrict internally; - add CXX restrict detection to CMake (psi4 already has it, so just needs transferring)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-241076197:44,test,tests,44,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-241076197,1,['test'],['tests']
Testability,"No reason it needs to be 'roa'. The point is that the code which executes; right now when one selects 'roa' is already doing the IR intensities; correctly. If we otherwise have IR intensities working, then just ignore; this post. I did MP2 because Spartan and Psi could. Presumably with the; new CCSD gradient with fields check-in last weekend, the CCSD intensities; would work too, but I haven't checked that. The input file could certainly; be simplified, including trying to eliminate some of the restrictions and; seeing if there is any impact on the IR intensities. I thought it might be; helpful if someone else would like to start from that point. On Mon, Nov 27, 2017 at 9:22 AM, Lori A. Burns <notifications@github.com>; wrote:. > @psi-rking <https://github.com/psi-rking>, great, thanks for the; > prototype. Maybe put your post at #402; > <https://github.com/psi4/psi4/issues/402> and mention it in the newdev; > slack channel. Also,; >; > - is there anything particular to MP2 or is that just what you tested; > against?; > - general fyi is that there's multi-QC-package vib outputs in the; > isotope-1 test cases that also may have some intensities; > - how rigorous is that c1/no_com/no_reorient req. in your input file.; > Absolutely required to get the right charge origin? Or could we run with; > symmetry if we knew how to transform the Hessian or perturbation vectors; > into better frame? Is it different for charged species?; > - why ""roa""? Just because it brings dipole derivatives for free?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/347#issuecomment-347215160>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADguTMMsKLuYghtYIPsfAYOmbk9WBCBXks5s6tPSgaJpZM4II2n7>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/347#issuecomment-347240852:1014,test,tested,1014,https://psicode.org,https://github.com/psi4/psi4/issues/347#issuecomment-347240852,2,['test'],"['test', 'tested']"
Testability,"No worries, this was easy compared to the actual libint2 interface that you all had to write and test. I've updated the post to clarify that this PR closes #2114. I found and updated only one test with an unnecessary `ints_tolerance 0`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750:97,test,test,97,https://psicode.org,https://github.com/psi4/psi4/pull/2139#issuecomment-804380750,2,['test'],['test']
Testability,"No, I didn't. But HANDE CCMC tests are passing when these fcidumps are used; instead of their references. Both for the RHF and UHF integral dumps. On Wed, Feb 28, 2018, 23:23 Daniel Smith <notifications@github.com> wrote:. > @robertodr <https://github.com/robertodr> Did you get a chance to run; > this through the FCI code?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/872#issuecomment-369404382>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ADiXEZMUPsD83h5I9sIOXp4KIQj7H6shks5tZdHRgaJpZM4QyuVF>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/872#issuecomment-369495195:29,test,tests,29,https://psicode.org,https://github.com/psi4/psi4/pull/872#issuecomment-369495195,1,['test'],['tests']
Testability,"No, I didn’t specify --python at configure time. No need to rush … my fork works!. On May 12, 2016, at 11:45 AM, Lori A. Burns notifications@github.com wrote:. > Sure. Those two are usually the same– for curiosity, is your setup where you're not passing setup --python=sldfjsl to the psi4 build?; > ; > Will merge after the travis build, unless you're trying to test it right away, in which case I'm glad to accept immediately, since that line can't hurt anything.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/378#issuecomment-218800184:362,test,test,362,https://psicode.org,https://github.com/psi4/psi4/pull/378#issuecomment-218800184,1,['test'],['test']
Testability,"No, I don't have a mac. I had been waiting for the official 1.61 to come out to actually test it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/243#issuecomment-217272738:89,test,test,89,https://psicode.org,https://github.com/psi4/psi4/issues/243#issuecomment-217272738,1,['test'],['test']
Testability,"No, I don't have any other comment. I can hardly follow your conversation ;-); Thanks for your efforts!. > Am 04.02.2020 um 18:19 schrieb Holger Kruse <notifications@github.com>:; > ; > Ah! I wasn't aware of all the changes introduced by #1770 <https://github.com/psi4/psi4/pull/1770>. My point has been addressed.; > The test calculation does not crash and relativistic effects are included where they should be.; > I tested DKH and X2C.; > ; > This can be closed unless @ludgerpalm <https://github.com/ludgerpalm> has another comment/question to the topic?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/psi4/psi4/issues/1791?email_source=notifications&email_token=AONKCKFUAWDAESNBZ5RAYNDRBGPRFA5CNFSM4KNSN4LKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKYOSIA#issuecomment-582019360>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AONKCKGEQ6YJT4U5MX7YI73RBGPRFANCNFSM4KNSN4LA>.; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1791#issuecomment-582050346:322,test,test,322,https://psicode.org,https://github.com/psi4/psi4/issues/1791#issuecomment-582050346,2,['test'],"['test', 'tested']"
Testability,"No, I don't run tests with _any_ MPI, and my test-running is the only one that counts for binary-building. Others (https://testboard.org/cdash/index.php?project=Psi) _may_ run with MPI, but I wouldn't bet on it. Our cmake build system is getting another re-write by the one person invested in MPI and Psi4 so it's possible the `mpiexec` vs. `mpirun` is addressed (though I think he's testing with gcc tools). Flagging @ryanmrichard so he knows this is an issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/436#issuecomment-230526252:16,test,tests,16,https://psicode.org,https://github.com/psi4/psi4/pull/436#issuecomment-230526252,4,['test'],"['test-running', 'testboard', 'testing', 'tests']"
Testability,"No, I think the trouble is that the Hessian has changed, not a problem with the test code. Look at the clean `0.3061` elements in the upper right 3x3 of the `obs:` eigenvectors below (c. last week) vs. above (this PR). I'm not sure if the guess change is to blame or something after it, but the problem is not the purely in-test evec regularization I first suspected. ```; omega : True; 	exp: [ 1433.2785 1433.2785 1433.2785 1647.8698 1647.8698 3164.8164; 3285.6166 3285.6166 3285.6166]; 	obs: [1433.27806883+0.j 1433.27806887+0.j 1433.27806888+0.j 1647.86973121+0.j; 1647.86973124+0.j 3164.81841753+0.j 3285.61874563+0.j 3285.61874569+0.j; 3285.61874571+0.j]; 	dif: [-4.31173686e-04+0.j -4.31127530e-04+0.j -4.31121772e-04+0.j; -6.87897177e-05+0.j -6.87593285e-05+0.j 2.01752747e-03+0.j; 2.14562915e-03+0.j 2.14569447e-03+0.j 2.14571466e-03+0.j]; gamma : False; 	exp: ['T2', 'T2', 'T2', 'E', 'E', 'A1', 'T2', 'T2', 'T2']; 	obs: ['B2' None None 'A2' 'A1' 'A1' 'B1' 'A1' 'B2']; 	dif: Different, inspect arrays; IR_intensity : True; 	exp: [ 9.8963 9.8963 9.8963 0.0000 0.0000 0.0000 34.4012 34.4012; 34.4012]; 	obs: [ 9.8965 9.8965 9.8965 0.0000 0.0000 0.0000 34.4016 34.4016; 34.4016]; 	dif: [ 0.0002 0.0002 0.0002 0.0000 0.0000 0.0000 0.0004 0.0004 0.0004]; q : True; 	exp: ; [[-0.0000 -0.3972 -0.0000 0.0000 0.0000 0.0000 0.0000 -0.0000 -0.3061]; [ 0.0000 -0.0000 -0.3972 0.0000 -0.0000 -0.0000 0.0000 -0.3061 -0.0000]; [ 0.3972 -0.0000 -0.0000 -0.0000 0.0000 -0.0000 0.3061 -0.0000 -0.0000]; [ 0.0000 0.5585 -0.0000 0.0000 0.5000 -0.0000 -0.0000 -0.0000 -0.0160]; [-0.3052 -0.0000 0.1268 0.2887 0.0000 0.4082 0.3960 0.5441 -0.0000]; [-0.3426 -0.0000 0.3052 0.4082 0.0000 -0.2887 -0.2641 -0.3960 -0.0000]; [ 0.0000 0.5585 -0.0000 0.0000 -0.5000 -0.0000 -0.0000 0.0000 -0.0160]; [ 0.3052 -0.0000 0.1268 -0.2887 0.0000 -0.4082 -0.3960 0.5441 -0.0000]; [-0.3426 -0.0000 -0.3052 0.4082 0.0000 -0.2887 -0.2641 0.3960 -0.0000]; [-0.3052 0.1268 0.0000 -0.2887 0.0000 -0.4082 0.3960 -0.0000 0.5441]; [ 0.0000",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-452076781:80,test,test,80,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-452076781,2,['test'],['test']
Testability,"No, it doesn't matter. The testing is triggered every time a commit is pushed, or every time a PR is created. The bugfix commit (0188418) test is running now, and then the merge commit that followed it will be tested after that (both appear on this PR). Then the tests for the new PR will pick up, but will be identical to the tests for 9a20655 from here. Closing a PR doesn't stop Travis from running the tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/224#issuecomment-175868491:27,test,testing,27,https://psicode.org,https://github.com/psi4/psi4/pull/224#issuecomment-175868491,6,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"No, not yet. The job is so big I get distracted waiting for it to crash. I just set up a few mores tests to try to diagnose it again.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/34#issuecomment-37976516:99,test,tests,99,https://psicode.org,https://github.com/psi4/psi4/issues/34#issuecomment-37976516,1,['test'],['tests']
Testability,"No, that wasn’t intentional. If it’s new since ~12 days ago, it probably has to do with removal of the Makefile system. In any case, should integrate the plugins better with cmake and make them test cases again so that we know when they break. Thanks for the notice. Lori. > On Mar 18, 2015, at 10:42 AM, Sebastian Wouters notifications@github.com wrote:; > ; > Dear all,; > ; > I have built the latest version of psi4 with plugins:; > ; > BLA_VENDOR=Intel10_64lp CXX=icpc CC=icc cmake .. -DENABLE_PLUGINS=ON -DENABLE_DUMMY_PLUGIN=ON; > and can create new plugins and compile them. However, the old examples, typically in the folder; > ; > /path/to/source/psi4/objects/plugins/; > are not generated anymore. I don't know if this was intentional?; > ; > Best regards,; > Sebastian; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/78.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/78#issuecomment-83015983:194,test,test,194,https://psicode.org,https://github.com/psi4/psi4/issues/78#issuecomment-83015983,1,['test'],['test']
Testability,"None of my ADCC tests are passing; all have the same problem. It's an old psi4dev Conda environment, so I should probably remake that first.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2388#issuecomment-1004922562:16,test,tests,16,https://psicode.org,https://github.com/psi4/psi4/pull/2388#issuecomment-1004922562,1,['test'],['tests']
Testability,Nonsense test of pull requests.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/33:9,test,test,9,https://psicode.org,https://github.com/psi4/psi4/pull/33,1,['test'],['test']
Testability,"Nope, can't see that. I takes me to the login page and, after I login, it sends me to the 404 page (with poetry on it).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235121786:40,log,login,40,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235121786,2,['log'],['login']
Testability,"Nope, just an oversight on my part. Good catch. Most of the changes to the tests that I made were a result of high precision checks failing (3 point f.d. vs. analytic can be a little noisy), so I was just doing trial and error to figure out where things needed to be updated. I must have missed this one, because I just saw that it timed out on my machine. Sorry about that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-235365542:75,test,tests,75,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-235365542,1,['test'],['tests']
Testability,"Normally Psi4 gives me helpful error messages but in this case I have poked around a bit and can't figure out how to fix my input. I'm trying to create input files with all basis data supplied from within the file itself, so old jobs are self-documenting. I am trying to run the input below with the latest binary installed via conda. It crashes with the message. ```; Traceback (most recent call last):; File ""<string>"", line 59, in <module>; Boost.Python.ArgumentError: Python argument types in; psi4.scf(str); did not match C++ signature:; scf(void); scf(P7_object, P7_object); ```. Here is the input I am trying to run. I've made some mistake trying to implement what I read in the docs, but I can't figure out what. I retrieved the basis set data in Gaussian 94 format from the EMSL Basis Set Exchange. ```; #methane test. molecule {; #charge multiplicity; 0 1; C0 0.000000 0.000000 0.000000; H0 1.092199 0.000000 -0.000001; H0 -0.364063 0.138497 1.020380; H0 -0.364067 -0.952923 -0.390247; H0 -0.364068 0.814425 -0.630132; }. set globals {; reference RHF; maxiter 999; }. basis {; assign C0 C0bas; assign H0 H0bas; #C 3-21G; [ C0bas ]; cartesian; ****; C 0 ; S 3 1.00; 172.2560000 0.0617669 ; 25.9109000 0.3587940 ; 5.5333500 0.7007130 ; SP 2 1.00; 3.6649800 -0.3958970 0.2364600 ; 0.7705450 1.2158400 0.8606190 ; SP 1 1.00; 0.1958570 1.0000000 1.0000000 ; ****; #H 3-21G; [ H0bas ]; cartesian; ****; H 0 ; S 2 1.00; 5.4471780 0.1562850 ; 0.8245470 0.9046910 ; S 1 1.00; 0.1831920 1.0000000 ; ****; }. scf('energy'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/79:822,test,test,822,https://psicode.org,https://github.com/psi4/psi4/issues/79,1,['test'],['test']
Testability,"Not quite so great as it looks on the testing front, as I'm copying tests from one repo to another. Properly, I wanted to shift psi's testing so that each native ctest dir has a one-line mirror run through pytest. Then pytest can automatically pick up other projects' (also pytest) tests from their install locations. Thus no test duplication, tests stay synched, and all testing available for _installed_ software, too. But that seemed like a deep rabbit hole, so just copied the tests :-) Maybe at least I can keep v2rdm in working order now.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/866#issuecomment-350503264:38,test,testing,38,https://psicode.org,https://github.com/psi4/psi4/pull/866#issuecomment-350503264,8,['test'],"['test', 'testing', 'tests']"
Testability,"Not quite. The testing is just a guide that helps us to determine whether to accept a PR or not; the outcome of the tests does not affect GitHub's handling of the merge at all. So in your example above, all 5 commits would be pulled in. I was trying to make the following point, but didn't explain well at all:. Say you open a pull request with three commits, but discover that the tests don't pass. If you were to continue pushing commits to your GitHub repo branch (the same one you based the PR on), those commits would continue to be added real-time to the original PR automatically. Therefore there's no need to close the PR when you find that it's broken, and re-open a new one when it's fixed. In fact I think it's better to just leave the original one open, because it allows a discussion to take place, amongst the commits, and the team can hopefully jump in with solutions to whatever problems were created. It's up to you, or whomever actually accepts the PR, to make sure that the final commit in the PR passes the tests before accepting it. The Travis CI testing helps us to quickly make that determination, and GitHub helpfully tells us whether the merge can happen without conflicts. I hope this clears things up a little.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/224#issuecomment-175882141:15,test,testing,15,https://psicode.org,https://github.com/psi4/psi4/pull/224#issuecomment-175882141,5,['test'],"['testing', 'tests']"
Testability,"Not related to the issue at hand, but since changes are made to it:; On Apple Silicon ARM the `-march=native` flag is not recognized with Apple's clang 13.; It could e.g. be disabled with an `if (NOT CMAKE_HOST_SYSTEM_PROCESSOR STREQUAL ""arm64"")` for clang gnu (that's tested) but that would nest `if` statements even more.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2384#issuecomment-997161576:269,test,tested,269,https://psicode.org,https://github.com/psi4/psi4/pull/2384#issuecomment-997161576,1,['test'],['tested']
Testability,"Not sure what happened to the `C`, but the remainder of the valid string probably got mistaken for a comment and removed. While Psithon + preprocessing is very capable for interfacing Python and simple-to-moderate QC, the Psithon preprocessor would need to be considerably more sophisticated (ast module, I presume) to allow especially `#` to be treated correctly. I recommend using Python directly with PsiAPI (examples [here](https://github.com/psi4/psi4/tree/master/tests/pytest)). Psithon will never go away, but the developers are gradually moving toward primary PsiAPI use. . Thanks for the report, though. Any of these with ready solutions (like, I think, the `.isidentifier()` for molecule names) we'll gladly incorporate.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/655#issuecomment-287638234:469,test,tests,469,https://psicode.org,https://github.com/psi4/psi4/issues/655#issuecomment-287638234,1,['test'],['tests']
Testability,"Not too helpful: https://testboard.org/cdash/testDetails.php?test=1588753&build=22769 https://testboard.org/cdash/testDetails.php?test=1588753&build=22769. And when I run it outright (not nightly build) it passes. End of output file from nightly build below. But it’s not showing up as timed out. **\* tstart() called on psinet; **\* at Tue Jul 21 03:07:41 2015. ```; *******************************************************; * *; * QCISD(T) *; * *; *******************************************************. num_threads: 1; available memory: 244.14 mb; memory requirements: 0.52 mb. Number of ijk combinations: 20. Computing (T) correction... % complete total time; ```. > On Jul 21, 2015, at 12:08 PM, Eugene DePrince notifications@github.com wrote:; > ; > Can I see the errors from RHEL7 conda? I can't reproduce this one.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/121#issuecomment-123386880.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/121#issuecomment-123394642:25,test,testboard,25,https://psicode.org,https://github.com/psi4/psi4/issues/121#issuecomment-123394642,6,['test'],"['test', 'testDetails', 'testboard']"
Testability,"Note that I have no doubt Mol was thoroughly tested for all these things in its development and was in pristine working order. But we didn't have the notion of preserving those unit tests for a future refactoring. So I'm just trying to convey that downstream may rely on the inconsistency and changes that in class development may have been a ""fix"" are now a ""refactoring"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/909#issuecomment-363476390:45,test,tested,45,https://psicode.org,https://github.com/psi4/psi4/issues/909#issuecomment-363476390,2,['test'],"['tested', 'tests']"
Testability,"Now *Azure* can build an optimized *Psi4*, run all the tests, and make a conda package: https://dev.azure.com/raimisg/psi4/_build/results?buildId=569. Queue time variables:; ```; cmake.build_type= Release; conda.build=true; ctest.type=full; pytest.type=full; python.version=3.6; ```. The built package is on *Anaconda*: https://anaconda.org/raimis/psi4/files. You can install and try:; ```; conda install -c raimis -c conda-forge psi4",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1560#issuecomment-468745000:55,test,tests,55,https://psicode.org,https://github.com/psi4/psi4/pull/1560#issuecomment-468745000,1,['test'],['tests']
Testability,"Now I get; ```; + ctest -L smoketests; Test project /builddir/build/BUILD/psi4-1.3.2/redhat-linux-build/tests; Start 7: casscf-sp; Could not find executable ; Looked in the following places:; Release/; Release/; Debug/; Debug/; MinSizeRel/; MinSizeRel/; RelWithDebInfo/; RelWithDebInfo/; Deployment/; Deployment/; Development/; Development/; 1/12 Test #7: casscf-sp ........................***Not Run 0.00 sec; ```; It did seem to install the executable, though.; https://koji.fedoraproject.org/koji/watchlogs?taskID=104800455",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3020#issuecomment-1676504482:39,Test,Test,39,https://psicode.org,https://github.com/psi4/psi4/issues/3020#issuecomment-1676504482,3,"['Test', 'test']","['Test', 'tests']"
Testability,"Now I have removed the variable set from Library. Unfortunately, didn't help. When I remove the catch-unconfigured checks (https://github.com/psi4/psi4/pull/1543/commits/f00ca3d63871c22411989a744ffbfbd33664eed7), it looks like the vars are defined and running in [this azure log](https://dev.azure.com/psi4/psi4/_build/results?buildId=554), so maybe there's just syntax trouble there.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1527#issuecomment-464954810:275,log,log,275,https://psicode.org,https://github.com/psi4/psi4/pull/1527#issuecomment-464954810,1,['log'],['log']
Testability,Now Travis fails... 😦 ; Some tests involving `test_qcng_dftd3.py::test_mp2d__run_mp2d__2body` and `test_mp2d` are breaking. Any hints on that?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1657#issuecomment-499629662:29,test,tests,29,https://psicode.org,https://github.com/psi4/psi4/pull/1657#issuecomment-499629662,1,['test'],['tests']
Testability,"Now is a good time for the logic pass-through for `mass` and `Z`. I know there's a few places where molecular weight is being calculated, and those probably don't want to have ghost atom masses counted, so I will change those to `zero_ghost = true`. Many of the other cases I'm unfamiliar with their ""intended behavior"" so if anyone else sees places where the behavior should change let me know. Otherwise I'm defaulting to previous behavior. @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/990#issuecomment-386180769:27,log,logic,27,https://psicode.org,https://github.com/psi4/psi4/pull/990#issuecomment-386180769,1,['log'],['logic']
Testability,"Now no longer zero-length, it has license text! You're right that the file is useless, but it's an implementation stub, and it's in the attic and unused, so I'm leaving it be rather than deleting it and changing a dozen files to remove the header include. If this is still a problem, reopen the issue, and I'll see what can be done.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/5#issuecomment-121327206:114,stub,stub,114,https://psicode.org,https://github.com/psi4/psi4/issues/5#issuecomment-121327206,1,['stub'],['stub']
Testability,"Now that I can run some VTune tests myself, there is definitely an efficiency hit from this PR. The explicit copy in the last commit contributes a _lot_ of overhead. If we want to flatten the tuples, this should be done in the index itself, not in the `IndexIterator`. With that commit reverted, we're looking at 62.4 seconds (pre-PR) vs 75.5 seconds (post-PR) for an Mk-MRCCSD(T) single point with 82 basis functions divided into irreps of 53 and 29, in serial. I can give more detailed machine diagnostics if needed, but I think the point is clear. I'll work on getting the speed restored while waiting for reviews on my other live PR. This is a good opportunity to learn about how to make C++ code efficient, at least.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1901#issuecomment-640146254:30,test,tests,30,https://psicode.org,https://github.com/psi4/psi4/pull/1901#issuecomment-640146254,1,['test'],['tests']
Testability,"Now that I can see the log, I notice that you're building with AM=5. If you plan to add some CBS tests that need _h_ functions, we should bump the Travis setup. If not, we should reduce Disteli's AM, to speed it up.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/449#issuecomment-235419669:23,log,log,23,https://psicode.org,https://github.com/psi4/psi4/pull/449#issuecomment-235419669,2,"['log', 'test']","['log', 'tests']"
Testability,"Now that OCC densities are on the wavefunction (#2072) test whether OCC works with FCHK now. Enable them if they do, and add a test.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2622:55,test,test,55,https://psicode.org,https://github.com/psi4/psi4/issues/2622,2,['test'],['test']
Testability,"Now that all the tests pass (travis working again), I think this can be merged. ping @loriab",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1401#issuecomment-528733056:17,test,tests,17,https://psicode.org,https://github.com/psi4/psi4/pull/1401#issuecomment-528733056,1,['test'],['tests']
Testability,"Now that you made me think of it, you're right, they do not need to be always copied back. In addition, I don't think these files are so important that there needs to be a `KEEP` input keyword. I would rather copy them back ""by hand"" in the input script and the tests can serve as an example for the pattern. Is there a Python function to copy them back from scratch? I see [this](https://github.com/psi4/psi4/blob/master/psi4/driver/p4util/util.py#L436-L485) but then the namespace is ""mangled"" using UUID and I don't quite know how to get the full path to the execution directory.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/665#issuecomment-290334388:262,test,tests,262,https://psicode.org,https://github.com/psi4/psi4/pull/665#issuecomment-290334388,1,['test'],['tests']
Testability,"Np. it looks like you removed legacy freq and wfn. I had removed legacy molcule, grad, and wfn. Legacy should be fully purged! :tada: Building and testing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2727#issuecomment-1332446099:147,test,testing,147,https://psicode.org,https://github.com/psi4/psi4/pull/2727#issuecomment-1332446099,1,['test'],['testing']
Testability,"NumPY-1.24.0 got released in late December, and Debian's psi4 (still based on 1.3 due to LibInt) now fails (most of) the testsuite like this:. ```; 133/143 Test #406: python-curve .....................***Failed 0.42 sec; Traceback (most recent call last):; File ""/<<PKGBUILDDIR>>/tests/python/curve/input.py"", line 21, in <module>; out[d] = psi4.energy('SCF', molecule=geom); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/driver.py"", line 556, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/procrouting/proc.py"", line 2002, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/procrouting/proc.py"", line 1276, in scf_helper; base_wfn = core.Wavefunction.build(scf_molecule, core.get_global_option('BASIS')); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/p4util/python_helpers.py"", line 115, in _core_wavefunction_build; basis = core.BasisSet.build(mol, ""ORBITAL"", basis); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/p4util/python_helpers.py"", line 79, in _pybuild_basis; bs, basisdict = qcdb.BasisSet.pyconstruct(; ^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/qcdb/libmintsbasisset.py"", line 635, in pyconstruct; mol = Molecule(mol); ^^^^^^^^^^^^^; File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/qcdb/molecule.py"", line 143, in __init__; self._internal_from_dict(molrec, verbose=verbose); File ""/<<PKGBUILDDIR>>/builddir/stage/lib/x86_64-linux-gnu/psi4/driver/qcdb/molecule.py"", l",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2865:121,test,testsuite,121,https://psicode.org,https://github.com/psi4/psi4/issues/2865,3,"['Test', 'test']","['Test', 'tests', 'testsuite']"
Testability,OH to c1 for test consistency,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2264:13,test,test,13,https://psicode.org,https://github.com/psi4/psi4/pull/2264,1,['test'],['test']
Testability,"OInt::create_sieve_pair_info()` function via the new wrapper function `TwoBodyAOInt::initialize_sieve()`. Multiple JK builds rely on values of variables initialized via `create_sieve_pair_info()` , and `initialize_sieve()` is now used to initialize the required variables if `SCREENING = NONE` is set. In this way, `SCREENING = NONE` can exist with the benefits it provides, while still working with all JK builds. Also, changes are made to ensure that no screening actually occurs in JK builds when `SCREENING` is set to `NONE`. In line with the above, some tests have been expanded. `test_comprehensive_jk_screening.py` has been changed to account for the `SCF_TYPE`/`SCF_SUBTYPE`/`SCREENING` combinations that were fixed. `test_erisieve.py` has been updated to more thoroughly test `SCREENING=NONE`. It is worth noting that, unfortunately, `TwoBodyAOInt::initialize_sieve()` must be defined per integral engine, and so the fixes of this PR only work with Libint2. The issues this PR tries to fix, still persist if Simint is used instead. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new function to `TwoBodyAOInt`, `initialize_sieve`, which allows for manual initialization of screening variables via `create_sieve_pair_info()` needed for JK builds.; - [X] Uses the above function to fix combinations of `SCF_TYPE`, `SCF_SUBTYPE`, and `SCREENING` which were broken.; - [X] Updates the `test_comprehensive_jk_screening.py` and `test_erisieve.py` test to account for the previously-described fixes. ## Questions; -[] Should we keep the `initialize_sieve` name? I named it as such, because it is basically a light wrapper to manually call `create_sieve_pair_info`. But the name of ""sieve"" might be objectionable. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3060:2348,test,test,2348,https://psicode.org,https://github.com/psi4/psi4/pull/3060,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,OK! All tests pass. It was good to go.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408926413:8,test,tests,8,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408926413,1,['test'],['tests']
Testability,"OK, I've re-ordered the two tests so that they don't crash without `clean()`. I had hoped that this PR might have sorted out this `clean()` issue, but for true CBS methods (ie. not just method/basis syntax), it's unfortunately still there when switching basis sets. The test is meant to test the ""new"" functionality: allowing ""method/basis"" syntax with `sapt2+(3)` and `+ D:` correction with augmented Pople basis sets (both previously crashed due to ""+""). @dgasmith do you want to include some `property()` or `frequencies()` calls in the test too?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379844526:28,test,tests,28,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379844526,4,['test'],"['test', 'tests']"
Testability,"OK, downloading the full log file I see that the error in ```mp2-module``` is on the line; ```--> compare_matrices(mp2totg, retG, 6, theme) ```. and the largest error is actually 1.91e-6, and 2.76e-6 to what I get on my workstation with ```master```. Looks like the numerical tolerance is just set too tight for the finite-difference algorithm.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-447944642:25,log,log,25,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-447944642,1,['log'],['log']
Testability,"OK, if you could post the dicts which you used to run the functionals, that'd be much appreciated - I'll add the tests later, separately.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1645#issuecomment-492614066:113,test,tests,113,https://psicode.org,https://github.com/psi4/psi4/pull/1645#issuecomment-492614066,1,['test'],['tests']
Testability,"OK, it works now. I reimplemented it in a different way and now it matches nwchem and the w=0.0 result of the range-separated functional built using the HJS recipe. Not sure what happened there. I have added a test in dft1, and the reference nwchem input and output.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/438#issuecomment-231920606:210,test,test,210,https://psicode.org,https://github.com/psi4/psi4/pull/438#issuecomment-231920606,1,['test'],['test']
Testability,"OK, now it's such that one of the three test cases uses `Wfn.variables` while the other two still use `P::e.globals`",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/697#issuecomment-300808824:40,test,test,40,https://psicode.org,https://github.com/psi4/psi4/issues/697#issuecomment-300808824,1,['test'],['test']
Testability,"OK, tests appear to pass now with all guesses. I can't generate `output.ref` so I would appreciate if someone can compile the branch locally and contribute the missing files.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2411#issuecomment-1016808691:4,test,tests,4,https://psicode.org,https://github.com/psi4/psi4/pull/2411#issuecomment-1016808691,1,['test'],['tests']
Testability,"OK, this should be working 100% now. The output looks correct on all the systems I've run so far, and I've added tests. I initially tried to use H2O, but it seems there's something weird going on with the CI wave functions there. Namely, when the CI wave function appears to flip its overall sign between the computed and the reference wave function, there are some configurations that *do not* flip their sign. I guess this must be some weird thing to do with symmetry, in that the wave function can individually flip signs within symmetry subblocks...?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/700#issuecomment-301282245:113,test,tests,113,https://psicode.org,https://github.com/psi4/psi4/pull/700#issuecomment-301282245,1,['test'],['tests']
Testability,"OK, this was substantially more work than I initially thought. @dgasmith , please have a look if you're happy with the changes to `proc_table` and `proc_util` - I chose to remove the whole `superfunctional_list` generation in favour of directly exporting the `functionals` dictionary of dict_funcs and `build_superfunctional_from_dictionary` functions. Also, as the rest of the code seems to have been using `.lower()` for methods, I've swapped the `dict_funcs` and `EmpiricalDispersion` to lowercase too. The only place where I'm _not_ applying `.lower()` is for the `""name""` argument to `dict_funcs`, as that is used for printing the method name. @loriab is the modest amount of docs enough? If you need more, please tell me what's the best way to generate the output from these rst files - my sphinx experience is very limited. All relevant tests pass - only pywraps fail (dft-bench-interaction T/O's).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/986#issuecomment-385072264:844,test,tests,844,https://psicode.org,https://github.com/psi4/psi4/pull/986#issuecomment-385072264,1,['test'],['tests']
Testability,"OK. About the brown-paperbag, I've now looked it up in the hacker dictionary, and I didn't mean it in that sense, sorry. I use it in the sense of ""maintainer successfully built and tested on their machine, but it's obviously broken on a different configuration they did not test"".",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/213#issuecomment-178169351:181,test,tested,181,https://psicode.org,https://github.com/psi4/psi4/issues/213#issuecomment-178169351,2,['test'],"['test', 'tested']"
Testability,"OK. I added a test that also servers as an example on some details. Combinations of empty, X-only, C-only and multiple X,C kernels are being tested. Also check out the updated OP.; I am happy with the functionality. This would be ready for review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1860#issuecomment-612518067:14,test,test,14,https://psicode.org,https://github.com/psi4/psi4/pull/1860#issuecomment-612518067,2,['test'],"['test', 'tested']"
Testability,"OK... I managed to get gpu_dfcc built as a separate tree using gcc/g++ 5.5.0 by adding; `-DCMAKE_PREFIX_PATH` (pointing at `psi4/objdir/stage/usr/local/psi4/share/cmake/TargetLAPACK`); and; `-DOpenMP_LIBRARY_DIRS=/opt/intel/compilers_and_libraries_2018.3.222/linux/compiler/lib/intel64_lin` ; to the do-configure script. (I'm not sure how that would translate into building it within the psi4 build.). gcc/g++-4.9 gave me compile errors about missing symbols and gcc/g++-6 triggers a known bug with the version of CUDA I have on Debian (9.1.85). (If I had gcc/g++-6 installed and told it to use 4.9, cmake still tried to pull in a load of headers from V6!). It's built, installed into my installed psi4 tree and the gpu_dfcc test jobs run happily with reasonable looking bits about the GPU in the output file. I suspect I'll need to try a bigger job to see what it's really doing, though.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1041#issuecomment-400462333:725,test,test,725,https://psicode.org,https://github.com/psi4/psi4/issues/1041#issuecomment-400462333,1,['test'],['test']
Testability,"OS: Windows 10. I downloaded the psi4 installation executable and ran the commands from the manual as described. >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. psi4 is unrecognizable after installation, but I added the directory to my path. . rerunning psi4 -- test gives following error:. `C:\Users\erikc>psi4 --test; Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 55, in <module>; from . import core; ImportError: DLL load failed while importing core: The specified module could not be found. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""C:\Users\erikc\psi4conda\Scripts\psi4-script.py"", line 182, in <module>; import psi4 # isort:skip; File ""C:\Users\erikc\psi4conda\lib\site-packages\psi4\__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); ImportError: DLL load failed while importing core: The specified module could not be found.`",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236:258,test,test,258,https://psicode.org,https://github.com/psi4/psi4/issues/2236,3,['test'],['test']
Testability,"Of all the possible explanations I can think of, that makes the most sense to me. Do you know if there are any published benchmarks for specific open source scientific computing packages such as psi4, pyscf, Qiskit, ect. that might enlighten the performance of these machines for specific applications? That might be interesting to see. It's a shame that most of the information regarding the performance of these machines is almost entirely in the context of non-scientific computing workloads.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-956518612:121,benchmark,benchmarks,121,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-956518612,1,['benchmark'],['benchmarks']
Testability,"Of course, to run those tests one also needs to add the new kernels to the range-separated Fock builds and the libxc interface.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2386#issuecomment-997413176:24,test,tests,24,https://psicode.org,https://github.com/psi4/psi4/pull/2386#issuecomment-997413176,1,['test'],['tests']
Testability,Oh I just grepped the ones that use STO-3G... I didn't expect to find broken tests in the tests directory,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2234#issuecomment-876616242:77,test,tests,77,https://psicode.org,https://github.com/psi4/psi4/issues/2234#issuecomment-876616242,2,['test'],['tests']
Testability,"Oh alright. Thank you, @jturney. I was able to compile this on my mac with clang 4.0.0. I am running the quick test suits, but it seems that everything works pretty smoothly. However, you do have to specify -DENABLE_AMBIT=off. If I don't specify this, I get a CMAKE_ERROR about boost and ambit.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/468#issuecomment-249038074:111,test,test,111,https://psicode.org,https://github.com/psi4/psi4/issues/468#issuecomment-249038074,1,['test'],['test']
Testability,"Oh dear, I see your PR has become contaminated by non-you commits. This probably happened because you rebased to pull in changes from upstream, tried to push, GH told you that's not a fast-forward so you probably want to pull, you pulled, then pushed. Hence current state. In this instance, that was bad advice from git. From step 9 or the `git push -f origin fastci` text of http://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow, what you really want to do in this case is *force push without pulling*. Because you're the only one using that branch on your fork, this is quite safe, and no one will chase you with pitchforks :-). Don't feel bad about about doing this wrong. Most everyone in the psi connection has done this (I did it three times in succession). Next step is to heal your branch. Don't do anything more on that branch locally. Check out master and update it to upstream. Check out a new branch, then apply the commits that are yours. Test and then force push back to GH to the branch that GH knows to be associated with this PR. ```; git checkout master; git pull --rebase upstream master; git checkout -b new_sinf; git cherry-pick b2b49f6; git cherry-pick 147f5b2; ...; # I'm applying the commits you authored in order, just reading the hashes from this webpage above; # it's possible but unlikely that you'll have to resolve conflicts; ...; git cherry-pick 502d234; # build and test; git push origin new_sinf:e2_exch_disp_sinf -f # force added in edit 15 May 2019; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1490#issuecomment-457765390:975,Test,Test,975,https://psicode.org,https://github.com/psi4/psi4/pull/1490#issuecomment-457765390,2,"['Test', 'test']","['Test', 'test']"
Testability,"Oh sweet madness that is everything DSD double-hybrid... All DSD-DHDF-NL versions I put in will use the frozen-core parameters and will also use the D3BJ variants. No matter what others have done. This makes the most sense and brings some needed consistency. The description does mention what is used. The impact of these small variations are very minimal from my experience anyway. No thorough testing was done of course. I think it is less severe than different LDA versions for GGAs, where are often ignored. I hope everyone agrees. For the sake of future users all DHDF should use frozen-core by default, imo. This is done already for standard DF-MP2, but I cannot find how.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/914#issuecomment-379694122:395,test,testing,395,https://psicode.org,https://github.com/psi4/psi4/pull/914#issuecomment-379694122,1,['test'],['testing']
Testability,"Oh! That we can fix. My psi is a wreck at present. @bwb314, you want to do as @hokru advises and change [this](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/dashparam.py#L265) to `dashcoeff['rs8']`, add `rs8: 1.0` to everything [here](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/dashparam.py#L84-L129) and add `rs8: ??` to wB97X [here](https://github.com/psi4/psi4/blob/master/psi4/driver/qcdb/dashparam.py#L130)? Then run tests.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/880#issuecomment-368146271:449,test,tests,449,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-368146271,1,['test'],['tests']
Testability,"Oh, I bet that's it. Because the BLAS/LAPACK API is standard, loading psi4 probably clobbers the namespace occupied by MKL's dependencies. If true, numpy is really calling the system BLAS instead of MKL, and perhaps the instability resides in there? Is there a way we can link psi4 to MKL in the conda build, to test this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/748#issuecomment-311736829:312,test,test,312,https://psicode.org,https://github.com/psi4/psi4/issues/748#issuecomment-311736829,1,['test'],['test']
Testability,"Oh, I had forgotten. Yes, quite a few `occ` tests. I'm renaming anything from `occ` cepa to `lccd`, changing the `ocepa` test marker to `olccd`, changing the `cepa` marker for occ tests to `lccd`, and adding `lccd` to `cepa-module`, which tests all of them. However, even after renaming the redirectories, updating `tests/CMakeLists.txt`, and making a new `objdir` from scratch, I'm _still_ getting `ocepa*` test folders. Any ideas why?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1909#issuecomment-634866678:44,test,tests,44,https://psicode.org,https://github.com/psi4/psi4/pull/1909#issuecomment-634866678,6,['test'],"['test', 'tests']"
Testability,"Oh, I see its only if its cast and no other scenario. @bwb314 Can you add a *single* cast to `tests/dftd3/energy/input.dat`?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/769#issuecomment-316857100:94,test,tests,94,https://psicode.org,https://github.com/psi4/psi4/pull/769#issuecomment-316857100,1,['test'],['tests']
Testability,"Oh, thanks for the quick response and the link! I'll want to test to make sure I'm making the right edit first, but I can get this easily.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1149#issuecomment-415613427:61,test,test,61,https://psicode.org,https://github.com/psi4/psi4/issues/1149#issuecomment-415613427,1,['test'],['test']
Testability,"Oh, yes, quite agree that it affects DFT in general, and just happens to show up in that test case. Maybe I should have named the issue for the cause, rather than the effect.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/677#issuecomment-291915766:89,test,test,89,https://psicode.org,https://github.com/psi4/psi4/issues/677#issuecomment-291915766,1,['test'],['test']
Testability,"Ohhh that’s right; if it’s checking eigenvectors then you can get funny results with (near) degeneracies.. do you have any suggestions on how to fix it?. Susi Lehtola; Sent from my phone so excuse my brevity. On 5 Jan 2019, at 21.08, Lori A. Burns <notifications@github.com<mailto:notifications@github.com>> wrote:. Pretty sure it’s just an eigenvector ordering amongst degen freq instability that appears rarely. Wanted to test locally before restart. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/pull/1458#issuecomment-451682417>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJ7c5LY0qqPwG41Z91ppP62JmDBxdks5vAPgDgaJpZM4ZsXSw>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-451686203:424,test,test,424,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-451686203,1,['test'],['test']
Testability,"Ok I got the following test failures:. ```; 252:nbody-convergence; 306:psimrcc-ccsd_t-4; 420:psi4numpy-cphf; 421:psi4numpy-dfmp2; 422:psi4numpy-rhf; 423:psi4numpy-rhf-gradient; 424:psi4numpy-rhf-hessian; 425:psi4numpy-fci; 429:python-energy; 430:python-curve; 431:python-pubchem; 432:python-mints9; 433:python-mints2; 434:python-cc54; 435:python-3-index-transforms; 436:python-mints13; 437:python-cc_amps; 438:json-schema-1-energy; 439:json-schema-1-ghost; 440:json-schema-1-orient; 441:json-schema-1-throws; 442:json-schema-1-gradient; 443:json-schema-1-properties; 444:gcp-pbeh3c; 445:gcp-hf3c; 446:gcp-hf3c-gradient; 447:gcp-hf3c-hessian; 448:gcp-dft-custom-hybrid; ```. And now my problem is on the import psi4. I tried adding the correct PYTHONPATH as follows:. ```; export PATH=/usr/local/bin:$PATH # python interpreter; export PATH=/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/bin:$PATH # psi4 executable; export PYTHONPATH=/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib//:$PYTHONPATH # psi4 pymodule; ```. But I get a new kind of error. Any idea how to fix it? :. ```; >>> import psi4; Traceback (most recent call last):; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 55, in <module>; from . import core; ImportError: dlopen(/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so, 2): Symbol not found: __gfortran_concat_string; Referenced from: /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so; Expected in: flat namespace; in /Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/core.cpython-37m-darwin.so. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bsenjean/Documents/Git_repositories/psi4/objdir/stage/lib/psi4/__init__.py"", line 60, in <module>; raise ImportError(""{0}"".format(err)); Im",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1870#issuecomment-614773796:23,test,test,23,https://psicode.org,https://github.com/psi4/psi4/issues/1870#issuecomment-614773796,1,['test'],['test']
Testability,Ok compiles now and the first few tests are passing,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/625#issuecomment-289968277:34,test,tests,34,https://psicode.org,https://github.com/psi4/psi4/pull/625#issuecomment-289968277,1,['test'],['tests']
Testability,"Ok thanks for the summary. I agree the current behavior is logical, and; also that there is an inconsistency between Zmat and Cartesians that could; confuse a user. I am very happy there is a little warning printed by the; code if the user is updating the Cartesian coordinates. Perhaps that; warning could be updated to say something like ""(multipole moments of; charged molecules may be affected)"" or something? And/or a sentence or two; in whatever section of the manual might cover something like this?. I also recommend expanding the comment in the props2/input.dat from ""#; Force COM for pole computation"" to the more detailed ""# Force COM; translation so multipoles of charged molecule will match reference values"". On Tue, Sep 26, 2017 at 2:50 PM, Daniel Smith <notifications@github.com>; wrote:. > Im still not completely sure that there is a way to bridge the two.; > Ultimately the modification in-place leads to quite a few errors; however,; > the Psithon API make the in-place a logical operation.; >; > It would be better to do something like:; >; > new_mol = molecule.update({""var1"": 5, ""var2"": 6}); >; > or something similar. Getting that across in something like Psithon would; > be difficult I think.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/issues/782#issuecomment-332298418>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AC9Qdlu-db-VElBfiw-oAMiX7_n0LAOsks5smUeIgaJpZM4O79qb>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/782#issuecomment-332340271:59,log,logical,59,https://psicode.org,https://github.com/psi4/psi4/issues/782#issuecomment-332340271,2,['log'],['logical']
Testability,"Ok yes Daniel was right, it was an error writing to file 32 not file 180 (I was misled because the last thing in output.dat was a line about file 180). If nmo increases, the problem can be fixed by just replacing file32 each time SCF finishes. I've implemented this and all test cases pass. If nmo decreases, the scf guess might fail, but in a couple of test cases it seems ok. I'm checking in these changes and adding a new test case that checks what happens when nmo increases during a geometry optimization. Pushing this to the psiworkweek branch but will incorporate into public branch in a few days.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/32#issuecomment-38125711:274,test,test,274,https://psicode.org,https://github.com/psi4/psi4/issues/32#issuecomment-38125711,3,['test'],['test']
Testability,"Ok, 3 min to inspect and fix code, 1 hr to access it in an actual job to check it's doing the right thing. That `_AM` bit is only in local, which isn't hit by any test case. If you turn on local, it complains about no Weak Pairs TOC entry. Fair enough. Transplant code to main ccsort for better observation, but ccsort is turned off in favor of cctranssort. Force ccsort. Possible helpful note: from objdir, it's not ../psi4/share that's running _unless_ it's been through an install. Rather, stage/... is running. Anyway, change made and it should work, not that anyone could know :-) CC codes free of libint deps. Thanks Andy and Jet.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-240466044:163,test,test,163,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-240466044,1,['test'],['test']
Testability,"Ok, @psi-rking, I've expanded the [`qcdb.Molecule` mints5 test case](https://github.com/psi4/psi4/pull/834/files#diff-76da01941b921d68cfbfb7408ed0c512) to change the mass of various atoms, then check that the symmetry changes accordingly. Haven't done _every_ PG, but did a variety. Assuming the `psi4.core.Molecule` behaves analogously, does that alleviate your earlier concern?. Any other problems you notice?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834#issuecomment-349573814:58,test,test,58,https://psicode.org,https://github.com/psi4/psi4/pull/834#issuecomment-349573814,1,['test'],['test']
Testability,"Ok, @psi4/maintainers and @psi-rking, this mammoth is ready to review. I've updated the RN at the top, and I recommend reading them over before meeting the code. Nitpick away (esp. at numpy stuff that I was still learning at the start), and feel free to question the broader (esp. vibanal) logic flow.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/834#issuecomment-362098903:290,log,logic,290,https://psicode.org,https://github.com/psi4/psi4/pull/834#issuecomment-362098903,1,['log'],['logic']
Testability,"Ok, I agree with your idea @dgasmith. I'll make sure the RHF stuff is working properly (I think there's still a small bug in the spherical harmonic hessians) and we can probably close this one out when all is working and more tests are added. I know you're both busy, but if you get a chance could you take a look at `tests/scf-hess1` and see if you have any recommendations about implementing the call into the `frequencies` wrapper, please?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-230570771:226,test,tests,226,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-230570771,2,['test'],['tests']
Testability,"Ok, I have a [fix](https://github.com/raimis/psi4/pull/4) that works. The problem is that a new(ish) constructor was added [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libtrans/integraltransform.cc#L112-L193), which expects the frozen occ, active occ, active vir, and frozen vir orbitals to be passed in that order. The DETCI code passes spaces (constructed [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/ints.cc#L84-L87)) that are not consistent with this; the second space holds all the active orbitals in the `cisd-h2o+-0` test, while the third is empty:; ```; Irrep: 0 Space1: 1 Space2: 11 Space3: 0 Space4: 0; Irrep: 1 Space1: 0 Space2: 2 Space3: 0 Space4: 0; Irrep: 2 Space1: 0 Space2: 4 Space3: 0 Space4: 0; Irrep: 3 Space1: 0 Space2: 7 Space3: 0 Space4: 0; ```; The number of occupied per irrep is computed from the dimensions of these things, leading to an incorrect distribution of electrons. I tried to pass in different spaces from [here](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/detci/ciwave.cc#L171-L257) but couldn't find a set of spaces that didn't break at least one DETCI test. The occupation info is used to build the density matrix (from which the Fock matrix is built) during presorting of the integrals, which is where the seg fault happens. This Fock build is really vestigial code that was only ever there to make sure libtrans did the same thing as the Psi3 code it replaced at the time, so I decided to simply make the Fock build optional. It's clear that DETCI doesn't use the Fock matrix from Libtrans because it gets the right answer despite having bad occupation info. The frozen core density is correct; this seems to be all that DETCI uses, so I think this fix is good. Requesting reviews from @CDSherrill and @dgasmith to make sure this is reasonable.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1469#issuecomment-454523627:564,test,test,564,https://psicode.org,https://github.com/psi4/psi4/pull/1469#issuecomment-454523627,2,['test'],['test']
Testability,"Ok, I tested it and it's a piece of cake. I'll save the info in Molden format and change the script for VMD to use this interface.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/644#issuecomment-285471455:6,test,tested,6,https://psicode.org,https://github.com/psi4/psi4/pull/644#issuecomment-285471455,1,['test'],['tested']
Testability,"Ok, I think the RHF code is ready to go now. It can run out of core, and is symmetry tolerant. Adding UHF will take a quite a bit of time to debug. Density fitting should be quite fast to code up, as it's only really needed in the second derivatives and the G terms in the response code. Per the above discussion, we can save those tasks for another day. I will let these tests run, then you can merge whenever is most convenient for the new CMake infrastructure. Also, let me know if you'd rather me squash all these commits, which go back all the way to November 2015 and could cause some issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-231160542:372,test,tests,372,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-231160542,1,['test'],['tests']
Testability,"Ok, I'll pull in that test case in the chemps2 follow-up PR. So, [1] I'll accept this after travis re-certifies it, [2] I'll re-rebase #383 , [3] anytime after that one re-certifies, I think it's ready for merging. For anyone following this thread for binary updates, there are now mac versions of 1.7 chemps (libs and bin) and pychemps (py interface) at https://anaconda.org/psi4 . They're untested until either (a) this PR merges into psi4 or (b) I find a small enough test case w/i the chemps2 repo. @SebWouters , I'd like to find a < 30 s test case, but the compiled or py tests churn away for several minutes on my laptop before I kill them. Does this sound like incorrect behavior? Or, if correct, is a shorter test case manageable?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388#issuecomment-223826600:22,test,test,22,https://psicode.org,https://github.com/psi4/psi4/pull/388#issuecomment-223826600,5,['test'],"['test', 'tests']"
Testability,"Ok, I've secured `psi4` login at sylabs. I'm for storing them where they can be found. The ""install apptainer"" GHA only had two stars, so I bet there isn't a ready-made ""upload to sylabs GHA"". I'm not sure if it's doing no root or writeable filesys or anything. Do you want repo access to play with it?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2951#issuecomment-1536705064:24,log,login,24,https://psicode.org,https://github.com/psi4/psi4/issues/2951#issuecomment-1536705064,1,['log'],['login']
Testability,"Ok, as promised, the QC deps for Psi4 are now available on conda-forge natively for `osx-arm64`. Note that these are cross-compiled on regular `osx-64`, so don't get tested. I'd be glad to hear if/how they're working. You can either build psi4 master and still provide your own libint or use the libint package and build a special branch of psi4. There's a c-f tracker for osx-arm64 packages at https://github.com/orgs/psi4/projects/2/views/5. #### psi4 master; `conda install gau2grid libxc-c optking qcengine -c conda-forge`; #### psi4 with #2861 ; * `conda install gau2grid libxc-c optking qcengine conda-forge/label/libint_dev::libint -c conda-forge`; * or `conda install gau2grid libxc-c optking qcengine libint -c conda-forge/label/libint_dev -c conda-forge` (channel order matters)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2333#issuecomment-1474685603:166,test,tested,166,https://psicode.org,https://github.com/psi4/psi4/issues/2333#issuecomment-1474685603,1,['test'],['tested']
Testability,"Ok, checked a AM=4 from the current state against a pre-CMakeRewrite AM=4. Conclusion, we're dealing with the same-sized library.; - `libint.h` and `libderiv.h` identical; - generated libint and libderiv file lists identical. Nevertheless, there _is_ a problem. The AM catches in libmints/eribase.cc are up for discussion; - AM=4, as-is: 'quick' all pass. 'full' all but the usual ones pass but only irc (deriv catch) cases report a ERI AM problem; - @andysim changed all the checks recently from `>=` to `>` in https://github.com/psi4/psi4/commit/fb42b53e3aec742cf0c45b7ff3c35f4051b77b81#diff-911b4dff3a9d02cf3541610b10f56ea3L1811; - If I change the _energy_ check back to `>=` and build as AM=4, cbs-xtpl-wrapper and dft-b2plyp (both int catches) join the irc tests in reporting ERI AM problems. So they're fixed by undoing the comparison change.; - But there are still some tests (scf11-freq-freom-energies, fd-freq-energy-large, opt-lindep-change) that fail at AM=4 _without_ reporting an ERI error, in fact they just quit after `=> Auxiliary Basis Set <=` block, yet these tests work just fine with AM=5, so their problem (a) is a AM one and (b) was reported as a AM one pre-CMakeRewrite. So, (1) what led to those changes to the AM comparisons, Andy, and is it possible you're more confident about one than about all? (2) What else are we not comparing right to still have lindep-change, etc. broken?. Ryan, add the '=' back, and in practical terms, you should be back in business.; For the future, irc test cases are failing for me (once they have sufficient AM), probably because they're not playing nicely with the analytic Hessian. Get @avcopan to investigate once code is in a more useable state.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-240647129:762,test,tests,762,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-240647129,4,['test'],"['test', 'tests']"
Testability,"Ok, elaborated on the `set print 2` descriptions of the four VWNs, and added a test case vs. other packages in https://github.com/psi4/psi4/pull/339/commits/f535e22afefbaeac65c78e95788c5f211f85b11c . When you're satisfied with the labeling, etc. @robparrish, I think this is good to go. I'll add you as a collaborator to my fork so that you can do any simple editing directly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/339#issuecomment-209700278:79,test,test,79,https://psicode.org,https://github.com/psi4/psi4/pull/339#issuecomment-209700278,1,['test'],['test']
Testability,"Ok, four failures:. ```; The following tests FAILED:; 	269 - props2 (Failed); 	270 - props3 (Failed); 	324 - soscf-dft (Failed); 	349 - scf-coverage (Failed); ```. props3 and scf-coverage could be healed by slight relaxation:; ```; TestComparisonError: 	Lithium anion stability: computed value (-7.4168185) does not match (-7.4168196) to 6 digits.; ```. ```; TestComparisonError: 	64-pole ZZZZZZ: computed value (-20544.12046) does not match (-20544.12057) to 4 digits.; ```. But props2 is really off:; ```; TestComparisonError: Y Component of Dipole 0: computed value (21.592762) does not match (17.775955) to 5 digits.; ```. And soscf-dft is fine energy-wise but oscillates more that the test allows on iterations in the next-to-last (PBE) subtest:; ```; @DF-RKS iter 0: -148.97585698578987 -1.48976e+02 2.56136e-01 ; @DF-RKS iter 1: -148.95093820938956 2.49188e-02 1.50011e-01 ; @DF-RKS iter 2: -149.39705073850598 -4.46113e-01 1.11947e-01 DIIS; @DF-RKS iter 3: -150.12875309470365 -7.31702e-01 7.57889e-03 DIIS; @DF-RKS iter 4: -150.12714697276095 1.60612e-03 1.00558e-02 SOKS, nmicro = 4; @DF-RKS iter 5: -150.13120148446785 -4.05451e-03 1.42232e-05 DIIS; @DF-RKS iter 6: -150.12700529520501 4.19619e-03 1.02055e-02 SOKS, nmicro = 4; @DF-RKS iter 7: -150.13120147305844 -4.19618e-03 2.10040e-05 DIIS; @DF-RKS iter 8: -150.12394657944893 7.25489e-03 1.34190e-02 SOKS, nmicro = 4; @DF-RKS iter 9: -150.13120141103812 -7.25483e-03 4.21385e-05 DIIS; @DF-RKS iter 10: -150.12366619982981 7.53521e-03 1.36759e-02 SOKS, nmicro = 4; @DF-RKS iter 11: -150.13120140228156 -7.53520e-03 4.43841e-05 DIIS; @DF-RKS iter 12: -150.11089835193317 2.03031e-02 2.24444e-02 SOKS, nmicro = 4; @DF-RKS iter 13: -150.13120064244808 -2.03023e-02 1.38615e-04 DIIS; @DF-RKS iter 14: -150.10407305304250 2.71276e-02 2.59404e-02 SOKS, nmicro = 4; @DF-RKS iter 15: -150.13119989205700 -2.71268e-02 1.91309e-04 DIIS; @DF-RKS iter 16: -150.08734658173793 4.38533e-02 3.29682e-02 SOKS, nmicro = 5; @DF-RKS iter 17: -150.13119968",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/773#issuecomment-321913106:39,test,tests,39,https://psicode.org,https://github.com/psi4/psi4/issues/773#issuecomment-321913106,5,"['Test', 'test']","['TestComparisonError', 'test', 'tests']"
Testability,"Ok, go ahead and comment them out and make the test case work. We'll get Rob's opinion before finally closing the issue.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/129#issuecomment-121720706:47,test,test,47,https://psicode.org,https://github.com/psi4/psi4/issues/129#issuecomment-121720706,1,['test'],['test']
Testability,"Ok, it looks like stdout is all that matters. Is there any known use for `run.log`. Will double up the printing so that everything reaches the screen.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/247#issuecomment-183716683:78,log,log,78,https://psicode.org,https://github.com/psi4/psi4/pull/247#issuecomment-183716683,1,['log'],['log']
Testability,"Ok, since last review round, this adds tests for CCSD gradients and CCSD(T) energies. As there's more items stored and printed from the cc* modules (i.e., mp2 & ccsd singles), @lothian should have a chance to review. All conventional values actively compared against cfour downstream. All matchable except for _CCSD_ energy in the course of _CCSD(T)_ energy for ROHF FC (see below), though this is the realm where differences expected. I haven't experimented much, but if these differences surprise anyone or if more toggles besides canonicalize come to mind, I'd be glad to hear of them. ```; AssertionError: 	test_ccsd_prt_pr_energy_module[ccsd_t_ rohf conv fc: * ccenergy-dz-ene0] CCSD CORRELATION ENERGY: computed value (-0.08256310) does not match (-0.08256719) to atol=1e-06 by difference (0.00000409).; AssertionError: 	test_ccsd_prt_pr_energy_module[ccsd_t_ rohf conv fc: * ccenergy-adz-ene0] CCSD CORRELATION ENERGY: computed value (-0.17599322) does not match (-0.17598849) to atol=1e-06 by difference (-0.00000473).; AssertionError: 	test_ccsd_prt_pr_energy_module[ccsd_t_ rohf conv fc: * ccenergy-qz2p-ene0] CCSD CORRELATION ENERGY: computed value (-0.19283228) does not match (-0.19282621) to atol=1e-06 by difference (-0.00000607).; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-627499447:39,test,tests,39,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-627499447,4,"['Assert', 'test']","['AssertionError', 'tests']"
Testability,"Ok, so I've addressed everything that cppcheck found. There are a number of false positives in that list, but I still fixed them regardless. The full tests pass for me (except `nbody-convergence`, which needs a higher angmom build and `dcft8`, which segfaults). Is anybody else seeing issues with `dcft8`? I'm using the 2019 Intel compilers, so it's possible that there's an issue in my toolchain. If others are seeing no problems in `dcft8` I'll try to debug it later today. Unfortunately, cppcheck isn't too helpful with regards to the memory leaks that this PR was originally intended to address. After it's pulled in I'll try and find some other valgrind-like tools to address those issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1534#issuecomment-489705203:150,test,tests,150,https://psicode.org,https://github.com/psi4/psi4/pull/1534#issuecomment-489705203,1,['test'],['tests']
Testability,"Ok, so progress! It appears that at some point in the past I mixed up the angular momentum and `n` in the data structures - at least it seems that way when I compare to the test cases. If I switch them, I can get exact agreement between the old and new codes. The pesky nonzero values where the old code gave zeros seem to be problematic, regardless of pure/Cartesian basis.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2135#issuecomment-803213417:173,test,test,173,https://psicode.org,https://github.com/psi4/psi4/pull/2135#issuecomment-803213417,1,['test'],['test']
Testability,"Ok, so there's a likely reason DSDs would have changed. Did the full test suite pass for dict_funcs on your local branch?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/945#issuecomment-378480491:69,test,test,69,https://psicode.org,https://github.com/psi4/psi4/pull/945#issuecomment-378480491,1,['test'],['test']
Testability,"Ok, sounds safe to leave the `boost::python` out for the time being and go ahead and merge this PR to get the python so `psi4.so` working again. @bennybp, you'll have noticed that I didn't do the initialize and finalize changes possibly necessary for your linux so `libpsi4.so` since I couldn't test the built product. Whenever you like, add a `libpsi4so` target to build your version. Even if the python so and the linux so are identical, I think they'll have different names and install locations (site-packages and lib, respectively), so they'll need different targets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/268#issuecomment-187021220:295,test,test,295,https://psicode.org,https://github.com/psi4/psi4/pull/268#issuecomment-187021220,1,['test'],['test']
Testability,"Ok, thanks to your very detailed examples, I was able to track down the problem(s). If you pull the latest version of the code, it should be fixed. There's a new test case, extern1, that confirms the correctness of the gradients by finite differences. The PBE results don't seem to match the Gaussian results that you posted; I don't have access to Gaussian so I can't investigate that any further, I'm afraid. A good place to start would be an SCF calculation, because DFT grids are not uniform between packages. It's also a good idea to manually specify the basis set (Psi4 uses the G94 standard) to ensure that both packages are using the exact same functions. With these changes, the energies and gradients should match exactly; if not it's probably confusion between A/Bohr in the Gaussian input for the TIP3P fragment. Until these fixes, Psi4 assumed that the external potential was always in Bohr, but now the code will assume the same units as those used to specify the QM molecule. Good luck!. Andy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/184#issuecomment-156220388:162,test,test,162,https://psicode.org,https://github.com/psi4/psi4/issues/184#issuecomment-156220388,1,['test'],['test']
Testability,"Ok, that sounds like a problem then. I'm not sure how to help debugging. From the CI, they run from source, they run from conda packages, they run on Linux, Mac, and Windows; so I think the broad setup is sound. You might try seeing if the ""api"" tests (tests/pytests/) run differently than the ""cli"" tests tests/*/input.dat .",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2830#issuecomment-1343695259:246,test,tests,246,https://psicode.org,https://github.com/psi4/psi4/issues/2830#issuecomment-1343695259,4,['test'],['tests']
Testability,"Ok, the example plugins build automatically again and are incorporated into the testing system. The `-DENABLE_PLUGINS` option, btw, only controls whether these example plugins are built automatically, as opposed to in earlier build schemes where it actually controlled whether `-fpic` was used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/78#issuecomment-86676981:80,test,testing,80,https://psicode.org,https://github.com/psi4/psi4/issues/78#issuecomment-86676981,1,['test'],['testing']
Testability,"Ok, the test case error is fixed in #1495; this one's ready IMHO",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1488#issuecomment-457265162:8,test,test,8,https://psicode.org,https://github.com/psi4/psi4/pull/1488#issuecomment-457265162,1,['test'],['test']
Testability,"Ok, this exists. It's only compiled to AM=5, uses Apple native accelerate framework blas and lapack, and probably only runs on 10.10 and 10.11. But it can:; - run for casual purposes, if not production; - useable with plugin commands `--new-plugin` and `--new-plugin-makefile` (more at [manual](http://psicode.org/psi4manual/master/plugins.html#creating-a-new-plugin-using-a-conda-pre-compiled-binary)). Could use more reports at http://forum.psicode.org/t/mac-binary-testing/209/2",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/49#issuecomment-215210776:468,test,testing,468,https://psicode.org,https://github.com/psi4/psi4/issues/49#issuecomment-215210776,1,['test'],['testing']
Testability,"Ok, this has been rebased and a lot of the internal CI commits have been squashed. It's now in pretty good working order. Remaining reservations:. * `qcel.constants` interface may still change; * snsmp2 only works if you pull from my branch (which CM is set up to do; but snsmp2 conda pkg won't work) b/c they use psifiles and physconst. I patched those up, of course, but I don't want to send that PR to RMcG until we're sure about the interface.; * ionization tests still seem fragile. the dftd3-dft-bench-ionization works with CI but not for me locally. Even with these, I think it's pretty much RTG. Glad to hear arguments against or arguments about want qcelemental conda pkg first. #### Note that this _does_ add qcelemental dependence, whereas the previous codata 2014 one didn't (that just used qcelemental-generated data added to _this_ repo).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1234#issuecomment-426084025:462,test,tests,462,https://psicode.org,https://github.com/psi4/psi4/pull/1234#issuecomment-426084025,1,['test'],['tests']
Testability,"Ok, this is rebased and passing 435/437 full tests. Will know the full truth in half and hour. So potentially ready for merge. EDIT: full tests pass",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/953#issuecomment-410003426:45,test,tests,45,https://psicode.org,https://github.com/psi4/psi4/pull/953#issuecomment-410003426,2,['test'],['tests']
Testability,"Ok, this one should be ready to go, if all tests pass. I squashed a few of the commits, so if you forked this code at all be careful pushing upstream. I ended up putting the symmetry that I have so far into the code, but it's not used. If we want symmetry to work, here's what needs to happen.; - [Activate the symmetry code](https://github.com/andysim/psi4/blob/hessians/src/bin/scfgrad/response.cc#L1090) and run it in C1 symmetry, which should all be good.; - Then for something simple like water in Cs symmetry you can [verify that the B vectors are good](https://github.com/andysim/psi4/blob/hessians/src/bin/scfgrad/response.cc#L1411) (remember that they'll be ordered differently to the C1 case because of the SALC ordering being different) but the CPHF doesn't converge, so we need to figure out the problem there.; - After that, there's just [another small cut and paste exercise](https://github.com/andysim/psi4/blob/hessians/src/bin/scfgrad/response.cc#L1510) to get all terms symmetrized, albeit in a slightly janky way.; - Once we figure out why CPHF isn't working, we need to make `OUT_OF_CORE` work with non-symmetric densities and [remove the check](https://github.com/andysim/psi4/blob/hessians/share/python/procedures/proc.py#L1728) in the driver that stops these integrals from being allowed. If we end up adding a new JK object that uses symmetry, the above steps will be worth it. Just to get `OUT_OF_CORE` working, not so much unless anybody already knows why it doesn't work and can easily fix it. This is why I've been back and forth about including the symmetry code; I eventually decided to leave it in as a reasonable starting point for future efforts.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/437#issuecomment-234373201:43,test,tests,43,https://psicode.org,https://github.com/psi4/psi4/pull/437#issuecomment-234373201,1,['test'],['tests']
Testability,"Ok, this sounds like a XC issue in this case. Can someone open an issue on it showing the different SCF iterations under different compilers?. @schiebermc For the cartesian auxiliary the syntax should look something like `aux_->has_puream()`. This is `True` for spherical, `False` otherwise. I think this logic needs to be handled in both the JK constructor to switch between different DF setups and in the `MemDFJK` to throw if someone passes a cartesian auxiliary. Can you handle these changes?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/961#issuecomment-385264040:305,log,logic,305,https://psicode.org,https://github.com/psi4/psi4/pull/961#issuecomment-385264040,1,['log'],['logic']
Testability,"Ok, yeah, I have many misc. dirs in my tests/libefp, too. But the github repo looks clean.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/115#issuecomment-171512822:39,test,tests,39,https://psicode.org,https://github.com/psi4/psi4/issues/115#issuecomment-171512822,1,['test'],['tests']
Testability,"Ok, yes, I just ran a full tests on today's master, and it's clean. (And the Windows issue is fixed, too.)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3028#issuecomment-1687198931:27,test,tests,27,https://psicode.org,https://github.com/psi4/psi4/issues/3028#issuecomment-1687198931,1,['test'],['tests']
Testability,"Okay all my questions have been answered, so pending reviews this is ready to merge. I added the cost property to the vibanalysis test and applied the fix in `qcdb/molecule.py` to avoid the ""No atoms detected, returning"" lines printing. Since the test runs in 10s I left it in quicktests. Last question to answer, does this close out #714 or should that issue stay open after merge?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/966#issuecomment-382039560:130,test,test,130,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-382039560,2,['test'],['test']
Testability,"Okay, I might've jumped the gun on this. It's not working on my Mac box. It might just be my box and not others. Could someone else test on their system? The issue I'm seeing is my system Python 2 libraries are not being added to the link command. Will test against my homebrew version.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131092144:132,test,test,132,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131092144,2,['test'],['test']
Testability,"Okay, I see. I tried again, installing the proper chemps2 from the conda environment, and using gcc/g++ instead of Intel.; Believe it or not, it did work. And the first few tests are ok. Side note: while testing I noticed that HDF5 detection in CMake fails if 1) HDF5 is installed on the system AND 2) I use conda to install chemps2, which installs hdf5 in conda as well. Should I open a new issue about that ? Or is it too specific a case for being worth the time ?. Thanks for all your input, @loriab and @susilehtola",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288573307:173,test,tests,173,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288573307,2,['test'],"['testing', 'tests']"
Testability,"Okay, I think (hope) I sorted it out. My test was checking the last computed energy, not the last converged IRC point. The latter should be more robust. The mechanism that checks for a minimum runs on the first step of the next IRC-point optimization -- that was the energy being compared. Since the gradient is small so near the minimum, I guess it isn't surprising that that step direction isn't well-defined. My changes are [here](https://github.com/avcopan/psi4/commit/ab07fd3e1c5242ca58bba12230ce7f1077392102). If tests pass on my machine and you approve (@loriab), I'll do a pull request.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/290#issuecomment-189916188:41,test,test,41,https://psicode.org,https://github.com/psi4/psi4/issues/290#issuecomment-189916188,2,['test'],"['test', 'tests']"
Testability,"Okay, I'm not a fan of that. I do not install anything, psi4 or anything else, until I know that the tests pass, irregardless of what Travis CI says. Plus, I spend most of my time C-side or work in plugins that also require changes to C-side. I'll give it some thought and see what I can do.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235910224:101,test,tests,101,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235910224,1,['test'],['tests']
Testability,"Okay, so I guess we can link against the pre-built conda one.; I still tested the gcc you suggested, and after giving the proper gcc-ar and gcc-ranlib to the CMake variables, it complains it cannot find liblto_plugin.so; I checked and the new gcc has only liblto_plugin.a and not the .so",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/660#issuecomment-288459669:71,test,tested,71,https://psicode.org,https://github.com/psi4/psi4/issues/660#issuecomment-288459669,1,['test'],['tested']
Testability,"Okay, that should be everything. Running `ctest -E bench` as requested ended with all passes except one. The test was fixed, and now it passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1289#issuecomment-434823154:109,test,test,109,https://psicode.org,https://github.com/psi4/psi4/pull/1289#issuecomment-434823154,1,['test'],['test']
Testability,Okay. Please rename `cc5a` to `cc5` and update `tests/cc_index`.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2655#issuecomment-1203201750:48,test,tests,48,https://psicode.org,https://github.com/psi4/psi4/pull/2655#issuecomment-1203201750,1,['test'],['tests']
Testability,"Okey dokey, I pushed a downgrade to 3.7, which will hopefully fix it. A bit off topic, but I don't think props4 is running, which has the `quicktests` label. Any idea why that might be the case? The are a number of tests, including props1-3, that have the `shorttests` label, but not `quicktests`. Now we're all Travisified we should look over those and see which ones are quick enough to run for every PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/442#issuecomment-235152988:215,test,tests,215,https://psicode.org,https://github.com/psi4/psi4/pull/442#issuecomment-235152988,1,['test'],['tests']
Testability,"On my mac with Psi4 1.0rc3 (71ea2ea), the cd-omp2-2 test normally terminates. I can not reproduce the problem. What kind of blas you have on the Debian?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/391#issuecomment-222314966:52,test,test,52,https://psicode.org,https://github.com/psi4/psi4/issues/391#issuecomment-222314966,1,['test'],['test']
Testability,"On my machine, the tests fail with a segfault. Using gdb it seems to originate somewhere in Python. Backtrace below for test case adc1, fails right after the SCF without errors, looks similar to Travis failure.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/387#issuecomment-222263701:19,test,tests,19,https://psicode.org,https://github.com/psi4/psi4/pull/387#issuecomment-222263701,2,['test'],"['test', 'tests']"
Testability,"On second thought, this works as a test, it's just... not a usual test where the value is ""correct"" but a test where the value is ""current"" and sometimes does need to be updated.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2323#issuecomment-943298421:35,test,test,35,https://psicode.org,https://github.com/psi4/psi4/pull/2323#issuecomment-943298421,3,['test'],['test']
Testability,"On some architectures, the testsuite has errors like:. ```; 52/140 Test #191: fcidump ..........................***Failed 0.47 sec; Traceback (most recent call last):; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 32, in <module>; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/p4util/fcidump.py"", line 339, in compare_fcidumps; ref_energies = _energies_from_fcidump(ref_intdump); File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/p4util/fcidump.py"", line 363, in _energies_from_fcidump; intdump['uhf']); File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/p4util/fcidump.py"", line 379, in _scf_energy; exchange = np.einsum('ijij->', ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]); File ""/usr/lib/python3/dist-packages/numpy/core/einsumfunc.py"", line 1346, in einsum; return c_einsum(*operands, **kwargs). ValueError: dimensions in operand 0 for collapsing index 'þ' don't match (-168832168 != 5); Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```. These are the lines, it is failing during the `exchange`:. ```; coulomb = np.einsum('iijj->', ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]); exchange = np.einsum('ijij->', ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]); ```. Now when I duplicate the `coulomb` line in place of the `exchange` line, it runs fine. Also, if I dump out something between the two, e.g. `print(occ_sl)`, it runs fine, so there is probably some subtle issue in NumPy's `einsum`. I was not able to produce a minimal test-case, mostly because my Python/NumPy-fu is not strong enough to figure out what `ERI[np.ix_(occ_sl, occ_sl, occ_sl, occ_sl)]` really is. Any idea what it could be and whether there's a robust was (some barrier?) to get around it?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1465:27,test,testsuite,27,https://psicode.org,https://github.com/psi4/psi4/issues/1465,3,"['Test', 'test']","['Test', 'test-case', 'testsuite']"
Testability,"On tests: Wonderful! Our standard way to test `oeprop` can be found [here](https://github.com/psi4/psi4/blob/master/tests/pytests/test_dipoles.py). You'll want a new entry for OREMP with both RHF/UHF and Conv/DF integrals. On merging: We've started talking with Ugur Bozkaya on merging his branch in, and we want that merged in before we merge in your contributions. If you want, you can split the `occ` part of this into its own PR, and we can merge that in without complications. If you have no interest in that, it's no problem for us. I'll keep you updated on how the `dfocc` update goes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2354#issuecomment-988756347:3,test,tests,3,https://psicode.org,https://github.com/psi4/psi4/pull/2354#issuecomment-988756347,3,['test'],"['test', 'tests']"
Testability,"On the `clean` issue, I don't see a change in behavior from your PR. The below (on master) also requires the intervening `clean()` to avoid a PSIO error. Maybe the rules of how much the user should need to call clean need rethinking, but at least they are steady (one used to have to call it after practically everything). ```; molecule ne2 {; 0 1; Ne 0 0 0; --; 0 1; Ne 2 0 0; }. set basis cc-pvdz; sapt_global = energy(""sapt2+(3)"", molecule=ne2). clean() # PSIO error without this line. # these two calls are equivalent; #cbs_string = energy(""mp2/6-311++G** + D:ccsd/6-311+G""); cbs_string = energy(cbs, corl_wfn='mp2', corl_basis='6-311++G**', delta_wfn='ccsd', delta_basis='6-311+G'); compare_values(-257.50097969, cbs_string, 5, 'cbs'); ```. On the caspt2, runs fine for me, too. If you want to see the error try [looking in the testing log file](http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput). But it's certainly outside the scope of this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379830469:833,test,testing,833,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379830469,3,"['log', 'test']","['log', 'testing', 'testsoutput']"
Testability,"On the test failures, can you find out why through http://psicode.org/psi4manual/master/build_planning.html#faq-testsoutput? Especially the ""align"" ones, it might just be something not installed. The ""cubeprop"" ones have a history of being compiler sensitive, too.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402524125:7,test,test,7,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402524125,2,['test'],"['test', 'testsoutput']"
Testability,"On the test suite error, it's a good idea to turn convergences way down (e.g., 10 or 12) to compute the reference values, then remove conv settings for the final test case and do the compare_values check to the number or fewer decimals than the default for the calc type (energy, gradient, etc.). You're checking the latter to 6, so probably better ref vals will do the trick.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1346#issuecomment-437675136:7,test,test,7,https://psicode.org,https://github.com/psi4/psi4/pull/1346#issuecomment-437675136,2,['test'],['test']
Testability,"Once upon a time, Psi4 was made python3 compatible. I haven't heard of it being tested since. Make it so once more. potentially helpful tools:; - `conda create -n pyconv python=3.4` if you need a python3 environment; - http://python-modernize.readthedocs.org/en/latest/ looks like a helpful project. `pip install modernize` then run on each file. Driver is a sad mix of `print vari` and `print(vari)`. Feel free to import latter from future and standardize. But leave qcdb alone. It has its own ticket and repository.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/110:80,test,tested,80,https://psicode.org,https://github.com/psi4/psi4/issues/110,1,['test'],['tested']
Testability,"One adjusts PW91 my modifying **M**PW91's parameter, it seems. Anyways, full test suite now passing. Relevant issue on GL is https://gitlab.com/libxc/libxc/issues/61 . So far this has been a fix-the-tests exercise rather than a make-sure-all-tweaks-1:1-btwn-Libxc-and-Psi one. So that could use some attention. I'm also not confident we're set up right to, for instance, adjust both omega and a non-omega parameter for a functional.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-410952653:77,test,test,77,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-410952653,2,['test'],"['test', 'tests']"
Testability,"One feature I'd like to add (later) is the ability to do something like:. ```; my_new_method = { ""name"": ""my_func"", ... functional_dictionary ... }; my_superfunctional = add_functional_from_dictionary(my_new_method); energy(""my_func""); ```; That way one can fit dispersion parameters or benchmark functionals in a simple loop... However, I think it is a bit of work, so I'd prefer to leave that for later. The PR can be pulled in as is from my point of view.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/922#issuecomment-376409454:287,benchmark,benchmark,287,https://psicode.org,https://github.com/psi4/psi4/pull/922#issuecomment-376409454,1,['benchmark'],['benchmark']
Testability,"One final logistical point before I head off for the night: my current plan is to make these changes and commit those. If you are willing to add `occ`/`dfocc` documentation and docstring changes to your to-do list, I say we can call this PR a wrap so I can slay the behemoth that is orbital convergence. If you don't have time for that, I can take documentation on, but that will delay getting orbital convergence fixed.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1789#issuecomment-581087208:10,log,logistical,10,https://psicode.org,https://github.com/psi4/psi4/pull/1789#issuecomment-581087208,1,['log'],['logistical']
Testability,"One more try... The two RASSCF tests fail because the energy is not invariant with respect to arbitrary rotations of active orbitals. I'll put an if statement that checks if a calculation type is RASSCF. The DFCASSCF test was affected by the new algorithm to compute CI natural orbitals. The new one does not scramble different orbital classes, which is what I suspect happened with the old code. All the entries in the `nov0` array are the same but are sorted differently.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/722#issuecomment-304748159:31,test,tests,31,https://psicode.org,https://github.com/psi4/psi4/pull/722#issuecomment-304748159,2,['test'],"['test', 'tests']"
Testability,One thing that needs to be added: update `tests/CMakeLists.txt` with the name of your new test.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2344#issuecomment-961182029:42,test,tests,42,https://psicode.org,https://github.com/psi4/psi4/pull/2344#issuecomment-961182029,2,['test'],"['test', 'tests']"
Testability,"Only makes sense (models and docs) after #2454. Summary is that by adding a simple file like the below to each PSIthon/CTest directory (dir in `tests/` that has an `input.dat` or `input.py`), we can run the test additionally through pytest. Read the docs to see why this is a good thing and more details on how to compose the file. ```; from addons import *. @ctest_labeler(""quick;ci;cas;properties;cart;noc1""); def test_ci_property():; ctest_runner(__file__, [""grid.dat""]); ```. A few dozen have been done, but filling in all 500 is suitable for distributing the workload.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2495:144,test,tests,144,https://psicode.org,https://github.com/psi4/psi4/issues/2495,2,['test'],"['test', 'tests']"
Testability,"Oops, I missed your comment. The old `addBasis` still works the same way, and the normalization associated with it is appropriate for external basis functions derived from density fitting. In QM/MM we normally want some Gaussians at different points in space, and in this case we want unit normalization so that the charges, dipoles, etc. specified don't need to be adjusted. Essentially there are two use cases, and I just added a new one here. Not really a bug fix, but also harmless if we want it in 1.4 - entirely up to you. It gives us a backend that can be tested for the multipole interface at least :)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2069#issuecomment-771874219:563,test,tested,563,https://psicode.org,https://github.com/psi4/psi4/pull/2069#issuecomment-771874219,1,['test'],['tested']
Testability,"Oops, I ran the tests when I submitted this one, but didn't check the plugins. Thanks a lot for dealing with that, @dgasmith",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/844#issuecomment-346345543:16,test,tests,16,https://psicode.org,https://github.com/psi4/psi4/pull/844#issuecomment-346345543,1,['test'],['tests']
Testability,"OpenBLAS has seen quite a few bugfixes in the last couple months, especially thread safety related. I would recommend pulling the latest trunk version from github, and then compiling it with GCC, and `USE_THREAD=1 USE_OPENMP=1 and DYNAMIC_ARCH = 1` in Makefile.rule. The DYNAMIC_ARCH is optional, it enables runtime CPU arch detection. ; This could rule out both bugs in older versions of OpenBLAS and the chance that the Intel compilers are messing up OpenBLAS.; IIRC OpenBLAS is rarely used/tested with Intel compilers, since most people who have Intel compilers end up using MKL instead. PS: The comment in Makefile.rule of OpenBLAS even includes a vague remark about Intel and other non-GNU compilers being non-recommended.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-387102336:493,test,tested,493,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-387102336,1,['test'],['tested']
Testability,"Opportunity to avoid Libxc5 surprises ourselves and help Libxc out by testing their new parameters interface: https://gitlab.com/libxc/libxc/-/merge_requests/284 . I'll get to it later this week, but if anyone wants to play with the p4/xc connection, go for testing. Ping me on any setup issues.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-604007934:70,test,testing,70,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-604007934,2,['test'],['testing']
Testability,"OptM3 with GC is the Treutler-Ahlrichs M3 mapping with Gauss-Chebyschev (GC) quadrature. This is similar to what psi4 does.; However, the radial points in psi4 are fixed numbers while in ORCA they vary for each element and were optimized against some data set (hence `OptM3 with GC`). For benchmarking interaction energies one wants `defgrid3` in ORCA and ``590/99`` in psi4. . Changing the monomer orientation will also have some influence. Though ORCA has an optional feature that makes grid rotational invariant but I dont know how it works.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2304#issuecomment-928914815:289,benchmark,benchmarking,289,https://psicode.org,https://github.com/psi4/psi4/issues/2304#issuecomment-928914815,1,['benchmark'],['benchmarking']
Testability,"Optimize and compute vibrational frequencies of a molecule: ; ```python; # test.py; import psi4. print(psi4.__version__). psi4.geometry('H -0.4 0 0\nH 0.4 0 0'); psi4.opt('HF/3-21G'); _, wfn = psi4.freq('HF/3-21G', return_wfn=True). print(wfn.hessian().to_array()); print(wfn.frequencies().to_array()); print(wfn.normalmodes()); ```. The hessian matrix and frequencies are in `Wafefucntion` object, as expected, but the normal mode vectors are missing, i.e. `wfn.normalmodes()` return `None`. ```bash; $ python test.py ; 1.2a1.dev781. ... skipped ... [[ 4.13907957e-01 -1.38565530e-17 -9.84797134e-18 -4.13907957e-01; 1.38565530e-17 9.84797134e-18]; [-1.38565530e-17 -7.17030485e-05 5.29623161e-18 1.38565530e-17; 7.17030485e-05 -5.29623161e-18]; [-9.84797134e-18 5.29623161e-18 -7.17030485e-05 9.84797134e-18; -5.29623161e-18 7.17030485e-05]; [-4.13907957e-01 1.38565530e-17 9.84797134e-18 4.13907957e-01; -1.38565530e-17 -9.84797134e-18]; [ 1.38565530e-17 7.17030485e-05 -5.29623161e-18 -1.38565530e-17; -7.17030485e-05 5.29623161e-18]; [ 9.84797134e-18 -5.29623161e-18 7.17030485e-05 -9.84797134e-18; 5.29623161e-18 -7.17030485e-05]]; [4658.84858151]; None; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/940:75,test,test,75,https://psicode.org,https://github.com/psi4/psi4/issues/940,2,['test'],['test']
Testability,"Other than seeing python test failures caused by psi4 being compiled with python3 not python2 assumed by the tests, nothing big comes out. dft-grad-meta is failing, but that might be due to me using a different version of libxc. Some tests are also failing for me due to the default libint parameters. If you have a setup that can run all tests, you might want to double check.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-451606476:25,test,test,25,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-451606476,4,['test'],"['test', 'tests']"
Testability,Output file:; [psi4_23306.log](https://github.com/psi4/psi4/files/9552147/psi4_23306.log),MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1244595835:26,log,log,26,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1244595835,2,['log'],['log']
Testability,Overhaul Test Writing Documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2396:9,Test,Test,9,https://psicode.org,https://github.com/psi4/psi4/issues/2396,1,['Test'],['Test']
Testability,"P......................................................PASSED; 	Ne: PBE0-DH DFT...................................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""C:\Users\User\p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4842,Test,Test,4842,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['Test'],['Test']
Testability,PASSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv fc: * occ -ene0] PASSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf conv fc: * occ -ene0] PASSED [ 21%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf conv fc: * occ -ene0] PASSED [ 21%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf df fc: dfocc-ene0] PASSED [ 23%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf df fc: dfocc-ene0] PASSED [ 23%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf df fc: dfocc-ene0] PASSED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf df ae: dfocc-ene0] PASSED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df fc: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf cd/df fc: dfocc-ene0] PASSED [ 28%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf cd/df fc: dfocc-ene0] PASSED [ 28%]; ../tests/pytests/test_mp2.py::test_mp,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:5366,test,tests,5366,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,PASSED [ 83%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf conv ae: dd -grd0] PASSED [ 83%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf conv ae: dd -grd1] PASSED [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf conv ae: dd -grd0] PASSED [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf conv ae: dd -grd1] XFAIL [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf conv ae: dd -grd0] PASSED [ 85%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df fc: dd -grd1] PASSED [ 85%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df fc: dd -grd0] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df fc: dd -grd1] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df fc: dd -grd0] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df fc: dd -grd1] XFAIL [ 87%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df fc: dd -grd0] PASSED [ 87%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df ae: dd -grd1] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df ae: dd -grd0] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df ae: dd -grd1] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df ae: dd -grd0] PASSED [ 89%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df ae: dd -grd1] XFAIL [ 89%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df ae: dd -grd0] PASSED [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf cd fc: dd -grd1] XFAIL [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf cd fc: dd -grd0] XFAIL [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf cd fc: dd -grd1] XFAIL [ 91%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:20441,test,tests,20441,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,"PASSED; 	Ne: DSD-BLYP_PT2..................................................PASSED; 	Ne: DSD-BLYP......................................................PASSED; 	Ne: PBE0-DH DFT...................................................PASSED; 	Ne: PBE0-DH PT2...................................................PASSED; 	Ne: PBE0-DH.......................................................PASSED; 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 109, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\p4util\util.py"", line 227, in compare_values; raise TestComparisonError(message). TestComparisonError: 	PBE0-2: Water: computed value (-150.8272119) does not match (-152.6486355) to 6 digits.; Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ). Start 367: dft-custom-hybrid; 22/24 Test #367: dft-custom-hybrid ................ Passed 46.21 sec; Start 368: dft-custom-mgga; 23/24 Test #368: dft-custom-mgga .................. Passed 244.44 sec; Start 369: dft-custom-gga; 24/24 Test #369: dft-custom-gga ...................***Failed 171.36 sec; 	Ne: BLYP..........................................................PASSED; 	Ne: SVWN..........................................................PASSED; 	Ne: PBE...........................................................PASSED; 	Ne: PW91..........................................................PASSED; 	Ne: MPWPW.........................................................PASSED; Error occurred in file: C:\Users\User\psi4.git\psi4\src\psi4\libpsi4util\process.cc on line: 112; Traceback (most recent call last):; File ""C:/Users/User/psi4.git/win_install/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 44, in <module>; File ""C:\Users\User\psi4.git\win_install\lib\psi4\driver\driver.py"", line 492, in energy; wfn = ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-404224014:4744,Test,Test,4744,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-404224014,1,['Test'],['Test']
Testability,"PBEh-3c passes the wrong energy into Optking or Findif, sometimes, for some molecules. It happens for O2(s) but not for C3H8. See the O2(s) log posted here:. [O2 logfile](https://github.com/psi4/psi4/files/2573213/o2.txt). As @hokru pointed out, it's the D3 dispersion energy of O2 that gets forwarded instead of the total energy, the most likely culprit (as identified by @andysim) is here:. https://github.com/psi4/psi4/blob/8cb0765c2735b0735fc3468d210d258de476a72b/psi4/driver/qcdb/intf_dftd3/runner.py#L88",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1356:140,log,log,140,https://psicode.org,https://github.com/psi4/psi4/issues/1356,2,['log'],"['log', 'logfile']"
Testability,PED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:486: Not detecting module pcmsolver. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:733: Not detecting module erd. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:741: Not detecting module simint. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:783: Not detecting module cfour. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:816: Not detecting module v2rdm_casscf. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:868: Not detecting module gpu_dfcc. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:931: Not detecting module dkh. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1015: Not detecting module snsmp2. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1031: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1099: Not detecting module resp. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1189: Not detecting module fockci. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:1213: Not detecting module cppe. Install package if necessary to enable tests.; SKIPPED [1] psi4conda\envs\psi4env\lib\site-packages\psi4\tests\test_addons.py:12,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074:13965,test,tests,13965,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875256074,1,['test'],['tests']
Testability,"PED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf FAILED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py::test_grimme_3c PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_basic PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cas PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_cc PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_dfmp2 PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_sapt PASSED; psi4conda/lib/python3.5/site-packages/psi4/tests/test_psi4.py::test_psi4_scfproperty PASSED. ==================================================== FAILURES =====================================================; ________________________________________________ test_v2rdm_casscf ________________________________________________. @using_v2rdm_casscf; def test_v2rdm_casscf():; """"""v2rdm_casscf/tests/v2rdm1""""""; #! cc-pvdz N2 (6,6) active space Test DQG. print(' N2 / cc-pVDZ / DQG(6,6), scf_type = CD / 1e-12, rNN = 0.5 A'). import v2rdm_casscf. n2 = psi4.geometry(""""""; 0 1; n; n 1 r; """"""). interloper = psi4.geometry(""""""; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; """"""). psi4.set_options({; 'basis': 'cc-pvdz',; 'scf_type': 'cd',; 'cholesky_tolerance': 1e-12,; 'd_convergence': 1e-10,; 'maxiter': 500,; 'restricted_docc': [ 2, 0, 0, 0, 0, 2, 0, 0 ],; 'active': [ 1, 0, 1, 1, 0, 1, 1, 1 ],; }); ##psi4.set_module_options('v2rdm_casscf', {; psi4.set_options({; # 'positivity': 'dqg',; 'r_convergence': 1e-5,; 'e_convergence': 1e-6,; 'maxiter': 20000,; # #'orbopt_frequency': 1000,; # #'mu_update_frequency': 1000,; }). psi4.activate(n2). n2.r = 0.5; refscf = -103.04337420425350; refv2rdm = -103.086205379481. > psi4.energy('v2rdm-casscf', molecule=n2). /home/je714/psi4conda/lib/python3.5/site-packages/psi4/tests/test_addons.py:741:; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/710:2668,test,tests,2668,https://psicode.org,https://github.com/psi4/psi4/issues/710,2,"['Test', 'test']","['Test', 'tests']"
Testability,"PI & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is detined for the release notes. May be empty. -->; - [x] new methods!; - [x] uhf df ccd E & G; - [x] uhf df ccsd E & G ; - [x] uhf df ccsd(t) E & G (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf df a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd-ccd E; - [x] uhf cd-ccsd E; - [x] uhf cd-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized); - [x] uhf cd a-ccsd(t) E (present but experimental (require `set qc_module occ`) until further optimized). ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] pick over canonical methods and run some basic timings tests; - [x] TODO: kill `new` pass; - [x] TODO: there might be UHF CCD in there, too.; - [x] TODO: merge #2731 first. it has a lot of stdsuite changes that I don't want to rebase through. nevertheless, stdsuite on the new methods is working fine locally. the azure errors are that uhf cc methods are running rather than throwing NYI as it expects.; - [x] TODO: df ccsd(t) gradients need to be marked experimental and semi-hidden until optimization. REVISED 25 Oct; ```; Module comparison timings [s] for CCSD & CCSD(T) energy & gradient; * Benzene, C6H6; * Either aug-cc-pVDZ (192 nbf) or cc-pVDZ (119 nbf); all-electron; * Same singlet system run as RHF & UHF; * CC converged to 1e-7; * 20 GiB, 8 threads. GRADIENT ENERGY; symm c1 symm c1; ---- ---- ---- ----; <<< CCSD/aug-cc-pVDZ >>>. cfour (vcc) rhf conv 132 1650 52 1202 ; ccenergy rhf conv 266 2037 92 1099; dfocc rhf df n/a 420 n/a 230; fnocc rhf df n/a 149. cfour uhf conv 225 3473 90 2413 ; ccenergy uhf conv 463 5196 222 2576; dfocc uhf df n/a 1545 ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2739:1294,test,tests,1294,https://psicode.org,https://github.com/psi4/psi4/pull/2739,1,['test'],['tests']
Testability,"PPED; test_addons.py::test_dkh PASSED; test_psi4.py::test_psi4_basic PASSED; test_psi4.py::test_psi4_cas PASSED; test_psi4.py::test_psi4_cc PASSED; test_psi4.py::test_psi4_dfmp2 PASSED; test_psi4.py::test_psi4_sapt PASSED; test_psi4.py::test_psi4_scfproperty PASSED. =============================================== 15 passed, 4 skipped, 1 xpassed in 124.33 seconds ================================================; ```. Running `pytest -v -k 'not test_gdma' /home/joao/current/lib/python3.6/site-packages/psi4/tests/*.py`, where `/home/joao/current` is a symlink to `miniconda3`, gives me:. ```; ============================================================== test session starts ===============================================================; platform linux -- Python 3.6.1, pytest-3.1.2, py-1.4.34, pluggy-0.4.0 -- /home/joao/miniconda3/bin/python; cachedir: ../../../../../../.cache; rootdir: /home/joao, inifile:; collected 20 items . ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_aaa_profiling.py::test_threaded_blas <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_aaa_profiling.py XPASS; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_mrcc <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py SKIPPED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_chemps2 <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py PASSED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_dftd3 <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py PASSED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_libefp <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py PASSED; ../../../../../../current/lib/python3.6/site-packages/psi4/tests/test_addons.py::test_pcmsolver <- miniconda3/lib/python3.6/site-packages/psi4/tests/test_addons.py PASSED; ../../../../../../current",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/820:2196,test,tests,2196,https://psicode.org,https://github.com/psi4/psi4/issues/820,1,['test'],['tests']
Testability,"PR #1289 marks the `opt-full-hess-every` test as disabled on AppVeyor. As I commented in the AppVeyor file, that test requires angular momentum 6, due to the form that second derivative skeleton integrals take. Given AppVeyor's tendency to timeout, I opted to just exclude that test, rather than compile with higher angular momentum and make the timeout problem worse.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-433666463:41,test,test,41,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-433666463,3,['test'],['test']
Testability,"PR #922 should address the `DSD-xxx`-class of functionals. I have also modified the `dashparams.py` in that PR, however I plan to expand the dashparams even further (to include references as well and to automatically generate the functionals listed). . It would be really good to get these tests merged. My wish would be to have reference values from Psi4 1.1 (or even 1.2a1.dev781 - which is the latest conda release, if we trust them) in addition to Q-Chem, to make the comparison with PR #922 easier.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/880#issuecomment-369512570:290,test,tests,290,https://psicode.org,https://github.com/psi4/psi4/pull/880#issuecomment-369512570,1,['test'],['tests']
Testability,"PR affects the user.; This is destined for the release notes. May be empty. -->; - [x] Internal code has been replaced by an external Python module, QCManyBody; - [x] Several n-body efficiency improvements and a new option `supersystem_ie_only` that computes the IE rather than MBE, useful for trimers and larger.; - [x] bug fix for gradient or Hessian vmfc for max_nbody >=3. ## Dev notes & details; * Unrelated; - [x] updated basis_set_exchange to v0.10 and probably fixed the internal build; - [x] switched internal build of optking to a tag that can work with py312; - [x] qcvar `GEOMETRY ITERATIONS` wasn't actually getting set. `OPTIMIZATION ITERATIONS` is actually listed in the docs glossary, so switched to that and set it.; - [x] added `resp` to the codedeps now that it's on c-f, and thus to the ecosystem testing; - [x] fixed previously excused docs links to qcfractal; - [x] added back dftd4 to ecosystem for py312; * QCManyBody: build; - [x] Adds a new pure-python required dependency, `qcmanybody`, available from c-f or pypi; * QCManyBody: BSSE efficiency improvements/bug fixes; - [x] `bsse_type=cp` + `return_total_data=True` (not default for energy) will now no longer do every species in both supersystem (for cp) and natural (for uncp) basis sets. It will do everything in the supersystem basis (since cp requested) and only monomers in the monomer basis (for rtd=T).; - [x] `driver=g/h` + `return_total_data=False`, an unlikely combination, won't just fail with syntax error; - [x] `bsse_type=vmfc` + `driver=g/h + `max_nbody`>2 are now computed correctly. Previously (at least since v1.6), only the two highest-body terms were getting summed into the contribution, so values were wrong for trimers and above (assuming max_nbody=fragment count).; - [x] `bsse_type=vmfc` + multilevel were running unnecessary calculations, so now more efficient; * QCManyBody output; - [x] the internal driver_nbody code had been setting a lot of terse qcvariables like ""2"", ""3CP"", ""GRADIENT 1"". ",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3160:1177,test,testing,1177,https://psicode.org,https://github.com/psi4/psi4/pull/3160,1,['test'],['testing']
Testability,"PR rebased, CI tests are passing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2684#issuecomment-1481668545:15,test,tests,15,https://psicode.org,https://github.com/psi4/psi4/pull/2684#issuecomment-1481668545,1,['test'],['tests']
Testability,PR template and dlpno test fix,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2718:22,test,test,22,https://psicode.org,https://github.com/psi4/psi4/pull/2718,1,['test'],['test']
Testability,"PRs psi-rking/optking#24 and psi4/psi4#1335 are a pair. Together, they get most optimizations working for Psi. In particular have working:. - [x] ordinary, opt-is-full job optimizations; - [x] collecting all the psivars so psi can read them in. basically, collecting enough to generate a skeleton (mol, basis, psivars) that can be passed back from `psi4.optimize(..., return_wfn=True)`; - [x] inlining optking's logging output into the psi4 output file; - [x] resetting psi4's options on either side of the `optking.run_json_dict()` call. The trouble was that the psi4-s imported by optking were clearing and setting options (as is proper for indep json runs) such that the calling psi4 didn't have its original options in globals upon optking termination; - [x] starting to catch optking errors (str in json) and re-raising them as psi4 errors. Yes, that AlgError vs OptError for exceeding geom_maxiter really stumped me for a while b/c I only got the final error (""dynamic level exceeded"") and I thought it was behaving differently btwn direct optking and psi4 initiated runs. To me it seems clear that if geom_maxiter is exceeded, then optimizer quits directly (though perhaps that's clearer when geom_maxiter=2 than =200). @psi-rking @AlexHeide",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1335#issuecomment-436437450:412,log,logging,412,https://psicode.org,https://github.com/psi4/psi4/pull/1335#issuecomment-436437450,1,['log'],['logging']
Testability,"PSIO error in ""make tests""",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/56:20,test,tests,20,https://psicode.org,https://github.com/psi4/psi4/issues/56,1,['test'],['tests']
Testability,"PSIO errors are currently being written to `stderr`. (See [this line and the switch statement below](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libpsio/error.cc#L54).) Although the fact that there is a PSIO error is written to the output file, I'm semi-frequently encountering forum users who aren't familiar with `stderr`. It either takes longer than it should for me to get this information, or they can't provide it. For ease of debugging, this error information should be logged somewhere like the output file, where we can guarantee new users will keep it and be able to find it, so they can pass it on to developers.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2019:488,log,logged,488,https://psicode.org,https://github.com/psi4/psi4/issues/2019,1,['log'],['logged']
Testability,"PY cannot find; ""/scratch/appssf/psi4-1.0/tests/cubeprop/Dt.cube.ref"".; ```; The files that CMake tries to copy are not located in psi4-1.0/tests/cubeprop/. ```; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/tests/cubeprop/; CMakeLists.txt input.dat Psi_a_3_1-B2.cube.ref.REMOVED.git-id; Da.cube.ref.REMOVED.git-id output.dat.ref Psi_a_4_3-A1.cube.ref.REMOVED.git-id; Db.cube.ref.REMOVED.git-id output.ref Psi_a_5_1-B1.cube.ref.REMOVED.git-id; Ds.cube.ref.REMOVED.git-id Psi_a_1_1-A1.cube.ref.REMOVED.git-id; Dt.cube.ref.REMOVED.git-id Psi_a_2_2-A1.cube.ref.REMOVED.git-id; [sfux@develop01 psi4-1.0]$; ```; At the end of the output of the setup script, the user is pointed to CMake log files:. ```; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeOutput.log"".; See also ""/scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeError.log"".; ```; These log files do not exist:; ```. [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeOutput.log; ls: cannot access /scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeOutput.log: No such file or directory; [sfux@develop01 psi4-1.0]$ ls /scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeError.log; ls: cannot access /scratch/appssf/psi4-1.0/objdir/CMakeFiles/CMakeError.log: No such file or directory; ```. Complete log of the setup script:. ```. [sfux@develop01 psi4-1.0]$ ./setup --cc gcc --cxx g++ --fc gfortran --type release --prefix /cluster/apps/psi4/1.0/x86_64 --max-am-eri 7 --boost-incdir /cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/include --boost-libdir /cluster/apps/boost/1.55.0/x86_64/serial/gcc_4.8.2/lib64 --omp --blas /cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so --lapack /cluster/apps/openblas/0.2.13_seq/x86_64/gcc_4.8.2/lib/libopenblas.so --cxx11 --zlib-dir /usr --gsl-dir /cluster/apps/gsl/1.16/x86_64/gcc_4.8.2 --hdf5-dir /cluster/apps/hdf5/1.8.12/x86_64/gcc_4.8.2/serial --extra-cc-flags '-ftree-vectorize -march=corei7-avx -mavx' --extra-cxx-flags '-ftree-vectorize",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/581:2376,log,log,2376,https://psicode.org,https://github.com/psi4/psi4/issues/581,1,['log'],['log']
Testability,Parallel Test Suite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2220:9,Test,Test,9,https://psicode.org,https://github.com/psi4/psi4/issues/2220,1,['Test'],['Test']
Testability,"Partially, I'm running these tests with `python psi4 --test`:; ```; 2018-12-05T15:54:19.2192346Z ============================= test session starts =============================; 2018-12-05T15:54:19.2192531Z platform win32 -- Python 3.6.6, pytest-4.0.1, py-1.7.0, pluggy-0.8.0 -- C:\tools\miniconda3\python.exe; 2018-12-05T15:54:19.2193957Z cachedir: .pytest_cache; 2018-12-05T15:54:19.2194153Z rootdir: D:\a\1\b\install, inifile:; 2018-12-05T15:54:19.5028575Z collecting ... collected 43 items / 21 deselected; 2018-12-05T15:54:19.5042204Z ; 2018-12-05T15:54:19.5056742Z ..\lib\psi4\tests\test_addons.py::test_gdma SKIPPED [ 4%]; 2018-12-05T15:54:19.5070445Z ..\lib\psi4\tests\test_addons.py::test_mrcc SKIPPED [ 9%]; 2018-12-05T15:54:19.5085682Z ..\lib\psi4\tests\test_addons.py::test_chemps2 SKIPPED [ 13%]; 2018-12-05T15:54:19.5098425Z ..\lib\psi4\tests\test_addons.py::test_dftd3 SKIPPED [ 18%]; 2018-12-05T15:54:19.5111431Z ..\lib\psi4\tests\test_addons.py::test_libefp SKIPPED [ 22%]; 2018-12-05T15:54:19.5124637Z ..\lib\psi4\tests\test_addons.py::test_pcmsolver SKIPPED [ 27%]; 2018-12-05T15:54:19.5137383Z ..\lib\psi4\tests\test_addons.py::test_erd SKIPPED [ 31%]; 2018-12-05T15:54:19.5159968Z ..\lib\psi4\tests\test_addons.py::test_simint SKIPPED [ 36%]; 2018-12-05T15:54:21.2422176Z ..\lib\psi4\tests\test_addons.py::test_json PASSED [ 40%]; 2018-12-05T15:54:21.2458012Z ..\lib\psi4\tests\test_addons.py::test_cfour SKIPPED [ 45%]; 2018-12-05T15:54:21.2473322Z ..\lib\psi4\tests\test_addons.py::test_v2rdm_casscf SKIPPED [ 50%]; 2018-12-05T15:54:21.2488441Z ..\lib\psi4\tests\test_addons.py::test_gpu_dfcc SKIPPED [ 54%]; 2018-12-05T15:54:21.2503496Z ..\lib\psi4\tests\test_addons.py::test_grimme_3c SKIPPED [ 59%]; 2018-12-05T15:54:21.2517677Z ..\lib\psi4\tests\test_addons.py::test_dkh SKIPPED [ 63%]; 2018-12-05T15:54:21.2531717Z ..\lib\psi4\tests\test_addons.py::test_snsmp2 SKIPPED [ 68%]; 2018-12-05T15:54:21.2547307Z ..\lib\psi4\tests\test_addons.py::test_resp SKIPPED [ 72%]; 2018-12",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1399#issuecomment-444539647:29,test,tests,29,https://psicode.org,https://github.com/psi4/psi4/pull/1399#issuecomment-444539647,8,['test'],"['test', 'tests']"
Testability,"Parts are arriving for an AMD server in our lab, so this may get more testing. But for now, OpenBLAS is going to go the way of Accelerate (on Mac) and just get a nice Use At Your Own Risk warning. I daresay Psi could use openblas directives better, but the stack of difficulties (wrong fctls, scaling, numpy compatibility, conda compatibility) is too high when there's a free, compatible, and working alternative in place. Glad to revisit periodically. P. S. There might be a further technical choice why the conda openblas package isn't building the Fortran/LAPACK code with optimizations (https://github.com/psi4/psi4/issues/1009#issuecomment-387075271), but an immediate technical reason is that conda gfortran 7.2.0 isn't distributing `omp_lib.[h|mod]`, so threading isn't avail.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009#issuecomment-391015669:70,test,testing,70,https://psicode.org,https://github.com/psi4/psi4/issues/1009#issuecomment-391015669,1,['test'],['testing']
Testability,"Passed 0.56 sec; 406/411 Test #308: pywrap-db3 ....................... Passed 0.70 sec; 407/411 Test #402: json-schema-1-throws ............. Passed 0.54 sec; 408/411 Test #364: options1 ......................... Passed 0.58 sec; 409/411 Test #87: cepa1 ............................ Passed 1.69 sec; 410/411 Test #18: cbs-xtpl-func .................... Passed 1416.82 sec; 411/411 Test #318: sapt4 ............................ Passed 1680.10 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 56.67 sec*proc (2 tests); autotest = 2018.64 sec*proc (26 tests); cart = 19448.39 sec*proc (123 tests); cas = 58.63 sec*proc (1 test); casscf = 130.95 sec*proc (11 tests); cbs = 2775.51 sec*proc (10 tests); cc = 15156.58 sec*proc (65 tests); cdomp2 = 67.70 sec*proc (2 tests); cepa = 222.04 sec*proc (7 tests); ci = 109.70 sec*proc (8 tests); cisd = 189.39 sec*proc (7 tests); cookbook = 200.39 sec*proc (1 test); cubeprop = 18.11 sec*proc (2 tests); dcft = 5366.23 sec*proc (13 tests); df = 2660.25 sec*proc (38 tests); dfccd = 3.65 sec*proc (1 test); dfccd-grad = 7.89 sec*proc (1 test); dfccdl = 5.38 sec*proc (1 test); dfccsd = 2.50 sec*proc (1 test); dfccsd-grad = 58.61 sec*proc (1 test); dfccsd-t-grad = 49.75 sec*proc (1 test); dfccsdat = 13.69 sec*proc (1 test); dfccsdl = 5.69 sec*proc (1 test); dfccsdt = 12.58 sec*proc (1 test); dfep2 = 7.96 sec*proc (2 tests); dfmp2 = 181.37 sec*proc (11 tests); dfomp2 = 1655.18 sec*proc (7 tests); dfomp2.5 = 182.29 sec*proc (4 tests); dfomp3 = 257.66 sec*proc (4 tests); dfscf = 135.99 sec*proc (1 test); dft = 1395.19 sec*proc (27 tests); docs = 1.30 sec*proc (2 tests); ecp = 63.18 sec*proc (2 tests); fci = 14.46 sec*proc (2 tests); fcidump = 10.01 sec*proc (1 test); findif = 851.83 sec*proc (5 tests); fnocc = 101.30 sec*proc (4 tests); freq = 1354.12 sec*proc (6 tests); gradient = 2622.57 sec*proc (16 tests); json = 14.03 sec*proc (8 tests); longtests = 3313.72 sec*proc (5 tests); mcscf = 2.89 sec*proc (3 tests); minites",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:38947,test,tests,38947,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['test'],['tests']
Testability,"Passed 0.58 sec; 409/411 Test #87: cepa1 ............................ Passed 1.69 sec; 410/411 Test #18: cbs-xtpl-func .................... Passed 1416.82 sec; 411/411 Test #318: sapt4 ............................ Passed 1680.10 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 56.67 sec*proc (2 tests); autotest = 2018.64 sec*proc (26 tests); cart = 19448.39 sec*proc (123 tests); cas = 58.63 sec*proc (1 test); casscf = 130.95 sec*proc (11 tests); cbs = 2775.51 sec*proc (10 tests); cc = 15156.58 sec*proc (65 tests); cdomp2 = 67.70 sec*proc (2 tests); cepa = 222.04 sec*proc (7 tests); ci = 109.70 sec*proc (8 tests); cisd = 189.39 sec*proc (7 tests); cookbook = 200.39 sec*proc (1 test); cubeprop = 18.11 sec*proc (2 tests); dcft = 5366.23 sec*proc (13 tests); df = 2660.25 sec*proc (38 tests); dfccd = 3.65 sec*proc (1 test); dfccd-grad = 7.89 sec*proc (1 test); dfccdl = 5.38 sec*proc (1 test); dfccsd = 2.50 sec*proc (1 test); dfccsd-grad = 58.61 sec*proc (1 test); dfccsd-t-grad = 49.75 sec*proc (1 test); dfccsdat = 13.69 sec*proc (1 test); dfccsdl = 5.69 sec*proc (1 test); dfccsdt = 12.58 sec*proc (1 test); dfep2 = 7.96 sec*proc (2 tests); dfmp2 = 181.37 sec*proc (11 tests); dfomp2 = 1655.18 sec*proc (7 tests); dfomp2.5 = 182.29 sec*proc (4 tests); dfomp3 = 257.66 sec*proc (4 tests); dfscf = 135.99 sec*proc (1 test); dft = 1395.19 sec*proc (27 tests); docs = 1.30 sec*proc (2 tests); ecp = 63.18 sec*proc (2 tests); fci = 14.46 sec*proc (2 tests); fcidump = 10.01 sec*proc (1 test); findif = 851.83 sec*proc (5 tests); fnocc = 101.30 sec*proc (4 tests); freq = 1354.12 sec*proc (6 tests); gradient = 2622.57 sec*proc (16 tests); json = 14.03 sec*proc (8 tests); longtests = 3313.72 sec*proc (5 tests); mcscf = 2.89 sec*proc (3 tests); minitests = 68.94 sec*proc (4 tests); mints = 81.69 sec*proc (14 tests); misc = 515.57 sec*proc (16 tests); mp2 = 533.59 sec*proc (13 tests); nbody = 70.79 sec*proc (2 tests); numpy = 0.72 sec*proc (1 test); ocepa = 1056.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:39156,test,test,39156,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['test'],['test']
Testability,Passed 0.59 sec; Start 365: cubeprop-esp; 351/411 Test #363: zaptn-nh2 ........................ Passed 2.66 sec; Start 366: dft-smoke; 352/411 Test #362: x2c3 ............................. Passed 2.82 sec; Start 367: scf-hess1; 353/411 Test #342: soscf-dft ........................ Passed 31.94 sec; Start 368: scf-freq1; 354/411 Test #365: cubeprop-esp ..................... Passed 9.28 sec; Start 369: dft-jk; 355/411 Test #367: scf-hess1 ........................ Passed 8.14 sec; Start 370: scf-coverage; 356/411 Test #358: tu5-sapt ......................... Passed 23.64 sec; Start 371: dft-custom-dhdf; 357/411 Test #360: x2c1 ............................. Passed 19.20 sec; Start 372: dft-custom-hybrid; 358/411 Test #368: scf-freq1 ........................ Passed 9.41 sec; Start 373: dft-custom-mgga; 359/411 Test #370: scf-coverage ..................... Passed 4.41 sec; Start 374: dft-custom-gga; 360/411 Test #366: dft-smoke ........................ Passed 12.74 sec; Start 375: pywrap-bfs; 361/411 Test #369: dft-jk ........................... Passed 11.46 sec; Start 376: pywrap-align; 362/411 Test #348: sapt-compare ..................... Passed 43.16 sec; Start 377: pywrap-align-chiral; 363/411 Test #372: dft-custom-hybrid ................ Passed 11.01 sec; Start 378: mints12; 364/411 Test #378: mints12 .......................... Passed 1.20 sec; Start 379: cc-module; 365/411 Test #376: pywrap-align ..................... Passed 4.55 sec; Start 380: psi4numpy-cphf; 366/411 Test #377: pywrap-align-chiral .............. Passed 3.66 sec; Start 381: psi4numpy-dfmp2; 367/411 Test #380: psi4numpy-cphf ................... Passed 1.91 sec; Start 382: psi4numpy-rhf; 368/411 Test #381: psi4numpy-dfmp2 .................. Passed 2.24 sec; Start 383: psi4numpy-rhf-gradient; 369/411 Test #382: psi4numpy-rhf .................... Passed 0.93 sec; Start 384: psi4numpy-rhf-hessian; 370/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.17 sec; Start 385: psi4numpy-fci; 371/411 Te,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:33707,Test,Test,33707,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,"Passed 0.61 sec; 406/411 Test #408: skeletonmointegrals .............. Passed 4.60 sec; 407/411 Test #410: skeletonsointegrals .............. Passed 4.49 sec; 408/411 Test #349: sapt-sf1 ......................... Passed 3.12 sec; 409/411 Test #87: cepa1 ............................ Passed 5.47 sec; 410/411 Test #18: cbs-xtpl-func .................... Passed 2000.15 sec; 411/411 Test #318: sapt4 ............................ Passed 1871.45 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 67.75 sec*proc (2 tests); autotest = 2217.88 sec*proc (26 tests); cart = 17309.12 sec*proc (123 tests); cas = 63.75 sec*proc (1 test); casscf = 207.34 sec*proc (11 tests); cbs = 3024.91 sec*proc (10 tests); cc = 11653.26 sec*proc (65 tests); cdomp2 = 75.20 sec*proc (2 tests); cepa = 253.57 sec*proc (7 tests); ci = 131.85 sec*proc (8 tests); cisd = 199.49 sec*proc (7 tests); cookbook = 296.52 sec*proc (1 test); cubeprop = 22.81 sec*proc (2 tests); dcft = 3896.27 sec*proc (13 tests); df = 2444.55 sec*proc (38 tests); dfccd = 4.88 sec*proc (1 test); dfccd-grad = 31.02 sec*proc (1 test); dfccdl = 2.89 sec*proc (1 test); dfccsd = 16.62 sec*proc (1 test); dfccsd-grad = 68.53 sec*proc (1 test); dfccsd-t-grad = 46.35 sec*proc (1 test); dfccsdat = 27.13 sec*proc (1 test); dfccsdl = 13.23 sec*proc (1 test); dfccsdt = 13.28 sec*proc (1 test); dfep2 = 6.77 sec*proc (2 tests); dfmp2 = 167.49 sec*proc (11 tests); dfomp2 = 1313.68 sec*proc (7 tests); dfomp2.5 = 243.87 sec*proc (4 tests); dfomp3 = 247.87 sec*proc (4 tests); dfscf = 147.41 sec*proc (1 test); dft = 1451.45 sec*proc (27 tests); docs = 1.13 sec*proc (2 tests); ecp = 47.83 sec*proc (2 tests); fci = 14.94 sec*proc (2 tests); fcidump = 6.70 sec*proc (1 test); findif = 878.14 sec*proc (5 tests); fnocc = 149.15 sec*proc (4 tests); freq = 1337.06 sec*proc (6 tests); gradient = 2143.48 sec*proc (16 tests); json = 22.77 sec*proc (8 tests); longtests = 3614.71 sec*proc (5 tests); mcscf = 5.87 sec*proc (3 tests); minit",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:38938,test,tests,38938,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['test'],['tests']
Testability,"Passed 0.62 sec; Start 402: json-schema-1-throws; 402/411 Test #175: docs-dft ......................... Passed 0.59 sec; Start 215: mints4; 403/411 Test #174: docs-bases ....................... Passed 0.53 sec; Start 87: cepa1; 404/411 Test #216: mints5 ........................... Passed 0.58 sec; 405/411 Test #208: matrix1 .......................... Passed 0.54 sec; 406/411 Test #212: mints1 ........................... Passed 0.55 sec; 407/411 Test #364: options1 ......................... Passed 0.56 sec; 408/411 Test #402: json-schema-1-throws ............. Passed 0.55 sec; 409/411 Test #215: mints4 ........................... Passed 0.52 sec; 410/411 Test #87: cepa1 ............................ Passed 1.39 sec; 411/411 Test #318: sapt4 ............................ Passed 2011.89 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 67.22 sec*proc (2 tests); autotest = 804.67 sec*proc (26 tests); cart = 11287.07 sec*proc (123 tests); cas = 50.10 sec*proc (1 test); casscf = 57.38 sec*proc (11 tests); cbs = 901.95 sec*proc (10 tests); cc = 3510.91 sec*proc (65 tests); cdomp2 = 32.39 sec*proc (2 tests); cepa = 88.72 sec*proc (7 tests); ci = 91.10 sec*proc (8 tests); cisd = 152.27 sec*proc (7 tests); cookbook = 60.55 sec*proc (1 test); cubeprop = 18.54 sec*proc (2 tests); dcft = 1565.92 sec*proc (13 tests); df = 802.06 sec*proc (38 tests); dfccd = 1.64 sec*proc (1 test); dfccd-grad = 3.54 sec*proc (1 test); dfccdl = 2.21 sec*proc (1 test); dfccsd = 1.71 sec*proc (1 test); dfccsd-grad = 22.78 sec*proc (1 test); dfccsd-t-grad = 21.28 sec*proc (1 test); dfccsdat = 3.87 sec*proc (1 test); dfccsdl = 1.60 sec*proc (1 test); dfccsdt = 2.22 sec*proc (1 test); dfep2 = 4.59 sec*proc (2 tests); dfmp2 = 116.41 sec*proc (11 tests); dfomp2 = 225.13 sec*proc (7 tests); dfomp2.5 = 98.09 sec*proc (4 tests); dfomp3 = 94.63 sec*proc (4 tests); dfscf = 143.19 sec*proc (1 test); dft = 1426.34 sec*proc (27 tests); docs = 1.13 sec*proc (2 tests); ecp = 37.80 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:38514,test,test,38514,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['test'],['test']
Testability,"Passed 0.64 sec; 407/412 Test #209: matrix1 .......................... Passed 0.60 sec; 408/412 Test #403: json-schema-1-throws ............. Passed 0.61 sec; 409/412 Test #216: mints4 ........................... Passed 0.69 sec; 410/412 Test #88: cepa1 ............................ Passed 3.82 sec; 411/412 Test #179: fsapt1 ........................... Passed 2092.87 sec; 412/412 Test #319: sapt4 ............................ Passed 1889.90 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 67.82 sec*proc (2 tests); autotest = 1800.93 sec*proc (26 tests); cart = 13506.06 sec*proc (123 tests); cas = 57.32 sec*proc (1 test); casscf = 134.01 sec*proc (11 tests); cbs = 1989.43 sec*proc (11 tests); cc = 6412.95 sec*proc (65 tests); cdomp2 = 56.88 sec*proc (2 tests); cepa = 174.00 sec*proc (7 tests); ci = 111.69 sec*proc (8 tests); cisd = 167.25 sec*proc (7 tests); cookbook = 106.36 sec*proc (1 test); cubeprop = 20.00 sec*proc (2 tests); dcft = 2235.18 sec*proc (13 tests); df = 1736.05 sec*proc (38 tests); dfccd = 2.49 sec*proc (1 test); dfccd-grad = 25.96 sec*proc (1 test); dfccdl = 6.36 sec*proc (1 test); dfccsd = 10.68 sec*proc (1 test); dfccsd-grad = 67.76 sec*proc (1 test); dfccsd-t-grad = 53.28 sec*proc (1 test); dfccsdat = 26.53 sec*proc (1 test); dfccsdl = 8.79 sec*proc (1 test); dfccsdt = 9.67 sec*proc (1 test); dfep2 = 7.44 sec*proc (2 tests); dfmp2 = 168.71 sec*proc (11 tests); dfomp2 = 582.73 sec*proc (7 tests); dfomp2.5 = 251.39 sec*proc (4 tests); dfomp3 = 254.37 sec*proc (4 tests); dfscf = 147.69 sec*proc (1 test); dft = 1501.94 sec*proc (27 tests); docs = 1.41 sec*proc (2 tests); ecp = 74.38 sec*proc (2 tests); fci = 14.93 sec*proc (2 tests); fcidump = 5.35 sec*proc (1 test); findif = 1006.54 sec*proc (5 tests); fnocc = 137.57 sec*proc (4 tests); freq = 884.49 sec*proc (6 tests); gradient = 951.43 sec*proc (16 tests); json = 15.47 sec*proc (8 tests); longtests = 3678.48 sec*proc (5 tests); mcscf = 4.89 sec*proc (3 tests); minitests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:39026,test,tests,39026,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['test'],['tests']
Testability,"Passed 0.65 sec; 407/412 Test #403: json-schema-1-throws ............. Passed 0.56 sec; 408/412 Test #410: skeletonscf ...................... Passed 0.72 sec; 409/412 Test #299: pubchem2 ......................... Passed 2.81 sec; 410/412 Test #88: cepa1 ............................ Passed 2.50 sec; 411/412 Test #18: cbs-xtpl-func .................... Passed 1813.92 sec; 412/412 Test #319: sapt4 ............................ Passed 1836.80 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 70.69 sec*proc (2 tests); autotest = 2556.99 sec*proc (26 tests); cart = 21773.03 sec*proc (123 tests); cas = 60.88 sec*proc (1 test); casscf = 144.78 sec*proc (11 tests); cbs = 3125.37 sec*proc (11 tests); cc = 16149.11 sec*proc (65 tests); cdomp2 = 61.43 sec*proc (2 tests); cepa = 182.76 sec*proc (7 tests); ci = 123.18 sec*proc (8 tests); cisd = 220.81 sec*proc (7 tests); cookbook = 326.91 sec*proc (1 test); cubeprop = 20.97 sec*proc (2 tests); dcft = 6096.43 sec*proc (13 tests); df = 2441.66 sec*proc (38 tests); dfccd = 6.81 sec*proc (1 test); dfccd-grad = 10.47 sec*proc (1 test); dfccdl = 6.55 sec*proc (1 test); dfccsd = 12.15 sec*proc (1 test); dfccsd-grad = 31.96 sec*proc (1 test); dfccsd-t-grad = 31.06 sec*proc (1 test); dfccsdat = 24.22 sec*proc (1 test); dfccsdl = 12.84 sec*proc (1 test); dfccsdt = 8.98 sec*proc (1 test); dfep2 = 8.85 sec*proc (2 tests); dfmp2 = 175.34 sec*proc (11 tests); dfomp2 = 1436.60 sec*proc (7 tests); dfomp2.5 = 241.46 sec*proc (4 tests); dfomp3 = 207.69 sec*proc (4 tests); dfscf = 140.15 sec*proc (1 test); dft = 1476.43 sec*proc (27 tests); docs = 1.48 sec*proc (2 tests); ecp = 63.55 sec*proc (2 tests); fci = 13.51 sec*proc (2 tests); fcidump = 3.82 sec*proc (1 test); findif = 1060.87 sec*proc (5 tests); fnocc = 111.52 sec*proc (4 tests); freq = 1481.00 sec*proc (6 tests); gradient = 2882.67 sec*proc (16 tests); json = 18.91 sec*proc (8 tests); longtests = 3590.72 sec*proc (5 tests); mcscf = 4.04 sec*proc (3 tests); minit",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:39053,test,tests,39053,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['test'],['tests']
Testability,"Passed 0.68 sec; Start 402: json-schema-1-throws; 395/411 Test #411: skeletonwavefunction ............. Passed 2.89 sec; Start 87: cepa1; 396/411 Test #311: rasci-h2o ........................ Passed 4.54 sec; 397/411 Test #211: mcscf3 ........................... Passed 1.29 sec; 398/411 Test #334: scf3 ............................. Passed 1.23 sec; 399/411 Test #208: matrix1 .......................... Passed 0.57 sec; 400/411 Test #409: skeletonscf ...................... Passed 0.61 sec; 401/411 Test #215: mints4 ........................... Passed 0.52 sec; 402/411 Test #174: docs-bases ....................... Passed 0.52 sec; 403/411 Test #212: mints1 ........................... Passed 0.56 sec; 404/411 Test #188: fci-tdm .......................... Passed 3.64 sec; 405/411 Test #402: json-schema-1-throws ............. Passed 0.61 sec; 406/411 Test #408: skeletonmointegrals .............. Passed 4.60 sec; 407/411 Test #410: skeletonsointegrals .............. Passed 4.49 sec; 408/411 Test #349: sapt-sf1 ......................... Passed 3.12 sec; 409/411 Test #87: cepa1 ............................ Passed 5.47 sec; 410/411 Test #18: cbs-xtpl-func .................... Passed 2000.15 sec; 411/411 Test #318: sapt4 ............................ Passed 1871.45 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 67.75 sec*proc (2 tests); autotest = 2217.88 sec*proc (26 tests); cart = 17309.12 sec*proc (123 tests); cas = 63.75 sec*proc (1 test); casscf = 207.34 sec*proc (11 tests); cbs = 3024.91 sec*proc (10 tests); cc = 11653.26 sec*proc (65 tests); cdomp2 = 75.20 sec*proc (2 tests); cepa = 253.57 sec*proc (7 tests); ci = 131.85 sec*proc (8 tests); cisd = 199.49 sec*proc (7 tests); cookbook = 296.52 sec*proc (1 test); cubeprop = 22.81 sec*proc (2 tests); dcft = 3896.27 sec*proc (13 tests); df = 2444.55 sec*proc (38 tests); dfccd = 4.88 sec*proc (1 test); dfccd-grad = 31.02 sec*proc (1 test); dfccdl = 2.89 sec*proc (1 test); dfccsd = 16.62 sec*proc (1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:38106,Test,Test,38106,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,"Passed 0.70 sec; Start 175: docs-dft; 396/411 Test #382: psi4numpy-rhf .................... Passed 0.83 sec; Start 174: docs-bases; 397/411 Test #354: tu2-ch2-energy ................... Passed 0.86 sec; Start 216: mints5; 398/411 Test #334: scf3 ............................. Passed 0.73 sec; Start 208: matrix1; 399/411 Test #209: mcscf1 ........................... Passed 0.69 sec; Start 212: mints1; 400/411 Test #211: mcscf3 ........................... Passed 0.67 sec; Start 364: options1; 401/411 Test #409: skeletonscf ...................... Passed 0.62 sec; Start 402: json-schema-1-throws; 402/411 Test #175: docs-dft ......................... Passed 0.59 sec; Start 215: mints4; 403/411 Test #174: docs-bases ....................... Passed 0.53 sec; Start 87: cepa1; 404/411 Test #216: mints5 ........................... Passed 0.58 sec; 405/411 Test #208: matrix1 .......................... Passed 0.54 sec; 406/411 Test #212: mints1 ........................... Passed 0.55 sec; 407/411 Test #364: options1 ......................... Passed 0.56 sec; 408/411 Test #402: json-schema-1-throws ............. Passed 0.55 sec; 409/411 Test #215: mints4 ........................... Passed 0.52 sec; 410/411 Test #87: cepa1 ............................ Passed 1.39 sec; 411/411 Test #318: sapt4 ............................ Passed 2011.89 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 67.22 sec*proc (2 tests); autotest = 804.67 sec*proc (26 tests); cart = 11287.07 sec*proc (123 tests); cas = 50.10 sec*proc (1 test); casscf = 57.38 sec*proc (11 tests); cbs = 901.95 sec*proc (10 tests); cc = 3510.91 sec*proc (65 tests); cdomp2 = 32.39 sec*proc (2 tests); cepa = 88.72 sec*proc (7 tests); ci = 91.10 sec*proc (8 tests); cisd = 152.27 sec*proc (7 tests); cookbook = 60.55 sec*proc (1 test); cubeprop = 18.54 sec*proc (2 tests); dcft = 1565.92 sec*proc (13 tests); df = 802.06 sec*proc (38 tests); dfccd = 1.64 sec*proc (1 test); dfccd-grad = 3.54 sec*proc (1 test);",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:37965,Test,Test,37965,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,"Passed 0.72 sec; Start 175: docs-dft; 396/411 Test #209: mcscf1 ........................... Passed 0.65 sec; Start 216: mints5; 397/411 Test #188: fci-tdm .......................... Passed 0.82 sec; Start 208: matrix1; 398/411 Test #308: pywrap-db3 ....................... Passed 0.67 sec; Start 212: mints1; 399/411 Test #409: skeletonscf ...................... Passed 0.60 sec; Start 364: options1; 400/411 Test #239: numpy-array-interface ............ Passed 0.64 sec; Start 215: mints4; 401/411 Test #211: mcscf3 ........................... Passed 0.68 sec; Start 174: docs-bases; 402/411 Test #334: scf3 ............................. Passed 0.68 sec; Start 402: json-schema-1-throws; 403/411 Test #175: docs-dft ......................... Passed 0.66 sec; Start 87: cepa1; 404/411 Test #216: mints5 ........................... Passed 0.66 sec; 405/411 Test #208: matrix1 .......................... Passed 0.54 sec; 406/411 Test #212: mints1 ........................... Passed 0.53 sec; 407/411 Test #364: options1 ......................... Passed 0.54 sec; 408/411 Test #215: mints4 ........................... Passed 0.52 sec; 409/411 Test #174: docs-bases ....................... Passed 0.51 sec; 410/411 Test #402: json-schema-1-throws ............. Passed 0.54 sec; 411/411 Test #87: cepa1 ............................ Passed 1.69 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 73.45 sec*proc (2 tests); autotest = 4474.03 sec*proc (26 tests); cart = 23108.76 sec*proc (123 tests); cas = 53.35 sec*proc (1 test); casscf = 207.99 sec*proc (11 tests); cbs = 2868.91 sec*proc (10 tests); cc = 20475.44 sec*proc (65 tests); cdomp2 = 33.09 sec*proc (2 tests); cepa = 541.03 sec*proc (7 tests); ci = 102.84 sec*proc (8 tests); cisd = 183.38 sec*proc (7 tests); cookbook = 956.85 sec*proc (1 test); cubeprop = 21.53 sec*proc (2 tests); dcft = 4616.14 sec*proc (13 tests); df = 1880.42 sec*proc (38 tests); dfccd = 2.46 sec*proc (1 test); dfccd-grad = 4.34 sec*proc (1 t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:38062,Test,Test,38062,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,"Passed 0.77 sec; 409/412 Test #88: cepa1 ............................ Passed 3.01 sec; 410/412 Test #18: cbs-xtpl-func .................... Passed 1324.01 sec; 411/412 Test #179: fsapt1 ........................... Passed 2063.95 sec; 412/412 Test #319: sapt4 ............................ Passed 1882.34 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 70.71 sec*proc (2 tests); autotest = 2082.78 sec*proc (26 tests); cart = 20353.66 sec*proc (123 tests); cas = 63.78 sec*proc (1 test); casscf = 115.98 sec*proc (11 tests); cbs = 2564.15 sec*proc (11 tests); cc = 14415.83 sec*proc (65 tests); cdomp2 = 86.58 sec*proc (2 tests); cepa = 188.90 sec*proc (7 tests); ci = 123.31 sec*proc (8 tests); cisd = 200.90 sec*proc (7 tests); cookbook = 373.24 sec*proc (1 test); cubeprop = 21.39 sec*proc (2 tests); dcft = 5267.53 sec*proc (13 tests); df = 2450.70 sec*proc (38 tests); dfccd = 5.30 sec*proc (1 test); dfccd-grad = 18.35 sec*proc (1 test); dfccdl = 4.43 sec*proc (1 test); dfccsd = 11.22 sec*proc (1 test); dfccsd-grad = 38.81 sec*proc (1 test); dfccsd-t-grad = 46.08 sec*proc (1 test); dfccsdat = 18.08 sec*proc (1 test); dfccsdl = 12.77 sec*proc (1 test); dfccsdt = 8.61 sec*proc (1 test); dfep2 = 6.28 sec*proc (2 tests); dfmp2 = 177.01 sec*proc (11 tests); dfomp2 = 1556.95 sec*proc (7 tests); dfomp2.5 = 142.03 sec*proc (4 tests); dfomp3 = 178.00 sec*proc (4 tests); dfscf = 150.66 sec*proc (1 test); dft = 1457.60 sec*proc (27 tests); docs = 1.47 sec*proc (2 tests); ecp = 69.99 sec*proc (2 tests); fci = 12.53 sec*proc (2 tests); fcidump = 5.16 sec*proc (1 test); findif = 1019.26 sec*proc (5 tests); fnocc = 143.05 sec*proc (4 tests); freq = 1272.87 sec*proc (6 tests); gradient = 2551.58 sec*proc (16 tests); json = 15.79 sec*proc (8 tests); longtests = 3724.28 sec*proc (5 tests); mcscf = 4.46 sec*proc (3 tests); minitests = 80.09 sec*proc (4 tests); mints = 90.36 sec*proc (14 tests); misc = 538.13 sec*proc (16 tests); mp2 = 556.27 sec*proc (13 tests); nb",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:39178,test,test,39178,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['test'],['test']
Testability,"Passed 0.80 sec; Start 403: json-schema-1-throws; 396/412 Test #213: mints1 ........................... Passed 0.80 sec; Start 88: cepa1; 397/412 Test #383: psi4numpy-rhf .................... Passed 0.92 sec; 398/412 Test #310: pywrap-molecule .................. Passed 1.22 sec; 399/412 Test #175: docs-bases ....................... Passed 0.83 sec; 400/412 Test #209: matrix1 .......................... Passed 0.68 sec; 401/412 Test #217: mints5 ........................... Passed 1.06 sec; 402/412 Test #309: pywrap-db3 ....................... Passed 0.77 sec; 403/412 Test #379: mints12 .......................... Passed 1.35 sec; 404/412 Test #216: mints4 ........................... Passed 0.71 sec; 405/412 Test #176: docs-dft ......................... Passed 0.65 sec; 406/412 Test #365: options1 ......................... Passed 0.65 sec; 407/412 Test #403: json-schema-1-throws ............. Passed 0.56 sec; 408/412 Test #410: skeletonscf ...................... Passed 0.72 sec; 409/412 Test #299: pubchem2 ......................... Passed 2.81 sec; 410/412 Test #88: cepa1 ............................ Passed 2.50 sec; 411/412 Test #18: cbs-xtpl-func .................... Passed 1813.92 sec; 412/412 Test #319: sapt4 ............................ Passed 1836.80 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 70.69 sec*proc (2 tests); autotest = 2556.99 sec*proc (26 tests); cart = 21773.03 sec*proc (123 tests); cas = 60.88 sec*proc (1 test); casscf = 144.78 sec*proc (11 tests); cbs = 3125.37 sec*proc (11 tests); cc = 16149.11 sec*proc (65 tests); cdomp2 = 61.43 sec*proc (2 tests); cepa = 182.76 sec*proc (7 tests); ci = 123.18 sec*proc (8 tests); cisd = 220.81 sec*proc (7 tests); cookbook = 326.91 sec*proc (1 test); cubeprop = 20.97 sec*proc (2 tests); dcft = 6096.43 sec*proc (13 tests); df = 2441.66 sec*proc (38 tests); dfccd = 6.81 sec*proc (1 test); dfccd-grad = 10.47 sec*proc (1 test); dfccdl = 6.55 sec*proc (1 test); dfccsd = 12.15 sec*proc (1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:38221,Test,Test,38221,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['Test'],['Test']
Testability,"Passed 0.81 sec; Start 239: numpy-array-interface; 389/404 Test #188: fci-tdm .......................... Passed 0.77 sec; Start 364: options1; 390/404 Test #334: scf3 ............................. Passed 0.82 sec; Start 208: matrix1; 391/404 Test #211: mcscf3 ........................... Passed 0.80 sec; Start 175: docs-dft; 392/404 Test #396: python-memdfjk ................... Passed 0.92 sec; Start 216: mints5; 393/404 Test #209: mcscf1 ........................... Passed 0.78 sec; Start 212: mints1; 394/404 Test #382: psi4numpy-rhf .................... Passed 0.83 sec; Start 174: docs-bases; 395/404 Test #308: pywrap-db3 ....................... Passed 0.71 sec; Start 215: mints4; 396/404 Test #239: numpy-array-interface ............ Passed 0.62 sec; Start 87: cepa1; 397/404 Test #364: options1 ......................... Passed 0.58 sec; 398/404 Test #208: matrix1 .......................... Passed 0.56 sec; 399/404 Test #175: docs-dft ......................... Passed 0.64 sec; 400/404 Test #216: mints5 ........................... Passed 0.61 sec; 401/404 Test #212: mints1 ........................... Passed 0.59 sec; 402/404 Test #174: docs-bases ....................... Passed 0.52 sec; 403/404 Test #215: mints4 ........................... Passed 0.53 sec; 404/404 Test #87: cepa1 ............................ Passed 1.59 sec. 99% tests passed, 1 tests failed out of 404. Label Time Summary:; adc = 61.74 sec*proc (2 tests); autotest = 549.39 sec*proc (26 tests); cart = 6384.55 sec*proc (123 tests); cas = 21.60 sec*proc (1 test); casscf = 37.11 sec*proc (11 tests); cbs = 1326.42 sec*proc (10 tests); cc = 4788.05 sec*proc (65 tests); cdomp2 = 10.66 sec*proc (2 tests); cepa = 57.09 sec*proc (7 tests); ci = 54.97 sec*proc (8 tests); cisd = 54.02 sec*proc (7 tests); cookbook = 199.33 sec*proc (1 test); cubeprop = 15.51 sec*proc (2 tests); dcft = 2231.78 sec*proc (13 tests); df = 781.81 sec*proc (38 tests); dfccd = 1.18 sec*proc (1 test); dfccd-grad = 1.98 sec*proc (1 test); df",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:37170,Test,Test,37170,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['Test'],['Test']
Testability,"Passed 0.89 sec; Start 402: json-schema-1-throws; 395/411 Test #211: mcscf3 ........................... Passed 0.76 sec; Start 87: cepa1; 396/411 Test #309: pywrap-molecule .................. Passed 1.18 sec; 397/411 Test #216: mints5 ........................... Passed 1.01 sec; 398/411 Test #396: python-memdfjk ................... Passed 1.06 sec; 399/411 Test #212: mints1 ........................... Passed 0.85 sec; 400/411 Test #409: skeletonscf ...................... Passed 0.69 sec; 401/411 Test #239: numpy-array-interface ............ Passed 0.72 sec; 402/411 Test #174: docs-bases ....................... Passed 0.62 sec; 403/411 Test #175: docs-dft ......................... Passed 0.68 sec; 404/411 Test #215: mints4 ........................... Passed 0.63 sec; 405/411 Test #208: matrix1 .......................... Passed 0.56 sec; 406/411 Test #308: pywrap-db3 ....................... Passed 0.70 sec; 407/411 Test #402: json-schema-1-throws ............. Passed 0.54 sec; 408/411 Test #364: options1 ......................... Passed 0.58 sec; 409/411 Test #87: cepa1 ............................ Passed 1.69 sec; 410/411 Test #18: cbs-xtpl-func .................... Passed 1416.82 sec; 411/411 Test #318: sapt4 ............................ Passed 1680.10 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 56.67 sec*proc (2 tests); autotest = 2018.64 sec*proc (26 tests); cart = 19448.39 sec*proc (123 tests); cas = 58.63 sec*proc (1 test); casscf = 130.95 sec*proc (11 tests); cbs = 2775.51 sec*proc (10 tests); cc = 15156.58 sec*proc (65 tests); cdomp2 = 67.70 sec*proc (2 tests); cepa = 222.04 sec*proc (7 tests); ci = 109.70 sec*proc (8 tests); cisd = 189.39 sec*proc (7 tests); cookbook = 200.39 sec*proc (1 test); cubeprop = 18.11 sec*proc (2 tests); dcft = 5366.23 sec*proc (13 tests); df = 2660.25 sec*proc (38 tests); dfccd = 3.65 sec*proc (1 test); dfccd-grad = 7.89 sec*proc (1 test); dfccdl = 5.38 sec*proc (1 test); dfccsd = 2.50 sec*proc (1 t",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:38115,Test,Test,38115,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['Test'],['Test']
Testability,Passed 1.04 sec; Start 410: skeletonsointegrals; 379/411 Test #220: mints-helper ..................... Passed 1.15 sec; Start 387: python-energy; 380/411 Test #222: mints10 .......................... Passed 1.24 sec; Start 378: mints12; 381/411 Test #309: pywrap-molecule .................. Passed 1.14 sec; Start 383: psi4numpy-rhf-gradient; 382/411 Test #404: json-schema-1-properties ......... Passed 1.17 sec; Start 353: tu1-h2o-energy; 383/411 Test #190: fci-coverage ..................... Passed 1.91 sec; Start 214: mints3; 384/411 Test #410: skeletonsointegrals .............. Passed 0.90 sec; Start 349: sapt-sf1; 385/411 Test #406: skeletonaointegrals .............. Passed 0.93 sec; Start 396: python-memdfjk; 386/411 Test #387: python-energy .................... Passed 0.72 sec; Start 352: stability2; 387/411 Test #378: mints12 .......................... Passed 1.15 sec; Start 188: fci-tdm; 388/411 Test #396: python-memdfjk ................... Passed 0.88 sec; Start 354: tu2-ch2-energy; 389/411 Test #214: mints3 ........................... Passed 0.99 sec; Start 382: psi4numpy-rhf; 390/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.07 sec; Start 308: pywrap-db3; 391/411 Test #349: sapt-sf1 ......................... Passed 1.10 sec; Start 334: scf3; 392/411 Test #353: tu1-h2o-energy ................... Passed 1.26 sec; Start 209: mcscf1; 393/411 Test #352: stability2 ....................... Passed 1.16 sec; Start 211: mcscf3; 394/411 Test #188: fci-tdm .......................... Passed 0.77 sec; Start 409: skeletonscf; 395/411 Test #308: pywrap-db3 ....................... Passed 0.70 sec; Start 175: docs-dft; 396/411 Test #382: psi4numpy-rhf .................... Passed 0.83 sec; Start 174: docs-bases; 397/411 Test #354: tu2-ch2-energy ................... Passed 0.86 sec; Start 216: mints5; 398/411 Test #334: scf3 ............................. Passed 0.73 sec; Start 208: matrix1; 399/411 Test #209: mcscf1 ........................... Passed 0.69 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:36367,Test,Test,36367,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Passed 1.07 sec; Start 290: psimrcc-ccsd_t-2; 368/413 Test #382: psi4numpy-cphf ................... Passed 1.29 sec; Start 190: fci-tdm; 369/413 Test #123: dfccdl1 .......................... Passed 1.45 sec; Start 223: mints9; 370/413 Test #358: scf-response1 .................... Passed 2.27 sec; Start 384: psi4numpy-rhf; 371/413 Test #120: dfcasscf-fzc-sp .................. Passed 1.74 sec; Start 355: tu1-h2o-energy; 372/413 Test #224: mints10 .......................... Passed 1.32 sec; Start 347: dfep2-2; 373/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 1.56 sec; Start 330: scf-upcast-custom-basis; 374/413 Test #190: fci-tdm .......................... Passed 0.85 sec; Start 351: sapt-sf1; 375/413 Test #313: rasci-h2o ........................ Passed 1.13 sec; Start 222: mints-helper; 376/413 Test #132: dfmp2-2 .......................... Passed 1.70 sec; Start 356: tu2-ch2-energy; 377/413 Test #329: scf-guess-read1 .................. Passed 1.55 sec; Start 8: castup1; 378/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 1.46 sec; Start 332: scf-bs; 379/413 Test #384: psi4numpy-rhf .................... Passed 0.97 sec; Start 216: mints3; 380/413 Test #380: mints12 .......................... Passed 1.30 sec; Start 336: scf3; 381/413 Test #104: decontract ....................... Passed 1.30 sec; Start 300: pubchem2; 382/413 Test #355: tu1-h2o-energy ................... Passed 1.26 sec; Start 212: mcscf2; 383/413 Test #290: psimrcc-ccsd_t-2 ................. Passed 1.63 sec; Start 213: mcscf3; 384/413 Test #356: tu2-ch2-energy ................... Passed 0.86 sec; Start 218: mints5; 385/413 Test #330: scf-upcast-custom-basis .......... Passed 1.54 sec; Start 241: numpy-array-interface; 386/413 Test #351: sapt-sf1 ......................... Passed 1.06 sec; Start 217: mints4; 387/413 Test #222: mints-helper ..................... Passed 1.14 sec; Start 366: options1; 388/413 Test #336: scf3 ............................. Passed 0.87 sec; Start 214: mints1;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:35538,Test,Test,35538,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['Test'],['Test']
Testability,Passed 1.09 sec; Start 398: json-v11-gradient; 374/411 Test #411: skeletonwavefunction ............. Passed 0.99 sec; Start 210: mcscf2; 375/411 Test #333: scf2 ............................. Passed 1.33 sec; Start 330: scf-bs; 376/411 Test #231: mp2p5-grad1 ...................... Passed 1.46 sec; Start 354: tu2-ch2-energy; 377/411 Test #102: decontract ....................... Passed 1.11 sec; Start 406: skeletonaointegrals; 378/411 Test #410: skeletonsointegrals .............. Passed 1.06 sec; Start 222: mints10; 379/411 Test #330: scf-bs ........................... Passed 0.94 sec; Start 188: fci-tdm; 380/411 Test #398: json-v11-gradient ................ Passed 1.11 sec; Start 383: psi4numpy-rhf-gradient; 381/411 Test #298: pubchem2 ......................... Passed 1.60 sec; Start 387: python-energy; 382/411 Test #210: mcscf2 ........................... Passed 1.34 sec; Start 220: mints-helper; 383/411 Test #354: tu2-ch2-energy ................... Passed 0.84 sec; Start 378: mints12; 384/411 Test #188: fci-tdm .......................... Passed 0.80 sec; Start 293: psimrcc-pt2; 385/411 Test #406: skeletonaointegrals .............. Passed 1.10 sec; Start 209: mcscf1; 386/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.07 sec; Start 309: pywrap-molecule; 387/411 Test #387: python-energy .................... Passed 0.79 sec; Start 214: mints3; 388/411 Test #222: mints10 .......................... Passed 1.23 sec; Start 396: python-memdfjk; 389/411 Test #220: mints-helper ..................... Passed 1.06 sec; Start 334: scf3; 390/411 Test #209: mcscf1 ........................... Passed 0.64 sec; Start 382: psi4numpy-rhf; 391/411 Test #378: mints12 .......................... Passed 1.21 sec; Start 211: mcscf3; 392/411 Test #293: psimrcc-pt2 ...................... Passed 0.97 sec; Start 308: pywrap-db3; 393/411 Test #334: scf3 ............................. Passed 0.74 sec; Start 212: mints1; 394/411 Test #396: python-memdfjk ................... Passed 0.94 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:35917,Test,Test,35917,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Passed 1.27 sec; Start 381: psi4numpy-dfmp2; 364/404 Test #349: sapt-sf1 ......................... Passed 0.97 sec; Start 288: psimrcc-ccsd_t-2; 365/404 Test #398: json-v11-gradient ................ Passed 0.92 sec; Start 102: decontract; 366/404 Test #222: mints10 .......................... Passed 1.31 sec; Start 210: mcscf2; 367/404 Test #221: mints9 ........................... Passed 1.96 sec; Start 333: scf2; 368/404 Test #390: python-mints9 .................... Passed 1.90 sec; Start 298: pubchem2; 369/404 Test #395: python-mints13 ................... Passed 1.87 sec; Start 380: psi4numpy-cphf; 370/404 Test #157: dft-grac ......................... Passed 1.29 sec; Start 293: psimrcc-pt2; 371/404 Test #102: decontract ....................... Passed 1.00 sec; Start 289: psimrcc-ccsd_t-3; 372/404 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.26 sec; Start 287: psimrcc-ccsd_t-1; 373/404 Test #210: mcscf2 ........................... Passed 1.25 sec; Start 404: json-schema-1-properties; 374/404 Test #333: scf2 ............................. Passed 1.18 sec; Start 309: pywrap-molecule; 375/404 Test #380: psi4numpy-cphf ................... Passed 1.08 sec; Start 378: mints12; 376/404 Test #381: psi4numpy-dfmp2 .................. Passed 1.45 sec; Start 220: mints-helper; 377/404 Test #293: psimrcc-pt2 ...................... Passed 0.85 sec; Start 383: psi4numpy-rhf-gradient; 378/404 Test #298: pubchem2 ......................... Passed 1.40 sec; Start 214: mints3; 379/404 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.22 sec; Start 387: python-energy; 380/404 Test #404: json-schema-1-properties ......... Passed 1.02 sec; Start 402: json-schema-1-throws; 381/404 Test #383: psi4numpy-rhf-gradient ........... Passed 0.98 sec; Start 188: fci-tdm; 382/404 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.18 sec; Start 396: python-memdfjk; 383/404 Test #309: pywrap-molecule .................. Passed 1.10 sec; Start 334: scf3; 384/404 Test #378: mints12 ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:34794,Test,Test,34794,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['Test'],['Test']
Testability,Passed 1.43 sec; Start 97: cisd-h2o-clpse; 355/413 Test #411: skeletonscf ...................... Passed 0.78 sec; Start 120: dfcasscf-fzc-sp; 356/413 Test #215: mints2 ........................... Passed 2.70 sec; Start 123: dfccdl1; 357/413 Test #365: zaptn-nh2 ........................ Passed 1.88 sec; Start 382: psi4numpy-cphf; 358/413 Test #385: psi4numpy-rhf-gradient ........... Passed 1.27 sec; Start 291: psimrcc-ccsd_t-3; 359/413 Test #363: x2c2 ............................. Passed 1.88 sec; Start 354: stability2; 360/413 Test #295: psimrcc-pt2 ...................... Passed 1.05 sec; Start 224: mints10; 361/413 Test #335: scf2 ............................. Passed 2.12 sec; Start 132: dfmp2-2; 362/413 Test #364: x2c3 ............................. Passed 1.78 sec; Start 329: scf-guess-read1; 363/413 Test #97: cisd-h2o-clpse ................... Passed 1.34 sec; Start 289: psimrcc-ccsd_t-1; 364/413 Test #334: scf-occ .......................... Passed 1.56 sec; Start 313: rasci-h2o; 365/413 Test #353: dft-reference .................... Passed 3.00 sec; Start 380: mints12; 366/413 Test #345: stability1 ....................... Passed 2.37 sec; Start 104: decontract; 367/413 Test #354: stability2 ....................... Passed 1.07 sec; Start 290: psimrcc-ccsd_t-2; 368/413 Test #382: psi4numpy-cphf ................... Passed 1.29 sec; Start 190: fci-tdm; 369/413 Test #123: dfccdl1 .......................... Passed 1.45 sec; Start 223: mints9; 370/413 Test #358: scf-response1 .................... Passed 2.27 sec; Start 384: psi4numpy-rhf; 371/413 Test #120: dfcasscf-fzc-sp .................. Passed 1.74 sec; Start 355: tu1-h2o-energy; 372/413 Test #224: mints10 .......................... Passed 1.32 sec; Start 347: dfep2-2; 373/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 1.56 sec; Start 330: scf-upcast-custom-basis; 374/413 Test #190: fci-tdm .......................... Passed 0.85 sec; Start 351: sapt-sf1; 375/413 Test #313: rasci-h2o ......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:34304,Test,Test,34304,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['Test'],['Test']
Testability,Passed 1.47 sec; Start 234: mp3-grad2; 239/411 Test #234: mp3-grad2 ........................ Passed 1.76 sec; Start 235: mp2-property; 240/411 Test #235: mp2-property ..................... Passed 2.66 sec; Start 236: mpn-bh; 241/411 Test #236: mpn-bh ........................... Passed 3.13 sec; Start 237: nbody-he-cluster; 242/411 Test #237: nbody-he-cluster ................. Passed 25.31 sec; Start 238: nbody-intermediates; 243/411 Test #238: nbody-intermediates .............. Passed 9.70 sec; Start 239: numpy-array-interface; 244/411 Test #239: numpy-array-interface ............ Passed 0.74 sec; Start 240: ocepa-freq1; 245/411 Test #240: ocepa-freq1 ...................... Passed 47.05 sec; Start 241: ocepa-grad1; 246/411 Test #241: ocepa-grad1 ...................... Passed 2.50 sec; Start 242: ocepa-grad2; 247/411 Test #242: ocepa-grad2 ...................... Passed 8.81 sec; Start 243: ocepa1; 248/411 Test #243: ocepa1 ........................... Passed 2.08 sec; Start 244: ocepa2; 249/411 Test #244: ocepa2 ........................... Passed 17.07 sec; Start 245: ocepa3; 250/411 Test #245: ocepa3 ........................... Passed 9.75 sec; Start 246: omp2-1; 251/411 Test #246: omp2-1 ........................... Passed 1.19 sec; Start 247: omp2-2; 252/411 Test #247: omp2-2 ........................... Passed 4.05 sec; Start 248: omp2-3; 253/411 Test #248: omp2-3 ........................... Passed 3.58 sec; Start 249: omp2-4; 254/411 Test #249: omp2-4 ........................... Passed 10.52 sec; Start 250: omp2-5; 255/411 Test #250: omp2-5 ........................... Passed 8.42 sec; Start 251: omp2-grad1; 256/411 Test #251: omp2-grad1 ....................... Passed 2.01 sec; Start 252: omp2-grad2; 257/411 Test #252: omp2-grad2 ....................... Passed 4.91 sec; Start 253: omp2p5-1; 258/411 Test #253: omp2p5-1 ......................... Passed 1.75 sec; Start 254: omp2p5-2; 259/411 Test #254: omp2p5-2 ......................... Passed 3.05 sec; Start 255: omp2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:22723,Test,Test,22723,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Passed 1.52 sec; Start 391: python-mints9; 359/412 Test #357: scf-response1 .................... Passed 2.27 sec; Start 288: psimrcc-ccsd_t-1; 360/412 Test #406: skeleton ......................... Passed 2.68 sec; Start 331: scf-bs; 361/412 Test #391: python-mints9 .................... Passed 2.06 sec; Start 222: mints9; 362/412 Test #363: x2c3 ............................. Passed 3.28 sec; Start 299: pubchem2; 363/412 Test #334: scf2 ............................. Passed 3.04 sec; Start 404: json-schema-1-gradient; 364/412 Test #382: psi4numpy-dfmp2 .................. Passed 3.35 sec; Start 396: python-mints13; 365/412 Test #211: mcscf2 ........................... Passed 3.25 sec; Start 223: mints10; 366/412 Test #161: dft-grac ......................... Passed 3.59 sec; Start 354: tu1-h2o-energy; 367/412 Test #409: skeletonmointegrals .............. Passed 4.13 sec; Start 103: decontract; 368/412 Test #362: x2c2 ............................. Passed 4.28 sec; Start 411: skeletonsointegrals; 369/412 Test #353: stability2 ....................... Passed 3.95 sec; Start 221: mints-helper; 370/412 Test #299: pubchem2 ......................... Passed 1.69 sec; Start 355: tu2-ch2-energy; 371/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 3.29 sec; Start 215: mints3; 372/412 Test #189: fci-tdm .......................... Passed 3.92 sec; Start 384: psi4numpy-rhf-gradient; 373/412 Test #97: cisd-h2o-clpse ................... Passed 5.09 sec; Start 381: psi4numpy-cphf; 374/412 Test #331: scf-bs ........................... Passed 2.43 sec; Start 405: json-schema-1-properties; 375/412 Test #222: mints9 ........................... Passed 2.16 sec; Start 399: json-v11-gradient; 376/412 Test #404: json-schema-1-gradient ........... Passed 2.15 sec; Start 397: python-memdfjk; 377/412 Test #354: tu1-h2o-energy ................... Passed 1.49 sec; Start 401: json-schema-1-ghost; 378/412 Test #223: mints10 .......................... Passed 1.74 sec; Start 379: mints12; 379/412 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:34690,Test,Test,34690,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,"Passed 1.53 sec; Start 410: skeletonsointegrals; 403/411 Test #409: skeletonscf ...................... Passed 0.75 sec; Start 411: skeletonwavefunction; 404/411 Test #408: skeletonmointegrals .............. Passed 1.51 sec; 405/411 Test #411: skeletonwavefunction ............. Passed 1.76 sec; 406/411 Test #410: skeletonsointegrals .............. Passed 1.81 sec; 407/411 Test #371: dft-custom-dhdf .................. Passed 84.13 sec; 408/411 Test #379: cc-module ........................ Passed 42.31 sec; 409/411 Test #386: cookbook-rohf-orb-rot ............ Passed 40.50 sec; 410/411 Test #389: python-pubchem ................... Passed 55.23 sec; 411/411 Test #373: dft-custom-mgga .................. Passed 153.16 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 69.98 sec*proc (2 tests); autotest = 2430.21 sec*proc (26 tests); cart = 17487.73 sec*proc (123 tests); cas = 66.60 sec*proc (1 test); casscf = 150.37 sec*proc (11 tests); cbs = 3292.06 sec*proc (10 tests); cc = 12872.21 sec*proc (65 tests); cdomp2 = 104.56 sec*proc (2 tests); cepa = 417.43 sec*proc (7 tests); ci = 125.33 sec*proc (8 tests); cisd = 241.44 sec*proc (7 tests); cookbook = 40.50 sec*proc (1 test); cubeprop = 21.07 sec*proc (2 tests); dcft = 4916.85 sec*proc (13 tests); df = 2467.51 sec*proc (38 tests); dfccd = 5.49 sec*proc (1 test); dfccd-grad = 28.16 sec*proc (1 test); dfccdl = 9.25 sec*proc (1 test); dfccsd = 20.05 sec*proc (1 test); dfccsd-grad = 75.47 sec*proc (1 test); dfccsd-t-grad = 66.61 sec*proc (1 test); dfccsdat = 35.44 sec*proc (1 test); dfccsdl = 14.70 sec*proc (1 test); dfccsdt = 19.06 sec*proc (1 test); dfep2 = 5.20 sec*proc (2 tests); dfmp2 = 215.63 sec*proc (11 tests); dfomp2 = 1082.73 sec*proc (7 tests); dfomp2.5 = 276.75 sec*proc (4 tests); dfomp3 = 361.41 sec*proc (4 tests); dfscf = 127.56 sec*proc (1 test); dft = 1351.65 sec*proc (27 tests); docs = 1.31 sec*proc (2 tests); ecp = 75.39 sec*proc (2 tests); fci = 14.23 sec*proc (2 tests); fcidump = 9.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:38675,test,tests,38675,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['test'],['tests']
Testability,Passed 1.68 sec; Start 235: mp2-property; 240/411 Test #235: mp2-property ..................... Passed 2.64 sec; Start 236: mpn-bh; 241/411 Test #236: mpn-bh ........................... Passed 3.24 sec; Start 237: nbody-he-cluster; 242/411 Test #237: nbody-he-cluster ................. Passed 25.57 sec; Start 238: nbody-intermediates; 243/411 Test #238: nbody-intermediates .............. Passed 12.03 sec; Start 239: numpy-array-interface; 244/411 Test #239: numpy-array-interface ............ Passed 0.76 sec; Start 240: ocepa-freq1; 245/411 Test #240: ocepa-freq1 ...................... Passed 51.87 sec; Start 241: ocepa-grad1; 246/411 Test #241: ocepa-grad1 ...................... Passed 2.45 sec; Start 242: ocepa-grad2; 247/411 Test #242: ocepa-grad2 ...................... Passed 11.50 sec; Start 243: ocepa1; 248/411 Test #243: ocepa1 ........................... Passed 1.88 sec; Start 244: ocepa2; 249/411 Test #244: ocepa2 ........................... Passed 14.81 sec; Start 245: ocepa3; 250/411 Test #245: ocepa3 ........................... Passed 9.93 sec; Start 246: omp2-1; 251/411 Test #246: omp2-1 ........................... Passed 1.42 sec; Start 247: omp2-2; 252/411 Test #247: omp2-2 ........................... Passed 4.76 sec; Start 248: omp2-3; 253/411 Test #248: omp2-3 ........................... Passed 4.44 sec; Start 249: omp2-4; 254/411 Test #249: omp2-4 ........................... Passed 10.24 sec; Start 250: omp2-5; 255/411 Test #250: omp2-5 ........................... Passed 9.05 sec; Start 251: omp2-grad1; 256/411 Test #251: omp2-grad1 ....................... Passed 2.00 sec; Start 252: omp2-grad2; 257/411 Test #252: omp2-grad2 ....................... Passed 4.71 sec; Start 253: omp2p5-1; 258/411 Test #253: omp2p5-1 ......................... Passed 1.63 sec; Start 254: omp2p5-2; 259/411 Test #254: omp2p5-2 ......................... Passed 3.36 sec; Start 255: omp2p5-grad1; 260/411 Test #255: omp2p5-grad1 ..................... Passed 2.01 sec; Start 256:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:22843,Test,Test,22843,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Passed 1.86 sec; Start 395: python-mints13; 357/411 Test #404: json-schema-1-properties ......... Passed 2.10 sec; Start 157: dft-grac; 358/411 Test #223: molden1 .......................... Passed 3.64 sec; Start 229: mp2-grad2; 359/411 Test #381: psi4numpy-dfmp2 .................. Passed 3.08 sec; Start 289: psimrcc-ccsd_t-3; 360/411 Test #328: scf-upcast-custom-basis .......... Passed 1.98 sec; Start 408: skeletonmointegrals; 361/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 2.96 sec; Start 228: mp2-grad1; 362/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.19 sec; Start 349: sapt-sf1; 363/411 Test #395: python-mints13 ................... Passed 1.96 sec; Start 96: cisd-h2o-clpse; 364/411 Test #408: skeletonmointegrals .............. Passed 1.03 sec; Start 233: mp3-grad1; 365/411 Test #157: dft-grac ......................... Passed 1.50 sec; Start 400: json-schema-1-ghost; 366/411 Test #229: mp2-grad2 ........................ Passed 1.50 sec; Start 333: scf2; 367/411 Test #349: sapt-sf1 ......................... Passed 1.13 sec; Start 353: tu1-h2o-energy; 368/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.53 sec; Start 411: skeletonwavefunction; 369/411 Test #228: mp2-grad1 ........................ Passed 1.56 sec; Start 231: mp2p5-grad1; 370/411 Test #96: cisd-h2o-clpse ................... Passed 1.22 sec; Start 298: pubchem2; 371/411 Test #400: json-schema-1-ghost .............. Passed 1.05 sec; Start 102: decontract; 372/411 Test #233: mp3-grad1 ........................ Passed 1.31 sec; Start 410: skeletonsointegrals; 373/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 398: json-v11-gradient; 374/411 Test #411: skeletonwavefunction ............. Passed 0.99 sec; Start 210: mcscf2; 375/411 Test #333: scf2 ............................. Passed 1.33 sec; Start 330: scf-bs; 376/411 Test #231: mp2p5-grad1 ...................... Passed 1.46 sec; Start 354: tu2-ch2-energy; 377/411 Test #102: decontract ........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:34278,Test,Test,34278,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Passed 1.97 sec; Start 403: json-schema-1-gradient; 356/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.57 sec; Start 407: skeletondfmp2; 357/411 Test #328: scf-upcast-custom-basis .......... Passed 1.39 sec; Start 293: psimrcc-pt2; 358/411 Test #234: mp3-grad2 ........................ Passed 1.45 sec; Start 330: scf-bs; 359/411 Test #203: frac ............................. Passed 1.44 sec; Start 408: skeletonmointegrals; 360/411 Test #233: mp3-grad1 ........................ Passed 1.26 sec; Start 228: mp2-grad1; 361/411 Test #403: json-schema-1-gradient ........... Passed 1.75 sec; Start 287: psimrcc-ccsd_t-1; 362/411 Test #333: scf2 ............................. Passed 1.80 sec; Start 210: mcscf2; 363/411 Test #408: skeletonmointegrals .............. Passed 1.38 sec; Start 229: mp2-grad2; 364/411 Test #293: psimrcc-pt2 ...................... Passed 1.50 sec; Start 298: pubchem2; 365/411 Test #330: scf-bs ........................... Passed 1.49 sec; Start 102: decontract; 366/411 Test #407: skeletondfmp2 .................... Passed 2.02 sec; Start 96: cisd-h2o-clpse; 367/411 Test #228: mp2-grad1 ........................ Passed 1.40 sec; Start 405: skeleton; 368/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.27 sec; Start 231: mp2p5-grad1; 369/411 Test #210: mcscf2 ........................... Passed 1.31 sec; Start 380: psi4numpy-cphf; 370/411 Test #405: skeleton ......................... Passed 0.94 sec; Start 190: fci-coverage; 371/411 Test #102: decontract ....................... Passed 1.14 sec; Start 398: json-v11-gradient; 372/411 Test #96: cisd-h2o-clpse ................... Passed 1.11 sec; Start 411: skeletonwavefunction; 373/411 Test #229: mp2-grad2 ........................ Passed 1.37 sec; Start 220: mints-helper; 374/411 Test #298: pubchem2 ......................... Passed 1.45 sec; Start 222: mints10; 375/411 Test #380: psi4numpy-cphf ................... Passed 1.09 sec; Start 309: pywrap-molecule; 376/411 Test #231: mp2p5-grad1 ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:34130,Test,Test,34130,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Passed 1.98 sec; Start 235: mp2-property; 225/411 Test #232: mp2p5-grad2 ...................... Passed 3.12 sec; Start 236: mpn-bh; 226/411 Test #168: dft1 ............................. Passed 97.74 sec; Start 237: nbody-he-cluster; 227/411 Test #234: mp3-grad2 ........................ Passed 2.56 sec; Start 238: nbody-intermediates; 228/411 Test #235: mp2-property ..................... Passed 3.54 sec; Start 239: numpy-array-interface; 229/411 Test #236: mpn-bh ........................... Passed 3.71 sec; Start 240: ocepa-freq1; 230/411 Test #239: numpy-array-interface ............ Passed 0.69 sec; Start 241: ocepa-grad1; 231/411 Test #145: dfomp2-grad3 ..................... Passed 155.00 sec; Start 242: ocepa-grad2; 232/411 Test #206: ghosts ........................... Passed 33.52 sec; Start 243: ocepa1; 233/411 Test #241: ocepa-grad1 ...................... Passed 3.37 sec; Start 244: ocepa2; 234/411 Test #243: ocepa1 ........................... Passed 2.50 sec; Start 245: ocepa3; 235/411 Test #155: dfscf-bz2 ........................ Passed 142.25 sec; Start 246: omp2-1; 236/411 Test #246: omp2-1 ........................... Passed 2.41 sec; Start 247: omp2-2; 237/411 Test #238: nbody-intermediates .............. Passed 14.13 sec; Start 248: omp2-3; 238/411 Test #247: omp2-2 ........................... Passed 10.28 sec; Start 249: omp2-4; 239/411 Test #219: mints-benchmark .................. Passed 43.79 sec; Start 250: omp2-5; 240/411 Test #248: omp2-3 ........................... Passed 13.55 sec; Start 251: omp2-grad1; 241/411 Test #245: ocepa3 ........................... Passed 24.74 sec; Start 252: omp2-grad2; 242/411 Test #251: omp2-grad1 ....................... Passed 5.30 sec; Start 253: omp2p5-1; 243/411 Test #204: frac-ip-fitting .................. Passed 67.86 sec; Start 254: omp2p5-2; 244/411 Test #242: ocepa-grad2 ...................... Passed 32.93 sec; Start 255: omp2p5-grad1; 245/411 Test #253: omp2p5-1 ......................... Passed 3.18 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:21837,Test,Test,21837,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Passed 10.29 sec; Start 116: ao-dfcasscf-sp; 319/411 Test #235: mp2-property ..................... Passed 3.70 sec; Start 130: dfmp2-2; 320/411 Test #257: omp3-1 ........................... Passed 8.46 sec; Start 328: scf-upcast-custom-basis; 321/411 Test #377: pywrap-align-chiral .............. Passed 2.99 sec; Start 203: frac; 322/411 Test #284: props1 ........................... Passed 5.82 sec; Start 388: python-curve; 323/411 Test #234: mp3-grad2 ........................ Passed 9.24 sec; Start 384: psi4numpy-rhf-hessian; 324/411 Test #85: cepa0-grad1 ...................... Passed 6.89 sec; Start 343: stability1; 325/411 Test #121: dfccdl1 .......................... Passed 5.38 sec; Start 228: mp2-grad1; 326/411 Test #130: dfmp2-2 .......................... Passed 3.53 sec; Start 314: sad1; 327/411 Test #119: dfcasscf-sp ...................... Passed 6.03 sec; Start 363: zaptn-nh2; 328/411 Test #271: opt5 ............................. Passed 5.41 sec; Start 231: mp2p5-grad1; 329/411 Test #328: scf-upcast-custom-basis .......... Passed 3.40 sec; Start 391: python-mints2; 330/411 Test #116: ao-dfcasscf-sp ................... Passed 5.59 sec; Start 397: json-v11-energy; 331/411 Test #251: omp2-grad1 ....................... Passed 10.41 sec; Start 213: mints2; 332/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.55 sec; Start 96: cisd-h2o-clpse; 333/411 Test #229: mp2-grad2 ........................ Passed 6.76 sec; Start 233: mp3-grad1; 334/411 Test #232: mp2p5-grad2 ...................... Passed 6.67 sec; Start 401: json-schema-1-orient; 335/411 Test #343: stability1 ....................... Passed 3.69 sec; Start 362: x2c3; 336/411 Test #228: mp2-grad1 ........................ Passed 2.32 sec; Start 356: scf-response1; 337/411 Test #262: omp3-grad1 ....................... Passed 9.04 sec; Start 289: psimrcc-ccsd_t-3; 338/411 Test #388: python-curve ..................... Passed 4.26 sec; Start 361: x2c2; 339/411 Test #203: frac ............................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:30866,Test,Test,30866,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['Test'],['Test']
Testability,Passed 103.78 sec; Start 186: fci-h2o-2; 187/411 Test #185: fci-h2o .......................... Passed 7.23 sec; Start 187: fci-h2o-fzcv; 188/411 Test #177: extern2 .......................... Passed 29.73 sec; Start 188: fci-tdm; 189/411 Test #188: fci-tdm .......................... Passed 2.64 sec; Start 189: fci-tdm-2; 190/411 Test #187: fci-h2o-fzcv ..................... Passed 6.27 sec; Start 190: fci-coverage; 191/411 Test #186: fci-h2o-2 ........................ Passed 7.96 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 9.36 sec; Start 192: fd-freq-energy; 193/411 Test #190: fci-coverage ..................... Passed 12.29 sec; Start 194: fd-freq-gradient; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.59 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 15.37 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 32.36 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 20.11 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 12.70 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 42.48 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 20.61 sec; Start 202: fnocc4; 201/411 Test #201: fnocc3 ........................... Passed 9.22 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 4.49 sec; Start 204: frac-ip-fitting; 203/411 Test #202: fnocc4 ........................... Passed 26.51 sec; Start 206: ghosts; 204/411 Test #183: isapt2 ........................... Passed 123.56 sec; Start 207: gibbs; 205/411 Test #103: dcft-grad1 ....................... Passed 1178.23 sec; Start 208: matrix1; 206/411 Test #208: matrix1 .......................... Passed 0.63 sec; Start 209: mcscf1; 207/411 Test #209: mcscf1 ........................... Passed 1.56 sec; Start 210: m,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:18214,Test,Test,18214,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['Test'],['Test']
Testability,Passed 11.19 sec; Start 402: json-schema-1-orient; 336/412 Test #334: scf2 ............................. Passed 1.78 sec; Start 86: cepa0-grad1; 337/412 Test #389: python-curve ..................... Passed 3.41 sec; Start 289: psimrcc-ccsd_t-2; 338/412 Test #233: mp2p5-grad2 ...................... Passed 4.60 sec; Start 396: python-mints13; 339/412 Test #382: psi4numpy-dfmp2 .................. Passed 1.89 sec; Start 234: mp3-grad1; 340/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 2.51 sec; Start 333: scf-occ; 341/412 Test #391: python-mints9 .................... Passed 2.22 sec; Start 400: json-schema-1-energy; 342/412 Test #398: json-v11-energy .................. Passed 2.11 sec; Start 161: dft-grac; 343/412 Test #364: zaptn-nh2 ........................ Passed 3.07 sec; Start 362: x2c2; 344/412 Test #204: frac ............................. Passed 2.10 sec; Start 363: x2c3; 345/412 Test #272: opt5 ............................. Passed 2.19 sec; Start 117: ao-dfcasscf-sp; 346/412 Test #402: json-schema-1-orient ............. Passed 2.12 sec; Start 8: castup1; 347/412 Test #222: mints9 ........................... Passed 2.38 sec; Start 247: omp2-1; 348/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 1.96 sec; Start 97: cisd-h2o-clpse; 349/412 Test #121: dfccd1 ........................... Passed 2.49 sec; Start 329: scf-upcast-custom-basis; 350/412 Test #235: mp3-grad2 ........................ Passed 2.65 sec; Start 229: mp2-grad1; 351/412 Test #396: python-mints13 ................... Passed 2.26 sec; Start 299: pubchem2; 352/412 Test #161: dft-grac ......................... Passed 1.98 sec; Start 211: mcscf2; 353/412 Test #333: scf-occ .......................... Passed 2.58 sec; Start 331: scf-bs; 354/412 Test #362: x2c2 ............................. Passed 2.41 sec; Start 404: json-schema-1-gradient; 355/412 Test #234: mp3-grad1 ........................ Passed 2.93 sec; Start 408: skeletondfmp2; 356/412 Test #86: cepa0-grad1 ......................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:32460,Test,Test,32460,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Passed 11.97 sec; Start 348: sapt-dft2; 334/412 Test #346: dfep2-2 .......................... Passed 2.51 sec; Start 349: sapt-compare; 335/412 Test #341: soscf-large ...................... Passed 15.65 sec; Start 350: sapt-sf1; 336/412 Test #350: sapt-sf1 ......................... Passed 2.59 sec; Start 351: dft-custom; 337/412 Test #320: sapt5 ............................ Passed 79.60 sec; Start 352: dft-reference; 338/412 Test #352: dft-reference .................... Passed 3.84 sec; Start 353: stability2; 339/412 Test #353: stability2 ....................... Passed 2.13 sec; Start 354: tu1-h2o-energy; 340/412 Test #354: tu1-h2o-energy ................... Passed 1.92 sec; Start 355: tu2-ch2-energy; 341/412 Test #355: tu2-ch2-energy ................... Passed 2.09 sec; Start 356: tu3-h2o-opt; 342/412 Test #337: scf5 ............................. Passed 38.57 sec; Start 357: scf-response1; 343/412 Test #351: dft-custom ....................... Passed 14.33 sec; Start 358: tu4-h2o-freq; 344/412 Test #356: tu3-h2o-opt ...................... Passed 5.63 sec; Start 359: tu5-sapt; 345/412 Test #357: scf-response1 .................... Passed 3.03 sec; Start 360: tu6-cp-ne2; 346/412 Test #347: sapt-dft1 ........................ Passed 22.98 sec; Start 361: x2c1; 347/412 Test #343: soscf-dft ........................ Passed 34.22 sec; Start 362: x2c2; 348/412 Test #338: scf6 ............................. Passed 40.60 sec; Start 363: x2c3; 349/412 Test #362: x2c2 ............................. Passed 2.21 sec; Start 364: zaptn-nh2; 350/412 Test #363: x2c3 ............................. Passed 2.10 sec; Start 365: options1; 351/412 Test #365: options1 ......................... Passed 0.73 sec; Start 366: cubeprop-esp; 352/412 Test #364: zaptn-nh2 ........................ Passed 3.56 sec; Start 367: dft-smoke; 353/412 Test #358: tu4-h2o-freq ..................... Passed 14.73 sec; Start 368: scf-hess1; 354/412 Test #366: cubeprop-esp ..................... Passed 10.01 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:32112,Test,Test,32112,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['Test'],['Test']
Testability,"Passed 12.28 sec; Start 340: dfep2-1; 301/401 Test #242: omp2-1 ........................... Passed 6.74 sec; Start 187: fcidump; 302/401 Test #376: cc-module, ....................... Passed 310.21 sec; Start 388: python-mints2; 303/401 Test #294: pubchem2 ......................... Passed 1.50 sec; Start 117: dfcasscf-fzc-sp; 304/401 Test #175: fsapt2 ........................... Passed 3.65 sec; Start 397: json-schema_0_ghost; 305/401 Test #279: opt-freeze-coords ................ Passed 7.32 sec; Start 216: mints-helper; 306/401 Test #6: ao-casscf-sp ..................... Passed 7.14 sec; Start 310: sad1; 307/401 Test #350: tu3-h2o-opt ...................... Passed 7.21 sec; Start 231: mp2-property; 308/401 Test #335: scf-property ..................... Passed 4.57 sec; Start 375: mints12; 309/401 Test #206: mcscf2 ........................... Passed 2.91 sec; Start 381: psi4numpy-rhf-hessian; 310/401 Test #261: opt1 ............................. Passed 7.13 sec; Start 395: json-v11_gradient; 311/401 Test #156: dft-grac ......................... Passed 3.35 sec; Start 209: mints2; 312/401 Test #287: psimrcc-fd-freq1 ................. Passed 19.71 sec; Start 218: mints10; 313/401 Test #397: json-schema_0_ghost .............. Passed 1.66 sec; Start 119: dfccd1; 314/401 Test #153: dfrasscf-sp ...................... Passed 13.21 sec; Start 394: json-v11_energy; 315/401 Test #116: dfcasscf-sa-sp ................... Passed 5.80 sec; Start 210: mints3; 316/401 Test #375: mints12 .......................... Passed 1.26 sec; Start 329: scf2; 317/401 Test #388: python-mints2 .................... Passed 2.93 sec; Start 184: fci-tdm; 318/401 Test #4: casscf-semi ...................... Passed 10.57 sec; Start 92: cisd-h2o+-0; 319/401 Test #253: omp3-1 ........................... Passed 6.72 sec; Start 247: omp2-grad1; 320/401 Test #216: mints-helper ..................... Passed 2.11 sec; Start 133: dfmp2-grad1; 321/401 Test #5: casscf-sa-sp ..................... Passed 16.54 sec; Sta",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:29470,Test,Test,29470,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Passed 12.40 sec; Start 187: fci-h2o-2; 277/412 Test #199: freq-isotope2 .................... Passed 12.67 sec; Start 386: psi4numpy-fci; 278/412 Test #181: fsapt-terms ...................... Passed 8.89 sec; Start 142: dfomp2-3; 279/412 Test #233: mp2p5-grad2 ...................... Passed 7.18 sec; Start 100: cisd-sp-2; 280/412 Test #162: dft-ghost ........................ Passed 8.95 sec; Start 6: ao-casscf-sp; 281/412 Test #185: fci-dipole ....................... Passed 8.22 sec; Start 252: omp2-grad1; 282/412 Test #186: fci-h2o .......................... Passed 8.77 sec; Start 118: dfcasscf-sa-sp; 283/412 Test #330: scf-guess-read2 .................. Passed 10.99 sec; Start 284: opt-freeze-coords; 284/412 Test #270: opt3 ............................. Passed 8.62 sec; Start 311: rasci-c2-active; 285/412 Test #256: omp2p5-grad1 ..................... Passed 13.84 sec; Start 137: dfmp2-grad3; 286/412 Test #118: dfcasscf-sa-sp ................... Passed 5.81 sec; Start 96: cisd-h2o+-2; 287/412 Test #136: dfmp2-grad2 ...................... Passed 14.17 sec; Start 188: fci-h2o-fzcv; 288/412 Test #100: cisd-sp-2 ........................ Passed 7.48 sec; Start 86: cepa0-grad1; 289/412 Test #386: psi4numpy-fci .................... Passed 8.74 sec; Start 172: dft2; 290/412 Test #6: ao-casscf-sp ..................... Passed 8.19 sec; Start 377: pywrap-align; 291/412 Test #187: fci-h2o-2 ........................ Passed 9.47 sec; Start 135: dfmp2-grad1; 292/412 Test #244: ocepa1 ........................... Passed 14.54 sec; Start 237: mpn-bh; 293/412 Test #142: dfomp2-3 ......................... Passed 9.68 sec; Start 285: props1; 294/412 Test #252: omp2-grad1 ....................... Passed 9.11 sec; Start 247: omp2-1; 295/412 Test #284: opt-freeze-coords ................ Passed 6.27 sec; Start 117: ao-dfcasscf-sp; 296/412 Test #371: scf-coverage ..................... Passed 11.20 sec; Start 340: scf-property; 297/412 Test #137: dfmp2-grad3 ...................... Passed 4.45 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:26945,Test,Test,26945,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,"Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 test); minitests = 10.99 sec*proc (2 tests); mints = 14.50 sec*proc (6 tests); misc = 48.60 sec*proc (8 tests); mp2 = 11.54 sec*proc (3 tests); nbody = 140.71 sec*proc (2 tests); noc1 = 1576.77 sec*proc (45 tests); numpy = 1.88 sec*proc (1 test); olccd = 11.77 sec*proc (2 tests); omp = 19.01 sec*proc (4 tests); opt = 18.56 sec*proc (3 tests); properties = 234.60 sec*proc (11 tests); psi = 7147.73 sec*proc (184 tests); psi4numpy = 11.43 sec*proc (4 tests); psimrcc = 19.16 sec*proc (5 tests); python = 164.19 sec*proc (10 tests); pywrap = 102.12 sec*proc (5 tests); quicktests = 7213.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:18374,test,test,18374,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930,1,['test'],['test']
Testability,Passed 13.90 sec; Start 290: psimrcc-ccsd_t-4; 287/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 4.82 sec; Start 291: psimrcc-fd-freq1; 288/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 2.70 sec; Start 292: psimrcc-fd-freq2; 289/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 17.94 sec; Start 293: psimrcc-pt2; 290/411 Test #291: psimrcc-fd-freq1 ................. Passed 17.17 sec; Start 294: psimrcc-sp1; 291/411 Test #293: psimrcc-pt2 ...................... Passed 1.90 sec; Start 295: psithon1; 292/411 Test #279: opt14 ............................ Passed 75.20 sec; Start 296: psithon2; 293/411 Test #294: psimrcc-sp1 ...................... Passed 4.68 sec; Start 297: pubchem1; 294/411 Test #295: psithon1 ......................... Passed 14.49 sec; Start 298: pubchem2; 295/411 Test #298: pubchem2 ......................... Passed 1.29 sec; Start 299: pywrap-alias; 296/411 Test #227: mp2-def2 ......................... Passed 402.38 sec; Start 300: pywrap-all; 297/411 Test #280: opt-irc-1 ........................ Passed 93.85 sec; Start 301: pywrap-basis; 298/411 Test #296: psithon2 ......................... Passed 23.69 sec; Start 302: pywrap-cbs1; 299/411 Test #301: pywrap-basis ..................... Passed 22.01 sec; Start 303: pywrap-checkrun-convcrit; 300/411 Test #292: psimrcc-fd-freq2 ................. Passed 74.92 sec; Start 304: pywrap-checkrun-rhf; 301/411 Test #297: pubchem1 ......................... Passed 57.21 sec; Start 305: pywrap-checkrun-rohf; 302/411 Test #303: pywrap-checkrun-convcrit ......... Passed 43.41 sec; Start 306: pywrap-checkrun-uhf; 303/411 Test #240: ocepa-freq1 ...................... Passed 451.57 sec; Start 307: pywrap-db1; 304/411 Test #299: pywrap-alias ..................... Passed 113.78 sec; Start 308: pywrap-db3; 305/411 Test #308: pywrap-db3 ....................... Passed 0.67 sec; Start 309: pywrap-molecule; 306/411 Test #309: pywrap-molecule .................. Passed 1.15 sec; Start 310: rasci-c2-act,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:27503,Test,Test,27503,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Passed 14.09 sec; Start 378: scf-hess1; 78/415 Test #227: molden2 .......................... Passed 12.71 sec; Start 239: mpn-bh; 79/415 Test #292: opt-freeze-coords ................ Passed 8.13 sec; Start 234: mp2p5-grad1; 80/415 Test #334: sapt8 ............................ Passed 16.61 sec; Start 123: dfccd1; 81/415 Test #369: tu5-sapt ......................... Passed 12.10 sec; Start 120: dfcasscf-sa-sp; 82/415 Test #376: cubeprop-esp ..................... Passed 7.51 sec; Start 404: python-3-index-transforms; 83/415 Test #137: dfmp2-grad1 ...................... Passed 9.29 sec; Start 119: ao-dfcasscf-sp; 84/415 Test #160: dfrasscf-sp ...................... Passed 14.00 sec; Start 122: dfcasscf-sp; 85/415 Test #305: psithon1 ......................... Passed 14.10 sec; Start 408: json-v11-energy; 86/415 Test #239: mpn-bh ........................... Passed 7.27 sec; Start 351: soscf-large; 87/415 Test #120: dfcasscf-sa-sp ................... Passed 6.28 sec; Start 121: dfcasscf-fzc-sp; 88/415 Test #234: mp2p5-grad1 ...................... Passed 7.74 sec; Start 95: cisd-h2o+-0; 89/415 Test #404: python-3-index-transforms ........ Passed 6.88 sec; Start 187: fci-dipole; 90/415 Test #123: dfccd1 ........................... Passed 7.27 sec; Start 399: python-curve; 91/415 Test #325: sapt1 ............................ Passed 10.68 sec; Start 183: fsapt-terms; 92/415 Test #119: ao-dfcasscf-sp ................... Passed 6.21 sec; Start 349: scf-property; 93/415 Test #122: dfcasscf-sp ...................... Passed 5.74 sec; Start 410: json-schema-1-energy; 94/415 Test #378: scf-hess1 ........................ Passed 10.20 sec; Start 354: stability1; 95/415 Test #121: dfcasscf-fzc-sp .................. Passed 3.14 sec; Start 238: mp2-property; 96/415 Test #95: cisd-h2o+-0 ...................... Passed 2.89 sec; Start 304: psimrcc-sp1; 97/415 Test #408: json-v11-energy .................. Passed 3.99 sec; Start 341: scf1; 98/415 Test #399: python-curve ..................... Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:8565,Test,Test,8565,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,"Passed 14.54 sec; 408/412 Test #176: docs-dft ......................... Passed 13.56 sec; 409/412 Test #365: options1 ......................... Passed 12.94 sec; 410/412 Test #403: json-schema-1-throws ............. Passed 12.51 sec; 411/412 Test #88: cepa1 ............................ Passed 15.83 sec; 412/412 Test #319: sapt4 ............................ Passed 1912.45 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 95.19 sec*proc (2 tests); autotest = 994.34 sec*proc (26 tests); cart = 14957.35 sec*proc (123 tests); cas = 53.75 sec*proc (1 test); casscf = 214.86 sec*proc (11 tests); cbs = 1085.57 sec*proc (11 tests); cc = 6887.79 sec*proc (65 tests); cdomp2 = 43.27 sec*proc (2 tests); cepa = 141.35 sec*proc (7 tests); ci = 206.59 sec*proc (8 tests); cisd = 285.49 sec*proc (7 tests); cookbook = 66.55 sec*proc (1 test); cubeprop = 44.67 sec*proc (2 tests); dcft = 2708.77 sec*proc (13 tests); df = 1635.28 sec*proc (38 tests); dfccd = 16.56 sec*proc (1 test); dfccd-grad = 13.91 sec*proc (1 test); dfccdl = 26.46 sec*proc (1 test); dfccsd = 15.59 sec*proc (1 test); dfccsd-grad = 22.13 sec*proc (1 test); dfccsd-t-grad = 21.66 sec*proc (1 test); dfccsdat = 12.93 sec*proc (1 test); dfccsdl = 15.16 sec*proc (1 test); dfccsdt = 15.93 sec*proc (1 test); dfep2 = 46.62 sec*proc (2 tests); dfmp2 = 296.86 sec*proc (11 tests); dfomp2 = 798.00 sec*proc (7 tests); dfomp2.5 = 88.35 sec*proc (4 tests); dfomp3 = 65.99 sec*proc (4 tests); dfscf = 149.44 sec*proc (1 test); dft = 1654.52 sec*proc (27 tests); docs = 27.08 sec*proc (2 tests); ecp = 72.20 sec*proc (2 tests); fci = 46.96 sec*proc (2 tests); fcidump = 27.57 sec*proc (1 test); findif = 886.69 sec*proc (5 tests); fnocc = 76.13 sec*proc (4 tests); freq = 827.22 sec*proc (6 tests); gradient = 1290.88 sec*proc (16 tests); json = 147.88 sec*proc (8 tests); longtests = 3606.32 sec*proc (5 tests); mcscf = 44.46 sec*proc (3 tests); minitests = 134.75 sec*proc (4 tests); mints = 278.54 sec*proc (14 tests);",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:39222,test,test,39222,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['test'],['test']
Testability,Passed 1487.57 sec; Start 48: cc31; 17/413 Test #302: pywrap-all ....................... Passed 1522.41 sec; Start 45: cc29; 18/413 Test #77: cc7 .............................. Passed 710.33 sec; Start 114: dcft6; 19/413 Test #157: dft-grad-lr3 ..................... Passed 427.70 sec; Start 18: cbs-xtpl-func; 20/413 Test #229: mp2-def2 ......................... Passed 374.64 sec; Start 183: fsapt-allterms; 21/413 Test #242: ocepa-freq1 ...................... Passed 672.14 sec; Start 195: fd-freq-energy-large; 22/413 Test #29: cc13d ............................ Passed 269.25 sec; Start 197: fd-freq-gradient-large; 23/413 Test #48: cc31 ............................. Passed 195.21 sec; Start 280: opt13; 24/413 Test #45: cc29 ............................. Passed 176.04 sec; Start 361: tu6-cp-ne2; 25/413 Test #113: dcft5 ............................ Passed 343.29 sec; Start 375: dft-custom-mgga; 26/413 Test #46: cc3 .............................. Passed 1717.81 sec; Start 59: cc41; 27/413 Test #307: pywrap-checkrun-rohf ............. Passed 670.21 sec; Start 388: cookbook-rohf-orb-rot; 28/413 Test #13: cbs-xtpl-alpha ................... Passed 329.60 sec; Start 322: sapt6; 29/413 Test #114: dcft6 ............................ Passed 222.96 sec; Start 381: cc-module; 30/413 Test #11: cbs-delta-energy ................. Passed 275.19 sec; Start 283: opt-irc-2; 31/413 Test #112: dcft4 ............................ Passed 1796.11 sec; Start 61: cc43; 32/413 Test #59: cc41 ............................. Passed 103.24 sec; Start 71: cc52; 33/413 Test #396: python-vibanalysis ............... Passed 1038.97 sec; Start 98: cisd-opt-fd; 34/413 Test #184: isapt1 ........................... Passed 413.67 sec; Start 160: dfscf-bz2; 35/413 Test #361: tu6-cp-ne2 ....................... Passed 174.82 sec; Start 28: cc13c; 36/413 Test #61: cc43 ............................. Passed 78.23 sec; Start 92: cepa-module; 37/413 Test #322: sapt6 ............................ Passed 166.76 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:2897,Test,Test,2897,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Passed 15.14 sec; Start 348: sapt-compare; 334/411 Test #345: dfep2-2 .......................... Passed 2.23 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.24 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 34.70 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 33.58 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.63 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.12 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ................... Passed 1.52 sec; Start 355: tu3-h2o-opt; 341/411 Test #354: tu2-ch2-energy ................... Passed 1.17 sec; Start 356: scf-response1; 342/411 Test #356: scf-response1 .................... Passed 2.45 sec; Start 357: tu4-h2o-freq; 343/411 Test #350: dft-custom ....................... Passed 13.99 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.92 sec; Start 359: tu6-cp-ne2; 345/411 Test #346: sapt-dft1 ........................ Passed 22.50 sec; Start 360: x2c1; 346/411 Test #342: soscf-dft ........................ Passed 33.42 sec; Start 361: x2c2; 347/411 Test #357: tu4-h2o-freq ..................... Passed 10.29 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.36 sec; Start 363: zaptn-nh2; 349/411 Test #362: x2c3 ............................. Passed 2.84 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.60 sec; Start 365: cubeprop-esp; 351/411 Test #363: zaptn-nh2 ........................ Passed 3.28 sec; Start 366: dft-smoke; 352/411 Test #358: tu5-sapt ......................... Passed 20.65 sec; Start 367: scf-hess1; 353/411 Test #365: cubeprop-esp ..................... Passed 8.73 sec; Start 368: scf-freq1; 354/411 Test #348: sapt-compare ..................... Passed 42.97 sec; Start 36,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:32067,Test,Test,32067,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,"Passed 15.24 sec; 408/412 Test #176: docs-dft ......................... Passed 16.24 sec; 409/412 Test #365: options1 ......................... Passed 13.68 sec; 410/412 Test #403: json-schema-1-throws ............. Passed 13.62 sec; 411/412 Test #88: cepa1 ............................ Passed 16.51 sec; 412/412 Test #319: sapt4 ............................ Passed 1885.78 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 85.75 sec*proc (2 tests); autotest = 1081.30 sec*proc (26 tests); cart = 14263.36 sec*proc (123 tests); cas = 59.52 sec*proc (1 test); casscf = 245.49 sec*proc (11 tests); cbs = 978.44 sec*proc (11 tests); cc = 5456.09 sec*proc (65 tests); cdomp2 = 39.91 sec*proc (2 tests); cepa = 180.93 sec*proc (7 tests); ci = 233.38 sec*proc (8 tests); cisd = 294.07 sec*proc (7 tests); cookbook = 58.33 sec*proc (1 test); cubeprop = 77.64 sec*proc (2 tests); dcft = 2278.61 sec*proc (13 tests); df = 1624.44 sec*proc (38 tests); dfccd = 16.01 sec*proc (1 test); dfccd-grad = 27.12 sec*proc (1 test); dfccdl = 16.03 sec*proc (1 test); dfccsd = 16.85 sec*proc (1 test); dfccsd-grad = 16.86 sec*proc (1 test); dfccsd-t-grad = 21.71 sec*proc (1 test); dfccsdat = 46.01 sec*proc (1 test); dfccsdl = 16.94 sec*proc (1 test); dfccsdt = 17.32 sec*proc (1 test); dfep2 = 34.66 sec*proc (2 tests); dfmp2 = 299.94 sec*proc (11 tests); dfomp2 = 703.06 sec*proc (7 tests); dfomp2.5 = 80.33 sec*proc (4 tests); dfomp3 = 113.97 sec*proc (4 tests); dfscf = 159.76 sec*proc (1 test); dft = 1825.64 sec*proc (27 tests); docs = 30.71 sec*proc (2 tests); ecp = 76.81 sec*proc (2 tests); fci = 39.98 sec*proc (2 tests); fcidump = 17.80 sec*proc (1 test); findif = 893.74 sec*proc (5 tests); fnocc = 137.05 sec*proc (4 tests); freq = 902.68 sec*proc (6 tests); gradient = 1170.66 sec*proc (16 tests); json = 128.43 sec*proc (8 tests); longtests = 3551.47 sec*proc (5 tests); mcscf = 48.65 sec*proc (3 tests); minitests = 112.01 sec*proc (4 tests); mints = 307.38 sec*proc (14 tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:39224,test,test,39224,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['test'],['test']
Testability,"Passed 15.79 sec; Start 213: mints1; 395/412 Test #310: pywrap-molecule .................. Passed 15.68 sec; Start 410: skeletonscf; 396/412 Test #335: scf3 ............................. Passed 16.05 sec; Start 240: numpy-array-interface; 397/412 Test #383: psi4numpy-rhf .................... Passed 16.60 sec; Start 175: docs-bases; 398/412 Test #217: mints5 ........................... Passed 15.35 sec; Start 216: mints4; 399/412 Test #212: mcscf3 ........................... Passed 15.82 sec; Start 309: pywrap-db3; 400/412 Test #213: mints1 ........................... Passed 14.72 sec; Start 176: docs-dft; 401/412 Test #210: mcscf1 ........................... Passed 15.82 sec; Start 209: matrix1; 402/412 Test #410: skeletonscf ...................... Passed 15.75 sec; Start 365: options1; 403/412 Test #175: docs-bases ....................... Passed 14.47 sec; Start 403: json-schema-1-throws; 404/412 Test #216: mints4 ........................... Passed 14.79 sec; Start 88: cepa1; 405/412 Test #240: numpy-array-interface ............ Passed 15.57 sec; 406/412 Test #309: pywrap-db3 ....................... Passed 14.49 sec; 407/412 Test #209: matrix1 .......................... Passed 15.24 sec; 408/412 Test #176: docs-dft ......................... Passed 16.24 sec; 409/412 Test #365: options1 ......................... Passed 13.68 sec; 410/412 Test #403: json-schema-1-throws ............. Passed 13.62 sec; 411/412 Test #88: cepa1 ............................ Passed 16.51 sec; 412/412 Test #319: sapt4 ............................ Passed 1885.78 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 85.75 sec*proc (2 tests); autotest = 1081.30 sec*proc (26 tests); cart = 14263.36 sec*proc (123 tests); cas = 59.52 sec*proc (1 test); casscf = 245.49 sec*proc (11 tests); cbs = 978.44 sec*proc (11 tests); cc = 5456.09 sec*proc (65 tests); cdomp2 = 39.91 sec*proc (2 tests); cepa = 180.93 sec*proc (7 tests); ci = 233.38 sec*proc (8 tests); cisd = 294.07 sec*",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:38038,Test,Test,38038,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,"Passed 153.16 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 69.98 sec*proc (2 tests); autotest = 2430.21 sec*proc (26 tests); cart = 17487.73 sec*proc (123 tests); cas = 66.60 sec*proc (1 test); casscf = 150.37 sec*proc (11 tests); cbs = 3292.06 sec*proc (10 tests); cc = 12872.21 sec*proc (65 tests); cdomp2 = 104.56 sec*proc (2 tests); cepa = 417.43 sec*proc (7 tests); ci = 125.33 sec*proc (8 tests); cisd = 241.44 sec*proc (7 tests); cookbook = 40.50 sec*proc (1 test); cubeprop = 21.07 sec*proc (2 tests); dcft = 4916.85 sec*proc (13 tests); df = 2467.51 sec*proc (38 tests); dfccd = 5.49 sec*proc (1 test); dfccd-grad = 28.16 sec*proc (1 test); dfccdl = 9.25 sec*proc (1 test); dfccsd = 20.05 sec*proc (1 test); dfccsd-grad = 75.47 sec*proc (1 test); dfccsd-t-grad = 66.61 sec*proc (1 test); dfccsdat = 35.44 sec*proc (1 test); dfccsdl = 14.70 sec*proc (1 test); dfccsdt = 19.06 sec*proc (1 test); dfep2 = 5.20 sec*proc (2 tests); dfmp2 = 215.63 sec*proc (11 tests); dfomp2 = 1082.73 sec*proc (7 tests); dfomp2.5 = 276.75 sec*proc (4 tests); dfomp3 = 361.41 sec*proc (4 tests); dfscf = 127.56 sec*proc (1 test); dft = 1351.65 sec*proc (27 tests); docs = 1.31 sec*proc (2 tests); ecp = 75.39 sec*proc (2 tests); fci = 14.23 sec*proc (2 tests); fcidump = 9.36 sec*proc (1 test); findif = 889.43 sec*proc (5 tests); fnocc = 109.31 sec*proc (4 tests); freq = 1021.12 sec*proc (6 tests); gradient = 2039.61 sec*proc (16 tests); json = 16.47 sec*proc (8 tests); longtests = 3606.20 sec*proc (5 tests); mcscf = 4.04 sec*proc (3 tests); minitests = 61.96 sec*proc (4 tests); mints = 85.54 sec*proc (14 tests); misc = 525.16 sec*proc (16 tests); mp2 = 604.70 sec*proc (13 tests); nbody = 86.31 sec*proc (2 tests); numpy = 0.72 sec*proc (1 test); ocepa = 511.90 sec*proc (6 tests); omp = 536.00 sec*proc (18 tests); opt = 1311.26 sec*proc (21 tests); plug = 9.99 sec*proc (7 tests); prop = 2.17 sec*proc (1 test); properties = 162.21 sec*proc (10 tests); psi = 40135.13 se",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:39381,test,tests,39381,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['test'],['tests']
Testability,Passed 16.23 sec; Start 359: tu4-h2o-freq; 258/413 Test #398: python-memdfjk ................... Passed 1.92 sec; Start 389: python-energy; 259/413 Test #5: casscf-sa-sp ..................... Passed 13.87 sec; Start 403: json-schema-1-orient; 260/413 Test #219: mints6 ........................... Passed 13.74 sec; Start 270: opt2-fd; 261/413 Test #272: opt4 ............................. Passed 10.06 sec; Start 371: dft-jk; 262/413 Test #389: python-energy .................... Passed 1.11 sec; Start 200: freq-isotope2; 263/413 Test #403: json-schema-1-orient ............. Passed 1.93 sec; Start 374: dft-custom-hybrid; 264/413 Test #89: cepa2 ............................ Passed 4.39 sec; Start 337: scf4; 265/413 Test #340: scf7 ............................. Passed 14.12 sec; Start 402: json-schema-1-ghost; 266/413 Test #288: props3 ........................... Passed 14.97 sec; Start 369: scf-hess1; 267/413 Test #402: json-schema-1-ghost .............. Passed 1.41 sec; Start 267: opt1; 268/413 Test #3: casscf-fzc-sp .................... Passed 6.04 sec; Start 387: psi4numpy-fci; 269/413 Test #200: freq-isotope2 .................... Passed 5.55 sec; Start 125: dfccsd1; 270/413 Test #163: dft-ghost ........................ Passed 8.35 sec; Start 4: casscf-semi; 271/413 Test #14: cbs-xtpl-energy .................. Passed 10.92 sec; Start 99: cisd-sp; 272/413 Test #287: props2 ........................... Passed 12.84 sec; Start 405: json-schema-1-gradient; 273/413 Test #267: opt1 ............................. Passed 3.54 sec; Start 297: psithon1; 274/413 Test #370: scf-freq1 ........................ Passed 10.10 sec; Start 407: skeleton; 275/413 Test #270: opt2-fd .......................... Passed 8.93 sec; Start 343: soscf-ref; 276/413 Test #387: psi4numpy-fci .................... Passed 3.64 sec; Start 406: json-schema-1-properties; 277/413 Test #359: tu4-h2o-freq ..................... Passed 9.73 sec; Start 409: skeletondfmp2; 278/413 Test #405: json-schema-1-gradient ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:25207,Test,Test,25207,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Passed 16.53 sec; Start 233: mp2p5-grad2; 315/412 Test #225: molden2 .......................... Passed 15.70 sec; Start 398: json-v11-energy; 316/412 Test #328: scf-guess-read1 .................. Passed 16.21 sec; Start 247: omp2-1; 317/412 Test #386: psi4numpy-fci .................... Passed 17.08 sec; Start 6: ao-casscf-sp; 318/412 Test #263: omp3-grad1 ....................... Passed 15.82 sec; Start 252: omp2-grad1; 319/412 Test #214: mints2 ........................... Passed 16.37 sec; Start 392: python-mints2; 320/412 Test #97: cisd-h2o-clpse ................... Passed 15.68 sec; Start 311: rasci-c2-active; 321/412 Test #233: mp2p5-grad2 ...................... Passed 16.03 sec; Start 315: sad1; 322/412 Test #398: json-v11-energy .................. Passed 16.80 sec; Start 118: dfcasscf-sa-sp; 323/412 Test #247: omp2-1 ........................... Passed 16.51 sec; Start 295: psimrcc-sp1; 324/412 Test #6: ao-casscf-sp ..................... Passed 17.80 sec; Start 284: opt-freeze-coords; 325/412 Test #252: omp2-grad1 ....................... Passed 16.04 sec; Start 135: dfmp2-grad1; 326/412 Test #392: python-mints2 .................... Passed 17.49 sec; Start 312: rasci-h2o; 327/412 Test #311: rasci-c2-active .................. Passed 18.15 sec; Start 329: scf-upcast-custom-basis; 328/412 Test #315: sad1 ............................. Passed 16.92 sec; Start 346: dfep2-2; 329/412 Test #118: dfcasscf-sa-sp ................... Passed 18.04 sec; Start 333: scf-occ; 330/412 Test #135: dfmp2-grad1 ...................... Passed 16.60 sec; Start 119: dfcasscf-fzc-sp; 331/412 Test #284: opt-freeze-coords ................ Passed 17.63 sec; Start 290: psimrcc-ccsd_t-3; 332/412 Test #295: psimrcc-sp1 ...................... Passed 19.94 sec; Start 385: psi4numpy-rhf-hessian; 333/412 Test #329: scf-upcast-custom-basis .......... Passed 15.53 sec; Start 352: dft-reference; 334/412 Test #312: rasci-h2o ........................ Passed 16.42 sec; Start 117: ao-dfcasscf-sp; 335/412 Tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:30320,Test,Test,30320,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Passed 16.55 sec; Start 306: pywrap-checkrun-rohf; 295/412 Test #304: pywrap-checkrun-convcrit ......... Passed 23.87 sec; Start 307: pywrap-checkrun-uhf; 296/412 Test #280: opt14 ............................ Passed 82.11 sec; Start 308: pywrap-db1; 297/412 Test #281: opt-irc-1 ........................ Passed 83.62 sec; Start 309: pywrap-db3; 298/412 Test #300: pywrap-alias ..................... Passed 50.64 sec; Start 310: pywrap-molecule; 299/412 Test #309: pywrap-db3 ....................... Passed 0.91 sec; Start 311: rasci-c2-active; 300/412 Test #310: pywrap-molecule .................. Passed 1.36 sec; Start 312: rasci-h2o; 301/412 Test #311: rasci-c2-active .................. Passed 5.28 sec; Start 313: rasci-ne; 302/412 Test #312: rasci-h2o ........................ Passed 4.37 sec; Start 314: rasscf-sp; 303/412 Test #298: pubchem1 ......................... Passed 61.73 sec; Start 315: sad1; 304/412 Test #293: psimrcc-fd-freq2 ................. Passed 75.37 sec; Start 316: sapt1; 305/412 Test #315: sad1 ............................. Passed 2.92 sec; Start 318: sapt3; 306/412 Test #314: rasscf-sp ........................ Passed 23.61 sec; Start 320: sapt5; 307/412 Test #316: sapt1 ............................ Passed 19.39 sec; Start 321: sapt6; 308/412 Test #308: pywrap-db1 ....................... Passed 44.56 sec; Start 322: sapt-dft-api; 309/412 Test #313: rasci-ne ......................... Passed 40.75 sec; Start 323: sapt-dft-lrc; 310/412 Test #156: dft-grad-lr3 ..................... Passed 473.64 sec; Start 324: sapt7; 311/412 Test #303: pywrap-cbs1 ...................... Passed 101.22 sec; Start 325: sapt8; 312/412 Test #322: sapt-dft-api ..................... Passed 18.65 sec; Start 327: scf-ecp; 313/412 Test #323: sapt-dft-lrc ..................... Passed 20.88 sec; Start 328: scf-guess-read1; 314/412 Test #325: sapt8 ............................ Passed 16.73 sec; Start 329: scf-upcast-custom-basis; 315/412 Test #328: scf-guess-read1 .................. P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:28461,Test,Test,28461,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['Test'],['Test']
Testability,Passed 16.86 sec; Start 78: cc8a; 75/411 Test #68: cc50 ............................. Passed 32.86 sec; Start 79: cc8b; 76/411 Test #71: cc53 ............................. Passed 26.63 sec; Start 80: cc8c; 77/411 Test #73: cc55 ............................. Passed 31.81 sec; Start 81: cc9; 78/411 Test #78: cc8a ............................. Passed 41.52 sec; Start 82: cc9a; 79/411 Test #80: cc8c ............................. Passed 39.04 sec; Start 83: cdomp2-1; 80/411 Test #69: cc51 ............................. Passed 71.87 sec; Start 84: cdomp2-2; 81/411 Test #77: cc8 .............................. Passed 47.88 sec; Start 85: cepa0-grad1; 82/411 Test #79: cc8b ............................. Passed 45.68 sec; Start 86: cepa0-grad2; 83/411 Test #85: cepa0-grad1 ...................... Passed 3.52 sec; Start 87: cepa1; 84/411 Test #83: cdomp2-1 ......................... Passed 8.41 sec; Start 88: cepa2; 85/411 Test #86: cepa0-grad2 ...................... Passed 5.62 sec; Start 89: cepa3; 86/411 Test #87: cepa1 ............................ Passed 7.50 sec; Start 90: cepa1; 87/411 Test #88: cepa2 ............................ Passed 6.63 sec; Start 91: cepa-module; 88/411 Test #81: cc9 .............................. Passed 42.28 sec; Start 92: ci-multi; 89/411 Test #84: cdomp2-2 ......................... Passed 18.17 sec; Start 93: cisd-h2o+-0; 90/411 Test #89: cepa3 ............................ Passed 9.74 sec; Start 94: cisd-h2o+-1; 91/411 Test #74: cc5a ............................. Passed 76.04 sec; Start 95: cisd-h2o+-2; 92/411 Test #90: cepa1 ............................ Passed 9.86 sec; Start 96: cisd-h2o-clpse; 93/411 Test #82: cc9a ............................. Passed 27.69 sec; Start 97: cisd-opt-fd; 94/411 Test #93: cisd-h2o+-0 ...................... Passed 6.79 sec; Start 98: cisd-sp; 95/411 Test #96: cisd-h2o-clpse ................... Passed 1.52 sec; Start 99: cisd-sp-2; 96/411 Test #94: cisd-h2o+-1 ...................... Passed 5.32 sec; Start 100: ci-prope,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:7937,Test,Test,7937,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,"Passed 1667.29 sec. 100% tests passed, 0 tests failed out of 413. Label Time Summary:; adc = 63.93 sec*proc (2 tests); autotest = 2243.46 sec*proc (26 tests); cart = 19628.65 sec*proc (123 tests); cas = 55.52 sec*proc (1 test); casscf = 136.00 sec*proc (11 tests); cbs = 2995.42 sec*proc (11 tests); cc = 16264.56 sec*proc (65 tests); cdomp2 = 44.95 sec*proc (2 tests); cepa = 273.82 sec*proc (7 tests); ci = 112.43 sec*proc (8 tests); cisd = 194.15 sec*proc (7 tests); cookbook = 255.11 sec*proc (1 test); cubeprop = 22.22 sec*proc (3 tests); dcft = 5487.46 sec*proc (13 tests); df = 2798.80 sec*proc (38 tests); dfccd = 3.58 sec*proc (1 test); dfccd-grad = 19.08 sec*proc (1 test); dfccdl = 3.82 sec*proc (1 test); dfccsd = 9.09 sec*proc (1 test); dfccsd-grad = 37.30 sec*proc (1 test); dfccsd-t-grad = 69.23 sec*proc (1 test); dfccsdat = 40.48 sec*proc (1 test); dfccsdl = 16.34 sec*proc (1 test); dfccsdt = 13.79 sec*proc (1 test); dfep2 = 6.01 sec*proc (2 tests); dfmp2 = 180.70 sec*proc (11 tests); dfomp2 = 1691.18 sec*proc (7 tests); dfomp2.5 = 230.29 sec*proc (4 tests); dfomp3 = 245.73 sec*proc (4 tests); dfscf = 131.53 sec*proc (1 test); dft = 1423.44 sec*proc (27 tests); docs = 1.42 sec*proc (2 tests); ecp = 65.92 sec*proc (2 tests); fci = 13.01 sec*proc (2 tests); fcidump = 6.38 sec*proc (1 test); findif = 982.46 sec*proc (5 tests); fnocc = 160.78 sec*proc (4 tests); freq = 1352.76 sec*proc (6 tests); gradient = 2515.20 sec*proc (16 tests); json = 21.65 sec*proc (8 tests); longtests = 3280.68 sec*proc (5 tests); mcscf = 4.01 sec*proc (3 tests); minitests = 69.17 sec*proc (4 tests); mints = 90.89 sec*proc (14 tests); misc = 524.24 sec*proc (16 tests); mp2 = 563.20 sec*proc (13 tests); nbody = 86.98 sec*proc (2 tests); numpy = 0.85 sec*proc (1 test); ocepa = 972.17 sec*proc (6 tests); omp = 1024.50 sec*proc (18 tests); opt = 1458.70 sec*proc (21 tests); plug = 12.59 sec*proc (7 tests); prop = 2.69 sec*proc (1 test); properties = 153.77 sec*proc (10 tests); psi = 46786.50 ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:39572,test,tests,39572,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['test'],['tests']
Testability,Passed 17.53 sec; Start 131: dfmp2-2; 349/412 Test #229: mp2-grad1 ........................ Passed 15.76 sec; Start 389: python-curve; 350/412 Test #236: mp2-property ..................... Passed 17.20 sec; Start 412: skeletonwavefunction; 351/412 Test #121: dfccd1 ........................... Passed 16.01 sec; Start 289: psimrcc-ccsd_t-2; 352/412 Test #400: json-schema-1-energy ............. Passed 17.40 sec; Start 363: x2c3; 353/412 Test #235: mp3-grad2 ........................ Passed 17.24 sec; Start 409: skeletonmointegrals; 354/412 Test #131: dfmp2-2 .......................... Passed 16.94 sec; Start 353: stability2; 355/412 Test #345: dfep2-1 .......................... Passed 18.21 sec; Start 357: scf-response1; 356/412 Test #389: python-curve ..................... Passed 17.74 sec; Start 334: scf2; 357/412 Test #412: skeletonwavefunction ............. Passed 18.02 sec; Start 406: skeleton; 358/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 17.33 sec; Start 161: dft-grac; 359/412 Test #363: x2c3 ............................. Passed 17.28 sec; Start 382: psi4numpy-dfmp2; 360/412 Test #409: skeletonmointegrals .............. Passed 16.90 sec; Start 189: fci-tdm; 361/412 Test #353: stability2 ....................... Passed 16.81 sec; Start 8: castup1; 362/412 Test #357: scf-response1 .................... Passed 16.75 sec; Start 408: skeletondfmp2; 363/412 Test #334: scf2 ............................. Passed 16.15 sec; Start 350: sapt-sf1; 364/412 Test #406: skeleton ......................... Passed 16.52 sec; Start 391: python-mints9; 365/412 Test #161: dft-grac ......................... Passed 16.36 sec; Start 288: psimrcc-ccsd_t-1; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 16.86 sec; Start 211: mcscf2; 367/412 Test #189: fci-tdm .......................... Passed 15.73 sec; Start 407: skeletonaointegrals; 368/412 Test #8: castup1 .......................... Passed 15.97 sec; Start 222: mints9; 369/412 Test #408: skeletondfmp2 .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:33599,Test,Test,33599,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Passed 17.60 sec; Start 211: mcscf2; 364/412 Test #189: fci-tdm .......................... Passed 17.49 sec; Start 407: skeletonaointegrals; 365/412 Test #406: skeleton ......................... Passed 17.68 sec; Start 288: psimrcc-ccsd_t-1; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 17.83 sec; Start 8: castup1; 367/412 Test #357: scf-response1 .................... Passed 18.48 sec; Start 331: scf-bs; 368/412 Test #408: skeletondfmp2 .................... Passed 17.11 sec; Start 391: python-mints9; 369/412 Test #350: sapt-sf1 ......................... Passed 17.11 sec; Start 222: mints9; 370/412 Test #211: mcscf2 ........................... Passed 16.68 sec; Start 404: json-schema-1-gradient; 371/412 Test #407: skeletonaointegrals .............. Passed 16.90 sec; Start 396: python-mints13; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 17.50 sec; Start 299: pubchem2; 373/412 Test #8: castup1 .......................... Passed 17.96 sec; Start 223: mints10; 374/412 Test #331: scf-bs ........................... Passed 17.01 sec; Start 354: tu1-h2o-energy; 375/412 Test #391: python-mints9 .................... Passed 18.84 sec; Start 411: skeletonsointegrals; 376/412 Test #222: mints9 ........................... Passed 17.91 sec; Start 221: mints-helper; 377/412 Test #404: json-schema-1-gradient ........... Passed 16.86 sec; Start 103: decontract; 378/412 Test #396: python-mints13 ................... Passed 17.37 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubchem2 ......................... Passed 16.12 sec; Start 384: psi4numpy-rhf-gradient; 380/412 Test #223: mints10 .......................... Passed 16.21 sec; Start 355: tu2-ch2-energy; 381/412 Test #354: tu1-h2o-energy ................... Passed 16.19 sec; Start 397: python-memdfjk; 382/412 Test #411: skeletonsointegrals .............. Passed 15.60 sec; Start 215: mints3; 383/412 Test #221: mints-helper ..................... Passed 15.41 sec; Start 405: json-schema-1-properties; 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:35035,Test,Test,35035,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Passed 18.11 sec; Start 146: dfomp3-1; 142/411 Test #143: dfomp2-grad1 ..................... Passed 10.48 sec; Start 147: dfomp3-2; 143/411 Test #394: python-vibanalysis ............... Passed 824.57 sec; Start 148: dfomp3-grad1; 144/411 Test #97: cisd-opt-fd ...................... Passed 126.12 sec; Start 149: dfomp3-grad2; 145/411 Test #142: dfomp2-4 ......................... Passed 18.99 sec; Start 150: dfomp2p5-1; 146/411 Test #146: dfomp3-1 ......................... Passed 10.35 sec; Start 151: dfomp2p5-2; 147/411 Test #131: dfmp2-3 .......................... Passed 41.18 sec; Start 152: dfomp2p5-grad1; 148/411 Test #148: dfomp3-grad1 ..................... Passed 11.19 sec; Start 153: dfomp2p5-grad2; 149/411 Test #18: cbs-xtpl-func .................... Passed 836.81 sec; Start 154: dfrasscf-sp; 150/411 Test #150: dfomp2p5-1 ....................... Passed 8.81 sec; Start 155: dfscf-bz2; 151/411 Test #154: dfrasscf-sp ...................... Passed 4.92 sec; Start 156: dft-b2plyp; 152/411 Test #152: dfomp2p5-grad1 ................... Passed 10.42 sec; Start 157: dft-grac; 153/411 Test #157: dft-grac ......................... Passed 2.73 sec; Start 158: dft-ghost; 154/411 Test #144: dfomp2-grad2 ..................... Passed 30.66 sec; Start 159: dft-grad-meta; 155/411 Test #147: dfomp3-2 ......................... Passed 30.09 sec; Start 160: dft-grad-lr1; 156/411 Test #158: dft-ghost ........................ Passed 7.41 sec; Start 161: dft-grad-lr2; 157/411 Test #114: dcft8 ............................ Passed 110.65 sec; Start 162: dft-grad-lr3; 158/411 Test #151: dfomp2p5-2 ....................... Passed 25.23 sec; Start 163: dft-freq; 159/411 Test #149: dfomp3-grad2 ..................... Passed 34.15 sec; Start 164: dft-grad1; 160/411 Test #156: dft-b2plyp ....................... Passed 24.79 sec; Start 165: dft-grad2; 161/411 Test #153: dfomp2p5-grad2 ................... Passed 31.39 sec; Start 166: dft-psivar; 162/411 Test #160: dft-grad-lr1 ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:14097,Test,Test,14097,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,"Passed 1836.80 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 70.69 sec*proc (2 tests); autotest = 2556.99 sec*proc (26 tests); cart = 21773.03 sec*proc (123 tests); cas = 60.88 sec*proc (1 test); casscf = 144.78 sec*proc (11 tests); cbs = 3125.37 sec*proc (11 tests); cc = 16149.11 sec*proc (65 tests); cdomp2 = 61.43 sec*proc (2 tests); cepa = 182.76 sec*proc (7 tests); ci = 123.18 sec*proc (8 tests); cisd = 220.81 sec*proc (7 tests); cookbook = 326.91 sec*proc (1 test); cubeprop = 20.97 sec*proc (2 tests); dcft = 6096.43 sec*proc (13 tests); df = 2441.66 sec*proc (38 tests); dfccd = 6.81 sec*proc (1 test); dfccd-grad = 10.47 sec*proc (1 test); dfccdl = 6.55 sec*proc (1 test); dfccsd = 12.15 sec*proc (1 test); dfccsd-grad = 31.96 sec*proc (1 test); dfccsd-t-grad = 31.06 sec*proc (1 test); dfccsdat = 24.22 sec*proc (1 test); dfccsdl = 12.84 sec*proc (1 test); dfccsdt = 8.98 sec*proc (1 test); dfep2 = 8.85 sec*proc (2 tests); dfmp2 = 175.34 sec*proc (11 tests); dfomp2 = 1436.60 sec*proc (7 tests); dfomp2.5 = 241.46 sec*proc (4 tests); dfomp3 = 207.69 sec*proc (4 tests); dfscf = 140.15 sec*proc (1 test); dft = 1476.43 sec*proc (27 tests); docs = 1.48 sec*proc (2 tests); ecp = 63.55 sec*proc (2 tests); fci = 13.51 sec*proc (2 tests); fcidump = 3.82 sec*proc (1 test); findif = 1060.87 sec*proc (5 tests); fnocc = 111.52 sec*proc (4 tests); freq = 1481.00 sec*proc (6 tests); gradient = 2882.67 sec*proc (16 tests); json = 18.91 sec*proc (8 tests); longtests = 3590.72 sec*proc (5 tests); mcscf = 4.04 sec*proc (3 tests); minitests = 77.34 sec*proc (4 tests); mints = 85.51 sec*proc (14 tests); misc = 550.72 sec*proc (16 tests); mp2 = 604.31 sec*proc (13 tests); nbody = 78.60 sec*proc (2 tests); numpy = 0.80 sec*proc (1 test); ocepa = 1284.18 sec*proc (6 tests); omp = 746.99 sec*proc (18 tests); opt = 1577.78 sec*proc (21 tests); plug = 19.36 sec*proc (7 tests); prop = 2.55 sec*proc (1 test); properties = 151.20 sec*proc (10 tests); psi = 51257.56",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:39478,test,tests,39478,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['test'],['tests']
Testability,"Passed 1882.34 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 70.71 sec*proc (2 tests); autotest = 2082.78 sec*proc (26 tests); cart = 20353.66 sec*proc (123 tests); cas = 63.78 sec*proc (1 test); casscf = 115.98 sec*proc (11 tests); cbs = 2564.15 sec*proc (11 tests); cc = 14415.83 sec*proc (65 tests); cdomp2 = 86.58 sec*proc (2 tests); cepa = 188.90 sec*proc (7 tests); ci = 123.31 sec*proc (8 tests); cisd = 200.90 sec*proc (7 tests); cookbook = 373.24 sec*proc (1 test); cubeprop = 21.39 sec*proc (2 tests); dcft = 5267.53 sec*proc (13 tests); df = 2450.70 sec*proc (38 tests); dfccd = 5.30 sec*proc (1 test); dfccd-grad = 18.35 sec*proc (1 test); dfccdl = 4.43 sec*proc (1 test); dfccsd = 11.22 sec*proc (1 test); dfccsd-grad = 38.81 sec*proc (1 test); dfccsd-t-grad = 46.08 sec*proc (1 test); dfccsdat = 18.08 sec*proc (1 test); dfccsdl = 12.77 sec*proc (1 test); dfccsdt = 8.61 sec*proc (1 test); dfep2 = 6.28 sec*proc (2 tests); dfmp2 = 177.01 sec*proc (11 tests); dfomp2 = 1556.95 sec*proc (7 tests); dfomp2.5 = 142.03 sec*proc (4 tests); dfomp3 = 178.00 sec*proc (4 tests); dfscf = 150.66 sec*proc (1 test); dft = 1457.60 sec*proc (27 tests); docs = 1.47 sec*proc (2 tests); ecp = 69.99 sec*proc (2 tests); fci = 12.53 sec*proc (2 tests); fcidump = 5.16 sec*proc (1 test); findif = 1019.26 sec*proc (5 tests); fnocc = 143.05 sec*proc (4 tests); freq = 1272.87 sec*proc (6 tests); gradient = 2551.58 sec*proc (16 tests); json = 15.79 sec*proc (8 tests); longtests = 3724.28 sec*proc (5 tests); mcscf = 4.46 sec*proc (3 tests); minitests = 80.09 sec*proc (4 tests); mints = 90.36 sec*proc (14 tests); misc = 538.13 sec*proc (16 tests); mp2 = 556.27 sec*proc (13 tests); nbody = 88.86 sec*proc (2 tests); numpy = 0.92 sec*proc (1 test); ocepa = 945.84 sec*proc (6 tests); omp = 639.27 sec*proc (18 tests); opt = 1618.73 sec*proc (21 tests); plug = 9.86 sec*proc (7 tests); prop = 2.24 sec*proc (1 test); properties = 159.09 sec*proc (10 tests); psi = 46523.94 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:39465,test,tests,39465,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['test'],['tests']
Testability,"Passed 1885.78 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 85.75 sec*proc (2 tests); autotest = 1081.30 sec*proc (26 tests); cart = 14263.36 sec*proc (123 tests); cas = 59.52 sec*proc (1 test); casscf = 245.49 sec*proc (11 tests); cbs = 978.44 sec*proc (11 tests); cc = 5456.09 sec*proc (65 tests); cdomp2 = 39.91 sec*proc (2 tests); cepa = 180.93 sec*proc (7 tests); ci = 233.38 sec*proc (8 tests); cisd = 294.07 sec*proc (7 tests); cookbook = 58.33 sec*proc (1 test); cubeprop = 77.64 sec*proc (2 tests); dcft = 2278.61 sec*proc (13 tests); df = 1624.44 sec*proc (38 tests); dfccd = 16.01 sec*proc (1 test); dfccd-grad = 27.12 sec*proc (1 test); dfccdl = 16.03 sec*proc (1 test); dfccsd = 16.85 sec*proc (1 test); dfccsd-grad = 16.86 sec*proc (1 test); dfccsd-t-grad = 21.71 sec*proc (1 test); dfccsdat = 46.01 sec*proc (1 test); dfccsdl = 16.94 sec*proc (1 test); dfccsdt = 17.32 sec*proc (1 test); dfep2 = 34.66 sec*proc (2 tests); dfmp2 = 299.94 sec*proc (11 tests); dfomp2 = 703.06 sec*proc (7 tests); dfomp2.5 = 80.33 sec*proc (4 tests); dfomp3 = 113.97 sec*proc (4 tests); dfscf = 159.76 sec*proc (1 test); dft = 1825.64 sec*proc (27 tests); docs = 30.71 sec*proc (2 tests); ecp = 76.81 sec*proc (2 tests); fci = 39.98 sec*proc (2 tests); fcidump = 17.80 sec*proc (1 test); findif = 893.74 sec*proc (5 tests); fnocc = 137.05 sec*proc (4 tests); freq = 902.68 sec*proc (6 tests); gradient = 1170.66 sec*proc (16 tests); json = 128.43 sec*proc (8 tests); longtests = 3551.47 sec*proc (5 tests); mcscf = 48.65 sec*proc (3 tests); minitests = 112.01 sec*proc (4 tests); mints = 307.38 sec*proc (14 tests); misc = 677.17 sec*proc (16 tests); mp2 = 726.25 sec*proc (13 tests); nbody = 54.91 sec*proc (2 tests); numpy = 15.57 sec*proc (1 test); ocepa = 473.52 sec*proc (6 tests); omp = 485.33 sec*proc (18 tests); opt = 1642.53 sec*proc (21 tests); plug = 116.88 sec*proc (7 tests); prop = 16.75 sec*proc (1 test); properties = 293.90 sec*proc (10 tests); psi = 3028",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:39585,test,tests,39585,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['test'],['tests']
Testability,Passed 19.53 sec; Start 406: skeleton; 359/412 Test #363: x2c3 ............................. Passed 19.26 sec; Start 382: psi4numpy-dfmp2; 360/412 Test #409: skeletonmointegrals .............. Passed 17.81 sec; Start 357: scf-response1; 361/412 Test #334: scf2 ............................. Passed 17.76 sec; Start 408: skeletondfmp2; 362/412 Test #353: stability2 ....................... Passed 18.16 sec; Start 350: sapt-sf1; 363/412 Test #161: dft-grac ......................... Passed 17.60 sec; Start 211: mcscf2; 364/412 Test #189: fci-tdm .......................... Passed 17.49 sec; Start 407: skeletonaointegrals; 365/412 Test #406: skeleton ......................... Passed 17.68 sec; Start 288: psimrcc-ccsd_t-1; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 17.83 sec; Start 8: castup1; 367/412 Test #357: scf-response1 .................... Passed 18.48 sec; Start 331: scf-bs; 368/412 Test #408: skeletondfmp2 .................... Passed 17.11 sec; Start 391: python-mints9; 369/412 Test #350: sapt-sf1 ......................... Passed 17.11 sec; Start 222: mints9; 370/412 Test #211: mcscf2 ........................... Passed 16.68 sec; Start 404: json-schema-1-gradient; 371/412 Test #407: skeletonaointegrals .............. Passed 16.90 sec; Start 396: python-mints13; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 17.50 sec; Start 299: pubchem2; 373/412 Test #8: castup1 .......................... Passed 17.96 sec; Start 223: mints10; 374/412 Test #331: scf-bs ........................... Passed 17.01 sec; Start 354: tu1-h2o-energy; 375/412 Test #391: python-mints9 .................... Passed 18.84 sec; Start 411: skeletonsointegrals; 376/412 Test #222: mints9 ........................... Passed 17.91 sec; Start 221: mints-helper; 377/412 Test #404: json-schema-1-gradient ........... Passed 16.86 sec; Start 103: decontract; 378/412 Test #396: python-mints13 ................... Passed 17.37 sec; Start 381: psi4numpy-cphf; 379/412 Test #299: pubch,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:34555,Test,Test,34555,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Passed 19.82 sec; Start 189: fci-tdm; 358/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 19.53 sec; Start 406: skeleton; 359/412 Test #363: x2c3 ............................. Passed 19.26 sec; Start 382: psi4numpy-dfmp2; 360/412 Test #409: skeletonmointegrals .............. Passed 17.81 sec; Start 357: scf-response1; 361/412 Test #334: scf2 ............................. Passed 17.76 sec; Start 408: skeletondfmp2; 362/412 Test #353: stability2 ....................... Passed 18.16 sec; Start 350: sapt-sf1; 363/412 Test #161: dft-grac ......................... Passed 17.60 sec; Start 211: mcscf2; 364/412 Test #189: fci-tdm .......................... Passed 17.49 sec; Start 407: skeletonaointegrals; 365/412 Test #406: skeleton ......................... Passed 17.68 sec; Start 288: psimrcc-ccsd_t-1; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 17.83 sec; Start 8: castup1; 367/412 Test #357: scf-response1 .................... Passed 18.48 sec; Start 331: scf-bs; 368/412 Test #408: skeletondfmp2 .................... Passed 17.11 sec; Start 391: python-mints9; 369/412 Test #350: sapt-sf1 ......................... Passed 17.11 sec; Start 222: mints9; 370/412 Test #211: mcscf2 ........................... Passed 16.68 sec; Start 404: json-schema-1-gradient; 371/412 Test #407: skeletonaointegrals .............. Passed 16.90 sec; Start 396: python-mints13; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 17.50 sec; Start 299: pubchem2; 373/412 Test #8: castup1 .......................... Passed 17.96 sec; Start 223: mints10; 374/412 Test #331: scf-bs ........................... Passed 17.01 sec; Start 354: tu1-h2o-energy; 375/412 Test #391: python-mints9 .................... Passed 18.84 sec; Start 411: skeletonsointegrals; 376/412 Test #222: mints9 ........................... Passed 17.91 sec; Start 221: mints-helper; 377/412 Test #404: json-schema-1-gradient ........... Passed 16.86 sec; Start 103: decontract; 378/412 Test #396: python-mints,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:34457,Test,Test,34457,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Passed 19.88 sec; Start 81: cc9; 115/411 Test #81: cc9 .............................. Passed 4.79 sec; Start 77: cc8; 116/411 Test #307: pywrap-db1 ....................... Passed 37.30 sec; Start 33: cc18; 117/411 Test #77: cc8 .............................. Passed 6.02 sec; Start 66: cc49; 118/411 Test #33: cc18 ............................. Passed 6.57 sec; Start 64: cc47; 119/411 Test #348: sapt-compare ..................... Passed 38.30 sec; Start 106: dcft-grad4; 120/411 Test #237: nbody-he-cluster ................. Passed 25.96 sec; Start 80: cc8c; 121/411 Test #80: cc8c ............................. Passed 6.42 sec; Start 55: cc39; 122/411 Test #219: mints-benchmark .................. Passed 41.17 sec; Start 56: cc4; 123/411 Test #64: cc47 ............................. Passed 13.48 sec; Start 71: cc53; 124/411 Test #66: cc49 ............................. Passed 19.49 sec; Start 245: ocepa3; 125/411 Test #55: cc39 ............................. Passed 10.10 sec; Start 67: cc4a; 126/411 Test #131: dfmp2-3 .......................... Passed 40.64 sec; Start 374: dft-custom-gga; 127/411 Test #71: cc53 ............................. Passed 11.17 sec; Start 78: cc8a; 128/411 Test #56: cc4 .............................. Passed 13.95 sec; Start 82: cc9a; 129/411 Test #245: ocepa3 ........................... Passed 19.83 sec; Start 37: cc22; 130/411 Test #106: dcft-grad4 ....................... Passed 32.29 sec; Start 323: sapt7; 131/411 Test #67: cc4a ............................. Passed 18.64 sec; Start 206: ghosts; 132/411 Test #78: cc8a ............................. Passed 14.25 sec; Start 273: opt7; 133/411 Test #37: cc22 ............................. Passed 7.28 sec; Start 129: dfmp2-1; 134/411 Test #82: cc9a ............................. Passed 14.69 sec; Start 54: cc38; 135/411 Test #54: cc38 ............................. Passed 6.45 sec; Start 312: rasci-ne; 136/411 Test #374: dft-custom-gga ................... Passed 27.50 sec; Start 152: dfomp2p5-grad1; 137/41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:11743,Test,Test,11743,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Passed 19.96 sec; Start 145: dfomp2-grad3; 141/411 Test #131: dfmp2-3 .......................... Passed 41.43 sec; Start 146: dfomp3-1; 142/411 Test #143: dfomp2-grad1 ..................... Passed 11.63 sec; Start 147: dfomp3-2; 143/411 Test #142: dfomp2-4 ......................... Passed 30.60 sec; Start 148: dfomp3-grad1; 144/411 Test #140: dfomp2-2 ......................... Passed 44.87 sec; Start 149: dfomp3-grad2; 145/411 Test #146: dfomp3-1 ......................... Passed 29.48 sec; Start 150: dfomp2p5-1; 146/411 Test #112: dcft6 ............................ Passed 203.93 sec; Start 151: dfomp2p5-2; 147/411 Test #148: dfomp3-grad1 ..................... Passed 29.39 sec; Start 152: dfomp2p5-grad1; 148/411 Test #150: dfomp2p5-1 ....................... Passed 33.37 sec; Start 153: dfomp2p5-grad2; 149/411 Test #144: dfomp2-grad2 ..................... Passed 74.36 sec; Start 154: dfrasscf-sp; 150/411 Test #154: dfrasscf-sp ...................... Passed 9.32 sec; Start 155: dfscf-bz2; 151/411 Test #147: dfomp3-2 ......................... Passed 73.45 sec; Start 156: dft-b2plyp; 152/411 Test #152: dfomp2p5-grad1 ................... Passed 32.07 sec; Start 157: dft-grac; 153/411 Test #157: dft-grac ......................... Passed 1.65 sec; Start 158: dft-ghost; 154/411 Test #158: dft-ghost ........................ Passed 7.88 sec; Start 159: dft-grad-meta; 155/411 Test #151: dfomp2p5-2 ....................... Passed 53.45 sec; Start 160: dft-grad-lr1; 156/411 Test #149: dfomp3-grad2 ..................... Passed 72.16 sec; Start 161: dft-grad-lr2; 157/411 Test #156: dft-b2plyp ....................... Passed 24.97 sec; Start 162: dft-grad-lr3; 158/411 Test #45: cc3 .............................. Passed 1001.27 sec; Start 163: dft-freq; 159/411 Test #111: dcft5 ............................ Passed 277.98 sec; Start 164: dft-grad1; 160/411 Test #76: cc7 .............................. Passed 455.20 sec; Start 165: dft-grad2; 161/411 Test #160: dft-grad-lr1 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:14050,Test,Test,14050,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,"Passed 1912.45 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 95.19 sec*proc (2 tests); autotest = 994.34 sec*proc (26 tests); cart = 14957.35 sec*proc (123 tests); cas = 53.75 sec*proc (1 test); casscf = 214.86 sec*proc (11 tests); cbs = 1085.57 sec*proc (11 tests); cc = 6887.79 sec*proc (65 tests); cdomp2 = 43.27 sec*proc (2 tests); cepa = 141.35 sec*proc (7 tests); ci = 206.59 sec*proc (8 tests); cisd = 285.49 sec*proc (7 tests); cookbook = 66.55 sec*proc (1 test); cubeprop = 44.67 sec*proc (2 tests); dcft = 2708.77 sec*proc (13 tests); df = 1635.28 sec*proc (38 tests); dfccd = 16.56 sec*proc (1 test); dfccd-grad = 13.91 sec*proc (1 test); dfccdl = 26.46 sec*proc (1 test); dfccsd = 15.59 sec*proc (1 test); dfccsd-grad = 22.13 sec*proc (1 test); dfccsd-t-grad = 21.66 sec*proc (1 test); dfccsdat = 12.93 sec*proc (1 test); dfccsdl = 15.16 sec*proc (1 test); dfccsdt = 15.93 sec*proc (1 test); dfep2 = 46.62 sec*proc (2 tests); dfmp2 = 296.86 sec*proc (11 tests); dfomp2 = 798.00 sec*proc (7 tests); dfomp2.5 = 88.35 sec*proc (4 tests); dfomp3 = 65.99 sec*proc (4 tests); dfscf = 149.44 sec*proc (1 test); dft = 1654.52 sec*proc (27 tests); docs = 27.08 sec*proc (2 tests); ecp = 72.20 sec*proc (2 tests); fci = 46.96 sec*proc (2 tests); fcidump = 27.57 sec*proc (1 test); findif = 886.69 sec*proc (5 tests); fnocc = 76.13 sec*proc (4 tests); freq = 827.22 sec*proc (6 tests); gradient = 1290.88 sec*proc (16 tests); json = 147.88 sec*proc (8 tests); longtests = 3606.32 sec*proc (5 tests); mcscf = 44.46 sec*proc (3 tests); minitests = 134.75 sec*proc (4 tests); mints = 278.54 sec*proc (14 tests); misc = 651.09 sec*proc (16 tests); mp2 = 718.58 sec*proc (13 tests); nbody = 61.73 sec*proc (2 tests); numpy = 13.74 sec*proc (1 test); ocepa = 515.48 sec*proc (6 tests); omp = 489.25 sec*proc (18 tests); opt = 1529.93 sec*proc (21 tests); plug = 119.45 sec*proc (7 tests); prop = 18.48 sec*proc (1 test); properties = 263.33 sec*proc (10 tests); psi = 31689.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:39583,test,tests,39583,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['test'],['tests']
Testability,"Passed 1945.68 sec; 413/413 Test #320: sapt4 ............................ Passed 1820.54 sec. 100% tests passed, 0 tests failed out of 413. Label Time Summary:; adc = 60.32 sec*proc (2 tests); autotest = 2172.08 sec*proc (26 tests); cart = 18455.22 sec*proc (123 tests); cas = 58.02 sec*proc (1 test); casscf = 81.96 sec*proc (11 tests); cbs = 2562.37 sec*proc (11 tests); cc = 14549.66 sec*proc (65 tests); cdomp2 = 54.85 sec*proc (2 tests); cepa = 139.13 sec*proc (7 tests); ci = 107.75 sec*proc (8 tests); cisd = 200.26 sec*proc (7 tests); cookbook = 185.01 sec*proc (1 test); cubeprop = 22.93 sec*proc (3 tests); dcft = 5260.08 sec*proc (13 tests); df = 2336.92 sec*proc (38 tests); dfccd = 2.17 sec*proc (1 test); dfccd-grad = 6.57 sec*proc (1 test); dfccdl = 3.04 sec*proc (1 test); dfccsd = 3.47 sec*proc (1 test); dfccsd-grad = 50.32 sec*proc (1 test); dfccsd-t-grad = 60.82 sec*proc (1 test); dfccsdat = 16.81 sec*proc (1 test); dfccsdl = 8.14 sec*proc (1 test); dfccsdt = 5.36 sec*proc (1 test); dfep2 = 6.37 sec*proc (2 tests); dfmp2 = 166.54 sec*proc (11 tests); dfomp2 = 1292.12 sec*proc (7 tests); dfomp2.5 = 211.67 sec*proc (4 tests); dfomp3 = 248.61 sec*proc (4 tests); dfscf = 154.39 sec*proc (1 test); dft = 1448.47 sec*proc (27 tests); docs = 1.22 sec*proc (2 tests); ecp = 64.69 sec*proc (2 tests); fci = 12.06 sec*proc (2 tests); fcidump = 5.26 sec*proc (1 test); findif = 1032.18 sec*proc (5 tests); fnocc = 132.10 sec*proc (4 tests); freq = 1399.22 sec*proc (6 tests); gradient = 2183.56 sec*proc (16 tests); json = 19.48 sec*proc (8 tests); longtests = 3608.99 sec*proc (5 tests); mcscf = 4.67 sec*proc (3 tests); minitests = 74.31 sec*proc (4 tests); mints = 91.36 sec*proc (14 tests); misc = 524.50 sec*proc (16 tests); mp2 = 578.76 sec*proc (13 tests); nbody = 76.59 sec*proc (2 tests); numpy = 0.81 sec*proc (1 test); ocepa = 872.52 sec*proc (6 tests); omp = 788.85 sec*proc (18 tests); opt = 1524.66 sec*proc (21 tests); plug = 13.98 sec*proc (7 tests); prop = 2.49 sec*p",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:39483,test,test,39483,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['test'],['test']
Testability,"Passed 2.01 sec; 408/413 Test #103: cubeprop-frontier ................ Passed 2.79 sec; 409/413 Test #6: ao-casscf-sp ..................... Passed 6.03 sec; 410/413 Test #88: cepa1 ............................ Passed 4.24 sec; 411/413 Test #18: cbs-xtpl-func .................... Passed 1422.73 sec; 412/413 Test #180: fsapt1 ........................... Passed 1945.68 sec; 413/413 Test #320: sapt4 ............................ Passed 1820.54 sec. 100% tests passed, 0 tests failed out of 413. Label Time Summary:; adc = 60.32 sec*proc (2 tests); autotest = 2172.08 sec*proc (26 tests); cart = 18455.22 sec*proc (123 tests); cas = 58.02 sec*proc (1 test); casscf = 81.96 sec*proc (11 tests); cbs = 2562.37 sec*proc (11 tests); cc = 14549.66 sec*proc (65 tests); cdomp2 = 54.85 sec*proc (2 tests); cepa = 139.13 sec*proc (7 tests); ci = 107.75 sec*proc (8 tests); cisd = 200.26 sec*proc (7 tests); cookbook = 185.01 sec*proc (1 test); cubeprop = 22.93 sec*proc (3 tests); dcft = 5260.08 sec*proc (13 tests); df = 2336.92 sec*proc (38 tests); dfccd = 2.17 sec*proc (1 test); dfccd-grad = 6.57 sec*proc (1 test); dfccdl = 3.04 sec*proc (1 test); dfccsd = 3.47 sec*proc (1 test); dfccsd-grad = 50.32 sec*proc (1 test); dfccsd-t-grad = 60.82 sec*proc (1 test); dfccsdat = 16.81 sec*proc (1 test); dfccsdl = 8.14 sec*proc (1 test); dfccsdt = 5.36 sec*proc (1 test); dfep2 = 6.37 sec*proc (2 tests); dfmp2 = 166.54 sec*proc (11 tests); dfomp2 = 1292.12 sec*proc (7 tests); dfomp2.5 = 211.67 sec*proc (4 tests); dfomp3 = 248.61 sec*proc (4 tests); dfscf = 154.39 sec*proc (1 test); dft = 1448.47 sec*proc (27 tests); docs = 1.22 sec*proc (2 tests); ecp = 64.69 sec*proc (2 tests); fci = 12.06 sec*proc (2 tests); fcidump = 5.26 sec*proc (1 test); findif = 1032.18 sec*proc (5 tests); fnocc = 132.10 sec*proc (4 tests); freq = 1399.22 sec*proc (6 tests); gradient = 2183.56 sec*proc (16 tests); json = 19.48 sec*proc (8 tests); longtests = 3608.99 sec*proc (5 tests); mcscf = 4.67 sec*proc (3 tests); minitest",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:39129,test,tests,39129,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['test'],['tests']
Testability,Passed 2.07 sec; Start 350: sapt-sf1; 342/412 Test #352: dft-reference .................... Passed 3.27 sec; Start 407: skeletonaointegrals; 343/412 Test #333: scf-occ .......................... Passed 2.38 sec; Start 289: psimrcc-ccsd_t-2; 344/412 Test #131: dfmp2-2 .......................... Passed 2.41 sec; Start 408: skeletondfmp2; 345/412 Test #364: zaptn-nh2 ........................ Passed 2.79 sec; Start 406: skeleton; 346/412 Test #402: json-schema-1-orient ............. Passed 2.06 sec; Start 8: castup1; 347/412 Test #392: python-mints2 .................... Passed 2.78 sec; Start 97: cisd-h2o-clpse; 348/412 Test #329: scf-upcast-custom-basis .......... Passed 2.47 sec; Start 334: scf2; 349/412 Test #315: sad1 ............................. Passed 2.76 sec; Start 357: scf-response1; 350/412 Test #350: sapt-sf1 ......................... Passed 1.66 sec; Start 409: skeletonmointegrals; 351/412 Test #407: skeletonaointegrals .............. Passed 1.54 sec; Start 362: x2c2; 352/412 Test #385: psi4numpy-rhf-hessian ............ Passed 3.38 sec; Start 363: x2c3; 353/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 2.33 sec; Start 161: dft-grac; 354/412 Test #406: skeleton ......................... Passed 1.46 sec; Start 189: fci-tdm; 355/412 Test #346: dfep2-2 .......................... Passed 2.56 sec; Start 211: mcscf2; 356/412 Test #214: mints2 ........................... Passed 2.90 sec; Start 353: stability2; 357/412 Test #408: skeletondfmp2 .................... Passed 1.70 sec; Start 382: psi4numpy-dfmp2; 358/412 Test #8: castup1 .......................... Passed 1.72 sec; Start 331: scf-bs; 359/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 2.32 sec; Start 299: pubchem2; 360/412 Test #97: cisd-h2o-clpse ................... Passed 1.62 sec; Start 404: json-schema-1-gradient; 361/412 Test #409: skeletonmointegrals .............. Passed 1.49 sec; Start 288: psimrcc-ccsd_t-1; 362/412 Test #334: scf2 ............................. Passed 1.76 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:33068,Test,Test,33068,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['Test'],['Test']
Testability,Passed 2.09 sec; Start 347: sapt-dft2; 341/411 Test #341: soscf-ref ........................ Passed 18.07 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.35 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 2.84 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 23.48 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.30 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.78 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.49 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.77 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 15.39 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 4.89 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 3.65 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 42.14 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 18.41 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 22.53 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 4.63 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 4.51 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 4.00 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.58 sec; Start 365: cubeprop-esp; 359/411 Test #365: cubeprop-esp ..................... Passed 9.22 sec; Start 366: dft-smoke; 360/411 Test #366: dft-smoke ........................ Passed 18.20 sec; Start 367: scf-hess1; 361/411 Test #367: scf-hess1 ........................ Passed 12.40 sec; Start 36,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:32615,Test,Test,32615,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Passed 2.10 sec; Start 364: options1; 365/411 Test #364: options1 ......................... Passed 0.66 sec; Start 365: cubeprop-esp; 366/411 Test #365: cubeprop-esp ..................... Passed 7.93 sec; Start 366: dft-smoke; 367/411 Test #366: dft-smoke ........................ Passed 12.12 sec; Start 367: scf-hess1; 368/411 Test #367: scf-hess1 ........................ Passed 5.76 sec; Start 368: scf-freq1; 369/411 Test #368: scf-freq1 ........................ Passed 6.73 sec; Start 369: dft-jk; 370/411 Test #369: dft-jk ........................... Passed 8.47 sec; Start 370: scf-coverage; 371/411 Test #370: scf-coverage ..................... Passed 2.89 sec; Start 371: dft-custom-dhdf; 372/411 Test #371: dft-custom-dhdf .................. Passed 75.42 sec; Start 372: dft-custom-hybrid; 373/411 Test #372: dft-custom-hybrid ................ Passed 8.58 sec; Start 373: dft-custom-mgga; 374/411 Test #373: dft-custom-mgga .................. Passed 157.12 sec; Start 374: dft-custom-gga; 375/411 Test #374: dft-custom-gga ................... Passed 23.71 sec; Start 375: pywrap-bfs; 376/411 Test #375: pywrap-bfs ....................... Passed 21.31 sec; Start 376: pywrap-align; 377/411 Test #376: pywrap-align ..................... Passed 4.41 sec; Start 377: pywrap-align-chiral; 378/411 Test #377: pywrap-align-chiral .............. Passed 3.25 sec; Start 378: mints12; 379/411 Test #378: mints12 .......................... Passed 1.27 sec; Start 379: cc-module; 380/411 Test #379: cc-module ........................ Passed 14.70 sec; Start 380: psi4numpy-cphf; 381/411 Test #380: psi4numpy-cphf ................... Passed 1.36 sec; Start 381: psi4numpy-dfmp2; 382/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.55 sec; Start 382: psi4numpy-rhf; 383/411 Test #382: psi4numpy-rhf .................... Passed 0.85 sec; Start 383: psi4numpy-rhf-gradient; 384/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.03 sec; Start 384: psi4numpy-rhf-hessian; 385/411 Test #3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:34530,Test,Test,34530,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Passed 2.31 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.59 sec; Start 365: cubeprop-esp; 359/411 Test #305: pywrap-checkrun-rohf ............. Passed 280.55 sec; Start 366: dft-smoke; 360/411 Test #360: x2c1 ............................. Passed 18.65 sec; Start 367: scf-hess1; 361/411 Test #365: cubeprop-esp ..................... Passed 8.43 sec; Start 368: scf-freq1; 362/411 Test #367: scf-hess1 ........................ Passed 7.55 sec; Start 369: dft-jk; 363/411 Test #366: dft-smoke ........................ Passed 13.03 sec; Start 370: scf-coverage; 364/411 Test #368: scf-freq1 ........................ Passed 12.10 sec; Start 371: dft-custom-dhdf; 365/411 Test #370: scf-coverage ..................... Passed 5.55 sec; Start 372: dft-custom-hybrid; 366/411 Test #369: dft-jk ........................... Passed 11.38 sec; Start 373: dft-custom-mgga; 367/411 Test #372: dft-custom-hybrid ................ Passed 10.46 sec; Start 374: dft-custom-gga; 368/411 Test #347: sapt-dft2 ........................ Passed 119.34 sec; Start 375: pywrap-bfs; 369/411 Test #359: tu6-cp-ne2 ....................... Passed 78.43 sec; Start 376: pywrap-align; 370/411 Test #374: dft-custom-gga ................... Passed 29.24 sec; Start 377: pywrap-align-chiral; 371/411 Test #306: pywrap-checkrun-uhf .............. Passed 336.85 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.19 sec; Start 379: cc-module; 373/411 Test #376: pywrap-align ..................... Passed 3.89 sec; Start 380: psi4numpy-cphf; 374/411 Test #377: pywrap-align-chiral .............. Passed 3.14 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #380: psi4numpy-cphf ................... Passed 1.28 sec; Start 382: psi4numpy-rhf; 376/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.74 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #382: psi4numpy-rhf .................... Passed 0.90 sec; Start 384: psi4numpy-rhf-hessian; 378/411 Te,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:34231,Test,Test,34231,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['Test'],['Test']
Testability,Passed 2.37 sec; Start 104: decontract; 367/413 Test #354: stability2 ....................... Passed 1.07 sec; Start 290: psimrcc-ccsd_t-2; 368/413 Test #382: psi4numpy-cphf ................... Passed 1.29 sec; Start 190: fci-tdm; 369/413 Test #123: dfccdl1 .......................... Passed 1.45 sec; Start 223: mints9; 370/413 Test #358: scf-response1 .................... Passed 2.27 sec; Start 384: psi4numpy-rhf; 371/413 Test #120: dfcasscf-fzc-sp .................. Passed 1.74 sec; Start 355: tu1-h2o-energy; 372/413 Test #224: mints10 .......................... Passed 1.32 sec; Start 347: dfep2-2; 373/413 Test #291: psimrcc-ccsd_t-3 ................. Passed 1.56 sec; Start 330: scf-upcast-custom-basis; 374/413 Test #190: fci-tdm .......................... Passed 0.85 sec; Start 351: sapt-sf1; 375/413 Test #313: rasci-h2o ........................ Passed 1.13 sec; Start 222: mints-helper; 376/413 Test #132: dfmp2-2 .......................... Passed 1.70 sec; Start 356: tu2-ch2-energy; 377/413 Test #329: scf-guess-read1 .................. Passed 1.55 sec; Start 8: castup1; 378/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 1.46 sec; Start 332: scf-bs; 379/413 Test #384: psi4numpy-rhf .................... Passed 0.97 sec; Start 216: mints3; 380/413 Test #380: mints12 .......................... Passed 1.30 sec; Start 336: scf3; 381/413 Test #104: decontract ....................... Passed 1.30 sec; Start 300: pubchem2; 382/413 Test #355: tu1-h2o-energy ................... Passed 1.26 sec; Start 212: mcscf2; 383/413 Test #290: psimrcc-ccsd_t-2 ................. Passed 1.63 sec; Start 213: mcscf3; 384/413 Test #356: tu2-ch2-energy ................... Passed 0.86 sec; Start 218: mints5; 385/413 Test #330: scf-upcast-custom-basis .......... Passed 1.54 sec; Start 241: numpy-array-interface; 386/413 Test #351: sapt-sf1 ......................... Passed 1.06 sec; Start 217: mints4; 387/413 Test #222: mints-helper ..................... Passed 1.14 sec; Start 366: optio,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:35449,Test,Test,35449,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['Test'],['Test']
Testability,Passed 2.48 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 14.85 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.04 sec; Start 350: dft-custom; 336/411 Test #319: sapt5 ............................ Passed 74.55 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 34.05 sec; Start 352: stability2; 338/411 Test #336: scf5 ............................. Passed 34.15 sec; Start 353: tu1-h2o-energy; 339/411 Test #353: tu1-h2o-energy ................... Passed 1.21 sec; Start 354: tu2-ch2-energy; 340/411 Test #352: stability2 ....................... Passed 1.43 sec; Start 355: tu3-h2o-opt; 341/411 Test #351: dft-reference .................... Passed 3.05 sec; Start 356: scf-response1; 342/411 Test #354: tu2-ch2-energy ................... Passed 1.22 sec; Start 357: tu4-h2o-freq; 343/411 Test #356: scf-response1 .................... Passed 2.48 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.54 sec; Start 359: tu6-cp-ne2; 345/411 Test #240: ocepa-freq1 ...................... Passed 405.13 sec; Start 360: x2c1; 346/411 Test #350: dft-custom ....................... Passed 14.93 sec; Start 361: x2c2; 347/411 Test #346: sapt-dft1 ........................ Passed 22.71 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.47 sec; Start 363: zaptn-nh2; 349/411 Test #357: tu4-h2o-freq ..................... Passed 13.25 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.59 sec; Start 365: cubeprop-esp; 351/411 Test #363: zaptn-nh2 ........................ Passed 2.66 sec; Start 366: dft-smoke; 352/411 Test #362: x2c3 ............................. Passed 2.82 sec; Start 367: scf-hess1; 353/411 Test #342: soscf-dft ........................ Passed 31.94 sec; Start 368: scf-freq1; 354/411 Test #365: cubeprop-esp ..................... Passed 9.28 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:32103,Test,Test,32103,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,Passed 2.58 sec; Start 331: scf-bs; 354/412 Test #362: x2c2 ............................. Passed 2.41 sec; Start 404: json-schema-1-gradient; 355/412 Test #234: mp3-grad1 ........................ Passed 2.93 sec; Start 408: skeletondfmp2; 356/412 Test #86: cepa0-grad1 ...................... Passed 3.26 sec; Start 288: psimrcc-ccsd_t-1; 357/412 Test #363: x2c3 ............................. Passed 2.63 sec; Start 103: decontract; 358/412 Test #400: json-schema-1-energy ............. Passed 4.01 sec; Start 350: sapt-sf1; 359/412 Test #8: castup1 .......................... Passed 2.80 sec; Start 221: mints-helper; 360/412 Test #329: scf-upcast-custom-basis .......... Passed 2.62 sec; Start 381: psi4numpy-cphf; 361/412 Test #299: pubchem2 ......................... Passed 2.35 sec; Start 354: tu1-h2o-energy; 362/412 Test #117: ao-dfcasscf-sp ................... Passed 3.58 sec; Start 379: mints12; 363/412 Test #97: cisd-h2o-clpse ................... Passed 2.91 sec; Start 409: skeletonmointegrals; 364/412 Test #211: mcscf2 ........................... Passed 2.42 sec; Start 223: mints10; 365/412 Test #103: decontract ....................... Passed 1.91 sec; Start 310: pywrap-molecule; 366/412 Test #229: mp2-grad1 ........................ Passed 3.12 sec; Start 215: mints3; 367/412 Test #404: json-schema-1-gradient ........... Passed 2.27 sec; Start 411: skeletonsointegrals; 368/412 Test #331: scf-bs ........................... Passed 2.38 sec; Start 384: psi4numpy-rhf-gradient; 369/412 Test #247: omp2-1 ........................... Passed 3.37 sec; Start 353: stability2; 370/412 Test #408: skeletondfmp2 .................... Passed 2.24 sec; Start 401: json-schema-1-ghost; 371/412 Test #350: sapt-sf1 ......................... Passed 1.19 sec; Start 399: json-v11-gradient; 372/412 Test #288: psimrcc-ccsd_t-1 ................. Passed 2.78 sec; Start 405: json-schema-1-properties; 373/412 Test #221: mints-helper ..................... Passed 1.34 sec; Start 412: skeletonwavefunct,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:34179,Test,Test,34179,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Passed 2.66 sec; Start 203: frac; 352/411 Test #332: scf-occ .......................... Passed 2.11 sec; Start 328: scf-upcast-custom-basis; 353/411 Test #257: omp3-1 ........................... Passed 1.96 sec; Start 233: mp3-grad1; 354/411 Test #246: omp2-1 ........................... Passed 1.99 sec; Start 333: scf2; 355/411 Test #157: dft-grac ......................... Passed 1.97 sec; Start 403: json-schema-1-gradient; 356/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.57 sec; Start 407: skeletondfmp2; 357/411 Test #328: scf-upcast-custom-basis .......... Passed 1.39 sec; Start 293: psimrcc-pt2; 358/411 Test #234: mp3-grad2 ........................ Passed 1.45 sec; Start 330: scf-bs; 359/411 Test #203: frac ............................. Passed 1.44 sec; Start 408: skeletonmointegrals; 360/411 Test #233: mp3-grad1 ........................ Passed 1.26 sec; Start 228: mp2-grad1; 361/411 Test #403: json-schema-1-gradient ........... Passed 1.75 sec; Start 287: psimrcc-ccsd_t-1; 362/411 Test #333: scf2 ............................. Passed 1.80 sec; Start 210: mcscf2; 363/411 Test #408: skeletonmointegrals .............. Passed 1.38 sec; Start 229: mp2-grad2; 364/411 Test #293: psimrcc-pt2 ...................... Passed 1.50 sec; Start 298: pubchem2; 365/411 Test #330: scf-bs ........................... Passed 1.49 sec; Start 102: decontract; 366/411 Test #407: skeletondfmp2 .................... Passed 2.02 sec; Start 96: cisd-h2o-clpse; 367/411 Test #228: mp2-grad1 ........................ Passed 1.40 sec; Start 405: skeleton; 368/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.27 sec; Start 231: mp2p5-grad1; 369/411 Test #210: mcscf2 ........................... Passed 1.31 sec; Start 380: psi4numpy-cphf; 370/411 Test #405: skeleton ......................... Passed 0.94 sec; Start 190: fci-coverage; 371/411 Test #102: decontract ....................... Passed 1.14 sec; Start 398: json-v11-gradient; 372/411 Test #96: cisd-h2o-clpse .............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:33761,Test,Test,33761,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,"Passed 2.95 sec; Start 115: ao-dfcasscf-sp; 172/401 Test #117: dfcasscf-fzc-sp .................. Passed 4.07 sec; Start 348: tu1-h2o-energy; 173/401 Test #138: dfomp2-1 ......................... Passed 7.01 sec; Start 305: pywrap-molecule; 174/401 Test #218: mints10 .......................... Passed 3.21 sec; Start 400: json-schema_0_gradient; 175/401 Test #253: omp3-1 ........................... Passed 5.17 sec; Start 122: dfccsd1; 176/401 Test #125: dfccsd-t-grad1 ................... Passed 19.43 sec; Start 393: python-memdfjk; 177/401 Test #220: molden2 .......................... Passed 6.09 sec; Start 123: dfccsdl1; 178/401 Test #305: pywrap-molecule .................. Passed 1.23 sec; Start 347: stability2; 179/401 Test #219: molden1 .......................... Passed 5.30 sec; Start 326: scf-bs; 180/401 Test #227: mp2p5-grad1 ...................... Passed 4.58 sec; Start 349: tu2-ch2-energy; 181/401 Test #348: tu1-h2o-energy ................... Passed 1.49 sec; Start 330: scf3; 182/401 Test #239: ocepa1 ........................... Passed 6.49 sec; Start 380: psi4numpy-rhf-gradient; 183/401 Test #115: ao-dfcasscf-sp ................... Passed 2.27 sec; Start 290: psimrcc-sp1; 184/401 Test #400: json-schema_0_gradient ........... Passed 1.81 sec; Start 101: decontract; 185/401 Test #376: cc-module, ....................... Passed 111.71 sec; Start 379: psi4numpy-rhf; 186/401 Test #393: python-memdfjk ................... Passed 1.80 sec; Start 205: mcscf1; 187/401 Test #349: tu2-ch2-energy ................... Passed 1.30 sec; Start 235: numpy-array-interface; 188/401 Test #326: scf-bs ........................... Passed 1.60 sec; Start 384: python-energy; 189/401 Test #330: scf3 ............................. Passed 1.38 sec; Start 204: matrix1; 190/401 Test #380: psi4numpy-rhf-gradient ........... Passed 1.41 sec; Start 359: options1; 191/401 Test #347: stability2 ....................... Passed 1.80 sec; Start 208: mints1; 192/401 Test #379: psi4numpy-rhf .........",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:17025,Test,Test,17025,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Passed 2.99 sec; Start 364: options1; 365/411 Test #364: options1 ......................... Passed 0.67 sec; Start 365: cubeprop-esp; 366/411 Test #365: cubeprop-esp ..................... Passed 8.94 sec; Start 366: dft-smoke; 367/411 Test #366: dft-smoke ........................ Passed 11.42 sec; Start 367: scf-hess1; 368/411 Test #367: scf-hess1 ........................ Passed 6.01 sec; Start 368: scf-freq1; 369/411 Test #368: scf-freq1 ........................ Passed 7.94 sec; Start 369: dft-jk; 370/411 Test #369: dft-jk ........................... Passed 9.26 sec; Start 370: scf-coverage; 371/411 Test #370: scf-coverage ..................... Passed 2.64 sec; Start 371: dft-custom-dhdf; 372/411 Test #371: dft-custom-dhdf .................. Passed 70.66 sec; Start 372: dft-custom-hybrid; 373/411 Test #372: dft-custom-hybrid ................ Passed 9.61 sec; Start 373: dft-custom-mgga; 374/411 Test #373: dft-custom-mgga .................. Passed 152.10 sec; Start 374: dft-custom-gga; 375/411 Test #374: dft-custom-gga ................... Passed 25.40 sec; Start 375: pywrap-bfs; 376/411 Test #375: pywrap-bfs ....................... Passed 24.76 sec; Start 376: pywrap-align; 377/411 Test #376: pywrap-align ..................... Passed 6.81 sec; Start 377: pywrap-align-chiral; 378/411 Test #377: pywrap-align-chiral .............. Passed 3.20 sec; Start 378: mints12; 379/411 Test #378: mints12 .......................... Passed 1.19 sec; Start 379: cc-module; 380/411 Test #379: cc-module ........................ Passed 38.08 sec; Start 380: psi4numpy-cphf; 381/411 Test #380: psi4numpy-cphf ................... Passed 1.21 sec; Start 381: psi4numpy-dfmp2; 382/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.94 sec; Start 382: psi4numpy-rhf; 383/411 Test #382: psi4numpy-rhf .................... Passed 0.86 sec; Start 383: psi4numpy-rhf-gradient; 384/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.33 sec; Start 384: psi4numpy-rhf-hessian; 385/411 Test #3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:34559,Test,Test,34559,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Passed 20.31 sec; Start 187: fci-h2o-fzcv; 188/411 Test #185: fci-h2o .......................... Passed 8.16 sec; Start 188: fci-tdm; 189/411 Test #188: fci-tdm .......................... Passed 0.88 sec; Start 189: fci-tdm-2; 190/411 Test #186: fci-h2o-2 ........................ Passed 10.10 sec; Start 190: fci-coverage; 191/411 Test #187: fci-h2o-fzcv ..................... Passed 7.22 sec; Start 191: fcidump; 192/411 Test #177: extern2 .......................... Passed 27.27 sec; Start 192: fd-freq-energy; 193/411 Test #191: fcidump .......................... Passed 6.53 sec; Start 194: fd-freq-gradient; 194/411 Test #190: fci-coverage ..................... Passed 7.87 sec; Start 196: fd-gradient; 195/411 Test #168: dft1 ............................. Passed 106.60 sec; Start 197: freq-isotope1; 196/411 Test #192: fd-freq-energy ................... Passed 11.70 sec; Start 198: freq-isotope2; 197/411 Test #189: fci-tdm-2 ........................ Passed 24.01 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 10.11 sec; Start 200: fnocc2; 199/411 Test #197: freq-isotope1 .................... Passed 17.28 sec; Start 201: fnocc3; 200/411 Test #194: fd-freq-gradient ................. Passed 26.25 sec; Start 202: fnocc4; 201/411 Test #199: fnocc1 ........................... Passed 21.50 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 5.66 sec; Start 204: frac-ip-fitting; 203/411 Test #196: fd-gradient ...................... Passed 40.24 sec; Start 206: ghosts; 204/411 Test #201: fnocc3 ........................... Passed 24.13 sec; Start 207: gibbs; 205/411 Test #202: fnocc4 ........................... Passed 28.77 sec; Start 208: matrix1; 206/411 Test #208: matrix1 .......................... Passed 0.55 sec; Start 209: mcscf1; 207/411 Test #209: mcscf1 ........................... Passed 1.10 sec; Start 210: mcscf2; 208/411 Test #210: mcscf2 ........................... Passed 1.64 sec; Start 211: mcscf3; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:18290,Test,Test,18290,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Passed 203.93 sec; Start 151: dfomp2p5-2; 147/411 Test #148: dfomp3-grad1 ..................... Passed 29.39 sec; Start 152: dfomp2p5-grad1; 148/411 Test #150: dfomp2p5-1 ....................... Passed 33.37 sec; Start 153: dfomp2p5-grad2; 149/411 Test #144: dfomp2-grad2 ..................... Passed 74.36 sec; Start 154: dfrasscf-sp; 150/411 Test #154: dfrasscf-sp ...................... Passed 9.32 sec; Start 155: dfscf-bz2; 151/411 Test #147: dfomp3-2 ......................... Passed 73.45 sec; Start 156: dft-b2plyp; 152/411 Test #152: dfomp2p5-grad1 ................... Passed 32.07 sec; Start 157: dft-grac; 153/411 Test #157: dft-grac ......................... Passed 1.65 sec; Start 158: dft-ghost; 154/411 Test #158: dft-ghost ........................ Passed 7.88 sec; Start 159: dft-grad-meta; 155/411 Test #151: dfomp2p5-2 ....................... Passed 53.45 sec; Start 160: dft-grad-lr1; 156/411 Test #149: dfomp3-grad2 ..................... Passed 72.16 sec; Start 161: dft-grad-lr2; 157/411 Test #156: dft-b2plyp ....................... Passed 24.97 sec; Start 162: dft-grad-lr3; 158/411 Test #45: cc3 .............................. Passed 1001.27 sec; Start 163: dft-freq; 159/411 Test #111: dcft5 ............................ Passed 277.98 sec; Start 164: dft-grad1; 160/411 Test #76: cc7 .............................. Passed 455.20 sec; Start 165: dft-grad2; 161/411 Test #160: dft-grad-lr1 ..................... Passed 18.81 sec; Start 166: dft-psivar; 162/411 Test #18: cbs-xtpl-func .................... Passed 1602.26 sec; Start 167: dft-b3lyp; 163/411 Test #114: dcft8 ............................ Passed 264.99 sec; Start 168: dft1; 164/411 Test #153: dfomp2p5-grad2 ................... Passed 54.37 sec; Start 169: dft-vv10; 165/411 Test #164: dft-grad1 ........................ Passed 15.62 sec; Start 170: dft1-alt; 166/411 Test #165: dft-grad2 ........................ Passed 18.02 sec; Start 171: dft2; 167/411 Test #163: dft-freq ......................... Passed 27.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:14622,Test,Test,14622,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Passed 21.24 sec; Start 338: scf7; 221/411 Test #3: casscf-fzc-sp .................... Passed 18.69 sec; Start 372: dft-custom-hybrid; 222/411 Test #101: cubeprop ......................... Passed 13.44 sec; Start 291: psimrcc-fd-freq1; 223/411 Test #369: dft-jk ........................... Passed 14.57 sec; Start 52: cc36; 224/411 Test #372: dft-custom-hybrid ................ Passed 12.18 sec; Start 393: python-3-index-transforms; 225/411 Test #150: dfomp2p5-1 ....................... Passed 27.17 sec; Start 268: opt2-fd; 226/411 Test #89: cepa3 ............................ Passed 24.53 sec; Start 201: fnocc3; 227/411 Test #50: cc34 ............................. Passed 31.39 sec; Start 197: freq-isotope1; 228/411 Test #152: dfomp2p5-grad1 ................... Passed 41.09 sec; Start 368: scf-freq1; 229/411 Test #128: dfccsdat1 ........................ Passed 27.13 sec; Start 98: cisd-sp; 230/411 Test #338: scf7 ............................. Passed 21.28 sec; Start 367: scf-hess1; 231/411 Test #393: python-3-index-transforms ........ Passed 9.60 sec; Start 15: cbs-xtpl-freq; 232/411 Test #62: cc45 ............................. Passed 33.93 sec; Start 335: scf4; 233/411 Test #252: omp2-grad2 ....................... Passed 45.92 sec; Start 154: dfrasscf-sp; 234/411 Test #23: cc12 ............................. Passed 41.38 sec; Start 270: opt4; 235/411 Test #268: opt2-fd .......................... Passed 15.41 sec; Start 180: fsapt-terms; 236/411 Test #21: cc10 ............................. Passed 50.04 sec; Start 139: dfomp2-1; 237/411 Test #291: psimrcc-fd-freq1 ................. Passed 22.76 sec; Start 124: dfccsdl1; 238/411 Test #37: cc22 ............................. Passed 41.04 sec; Start 123: dfccsd1; 239/411 Test #15: cbs-xtpl-freq .................... Passed 10.29 sec; Start 198: freq-isotope2; 240/411 Test #98: cisd-sp .......................... Passed 12.09 sec; Start 295: psithon1; 241/411 Test #367: scf-hess1 ........................ Passed 12.79 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:21679,Test,Test,21679,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Passed 21.56 sec; Start 238: nbody-intermediates; 144/411 Test #91: cepa-module ...................... Passed 508.69 sec; Start 207: gibbs; 145/411 Test #217: mints6 ........................... Passed 12.17 sec; Start 303: pywrap-checkrun-convcrit; 146/411 Test #194: fd-freq-gradient ................. Passed 51.14 sec; Start 256: omp2p5-grad2; 147/411 Test #238: nbody-intermediates .............. Passed 39.78 sec; Start 138: dfmp2-grad5; 148/411 Test #207: gibbs ............................ Passed 55.21 sec; Start 285: props2; 149/411 Test #303: pywrap-checkrun-convcrit ......... Passed 54.35 sec; Start 263: omp3-grad2; 150/411 Test #285: props2 ........................... Passed 16.97 sec; Start 12: cbs-parser; 151/411 Test #138: dfmp2-grad5 ...................... Passed 35.59 sec; Start 16: cbs-xtpl-gradient; 152/411 Test #242: ocepa-grad2 ...................... Passed 276.22 sec; Start 26: cc13b; 153/411 Test #16: cbs-xtpl-gradient ................ Passed 81.48 sec; Start 34: cc19; 154/411 Test #28: cc13d ............................ Passed 892.45 sec; Start 65: cc48; 155/411 Test #256: omp2p5-grad2 ..................... Passed 236.27 sec; Start 245: ocepa3; 156/411 Test #12: cbs-parser ....................... Passed 214.30 sec; Start 133: dfmp2-ecp; 157/411 Test #263: omp3-grad2 ....................... Passed 238.71 sec; Start 176: extern1; 158/411 Test #133: dfmp2-ecp ........................ Passed 15.59 sec; Start 261: omp3-5; 159/411 Test #34: cc19 ............................. Passed 179.49 sec; Start 67: cc4a; 160/411 Test #27: cc13c ............................ Passed 433.11 sec; Start 115: dcft9; 161/411 Test #176: extern1 .......................... Passed 40.24 sec; Start 372: dft-custom-hybrid; 162/411 Test #260: omp3-4 ........................... Passed 367.41 sec; Start 104: dcft-grad2; 163/411 Test #372: dft-custom-hybrid ................ Passed 16.33 sec; Start 369: dft-jk; 164/411 Test #369: dft-jk ........................... Passed 14.21 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:14521,Test,Test,14521,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Passed 22.35 sec; Start 305: pywrap-checkrun-rohf; 302/411 Test #297: pubchem1 ......................... Passed 53.99 sec; Start 306: pywrap-checkrun-uhf; 303/411 Test #292: psimrcc-fd-freq2 ................. Passed 78.42 sec; Start 307: pywrap-db1; 304/411 Test #299: pywrap-alias ..................... Passed 66.47 sec; Start 308: pywrap-db3; 305/411 Test #308: pywrap-db3 ....................... Passed 0.68 sec; Start 309: pywrap-molecule; 306/411 Test #309: pywrap-molecule .................. Passed 1.13 sec; Start 310: rasci-c2-active; 307/411 Test #310: rasci-c2-active .................. Passed 4.86 sec; Start 311: rasci-h2o; 308/411 Test #311: rasci-h2o ........................ Passed 2.82 sec; Start 312: rasci-ne; 309/411 Test #307: pywrap-db1 ....................... Passed 43.65 sec; Start 313: rasscf-sp; 310/411 Test #312: rasci-ne ......................... Passed 32.55 sec; Start 314: sad1; 311/411 Test #314: sad1 ............................. Passed 3.45 sec; Start 315: sapt1; 312/411 Test #315: sapt1 ............................ Passed 18.51 sec; Start 317: sapt3; 313/411 Test #281: opt-irc-2 ........................ Passed 196.68 sec; Start 319: sapt5; 314/411 Test #313: rasscf-sp ........................ Passed 35.03 sec; Start 320: sapt6; 315/411 Test #302: pywrap-cbs1 ...................... Passed 147.95 sec; Start 321: sapt-dft-api; 316/411 Test #321: sapt-dft-api ..................... Passed 17.52 sec; Start 322: sapt-dft-lrc; 317/411 Test #317: sapt3 ............................ Passed 72.30 sec; Start 323: sapt7; 318/411 Test #319: sapt5 ............................ Passed 72.43 sec; Start 324: sapt8; 319/411 Test #322: sapt-dft-lrc ..................... Passed 20.12 sec; Start 326: scf-ecp; 320/411 Test #324: sapt8 ............................ Passed 15.58 sec; Start 327: scf-guess-read1; 321/411 Test #327: scf-guess-read1 .................. Passed 1.64 sec; Start 328: scf-upcast-custom-basis; 322/411 Test #328: scf-upcast-custom-basis .......... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:28963,Test,Test,28963,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,"Passed 22.55 sec; Start 7: casscf-sp; 393/412 Test #410: skeletonscf ...................... Passed 23.60 sec; Start 88: cepa1; 394/412 Test #212: mcscf3 ........................... Passed 23.17 sec; Start 119: dfcasscf-fzc-sp; 395/412 Test #217: mints5 ........................... Passed 23.23 sec; Start 224: molden1; 396/412 Test #176: docs-dft ......................... Passed 23.17 sec; Start 314: rasscf-sp; 397/412 Test #209: matrix1 .......................... Passed 22.15 sec; 398/412 Test #213: mints1 ........................... Passed 22.39 sec; 399/412 Test #175: docs-bases ....................... Passed 22.12 sec; 400/412 Test #216: mints4 ........................... Passed 22.12 sec; 401/412 Test #309: pywrap-db3 ....................... Passed 21.36 sec; 402/412 Test #365: options1 ......................... Passed 21.37 sec; 403/412 Test #403: json-schema-1-throws ............. Passed 21.81 sec; 404/412 Test #399: json-v11-gradient ................ Passed 23.59 sec; 405/412 Test #4: casscf-semi ...................... Passed 24.24 sec; 406/412 Test #119: dfcasscf-fzc-sp .................. Passed 22.12 sec; 407/412 Test #5: casscf-sa-sp ..................... Passed 31.16 sec; 408/412 Test #224: molden1 .......................... Passed 23.02 sec; 409/412 Test #88: cepa1 ............................ Passed 23.86 sec; 410/412 Test #314: rasscf-sp ........................ Passed 26.88 sec; 411/412 Test #7: casscf-sp ........................ Passed 29.29 sec; 412/412 Test #319: sapt4 ............................ Passed 1842.38 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 98.54 sec*proc (2 tests); autotest = 2376.01 sec*proc (26 tests); cart = 21821.85 sec*proc (123 tests); cas = 70.20 sec*proc (1 test); casscf = 306.92 sec*proc (11 tests); cbs = 2631.53 sec*proc (11 tests); cc = 15319.84 sec*proc (65 tests); cdomp2 = 143.48 sec*proc (2 tests); cepa = 226.30 sec*proc (7 tests); ci = 265.18 sec*proc (8 tests); cisd = 305.68 sec*proc ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:38089,Test,Test,38089,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Passed 22.57 sec; Start 388: python-energy; 374/412 Test #223: mints10 .......................... Passed 22.74 sec; Start 310: pywrap-molecule; 375/412 Test #354: tu1-h2o-energy ................... Passed 23.10 sec; Start 383: psi4numpy-rhf; 376/412 Test #103: decontract ....................... Passed 23.29 sec; Start 210: mcscf1; 377/412 Test #411: skeletonsointegrals .............. Passed 22.95 sec; Start 410: skeletonscf; 378/412 Test #381: psi4numpy-cphf ................... Passed 23.03 sec; Start 212: mcscf3; 379/412 Test #355: tu2-ch2-energy ................... Passed 23.46 sec; Start 217: mints5; 380/412 Test #221: mints-helper ..................... Passed 24.04 sec; Start 240: numpy-array-interface; 381/412 Test #401: json-schema-1-ghost .............. Passed 23.42 sec; Start 176: docs-dft; 382/412 Test #397: python-memdfjk ................... Passed 23.80 sec; Start 213: mints1; 383/412 Test #215: mints3 ........................... Passed 23.55 sec; Start 209: matrix1; 384/412 Test #384: psi4numpy-rhf-gradient ........... Passed 25.10 sec; Start 175: docs-bases; 385/412 Test #379: mints12 .......................... Passed 23.88 sec; Start 216: mints4; 386/412 Test #335: scf3 ............................. Passed 23.31 sec; Start 309: pywrap-db3; 387/412 Test #405: json-schema-1-properties ......... Passed 23.98 sec; Start 365: options1; 388/412 Test #310: pywrap-molecule .................. Passed 23.01 sec; Start 403: json-schema-1-throws; 389/412 Test #388: python-energy .................... Passed 23.44 sec; Start 399: json-v11-gradient; 390/412 Test #383: psi4numpy-rhf .................... Passed 23.40 sec; Start 4: casscf-semi; 391/412 Test #210: mcscf1 ........................... Passed 23.77 sec; Start 5: casscf-sa-sp; 392/412 Test #240: numpy-array-interface ............ Passed 22.55 sec; Start 7: casscf-sp; 393/412 Test #410: skeletonscf ...................... Passed 23.60 sec; Start 88: cepa1; 394/412 Test #212: mcscf3 ........................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:36276,Test,Test,36276,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,"Passed 23.02 sec; 409/412 Test #88: cepa1 ............................ Passed 23.86 sec; 410/412 Test #314: rasscf-sp ........................ Passed 26.88 sec; 411/412 Test #7: casscf-sp ........................ Passed 29.29 sec; 412/412 Test #319: sapt4 ............................ Passed 1842.38 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 98.54 sec*proc (2 tests); autotest = 2376.01 sec*proc (26 tests); cart = 21821.85 sec*proc (123 tests); cas = 70.20 sec*proc (1 test); casscf = 306.92 sec*proc (11 tests); cbs = 2631.53 sec*proc (11 tests); cc = 15319.84 sec*proc (65 tests); cdomp2 = 143.48 sec*proc (2 tests); cepa = 226.30 sec*proc (7 tests); ci = 265.18 sec*proc (8 tests); cisd = 305.68 sec*proc (7 tests); cookbook = 499.71 sec*proc (1 test); cubeprop = 60.94 sec*proc (2 tests); dcft = 5483.73 sec*proc (13 tests); df = 3170.34 sec*proc (38 tests); dfccd = 23.41 sec*proc (1 test); dfccd-grad = 31.36 sec*proc (1 test); dfccdl = 23.35 sec*proc (1 test); dfccsd = 26.12 sec*proc (1 test); dfccsd-grad = 51.95 sec*proc (1 test); dfccsd-t-grad = 43.90 sec*proc (1 test); dfccsdat = 38.92 sec*proc (1 test); dfccsdl = 26.48 sec*proc (1 test); dfccsdt = 23.05 sec*proc (1 test); dfep2 = 48.44 sec*proc (2 tests); dfmp2 = 377.39 sec*proc (11 tests); dfomp2 = 1660.45 sec*proc (7 tests); dfomp2.5 = 249.73 sec*proc (4 tests); dfomp3 = 331.36 sec*proc (4 tests); dfscf = 157.81 sec*proc (1 test); dft = 1909.96 sec*proc (27 tests); docs = 45.29 sec*proc (2 tests); ecp = 88.68 sec*proc (2 tests); fci = 55.37 sec*proc (2 tests); fcidump = 23.91 sec*proc (1 test); findif = 1014.06 sec*proc (5 tests); fnocc = 213.01 sec*proc (4 tests); freq = 1356.97 sec*proc (6 tests); gradient = 2764.98 sec*proc (16 tests); json = 190.44 sec*proc (8 tests); longtests = 3661.11 sec*proc (5 tests); mcscf = 70.40 sec*proc (3 tests); minitests = 148.66 sec*proc (4 tests); mints = 394.57 sec*proc (14 tests); misc = 781.82 sec*proc (16 tests); mp2 = 790.20 sec*proc (13 te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:39345,test,test,39345,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['test'],['test']
Testability,"Passed 23.23 sec; Start 224: molden1; 396/412 Test #176: docs-dft ......................... Passed 23.17 sec; Start 314: rasscf-sp; 397/412 Test #209: matrix1 .......................... Passed 22.15 sec; 398/412 Test #213: mints1 ........................... Passed 22.39 sec; 399/412 Test #175: docs-bases ....................... Passed 22.12 sec; 400/412 Test #216: mints4 ........................... Passed 22.12 sec; 401/412 Test #309: pywrap-db3 ....................... Passed 21.36 sec; 402/412 Test #365: options1 ......................... Passed 21.37 sec; 403/412 Test #403: json-schema-1-throws ............. Passed 21.81 sec; 404/412 Test #399: json-v11-gradient ................ Passed 23.59 sec; 405/412 Test #4: casscf-semi ...................... Passed 24.24 sec; 406/412 Test #119: dfcasscf-fzc-sp .................. Passed 22.12 sec; 407/412 Test #5: casscf-sa-sp ..................... Passed 31.16 sec; 408/412 Test #224: molden1 .......................... Passed 23.02 sec; 409/412 Test #88: cepa1 ............................ Passed 23.86 sec; 410/412 Test #314: rasscf-sp ........................ Passed 26.88 sec; 411/412 Test #7: casscf-sp ........................ Passed 29.29 sec; 412/412 Test #319: sapt4 ............................ Passed 1842.38 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 98.54 sec*proc (2 tests); autotest = 2376.01 sec*proc (26 tests); cart = 21821.85 sec*proc (123 tests); cas = 70.20 sec*proc (1 test); casscf = 306.92 sec*proc (11 tests); cbs = 2631.53 sec*proc (11 tests); cc = 15319.84 sec*proc (65 tests); cdomp2 = 143.48 sec*proc (2 tests); cepa = 226.30 sec*proc (7 tests); ci = 265.18 sec*proc (8 tests); cisd = 305.68 sec*proc (7 tests); cookbook = 499.71 sec*proc (1 test); cubeprop = 60.94 sec*proc (2 tests); dcft = 5483.73 sec*proc (13 tests); df = 3170.34 sec*proc (38 tests); dfccd = 23.41 sec*proc (1 test); dfccd-grad = 31.36 sec*proc (1 test); dfccdl = 23.35 sec*proc (1 test); dfccsd = 26.12 sec*pro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:38373,Test,Test,38373,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Passed 23.47 sec; Start 240: nbody-intermediates; 197/413 Test #209: gibbs ............................ Passed 23.05 sec; Start 145: dfomp2-grad1; 198/413 Test #305: pywrap-checkrun-convcrit ......... Passed 18.20 sec; Start 277: opt9; 199/413 Test #140: dfmp2-grad5 ...................... Passed 18.72 sec; Start 7: casscf-sp; 200/413 Test #174: dft3 ............................. Passed 23.63 sec; Start 324: sapt-dft-lrc; 201/413 Test #348: sapt-dft1 ........................ Passed 23.83 sec; Start 178: extern1; 202/413 Test #168: dft-psivar ....................... Passed 25.11 sec; Start 292: psimrcc-ccsd_t-4; 203/413 Test #161: dft-b2plyp ....................... Passed 27.54 sec; Start 317: sapt1; 204/413 Test #249: omp2-2 ........................... Passed 16.78 sec; Start 379: pywrap-align-chiral; 205/413 Test #90: cepa3 ............................ Passed 12.74 sec; Start 315: rasscf-sp; 206/413 Test #107: dcft-grad3 ....................... Passed 17.40 sec; Start 167: dft-grad2; 207/413 Test #145: dfomp2-grad1 ..................... Passed 12.78 sec; Start 155: dft-grad-lr1; 208/413 Test #360: tu5-sapt ......................... Passed 22.28 sec; Start 323: sapt-dft-api; 209/413 Test #191: fci-tdm-2 ........................ Passed 24.04 sec; Start 298: psithon2; 210/413 Test #379: pywrap-align-chiral .............. Passed 6.81 sec; Start 395: python-3-index-transforms; 211/413 Test #240: nbody-intermediates .............. Passed 18.60 sec; Start 166: dft-grad1; 212/413 Test #277: opt9 ............................. Passed 19.05 sec; Start 293: psimrcc-fd-freq1; 213/413 Test #7: casscf-sp ........................ Passed 19.37 sec; Start 220: mints8; 214/413 Test #315: rasscf-sp ........................ Passed 11.48 sec; Start 171: dft-vv10; 215/413 Test #178: extern1 .......................... Passed 19.32 sec; Start 378: pywrap-align; 216/413 Test #324: sapt-dft-lrc ..................... Passed 23.55 sec; Start 303: pywrap-basis; 217/413 Test #378: pywrap-align ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:19439,Test,Test,19439,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,"Passed 23.59 sec; 405/412 Test #4: casscf-semi ...................... Passed 24.24 sec; 406/412 Test #119: dfcasscf-fzc-sp .................. Passed 22.12 sec; 407/412 Test #5: casscf-sa-sp ..................... Passed 31.16 sec; 408/412 Test #224: molden1 .......................... Passed 23.02 sec; 409/412 Test #88: cepa1 ............................ Passed 23.86 sec; 410/412 Test #314: rasscf-sp ........................ Passed 26.88 sec; 411/412 Test #7: casscf-sp ........................ Passed 29.29 sec; 412/412 Test #319: sapt4 ............................ Passed 1842.38 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 98.54 sec*proc (2 tests); autotest = 2376.01 sec*proc (26 tests); cart = 21821.85 sec*proc (123 tests); cas = 70.20 sec*proc (1 test); casscf = 306.92 sec*proc (11 tests); cbs = 2631.53 sec*proc (11 tests); cc = 15319.84 sec*proc (65 tests); cdomp2 = 143.48 sec*proc (2 tests); cepa = 226.30 sec*proc (7 tests); ci = 265.18 sec*proc (8 tests); cisd = 305.68 sec*proc (7 tests); cookbook = 499.71 sec*proc (1 test); cubeprop = 60.94 sec*proc (2 tests); dcft = 5483.73 sec*proc (13 tests); df = 3170.34 sec*proc (38 tests); dfccd = 23.41 sec*proc (1 test); dfccd-grad = 31.36 sec*proc (1 test); dfccdl = 23.35 sec*proc (1 test); dfccsd = 26.12 sec*proc (1 test); dfccsd-grad = 51.95 sec*proc (1 test); dfccsd-t-grad = 43.90 sec*proc (1 test); dfccsdat = 38.92 sec*proc (1 test); dfccsdl = 26.48 sec*proc (1 test); dfccsdt = 23.05 sec*proc (1 test); dfep2 = 48.44 sec*proc (2 tests); dfmp2 = 377.39 sec*proc (11 tests); dfomp2 = 1660.45 sec*proc (7 tests); dfomp2.5 = 249.73 sec*proc (4 tests); dfomp3 = 331.36 sec*proc (4 tests); dfscf = 157.81 sec*proc (1 test); dft = 1909.96 sec*proc (27 tests); docs = 45.29 sec*proc (2 tests); ecp = 88.68 sec*proc (2 tests); fci = 55.37 sec*proc (2 tests); fcidump = 23.91 sec*proc (1 test); findif = 1014.06 sec*proc (5 tests); fnocc = 213.01 sec*proc (4 tests); freq = 1356.97 sec*proc (6 tests); gr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:39061,test,tests,39061,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['test'],['tests']
Testability,Passed 23.94 sec; Start 135: dfmp2-grad1; 313/412 Test #97: cisd-h2o-clpse ................... Passed 23.24 sec; Start 346: dfep2-2; 314/412 Test #225: molden2 .......................... Passed 24.04 sec; Start 312: rasci-h2o; 315/412 Test #122: dfccdl1 .......................... Passed 23.35 sec; Start 333: scf-occ; 316/412 Test #214: mints2 ........................... Passed 24.07 sec; Start 290: psimrcc-ccsd_t-3; 317/412 Test #118: dfcasscf-sa-sp ................... Passed 26.23 sec; Start 352: dft-reference; 318/412 Test #247: omp2-1 ........................... Passed 22.97 sec; Start 329: scf-upcast-custom-basis; 319/412 Test #263: omp3-grad1 ....................... Passed 24.21 sec; Start 204: frac; 320/412 Test #328: scf-guess-read1 .................. Passed 23.52 sec; Start 117: ao-dfcasscf-sp; 321/412 Test #392: python-mints2 .................... Passed 24.57 sec; Start 362: x2c2; 322/412 Test #142: dfomp2-3 ......................... Passed 26.52 sec; Start 402: json-schema-1-orient; 323/412 Test #315: sad1 ............................. Passed 24.75 sec; Start 236: mp2-property; 324/412 Test #252: omp2-grad1 ....................... Passed 25.97 sec; Start 344: stability1; 325/412 Test #284: opt-freeze-coords ................ Passed 26.18 sec; Start 345: dfep2-1; 326/412 Test #385: psi4numpy-rhf-hessian ............ Passed 25.08 sec; Start 398: json-v11-energy; 327/412 Test #135: dfmp2-grad1 ...................... Passed 23.71 sec; Start 400: json-schema-1-energy; 328/412 Test #346: dfep2-2 .......................... Passed 23.48 sec; Start 389: python-curve; 329/412 Test #312: rasci-h2o ........................ Passed 23.59 sec; Start 235: mp3-grad2; 330/412 Test #333: scf-occ .......................... Passed 23.80 sec; Start 232: mp2p5-grad1; 331/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 23.57 sec; Start 229: mp2-grad1; 332/412 Test #329: scf-upcast-custom-basis .......... Passed 24.34 sec; Start 131: dfmp2-2; 333/412 Test #117: ao-dfcasscf,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:30397,Test,Test,30397,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Passed 24.56 sec; Start 121: dfccd1; 336/412 Test #362: x2c2 ............................. Passed 23.73 sec; Start 412: skeletonwavefunction; 337/412 Test #402: json-schema-1-orient ............. Passed 24.09 sec; Start 289: psimrcc-ccsd_t-2; 338/412 Test #344: stability1 ....................... Passed 24.31 sec; Start 363: x2c3; 339/412 Test #345: dfep2-1 .......................... Passed 24.96 sec; Start 357: scf-response1; 340/412 Test #236: mp2-property ..................... Passed 25.57 sec; Start 161: dft-grac; 341/412 Test #398: json-v11-energy .................. Passed 24.99 sec; Start 222: mints9; 342/412 Test #232: mp2p5-grad1 ...................... Passed 23.24 sec; Start 334: scf2; 343/412 Test #400: json-schema-1-energy ............. Passed 24.98 sec; Start 409: skeletonmointegrals; 344/412 Test #235: mp3-grad2 ........................ Passed 24.37 sec; Start 382: psi4numpy-dfmp2; 345/412 Test #389: python-curve ..................... Passed 25.55 sec; Start 406: skeleton; 346/412 Test #229: mp2-grad1 ........................ Passed 23.81 sec; Start 353: stability2; 347/412 Test #294: psimrcc-pt2 ...................... Passed 22.73 sec; Start 288: psimrcc-ccsd_t-1; 348/412 Test #131: dfmp2-2 .......................... Passed 24.04 sec; Start 391: python-mints9; 349/412 Test #121: dfccd1 ........................... Passed 23.41 sec; Start 8: castup1; 350/412 Test #234: mp3-grad1 ........................ Passed 24.08 sec; Start 408: skeletondfmp2; 351/412 Test #412: skeletonwavefunction ............. Passed 24.24 sec; Start 189: fci-tdm; 352/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 24.24 sec; Start 211: mcscf2; 353/412 Test #161: dft-grac ......................... Passed 24.09 sec; Start 396: python-mints13; 354/412 Test #363: x2c3 ............................. Passed 25.59 sec; Start 350: sapt-sf1; 355/412 Test #357: scf-response1 .................... Passed 25.39 sec; Start 404: json-schema-1-gradient; 356/412 Test #409: skeletonmointegral,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:32603,Test,Test,32603,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Passed 24.61 sec; Start 167: dft-grad2; 213/413 Test #260: omp3-2 ........................... Passed 35.02 sec; Start 402: json-schema-1-ghost; 214/413 Test #166: dft-grad1 ........................ Passed 14.49 sec; Start 277: opt9; 215/413 Test #403: json-schema-1-orient ............. Passed 2.67 sec; Start 139: dfmp2-grad4; 216/413 Test #402: json-schema-1-ghost .............. Passed 1.84 sec; Start 178: extern1; 217/413 Test #243: ocepa-grad1 ...................... Passed 22.50 sec; Start 199: freq-isotope1; 218/413 Test #249: omp2-2 ........................... Passed 32.96 sec; Start 168: dft-psivar; 219/413 Test #141: dfomp2-1 ......................... Passed 15.16 sec; Start 161: dft-b2plyp; 220/413 Test #90: cepa3 ............................ Passed 26.99 sec; Start 305: pywrap-checkrun-convcrit; 221/413 Test #292: psimrcc-ccsd_t-4 ................. Passed 18.56 sec; Start 110: dcft2; 222/413 Test #139: dfmp2-grad4 ...................... Passed 11.83 sec; Start 323: sapt-dft-api; 223/413 Test #167: dft-grad2 ........................ Passed 16.75 sec; Start 155: dft-grad-lr1; 224/413 Test #199: freq-isotope1 .................... Passed 17.40 sec; Start 317: sapt1; 225/413 Test #277: opt9 ............................. Passed 22.86 sec; Start 315: rasscf-sp; 226/413 Test #178: extern1 .......................... Passed 22.24 sec; Start 220: mints8; 227/413 Test #110: dcft2 ............................ Passed 15.97 sec; Start 405: json-schema-1-gradient; 228/413 Test #209: gibbs ............................ Passed 30.26 sec; Start 407: skeleton; 229/413 Test #323: sapt-dft-api ..................... Passed 16.91 sec; Start 406: json-schema-1-properties; 230/413 Test #405: json-schema-1-gradient ........... Passed 1.96 sec; Start 404: json-schema-1-throws; 231/413 Test #407: skeleton ......................... Passed 1.52 sec; Start 268: opt1-fd; 232/413 Test #406: json-schema-1-properties ......... Passed 1.40 sec; Start 124: dfccd-grad1; 233/413 Test #404: json-sche,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:21034,Test,Test,21034,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Passed 24.96 sec; Start 357: scf-response1; 340/412 Test #236: mp2-property ..................... Passed 25.57 sec; Start 161: dft-grac; 341/412 Test #398: json-v11-energy .................. Passed 24.99 sec; Start 222: mints9; 342/412 Test #232: mp2p5-grad1 ...................... Passed 23.24 sec; Start 334: scf2; 343/412 Test #400: json-schema-1-energy ............. Passed 24.98 sec; Start 409: skeletonmointegrals; 344/412 Test #235: mp3-grad2 ........................ Passed 24.37 sec; Start 382: psi4numpy-dfmp2; 345/412 Test #389: python-curve ..................... Passed 25.55 sec; Start 406: skeleton; 346/412 Test #229: mp2-grad1 ........................ Passed 23.81 sec; Start 353: stability2; 347/412 Test #294: psimrcc-pt2 ...................... Passed 22.73 sec; Start 288: psimrcc-ccsd_t-1; 348/412 Test #131: dfmp2-2 .......................... Passed 24.04 sec; Start 391: python-mints9; 349/412 Test #121: dfccd1 ........................... Passed 23.41 sec; Start 8: castup1; 350/412 Test #234: mp3-grad1 ........................ Passed 24.08 sec; Start 408: skeletondfmp2; 351/412 Test #412: skeletonwavefunction ............. Passed 24.24 sec; Start 189: fci-tdm; 352/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 24.24 sec; Start 211: mcscf2; 353/412 Test #161: dft-grac ......................... Passed 24.09 sec; Start 396: python-mints13; 354/412 Test #363: x2c3 ............................. Passed 25.59 sec; Start 350: sapt-sf1; 355/412 Test #357: scf-response1 .................... Passed 25.39 sec; Start 404: json-schema-1-gradient; 356/412 Test #409: skeletonmointegrals .............. Passed 23.56 sec; Start 299: pubchem2; 357/412 Test #334: scf2 ............................. Passed 23.93 sec; Start 407: skeletonaointegrals; 358/412 Test #222: mints9 ........................... Passed 24.90 sec; Start 354: tu1-h2o-energy; 359/412 Test #382: psi4numpy-dfmp2 .................. Passed 24.00 sec; Start 331: scf-bs; 360/412 Test #406: skeleton .......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:32987,Test,Test,32987,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Passed 252.59 sec; Start 350: dft-custom; 140/411 Test #114: dcft8 ............................ Passed 1380.21 sec; Start 366: dft-smoke; 141/411 Test #60: cc43 ............................. Passed 383.91 sec; Start 260: omp3-4; 142/411 Test #350: dft-custom ....................... Passed 20.59 sec; Start 217: mints6; 143/411 Test #366: dft-smoke ........................ Passed 21.56 sec; Start 238: nbody-intermediates; 144/411 Test #91: cepa-module ...................... Passed 508.69 sec; Start 207: gibbs; 145/411 Test #217: mints6 ........................... Passed 12.17 sec; Start 303: pywrap-checkrun-convcrit; 146/411 Test #194: fd-freq-gradient ................. Passed 51.14 sec; Start 256: omp2p5-grad2; 147/411 Test #238: nbody-intermediates .............. Passed 39.78 sec; Start 138: dfmp2-grad5; 148/411 Test #207: gibbs ............................ Passed 55.21 sec; Start 285: props2; 149/411 Test #303: pywrap-checkrun-convcrit ......... Passed 54.35 sec; Start 263: omp3-grad2; 150/411 Test #285: props2 ........................... Passed 16.97 sec; Start 12: cbs-parser; 151/411 Test #138: dfmp2-grad5 ...................... Passed 35.59 sec; Start 16: cbs-xtpl-gradient; 152/411 Test #242: ocepa-grad2 ...................... Passed 276.22 sec; Start 26: cc13b; 153/411 Test #16: cbs-xtpl-gradient ................ Passed 81.48 sec; Start 34: cc19; 154/411 Test #28: cc13d ............................ Passed 892.45 sec; Start 65: cc48; 155/411 Test #256: omp2p5-grad2 ..................... Passed 236.27 sec; Start 245: ocepa3; 156/411 Test #12: cbs-parser ....................... Passed 214.30 sec; Start 133: dfmp2-ecp; 157/411 Test #263: omp3-grad2 ....................... Passed 238.71 sec; Start 176: extern1; 158/411 Test #133: dfmp2-ecp ........................ Passed 15.59 sec; Start 261: omp3-5; 159/411 Test #34: cc19 ............................. Passed 179.49 sec; Start 67: cc4a; 160/411 Test #27: cc13c ............................ Passed 433.11 sec; Start 11,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:14149,Test,Test,14149,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Passed 28.43 sec; Start 323: sapt-dft-lrc; 203/412 Test #249: omp2-3 ........................... Passed 21.19 sec; Start 292: psimrcc-fd-freq1; 204/412 Test #190: fci-tdm-2 ........................ Passed 31.40 sec; Start 170: dft-vv10; 205/412 Test #359: tu5-sapt ......................... Passed 30.09 sec; Start 291: psimrcc-ccsd_t-4; 206/412 Test #54: cc37 ............................. Passed 24.98 sec; Start 239: nbody-intermediates; 207/412 Test #24: cc12 ............................. Passed 23.79 sec; Start 139: dfmp2-grad5; 208/412 Test #292: psimrcc-fd-freq1 ................. Passed 24.32 sec; Start 276: opt9; 209/412 Test #323: sapt-dft-lrc ..................... Passed 32.65 sec; Start 177: extern1; 210/412 Test #170: dft-vv10 ......................... Passed 24.01 sec; Start 316: sapt1; 211/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 27.62 sec; Start 297: psithon2; 212/412 Test #139: dfmp2-grad5 ...................... Passed 19.70 sec; Start 322: sapt-dft-api; 213/412 Test #239: nbody-intermediates .............. Passed 21.39 sec; Start 106: dcft-grad3; 214/412 Test #276: opt9 ............................. Passed 21.66 sec; Start 255: omp2p5-2; 215/412 Test #177: extern1 .......................... Passed 20.27 sec; Start 302: pywrap-basis; 216/412 Test #316: sapt1 ............................ Passed 26.10 sec; Start 166: dft-grad2; 217/412 Test #255: omp2p5-2 ......................... Passed 17.78 sec; Start 154: dft-grad-lr1; 218/412 Test #297: psithon2 ......................... Passed 23.56 sec; Start 325: sapt8; 219/412 Test #106: dcft-grad3 ....................... Passed 22.12 sec; Start 5: casscf-sa-sp; 220/412 Test #322: sapt-dft-api ..................... Passed 27.80 sec; Start 219: mints8; 221/412 Test #302: pywrap-basis ..................... Passed 19.14 sec; Start 341: soscf-large; 222/412 Test #5: casscf-sa-sp ..................... Passed 20.61 sec; Start 90: cepa3; 223/412 Test #325: sapt8 ............................ Passed 26.16 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:19797,Test,Test,19797,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Passed 28.44 sec; Start 148: dfomp3-grad1; 152/411 Test #111: dcft5 ............................ Passed 344.26 sec; Start 149: dfomp3-grad2; 153/411 Test #144: dfomp2-grad2 ..................... Passed 90.58 sec; Start 150: dfomp2p5-1; 154/411 Test #148: dfomp3-grad1 ..................... Passed 33.72 sec; Start 151: dfomp2p5-2; 155/411 Test #147: dfomp3-2 ......................... Passed 64.88 sec; Start 152: dfomp2p5-grad1; 156/411 Test #150: dfomp2p5-1 ....................... Passed 12.61 sec; Start 153: dfomp2p5-grad2; 157/411 Test #114: dcft8 ............................ Passed 377.89 sec; Start 154: dfrasscf-sp; 158/411 Test #154: dfrasscf-sp ...................... Passed 6.23 sec; Start 155: dfscf-bz2; 159/411 Test #152: dfomp2p5-grad1 ................... Passed 27.84 sec; Start 156: dft-b2plyp; 160/411 Test #149: dfomp3-grad2 ..................... Passed 67.41 sec; Start 157: dft-grac; 161/411 Test #157: dft-grac ......................... Passed 2.20 sec; Start 158: dft-ghost; 162/411 Test #151: dfomp2p5-2 ....................... Passed 48.04 sec; Start 159: dft-grad-meta; 163/411 Test #158: dft-ghost ........................ Passed 8.33 sec; Start 160: dft-grad-lr1; 164/411 Test #156: dft-b2plyp ....................... Passed 28.62 sec; Start 161: dft-grad-lr2; 165/411 Test #160: dft-grad-lr1 ..................... Passed 17.17 sec; Start 162: dft-grad-lr3; 166/411 Test #153: dfomp2p5-grad2 ................... Passed 70.41 sec; Start 163: dft-freq; 167/411 Test #163: dft-freq ......................... Passed 21.07 sec; Start 164: dft-grad1; 168/411 Test #159: dft-grad-meta .................... Passed 53.79 sec; Start 165: dft-grad2; 169/411 Test #164: dft-grad1 ........................ Passed 16.89 sec; Start 166: dft-psivar; 170/411 Test #165: dft-grad2 ........................ Passed 17.83 sec; Start 167: dft-b3lyp; 171/411 Test #166: dft-psivar ....................... Passed 27.99 sec; Start 168: dft1; 172/411 Test #161: dft-grad-lr2 ..................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:14905,Test,Test,14905,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Passed 28.60 sec; Start 412: skeletonwavefunction; 351/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 28.02 sec; Start 289: psimrcc-ccsd_t-2; 352/412 Test #329: scf-upcast-custom-basis .......... Passed 29.05 sec; Start 363: x2c3; 353/412 Test #362: x2c2 ............................. Passed 26.24 sec; Start 409: skeletonmointegrals; 354/412 Test #402: json-schema-1-orient ............. Passed 25.49 sec; Start 334: scf2; 355/412 Test #294: psimrcc-pt2 ...................... Passed 23.95 sec; Start 353: stability2; 356/412 Test #131: dfmp2-2 .......................... Passed 22.17 sec; Start 161: dft-grac; 357/412 Test #412: skeletonwavefunction ............. Passed 19.82 sec; Start 189: fci-tdm; 358/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 19.53 sec; Start 406: skeleton; 359/412 Test #363: x2c3 ............................. Passed 19.26 sec; Start 382: psi4numpy-dfmp2; 360/412 Test #409: skeletonmointegrals .............. Passed 17.81 sec; Start 357: scf-response1; 361/412 Test #334: scf2 ............................. Passed 17.76 sec; Start 408: skeletondfmp2; 362/412 Test #353: stability2 ....................... Passed 18.16 sec; Start 350: sapt-sf1; 363/412 Test #161: dft-grac ......................... Passed 17.60 sec; Start 211: mcscf2; 364/412 Test #189: fci-tdm .......................... Passed 17.49 sec; Start 407: skeletonaointegrals; 365/412 Test #406: skeleton ......................... Passed 17.68 sec; Start 288: psimrcc-ccsd_t-1; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 17.83 sec; Start 8: castup1; 367/412 Test #357: scf-response1 .................... Passed 18.48 sec; Start 331: scf-bs; 368/412 Test #408: skeletondfmp2 .................... Passed 17.11 sec; Start 391: python-mints9; 369/412 Test #350: sapt-sf1 ......................... Passed 17.11 sec; Start 222: mints9; 370/412 Test #211: mcscf2 ........................... Passed 16.68 sec; Start 404: json-schema-1-gradient; 371/412 Test #407: skeletonaoint,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:33789,Test,Test,33789,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Passed 3.00 sec; Start 377: pywrap-align-chiral; 314/411 Test #134: dfmp2-grad1 ...................... Passed 2.56 sec; Start 236: mpn-bh; 315/411 Test #4: casscf-semi ...................... Passed 1.77 sec; Start 213: mints2; 316/411 Test #399: json-schema-1-energy ............. Passed 1.83 sec; Start 118: dfcasscf-fzc-sp; 317/411 Test #388: python-curve ..................... Passed 2.19 sec; Start 391: python-mints2; 318/411 Test #295: psithon1 ......................... Passed 3.15 sec; Start 384: psi4numpy-rhf-hessian; 319/411 Test #236: mpn-bh ........................... Passed 2.98 sec; Start 283: opt-freeze-coords; 320/411 Test #376: pywrap-align ..................... Passed 3.28 sec; Start 343: stability1; 321/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.56 sec; Start 203: frac; 322/411 Test #377: pywrap-align-chiral .............. Passed 3.40 sec; Start 311: rasci-h2o; 323/411 Test #213: mints2 ........................... Passed 2.40 sec; Start 235: mp2-property; 324/411 Test #391: python-mints2 .................... Passed 2.39 sec; Start 225: mom; 325/411 Test #311: rasci-h2o ........................ Passed 1.08 sec; Start 356: scf-response1; 326/411 Test #203: frac ............................. Passed 1.57 sec; Start 191: fcidump; 327/411 Test #343: stability1 ....................... Passed 2.11 sec; Start 362: x2c3; 328/411 Test #384: psi4numpy-rhf-hessian ............ Passed 2.66 sec; Start 314: sad1; 329/411 Test #283: opt-freeze-coords ................ Passed 3.00 sec; Start 361: x2c2; 330/411 Test #225: mom .............................. Passed 2.15 sec; Start 253: omp2p5-1; 331/411 Test #356: scf-response1 .................... Passed 2.07 sec; Start 284: props1; 332/411 Test #362: x2c3 ............................. Passed 1.49 sec; Start 224: molden2; 333/411 Test #235: mp2-property ..................... Passed 2.67 sec; Start 271: opt5; 334/411 Test #191: fcidump .......................... Passed 1.95 sec; Start 8: castup1; 335/411 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:30196,Test,Test,30196,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Passed 3.04 sec; Start 241: ocepa-grad1; 291/411 Test #283: opt-freeze-coords ................ Passed 2.87 sec; Start 314: sad1; 292/411 Test #108: dcft2 ............................ Passed 1.83 sec; Start 351: dft-reference; 293/411 Test #236: mpn-bh ........................... Passed 2.81 sec; Start 118: dfcasscf-fzc-sp; 294/411 Test #344: dfep2-1 .......................... Passed 2.76 sec; Start 3: casscf-fzc-sp; 295/411 Test #255: omp2p5-grad1 ..................... Passed 2.61 sec; Start 384: psi4numpy-rhf-hessian; 296/411 Test #314: sad1 ............................. Passed 2.30 sec; Start 137: dfmp2-grad4; 297/411 Test #269: opt3 ............................. Passed 3.64 sec; Start 120: dfccd1; 298/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.88 sec; Start 88: cepa2; 299/411 Test #241: ocepa-grad1 ...................... Passed 3.89 sec; Start 391: python-mints2; 300/411 Test #351: dft-reference .................... Passed 2.90 sec; Start 239: numpy-array-interface; 301/411 Test #384: psi4numpy-rhf-hessian ............ Passed 2.53 sec; Start 235: mp2-property; 302/411 Test #239: numpy-array-interface ............ Passed 0.65 sec; Start 388: python-curve; 303/411 Test #120: dfccd1 ........................... Passed 1.64 sec; Start 253: omp2p5-1; 304/411 Test #3: casscf-fzc-sp .................... Passed 3.57 sec; Start 119: dfcasscf-sp; 305/411 Test #88: cepa2 ............................ Passed 2.64 sec; Start 130: dfmp2-2; 306/411 Test #137: dfmp2-grad4 ...................... Passed 3.41 sec; Start 139: dfomp2-1; 307/411 Test #253: omp2p5-1 ......................... Passed 1.33 sec; Start 136: dfmp2-grad3; 308/411 Test #391: python-mints2 .................... Passed 2.45 sec; Start 284: props1; 309/411 Test #388: python-curve ..................... Passed 2.06 sec; Start 116: ao-dfcasscf-sp; 310/411 Test #119: dfcasscf-sp ...................... Passed 1.71 sec; Start 135: dfmp2-grad2; 311/411 Test #235: mp2-property ..................... Passed 2.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:28018,Test,Test,28018,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Passed 3.06 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 4.71 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.62 sec; Start 365: cubeprop-esp; 359/411 Test #365: cubeprop-esp ..................... Passed 9.12 sec; Start 366: dft-smoke; 360/411 Test #366: dft-smoke ........................ Passed 19.56 sec; Start 367: scf-hess1; 361/411 Test #367: scf-hess1 ........................ Passed 11.75 sec; Start 368: scf-freq1; 362/411 Test #347: sapt-dft2 ........................ Passed 121.47 sec; Start 369: dft-jk; 363/411 Test #368: scf-freq1 ........................ Passed 23.47 sec; Start 370: scf-coverage; 364/411 Test #369: dft-jk ........................... Passed 14.03 sec; Start 371: dft-custom-dhdf; 365/411 Test #360: x2c1 ............................. Passed 85.68 sec; Start 372: dft-custom-hybrid; 366/411 Test #370: scf-coverage ..................... Passed 14.12 sec; Start 373: dft-custom-mgga; 367/411 Test #372: dft-custom-hybrid ................ Passed 14.18 sec; Start 374: dft-custom-gga; 368/411 Test #305: pywrap-checkrun-rohf ............. Passed 405.81 sec; Start 375: pywrap-bfs; 369/411 Test #375: pywrap-bfs ....................... Passed 23.60 sec; Start 376: pywrap-align; 370/411 Test #374: dft-custom-gga ................... Passed 32.79 sec; Start 377: pywrap-align-chiral; 371/411 Test #376: pywrap-align ..................... Passed 3.23 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.18 sec; Start 379: cc-module; 373/411 Test #377: pywrap-align-chiral .............. Passed 2.88 sec; Start 380: psi4numpy-cphf; 374/411 Test #380: psi4numpy-cphf ................... Passed 1.66 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #381: psi4numpy-dfmp2 .................. Passed 3.39 sec; Start 382: psi4numpy-rhf; 376/411 Test #382: psi4numpy-rhf .................... Passed 0.80 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #383: ps,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:34119,Test,Test,34119,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,Passed 3.13 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 6.27 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.62 sec; Start 365: cubeprop-esp; 359/411 Test #365: cubeprop-esp ..................... Passed 10.11 sec; Start 366: dft-smoke; 360/411 Test #366: dft-smoke ........................ Passed 16.22 sec; Start 367: scf-hess1; 361/411 Test #367: scf-hess1 ........................ Passed 12.20 sec; Start 368: scf-freq1; 362/411 Test #347: sapt-dft2 ........................ Passed 122.60 sec; Start 369: dft-jk; 363/411 Test #368: scf-freq1 ........................ Passed 14.57 sec; Start 370: scf-coverage; 364/411 Test #369: dft-jk ........................... Passed 12.68 sec; Start 371: dft-custom-dhdf; 365/411 Test #360: x2c1 ............................. Passed 72.91 sec; Start 372: dft-custom-hybrid; 366/411 Test #370: scf-coverage ..................... Passed 8.99 sec; Start 373: dft-custom-mgga; 367/411 Test #372: dft-custom-hybrid ................ Passed 13.00 sec; Start 374: dft-custom-gga; 368/411 Test #374: dft-custom-gga ................... Passed 30.24 sec; Start 375: pywrap-bfs; 369/411 Test #375: pywrap-bfs ....................... Passed 24.13 sec; Start 376: pywrap-align; 370/411 Test #376: pywrap-align ..................... Passed 3.39 sec; Start 377: pywrap-align-chiral; 371/411 Test #377: pywrap-align-chiral .............. Passed 2.91 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.27 sec; Start 379: cc-module; 373/411 Test #371: dft-custom-dhdf .................. Passed 89.27 sec; Start 380: psi4numpy-cphf; 374/411 Test #380: psi4numpy-cphf ................... Passed 1.33 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #381: psi4numpy-dfmp2 .................. Passed 2.04 sec; Start 382: psi4numpy-rhf; 376/411 Test #382: psi4numpy-rhf .................... Passed 0.85 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #383: psi,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:34135,Test,Test,34135,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Passed 3.19 sec; Start 237: nbody-he-cluster; 235/411 Test #204: frac-ip-fitting .................. Passed 73.34 sec; Start 238: nbody-intermediates; 236/411 Test #236: mpn-bh ........................... Passed 4.83 sec; Start 239: numpy-array-interface; 237/411 Test #239: numpy-array-interface ............ Passed 0.70 sec; Start 240: ocepa-freq1; 238/411 Test #238: nbody-intermediates .............. Passed 21.93 sec; Start 241: ocepa-grad1; 239/411 Test #241: ocepa-grad1 ...................... Passed 14.34 sec; Start 242: ocepa-grad2; 240/411 Test #237: nbody-he-cluster ................. Passed 55.34 sec; Start 243: ocepa1; 241/411 Test #243: ocepa1 ........................... Passed 11.48 sec; Start 244: ocepa2; 242/411 Test #230: mp2-module ....................... Passed 96.52 sec; Start 245: ocepa3; 243/411 Test #162: dft-grad-lr3 ..................... Passed 434.63 sec; Start 246: omp2-1; 244/411 Test #110: dcft4 ............................ Passed 1010.33 sec; Start 247: omp2-2; 245/411 Test #246: omp2-1 ........................... Passed 11.08 sec; Start 248: omp2-3; 246/411 Test #247: omp2-2 ........................... Passed 30.77 sec; Start 249: omp2-4; 247/411 Test #248: omp2-3 ........................... Passed 40.15 sec; Start 250: omp2-5; 248/411 Test #242: ocepa-grad2 ...................... Passed 96.09 sec; Start 251: omp2-grad1; 249/411 Test #245: ocepa3 ........................... Passed 61.30 sec; Start 252: omp2-grad2; 250/411 Test #251: omp2-grad1 ....................... Passed 6.31 sec; Start 253: omp2p5-1; 251/411 Test #253: omp2p5-1 ......................... Passed 8.30 sec; Start 254: omp2p5-2; 252/411 Test #145: dfomp2-grad3 ..................... Passed 779.29 sec; Start 255: omp2p5-grad1; 253/411 Test #255: omp2p5-grad1 ..................... Passed 9.64 sec; Start 256: omp2p5-grad2; 254/411 Test #244: ocepa2 ........................... Passed 93.86 sec; Start 257: omp3-1; 255/411 Test #257: omp3-1 ........................... Passed 4.62 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:22654,Test,Test,22654,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Passed 3.19 sec; Start 326: scf-bs; 347/401 Test #207: mcscf3 ........................... Passed 1.36 sec; Start 399: json-schema_0_throws; 348/401 Test #212: mints5 ........................... Passed 1.05 sec; Start 305: pywrap-molecule; 349/401 Test #394: json-v11_energy .................. Passed 3.76 sec; Start 211: mints4; 350/401 Test #171: docs-dft ......................... Passed 0.95 sec; Start 330: scf3; 351/401 Test #392: python-mints13 ................... Passed 2.38 sec; Start 380: psi4numpy-rhf-gradient; 352/401 Test #357: x2c3 ............................. Passed 2.63 sec; Start 349: tu2-ch2-energy; 353/401 Test #133: dfmp2-grad1 ...................... Passed 3.71 sec; Start 290: psimrcc-sp1; 354/401 Test #399: json-schema_0_throws ............. Passed 0.76 sec; Start 101: decontract; 355/401 Test #211: mints4 ........................... Passed 0.73 sec; Start 379: psi4numpy-rhf; 356/401 Test #170: docs-bases ....................... Passed 0.83 sec; Start 205: mcscf1; 357/401 Test #351: scf-response1 .................... Passed 1.97 sec; Start 384: python-energy; 358/401 Test #324: scf-upcast-custom-basis .......... Passed 2.26 sec; Start 204: matrix1; 359/401 Test #323: scf-guess-read1 .................. Passed 2.16 sec; Start 235: numpy-array-interface; 360/401 Test #356: x2c2 ............................. Passed 2.85 sec; Start 359: options1; 361/401 Test #328: scf-occ .......................... Passed 3.01 sec; Start 208: mints1; 362/401 Test #247: omp2-grad1 ....................... Passed 4.60 sec; Start 284: psimrcc-ccsd_t-2; 363/401 Test #400: json-schema_0_gradient ........... Passed 2.33 sec; Start 285: psimrcc-ccsd_t-3; 364/401 Test #115: ao-dfcasscf-sp ................... Passed 3.19 sec; Start 283: psimrcc-ccsd_t-1; 365/401 Test #396: json-schema_0_energy ............. Passed 3.72 sec; Start 289: psimrcc-pt2; 366/401 Test #378: psi4numpy-dfmp2 .................. Passed 2.24 sec; Start 86: cepa1; 367/401 Test #8: castup1 .....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:33826,Test,Test,33826,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Passed 3.37 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 31.87 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 1.22 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 23.64 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 4.34 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.35 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.30 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................... Passed 1.04 sec; Start 355: tu3-h2o-opt; 349/411 Test #350: dft-custom ....................... Passed 14.09 sec; Start 356: scf-response1; 350/411 Test #355: tu3-h2o-opt ...................... Passed 5.75 sec; Start 357: tu4-h2o-freq; 351/411 Test #356: scf-response1 .................... Passed 3.88 sec; Start 358: tu5-sapt; 352/411 Test #348: sapt-compare ..................... Passed 45.66 sec; Start 359: tu6-cp-ne2; 353/411 Test #357: tu4-h2o-freq ..................... Passed 15.20 sec; Start 360: x2c1; 354/411 Test #358: tu5-sapt ......................... Passed 21.11 sec; Start 361: x2c2; 355/411 Test #361: x2c2 ............................. Passed 2.85 sec; Start 362: x2c3; 356/411 Test #362: x2c3 ............................. Passed 3.06 sec; Start 363: zaptn-nh2; 357/411 Test #363: zaptn-nh2 ........................ Passed 4.71 sec; Start 364: options1; 358/411 Test #364: options1 ......................... Passed 0.62 sec; Start 365: cubeprop-esp; 359/411 Test #365: cubeprop-esp ..................... Passed 9.12 sec; Start 366: dft-smoke; 360/411 Test #366: dft-smoke ........................ Passed 19.56 sec; Start 367: scf-hess1; 361/411 Test #367: scf-hess1 ........................ Passed 11.75 sec; Start 368: scf-freq1; 362/411 Test #347: sapt-dft2 ........................ Passed 121.47 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:32705,Test,Test,32705,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,Passed 3.41 sec; Start 257: omp2p5-grad1; 287/413 Test #369: scf-hess1 ........................ Passed 7.67 sec; Start 94: cisd-h2o+-0; 288/413 Test #337: scf4 ............................. Passed 10.51 sec; Start 255: omp2p5-1; 289/413 Test #410: skeletonmointegrals .............. Passed 4.02 sec; Start 95: cisd-h2o+-1; 290/413 Test #404: json-schema-1-throws ............. Passed 4.12 sec; Start 188: fci-h2o-2; 291/413 Test #100: cisd-sp-2 ........................ Passed 7.28 sec; Start 192: fci-coverage; 292/413 Test #234: mp2p5-grad2 ...................... Passed 8.43 sec; Start 412: skeletonsointegrals; 293/413 Test #99: cisd-sp .......................... Passed 11.91 sec; Start 411: skeletonscf; 294/413 Test #411: skeletonscf ...................... Passed 0.70 sec; Start 386: psi4numpy-rhf-hessian; 295/413 Test #94: cisd-h2o+-0 ...................... Passed 7.42 sec; Start 231: mp2-grad2; 296/413 Test #96: cisd-h2o+-2 ...................... Passed 8.19 sec; Start 296: psimrcc-sp1; 297/413 Test #253: omp2-grad1 ....................... Passed 8.93 sec; Start 189: fci-h2o-fzcv; 298/413 Test #95: cisd-h2o+-1 ...................... Passed 5.65 sec; Start 413: skeletonwavefunction; 299/413 Test #255: omp2p5-1 ......................... Passed 6.73 sec; Start 182: fsapt-terms; 300/413 Test #297: psithon1 ......................... Passed 11.65 sec; Start 372: scf-coverage; 301/413 Test #412: skeletonsointegrals .............. Passed 1.54 sec; Start 187: fci-h2o; 302/413 Test #257: omp2p5-grad1 ..................... Passed 8.38 sec; Start 137: dfmp2-grad2; 303/413 Test #413: skeletonwavefunction ............. Passed 1.27 sec; Start 15: cbs-xtpl-freq; 304/413 Test #188: fci-h2o-2 ........................ Passed 6.89 sec; Start 186: fci-dipole; 305/413 Test #134: dfmp2-4 .......................... Passed 12.52 sec; Start 264: omp3-grad1; 306/413 Test #343: soscf-ref ........................ Passed 13.56 sec; Start 383: psi4numpy-dfmp2; 307/413 Test #192: fci-coverage ......,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:27998,Test,Test,27998,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Passed 3.47 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.48 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 14.85 sec; Start 349: sapt-sf1; 335/411 Test #349: sapt-sf1 ......................... Passed 2.04 sec; Start 350: dft-custom; 336/411 Test #319: sapt5 ............................ Passed 74.55 sec; Start 351: dft-reference; 337/411 Test #337: scf6 ............................. Passed 34.05 sec; Start 352: stability2; 338/411 Test #336: scf5 ............................. Passed 34.15 sec; Start 353: tu1-h2o-energy; 339/411 Test #353: tu1-h2o-energy ................... Passed 1.21 sec; Start 354: tu2-ch2-energy; 340/411 Test #352: stability2 ....................... Passed 1.43 sec; Start 355: tu3-h2o-opt; 341/411 Test #351: dft-reference .................... Passed 3.05 sec; Start 356: scf-response1; 342/411 Test #354: tu2-ch2-energy ................... Passed 1.22 sec; Start 357: tu4-h2o-freq; 343/411 Test #356: scf-response1 .................... Passed 2.48 sec; Start 358: tu5-sapt; 344/411 Test #355: tu3-h2o-opt ...................... Passed 3.54 sec; Start 359: tu6-cp-ne2; 345/411 Test #240: ocepa-freq1 ...................... Passed 405.13 sec; Start 360: x2c1; 346/411 Test #350: dft-custom ....................... Passed 14.93 sec; Start 361: x2c2; 347/411 Test #346: sapt-dft1 ........................ Passed 22.71 sec; Start 362: x2c3; 348/411 Test #361: x2c2 ............................. Passed 2.47 sec; Start 363: zaptn-nh2; 349/411 Test #357: tu4-h2o-freq ..................... Passed 13.25 sec; Start 364: options1; 350/411 Test #364: options1 ......................... Passed 0.59 sec; Start 365: cubeprop-esp; 351/411 Test #363: zaptn-nh2 ........................ Passed 2.66 sec; Start 366: dft-smoke; 352/411 Test #362: x2c3 ............................. Passed 2.82 sec; Start 367: scf-hess1; 353/411 Test #342: soscf-dft ........................ Passed 31.94 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:32011,Test,Test,32011,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,"Passed 3.74 sec; Start 514: json-schema-1-gradient; 179/185 Test #514: json-schema-1-gradient ........... Passed 2.98 sec; Start 518: dftd3-energy; 180/185 Test #518: dftd3-energy ..................... Passed 50.87 sec; Start 523: sapt0-d; 181/185 Test #523: sapt0-d .......................... Passed 440.00 sec; Start 524: fsapt-d; 182/185 Test #524: fsapt-d .......................... Passed 542.90 sec; Start 525: fsaptd-terms; 183/185 Test #525: fsaptd-terms .....................***Failed 17.57 sec; Start 526: dftd4-energy; 184/185 Test #526: dftd4-energy ..................... Passed 129.00 sec; Start 527: dftd4-r2scan; 185/185 Test #527: dftd4-r2scan .....................***Failed 9.40 sec. 95% tests passed, 9 tests failed out of 185. Label Time Summary:; addon = 189.28 sec*proc (3 tests); cart = 2407.47 sec*proc (55 tests); cas = 138.78 sec*proc (1 test); casscf = 84.46 sec*proc (11 tests); cbs = 262.77 sec*proc (9 tests); cc = 775.63 sec*proc (13 tests); cdomp2 = 41.72 sec*proc (2 tests); ci = 147.62 sec*proc (2 tests); cisd = 6.82 sec*proc (1 test); cubeprop = 28.89 sec*proc (2 tests); d2ints = 58.89 sec*proc (7 tests); dct = 22.51 sec*proc (3 tests); df = 324.56 sec*proc (15 tests); dfccd = 5.11 sec*proc (1 test); dfccsd = 7.31 sec*proc (1 test); dfccsd-grad = 14.46 sec*proc (1 test); dfccsd-t-grad = 13.06 sec*proc (1 test); dfccsdl = 7.10 sec*proc (1 test); dfep2 = 10.99 sec*proc (2 tests); dfmp2 = 198.00 sec*proc (6 tests); dfomp2 = 6.63 sec*proc (1 test); dfomp3 = 66.77 sec*proc (2 tests); dft = 110.67 sec*proc (5 tests); dftd3 = 50.87 sec*proc (1 test); dftd4 = 138.41 sec*proc (2 tests); direct-scf = 4.26 sec*proc (1 test); eom = 26.13 sec*proc (2 tests); extern = 145.89 sec*proc (6 tests); fcidump = 3.94 sec*proc (1 test); findif = 217.30 sec*proc (11 tests); fnocc = 214.81 sec*proc (4 tests); freq = 119.90 sec*proc (9 tests); fsapt = 680.95 sec*proc (7 tests); gradient = 7.40 sec*proc (2 tests); json = 6.72 sec*proc (2 tests); mcscf = 2.04 sec*proc (1 tes",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:17791,test,tests,17791,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930,1,['test'],['tests']
Testability,Passed 31.38 sec; Start 186: fci-h2o-2; 187/411 Test #185: fci-h2o .......................... Passed 6.97 sec; Start 187: fci-h2o-fzcv; 188/411 Test #186: fci-h2o-2 ........................ Passed 6.73 sec; Start 188: fci-tdm; 189/411 Test #187: fci-h2o-fzcv ..................... Passed 6.96 sec; Start 189: fci-tdm-2; 190/411 Test #168: dft1 ............................. Passed 110.06 sec; Start 190: fci-coverage; 191/411 Test #188: fci-tdm .......................... Passed 4.23 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 9.92 sec; Start 192: fd-freq-energy; 193/411 Test #190: fci-coverage ..................... Passed 13.34 sec; Start 194: fd-freq-gradient; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.83 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 11.83 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 29.49 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 22.34 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 8.47 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 43.09 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 25.22 sec; Start 202: fnocc4; 201/411 Test #201: fnocc3 ........................... Passed 21.28 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 6.10 sec; Start 204: frac-ip-fitting; 203/411 Test #103: dcft-grad1 ....................... Passed 953.45 sec; Start 206: ghosts; 204/411 Test #202: fnocc4 ........................... Passed 27.78 sec; Start 207: gibbs; 205/411 Test #183: isapt2 ........................... Passed 127.46 sec; Start 208: matrix1; 206/411 Test #208: matrix1 .......................... Passed 0.55 sec; Start 209: mcscf1; 207/411 Test #209: mcscf1 ........................... Passed 0.98 sec; Start 210: mc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:18199,Test,Test,18199,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Passed 310.04 sec; Start 18: cbs-xtpl-func; 23/412 Test #183: isapt1 ........................... Passed 405.79 sec; Start 182: fsapt-allterms; 24/412 Test #45: cc29 ............................. Passed 367.98 sec; Start 194: fd-freq-energy-large; 25/412 Test #115: dcft8 ............................ Passed 1028.74 sec; Start 196: fd-freq-gradient-large; 26/412 Test #29: cc13d ............................ Passed 605.10 sec; Start 279: opt13; 27/412 Test #360: tu6-cp-ne2 ....................... Passed 631.78 sec; Start 374: dft-custom-mgga; 28/412 Test #36: cc2 .............................. Passed 1118.56 sec; Start 321: sapt6; 29/412 Test #380: cc-module ........................ Passed 544.21 sec; Start 48: cc31; 30/412 Test #113: dcft6 ............................ Passed 264.36 sec; Start 98: cisd-opt-fd; 31/412 Test #282: opt-irc-2 ........................ Passed 316.11 sec; Start 59: cc41; 32/412 Test #13: cbs-xtpl-alpha ................... Passed 691.34 sec; Start 61: cc43; 33/412 Test #387: cookbook-rohf-orb-rot ............ Passed 632.65 sec; Start 159: dfscf-bz2; 34/412 Test #32: cc16 ............................. Passed 437.11 sec; Start 105: dcft-grad2; 35/412 Test #111: dcft4 ............................ Passed 2308.00 sec; Start 47: cc30; 36/412 Test #59: cc41 ............................. Passed 130.64 sec; Start 303: pywrap-cbs1; 37/412 Test #196: fd-freq-gradient-large ........... Passed 333.01 sec; Start 348: sapt-dft2; 38/412 Test #48: cc31 ............................. Passed 158.36 sec; Start 75: cc5a; 39/412 Test #61: cc43 ............................. Passed 139.30 sec; Start 184: isapt2; 40/412 Test #11: cbs-delta-energy ................. Passed 466.92 sec; Start 92: cepa-module; 41/412 Test #98: cisd-opt-fd ...................... Passed 166.82 sec; Start 155: dft-grad-lr2; 42/412 Test #321: sapt6 ............................ Passed 177.06 sec; Start 169: dft1; 43/412 Test #374: dft-custom-mgga .................. Passed 196.38 sec; Start 26: cc13a,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:3458,Test,Test,3458,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Passed 32.49 sec; Start 229: mp2-grad2; 219/411 Test #225: mom .............................. Passed 5.76 sec; Start 230: mp2-module; 220/411 Test #223: molden1 .......................... Passed 7.31 sec; Start 231: mp2p5-grad1; 221/411 Test #228: mp2-grad1 ........................ Passed 4.00 sec; Start 232: mp2p5-grad2; 222/411 Test #224: molden2 .......................... Passed 7.09 sec; Start 233: mp3-grad1; 223/411 Test #229: mp2-grad2 ........................ Passed 3.96 sec; Start 234: mp3-grad2; 224/411 Test #233: mp3-grad1 ........................ Passed 4.67 sec; Start 235: mp2-property; 225/411 Test #231: mp2p5-grad1 ...................... Passed 6.26 sec; Start 236: mpn-bh; 226/411 Test #232: mp2p5-grad2 ...................... Passed 6.64 sec; Start 237: nbody-he-cluster; 227/411 Test #226: mp2-1 ............................ Passed 12.37 sec; Start 238: nbody-intermediates; 228/411 Test #234: mp3-grad2 ........................ Passed 4.88 sec; Start 239: numpy-array-interface; 229/411 Test #235: mp2-property ..................... Passed 3.31 sec; Start 240: ocepa-freq1; 230/411 Test #239: numpy-array-interface ............ Passed 0.71 sec; Start 241: ocepa-grad1; 231/411 Test #236: mpn-bh ........................... Passed 4.34 sec; Start 242: ocepa-grad2; 232/411 Test #241: ocepa-grad1 ...................... Passed 11.81 sec; Start 243: ocepa1; 233/411 Test #238: nbody-intermediates .............. Passed 18.27 sec; Start 244: ocepa2; 234/411 Test #243: ocepa1 ........................... Passed 5.53 sec; Start 245: ocepa3; 235/411 Test #219: mints-benchmark .................. Passed 41.71 sec; Start 246: omp2-1; 236/411 Test #110: dcft4 ............................ Passed 423.92 sec; Start 247: omp2-2; 237/411 Test #246: omp2-1 ........................... Passed 4.28 sec; Start 248: omp2-3; 238/411 Test #204: frac-ip-fitting .................. Passed 69.19 sec; Start 249: omp2-4; 239/411 Test #247: omp2-2 ........................... Passed 16.82 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:21334,Test,Test,21334,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Passed 32.86 sec; Start 79: cc8b; 76/411 Test #71: cc53 ............................. Passed 26.63 sec; Start 80: cc8c; 77/411 Test #73: cc55 ............................. Passed 31.81 sec; Start 81: cc9; 78/411 Test #78: cc8a ............................. Passed 41.52 sec; Start 82: cc9a; 79/411 Test #80: cc8c ............................. Passed 39.04 sec; Start 83: cdomp2-1; 80/411 Test #69: cc51 ............................. Passed 71.87 sec; Start 84: cdomp2-2; 81/411 Test #77: cc8 .............................. Passed 47.88 sec; Start 85: cepa0-grad1; 82/411 Test #79: cc8b ............................. Passed 45.68 sec; Start 86: cepa0-grad2; 83/411 Test #85: cepa0-grad1 ...................... Passed 3.52 sec; Start 87: cepa1; 84/411 Test #83: cdomp2-1 ......................... Passed 8.41 sec; Start 88: cepa2; 85/411 Test #86: cepa0-grad2 ...................... Passed 5.62 sec; Start 89: cepa3; 86/411 Test #87: cepa1 ............................ Passed 7.50 sec; Start 90: cepa1; 87/411 Test #88: cepa2 ............................ Passed 6.63 sec; Start 91: cepa-module; 88/411 Test #81: cc9 .............................. Passed 42.28 sec; Start 92: ci-multi; 89/411 Test #84: cdomp2-2 ......................... Passed 18.17 sec; Start 93: cisd-h2o+-0; 90/411 Test #89: cepa3 ............................ Passed 9.74 sec; Start 94: cisd-h2o+-1; 91/411 Test #74: cc5a ............................. Passed 76.04 sec; Start 95: cisd-h2o+-2; 92/411 Test #90: cepa1 ............................ Passed 9.86 sec; Start 96: cisd-h2o-clpse; 93/411 Test #82: cc9a ............................. Passed 27.69 sec; Start 97: cisd-opt-fd; 94/411 Test #93: cisd-h2o+-0 ...................... Passed 6.79 sec; Start 98: cisd-sp; 95/411 Test #96: cisd-h2o-clpse ................... Passed 1.52 sec; Start 99: cisd-sp-2; 96/411 Test #94: cisd-h2o+-1 ...................... Passed 5.32 sec; Start 100: ci-property; 97/411 Test #95: cisd-h2o+-2 ...................... Passed 4.71 sec; Start 101: c,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:8023,Test,Test,8023,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Passed 339.46 sec; Start 183: fsapt-allterms; 22/413 Test #229: mp2-def2 ......................... Passed 401.24 sec; Start 195: fd-freq-energy-large; 23/413 Test #13: cbs-xtpl-alpha ................... Passed 339.68 sec; Start 197: fd-freq-gradient-large; 24/413 Test #59: cc41 ............................. Passed 137.70 sec; Start 280: opt13; 25/413 Test #45: cc29 ............................. Passed 218.43 sec; Start 375: dft-custom-mgga; 26/413 Test #61: cc43 ............................. Passed 139.20 sec; Start 71: cc52; 27/413 Test #46: cc3 .............................. Passed 1535.28 sec; Start 28: cc13c; 28/413 Test #184: isapt1 ........................... Passed 416.48 sec; Start 283: opt-irc-2; 29/413 Test #114: dcft6 ............................ Passed 212.86 sec; Start 361: tu6-cp-ne2; 30/413 Test #306: pywrap-checkrun-rhf .............. Passed 1024.50 sec; Start 98: cisd-opt-fd; 31/413 Test #307: pywrap-checkrun-rohf ............. Passed 516.10 sec; Start 322: sapt6; 32/413 Test #11: cbs-delta-energy ................. Passed 271.51 sec; Start 92: cepa-module; 33/413 Test #112: dcft4 ............................ Passed 1638.41 sec; Start 263: omp3-5; 34/413 Test #28: cc13c ............................ Passed 116.00 sec; Start 388: cookbook-rohf-orb-rot; 35/413 Test #308: pywrap-checkrun-uhf .............. Passed 885.27 sec; Start 106: dcft-grad2; 36/413 Test #71: cc52 ............................. Passed 147.28 sec; Start 160: dfscf-bz2; 37/413 Test #375: dft-custom-mgga .................. Passed 190.68 sec; Start 262: omp3-4; 38/413 Test #283: opt-irc-2 ........................ Passed 158.88 sec; Start 27: cc13b; 39/413 Test #263: omp3-5 ........................... Passed 76.35 sec; Start 261: omp3-3; 40/413 Test #92: cepa-module ...................... Passed 99.34 sec; Start 146: dfomp2-grad2; 41/413 Test #98: cisd-opt-fd ...................... Passed 156.92 sec; Start 31: cc15; 42/413 Test #106: dcft-grad2 ....................... Passed 99.47 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:3338,Test,Test,3338,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Passed 37.14 sec; Start 71: cc52; 28/412 Test #11: cbs-delta-energy ................. Passed 41.66 sec; Start 282: opt-irc-2; 29/412 Test #45: cc29 ............................. Passed 71.91 sec; Start 113: dcft6; 30/412 Test #71: cc52 ............................. Passed 78.79 sec; Start 18: cbs-xtpl-func; 31/412 Test #156: dft-grad-lr3 ..................... Passed 442.09 sec; Start 182: fsapt-allterms; 32/412 Test #282: opt-irc-2 ........................ Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ........... Passed 280.15 sec; Start 159: dfscf-bz2; 39/412 Test #321: sapt6 ............................ Passed 188.13 sec; Start 48: cc31; 40/412 Test #98: cisd-opt-fd ...................... Passed 161.17 sec; Start 59: cc41; 41/412 Test #159: dfscf-bz2 ........................ Passed 159.76 sec; Start 348: sapt-dft2; 42/412 Test #18: cbs-xtpl-func .................... Passed 512.57 sec; Start 61: cc43; 43/412 Test #194: fd-freq-energy-large ............. Passed 497.43 sec; Start 184: isapt2; 44/412 Test #59: cc41 ............................. Passed 78.71 sec; Start 105: dcft-grad2; 45/412 Test #61: cc43 ............................. Passed 53.47 sec; Start 155: dft-grad-lr2; 46/412 Test #48: cc31 ............................. Passed 121.57 sec; Start 169: dft1; 47/412 Test #182: fsapt-allterms ................... Passed 576.36 sec; Start 303: pywrap-cbs1; 48/412 Test #105: dcft-grad2 ....................... Passed 66.83 sec; Start 75: cc5a; 49/412,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:3743,Test,Test,3743,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Passed 4.99 sec; Start 285: props1; 302/412 Test #340: scf-property ..................... Passed 5.36 sec; Start 378: pywrap-align-chiral; 303/412 Test #188: fci-h2o-fzcv ..................... Passed 5.47 sec; Start 352: dft-reference; 304/412 Test #270: opt3 ............................. Passed 5.18 sec; Start 191: fci-coverage; 305/412 Test #377: pywrap-align ..................... Passed 6.19 sec; Start 192: fcidump; 306/412 Test #295: psimrcc-sp1 ...................... Passed 4.56 sec; Start 119: dfcasscf-fzc-sp; 307/412 Test #180: fsapt2 ........................... Passed 5.38 sec; Start 385: psi4numpy-rhf-hessian; 308/412 Test #94: cisd-h2o+-0 ...................... Passed 5.26 sec; Start 392: python-mints2; 309/412 Test #258: omp3-1 ........................... Passed 5.33 sec; Start 131: dfmp2-2; 310/412 Test #378: pywrap-align-chiral .............. Passed 3.44 sec; Start 236: mp2-property; 311/412 Test #345: dfep2-1 .......................... Passed 5.13 sec; Start 344: stability1; 312/412 Test #226: mom .............................. Passed 5.93 sec; Start 356: tu3-h2o-opt; 313/412 Test #352: dft-reference .................... Passed 5.16 sec; Start 315: sad1; 314/412 Test #6: ao-casscf-sp ..................... Passed 6.69 sec; Start 224: molden1; 315/412 Test #284: opt-freeze-coords ................ Passed 7.06 sec; Start 230: mp2-grad2; 316/412 Test #285: props1 ........................... Passed 6.49 sec; Start 312: rasci-h2o; 317/412 Test #131: dfmp2-2 .......................... Passed 2.63 sec; Start 233: mp2p5-grad2; 318/412 Test #392: python-mints2 .................... Passed 2.92 sec; Start 214: mints2; 319/412 Test #119: dfcasscf-fzc-sp .................. Passed 3.42 sec; Start 232: mp2p5-grad1; 320/412 Test #385: psi4numpy-rhf-hessian ............ Passed 3.44 sec; Start 346: dfep2-2; 321/412 Test #236: mp2-property ..................... Passed 3.14 sec; Start 357: scf-response1; 322/412 Test #191: fci-coverage ..................... Passed 5.22 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:29265,Test,Test,29265,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Passed 41.66 sec; Start 282: opt-irc-2; 29/412 Test #45: cc29 ............................. Passed 71.91 sec; Start 113: dcft6; 30/412 Test #71: cc52 ............................. Passed 78.79 sec; Start 18: cbs-xtpl-func; 31/412 Test #156: dft-grad-lr3 ..................... Passed 442.09 sec; Start 182: fsapt-allterms; 32/412 Test #282: opt-irc-2 ........................ Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ........... Passed 280.15 sec; Start 159: dfscf-bz2; 39/412 Test #321: sapt6 ............................ Passed 188.13 sec; Start 48: cc31; 40/412 Test #98: cisd-opt-fd ...................... Passed 161.17 sec; Start 59: cc41; 41/412 Test #159: dfscf-bz2 ........................ Passed 159.76 sec; Start 348: sapt-dft2; 42/412 Test #18: cbs-xtpl-func .................... Passed 512.57 sec; Start 61: cc43; 43/412 Test #194: fd-freq-energy-large ............. Passed 497.43 sec; Start 184: isapt2; 44/412 Test #59: cc41 ............................. Passed 78.71 sec; Start 105: dcft-grad2; 45/412 Test #61: cc43 ............................. Passed 53.47 sec; Start 155: dft-grad-lr2; 46/412 Test #48: cc31 ............................. Passed 121.57 sec; Start 169: dft1; 47/412 Test #182: fsapt-allterms ................... Passed 576.36 sec; Start 303: pywrap-cbs1; 48/412 Test #105: dcft-grad2 ....................... Passed 66.83 sec; Start 75: cc5a; 49/412 Test #348: sapt-dft2 ........................ Passed 127.69 sec; Start 26: cc13a; 50/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:3837,Test,Test,3837,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Passed 43.76 sec; Start 131: dfmp2-3; 114/411 Test #68: cc50 ............................. Passed 19.88 sec; Start 81: cc9; 115/411 Test #81: cc9 .............................. Passed 4.79 sec; Start 77: cc8; 116/411 Test #307: pywrap-db1 ....................... Passed 37.30 sec; Start 33: cc18; 117/411 Test #77: cc8 .............................. Passed 6.02 sec; Start 66: cc49; 118/411 Test #33: cc18 ............................. Passed 6.57 sec; Start 64: cc47; 119/411 Test #348: sapt-compare ..................... Passed 38.30 sec; Start 106: dcft-grad4; 120/411 Test #237: nbody-he-cluster ................. Passed 25.96 sec; Start 80: cc8c; 121/411 Test #80: cc8c ............................. Passed 6.42 sec; Start 55: cc39; 122/411 Test #219: mints-benchmark .................. Passed 41.17 sec; Start 56: cc4; 123/411 Test #64: cc47 ............................. Passed 13.48 sec; Start 71: cc53; 124/411 Test #66: cc49 ............................. Passed 19.49 sec; Start 245: ocepa3; 125/411 Test #55: cc39 ............................. Passed 10.10 sec; Start 67: cc4a; 126/411 Test #131: dfmp2-3 .......................... Passed 40.64 sec; Start 374: dft-custom-gga; 127/411 Test #71: cc53 ............................. Passed 11.17 sec; Start 78: cc8a; 128/411 Test #56: cc4 .............................. Passed 13.95 sec; Start 82: cc9a; 129/411 Test #245: ocepa3 ........................... Passed 19.83 sec; Start 37: cc22; 130/411 Test #106: dcft-grad4 ....................... Passed 32.29 sec; Start 323: sapt7; 131/411 Test #67: cc4a ............................. Passed 18.64 sec; Start 206: ghosts; 132/411 Test #78: cc8a ............................. Passed 14.25 sec; Start 273: opt7; 133/411 Test #37: cc22 ............................. Passed 7.28 sec; Start 129: dfmp2-1; 134/411 Test #82: cc9a ............................. Passed 14.69 sec; Start 54: cc38; 135/411 Test #54: cc38 ............................. Passed 6.45 sec; Start 312: rasci-ne; 136/411 Test #3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:11656,Test,Test,11656,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Passed 434.88 sec; Start 61: cc43; 20/413 Test #302: pywrap-all ....................... Passed 1394.91 sec; Start 18: cbs-xtpl-func; 21/413 Test #113: dcft5 ............................ Passed 339.46 sec; Start 183: fsapt-allterms; 22/413 Test #229: mp2-def2 ......................... Passed 401.24 sec; Start 195: fd-freq-energy-large; 23/413 Test #13: cbs-xtpl-alpha ................... Passed 339.68 sec; Start 197: fd-freq-gradient-large; 24/413 Test #59: cc41 ............................. Passed 137.70 sec; Start 280: opt13; 25/413 Test #45: cc29 ............................. Passed 218.43 sec; Start 375: dft-custom-mgga; 26/413 Test #61: cc43 ............................. Passed 139.20 sec; Start 71: cc52; 27/413 Test #46: cc3 .............................. Passed 1535.28 sec; Start 28: cc13c; 28/413 Test #184: isapt1 ........................... Passed 416.48 sec; Start 283: opt-irc-2; 29/413 Test #114: dcft6 ............................ Passed 212.86 sec; Start 361: tu6-cp-ne2; 30/413 Test #306: pywrap-checkrun-rhf .............. Passed 1024.50 sec; Start 98: cisd-opt-fd; 31/413 Test #307: pywrap-checkrun-rohf ............. Passed 516.10 sec; Start 322: sapt6; 32/413 Test #11: cbs-delta-energy ................. Passed 271.51 sec; Start 92: cepa-module; 33/413 Test #112: dcft4 ............................ Passed 1638.41 sec; Start 263: omp3-5; 34/413 Test #28: cc13c ............................ Passed 116.00 sec; Start 388: cookbook-rohf-orb-rot; 35/413 Test #308: pywrap-checkrun-uhf .............. Passed 885.27 sec; Start 106: dcft-grad2; 36/413 Test #71: cc52 ............................. Passed 147.28 sec; Start 160: dfscf-bz2; 37/413 Test #375: dft-custom-mgga .................. Passed 190.68 sec; Start 262: omp3-4; 38/413 Test #283: opt-irc-2 ........................ Passed 158.88 sec; Start 27: cc13b; 39/413 Test #263: omp3-5 ........................... Passed 76.35 sec; Start 261: omp3-3; 40/413 Test #92: cepa-module ...................... Passed 99.34 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:3152,Test,Test,3152,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Passed 438.96 sec; Start 76: cc7; 6/411 Test #38: cc23 ............................. Passed 670.24 sec; Start 18: cbs-xtpl-func; 7/411 Test #36: cc21 ............................. Passed 681.15 sec; Start 181: fsapt-allterms; 8/411 Test #40: cc25 ............................. Passed 702.11 sec; Start 193: fd-freq-energy-large; 9/411 Test #39: cc24 ............................. Passed 728.49 sec; Start 195: fd-freq-gradient-large; 10/411 Test #195: fd-freq-gradient-large ........... Passed 286.40 sec; Start 278: opt13; 11/411 Test #145: dfomp2-grad3 ..................... Passed 1015.18 sec; Start 11: cbs-delta-energy; 12/411 Test #76: cc7 .............................. Passed 587.31 sec; Start 373: dft-custom-mgga; 13/411 Test #306: pywrap-checkrun-uhf .............. Passed 1029.41 sec; Start 320: sapt6; 14/411 Test #45: cc3 .............................. Passed 1036.97 sec; Start 111: dcft5; 15/411 Test #240: ocepa-freq1 ...................... Passed 625.43 sec; Start 41: cc26; 16/411 Test #304: pywrap-checkrun-rhf .............. Passed 1061.37 sec; Start 155: dfscf-bz2; 17/411 Test #35: cc2 .............................. Passed 641.50 sec; Start 42: cc27; 18/411 Test #300: pywrap-all ....................... Passed 1079.44 sec; Start 183: isapt2; 19/411 Test #103: dcft-grad1 ....................... Passed 1109.73 sec; Start 112: dcft6; 20/411 Test #110: dcft4 ............................ Passed 1118.85 sec; Start 347: sapt-dft2; 21/411 Test #11: cbs-delta-energy ................. Passed 162.34 sec; Start 305: pywrap-checkrun-rohf; 22/411 Test #320: sapt6 ............................ Passed 167.87 sec; Start 302: pywrap-cbs1; 23/411 Test #155: dfscf-bz2 ........................ Passed 147.41 sec; Start 97: cisd-opt-fd; 24/411 Test #373: dft-custom-mgga .................. Passed 186.86 sec; Start 281: opt-irc-2; 25/411 Test #183: isapt2 ........................... Passed 139.93 sec; Start 25: cc13a; 26/411 Test #193: fd-freq-energy-large ............. Passed 507.44 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:1860,Test,Test,1860,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Passed 459.59 sec; Start 153: dfomp2p5-grad2; 157/411 Test #150: dfomp2p5-1 ....................... Passed 58.55 sec; Start 154: dfrasscf-sp; 158/411 Test #154: dfrasscf-sp ...................... Passed 8.44 sec; Start 155: dfscf-bz2; 159/411 Test #152: dfomp2p5-grad1 ................... Passed 48.72 sec; Start 156: dft-b2plyp; 160/411 Test #149: dfomp3-grad2 ..................... Passed 138.93 sec; Start 157: dft-grac; 161/411 Test #157: dft-grac ......................... Passed 1.94 sec; Start 158: dft-ghost; 162/411 Test #151: dfomp2p5-2 ....................... Passed 79.08 sec; Start 159: dft-grad-meta; 163/411 Test #158: dft-ghost ........................ Passed 9.91 sec; Start 160: dft-grad-lr1; 164/411 Test #156: dft-b2plyp ....................... Passed 24.64 sec; Start 161: dft-grad-lr2; 165/411 Test #160: dft-grad-lr1 ..................... Passed 17.10 sec; Start 162: dft-grad-lr3; 166/411 Test #153: dfomp2p5-grad2 ................... Passed 97.31 sec; Start 163: dft-freq; 167/411 Test #159: dft-grad-meta .................... Passed 53.62 sec; Start 164: dft-grad1; 168/411 Test #164: dft-grad1 ........................ Passed 15.59 sec; Start 165: dft-grad2; 169/411 Test #163: dft-freq ......................... Passed 25.28 sec; Start 166: dft-psivar; 170/411 Test #165: dft-grad2 ........................ Passed 17.46 sec; Start 167: dft-b3lyp; 171/411 Test #166: dft-psivar ....................... Passed 25.00 sec; Start 168: dft1; 172/411 Test #155: dfscf-bz2 ........................ Passed 140.29 sec; Start 169: dft-vv10; 173/411 Test #161: dft-grad-lr2 ..................... Passed 107.26 sec; Start 170: dft1-alt; 174/411 Test #169: dft-vv10 ......................... Passed 21.05 sec; Start 171: dft2; 175/411 Test #171: dft2 ............................. Passed 5.71 sec; Start 172: dft3; 176/411 Test #167: dft-b3lyp ........................ Passed 68.08 sec; Start 173: dft-omega; 177/411 Test #172: dft3 ............................. Passed 25.39 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:15387,Test,Test,15387,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Passed 48.18 sec; Start 76: cc7; 81/411 Test #71: cc53 ............................. Passed 68.24 sec; Start 77: cc8; 82/411 Test #69: cc51 ............................. Passed 98.09 sec; Start 78: cc8a; 83/411 Test #73: cc55 ............................. Passed 66.08 sec; Start 79: cc8b; 84/411 Test #74: cc5a ............................. Passed 108.62 sec; Start 80: cc8c; 85/411 Test #77: cc8 .............................. Passed 71.01 sec; Start 81: cc9; 86/411 Test #78: cc8a ............................. Passed 79.22 sec; Start 82: cc9a; 87/411 Test #75: cc6 .............................. Passed 98.86 sec; Start 83: cdomp2-1; 88/411 Test #79: cc8b ............................. Passed 64.89 sec; Start 84: cdomp2-2; 89/411 Test #83: cdomp2-1 ......................... Passed 21.89 sec; Start 85: cepa0-grad1; 90/411 Test #85: cepa0-grad1 ...................... Passed 12.14 sec; Start 86: cepa0-grad2; 91/411 Test #86: cepa0-grad2 ...................... Passed 19.71 sec; Start 87: cepa1; 92/411 Test #70: cc52 ............................. Passed 212.33 sec; Start 88: cepa2; 93/411 Test #87: cepa1 ............................ Passed 15.27 sec; Start 89: cepa3; 94/411 Test #80: cc8c ............................. Passed 92.20 sec; Start 90: cepa1; 95/411 Test #81: cc9 .............................. Passed 91.83 sec; Start 91: cepa-module; 96/411 Test #88: cepa2 ............................ Passed 21.82 sec; Start 92: ci-multi; 97/411 Test #84: cdomp2-2 ......................... Passed 84.98 sec; Start 93: cisd-h2o+-0; 98/411 Test #82: cc9a ............................. Passed 96.99 sec; Start 94: cisd-h2o+-1; 99/411 Test #89: cepa3 ............................ Passed 23.34 sec; Start 95: cisd-h2o+-2; 100/411 Test #93: cisd-h2o+-0 ...................... Passed 5.06 sec; Start 96: cisd-h2o-clpse; 101/411 Test #90: cepa1 ............................ Passed 19.21 sec; Start 97: cisd-opt-fd; 102/411 Test #96: cisd-h2o-clpse ................... Passed 1.95 sec; Start 98: cisd-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:8355,Test,Test,8355,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Passed 484.30 sec; Start 181: fsapt-allterms; 17/411 Test #38: cc23 ............................. Passed 495.58 sec; Start 193: fd-freq-energy-large; 18/411 Test #42: cc27 ............................. Passed 441.98 sec; Start 195: fd-freq-gradient-large; 19/411 Test #76: cc7 .............................. Passed 452.44 sec; Start 278: opt13; 20/411 Test #305: pywrap-checkrun-rohf ............. Passed 627.45 sec; Start 111: dcft5; 21/411 Test #110: dcft4 ............................ Passed 890.57 sec; Start 145: dfomp2-grad3; 22/411 Test #195: fd-freq-gradient-large ........... Passed 305.38 sec; Start 240: ocepa-freq1; 23/411 Test #111: dcft5 ............................ Passed 303.53 sec; Start 373: dft-custom-mgga; 24/411 Test #193: fd-freq-energy-large ............. Passed 541.73 sec; Start 112: dcft6; 25/411 Test #373: dft-custom-mgga .................. Passed 188.78 sec; Start 114: dcft8; 26/411 Test #181: fsapt-allterms ................... Passed 611.68 sec; Start 359: tu6-cp-ne2; 27/411 Test #178: fsapt1 ........................... Passed 2082.73 sec; Start 29: cc14; 28/411 Test #112: dcft6 ............................ Passed 211.14 sec; Start 320: sapt6; 29/411 Test #240: ocepa-freq1 ...................... Passed 484.94 sec; Start 155: dfscf-bz2; 30/411 Test #278: opt13 ............................ Passed 786.51 sec; Start 97: cisd-opt-fd; 31/411 Test #145: dfomp2-grad3 ..................... Passed 797.94 sec; Start 183: isapt2; 32/411 Test #320: sapt6 ............................ Passed 170.76 sec; Start 379: cc-module; 33/411 Test #155: dfscf-bz2 ........................ Passed 133.50 sec; Start 13: cbs-xtpl-alpha; 34/411 Test #359: tu6-cp-ne2 ....................... Passed 352.85 sec; Start 347: sapt-dft2; 35/411 Test #97: cisd-opt-fd ...................... Passed 180.99 sec; Start 281: opt-irc-2; 36/411 Test #114: dcft8 ............................ Passed 438.46 sec; Start 44: cc29; 37/411 Test #183: isapt2 ........................... Passed 126.68 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:2736,Test,Test,2736,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Passed 5.12 sec; Start 192: fcidump; 316/412 Test #229: mp2-grad1 ........................ Passed 3.11 sec; Start 400: json-schema-1-energy; 317/412 Test #95: cisd-h2o+-1 ...................... Passed 5.23 sec; Start 378: pywrap-align-chiral; 318/412 Test #204: frac ............................. Passed 3.89 sec; Start 344: stability1; 319/412 Test #332: scf1 ............................. Passed 5.47 sec; Start 345: dfep2-1; 320/412 Test #378: pywrap-align-chiral .............. Passed 3.24 sec; Start 389: python-curve; 321/412 Test #120: dfcasscf-sp ...................... Passed 6.79 sec; Start 236: mp2-property; 322/412 Test #356: tu3-h2o-opt ...................... Passed 5.64 sec; Start 398: json-v11-energy; 323/412 Test #400: json-schema-1-energy ............. Passed 4.36 sec; Start 119: dfcasscf-fzc-sp; 324/412 Test #295: psimrcc-sp1 ...................... Passed 5.67 sec; Start 258: omp3-1; 325/412 Test #226: mom .............................. Passed 6.16 sec; Start 352: dft-reference; 326/412 Test #272: opt5 ............................. Passed 6.07 sec; Start 385: psi4numpy-rhf-hessian; 327/412 Test #230: mp2-grad2 ........................ Passed 7.17 sec; Start 364: zaptn-nh2; 328/412 Test #122: dfccdl1 .......................... Passed 6.15 sec; Start 312: rasci-h2o; 329/412 Test #266: opt1 ............................. Passed 8.11 sec; Start 294: psimrcc-pt2; 330/412 Test #344: stability1 ....................... Passed 4.56 sec; Start 392: python-mints2; 331/412 Test #345: dfep2-1 .......................... Passed 4.20 sec; Start 131: dfmp2-2; 332/412 Test #398: json-v11-energy .................. Passed 2.33 sec; Start 214: mints2; 333/412 Test #192: fcidump .......................... Passed 7.02 sec; Start 333: scf-occ; 334/412 Test #312: rasci-h2o ........................ Passed 1.99 sec; Start 315: sad1; 335/412 Test #236: mp2-property ..................... Passed 3.18 sec; Start 328: scf-guess-read1; 336/412 Test #389: python-curve ..................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:30585,Test,Test,30585,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,"Passed 5.23 sec; 409/413 Test #132: dfmp2-2 .......................... Passed 5.73 sec; 410/413 Test #88: cepa1 ............................ Passed 3.93 sec; 411/413 Test #18: cbs-xtpl-func .................... Passed 1465.89 sec; 412/413 Test #180: fsapt1 ........................... Passed 1916.37 sec; 413/413 Test #320: sapt4 ............................ Passed 1842.77 sec. 100% tests passed, 0 tests failed out of 413. Label Time Summary:; adc = 73.71 sec*proc (2 tests); autotest = 2032.85 sec*proc (26 tests); cart = 19618.09 sec*proc (123 tests); cas = 54.46 sec*proc (1 test); casscf = 99.80 sec*proc (11 tests); cbs = 2579.77 sec*proc (11 tests); cc = 15643.19 sec*proc (65 tests); cdomp2 = 48.29 sec*proc (2 tests); cepa = 188.77 sec*proc (7 tests); ci = 115.37 sec*proc (8 tests); cisd = 188.24 sec*proc (7 tests); cookbook = 186.42 sec*proc (1 test); cubeprop = 23.39 sec*proc (3 tests); dcft = 5685.84 sec*proc (13 tests); df = 2727.51 sec*proc (38 tests); dfccd = 6.37 sec*proc (1 test); dfccd-grad = 5.73 sec*proc (1 test); dfccdl = 3.74 sec*proc (1 test); dfccsd = 10.80 sec*proc (1 test); dfccsd-grad = 40.30 sec*proc (1 test); dfccsd-t-grad = 74.65 sec*proc (1 test); dfccsdat = 8.87 sec*proc (1 test); dfccsdl = 12.21 sec*proc (1 test); dfccsdt = 11.34 sec*proc (1 test); dfep2 = 6.87 sec*proc (2 tests); dfmp2 = 199.62 sec*proc (11 tests); dfomp2 = 1655.90 sec*proc (7 tests); dfomp2.5 = 243.42 sec*proc (4 tests); dfomp3 = 236.24 sec*proc (4 tests); dfscf = 139.59 sec*proc (1 test); dft = 1445.40 sec*proc (27 tests); docs = 1.15 sec*proc (2 tests); ecp = 69.69 sec*proc (2 tests); fci = 14.10 sec*proc (2 tests); fcidump = 6.47 sec*proc (1 test); findif = 963.69 sec*proc (5 tests); fnocc = 104.66 sec*proc (4 tests); freq = 1101.89 sec*proc (6 tests); gradient = 2501.04 sec*proc (16 tests); json = 21.09 sec*proc (8 tests); longtests = 3526.25 sec*proc (5 tests); mcscf = 8.66 sec*proc (3 tests); minitests = 71.36 sec*proc (4 tests); mints = 90.94 sec*proc (14 tests); misc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:39204,test,test,39204,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['test'],['test']
Testability,Passed 5.81 sec; Start 152: dfomp2p5-grad1; 163/411 Test #152: dfomp2p5-grad1 ................... Passed 3.20 sec; Start 153: dfomp2p5-grad2; 164/411 Test #153: dfomp2p5-grad2 ................... Passed 7.13 sec; Start 154: dfrasscf-sp; 165/411 Test #154: dfrasscf-sp ...................... Passed 2.57 sec; Start 155: dfscf-bz2; 166/411 Test #155: dfscf-bz2 ........................ Passed 120.49 sec; Start 156: dft-b2plyp; 167/411 Test #156: dft-b2plyp ....................... Passed 20.90 sec; Start 157: dft-grac; 168/411 Test #157: dft-grac ......................... Passed 1.62 sec; Start 158: dft-ghost; 169/411 Test #158: dft-ghost ........................ Passed 6.73 sec; Start 159: dft-grad-meta; 170/411 Test #159: dft-grad-meta .................... Passed 45.98 sec; Start 160: dft-grad-lr1; 171/411 Test #160: dft-grad-lr1 ..................... Passed 14.85 sec; Start 161: dft-grad-lr2; 172/411 Test #161: dft-grad-lr2 ..................... Passed 78.85 sec; Start 162: dft-grad-lr3; 173/411 Test #162: dft-grad-lr3 ..................... Passed 375.53 sec; Start 163: dft-freq; 174/411 Test #163: dft-freq ......................... Passed 18.67 sec; Start 164: dft-grad1; 175/411 Test #164: dft-grad1 ........................ Passed 11.76 sec; Start 165: dft-grad2; 176/411 Test #165: dft-grad2 ........................ Passed 15.49 sec; Start 166: dft-psivar; 177/411 Test #166: dft-psivar ....................... Passed 19.01 sec; Start 167: dft-b3lyp; 178/411 Test #167: dft-b3lyp ........................ Passed 58.46 sec; Start 168: dft1; 179/411 Test #168: dft1 ............................. Passed 73.16 sec; Start 169: dft-vv10; 180/411 Test #169: dft-vv10 ......................... Passed 13.33 sec; Start 170: dft1-alt; 181/411 Test #170: dft1-alt ......................... Passed 37.70 sec; Start 171: dft2; 182/411 Test #171: dft2 ............................. Passed 4.57 sec; Start 172: dft3; 183/411 Test #172: dft3 ............................. Passed 16.86 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:15655,Test,Test,15655,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Passed 50.99 sec; Start 147: dfomp3-grad1; 241/401 Test #139: dfomp2-2 ......................... Passed 18.72 sec; Start 149: dfomp2p5-1; 242/401 Test #141: dfomp2-4 ......................... Passed 16.94 sec; Start 150: dfomp2p5-2; 243/401 Test #296: pywrap-all ....................... Passed 503.94 sec; Start 151: dfomp2p5-grad1; 244/401 Test #149: dfomp2p5-1 ....................... Passed 13.22 sec; Start 152: dfomp2p5-grad2; 245/401 Test #147: dfomp3-grad1 ..................... Passed 16.14 sec; Start 154: dfscf-bz2; 246/401 Test #143: dfomp2-grad2 ..................... Passed 36.83 sec; Start 155: dft-b2plyp; 247/401 Test #146: dfomp3-2 ......................... Passed 27.63 sec; Start 156: dft-grac; 248/401 Test #151: dfomp2p5-grad1 ................... Passed 13.12 sec; Start 157: dft-ghost; 249/401 Test #150: dfomp2p5-2 ....................... Passed 24.86 sec; Start 158: dft-grad-meta; 250/401 Test #391: python-vibanalysis ............... Passed 812.21 sec; Start 159: dft-freq; 251/401 Test #156: dft-grac ......................... Passed 1.56 sec; Start 160: dft-grad1; 252/401 Test #157: dft-ghost ........................ Passed 6.04 sec; Start 161: dft-grad2; 253/401 Test #155: dft-b2plyp ....................... Passed 9.05 sec; Start 162: dft-psivar; 254/401 Test #160: dft-grad1 ........................ Passed 9.39 sec; Start 163: dft-b3lyp; 255/401 Test #152: dfomp2p5-grad2 ................... Passed 26.51 sec; Start 164: dft1; 256/401 Test #161: dft-grad2 ........................ Passed 9.14 sec; Start 166: dft1-alt; 257/401 Test #154: dfscf-bz2 ........................ Passed 28.72 sec; Start 167: dft2; 258/401 Test #159: dft-freq ......................... Passed 18.41 sec; Start 168: dft3; 259/401 Test #158: dft-grad-meta .................... Passed 20.68 sec; Start 169: dft-omega; 260/401 Test #167: dft2 ............................. Passed 6.22 sec; Start 170: docs-bases; 261/401 Test #170: docs-bases ....................... Passed 0.64 sec; Start 171,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:23482,Test,Test,23482,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Passed 502.16 sec; Start 51: cc33; 173/415 Test #26: cc13 ............................. Passed 551.27 sec; Start 52: cc34; 174/415 Test #48: cc30 ............................. Passed 124.65 sec; Start 53: cc35; 175/415 Test #51: cc33 ............................. Passed 51.94 sec; Start 54: cc36; 176/415 Test #46: cc29 ............................. Passed 229.97 sec; Start 55: cc37; 177/415 Test #310: pywrap-all ....................... Passed 1341.70 sec; Start 56: cc38; 178/415 Test #52: cc34 ............................. Passed 65.22 sec; Start 57: cc39; 179/415 Test #53: cc35 ............................. Passed 57.53 sec; Start 59: cc40; 180/415 Test #54: cc36 ............................. Passed 50.03 sec; Start 60: cc41; 181/415 Test #55: cc37 ............................. Passed 56.22 sec; Start 61: cc42; 182/415 Test #30: cc13d ............................ Passed 649.16 sec; Start 62: cc43; 183/415 Test #49: cc31 ............................. Passed 213.10 sec; Start 63: cc44; 184/415 Test #56: cc38 ............................. Passed 72.10 sec; Start 64: cc45; 185/415 Test #57: cc39 ............................. Passed 107.55 sec; Start 65: cc46; 186/415 Test #59: cc40 ............................. Passed 107.53 sec; Start 66: cc47; 187/415 Test #64: cc45 ............................. Passed 58.25 sec; Start 67: cc48; 188/415 Test #63: cc44 ............................. Passed 95.62 sec; Start 69: cc4a; 189/415 Test #61: cc42 ............................. Passed 151.08 sec; Start 70: cc50; 190/415 Test #65: cc46 ............................. Passed 89.89 sec; Start 71: cc51; 191/415 Test #67: cc48 ............................. Passed 99.37 sec; Start 72: cc52; 192/415 Test #69: cc4a ............................. Passed 72.06 sec; Start 73: cc53; 193/415 Test #66: cc47 ............................. Passed 115.43 sec; Start 74: cc54; 194/415 Test #60: cc41 ............................. Passed 241.21 sec; Start 75: cc55; 195/415 Test #71: cc51 ...............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:17434,Test,Test,17434,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Passed 51.60 sec; Start 20: cbs-xtpl-wrapper; 18/412 Test #17: cbs-xtpl-opt ..................... Passed 74.20 sec; Start 21: cc1; 19/412 Test #206: frac-traverse .................... Passed 282.86 sec; Start 22: cc10; 20/412 Test #21: cc1 .............................. Passed 20.69 sec; Start 23: cc11; 21/412 Test #13: cbs-xtpl-alpha ................... Passed 156.06 sec; Start 24: cc12; 22/412 Test #24: cc12 ............................. Passed 18.96 sec; Start 25: cc13; 23/412 Test #22: cc10 ............................. Passed 22.32 sec; Start 27: cc13b; 24/412 Test #23: cc11 ............................. Passed 25.37 sec; Start 28: cc13c; 25/412 Test #20: cbs-xtpl-wrapper ................. Passed 66.34 sec; Start 29: cc13d; 26/412 Test #26: cc13a ............................ Passed 329.40 sec; Start 30: cc14; 27/412 Test #27: cc13b ............................ Passed 52.22 sec; Start 31: cc15; 28/412 Test #196: fd-freq-gradient-large ........... Passed 362.66 sec; Start 32: cc16; 29/412 Test #28: cc13c ............................ Passed 57.54 sec; Start 33: cc17; 30/412 Test #114: dcft7 ............................ Passed 366.03 sec; Start 34: cc18; 31/412 Test #34: cc18 ............................. Passed 33.35 sec; Start 35: cc19; 32/412 Test #317: sapt2 ............................ Passed 402.38 sec; Start 36: cc2; 33/412 Test #33: cc17 ............................. Passed 40.14 sec; Start 37: cc21; 34/412 Test #31: cc15 ............................. Passed 90.60 sec; Start 38: cc22; 35/412 Test #35: cc19 ............................. Passed 58.84 sec; Start 39: cc23; 36/412 Test #38: cc22 ............................. Passed 20.81 sec; Start 40: cc24; 37/412 Test #32: cc16 ............................. Passed 133.66 sec; Start 41: cc25; 38/412 Test #183: isapt1 ........................... Passed 511.86 sec; Start 42: cc26; 39/412 Test #30: cc14 ............................. Passed 193.53 sec; Start 43: cc27; 40/412 Test #25: cc13 .........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:3013,Test,Test,3013,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['Test'],['Test']
Testability,Passed 52.13 sec; Start 144: dfomp2-grad1; 206/412 Test #170: dft-vv10 ......................... Passed 47.09 sec; Start 341: soscf-large; 207/412 Test #249: omp2-3 ........................... Passed 37.28 sec; Start 325: sapt8; 208/412 Test #292: psimrcc-fd-freq1 ................. Passed 41.25 sec; Start 239: nbody-intermediates; 209/412 Test #316: sapt1 ............................ Passed 49.94 sec; Start 218: mints6; 210/412 Test #147: dfomp3-1 ......................... Passed 38.24 sec; Start 177: extern1; 211/412 Test #24: cc12 ............................. Passed 40.12 sec; Start 302: pywrap-basis; 212/412 Test #54: cc37 ............................. Passed 39.52 sec; Start 219: mints8; 213/412 Test #200: fnocc1 ........................... Passed 33.21 sec; Start 394: python-3-index-transforms; 214/412 Test #91: cepa1 ............................ Passed 33.96 sec; Start 151: dfomp2p5-1; 215/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 49.99 sec; Start 106: dcft-grad3; 216/412 Test #297: psithon2 ......................... Passed 44.73 sec; Start 165: dft-grad1; 217/412 Test #276: opt9 ............................. Passed 42.06 sec; Start 14: cbs-xtpl-energy; 218/412 Test #139: dfmp2-grad5 ...................... Passed 41.56 sec; Start 370: dft-jk; 219/412 Test #179: fsapt1 ........................... Passed 2034.87 sec; Start 269: opt2-fd; 220/412 Test #144: dfomp2-grad1 ..................... Passed 33.75 sec; Start 102: cubeprop; 221/412 Test #341: soscf-large ...................... Passed 44.46 sec; Start 287: props3; 222/412 Test #325: sapt8 ............................ Passed 41.28 sec; Start 351: dft-custom; 223/412 Test #177: extern1 .......................... Passed 38.65 sec; Start 198: freq-isotope1; 224/412 Test #218: mints6 ........................... Passed 41.21 sec; Start 358: tu4-h2o-freq; 225/412 Test #151: dfomp2p5-1 ....................... Passed 29.55 sec; Start 367: dft-smoke; 226/412 Test #394: python-3-index-transforms ........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:20328,Test,Test,20328,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Passed 52.29 sec; Start 293: psimrcc-pt2; 297/411 Test #293: psimrcc-pt2 ...................... Passed 1.16 sec; Start 294: psimrcc-sp1; 298/411 Test #294: psimrcc-sp1 ...................... Passed 3.52 sec; Start 295: psithon1; 299/411 Test #295: psithon1 ......................... Passed 3.00 sec; Start 296: psithon2; 300/411 Test #296: psithon2 ......................... Passed 9.29 sec; Start 297: pubchem1; 301/411 Test #297: pubchem1 ......................... Passed 40.43 sec; Start 298: pubchem2; 302/411 Test #298: pubchem2 ......................... Passed 2.32 sec; Start 299: pywrap-alias; 303/411 Test #299: pywrap-alias ..................... Passed 18.00 sec; Start 300: pywrap-all; 304/411 Test #300: pywrap-all ....................... Passed 147.28 sec; Start 301: pywrap-basis; 305/411 Test #301: pywrap-basis ..................... Passed 13.12 sec; Start 302: pywrap-cbs1; 306/411 Test #302: pywrap-cbs1 ...................... Passed 36.61 sec; Start 303: pywrap-checkrun-convcrit; 307/411 Test #303: pywrap-checkrun-convcrit ......... Passed 8.53 sec; Start 304: pywrap-checkrun-rhf; 308/411 Test #304: pywrap-checkrun-rhf .............. Passed 92.91 sec; Start 305: pywrap-checkrun-rohf; 309/411 Test #305: pywrap-checkrun-rohf ............. Passed 31.27 sec; Start 306: pywrap-checkrun-uhf; 310/411 Test #306: pywrap-checkrun-uhf .............. Passed 63.05 sec; Start 307: pywrap-db1; 311/411 Test #307: pywrap-db1 ....................... Passed 33.95 sec; Start 308: pywrap-db3; 312/411 Test #308: pywrap-db3 ....................... Passed 0.80 sec; Start 309: pywrap-molecule; 313/411 Test #309: pywrap-molecule .................. Passed 1.17 sec; Start 310: rasci-c2-active; 314/411 Test #310: rasci-c2-active .................. Passed 3.43 sec; Start 311: rasci-h2o; 315/411 Test #311: rasci-h2o ........................ Passed 1.02 sec; Start 312: rasci-ne; 316/411 Test #312: rasci-ne ......................... Passed 26.87 sec; Start 313: rasscf-sp; 317/411 Test #313: ra,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:28130,Test,Test,28130,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Passed 528.32 sec; Start 291: psimrcc-ccsd_t-4; 280/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 2.46 sec; Start 292: psimrcc-fd-freq1; 281/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 2.47 sec; Start 293: psimrcc-fd-freq2; 282/412 Test #283: opt-irc-3 ........................ Passed 23.60 sec; Start 294: psimrcc-pt2; 283/412 Test #286: props2 ........................... Passed 14.68 sec; Start 295: psimrcc-sp1; 284/412 Test #294: psimrcc-pt2 ...................... Passed 3.00 sec; Start 296: psithon1; 285/412 Test #287: props3 ........................... Passed 14.21 sec; Start 297: psithon2; 286/412 Test #295: psimrcc-sp1 ...................... Passed 4.74 sec; Start 298: pubchem1; 287/412 Test #292: psimrcc-fd-freq1 ................. Passed 15.35 sec; Start 299: pubchem2; 288/412 Test #296: psithon1 ......................... Passed 6.52 sec; Start 300: pywrap-alias; 289/412 Test #299: pubchem2 ......................... Passed 1.64 sec; Start 301: pywrap-all; 290/412 Test #104: dcft-grad1 ....................... Passed 565.91 sec; Start 302: pywrap-basis; 291/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 19.79 sec; Start 303: pywrap-cbs1; 292/412 Test #277: opt11 ............................ Passed 48.39 sec; Start 304: pywrap-checkrun-convcrit; 293/412 Test #297: psithon2 ......................... Passed 19.54 sec; Start 305: pywrap-checkrun-rhf; 294/412 Test #302: pywrap-basis ..................... Passed 16.55 sec; Start 306: pywrap-checkrun-rohf; 295/412 Test #304: pywrap-checkrun-convcrit ......... Passed 23.87 sec; Start 307: pywrap-checkrun-uhf; 296/412 Test #280: opt14 ............................ Passed 82.11 sec; Start 308: pywrap-db1; 297/412 Test #281: opt-irc-1 ........................ Passed 83.62 sec; Start 309: pywrap-db3; 298/412 Test #300: pywrap-alias ..................... Passed 50.64 sec; Start 310: pywrap-molecule; 299/412 Test #309: pywrap-db3 ....................... Passed 0.91 sec; Start 311: rasci-c2-act,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:26999,Test,Test,26999,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['Test'],['Test']
Testability,Passed 54.76 sec; Start 147: dfomp3-2; 151/411 Test #146: dfomp3-1 ......................... Passed 28.44 sec; Start 148: dfomp3-grad1; 152/411 Test #111: dcft5 ............................ Passed 344.26 sec; Start 149: dfomp3-grad2; 153/411 Test #144: dfomp2-grad2 ..................... Passed 90.58 sec; Start 150: dfomp2p5-1; 154/411 Test #148: dfomp3-grad1 ..................... Passed 33.72 sec; Start 151: dfomp2p5-2; 155/411 Test #147: dfomp3-2 ......................... Passed 64.88 sec; Start 152: dfomp2p5-grad1; 156/411 Test #150: dfomp2p5-1 ....................... Passed 12.61 sec; Start 153: dfomp2p5-grad2; 157/411 Test #114: dcft8 ............................ Passed 377.89 sec; Start 154: dfrasscf-sp; 158/411 Test #154: dfrasscf-sp ...................... Passed 6.23 sec; Start 155: dfscf-bz2; 159/411 Test #152: dfomp2p5-grad1 ................... Passed 27.84 sec; Start 156: dft-b2plyp; 160/411 Test #149: dfomp3-grad2 ..................... Passed 67.41 sec; Start 157: dft-grac; 161/411 Test #157: dft-grac ......................... Passed 2.20 sec; Start 158: dft-ghost; 162/411 Test #151: dfomp2p5-2 ....................... Passed 48.04 sec; Start 159: dft-grad-meta; 163/411 Test #158: dft-ghost ........................ Passed 8.33 sec; Start 160: dft-grad-lr1; 164/411 Test #156: dft-b2plyp ....................... Passed 28.62 sec; Start 161: dft-grad-lr2; 165/411 Test #160: dft-grad-lr1 ..................... Passed 17.17 sec; Start 162: dft-grad-lr3; 166/411 Test #153: dfomp2p5-grad2 ................... Passed 70.41 sec; Start 163: dft-freq; 167/411 Test #163: dft-freq ......................... Passed 21.07 sec; Start 164: dft-grad1; 168/411 Test #159: dft-grad-meta .................... Passed 53.79 sec; Start 165: dft-grad2; 169/411 Test #164: dft-grad1 ........................ Passed 16.89 sec; Start 166: dft-psivar; 170/411 Test #165: dft-grad2 ........................ Passed 17.83 sec; Start 167: dft-b3lyp; 171/411 Test #166: dft-psivar ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:14812,Test,Test,14812,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Passed 55.01 sec; Start 293: psimrcc-pt2; 297/411 Test #293: psimrcc-pt2 ...................... Passed 1.08 sec; Start 294: psimrcc-sp1; 298/411 Test #294: psimrcc-sp1 ...................... Passed 3.94 sec; Start 295: psithon1; 299/411 Test #295: psithon1 ......................... Passed 2.94 sec; Start 296: psithon2; 300/411 Test #296: psithon2 ......................... Passed 10.78 sec; Start 297: pubchem1; 301/411 Test #297: pubchem1 ......................... Passed 48.73 sec; Start 298: pubchem2; 302/411 Test #298: pubchem2 ......................... Passed 1.60 sec; Start 299: pywrap-alias; 303/411 Test #299: pywrap-alias ..................... Passed 15.84 sec; Start 300: pywrap-all; 304/411 Test #300: pywrap-all ....................... Passed 79.35 sec; Start 301: pywrap-basis; 305/411 Test #301: pywrap-basis ..................... Passed 11.71 sec; Start 302: pywrap-cbs1; 306/411 Test #302: pywrap-cbs1 ...................... Passed 17.97 sec; Start 303: pywrap-checkrun-convcrit; 307/411 Test #303: pywrap-checkrun-convcrit ......... Passed 10.43 sec; Start 304: pywrap-checkrun-rhf; 308/411 Test #304: pywrap-checkrun-rhf .............. Passed 75.20 sec; Start 305: pywrap-checkrun-rohf; 309/411 Test #305: pywrap-checkrun-rohf ............. Passed 34.14 sec; Start 306: pywrap-checkrun-uhf; 310/411 Test #306: pywrap-checkrun-uhf .............. Passed 58.34 sec; Start 307: pywrap-db1; 311/411 Test #307: pywrap-db1 ....................... Passed 35.25 sec; Start 308: pywrap-db3; 312/411 Test #308: pywrap-db3 ....................... Passed 0.80 sec; Start 309: pywrap-molecule; 313/411 Test #309: pywrap-molecule .................. Passed 1.23 sec; Start 310: rasci-c2-active; 314/411 Test #310: rasci-c2-active .................. Passed 3.35 sec; Start 311: rasci-h2o; 315/411 Test #311: rasci-h2o ........................ Passed 1.15 sec; Start 312: rasci-ne; 316/411 Test #312: rasci-ne ......................... Passed 30.80 sec; Start 313: rasscf-sp; 317/411 Test #313: r,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:28158,Test,Test,28158,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Passed 571.32 sec; Start 42: cc27; 14/411 Test #394: python-vibanalysis ............... Passed 966.42 sec; Start 76: cc7; 15/411 Test #40: cc25 ............................. Passed 480.63 sec; Start 18: cbs-xtpl-func; 16/411 Test #36: cc21 ............................. Passed 484.30 sec; Start 181: fsapt-allterms; 17/411 Test #38: cc23 ............................. Passed 495.58 sec; Start 193: fd-freq-energy-large; 18/411 Test #42: cc27 ............................. Passed 441.98 sec; Start 195: fd-freq-gradient-large; 19/411 Test #76: cc7 .............................. Passed 452.44 sec; Start 278: opt13; 20/411 Test #305: pywrap-checkrun-rohf ............. Passed 627.45 sec; Start 111: dcft5; 21/411 Test #110: dcft4 ............................ Passed 890.57 sec; Start 145: dfomp2-grad3; 22/411 Test #195: fd-freq-gradient-large ........... Passed 305.38 sec; Start 240: ocepa-freq1; 23/411 Test #111: dcft5 ............................ Passed 303.53 sec; Start 373: dft-custom-mgga; 24/411 Test #193: fd-freq-energy-large ............. Passed 541.73 sec; Start 112: dcft6; 25/411 Test #373: dft-custom-mgga .................. Passed 188.78 sec; Start 114: dcft8; 26/411 Test #181: fsapt-allterms ................... Passed 611.68 sec; Start 359: tu6-cp-ne2; 27/411 Test #178: fsapt1 ........................... Passed 2082.73 sec; Start 29: cc14; 28/411 Test #112: dcft6 ............................ Passed 211.14 sec; Start 320: sapt6; 29/411 Test #240: ocepa-freq1 ...................... Passed 484.94 sec; Start 155: dfscf-bz2; 30/411 Test #278: opt13 ............................ Passed 786.51 sec; Start 97: cisd-opt-fd; 31/411 Test #145: dfomp2-grad3 ..................... Passed 797.94 sec; Start 183: isapt2; 32/411 Test #320: sapt6 ............................ Passed 170.76 sec; Start 379: cc-module; 33/411 Test #155: dfscf-bz2 ........................ Passed 133.50 sec; Start 13: cbs-xtpl-alpha; 34/411 Test #359: tu6-cp-ne2 ....................... Passed 352.85 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:2461,Test,Test,2461,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Passed 6.30 sec; Start 219: mints6; 254/413 Test #245: ocepa1 ........................... Passed 10.75 sec; Start 352: dft-custom; 255/413 Test #387: psi4numpy-fci .................... Passed 6.20 sec; Start 340: scf7; 256/413 Test #303: pywrap-basis ..................... Passed 17.31 sec; Start 411: skeletonscf; 257/413 Test #91: cepa1 ............................ Passed 26.82 sec; Start 367: cubeprop-esp; 258/413 Test #411: skeletonscf ...................... Passed 0.81 sec; Start 14: cbs-xtpl-energy; 259/413 Test #26: cc13a ............................ Passed 588.97 sec; Start 288: props3; 260/413 Test #10: castup3 .......................... Passed 15.65 sec; Start 270: opt2-fd; 261/413 Test #342: soscf-large ...................... Passed 14.42 sec; Start 412: skeletonsointegrals; 262/413 Test #412: skeletonsointegrals .............. Passed 1.81 sec; Start 413: skeletonwavefunction; 263/413 Test #368: dft-smoke ........................ Passed 16.06 sec; Start 359: tu4-h2o-freq; 264/413 Test #413: skeletonwavefunction ............. Passed 1.56 sec; Start 7: casscf-sp; 265/413 Test #326: sapt8 ............................ Passed 15.51 sec; Start 374: dft-custom-hybrid; 266/413 Test #293: psimrcc-fd-freq1 ................. Passed 18.54 sec; Start 337: scf4; 267/413 Test #219: mints6 ........................... Passed 13.03 sec; Start 386: psi4numpy-rhf-hessian; 268/413 Test #367: cubeprop-esp ..................... Passed 9.70 sec; Start 287: props2; 269/413 Test #270: opt2-fd .......................... Passed 9.87 sec; Start 371: dft-jk; 270/413 Test #340: scf7 ............................. Passed 13.04 sec; Start 362: x2c1; 271/413 Test #352: dft-custom ....................... Passed 15.15 sec; Start 89: cepa2; 272/413 Test #386: psi4numpy-rhf-hessian ............ Passed 3.15 sec; Start 383: psi4numpy-dfmp2; 273/413 Test #14: cbs-xtpl-energy .................. Passed 12.31 sec; Start 125: dfccsd1; 274/413 Test #383: psi4numpy-dfmp2 .................. Passed 1.89 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:24941,Test,Test,24941,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Passed 6.58 sec; Start 417: scf-level-shift-cuhf; 123/185 Test #417: scf-level-shift-cuhf ............. Passed 2.94 sec; Start 418: scf-level-shift-rohf; 124/185 Test #418: scf-level-shift-rohf ............. Passed 2.63 sec; Start 419: scf-property; 125/185 Test #419: scf-property ..................... Passed 8.65 sec; Start 420: soscf-large; 126/185 Test #420: soscf-large ...................... Passed 42.04 sec; Start 423: stability1; 127/185 Test #423: stability1 ....................... Passed 4.41 sec; Start 424: dfep2-1; 128/185 Test #424: dfep2-1 .......................... Passed 5.74 sec; Start 425: dfep2-2; 129/185 Test #425: dfep2-2 .......................... Passed 5.25 sec; Start 426: sapt-dft1; 130/185 Test #426: sapt-dft1 ........................ Passed 952.16 sec; Start 428: sapt-compare; 131/185 Test #428: sapt-compare ..................... Passed 74.02 sec; Start 429: sapt-sf1; 132/185 Test #429: sapt-sf1 ......................... Passed 2.74 sec; Start 432: stability2; 133/185 Test #432: stability2 ....................... Passed 2.32 sec; Start 433: stability3; 134/185 Test #433: stability3 ....................... Passed 7.49 sec; Start 434: tu1-h2o-energy; 135/185 Test #434: tu1-h2o-energy ................... Passed 2.56 sec; Start 435: tu2-ch2-energy; 136/185 Test #435: tu2-ch2-energy ................... Passed 2.67 sec; Start 436: tu3-h2o-opt; 137/185 Test #436: tu3-h2o-opt ...................... Passed 5.54 sec; Start 437: scf-response1; 138/185 Test #437: scf-response1 .................... Passed 3.56 sec; Start 438: scf-response2; 139/185 Test #438: scf-response2 .................... Passed 15.29 sec; Start 439: scf-response3; 140/185 Test #439: scf-response3 .................... Passed 3.31 sec; Start 440: scf-cholesky-basis; 141/185 Test #440: scf-cholesky-basis ............... Passed 1123.82 sec; Start 442: tu4-h2o-freq; 142/185 Test #442: tu4-h2o-freq ..................... Passed 13.30 sec; Start 445: x2c1; 143/185 Test #445: x2c1 .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:12392,Test,Test,12392,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930,1,['Test'],['Test']
Testability,Passed 6.97 sec; Start 187: fci-h2o-fzcv; 188/411 Test #186: fci-h2o-2 ........................ Passed 6.73 sec; Start 188: fci-tdm; 189/411 Test #187: fci-h2o-fzcv ..................... Passed 6.96 sec; Start 189: fci-tdm-2; 190/411 Test #168: dft1 ............................. Passed 110.06 sec; Start 190: fci-coverage; 191/411 Test #188: fci-tdm .......................... Passed 4.23 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 9.92 sec; Start 192: fd-freq-energy; 193/411 Test #190: fci-coverage ..................... Passed 13.34 sec; Start 194: fd-freq-gradient; 194/411 Test #189: fci-tdm-2 ........................ Passed 21.83 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 11.83 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 29.49 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 22.34 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 8.47 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 43.09 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 25.22 sec; Start 202: fnocc4; 201/411 Test #201: fnocc3 ........................... Passed 21.28 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 6.10 sec; Start 204: frac-ip-fitting; 203/411 Test #103: dcft-grad1 ....................... Passed 953.45 sec; Start 206: ghosts; 204/411 Test #202: fnocc4 ........................... Passed 27.78 sec; Start 207: gibbs; 205/411 Test #183: isapt2 ........................... Passed 127.46 sec; Start 208: matrix1; 206/411 Test #208: matrix1 .......................... Passed 0.55 sec; Start 209: mcscf1; 207/411 Test #209: mcscf1 ........................... Passed 0.98 sec; Start 210: mcscf2; 208/411 Test #200: fnocc2 ........................... Passed 53.28 sec; Start 211: mcscf3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:18290,Test,Test,18290,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Passed 60.60 sec; Start 76: cc7; 73/411 Test #58: cc41 ............................. Passed 66.26 sec; Start 77: cc8; 74/411 Test #68: cc50 ............................. Passed 36.06 sec; Start 78: cc8a; 75/411 Test #71: cc53 ............................. Passed 21.21 sec; Start 79: cc8b; 76/411 Test #72: cc54 ............................. Passed 14.16 sec; Start 80: cc8c; 77/411 Test #73: cc55 ............................. Passed 23.65 sec; Start 81: cc9; 78/411 Test #77: cc8 .............................. Passed 26.58 sec; Start 82: cc9a; 79/411 Test #78: cc8a ............................. Passed 29.41 sec; Start 83: cdomp2-1; 80/411 Test #80: cc8c ............................. Passed 28.81 sec; Start 84: cdomp2-2; 81/411 Test #79: cc8b ............................. Passed 31.14 sec; Start 85: cepa0-grad1; 82/411 Test #69: cc51 ............................. Passed 65.47 sec; Start 86: cepa0-grad2; 83/411 Test #85: cepa0-grad1 ...................... Passed 8.15 sec; Start 87: cepa1; 84/411 Test #83: cdomp2-1 ......................... Passed 13.54 sec; Start 88: cepa2; 85/411 Test #86: cepa0-grad2 ...................... Passed 11.63 sec; Start 89: cepa3; 86/411 Test #74: cc5a ............................. Passed 69.92 sec; Start 90: cepa1; 87/411 Test #87: cepa1 ............................ Passed 20.52 sec; Start 91: cepa-module; 88/411 Test #88: cepa2 ............................ Passed 20.34 sec; Start 92: ci-multi; 89/411 Test #75: cc6 .............................. Passed 78.50 sec; Start 93: cisd-h2o+-0; 90/411 Test #81: cc9 .............................. Passed 59.24 sec; Start 94: cisd-h2o+-1; 91/411 Test #89: cepa3 ............................ Passed 25.08 sec; Start 95: cisd-h2o+-2; 92/411 Test #93: cisd-h2o+-0 ...................... Passed 7.16 sec; Start 96: cisd-h2o-clpse; 93/411 Test #94: cisd-h2o+-1 ...................... Passed 6.09 sec; Start 97: cisd-opt-fd; 94/411 Test #96: cisd-h2o-clpse ................... Passed 5.20 sec; Start 98: cisd-sp; 95/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:7767,Test,Test,7767,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,Passed 7.14 sec; Start 152: dfomp2p5-grad1; 163/411 Test #152: dfomp2p5-grad1 ................... Passed 3.91 sec; Start 153: dfomp2p5-grad2; 164/411 Test #153: dfomp2p5-grad2 ................... Passed 9.31 sec; Start 154: dfrasscf-sp; 165/411 Test #154: dfrasscf-sp ...................... Passed 2.61 sec; Start 155: dfscf-bz2; 166/411 Test #155: dfscf-bz2 ........................ Passed 139.95 sec; Start 156: dft-b2plyp; 167/411 Test #156: dft-b2plyp ....................... Passed 23.19 sec; Start 157: dft-grac; 168/411 Test #157: dft-grac ......................... Passed 1.60 sec; Start 158: dft-ghost; 169/411 Test #158: dft-ghost ........................ Passed 7.00 sec; Start 159: dft-grad-meta; 170/411 Test #159: dft-grad-meta .................... Passed 45.71 sec; Start 160: dft-grad-lr1; 171/411 Test #160: dft-grad-lr1 ..................... Passed 17.02 sec; Start 161: dft-grad-lr2; 172/411 Test #161: dft-grad-lr2 ..................... Passed 87.90 sec; Start 162: dft-grad-lr3; 173/411 Test #162: dft-grad-lr3 ..................... Passed 414.30 sec; Start 163: dft-freq; 174/411 Test #163: dft-freq ......................... Passed 19.28 sec; Start 164: dft-grad1; 175/411 Test #164: dft-grad1 ........................ Passed 12.15 sec; Start 165: dft-grad2; 176/411 Test #165: dft-grad2 ........................ Passed 16.46 sec; Start 166: dft-psivar; 177/411 Test #166: dft-psivar ....................... Passed 21.64 sec; Start 167: dft-b3lyp; 178/411 Test #167: dft-b3lyp ........................ Passed 60.98 sec; Start 168: dft1; 179/411 Test #168: dft1 ............................. Passed 80.23 sec; Start 169: dft-vv10; 180/411 Test #169: dft-vv10 ......................... Passed 13.15 sec; Start 170: dft1-alt; 181/411 Test #170: dft1-alt ......................... Passed 41.39 sec; Start 171: dft2; 182/411 Test #171: dft2 ............................. Passed 4.80 sec; Start 172: dft3; 183/411 Test #172: dft3 ............................. Passed 17.51 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:15682,Test,Test,15682,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,"Passed 7.42 sec; 411/413 Test #9: castup2 .......................... Passed 9.37 sec; 412/413 Test #18: cbs-xtpl-func .................... Passed 1715.47 sec; 413/413 Test #320: sapt4 ............................ Passed 1667.29 sec. 100% tests passed, 0 tests failed out of 413. Label Time Summary:; adc = 63.93 sec*proc (2 tests); autotest = 2243.46 sec*proc (26 tests); cart = 19628.65 sec*proc (123 tests); cas = 55.52 sec*proc (1 test); casscf = 136.00 sec*proc (11 tests); cbs = 2995.42 sec*proc (11 tests); cc = 16264.56 sec*proc (65 tests); cdomp2 = 44.95 sec*proc (2 tests); cepa = 273.82 sec*proc (7 tests); ci = 112.43 sec*proc (8 tests); cisd = 194.15 sec*proc (7 tests); cookbook = 255.11 sec*proc (1 test); cubeprop = 22.22 sec*proc (3 tests); dcft = 5487.46 sec*proc (13 tests); df = 2798.80 sec*proc (38 tests); dfccd = 3.58 sec*proc (1 test); dfccd-grad = 19.08 sec*proc (1 test); dfccdl = 3.82 sec*proc (1 test); dfccsd = 9.09 sec*proc (1 test); dfccsd-grad = 37.30 sec*proc (1 test); dfccsd-t-grad = 69.23 sec*proc (1 test); dfccsdat = 40.48 sec*proc (1 test); dfccsdl = 16.34 sec*proc (1 test); dfccsdt = 13.79 sec*proc (1 test); dfep2 = 6.01 sec*proc (2 tests); dfmp2 = 180.70 sec*proc (11 tests); dfomp2 = 1691.18 sec*proc (7 tests); dfomp2.5 = 230.29 sec*proc (4 tests); dfomp3 = 245.73 sec*proc (4 tests); dfscf = 131.53 sec*proc (1 test); dft = 1423.44 sec*proc (27 tests); docs = 1.42 sec*proc (2 tests); ecp = 65.92 sec*proc (2 tests); fci = 13.01 sec*proc (2 tests); fcidump = 6.38 sec*proc (1 test); findif = 982.46 sec*proc (5 tests); fnocc = 160.78 sec*proc (4 tests); freq = 1352.76 sec*proc (6 tests); gradient = 2515.20 sec*proc (16 tests); json = 21.65 sec*proc (8 tests); longtests = 3280.68 sec*proc (5 tests); mcscf = 4.01 sec*proc (3 tests); minitests = 69.17 sec*proc (4 tests); mints = 90.89 sec*proc (14 tests); misc = 524.24 sec*proc (16 tests); mp2 = 563.20 sec*proc (13 tests); nbody = 86.98 sec*proc (2 tests); numpy = 0.85 sec*proc (1 test); ocepa = 972.1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:39357,test,test,39357,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['test'],['test']
Testability,Passed 7.57 sec; Start 335: scf4; 235/411 Test #217: mints6 ........................... Passed 12.57 sec; Start 393: python-3-index-transforms; 236/411 Test #23: cc12 ............................. Passed 5.39 sec; Start 268: opt2-fd; 237/411 Test #285: props2 ........................... Passed 11.53 sec; Start 15: cbs-xtpl-freq; 238/411 Test #176: extern1 .......................... Passed 11.26 sec; Start 341: soscf-ref; 239/411 Test #335: scf4 ............................. Passed 7.01 sec; Start 372: dft-custom-hybrid; 240/411 Test #369: dft-jk ........................... Passed 10.10 sec; Start 291: psimrcc-fd-freq1; 241/411 Test #101: cubeprop ......................... Passed 10.86 sec; Start 197: freq-isotope1; 242/411 Test #15: cbs-xtpl-freq .................... Passed 5.84 sec; Start 124: dfccsdl1; 243/411 Test #341: soscf-ref ........................ Passed 5.62 sec; Start 201: fnocc3; 244/411 Test #393: python-3-index-transforms ........ Passed 10.01 sec; Start 365: cubeprop-esp; 245/411 Test #268: opt2-fd .......................... Passed 8.69 sec; Start 180: fsapt-terms; 246/411 Test #124: dfccsdl1 ......................... Passed 2.51 sec; Start 10: castup3; 247/411 Test #372: dft-custom-hybrid ................ Passed 9.23 sec; Start 88: cepa2; 248/411 Test #201: fnocc3 ........................... Passed 7.24 sec; Start 266: opt1-fd; 249/411 Test #88: cepa2 ............................ Passed 2.56 sec; Start 132: dfmp2-4; 250/411 Test #10: castup3 .......................... Passed 6.02 sec; Start 247: omp2-2; 251/411 Test #197: freq-isotope1 .................... Passed 9.03 sec; Start 137: dfmp2-grad4; 252/411 Test #291: psimrcc-fd-freq1 ................. Passed 11.03 sec; Start 150: dfomp2p5-1; 253/411 Test #365: cubeprop-esp ..................... Passed 8.78 sec; Start 270: opt4; 254/411 Test #180: fsapt-terms ...................... Passed 8.64 sec; Start 367: scf-hess1; 255/411 Test #137: dfmp2-grad4 ...................... Passed 4.16 sec; Start 310: ra,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:22812,Test,Test,22812,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Passed 7.67 sec; Start 94: cisd-h2o+-0; 288/413 Test #337: scf4 ............................. Passed 10.51 sec; Start 255: omp2p5-1; 289/413 Test #410: skeletonmointegrals .............. Passed 4.02 sec; Start 95: cisd-h2o+-1; 290/413 Test #404: json-schema-1-throws ............. Passed 4.12 sec; Start 188: fci-h2o-2; 291/413 Test #100: cisd-sp-2 ........................ Passed 7.28 sec; Start 192: fci-coverage; 292/413 Test #234: mp2p5-grad2 ...................... Passed 8.43 sec; Start 412: skeletonsointegrals; 293/413 Test #99: cisd-sp .......................... Passed 11.91 sec; Start 411: skeletonscf; 294/413 Test #411: skeletonscf ...................... Passed 0.70 sec; Start 386: psi4numpy-rhf-hessian; 295/413 Test #94: cisd-h2o+-0 ...................... Passed 7.42 sec; Start 231: mp2-grad2; 296/413 Test #96: cisd-h2o+-2 ...................... Passed 8.19 sec; Start 296: psimrcc-sp1; 297/413 Test #253: omp2-grad1 ....................... Passed 8.93 sec; Start 189: fci-h2o-fzcv; 298/413 Test #95: cisd-h2o+-1 ...................... Passed 5.65 sec; Start 413: skeletonwavefunction; 299/413 Test #255: omp2p5-1 ......................... Passed 6.73 sec; Start 182: fsapt-terms; 300/413 Test #297: psithon1 ......................... Passed 11.65 sec; Start 372: scf-coverage; 301/413 Test #412: skeletonsointegrals .............. Passed 1.54 sec; Start 187: fci-h2o; 302/413 Test #257: omp2p5-grad1 ..................... Passed 8.38 sec; Start 137: dfmp2-grad2; 303/413 Test #413: skeletonwavefunction ............. Passed 1.27 sec; Start 15: cbs-xtpl-freq; 304/413 Test #188: fci-h2o-2 ........................ Passed 6.89 sec; Start 186: fci-dipole; 305/413 Test #134: dfmp2-4 .......................... Passed 12.52 sec; Start 264: omp3-grad1; 306/413 Test #343: soscf-ref ........................ Passed 13.56 sec; Start 383: psi4numpy-dfmp2; 307/413 Test #192: fci-coverage ..................... Passed 4.23 sec; Start 205: frac; 308/413 Test #386: psi4numpy-rhf-hessian ....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:28094,Test,Test,28094,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Passed 7.84 sec; Start 145: dfomp2-grad2; 141/412 Test #132: dfmp2-3 .......................... Passed 41.97 sec; Start 146: dfomp2-grad3; 142/412 Test #98: cisd-opt-fd ...................... Passed 146.46 sec; Start 147: dfomp3-1; 143/412 Test #139: dfmp2-grad5 ...................... Passed 19.74 sec; Start 148: dfomp3-2; 144/412 Test #144: dfomp2-grad1 ..................... Passed 12.74 sec; Start 149: dfomp3-grad1; 145/412 Test #134: dfmp2-ecp ........................ Passed 36.62 sec; Start 150: dfomp3-grad2; 146/412 Test #147: dfomp3-1 ......................... Passed 27.58 sec; Start 151: dfomp2p5-1; 147/412 Test #143: dfomp2-4 ......................... Passed 41.02 sec; Start 152: dfomp2p5-2; 148/412 Test #141: dfomp2-2 ......................... Passed 50.27 sec; Start 153: dfomp2p5-grad1; 149/412 Test #149: dfomp3-grad1 ..................... Passed 34.40 sec; Start 154: dft-grad-lr1; 150/412 Test #151: dfomp2p5-1 ....................... Passed 16.72 sec; Start 155: dft-grad-lr2; 151/412 Test #148: dfomp3-2 ......................... Passed 53.56 sec; Start 156: dft-grad-lr3; 152/412 Test #154: dft-grad-lr1 ..................... Passed 17.00 sec; Start 157: dfomp2p5-grad2; 153/412 Test #153: dfomp2p5-grad1 ................... Passed 28.43 sec; Start 158: dfrasscf-sp; 154/412 Test #145: dfomp2-grad2 ..................... Passed 74.85 sec; Start 159: dfscf-bz2; 155/412 Test #158: dfrasscf-sp ...................... Passed 6.34 sec; Start 160: dft-b2plyp; 156/412 Test #113: dcft6 ............................ Passed 187.84 sec; Start 161: dft-grac; 157/412 Test #150: dfomp3-grad2 ..................... Passed 67.87 sec; Start 162: dft-ghost; 158/412 Test #152: dfomp2p5-2 ....................... Passed 44.66 sec; Start 163: dft-grad-meta; 159/412 Test #161: dft-grac ......................... Passed 2.79 sec; Start 164: dft-freq; 160/412 Test #162: dft-ghost ........................ Passed 8.29 sec; Start 165: dft-grad1; 161/412 Test #160: dft-b2plyp .................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:14032,Test,Test,14032,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['Test'],['Test']
Testability,"Passed 705.00 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 72.03 sec*proc (2 tests); autotest = 2537.36 sec*proc (26 tests); cart = 17832.09 sec*proc (123 tests); cas = 68.01 sec*proc (1 test); casscf = 156.98 sec*proc (11 tests); cbs = 1831.60 sec*proc (10 tests); cc = 12496.28 sec*proc (65 tests); cdomp2 = 106.87 sec*proc (2 tests); cepa = 243.33 sec*proc (7 tests); ci = 133.10 sec*proc (8 tests); cisd = 184.25 sec*proc (7 tests); cookbook = 141.29 sec*proc (1 test); cubeprop = 20.11 sec*proc (2 tests); dcft = 3750.01 sec*proc (13 tests); df = 2431.94 sec*proc (38 tests); dfccd = 8.06 sec*proc (1 test); dfccd-grad = 19.49 sec*proc (1 test); dfccdl = 3.04 sec*proc (1 test); dfccsd = 12.67 sec*proc (1 test); dfccsd-grad = 39.99 sec*proc (1 test); dfccsd-t-grad = 42.35 sec*proc (1 test); dfccsdat = 22.07 sec*proc (1 test); dfccsdl = 9.05 sec*proc (1 test); dfccsdt = 17.08 sec*proc (1 test); dfep2 = 5.59 sec*proc (2 tests); dfmp2 = 147.21 sec*proc (11 tests); dfomp2 = 1172.65 sec*proc (7 tests); dfomp2.5 = 283.65 sec*proc (4 tests); dfomp3 = 415.41 sec*proc (4 tests); dfscf = 140.29 sec*proc (1 test); dft = 1425.69 sec*proc (27 tests); docs = 1.11 sec*proc (2 tests); ecp = 48.02 sec*proc (2 tests); fci = 13.69 sec*proc (2 tests); fcidump = 9.92 sec*proc (1 test); findif = 1028.69 sec*proc (5 tests); fnocc = 127.56 sec*proc (4 tests); freq = 948.13 sec*proc (6 tests); gradient = 1779.53 sec*proc (16 tests); json = 17.46 sec*proc (8 tests); longtests = 3834.48 sec*proc (5 tests); mcscf = 3.79 sec*proc (3 tests); minitests = 61.64 sec*proc (4 tests); mints = 85.73 sec*proc (14 tests); misc = 534.44 sec*proc (16 tests); mp2 = 586.32 sec*proc (13 tests); nbody = 77.27 sec*proc (2 tests); numpy = 0.70 sec*proc (1 test); ocepa = 728.64 sec*proc (6 tests); omp = 699.16 sec*proc (18 tests); opt = 1654.95 sec*proc (21 tests); plug = 11.11 sec*proc (7 tests); prop = 3.65 sec*proc (1 test); properties = 169.41 sec*proc (10 tests); psi = 39909.99 s",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:39373,test,tests,39373,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['test'],['tests']
Testability,Passed 72.06 sec; Start 73: cc53; 193/415 Test #66: cc47 ............................. Passed 115.43 sec; Start 74: cc54; 194/415 Test #60: cc41 ............................. Passed 241.21 sec; Start 75: cc55; 195/415 Test #71: cc51 ............................. Passed 73.06 sec; Start 76: cc5a; 196/415 Test #62: cc43 ............................. Passed 220.90 sec; Start 77: cc6; 197/415 Test #70: cc50 ............................. Passed 88.50 sec; Start 78: cc7; 198/415 Test #74: cc54 ............................. Passed 56.61 sec; Start 80: cc8a; 199/415 Test #73: cc53 ............................. Passed 80.24 sec; Start 81: cc8b; 200/415 Test #37: cc2 .............................. Passed 849.66 sec; Start 82: cc8c; 201/415 Test #75: cc55 ............................. Passed 83.89 sec; Start 83: cc9; 202/415 Test #76: cc5a ............................. Passed 100.73 sec; Start 84: cc9a; 203/415 Test #77: cc6 .............................. Passed 96.97 sec; Start 87: cepa0-grad1; 204/415 Test #87: cepa0-grad1 ...................... Passed 8.75 sec; Start 88: cepa0-grad2; 205/415 Test #80: cc8a ............................. Passed 94.97 sec; Start 89: cepa1; 206/415 Test #88: cepa0-grad2 ...................... Passed 12.74 sec; Start 90: cepa2; 207/415 Test #82: cc8c ............................. Passed 87.81 sec; Start 91: cepa3; 208/415 Test #72: cc52 ............................. Passed 189.42 sec; Start 92: cepa1; 209/415 Test #89: cepa1 ............................ Passed 25.08 sec; Start 93: cepa-module; 210/415 Test #90: cepa2 ............................ Passed 27.41 sec; Start 96: cisd-h2o+-1; 211/415 Test #96: cisd-h2o+-1 ...................... Passed 4.67 sec; Start 97: cisd-h2o+-2; 212/415 Test #97: cisd-h2o+-2 ...................... Passed 5.63 sec; Start 98: cisd-h2o-clpse; 213/415 Test #98: cisd-h2o-clpse ................... Passed 3.62 sec; Start 99: cisd-opt-fd; 214/415 Test #91: cepa3 ............................ Passed 37.20 sec; Start 100: ci,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:19186,Test,Test,19186,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Passed 73.82 sec; Start 76: cc7; 73/411 Test #66: cc49 ............................. Passed 37.20 sec; Start 77: cc8; 74/411 Test #72: cc54 ............................. Passed 16.86 sec; Start 78: cc8a; 75/411 Test #68: cc50 ............................. Passed 32.86 sec; Start 79: cc8b; 76/411 Test #71: cc53 ............................. Passed 26.63 sec; Start 80: cc8c; 77/411 Test #73: cc55 ............................. Passed 31.81 sec; Start 81: cc9; 78/411 Test #78: cc8a ............................. Passed 41.52 sec; Start 82: cc9a; 79/411 Test #80: cc8c ............................. Passed 39.04 sec; Start 83: cdomp2-1; 80/411 Test #69: cc51 ............................. Passed 71.87 sec; Start 84: cdomp2-2; 81/411 Test #77: cc8 .............................. Passed 47.88 sec; Start 85: cepa0-grad1; 82/411 Test #79: cc8b ............................. Passed 45.68 sec; Start 86: cepa0-grad2; 83/411 Test #85: cepa0-grad1 ...................... Passed 3.52 sec; Start 87: cepa1; 84/411 Test #83: cdomp2-1 ......................... Passed 8.41 sec; Start 88: cepa2; 85/411 Test #86: cepa0-grad2 ...................... Passed 5.62 sec; Start 89: cepa3; 86/411 Test #87: cepa1 ............................ Passed 7.50 sec; Start 90: cepa1; 87/411 Test #88: cepa2 ............................ Passed 6.63 sec; Start 91: cepa-module; 88/411 Test #81: cc9 .............................. Passed 42.28 sec; Start 92: ci-multi; 89/411 Test #84: cdomp2-2 ......................... Passed 18.17 sec; Start 93: cisd-h2o+-0; 90/411 Test #89: cepa3 ............................ Passed 9.74 sec; Start 94: cisd-h2o+-1; 91/411 Test #74: cc5a ............................. Passed 76.04 sec; Start 95: cisd-h2o+-2; 92/411 Test #90: cepa1 ............................ Passed 9.86 sec; Start 96: cisd-h2o-clpse; 93/411 Test #82: cc9a ............................. Passed 27.69 sec; Start 97: cisd-opt-fd; 94/411 Test #93: cisd-h2o+-0 ...................... Passed 6.79 sec; Start 98: cisd-sp; 95/411 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:7765,Test,Test,7765,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Passed 78.79 sec; Start 18: cbs-xtpl-func; 31/412 Test #156: dft-grad-lr3 ..................... Passed 442.09 sec; Start 182: fsapt-allterms; 32/412 Test #282: opt-irc-2 ........................ Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ........... Passed 280.15 sec; Start 159: dfscf-bz2; 39/412 Test #321: sapt6 ............................ Passed 188.13 sec; Start 48: cc31; 40/412 Test #98: cisd-opt-fd ...................... Passed 161.17 sec; Start 59: cc41; 41/412 Test #159: dfscf-bz2 ........................ Passed 159.76 sec; Start 348: sapt-dft2; 42/412 Test #18: cbs-xtpl-func .................... Passed 512.57 sec; Start 61: cc43; 43/412 Test #194: fd-freq-energy-large ............. Passed 497.43 sec; Start 184: isapt2; 44/412 Test #59: cc41 ............................. Passed 78.71 sec; Start 105: dcft-grad2; 45/412 Test #61: cc43 ............................. Passed 53.47 sec; Start 155: dft-grad-lr2; 46/412 Test #48: cc31 ............................. Passed 121.57 sec; Start 169: dft1; 47/412 Test #182: fsapt-allterms ................... Passed 576.36 sec; Start 303: pywrap-cbs1; 48/412 Test #105: dcft-grad2 ....................... Passed 66.83 sec; Start 75: cc5a; 49/412 Test #348: sapt-dft2 ........................ Passed 127.69 sec; Start 26: cc13a; 50/412 Test #303: pywrap-cbs1 ...................... Passed 50.85 sec; Start 114: dcft7; 51/412 Test #184: isapt2 ........................... Passed 125.81 sec; Start 206: frac-traver,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:4012,Test,Test,4012,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Passed 8.00 sec; Start 186: fci-h2o-2; 187/411 Test #168: dft1 ............................. Passed 107.43 sec; Start 187: fci-h2o-fzcv; 188/411 Test #185: fci-h2o .......................... Passed 7.69 sec; Start 188: fci-tdm; 189/411 Test #186: fci-h2o-2 ........................ Passed 6.82 sec; Start 189: fci-tdm-2; 190/411 Test #188: fci-tdm .......................... Passed 4.98 sec; Start 190: fci-coverage; 191/411 Test #187: fci-h2o-fzcv ..................... Passed 9.54 sec; Start 191: fcidump; 192/411 Test #191: fcidump .......................... Passed 16.54 sec; Start 192: fd-freq-energy; 193/411 Test #189: fci-tdm-2 ........................ Passed 23.42 sec; Start 194: fd-freq-gradient; 194/411 Test #190: fci-coverage ..................... Passed 22.38 sec; Start 196: fd-gradient; 195/411 Test #192: fd-freq-energy ................... Passed 19.98 sec; Start 197: freq-isotope1; 196/411 Test #194: fd-freq-gradient ................. Passed 38.34 sec; Start 198: freq-isotope2; 197/411 Test #197: freq-isotope1 .................... Passed 23.86 sec; Start 199: fnocc1; 198/411 Test #198: freq-isotope2 .................... Passed 13.68 sec; Start 200: fnocc2; 199/411 Test #196: fd-gradient ...................... Passed 51.66 sec; Start 201: fnocc3; 200/411 Test #199: fnocc1 ........................... Passed 38.62 sec; Start 202: fnocc4; 201/411 Test #183: isapt2 ........................... Passed 125.82 sec; Start 203: frac; 202/411 Test #203: frac ............................. Passed 7.79 sec; Start 204: frac-ip-fitting; 203/411 Test #201: fnocc3 ........................... Passed 46.40 sec; Start 206: ghosts; 204/411 Test #202: fnocc4 ........................... Passed 39.83 sec; Start 207: gibbs; 205/411 Test #206: ghosts ........................... Passed 31.89 sec; Start 208: matrix1; 206/411 Test #208: matrix1 .......................... Passed 0.58 sec; Start 209: mcscf1; 207/411 Test #209: mcscf1 ........................... Passed 1.74 sec; Start 210: mc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:18192,Test,Test,18192,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,Passed 8.00 sec; Start 200: freq-isotope2; 260/413 Test #99: cisd-sp .......................... Passed 7.83 sec; Start 390: python-curve; 261/413 Test #374: dft-custom-hybrid ................ Passed 9.30 sec; Start 401: json-schema-1-energy; 262/413 Test #134: dfmp2-4 .......................... Passed 5.04 sec; Start 399: json-v11-energy; 263/413 Test #270: opt2-fd .......................... Passed 8.68 sec; Start 143: dfomp2-3; 264/413 Test #89: cepa2 ............................ Passed 3.44 sec; Start 15: cbs-xtpl-freq; 265/413 Test #343: soscf-ref ........................ Passed 5.84 sec; Start 182: fsapt-terms; 266/413 Test #337: scf4 ............................. Passed 7.11 sec; Start 125: dfccsd1; 267/413 Test #390: python-curve ..................... Passed 2.27 sec; Start 372: scf-coverage; 268/413 Test #3: casscf-fzc-sp .................... Passed 4.38 sec; Start 137: dfmp2-grad2; 269/413 Test #297: psithon1 ......................... Passed 4.83 sec; Start 187: fci-h2o; 270/413 Test #401: json-schema-1-energy ............. Passed 2.54 sec; Start 4: casscf-semi; 271/413 Test #399: json-v11-energy .................. Passed 2.20 sec; Start 257: omp2p5-grad1; 272/413 Test #200: freq-isotope2 .................... Passed 4.35 sec; Start 87: cepa0-grad2; 273/413 Test #143: dfomp2-3 ......................... Passed 4.36 sec; Start 186: fci-dipole; 274/413 Test #163: dft-ghost ........................ Passed 8.01 sec; Start 393: python-mints2; 275/413 Test #9: castup2 .......................... Passed 7.47 sec; Start 264: omp3-grad1; 276/413 Test #369: scf-hess1 ........................ Passed 8.45 sec; Start 331: scf-guess-read2; 277/413 Test #125: dfccsd1 .......................... Passed 5.83 sec; Start 253: omp2-grad1; 278/413 Test #372: scf-coverage ..................... Passed 6.09 sec; Start 267: opt1; 279/413 Test #393: python-mints2 .................... Passed 2.54 sec; Start 387: psi4numpy-fci; 280/413 Test #182: fsapt-terms ...................... Passed 7.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:25290,Test,Test,25290,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['Test'],['Test']
Testability,Passed 8.11 sec; Start 294: psimrcc-pt2; 330/412 Test #344: stability1 ....................... Passed 4.56 sec; Start 392: python-mints2; 331/412 Test #345: dfep2-1 .......................... Passed 4.20 sec; Start 131: dfmp2-2; 332/412 Test #398: json-v11-energy .................. Passed 2.33 sec; Start 214: mints2; 333/412 Test #192: fcidump .......................... Passed 7.02 sec; Start 333: scf-occ; 334/412 Test #312: rasci-h2o ........................ Passed 1.99 sec; Start 315: sad1; 335/412 Test #236: mp2-property ..................... Passed 3.18 sec; Start 328: scf-guess-read1; 336/412 Test #389: python-curve ..................... Passed 3.54 sec; Start 329: scf-upcast-custom-basis; 337/412 Test #294: psimrcc-pt2 ...................... Passed 1.77 sec; Start 346: dfep2-2; 338/412 Test #364: zaptn-nh2 ........................ Passed 2.70 sec; Start 402: json-schema-1-orient; 339/412 Test #258: omp3-1 ........................... Passed 2.96 sec; Start 412: skeletonwavefunction; 340/412 Test #119: dfcasscf-fzc-sp .................. Passed 3.02 sec; Start 290: psimrcc-ccsd_t-3; 341/412 Test #131: dfmp2-2 .......................... Passed 1.98 sec; Start 289: psimrcc-ccsd_t-2; 342/412 Test #392: python-mints2 .................... Passed 2.79 sec; Start 350: sapt-sf1; 343/412 Test #385: psi4numpy-rhf-hessian ............ Passed 3.63 sec; Start 408: skeletondfmp2; 344/412 Test #352: dft-reference .................... Passed 3.73 sec; Start 407: skeletonaointegrals; 345/412 Test #214: mints2 ........................... Passed 2.89 sec; Start 357: scf-response1; 346/412 Test #333: scf-occ .......................... Passed 2.49 sec; Start 8: castup1; 347/412 Test #329: scf-upcast-custom-basis .......... Passed 2.63 sec; Start 363: x2c3; 348/412 Test #346: dfep2-2 .......................... Passed 2.72 sec; Start 406: skeleton; 349/412 Test #315: sad1 ............................. Passed 2.87 sec; Start 97: cisd-h2o-clpse; 350/412 Test #412: skeletonwavefunction ...,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:31933,Test,Test,31933,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Passed 8.89 sec; Start 142: dfomp2-3; 279/412 Test #233: mp2p5-grad2 ...................... Passed 7.18 sec; Start 100: cisd-sp-2; 280/412 Test #162: dft-ghost ........................ Passed 8.95 sec; Start 6: ao-casscf-sp; 281/412 Test #185: fci-dipole ....................... Passed 8.22 sec; Start 252: omp2-grad1; 282/412 Test #186: fci-h2o .......................... Passed 8.77 sec; Start 118: dfcasscf-sa-sp; 283/412 Test #330: scf-guess-read2 .................. Passed 10.99 sec; Start 284: opt-freeze-coords; 284/412 Test #270: opt3 ............................. Passed 8.62 sec; Start 311: rasci-c2-active; 285/412 Test #256: omp2p5-grad1 ..................... Passed 13.84 sec; Start 137: dfmp2-grad3; 286/412 Test #118: dfcasscf-sa-sp ................... Passed 5.81 sec; Start 96: cisd-h2o+-2; 287/412 Test #136: dfmp2-grad2 ...................... Passed 14.17 sec; Start 188: fci-h2o-fzcv; 288/412 Test #100: cisd-sp-2 ........................ Passed 7.48 sec; Start 86: cepa0-grad1; 289/412 Test #386: psi4numpy-fci .................... Passed 8.74 sec; Start 172: dft2; 290/412 Test #6: ao-casscf-sp ..................... Passed 8.19 sec; Start 377: pywrap-align; 291/412 Test #187: fci-h2o-2 ........................ Passed 9.47 sec; Start 135: dfmp2-grad1; 292/412 Test #244: ocepa1 ........................... Passed 14.54 sec; Start 237: mpn-bh; 293/412 Test #142: dfomp2-3 ......................... Passed 9.68 sec; Start 285: props1; 294/412 Test #252: omp2-grad1 ....................... Passed 9.11 sec; Start 247: omp2-1; 295/412 Test #284: opt-freeze-coords ................ Passed 6.27 sec; Start 117: ao-dfcasscf-sp; 296/412 Test #371: scf-coverage ..................... Passed 11.20 sec; Start 340: scf-property; 297/412 Test #137: dfmp2-grad3 ...................... Passed 4.45 sec; Start 94: cisd-h2o+-0; 298/412 Test #86: cepa0-grad1 ...................... Passed 2.91 sec; Start 234: mp3-grad1; 299/412 Test #311: rasci-c2-active .................. Passed 5.93 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:27136,Test,Test,27136,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Passed 9.27 sec; Start 231: mp2p5-grad1; 300/411 Test #251: omp2-grad1 ....................... Passed 9.94 sec; Start 310: rasci-c2-active; 301/411 Test #118: dfcasscf-fzc-sp .................. Passed 4.09 sec; Start 388: python-curve; 302/411 Test #120: dfccd1 ........................... Passed 4.88 sec; Start 385: psi4numpy-fci; 303/411 Test #108: dcft2 ............................ Passed 12.78 sec; Start 235: mp2-property; 304/411 Test #119: dfcasscf-sp ...................... Passed 6.37 sec; Start 343: stability1; 305/411 Test #269: opt3 ............................. Passed 5.68 sec; Start 234: mp3-grad2; 306/411 Test #344: dfep2-1 .......................... Passed 3.98 sec; Start 116: ao-dfcasscf-sp; 307/411 Test #257: omp3-1 ........................... Passed 5.42 sec; Start 85: cepa0-grad1; 308/411 Test #137: dfmp2-grad4 ...................... Passed 12.75 sec; Start 351: dft-reference; 309/411 Test #355: tu3-h2o-opt ...................... Passed 6.03 sec; Start 284: props1; 310/411 Test #235: mp2-property ..................... Passed 3.71 sec; Start 253: omp2p5-1; 311/411 Test #231: mp2p5-grad1 ...................... Passed 5.48 sec; Start 314: sad1; 312/411 Test #388: python-curve ..................... Passed 5.36 sec; Start 377: pywrap-align-chiral; 313/411 Test #343: stability1 ....................... Passed 5.20 sec; Start 399: json-schema-1-energy; 314/411 Test #351: dft-reference .................... Passed 4.90 sec; Start 384: psi4numpy-rhf-hessian; 315/411 Test #377: pywrap-align-chiral .............. Passed 3.04 sec; Start 136: dfmp2-grad3; 316/411 Test #116: ao-dfcasscf-sp ................... Passed 6.35 sec; Start 225: mom; 317/411 Test #310: rasci-c2-active .................. Passed 9.23 sec; Start 213: mints2; 318/411 Test #385: psi4numpy-fci .................... Passed 9.16 sec; Start 397: json-v11-energy; 319/411 Test #370: scf-coverage ..................... Passed 11.16 sec; Start 328: scf-upcast-custom-basis; 320/411 Test #135: dfmp2-grad2 .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:29067,Test,Test,29067,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Passed 9.61 sec; Start 211: mcscf2; 361/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 3.94 sec; Start 363: x2c3; 362/412 Test #225: molden2 .......................... Passed 14.23 sec; Start 355: tu2-ch2-energy; 363/412 Test #409: skeletonmointegrals .............. Passed 3.09 sec; Start 222: mints9; 364/412 Test #97: cisd-h2o-clpse ................... Passed 3.65 sec; Start 223: mints10; 365/412 Test #289: psimrcc-ccsd_t-2 ................. Passed 3.79 sec; Start 411: skeletonsointegrals; 366/412 Test #382: psi4numpy-dfmp2 .................. Passed 2.36 sec; Start 396: python-mints13; 367/412 Test #189: fci-tdm .......................... Passed 2.50 sec; Start 221: mints-helper; 368/412 Test #391: python-mints9 .................... Passed 1.96 sec; Start 384: psi4numpy-rhf-gradient; 369/412 Test #362: x2c2 ............................. Passed 3.13 sec; Start 354: tu1-h2o-energy; 370/412 Test #331: scf-bs ........................... Passed 2.33 sec; Start 103: decontract; 371/412 Test #355: tu2-ch2-energy ................... Passed 1.51 sec; Start 288: psimrcc-ccsd_t-1; 372/412 Test #353: stability2 ....................... Passed 2.45 sec; Start 381: psi4numpy-cphf; 373/412 Test #224: molden1 .......................... Passed 14.30 sec; Start 405: json-schema-1-properties; 374/412 Test #222: mints9 ........................... Passed 1.97 sec; Start 401: json-schema-1-ghost; 375/412 Test #211: mcscf2 ........................... Passed 2.51 sec; Start 397: python-memdfjk; 376/412 Test #411: skeletonsointegrals .............. Passed 1.93 sec; Start 299: pubchem2; 377/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.52 sec; Start 388: python-energy; 378/412 Test #221: mints-helper ..................... Passed 1.67 sec; Start 399: json-v11-gradient; 379/412 Test #223: mints10 .......................... Passed 2.18 sec; Start 335: scf3; 380/412 Test #396: python-mints13 ................... Passed 1.96 sec; Start 212: mcscf3; 381/412 Test #363: x2c3 ..,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:34892,Test,Test,34892,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['Test'],['Test']
Testability,Passed 9.82 sec; Start 243: nbody-cp-gradient; 308/415 Test #236: mp3-grad1 ........................ Passed 10.08 sec; Start 244: nbody-vmfc-gradient; 309/415 Test #235: mp2p5-grad2 ...................... Passed 11.14 sec; Start 246: nbody-freq; 310/415 Test #229: mp2-1 ............................ Passed 24.07 sec; Start 247: nbody-multi-level; 311/415 Test #241: nbody-intermediates .............. Passed 26.74 sec; Start 249: ocepa-freq1; 312/415 Test #242: nbody-nocp-gradient .............. Passed 21.71 sec; Start 250: ocepa-grad1; 313/415 Test #195: fd-freq-energy ................... Passed 115.82 sec; Start 253: ocepa2; 314/415 Test #250: ocepa-grad1 ...................... Passed 17.00 sec; Start 254: ocepa3; 315/415 Test #243: nbody-cp-gradient ................ Passed 39.06 sec; Start 255: omp2-1; 316/415 Test #244: nbody-vmfc-gradient .............. Passed 45.13 sec; Start 257: omp2-3; 317/415 Test #255: omp2-1 ........................... Passed 9.46 sec; Start 258: omp2-4; 318/415 Test #240: nbody-he-cluster ................. Passed 65.04 sec; Start 259: omp2-5; 319/415 Test #230: mp2-def2 ......................... Passed 92.05 sec; Start 261: omp2-grad2; 320/415 Test #257: omp2-3 ........................... Passed 36.70 sec; Start 262: omp2p5-1; 321/415 Test #262: omp2p5-1 ......................... Passed 8.70 sec; Start 264: omp2p5-grad1; 322/415 Test #247: nbody-multi-level ................ Passed 85.90 sec; Start 265: omp2p5-grad2; 323/415 Test #254: ocepa3 ........................... Passed 68.79 sec; Start 267: omp3-2; 324/415 Test #264: omp2p5-grad1 ..................... Passed 19.00 sec; Start 268: omp3-3; 325/415 Test #253: ocepa2 ........................... Passed 112.20 sec; Start 269: omp3-4; 326/415 Test #267: omp3-2 ........................... Passed 46.88 sec; Start 270: omp3-5; 327/415 Test #261: omp2-grad2 ....................... Passed 77.26 sec; Start 271: omp3-grad1; 328/415 Test #271: omp3-grad1 ....................... Passed 21.77 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:29886,Test,Test,29886,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Passes all tests but:; ```; The following tests FAILED:; 	370 - pywrap-align (Failed); 	371 - pywrap-align-chiral (Failed); ```; The two crash with import error; I guess that's just an environment issue.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/963#issuecomment-383096630:11,test,tests,11,https://psicode.org,https://github.com/psi4/psi4/pull/963#issuecomment-383096630,2,['test'],['tests']
Testability,Patch failing tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/811:14,test,tests,14,https://psicode.org,https://github.com/psi4/psi4/pull/811,1,['test'],['tests']
Testability,"People at the forum have kindly supplied Turbomole and G\* values for further comparison. They are encoded into the test case below, which passes using this PR branch (that reenables b3lyp5 with `VWN5_C`). The open-shell b3lyp5 in psi4 matches turbochem rather better than nwchem. ```; set scf_type pk; set e_convergence 9; set basis aug-cc-pvdz; set dft_spherical_points 590; set dft_radial_points 99. molecule cswater {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; }. oswater = cswater.clone(); oswater.set_multiplicity(2); oswater.set_molecular_charge(1). e = energy('b3lyp', molecule=cswater); compare_values(-76.444577160243, e, 5, 'clsd-shell: b3lyp (vwn3rpa) vs NWChem (vwn_1_rpa; default)'). set reference uhf; e = energy('b3lyp', molecule=oswater); compare_values(-75.974154693676, e, 5, 'open-shell: b3lyp (vwn3rpa) vs NWChem (vwn_1_rpa; default)'); compare_values(-75.97415476252, e, 5, 'open-shell: b3lyp (vwn3rpa) vs Turbomole (vwn3)'); compare_values(-75.9741544303, e, 5, 'open-shell: b3lyp (vwn3rpa) vs Gaussian (default)'). set reference rks; e = energy('b3lyp5', molecule=cswater); compare_values(-76.407526614389, e, 5, 'clsd-shell: b3lyp5 (vwn5) vs NWChem (vwn_3)'). set reference uks; e = energy('b3lyp5', molecule=oswater); compare_values(-75.940741067166, e, 4, 'open-shell: b3lyp5 (vwn5) vs NWChem (vwn_3)'); compare_values(-75.94075271487, e, 5, 'open-shell: b3lyp5 (vwn5) vs Turbomole (vwn5; default)'); # this one doesn't match quite so well; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/339#issuecomment-209503911:116,test,test,116,https://psicode.org,https://github.com/psi4/psi4/pull/339#issuecomment-209503911,1,['test'],['test']
Testability,"Per discussion on conference call, this will be fixed by creating the MP2 tau amplitudes if they don't already exist. I'll go through the test-only changes to `cc` before attempting this one, which is more of a behavior change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2457#issuecomment-1058243332:138,test,test-only,138,https://psicode.org,https://github.com/psi4/psi4/issues/2457#issuecomment-1058243332,1,['test'],['test-only']
Testability,"Peter's right - the info can be found [in the output](https://github.com/psi4/psi4/blob/master/tests/scf-ecp/output.ref#L133) already. Different basis sets have different numbers of explicit/implicit electrons for a given atom, so this will have to be evaluated for each basis set / molecule combination you're interested in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1113#issuecomment-412883343:95,test,tests,95,https://psicode.org,https://github.com/psi4/psi4/issues/1113#issuecomment-412883343,1,['test'],['tests']
Testability,Ping me for review again when you have this passing tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1084556386:52,test,tests,52,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1084556386,1,['test'],['tests']
Testability,"Ping me when this could use another review from me. From tests, it looks like there's a bug in the current code.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2385#issuecomment-1027259299:57,test,tests,57,https://psicode.org,https://github.com/psi4/psi4/pull/2385#issuecomment-1027259299,1,['test'],['tests']
Testability,Please attach the log files as attachments. Walls of text are illegible on github.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1101#issuecomment-755267377:18,log,log,18,https://psicode.org,https://github.com/psi4/psi4/pull/1101#issuecomment-755267377,1,['log'],['log']
Testability,"Please do add or suggest a test for this when you get a chance. If fchk is appropriate to enable, that testing structure is in place.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2072#issuecomment-767076906:27,test,test,27,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767076906,2,['test'],"['test', 'testing']"
Testability,"Please elaborate on ""DFT gets it wrong"". I don't see the point in Psi testing how accurate DFT functionals are, relative to FCI.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2371#issuecomment-986873411:70,test,testing,70,https://psicode.org,https://github.com/psi4/psi4/issues/2371#issuecomment-986873411,1,['test'],['testing']
Testability,"Please include either the full input, or a reduced test case.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2870#issuecomment-1411969749:51,test,test,51,https://psicode.org,https://github.com/psi4/psi4/issues/2870#issuecomment-1411969749,1,['test'],['test']
Testability,"Please look at the test result now:. (base) dabu@RES-SHANTIPA:/mnt/c/Users/shantigp/projects/psi4conda/bin$ psi4 --test; numpy.ufunc size changed, may indicate binary incompatibility. Expected 192 from C header, got 216 from PyObject; ================================================= test session starts ==================================================; platform linux -- Python 3.6.8, pytest-4.3.0, py-1.8.0, pluggy-0.9.0 -- /mnt/c/Users/shantigp/projects/psi4conda/bin/python; cachedir: .pytest_cache; rootdir: /mnt/c/Users/shantigp/projects/psi4conda, inifile:; collected 1024 items / 1002 deselected / 22 selected. ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_gdma PASSED [ 4%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_mrcc SKIPPED [ 9%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_chemps2 PASSED [ 13%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_dftd3 FAILED [ 18%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_libefp LIBEFP: parameters for fragment ""NH3"" are already loaded; PASSED [ 22%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_pcmsolver PASSED [ 27%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_erd SKIPPED [ 31%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_simint PASSED [ 36%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_json PASSED [ 40%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_cfour SKIPPED [ 45%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_v2rdm_casscf PASSED [ 50%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_gpu_dfcc SKIPPED [ 54%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_grimme_3c FAILED [ 59%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_dkh PASSED [ 63%]; ../lib/python3.6/site-packages/psi4/tests/test_addons.py::test_snsmp2 SKIPPED [ 68%]; ../lib/python3.6/site-packages/psi4/tests/",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846:19,test,test,19,https://psicode.org,https://github.com/psi4/psi4/issues/1586#issuecomment-478031846,8,['test'],"['test', 'tests']"
Testability,Please rebase and push again. The test failure (unrelated to this PR) should be fixed.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2761#issuecomment-1302395632:34,test,test,34,https://psicode.org,https://github.com/psi4/psi4/pull/2761#issuecomment-1302395632,1,['test'],['test']
Testability,"Please use `PYMOD_INSTALL_LIBDIR` https://github.com/psi4/psi4/blob/master/CMakeLists.txt#L94-L95 to adjust the path. Since Linux build conventions and Python build conventions can't both be fully adhered to, Psi4 prefers the former, especially as one doesn't always want an install into Python's site-packages. I suspect the `__init__` logic will heal if this cmake var is used.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2800#issuecomment-1328095947:337,log,logic,337,https://psicode.org,https://github.com/psi4/psi4/issues/2800#issuecomment-1328095947,1,['log'],['logic']
Testability,"Point of clarification, I don't think density screening will allow ""fewer; iterations"", so I suggest deleting those words from the ""Notable Features""; description. But hopefully it will lead to ""less time"" because fewer; integrals will be computed. On Fri, Dec 11, 2020 at 1:09 PM Andy Jiang <notifications@github.com> wrote:. > Description; >; > Implements density screening into the direct SCF Algorithm, no iterative; > Fock build currently, but iterative Fock build will be a future addition; >; > Reference paper:; > https://onlinelibrary.wiley.com/doi/abs/10.1002/jcc.540100111; > Notable Features; >; > - Improve the efficiency (fewer iterations, less time) of the direct; > SCF Algorithm without compromising accuracy; >; > Checklist; >; > - Passes Sanity Check for Water Molecule, will include a Google Sheets; > link as I include more tests; > - Code tested on a diverse set of molecules; >; > Status; >; > - Rough Draft Phase; > - Ready for review; > - Ready for merge; >; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/psi4/psi4/pull/2062; > Commit Summary; >; > - Density Screening Rough Draft; >; > File Changes; >; > - *M* psi4/src/psi4/libfock/DirectJK.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-5be42036f62111d8e1e5420b7a1e5b178b56fa9b55cbbe2453950147f868481f>; > (92); > - *M* psi4/src/psi4/libfock/jk.h; > <https://github.com/psi4/psi4/pull/2062/files#diff-47381cdba9dc8065e0f8bcf7939d6dfbf532b7f85be2f1df584dfc4dde5b3bfb>; > (3); > - *M* psi4/src/read_options.cc; > <https://github.com/psi4/psi4/pull/2062/files#diff-85f451c75b4e468882c42e9eb347a3e4b3e58891bbfe92168329cd0b32ce6cb4>; > (4); >; > Patch Links:; >; > - https://github.com/psi4/psi4/pull/2062.patch; > - https://github.com/psi4/psi4/pull/2062.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/2062>, or un",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990:845,test,tests,845,https://psicode.org,https://github.com/psi4/psi4/pull/2062#issuecomment-743345990,2,['test'],"['tested', 'tests']"
Testability,Port tests to Windows,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1183:5,test,tests,5,https://psicode.org,https://github.com/psi4/psi4/pull/1183,1,['test'],['tests']
Testability,"Possibly the following could (also) be due to my misunderstanding of how the input is supposed to work. My apologies if that is the case. In the following example, the perturbation with the external field seems to be ignored:. ```; molecule {; 0 1; He 0.0 0.0 0.0; symmetry c1 # field breaks symmetry; }. set {; reference rhf; basis aug-cc-pvtz; relativistic x2c; perturb_h true; perturb_with dipole; perturb_dipole [0.0, 0.0, 0.1]; }. energy('scf'); ```. I've attached a series of examples, with non-relativistic, dkh and x2c calculations on a dummy test case: [reltest.zip](https://github.com/psi4/psi4/files/3884841/reltest.zip). ```; grep ""Total Energy ="" *.out; dkh_0.out: Total Energy = -2.8613053380694344; dkh_p.out: Total Energy = -2.8679760471040372; nrl_0.out: Total Energy = -2.8612063084748343; nrl_p.out: Total Energy = -2.8678772073375063; x2c_0.out: Total Energy = -2.8613053511779820; x2c_p.out: Total Energy = -2.8613053511779745; ```. The suffix `_0` and `_p` stand for ""no field"" and ""dipolar field"" respectively.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1758:551,test,test,551,https://psicode.org,https://github.com/psi4/psi4/issues/1758,1,['test'],['test']
Testability,"Possibly wrong(?) SAD guess when the first specified atoms in the molecule are ghost atoms.; Saw it first in my molecules, but already visible in test cases. output of `/tests/ghosts/` (formic dimer):; Dimer:. @DF-RHF iter SAD: -376.24275022516485 -3.76243e+02 0.00000e+00 ; @DF-RHF iter 1: -377.42229133540047 -1.17954e+00 1.11411e-02 DIIS. monomer1 (ghosts first):. @DF-RHF iter SAD: 294.96051138857882 2.94961e+02 0.00000e+00 ; @DF-RHF iter 1: -171.55187514768130 -4.66512e+02 5.45148e-02 DIIS. monomer1 (ghosts last):. @DF-RHF iter SAD: -188.00026763307497 -1.88000e+02 0.00000e+00 ; @DF-RHF iter 1: -188.67971697531274 -6.79449e-01 6.02580e-03 DIIS",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1528:146,test,test,146,https://psicode.org,https://github.com/psi4/psi4/issues/1528,2,['test'],"['test', 'tests']"
Testability,"Post 1.1 maintenance, mainly testing and MINAO",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/726:29,test,testing,29,https://psicode.org,https://github.com/psi4/psi4/pull/726,1,['test'],['testing']
Testability,"Posting Dom's very nice summary for easier perusal and searchability. Effective `scf_type df` Testing: `mem_df` & `disk_df`; =====================================================. All tests listed below examine calls to both `energy()` and `gradient()` when; employing the `scf_type mem_df` and `scf_type disk_df` settings. Each test; employs a different model chemistry (indicated in the test description) and the; Physicists' water molecule, unless otherwise indicated. 1. Physicists' water, HF/6-31G; - **TEST FAILED**; - Error message:; ```; Traceback (most recent call last):; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/bin/psi4"", line 264, in <module>; exec(content); File ""<string>"", line 30, in <module>; File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 444, in energy; return driver_cbs._cbs_gufunc(energy, name, ptype='energy', **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver_cbs.py"", line 1818, in _cbs_gufunc; ptype_value, wfn = func(method_name, return_wfn=True, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 2038, in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); File ""/Users/dasirianni/Gits/psi4/objdir/stage/Users/dasirianni/install/psi4/lib/psi4/driver/procrouting/proc.py"", line 1363, in scf_helper; e_scf = scf_wfn.compute_energy(); ; RuntimeError:; Fatal Error: DFHelper (MemDFJK): cannot do cartesian auxiliary functions; Error occurred in file: /Users/dasirianni/Gits/psi4/psi4/src/psi4/libfock/MemDFJK.cc on line: 89; The most recent 5 function calls were:; ```; 2. HF/cc-pVDZ: Passed; 3. AO DF",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081:94,Test,Testing,94,https://psicode.org,https://github.com/psi4/psi4/issues/1021#issuecomment-388980081,5,"['TEST', 'Test', 'test']","['TEST', 'Testing', 'test', 'tests']"
Testability,"Presently, there are rather few `compare_values()` statements in the `tests/cc*/input.dat` test cases. This is because there's a very thorough [perl script](https://github.com/psi4/psi4/blob/master/tests/psitest.pl) that parses the output file and parses the alongside `reference.dat` file and compares everything in sight to a sensible number of decimal places. Works great (except when we accidentally break its arrangements and then everything trivially passes for months at a time until someone notices) in Make or CMake testing framework for checking CC. _Doesn't_ work great to check that psivar coverage is good for the cc* modules or independently of the ctest testing macros or in an installed (as opposed to source) testing env w/o reference.dat files or without perl. I think the in-file compare_values() testing is an idea that has proven its worth. I suggest that:; 1. the key reference values from each `reference.dat` be collected into the various `cc*/input.dat` tests,; 2. more psivars be defined as needed in the `psi4/src/psi4/cc*` modules, ; 3. a `compare_coupledcluster()` be written to take in a wfn and a structure of reference values and apply all the checks that the perl script currently does through compare_values(), compare_arrays(), etc. (3) is negotiable; it's just my current idea on how to move toward compare_values() without losing coverage. Primary aims are to make coupled-cluster tests suitable for installed testing (`assert compare_values(...)` works great in pytest) and increase coupled-cluster psivar usage (@amjames already did one follow-up pass) for the QCSchema project. Further note that in the near future, psivars need to be on Wfn, *not* `P::e`. Might be worth multiple ppl working to spread the pain. This hasn't been run by @lothian, so he may have other ideas.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/943:70,test,tests,70,https://psicode.org,https://github.com/psi4/psi4/issues/943,11,"['assert', 'test']","['assert', 'test', 'testing', 'tests']"
Testability,Pretty sure it’s just an eigenvector ordering amongst degen freq instability that appears rarely. Wanted to test locally before restart.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-451682417:108,test,test,108,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-451682417,1,['test'],['test']
Testability,"Previously, this was returning the last computed energy. Now, it returns the energy of the last IRC point. This should fix the test cases, which were failing on some systems.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/292:127,test,test,127,https://psicode.org,https://github.com/psi4/psi4/pull/292,1,['test'],['test']
Testability,Probably bad logic for extremely small computations. Thanks for the report.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1018#issuecomment-388809356:13,log,logic,13,https://psicode.org,https://github.com/psi4/psi4/issues/1018#issuecomment-388809356,1,['log'],['logic']
Testability,Provides continuous build testing against new pushes to the repo and pull requests.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/223:26,test,testing,26,https://psicode.org,https://github.com/psi4/psi4/pull/223,1,['test'],['testing']
Testability,"Psi4 1.0 and its successors in the 1.0 release series have the new SAPT code _and_ build with GCC 4.8. But for all the aforementioned reasons I advise building a 1.1a1 series Psi4 (and the fact that I tested the sapt2+3dmp2 forum post on a 1.1a1 series). We can get around your problem 4.8.2 problem. You don't have to compile _everything_ with >=4.9 GCC, just Psi4. (HDF5 isn't a dependency unless you `ENABLE_CheMPS2=ON`; GSL no longer a dependency at all; Python only an interpreter and header dependency, not library). You can get a gcc 5.2 from conda vis [these instructions](https://github.com/psi4/psi4/blob/master/doc/sphinxman/source/build_planning.rst#how-to-satisfy-the-gcc--49-requirement-on-linux-without-updating-the-os) and use that to compile Psi4, without ever interfering with your system gcc.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/580#issuecomment-274087513:201,test,tested,201,https://psicode.org,https://github.com/psi4/psi4/issues/580#issuecomment-274087513,1,['test'],['tested']
Testability,Psi4 Test Failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3154:5,Test,Test,5,https://psicode.org,https://github.com/psi4/psi4/issues/3154,1,['Test'],['Test']
Testability,"Psi4 doesn't seem to be initializing global variables in a way that can be accessed by plugins. One example is `psi::outfile`. Steps to recreate:; - Create a new plugin. Tested on the scf template.; - Configure with `psi4 --plugin-compile`; - Adding the `-DCMAKE_BUILD_TYPE=Debug` also causes this.; - Build with `cmake --build (directory)`; - Running gives a segmentation fault. Output from valgrind with the debug build type gives the following.; ```; ==98805== Memcheck, a memory error detector; ==98805== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.; ==98805== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info; ==98805== Command: /home/user/psi4/bin/psi4 input.dat; ==98805== ; ==98805== Invalid read of size 8; ==98805== at 0x29BC741C: std::vector<char, std::allocator<char> >::size() const (stl_vector.h:988); ==98805== by 0x2B5A1476: psi::PsiOutStream::Printf(char const*, ...) (PsiOutStream.cc:70); ==98805== by 0x296A3066: psi::test::SCF::init_integrals() (scf.cc:79); ==98805== by 0x296A2C04: psi::test::SCF::SCF(std::shared_ptr<psi::Wavefunction>, psi::Options&) (scf.cc:56); ==98805== by 0x29697716: test (plugin.cc:134); ==98805== by 0x5FDD804: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5FE0666: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x5F6A896: ??? (in /home/user/psi4/lib/psi4/core.cpython-310-x86_64-linux-gnu.so); ==98805== by 0x4FDC86: cfunction_call (methodobject.c:543); ==98805== by 0x4F741A: _PyObject_MakeTpCall (call.c:215); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:112); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:99); ==98805== by 0x4F34C5: UnknownInlinedFun (abstract.h:123); ==98805== by 0x4F34C5: UnknownInlinedFun (ceval.c:5893); ==98805== by 0x4F34C5: _PyEval_EvalFrameDefault (ceval.c:4181); ==98805== by 0x4FE0CE: UnknownInlinedFun (pycore_ceval.h:46); ==98805== by 0x4FE0CE: UnknownInlinedFun (ceval.c:5067); ==98805=",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3200:170,Test,Tested,170,https://psicode.org,https://github.com/psi4/psi4/issues/3200,2,"['Test', 'test']","['Tested', 'test']"
Testability,"Psi4 forgets socc when guess=core. Reduced test case. molecule {; 0 2; Li; }. set basis STO-3G; set reference rohf; set guess sad; set docc [ 1, 0, 0, 0, 0, 0, 0, 0 ]; set socc [ 1, 0, 0, 0, 0, 0, 0, 0 ]; energy('scf'). With SAD guess, one gets. ```; Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 1, 0, 0, 0, 0, 0, 0, 0 ]; SOCC [ 0, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @DF-ROHF Final Energy: -7.13546721504551. With core guess, one gets. ```; Final Occupation by Irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 1, 0, 0, 0, 0, 0, 0, 0 ]; SOCC [ 1, 0, 0, 0, 0, 0, 0, 0 ]; ```. Energy converged. @DF-ROHF Final Energy: -7.31554523444454",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/420:43,test,test,43,https://psicode.org,https://github.com/psi4/psi4/issues/420,1,['test'],['test']
Testability,"Psi4 is supposed to be printing out Libxc version information and the reference to Libxc. However, this is not happening for some reason at the moment. Test inputs and outputs attached.; [test_composite.out.txt](https://github.com/psi4/psi4/files/10545133/test_composite.out.txt); [test_composite.in.txt](https://github.com/psi4/psi4/files/10545134/test_composite.in.txt); [test_builtin.out.txt](https://github.com/psi4/psi4/files/10545136/test_builtin.out.txt); [test_builtin.in.txt](https://github.com/psi4/psi4/files/10545138/test_builtin.in.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2867:152,Test,Test,152,https://psicode.org,https://github.com/psi4/psi4/issues/2867,1,['Test'],['Test']
Testability,"Psi4 modules writing their variable to globals should be moved to Wavefunction local variables. This is part of the general ""localization"" of Psi4 to assist in complex Psi4 runs involving multiple computations and to further promote the API. . The general plan is as follows:; 1) Add a bit of code that dumps all local Wavefunction variables to global variables at the end of each *driver* computation `energy/gradient/Hessian/etc`. The small code snippet looks like the following:. ```python; scf_e, wfn = psi4.energy(""HF"", return_wfn=True); for k, v in wfn.variables().items():; core.set_variable(k, v); ```; Thats it! Just need to be called at the right places in the driver to ensure we do not miss a crucial export. This will keep the global variables working as expected. 2) Replace all `Process::environment.globals[""name""] = variable` calls with `Wavefunction->set_variable(""name"", variable)` for modules.; 3) Keep in mind some modules may grab variables from these global options. Some thought will be needed in these cases so this is not a blanket find and replace.; 4) @loriab Are there going to be doc issues when we do this?. I would not do this all in one go due to point 3. So I would recommend a series of PR's:; - PR 1: Do (1) and apply (2) to adc, dfep2, dfmp2, detci, and libsapt_solver modules (in that order, testing in between!).; - PR 2 (may be multiple): Apply (2) to major module blocks one at a time CC*, occ, dfocc, etc.; - PR 3: Clean up any remaining module global exports.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/883:1330,test,testing,1330,https://psicode.org,https://github.com/psi4/psi4/issues/883,1,['test'],['testing']
Testability,Psi4 never uses nested braces. See a combination of [this](https://github.com/psi4/psi4/blob/master/tests/mints2/input.dat#L59-L111) and [this](https://github.com/psi4/psi4/blob/master/tests/pywrap-basis/input.dat#L27-L34) for manually specifying an auxiliary basis.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/823#issuecomment-337805838:100,test,tests,100,https://psicode.org,https://github.com/psi4/psi4/issues/823#issuecomment-337805838,2,['test'],['tests']
Testability,"Psi4 seems to be unable to recognize the symmetry of molecules that should be Cs.; Minimal input:; ```; molecule {; pubchem:fluoroethane ; }; set basis cc-pVDZ; energy('scf'); ```; Output is attached. [Cs_test.log](https://github.com/psi4/psi4/files/8209874/Cs_test.log); I have tried overriding this by manually specifying a Cs symmetry, but that results in an error:; ```; !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: User specified point group (Cs(X)) is not a subgroup of the highest !; ! detected point group (C1). If this is because the symmetry increased, try to !; ! start the calculation again from the last geometry, after checking any !; ! symmetry-dependent input, such as DOCC. !; ! Error occurred in file: /scratch/psilocaluser/conda- !; ! builds/psi4-multiout_1645476997931/work/psi4/src/psi4/libmints/molecule.cc !; ! on line: 2011 !; ! The most recent 5 function calls were: !; ! psi::Molecule::find_point_group(double) const !; ! psi::Molecule::update_geometry() !; ! from_dict(pybind11::dict) !; ! !; !----------------------------------------------------------------------------------!; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2463:210,log,log,210,https://psicode.org,https://github.com/psi4/psi4/issues/2463,2,['log'],['log']
Testability,"Psi4-1.2.1 on Debian shows several test suite failures on non-Intel hardware in the SAPT code that go like this:. ```; 90/140 Test #315: sapt1 ............................***Failed 7.40 sec; Traceback (most recent call last):; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/bin/psi4"", line 269, in <module>; exec(content); File ""<string>"", line 53, in <module>; File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/driver.py"", line 492, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/<<PKGBUILDDIR>>/builddir/stage/usr/lib/s390x-linux-gnu/psi4/driver/procrouting/proc.py"", line 3438, in run_sapt; e_sapt = core.sapt(dimer_wfn, monomerA_wfn, monomerB_wfn). RuntimeError: ; Fatal Error: Laplace Quadrature requested for (E_HUMO - E_LOMO)/(E_LUMO-E_HOMO) > 7.0 * 10^12, quadratures are not designed for this range.; Error occurred in file: /<<PKGBUILDDIR>>/psi4/src/psi4/lib3index/denominator.cc on line: 609; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int). Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```; See https://buildd.debian.org/status/fetch.php?pkg=psi4&arch=s390x&ver=1%3A1.2.1-2&stamp=1546705364&raw=0 for the full log. Failing test cases from `quicktests` are `sapt1`, `sapt-dft1`, `tu5-sapt` and `pywrap-db1`, failing architectures are (so far) `s390x` and `powerpc`. Anything I can do to investigate?",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462:35,test,test,35,https://psicode.org,https://github.com/psi4/psi4/issues/1462,4,"['Test', 'log', 'test']","['Test', 'log', 'test']"
Testability,QCFractal Causes Test Suite Failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2873:17,Test,Test,17,https://psicode.org,https://github.com/psi4/psi4/issues/2873,1,['Test'],['Test']
Testability,"Question: Is it worth refactoring `adcc` ctests to pytest? I will need to touch *every* `adcc` test to accommodate for new variables (previously all excitation energies were just stored in a single array, so that we could use `compare_arrays`) anyways.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2513#issuecomment-1084625953:95,test,test,95,https://psicode.org,https://github.com/psi4/psi4/pull/2513#issuecomment-1084625953,1,['test'],['test']
Testability,"Quick question – have you run a full & clean test suite with frac occ on by default? I ask because I tried turning it on unilaterally once before and it fixed my troublesome case but broke some tests. I expect your recent PRs have fixed things, but it's good to check the baseline. Thanks!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-451551896:45,test,test,45,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-451551896,2,['test'],"['test', 'tests']"
Testability,"Quick review appreciated for sake of `deriv.cc`. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [x] Remove lots of deprecated stuff. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2809:342,Test,Tests,342,https://psicode.org,https://github.com/psi4/psi4/pull/2809,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"Quick tests on a 510 basis function system show that timing savings between old and new defaults are utterly negligible. Changed, per @susilehtola's recommendation.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2834#issuecomment-1353418708:6,test,tests,6,https://psicode.org,https://github.com/psi4/psi4/pull/2834#issuecomment-1353418708,1,['test'],['tests']
Testability,"Quicktests fail on Fedora rawhide i686. The test case output is. Testing pywrap-freq-e-sowreap...; Performing finite difference calculations by energies; 13 displacements needed.; Computation complete.; Frequencies.......................................................PASSED; ZPVE..............................................................PASSED; SP energy.........................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; SP NRE............................................................PASSED; Testing cc8...; \tFAILED; Testing cc18...; Nuclear repulsion energy..........................................PASSED; SCF energy........................................................PASSED; CCSD correlation energy...........................................PASSED; CCSD total energy.................................................PASSED; \tFAILED; Testing cc19...; \tFAILED; Testing cc28...; \tFAILED; Testing cc49...; \tFAILED. The cc??.test files are empty, but the output.dat's seem sane...",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/13:44,test,test,44,https://psicode.org,https://github.com/psi4/psi4/issues/13,8,"['Test', 'test']","['Testing', 'test']"
Testability,"R will be smoother, and CompositeJK development can continue parallel to the developments discussed in https://github.com/psi4/psi4/pull/2682. Additionally, this PR serves as a first step the to decomposition of https://github.com/psi4/psi4/pull/2682 as discussed in that PR's comments, allowing for the full standardization of IncFock among integral-direct JK subclasses. For reviewers, since this PR is the bottleneck for two different routes of JK development (CompositeJK and IncFock standardization), it should be considered the highest-priority JK development PR to merge into Psi4 at the moment. ## User API & Changelog headlines; N/A. ## Dev notes & details; - [X] Switches DFJLinK to using the incremental Fock build implementation used in DFJCOSK. This change standardizes the incremental Fock implementation between DFJLinK and DFJCOSK and improves the memory usage of DFJLinK in the process.; - [X] Changes LinK machinery to support new incremental Fock formalism. ## Questions; - [ ] Since this PR specifically focuses on changes to DFJLinK, there are still a couple of small differences in IncFock between DFJLinK and DFJCOSK, mainly, refactorings and the aforementioned bells and whistles that DFJLinK has that DFJCOSK doesn't. Would it be better to make adjustments to DFJCOSK in this PR as well, to further standardize the two; or is it preferrable to punt that down to the next CompositeJK PR, when DFJLinK and DFJCOSK are combined into the pilot CompositeJK implementation? If we decide to make the changes to DFJCOSK this PR, it would essentially consist of refactoring the DFJCOSK IncFock to match that of DFJLinK, and adding the bells and whistles that DFJLinK currently has.; - [ ] Should the relevant test outputs be updated?. ## Checklist; - [X] Tests added for any new features; - [X] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [X] Ready for review; - [ ] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2792:3798,test,test,3798,https://psicode.org,https://github.com/psi4/psi4/pull/2792,4,"['Test', 'test']","['Tests', 'test', 'tests']"
Testability,"REENING` keywords available in Psi4. Of the currently-available JK tests, scf5 covers a wide variety of build methods, but only at a single screening type per method (density or csam, depending on the method). Meanwhile, `test_erisieve.py`, after the updates introduced in https://github.com/psi4/psi4/pull/2973, tests a wide variety of screening types, but with limited testing in conjunction with different JK builds (the only tests that don't use the Python interface of `TwoBodyAOInt` directly, use `SCF_TYPE=DIRECT` or `DF` as the JK method for screening comparisons). This leaves a lot of untested JK build+screening combos, which may be potentially broken and uncaught by the CI as a result. As a matter of fact, such cases actually do exist in the code currently (e.g., CompositeJK methods + no screening). This PR adds a new pytest module, `test_comprehensive_jk_screening.py`. It is effectively an expanded version of the scf5 test module, testing one of the scf5 systems (singlet oxygen) with the same basis set, but also including different screening methods and algorithmic subtypes available in Psi4. Screening is assumed to have an insignificant impact on energy within the tolerance used, so all screening types for a given method use the same reference energy. Some combinations of method and screening type throw an exception by design; this is accounted for in the test by testing that such combinations do indeed throw an exception as expected. Other combinations of method and algorithm are broken at the moment and error out; these are simply skipped for now. They are all logged in the same spot, and can and will be addressed in future PRs. ## User API & Changelog headlines; - [X] N/A. ## Dev notes & details; - [X] Adds a new pytest module to Psi4, `test_comprehensive_jk_screening.py` , to test different combinations of JK build algorithms and ERI screening methods. ## Questions; - [x] Would the test in `test_comprehensive_jk_screening.py` be better placed in `test_eris",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2978:1062,test,test,1062,https://psicode.org,https://github.com/psi4/psi4/pull/2978,2,['test'],"['test', 'testing']"
Testability,"REMP2 and OREMP2 hybrid perturbation theories (https://doi.org/10.1063/1.5086168) with conventional integrals added to `occ` module, as originally proposed in #2354; - [ ] note that this uses a specialty QCEngine for reference values. https://github.com/MolSSI/QCEngine/pull/375 It'll build by itself. I'll need to mint a QCEngine patch release before building conda packages with this PR in master.; - [x] docs-wise, I picked off a bit and included it in this PR. on the whole, let's defer docs edits until the dfocc PR; - [x] reworked the run_occ* driver functions a bit so that method defs are localized and there's less risk of missing an internal setting when adding new methods.; - [x] added stdsuite testing for new methods remp2 energy and oremp2 energy and gradient. added stdsuite testing for existing E & G for omp2, omp2.5, omp3, oremp2, olccd and filled in some gaps for ccsd, ccsd(t), a-ccsd(t). all conventional ints. fixed up some mis-set byproducts uncovered by stdsuite testing: OO ROHF was printing and setting wrong plain MP2 energies, OMP3 & OMP2.5 wasn't setting right `Wfn.energy_`, stop setting ROHF MP3 and MP2.5 out of caution.; - [x] tightened the min rms_mograd_convergence from 6.0 to 6.5 so that stdsuite (3 mol/basis sets) could reliably compute energies, gradients, and findif gradients to 1e-6. ## Questions; - [x] sometimes the non-OO value (e.g., MP2, LCCD) is available as an early byproduct of the OO calc (e.g., OMP2, OLCCD). this wasn't the case with REMP, and some QCVariables that stored a purported non-OO REMP had to be removed. @behnle, please confirm that this sounds right.; - @behnle, sorry for the long delay and scrambling of your PR. please feel free to comment and PR to this to modify.; - @bozkaya, this adds pretty cleanly onto your `occ` code, but do look it over if you want. ## Checklist; - [x] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2653:1993,test,testing,1993,https://psicode.org,https://github.com/psi4/psi4/pull/2653,1,['test'],['testing']
Testability,"RHF DF-MP2 gradient calculations with the `dfmp2` module will replace the SCF orbital data on the wavefunction objects with MP2 natural orbitals and NO occupations.; This is the default for RHF calculations with `gradient('mp2')`. https://github.com/psi4/psi4/blob/master/psi4/src/psi4/dfmp2/mp2.cc#L2368-L2388. This is undocumented and atypical behaviour compared to other modules.; It is also a good idea to preserve the SCF orbital data. @JonathonMisiewicz suggested a NO specific entry on the `dfmp2` wavefunction. ---; test script. ```; import psi4; import numpy as np. def run_psi4fchk(geom,method):; e, wfn = psi4.gradient(method, return_wfn=True,mol=geom); print(f""Ca_ao of {method}: \n"",wfn.Ca_subset(""AO"",""ALL"").np); return 0. psi4.set_output_file(""output.dat"", False); geom_rhf = psi4.geometry(""""""; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; """"""). psi4.set_options({; ""SCF_TYPE"": ""DF"",; ""BASIS"": ""minix"",; ""df_basis_dct"":""def2-svp-ri"",; ""dct_type"":""DF"",; ""cc_type"":""conv"",; ""df_basis_scf"":""def2-universal-jkfit"",; # ""reference"":""uhf"",; # 'scf_type':'pk',; 'mp2_type':'df',; }). to_test=['scf','mp2']; for m in to_test[:]:; psi4.activate(geom_rhf); run_psi4fchk(geom_rhf,m.upper()); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1886:524,test,test,524,https://psicode.org,https://github.com/psi4/psi4/issues/1886,1,['test'],['test']
Testability,"Raise the error that we can't do stability analysis on DFT ""wavefunctions"" before we bother to compute the (potentially very expensive) integrals necessary for this. The same error message is getting raised C-side under the same condition. This commit just raises it sooner, because spending the better part of an an hour computing integrals for no reason is annoying. ## Checklist; - [x] No tests run in addition to quicktests, since this is so simple and mirroring a C-side operation. ## Status; - [x] Ready for review; - [x] Ready for merge",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1337:392,test,tests,392,https://psicode.org,https://github.com/psi4/psi4/pull/1337,1,['test'],['tests']
Testability,"Ran complete test suite, looks ok. Ready to go. Did not have time to address all previous comments.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/737#issuecomment-343598455:13,test,test,13,https://psicode.org,https://github.com/psi4/psi4/pull/737#issuecomment-343598455,1,['test'],['test']
Testability,Ready for merge (if all tests succeed).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1657#issuecomment-500498238:24,test,tests,24,https://psicode.org,https://github.com/psi4/psi4/pull/1657#issuecomment-500498238,1,['test'],['tests']
Testability,Really liking this new github/TravisCI workflow of pull request / automatic testing / fix any remaining problems and let people comment on pull request. TravisCI is already showing its value by finding us some of these bugs.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/228#issuecomment-177017160:76,test,testing,76,https://psicode.org,https://github.com/psi4/psi4/pull/228#issuecomment-177017160,1,['test'],['testing']
Testability,"Reasonably, since this is more than 2 years old, you've deleted the dropbox files. Maybe @psi-rking has the inputs to test if any of the newfangled optimization modes work on these cases. Thanks for reporting, but I'm closing since we probably don't have the info to reconstruct the problem.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/18#issuecomment-182638550:118,test,test,118,https://psicode.org,https://github.com/psi4/psi4/issues/18#issuecomment-182638550,1,['test'],['test']
Testability,"Rebase is done!. > Right, internal build, by adding `ENABLE_gauxc=ON` about here: https://github.com/psi4/psi4/blob/master/.azure-pipelines/azure-pipelines-linux.yml#L135 . And please check there's a gauxc test somewhere in ctests or pytests that runs with smoke or quick -- the ones I noticed were marked long. Thanks for the heads-up! There were no smoke/quick tests for the GauXC interface, so I tagged a couple of the tests in `test\_compositejk.py` as such. The Azure file was updated, as well. . Let's see how the CI responds.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048:206,test,test,206,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2278146048,4,['test'],"['test', 'tests']"
Testability,Rebased and quick tests pass and the new test passes. I do have a local copy of the original branch in case we need to restore it.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2473#issuecomment-2151577114:18,test,tests,18,https://psicode.org,https://github.com/psi4/psi4/pull/2473#issuecomment-2151577114,2,['test'],"['test', 'tests']"
Testability,Rebuild with -DENABLE_erd; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:677: Psi4 not detecting CFOUR. Add `xcfour` to envvar PSIPATH or PATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:710: Psi4 not detecting plugin v2rdm_casscf. Build plugin if necessary and add to envvar PYTHONPATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:762: Psi4 not detecting plugin gpu_dfcc. Build plugin if necessary and add to envvar PYTHONPATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:798: Psi4 not detecting GCP. Add `gcp` to envvar PSIPATH or PATH; SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:909: Psi4 not detecting plugin snsmp2. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_snsmp2); SKIP [1] bin/anaconda3/envs/p4env/lib/python3.6/site-packages/psi4/tests/test_addons.py:925: Psi4 not detecting plugin resp. Build plugin if necessary and add to envvar PYTHONPATH (or rebuild Psi with -DENABLE_resp). ================================================================== warnings summary ==================================================================; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this will raise an error in the future.; if domain == 'qm' and geom is None or geom == []:; /home/henrique/bin/anaconda3/envs/p4env/lib//python3.6/site-packages/psi4/driver/qcdb/molparse/from_arrays.py:304: DeprecationWarning: elementwise == comparison failed; this w,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892:4541,test,tests,4541,https://psicode.org,https://github.com/psi4/psi4/issues/1265#issuecomment-424902892,1,['test'],['tests']
Testability,"Recompiling, I’ll let you know what I find. On Jul 16, 2015, at 10:48 AM, T. Daniel Crawford <notifications@github.com<mailto:notifications@github.com>> wrote:. I believe this is corrected. Please test @fevangelistahttps://github.com/fevangelista . Thanks!. —; Reply to this email directly or view it on GitHubhttps://github.com/psi4/psi4public/issues/132#issuecomment-121978883. ---. This e-mail message (including any attachments) is for the sole use of; the intended recipient(s) and may contain confidential and privileged; information. If the reader of this message is not the intended; recipient, you are hereby notified that any dissemination, distribution; or copying of this message (including any attachments) is strictly; prohibited. If you have received this message in error, please contact; the sender by reply e-mail message and destroy all copies of the; original message (including attachments).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/132#issuecomment-121991365:197,test,test,197,https://psicode.org,https://github.com/psi4/psi4/issues/132#issuecomment-121991365,1,['test'],['test']
Testability,"Recording all the reference values should cover the type-of-calc-being-run logic, as that won't be changing for a given infile. So it should be down to if-present-in-`ref_vals`-then-compare being sufficient. And thanks, @amjames, getting some cc* module psivars onto wfn, as opposed to `P::e` can be tricky, as I learned from cctriples.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/943#issuecomment-376674410:75,log,logic,75,https://psicode.org,https://github.com/psi4/psi4/issues/943#issuecomment-376674410,1,['log'],['logic']
Testability,Reduce the number of tests on Appveyor,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1249:21,test,tests,21,https://psicode.org,https://github.com/psi4/psi4/pull/1249,1,['test'],['tests']
Testability,"Reduced @dspoel test case; ```; molecule LiF {; 1 1; Li 0.000000000 0.000000000 0.000000000; --; -1 1; F 16.000000000 0.000000000 0.000000000; }; set basis cc-pVDZ; set df_scf_guess false; set scf_type direct. energy('scf'); ```; Ends up in ; ```; @RHF iter 99: -93.26608062600357 7.76623e-11 9.86087e-02 DIIS; @RHF iter 100: -93.26608062574179 2.61778e-10 9.86087e-02 DIIS; ```. If you use an augmented basis set, the calculation converges.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1433#issuecomment-465488934:16,test,test,16,https://psicode.org,https://github.com/psi4/psi4/issues/1433#issuecomment-465488934,1,['test'],['test']
Testability,Reference values for PCM excitation energies can be found here: https://gitlab.com/dalton/lsdalton/-/blob/master/test/pcm/pcm_linear_response/reference/opa_hf_H2O_noneq_pcmsolver.out,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006#issuecomment-693011710:113,test,test,113,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693011710,1,['test'],['test']
Testability,"Referring to; http://kojipkgs.fedoraproject.org//work/tasks/6231/5326231/build.log. PSI4 fails to build on the development version of Fedora. The error that occurs is. In file included from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialimpl.h:4:0,; from /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/serialize.cc:2:; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:241:14: error: 'void smartptr::XMLArchive::getAttribute(unsigned int&, const string&)' cannot be overloaded; void getAttribute(unsigned int& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:237:14: error: with 'void smartptr::XMLArchive::getAttribute(size_t&, const string&)'; void getAttribute(size_t& val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:255:14: error: 'void smartptr::XMLArchive::setAttribute(unsigned int, const string&)' cannot be overloaded; void setAttribute(unsigned int val, const std::string& attrname);; ^; /builddir/build/BUILD/psi4.0b4/src/lib/libsmartptr/xmlarchive.h:251:14: error: with 'void smartptr::XMLArchive::setAttribute(size_t, const string&)'; void setAttribute(size_t val, const std::string& attrname);. Fedora 19 has GCC 4.8 and Boost 1.53.0.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/4:79,log,log,79,https://psicode.org,https://github.com/psi4/psi4/issues/4,1,['log'],['log']
Testability,Refreshed all tests/*/output.ref's for the Psi4 release.,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315:14,test,tests,14,https://psicode.org,https://github.com/psi4/psi4/pull/315,1,['test'],['tests']
Testability,"Regarding the PTE test case, I get the following `Integral setup` running the code on `master`:; ```; Using in-core PK algorithm.; Calculation information:; Number of atoms: 1; Number of AO shells: 8; Number of primitives: 50; Number of atomic orbitals: 19; Number of basis functions: 18; ; Integral cutoff 1.00e-12; Number of threads: 1; ```; while this one with the code on this PR:; ```; Using in-core PK algorithm.; Calculation information:; Number of atoms: 1; Number of AO shells: 8; Number of primitives: 55; Number of atomic orbitals: 19; Number of basis functions: 18; Integral cutoff 1.00e-12; Number of threads: 1; ```; The SCF results are the same within 10^-11 The CC results are different already at the first iteration of the T amplitude solver, _i.e._ the MP2 correlation energy. This despite the fact that the SCF energies reported by the two versions at the end of cctransort are the same.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/728#issuecomment-308221334:18,test,test,18,https://psicode.org,https://github.com/psi4/psi4/pull/728#issuecomment-308221334,1,['test'],['test']
Testability,Reminder to finish pinning to 0.3 or resolve tests to allow 0.4 before v1.8. Just making an issue so it's tracked. @mfherbst,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2940:45,test,tests,45,https://psicode.org,https://github.com/psi4/psi4/issues/2940,1,['test'],['tests']
Testability,"Remove ""failing tests"" which do not fail anymore on Azure",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1522:16,test,tests,16,https://psicode.org,https://github.com/psi4/psi4/pull/1522,1,['test'],['tests']
Testability,Remove third Travis test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1552:20,test,test,20,https://psicode.org,https://github.com/psi4/psi4/pull/1552,1,['test'],['test']
Testability,"Removed the DETCI refs from the docs table, and in select ccsd. . I also updated occ psivars. It was setting `CURRENT CORRELATION ENERGY` for `{df/cd}-ccsd(t)` but it was not setting `CCSD(T) CORRELATION ENERGY`. The test now runs through a more complete set of cross checking. Testing conv (fnocc, ccenergy) and df/cd (fnocc, occ) both with and without frozen core. . Note: The changes to occ required a rebuild, and I am noticing when doing df/cd (either occ or fnocc module) I get a message printed to `stdout`""No atoms detected, returning"". Are we aware of this?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/966#issuecomment-381827387:217,test,test,217,https://psicode.org,https://github.com/psi4/psi4/pull/966#issuecomment-381827387,2,"['Test', 'test']","['Testing', 'test']"
Testability,"Reported by a user in the Forum: http://forum.psicode.org/t/multithreaded-df-ccsd-t-gradient-test-fails/2200. Outputs with `print 3` for the `dfccsd-t-grad` test with conda's `1.4rc1+2d37164`; [1 thread](https://github.com/psi4/psi4/files/6655021/single.txt); [2 threads](https://github.com/psi4/psi4/files/6655018/parallel.txt). Visible differences in the `3-center <..> Density Gradient` parts.; <img width=""1101"" alt=""Screenshot 2021-06-15 at 12 52 56"" src=""https://user-images.githubusercontent.com/1648640/122040872-a3d1d580-cdd8-11eb-9b57-904640b63c05.png"">",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2192:93,test,test-fails,93,https://psicode.org,https://github.com/psi4/psi4/issues/2192,2,['test'],"['test', 'test-fails']"
Testability,"Reproduce with the below env.yml file:. ```yaml; channels:; - conda-forge; - psi4. dependencies:; - python =3.9; - datamol ; - numpy; - scikit-learn; - pytorch >=1.10.2; - tqdm; - jupyterlab; - openmm; - psi4 >=1.6; ```. then `mamba env create -n tmp_psi4 -f env.yml` and the error is. ```; conda-forge/linux-64 Using cache; conda-forge/noarch Using cache; psi4/linux-64 No change; psi4/noarch No change. Looking for: ['python=3.10', 'datamol', 'numpy', 'scikit-learn', ""pytorch[version='>=1.10.2']"", 'tqdm', 'jupyterlab', 'openmm', ""psi4[version='>=1.6']""]. Encountered problems while solving:; - nothing provides intel-openmp needed by psi4-1.6+77475b5-py39hceaf722_0; ```. I tried multiple combination of python and psi4 versions without success. Note that the above has been only tested on a linux machine.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2621:784,test,tested,784,https://psicode.org,https://github.com/psi4/psi4/issues/2621,1,['test'],['tested']
Testability,"Rest of a full test suite is clean, but the methane analytic freq failing for me locally, too. Judging from https://travis-ci.org/psi4/psi4/jobs/476480673#L2805 and similar, the eigenvector alignment is actually working properly (the diffs would show values like .3 if not) and it's ~0.02 differences in the eigenvectors themselves that are the trouble. ```; Degenerate modes reordered: 0-->2, 2-->0, 3-->4, 4-->3, 6-->8, 8-->6; Degenerate modes reordered: 1-->2, 2-->1; q : False; 	exp: ; [[-0.0000 -0.3972 -0.0000 0.0000 0.0000 0.0000 0.0000 -0.0000 -0.3061]; [ 0.0000 -0.0000 -0.3972 0.0000 -0.0000 -0.0000 0.0000 -0.3061 -0.0000]; [ 0.3972 -0.0000 -0.0000 -0.0000 0.0000 -0.0000 0.3061 -0.0000 -0.0000]; [ 0.0000 0.5585 -0.0000 0.0000 0.5000 -0.0000 -0.0000 -0.0000 -0.0160]; [-0.3052 -0.0000 0.1268 0.2887 0.0000 0.4082 0.3960 0.5441 -0.0000]; [-0.3426 -0.0000 0.3052 0.4082 0.0000 -0.2887 -0.2641 -0.3960 -0.0000]; [ 0.0000 0.5585 -0.0000 0.0000 -0.5000 -0.0000 -0.0000 0.0000 -0.0160]; [ 0.3052 -0.0000 0.1268 -0.2887 0.0000 -0.4082 -0.3960 0.5441 -0.0000]; [-0.3426 -0.0000 -0.3052 0.4082 0.0000 -0.2887 -0.2641 0.3960 -0.0000]; [-0.3052 0.1268 0.0000 -0.2887 0.0000 -0.4082 0.3960 -0.0000 0.5441]; [ 0.0000 -0.0000 0.5585 0.0000 -0.5000 0.0000 0.0000 -0.0160 -0.0000]; [-0.3426 0.3052 -0.0000 -0.4082 0.0000 0.2887 -0.2641 -0.0000 -0.3960]; [ 0.3052 0.1268 -0.0000 0.2887 0.0000 0.4082 -0.3960 0.0000 0.5441]; [ 0.0000 -0.0000 0.5585 0.0000 0.5000 0.0000 0.0000 -0.0160 -0.0000]; [-0.3426 -0.3052 -0.0000 -0.4082 0.0000 0.2887 -0.2641 0.0000 0.3960]]; 	obs: ; [[ 0.0002 -0.3972 -0.0007 0.0000 -0.0000 -0.0000 -0.0008 -0.0128 -0.3058]; [ 0.0017 0.0007 -0.3972 -0.0000 -0.0000 0.0000 -0.0000 -0.3058 0.0128]; [ 0.3972 0.0002 0.0017 -0.0000 0.0000 -0.0000 0.3061 -0.0000 -0.0008]; [-0.0003 0.5585 0.0010 -0.0000 0.5000 -0.0000 -0.0000 -0.0007 -0.0159]; [-0.3058 -0.0004 0.1255 0.2887 0.0000 0.4082 0.3960 0.5436 -0.0238]; [-0.3439 -0.0007 0.3038 0.4082 0.0000 -0.2887 -0.2641 -0.3956 0.0172]; [-",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1458#issuecomment-452057984:15,test,test,15,https://psicode.org,https://github.com/psi4/psi4/pull/1458#issuecomment-452057984,1,['test'],['test']
Testability,Restarted the timed out test cases. This should be ready to go after the tests pass.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/679#issuecomment-296413636:24,test,test,24,https://psicode.org,https://github.com/psi4/psi4/pull/679#issuecomment-296413636,2,['test'],"['test', 'tests']"
Testability,Review all test cases in manual for accuracy,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/136:11,test,test,11,https://psicode.org,https://github.com/psi4/psi4/issues/136,1,['test'],['test']
Testability,"Right @andysim, the 3c test was shuffled btwn PRs. The other had 3c but no pytest. This has pytest but no 3c. Either order would have been fine, as nothing's counting on the pytest to pass at this point (and it wouldn't even have run if you didn't have gcp installed), which is good b/c the threading test fails in the multi-pytest mode. So moot, but that's what was going on.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/627#issuecomment-283435151:23,test,test,23,https://psicode.org,https://github.com/psi4/psi4/pull/627#issuecomment-283435151,2,['test'],['test']
Testability,"Right now, our SCF instability following algorithm is the following, very dumb one:; * Perform SCF; * Check instability; * If unstable, rotate in the direction of the unstable vector, according to some user-specified magnitude, then repeat; * If unstable _with a new eigenvalue_, increment the magnitude. It must have been bad. We can guess more intelligently. A _smarter_ algorithm would look like:; * Perform SCF; * Check instability; * If unstable, rotate in the direction of the unstable vector, according to some user-specified magnitude, then...; * Do a line fit of the SCF energy in the direction of the unstable vector. The instability analysis gave us the first two terms of the Taylor expansion, analytically. Given that, we can then use the SCF energy at the rotated build to fit the _third_ derivative. It may also be possible to project the SCF gradient into the unstable direction. We can then use both pieces of information to fit the third and fourth derivative. (Some numerical tests will be necessary to determine whether the fourth dimensional fit is worthwhile, and good rotation magnitudes.); * We then find the zeroes of f'(x)/x. This is a quadratic, and we can solve the roots analytically. If both are real, evaluate f at both zeroes to find a guess for the true minimum, and continue SCF at the guess rotation. If both are imaginary, a degree four polynomial fit predicts that f(x) has no zeroes, and our fit is unreliable. Print a warning and the current orbitals.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3045:995,test,tests,995,https://psicode.org,https://github.com/psi4/psi4/issues/3045,1,['test'],['tests']
Testability,"Run.log was a dirty hack that I came up with, to allow the test info to stream to stdout, but have a file to be able to parse to identify failures after the fact. The PIPE machinery in Python's subprocess will allow the same behavior.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/247#issuecomment-183716956:4,log,log,4,https://psicode.org,https://github.com/psi4/psi4/pull/247#issuecomment-183716956,2,"['log', 'test']","['log', 'test']"
Testability,"Run:; ```; molecule h2o {; 0 1; o; h 1 0.958; h 1 0.958 2 104.4776 ; }. wfn = energy('scf/cc-pvdz', return_wfn=True)[1]; print(wfn.Fa_subset(""MO"").nph); ```. The result MO basis Fock matrix is not diagonal, as expected. The correct way to transform the SO basis Fock matrix into the MO basis matrix is contraction against the C coefficient matrices. This is not what the `Fa_subset` function does. It instead goes through [a series of matrix mulitplications involving the overlap matrix](https://github.com/psi4/psi4/blob/master/psi4/src/psi4/libmints/wavefunction.cc#L1047-L1050). This is the correct transformation rule for the density matrix. Not-so-coincidentally, `Da_subset` goes through exactly the same function, where this behavior is correct. If you try to use the same logic for both helpers, you're going to get one of them wrong, guaranteed. While the mechanism of the bug is clear to me, I'm not sure what the best fix should be. Perhaps we should intercept ""MO"" as a special case in `Fa_subset` so it never sees the `matrix_subset_helper`? Under the hood, the code would return `Fa_->transform(Ca_)`.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1989:780,log,logic,780,https://psicode.org,https://github.com/psi4/psi4/issues/1989,1,['log'],['logic']
Testability,"Running CMake on my laptop with Fedora 32 results in; ```; -- Performing Test CMAKE_CXX_FLAGS [-xHost] - Failed; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Failed; -- Performing Test CMAKE_CXX_FLAGS [/arch:AVX2] - Failed; CMake Warning at cmake/psi4OptionsTools.cmake:108 (message):; Option unfulfilled as none of -xHost;-march=native;/arch:AVX2 valid; Call Stack (most recent call first):; cmake/psi4OptionsTools.cmake:162 (add_C_or_CXX_flags); cmake/psi4OptionsTools.cmake:187 (add_CXX_flags); cmake/psi4OptionsTools.cmake:202 (add_flags); CMakeLists.txt:134 (option_with_flags); ```; CMakeError.log is; ```; Performing C SOURCE FILE Test test_option failed with the following output:; Change Dir: /home/work/psi4/objdir/CMakeFiles/CMakeTmp. Run Build Command(s):/usr/bin/gmake cmTC_686f3/fast && /usr/bin/gmake -f CMakeFiles/cmTC_686f3.dir/build.make CMakeFiles/cmTC_686f3.dir/build; gmake[1]: Entering directory '/home/work/psi4/objdir/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_686f3.dir/src.c.o; /usr/lib64/ccache/cc -Dtest_option -xHost -xHost -o CMakeFiles/cmTC_686f3.dir/src.c.o -c /home/work/psi4/objdir/CMakeFiles/CMakeTmp/src.c; cc: error: language Host not recognized; cc: error: language Host not recognized; gmake[1]: *** [CMakeFiles/cmTC_686f3.dir/build.make:86: CMakeFiles/cmTC_686f3.dir/src.c.o] Error 1; gmake[1]: Leaving directory '/home/work/psi4/objdir/CMakeFiles/CMakeTmp'; gmake: *** [Makefile:141: cmTC_686f3/fast] Error 2. Source file was:; int main(void) { return 0; }; ```; making it seem that the CMake files aren't even testing the flags. If I change the order in CMakeLists.txt so that `-march=native` comes first, the output is correct:; ```; -- Setting option ENABLE_XHOST: ON; -- Performing Test CMAKE_C_FLAGS [-march=native] - Success, Appending; -- Performing Test CMAKE_CXX_FLAGS [-march=native] - Success, Appending; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2023:73,Test,Test,73,https://psicode.org,https://github.com/psi4/psi4/issues/2023,8,"['Test', 'log', 'test']","['Test', 'log', 'testing']"
Testability,Running `ctest -L quick` results in:. ```; Test project /gpfs/alpine2/scratch/jslj23/chm205/psi4/build; Start 2: casscf-fzc-sp; 1/185 Test #2: casscf-fzc-sp .................... Passed 3.47 sec; Start 3: casscf-semi; 2/185 Test #3: casscf-semi ...................... Passed 2.70 sec; Start 4: casscf-sa-sp; 3/185 Test #4: casscf-sa-sp ..................... Passed 18.40 sec; Start 5: ao-casscf-sp; 4/185 Test #5: ao-casscf-sp ..................... Passed 3.72 sec; Start 6: casscf-sp; 5/185 Test #6: casscf-sp ........................ Passed 8.16 sec; Start 7: castup1; 6/185 Test #7: castup1 .......................... Passed 2.61 sec; Start 10: cbs-delta-energy; 7/185 Test #10: cbs-delta-energy ................. Passed 21.39 sec; Start 13: cbs-xtpl-energy; 8/185 Test #13: cbs-xtpl-energy .................. Passed 23.30 sec; Start 14: cbs-xtpl-freq; 9/185 Test #14: cbs-xtpl-freq .................... Passed 44.45 sec; Start 15: cbs-xtpl-gradient; 10/185 Test #15: cbs-xtpl-gradient ................ Passed 12.67 sec; Start 20: cbs-xtpl-dict; 11/185 Test #20: cbs-xtpl-dict .................... Passed 45.25 sec; Start 21: cc1; 12/185 Test #21: cc1 .............................. Passed 6.13 sec; Start 27: cc13b; 13/185 Test #27: cc13b ............................ Passed 7.25 sec; Start 31: cc15; 14/185 Test #31: cc15 ............................. Passed 4.23 sec; Start 33: cc17; 15/185 Test #33: cc17 ............................. Passed 8.09 sec; Start 34: cc18; 16/185 Test #34: cc18 ............................. Passed 45.65 sec; Start 44: cc28; 17/185 Test #44: cc28 ............................. Passed 274.18 sec; Start 48: cc31; 18/185 Test #48: cc31 ............................. Passed 367.81 sec; Start 49: cc32; 19/185 Test #49: cc32 ............................. Passed 3.80 sec; Start 57: cc4; 20/185 Test #57: cc4 .............................. Passed 9.40 sec; Start 67: cc49; 21/185 Test #67: cc49 ............................. Passed 18.04 sec; Start 79: cc8; 22/185 Test #,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930:43,Test,Test,43,https://psicode.org,https://github.com/psi4/psi4/issues/3223#issuecomment-2373056930,11,['Test'],['Test']
Testability,"Running larger calculations with scf_type pk gives me lots and lots of error messages; ```; $ psi4; thread already exists.; thread already exists.; thread already exists.; ```; and so on. These seem to arise from src/psi4/libpsio/aio_handler.cc. I'm wondering if these really are errors, if they should be printed, and whether stdout instead of the log file is the right place to do it.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/596:349,log,log,349,https://psicode.org,https://github.com/psi4/psi4/issues/596,1,['log'],['log']
Testability,"Running my example with a debug build and #2700 results in this log:; ```; LSEEK failed. Error description from the OS: : Bad file descriptor; Error in PSIO_WT_TOCLEN()! Cannot seek vol[0] to its beginning, unit 102. Traceback (most recent call last):; File ""/home/gytibor/orca_bcc/../p4debug/bin/psi4"", line 338, in <module>; exec(content); File ""<string>"", line 192, in <module>; File ""/home/gytibor/p4debug/lib/psi4/driver/driver.py"", line 501, in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); File ""/home/gytibor/p4debug/lib/psi4/driver/procrouting/proc.py"", line 2820, in run_bccd; sort_func(ref_wfn). RuntimeError:; Fatal Error: PSIO Error; Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on line: 113; The most recent 5 function calls were:. psi::PsiException::PsiException(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int); psi::PSIO::wt_toclen(unsigned long, unsigned long); psi::PSIO::write(unsigned long, char const*, char*, unsigned long, psi::psio_address, psi::psio_address*); psi::DPD::file4_mat_irrep_wrt(psi::dpdfile4*, int). Printing out the relevant lines from the Psithon --> Python processed input file:; core.set_global_option(""REFERENCE"", ""RHF""); core.set_global_option(""SCF_TYPE"", ""PK""); core.set_global_option(""INTS_TOLERANCE"", 1.0E-14); core.set_global_option(""E_CONVERGENCE"", 1.0E-10); core.set_global_option(""D_CONVERGENCE"", 1.0E-10); --> energy('BCCD'). !----------------------------------------------------------------------------------!; ! !; ! Fatal Error: PSIO Error !; ! Error occurred in file: /home/gytibor/psi4/psi4/src/psi4/libpsio/toclen.cc on !; ! line: 113 !; ! The most recent 5 function calls were: !; ! psi::PsiException::PsiException(std::__cxx11::basic_string<char, !; ! std::char_traits<char>, std::allocator<char> >, char const*, int) !; ! psi::PSIO::wt_toclen(unsigned long, unsigned long) !; ! psi::PSIO::write(unsigned long, char con",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204:64,log,log,64,https://psicode.org,https://github.com/psi4/psi4/issues/2261#issuecomment-1226239204,1,['log'],['log']
Testability,"Running the following input file; ```; molecule {; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }. set {; scf_type mem_df; basis cc-pvdz; num_frozen_uocc 4; mp2_type df; }. analytic = gradient(""mp2""); findif = gradient(""mp2"", dertype=0). compare_matrices(analytic, findif, 4, ""DF-MP2 Gradient""); ```. gives me. ```; Expected:; [[-0. 0.000000000003 -0.034538336725]; [ 0. -0.035340551119 0.017269168364]; [ 0. 0.035340551116 0.017269168361]]; Observed:; [[ 0. 0.000000000422 -0.029704789758]; [ 0. -0.030742173112 0.014852395042]; [ 0. 0.030742172689 0.014852394715]]; Difference (passed elements are zeroed):; [[ 0. 0. 0.004833546968]; [ 0. 0.004598378007 -0.002416773321]; [ 0. -0.004598378426 -0.002416773646]]; ```. So we have a third decimal place error(!) in DF-MP2 frozen virtual gradients. Frozen core gradients test fine. @loriab, take note of this during your standardization and testing pass. Core developers, assign this to me. If it's a simple fix, this will be part of DFGrad II. Otherwise, this will be DFGrad III. I'm also requesting, given the severity of this bug, that it be made a Psi 1.4 target.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1916:816,test,test,816,https://psicode.org,https://github.com/psi4/psi4/issues/1916,2,['test'],"['test', 'testing']"
Testability,"Running the same test but with different options is a perfect reason to write a pytest rather than a C-test, and no `output.ref` are needed in that case. If you can't even compile Psi, I can write the Pytest myself and submit a PR to your branch, because at least I can test it easily. Thanks for the debugging thus far!",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2411#issuecomment-1016843480:17,test,test,17,https://psicode.org,https://github.com/psi4/psi4/pull/2411#issuecomment-1016843480,3,['test'],['test']
Testability,"Ryan has seen some test case failures because of IO issues from tests running in parallel. This is (T), so a possibility. I've set the nightly build script to run in serial tonight, so we'll see if this gets pinned down.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/121#issuecomment-123504435:19,test,test,19,https://psicode.org,https://github.com/psi4/psi4/issues/121#issuecomment-123504435,2,['test'],"['test', 'tests']"
Testability,SAPT test suite failures on big-endian architectures,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1462:5,test,test,5,https://psicode.org,https://github.com/psi4/psi4/issues/1462,1,['test'],['test']
Testability,SED [ 19%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv fc: fnocc-ene0] PASSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv ae: fnocc-ene0] PASSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv fc: * occ -ene0] PASSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf conv fc: * occ -ene0] PASSED [ 21%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf conv fc: * occ -ene0] PASSED [ 21%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf df fc: dfocc-ene0] PASSED [ 23%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf df fc: dfocc-ene0] PASSED [ 23%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf df fc: dfocc-ene0] PASSED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf df ae: dfocc-ene0] PASSED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df fc: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_ene,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:5175,test,tests,5175,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,SED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf df ae: dfocc-ene0] PASSED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df fc: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf cd/df fc: dfocc-ene0] PASSED [ 28%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf cd/df fc: dfocc-ene0] PASSED [ 28%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf cd/df fc: dfocc-ene0] PASSED [ 29%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf cd/df ae: dfocc-ene0] PASSED [ 29%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf cd/df ae: dfocc-ene0] PASSED [ 29%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf cd/df ae: dfocc-ene0] PASSED [ 30%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf cd fc: * dfocc-ene0] PASSED [ 30%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf cd fc: * dfocc-ene0] PASSED [ 31%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf cd fc: * dfocc-ene0] PASSED [ 31%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf cd ae: * dfocc-ene0] PASSED [ 31%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf cd ae: * dfocc-ene0] PASSED [ 32%]; ../tests/pytests/test_mp2.py::test_m,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:6245,test,tests,6245,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,SED [ 71%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df fc: dfocc-grd1] PASSED [ 71%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df fc: dfocc-grd0] PASSED [ 72%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df fc: dfocc-grd1] PASSED [ 72%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df fc: dfocc-grd0] PASSED [ 72%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf df ae: dfocc-grd1] PASSED [ 73%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf df ae: dfocc-grd0] PASSED [ 73%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df ae: dfocc-grd1] PASSED [ 74%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df ae: dfocc-grd0] PASSED [ 74%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df ae: dfocc-grd1] PASSED [ 75%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df ae: dfocc-grd0] PASSED [ 75%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd fc: * dfocc-grd1] PASSED [ 75%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd fc: * dfocc-grd0] PASSED [ 76%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf cd fc: * dfocc-grd1] PASSED [ 76%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf cd fc: * dfocc-grd0] PASSED [ 77%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf cd fc: * dfocc-grd1] PASSED [ 77%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf cd fc: * dfocc-grd0] PASSED [ 77%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd ae: * dfocc-grd1] PASSED [ 78%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd ae: * dfocc-grd0] PASSED [ 78%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf cd ae: * dfocc-grd1] PASSED [ 79%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf cd ae: * dfocc-grd0] PASSED [ 79%]; ../tests/pytests/test_,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:17593,test,tests,17593,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,"SOSCF is not implemented for DFT as we do not have exact DFT Hessians yet. That's odd that it seg faults however, it should call the base HF SOSCF method and throw an error. I'll see if I can fix this. . -Daniel Smith; Sent from my iPhone. . > On Feb 16, 2016, at 05:21, Holger Kruse notifications@github.com wrote:; > ; > version: Rev {master} 0d10de8; > ; > After entering the SOSCF psi4 exists with a segmentation fault. It prints the soscf header if soscf_print true. Occurs e.g. when I run soscf1 test case with PBE instead of HF.; > ; > I don't know if SOSCF should work with DFT or not.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/256#issuecomment-184648840:502,test,test,502,https://psicode.org,https://github.com/psi4/psi4/issues/256#issuecomment-184648840,1,['test'],['test']
Testability,SSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv ae: fnocc-ene0] PASSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv fc: * occ -ene0] PASSED [ 20%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf conv fc: * occ -ene0] PASSED [ 21%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf conv fc: * occ -ene0] PASSED [ 21%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf conv ae: * occ -ene0] PASSED [ 22%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf df fc: dfocc-ene0] PASSED [ 23%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf df fc: dfocc-ene0] PASSED [ 23%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf df fc: dfocc-ene0] PASSED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf df ae: dfocc-ene0] PASSED [ 24%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf df ae: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df fc: dfocc-ene0] PASSED [ 25%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df fc: dfocc-ene0] PASSED [ 26%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/df ae: dfocc-ene0] PASSED [ 27%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf cd/df fc: dfocc-ene0] PASSED [ 28%]; ../tests/pytests/test_mp2.py::test_mp2_e,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:5271,test,tests,5271,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,SSED [ 34%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rhf pk/cd ae: * dfocc-ene0] PASSED [ 34%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 uhf pk/cd ae: * dfocc-ene0] PASSED [ 34%]; ../tests/pytests/test_mp2.py::test_mp2_energy_module[mp2 rohf pk/cd ae: * dfocc-ene0] PASSED [ 35%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rhf conv fc: dd -ene0] PASSED [ 35%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 uhf conv fc: dd -ene0] PASSED [ 36%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rohf conv fc: dd -ene0] PASSED [ 36%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rhf conv ae: dd -ene0] PASSED [ 36%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 uhf conv ae: dd -ene0] PASSED [ 37%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rohf conv ae: dd -ene0] PASSED [ 37%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rhf df fc: dd -ene0] PASSED [ 38%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 uhf df fc: dd -ene0] PASSED [ 38%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rohf df fc: dd -ene0] PASSED [ 38%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rhf df ae: dd -ene0] PASSED [ 39%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 uhf df ae: dd -ene0] PASSED [ 39%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rohf df ae: dd -ene0] PASSED [ 40%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rhf cd fc: dd -ene0] XFAIL [ 40%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 uhf cd fc: dd -ene0] PASSED [ 40%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rohf cd fc: dd -ene0] PASSED [ 41%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rhf cd ae: dd -ene0] XFAIL [ 41%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 uhf cd ae: dd -ene0] PASSED [ 42%]; ../tests/pytests/test_mp2.py::test_mp2_energy_default[mp2 rohf cd ae: dd ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:8595,test,tests,8595,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,SSED [ 70%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf df fc: dfocc-grd0] PASSED [ 71%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df fc: dfocc-grd1] PASSED [ 71%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df fc: dfocc-grd0] PASSED [ 72%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df fc: dfocc-grd1] PASSED [ 72%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df fc: dfocc-grd0] PASSED [ 72%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf df ae: dfocc-grd1] PASSED [ 73%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf df ae: dfocc-grd0] PASSED [ 73%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df ae: dfocc-grd1] PASSED [ 74%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf df ae: dfocc-grd0] PASSED [ 74%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df ae: dfocc-grd1] PASSED [ 75%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf df ae: dfocc-grd0] PASSED [ 75%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd fc: * dfocc-grd1] PASSED [ 75%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd fc: * dfocc-grd0] PASSED [ 76%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf cd fc: * dfocc-grd1] PASSED [ 76%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf cd fc: * dfocc-grd0] PASSED [ 77%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf cd fc: * dfocc-grd1] PASSED [ 77%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rohf cd fc: * dfocc-grd0] PASSED [ 77%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd ae: * dfocc-grd1] PASSED [ 78%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 rhf cd ae: * dfocc-grd0] PASSED [ 78%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_module[mp2 uhf cd ae: * dfocc-grd1] PASSED [ 79%]; ../tests/pytests/test_m,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:17495,test,tests,17495,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,SSED [ 82%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf conv ae: dd -grd1] PASSED [ 83%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf conv ae: dd -grd0] PASSED [ 83%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf conv ae: dd -grd1] PASSED [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf conv ae: dd -grd0] PASSED [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf conv ae: dd -grd1] XFAIL [ 84%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf conv ae: dd -grd0] PASSED [ 85%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df fc: dd -grd1] PASSED [ 85%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df fc: dd -grd0] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df fc: dd -grd1] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df fc: dd -grd0] PASSED [ 86%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df fc: dd -grd1] XFAIL [ 87%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df fc: dd -grd0] PASSED [ 87%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df ae: dd -grd1] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf df ae: dd -grd0] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df ae: dd -grd1] PASSED [ 88%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 uhf df ae: dd -grd0] PASSED [ 89%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df ae: dd -grd1] XFAIL [ 89%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rohf df ae: dd -grd0] PASSED [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf cd fc: dd -grd1] XFAIL [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_default[mp2 rhf cd fc: dd -grd0] XFAIL [ 90%]; ../tests/pytests/test_mp2.py::test_mp2_gradient_defaul,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841:20345,test,tests,20345,https://psicode.org,https://github.com/psi4/psi4/pull/1850#issuecomment-605511841,1,['test'],['tests']
Testability,Scf guess test,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3052:10,test,test,10,https://psicode.org,https://github.com/psi4/psi4/pull/3052,1,['test'],['test']
Testability,Second-order SCF is now partially implemented (b8315f8b4e0645f7fd15f24ae099ca6968d91809). If anyone has some brutal RHF/UHF/ROHF test cases please send them over or try them out. The current TODO list:; - [x] RHF capability; - [x] UHF capability; - [x] ROHF capability; - [x] The JK algorithm must support non-symmetric density matrices (e.g. not the PK algorithm); - [x] A few brutal tests cases for longtest; - [x] Documentation,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/155:129,test,test,129,https://psicode.org,https://github.com/psi4/psi4/issues/155,2,['test'],"['test', 'tests']"
Testability,"Seems that every time we compare values in input (compare_values() function in test cases) and the comparison fails, we get a segfault. Program received signal SIGSEGV, Segmentation fault.; subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; 955 ++ tstate->trash_delete_nesting;; Missing separate debuginfos, use: debuginfo-install glibc-2.17-55.el7_0.1.x86_64 keyutils-libs-1.5.8-3.el7.x86_64 krb5-libs-1.11.3-49.el7.x86_64 libcom_err-1.42.9-4.el7.x86_64 libgcc-4.8.2-16.2.el7_0.x86_64 libselinux-2.2.2-6.el7.x86_64 libstdc++-4.8.2-16.2.el7_0.x86_64 openssl-libs-1.0.1e-34.el7_0.6.x86_64 pcre-8.32-12.el7.x86_64 xz-libs-5.1.2-8alpha.el7.x86_64 zlib-1.2.7-13.el7.x86_64; (gdb) where; #0 subtype_dealloc (self=0x55d9848) at Objects/typeobject.c:955; #1 0x0000000003c5ab09 in boost::python::converter::shared_ptr_deleter::operator()(void const*) (); #2 0x0000000000ca0427 in boost::detail::sp_counted_impl_pd<void*, boost::python::converter::shared_ptr_deleter>::dispose (this=0x5000410). ```; at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_impl.hpp:153; ```; #3 0x0000000000c22169 in boost::detail::sp_counted_base::release (. ```; this=0x5000410); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/sp_counted_base_gcc_x86.hpp:146; ```; #4 0x0000000000c221ef in boost::detail::shared_count::~shared_count (. ```; this=0x49dbb88 <psi::Process::environment+72>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/detail/shared_count.hpp:371; ```; #5 0x0000000000cc4170 in boost::shared_ptrpsi::Molecule::~shared_ptr (. ```; this=0x49dbb80 <psi::Process::environment+64>); at /theoryfs2/ds/sherrill/psi4/build-icpc-debug-rhel7/boost/boost_1_55_0/boost/smart_ptr/shared_ptr.hpp:328; ```; #6 0x0000000000f17f9d in psi::Process::Environment::~Environment (. ```; this=0x49dbb40 <psi::Process::environment>); at /theoryfs2/ds/sherrill/psi4/include/proces",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/64:79,test,test,79,https://psicode.org,https://github.com/psi4/psi4/issues/64,1,['test'],['test']
Testability,Seems we should get a He triplet test cases and run various correlation modules. DCT MP2 guess also gives alpha-alpha=0.0; For RI-MP2 with ORCA I get -0.004692354 Eh,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1995#issuecomment-682364344:33,test,test,33,https://psicode.org,https://github.com/psi4/psi4/issues/1995#issuecomment-682364344,1,['test'],['test']
Testability,Segfault after mrcc-optfreq test case failure,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/138:28,test,test,28,https://psicode.org,https://github.com/psi4/psi4/issues/138,1,['test'],['test']
Testability,Segfaults in DFHelper during testsuite,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1457:29,test,testsuite,29,https://psicode.org,https://github.com/psi4/psi4/issues/1457,1,['test'],['testsuite']
Testability,Segmentation fault in test opt-irc-1 and opt-irc-2,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/463:22,test,test,22,https://psicode.org,https://github.com/psi4/psi4/issues/463,1,['test'],['test']
Testability,"Several dfocc test cases have failed since the summer when we cleared out most of them. Namely, dfomp2p5-grad1, dfomp3-grad2, dfomp2p5-2, and dfomp3-2. Seems to happend on multiple machines: https://testboard.org/cdash/testSummary.php?project=3&name=dfomp2p5-2&date=2015-11-17. @bozkaya, could you take a look? Thanks.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/190:14,test,test,14,https://psicode.org,https://github.com/psi4/psi4/issues/190,3,['test'],"['test', 'testSummary', 'testboard']"
Testability,"Several downstream codes do not recognize the new SCF types `mem_DF` and `disk_DF` (introduced in #961) when set directly within the input file. I've attached [a tarball](https://github.com/psi4/psi4/files/2002517/eff-scftype-df.tar.gz) containing several such tests, adapted directly from the existing Psi4 test suite, which attempt to highlight these problems. I've also attached the summary file (from the tarball) separately for easy web viewing [here](https://github.com/psi4/psi4/files/2002535/summary.txt). Additionally worth note is that a few of these downstream codes fail gracefully (e.g., FNOCC for `scf_type mem_df`, as it assumes a disk algorithm) with helpful error messages, but others do not (e.g., CISD energies fail with PSIO errors and DLDF+D09 gradients segfault). However, if failure is unavoidable, we should probably at least be verbose in the error message.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1021:261,test,tests,261,https://psicode.org,https://github.com/psi4/psi4/issues/1021,2,['test'],"['test', 'tests']"
Testability,Should I also modify `tests/pytest/test_addons.py` to mirror the contents of `pcmsolver/scf/input.dat` so that it doesn't rely on `P::e.globals`?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/697#issuecomment-300761080:22,test,tests,22,https://psicode.org,https://github.com/psi4/psi4/issues/697#issuecomment-300761080,1,['test'],['tests']
Testability,"Should be doable: in ERKALE I run an eigendecomposition of a 100x100 random matrix in sequential mode and repeat the calculation in a parallel OpenMP section. If the decompositions of the individual threads don’t match the sequential one, then LAPACK is not thread safe. Susi Lehtola; Sent from my phone so excuse my brevity. On 20 Jan 2019, at 15.03, Michael Banck <notifications@github.com<mailto:notifications@github.com>> wrote:. Couldn't you have a configure-time check for this (in case it can be broken down to a very small testcase), same as is usual in autoconf-world?. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/psi4/psi4/issues/1461#issuecomment-455864865>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AArOJ2QSkRaIyanSHwFBRQyrKH2-9W1_ks5vFGkggaJpZM4ZxGFP>.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1461#issuecomment-455865306:531,test,testcase,531,https://psicode.org,https://github.com/psi4/psi4/issues/1461#issuecomment-455865306,1,['test'],['testcase']
Testability,"Should the code in this fork be correct now? I've published some USAPT0 results, so I'd like to test how severe the bug in the old code was (at least for my results).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1948#issuecomment-656178123:96,test,test,96,https://psicode.org,https://github.com/psi4/psi4/pull/1948#issuecomment-656178123,1,['test'],['test']
Testability,"Show seg faults, buffer overflows, and doubly linked list errors: https://travis-ci.org/psi4/psi4/jobs/471402754. Azure Gibbs failure looks like:; ```; 2018-12-23T01:04:44.9842835Z 61/142 Test #210: gibbs ............................***Failed 33.09 sec; 2018-12-23T01:04:44.9843015Z Optimizer: Optimization complete!; 2018-12-23T01:04:44.9843106Z 	N2 Gibbs Free Energy..............................................PASSED; 2018-12-23T01:04:44.9843160Z Optimizer: Optimization complete!; 2018-12-23T01:04:44.9843216Z 	H2O Gibbs Free Energy.............................................PASSED; 2018-12-23T01:04:44.9843489Z Optimizer: Optimization complete!; 2018-12-23T01:04:44.9843563Z 	NH3 Gibbs Free Energy.............................................PASSED; 2018-12-23T01:04:44.9843609Z Traceback (most recent call last):; 2018-12-23T01:04:44.9843656Z File ""D:/a/1/b/build/stage/bin/psi4"", line 287, in <module>; 2018-12-23T01:04:44.9843903Z exec(content); 2018-12-23T01:04:44.9843947Z File ""<string>"", line 71, in <module>; 2018-12-23T01:04:44.9843996Z File ""D:\a\1\b\build\stage\lib\psi4\driver\driver.py"", line 1096, in optimize; 2018-12-23T01:04:44.9844066Z moleculeclone.update_geometry(); 2018-12-23T01:04:44.9844095Z ; 2018-12-23T01:04:44.9844134Z RuntimeError: ; 2018-12-23T01:04:44.9844201Z Fatal Error: User specified point group (C2v(Z)) is not a subgroup of the highest detected point group (Cs(Z)). If this is because the symmetry increased, try to start the calculation again from the last geometry, after checking any symmetry-dependent input, such as DOCC.; 2018-12-23T01:04:44.9844301Z Error occurred in file: D:\a\1\s\psi4\src\psi4\libmints\molecule.cc on line: 2016; 2018-12-23T01:04:44.9844337Z ; 2018-12-23T01:04:44.9844403Z Exit Status: infile ( 1 ); autotest ( None ); sowreap ( None ); overall ( 1 ); ```. as shown in the logs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-449670954:188,Test,Test,188,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-449670954,2,"['Test', 'log']","['Test', 'logs']"
Testability,Simplified test case; ```; molecule dimer {; 0 1; Ne 0.0 0.0 0.0; --; 0 1; Xe 0.0 0.0 3.0; }. set {; basis def2-svp; print 2; }. set guess core; Eall = energy('scf'); ```,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1433#issuecomment-447940882:11,test,test,11,https://psicode.org,https://github.com/psi4/psi4/issues/1433#issuecomment-447940882,1,['test'],['test']
Testability,"Since I needed to make a new commit to re-trigger tests, I slightly expanded the scope of the PR to remove some `occ` DIIS keywords that were already marked deprecated during the course of the open-heart surgery series, and should have been removed one version ago.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2402#issuecomment-1011030317:50,test,tests,50,https://psicode.org,https://github.com/psi4/psi4/pull/2402#issuecomment-1011030317,1,['test'],['tests']
Testability,"Since most calls are c-side (w/o) arg names, I still find it counterintuitive that `mB->Z(B, true)` _excludes_ ghosts, rather than True<-->Inclusive. `tangible_ghosts`, `undead_ghosts` to switch the logic, anyone?. But that's an old complaint. More to the point, it'd be good to use `PSI_DEPRECATED` and `warnings.warn` to require the ghost arg in v1.4 both py-side and c-side. This PR is right that uses w/i our control should be switched out in v1.3.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1355#issuecomment-444744705:199,log,logic,199,https://psicode.org,https://github.com/psi4/psi4/pull/1355#issuecomment-444744705,1,['log'],['logic']
Testability,"Since opt7 is not an IRC test case, I better let @psi-rking decide what he wants to do with it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-190951929:25,test,test,25,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-190951929,1,['test'],['test']
Testability,"Since the test case I have works with this PR but not without it, I'll hold off from filing bug reports until the PR is in.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1429#issuecomment-450276865:10,test,test,10,https://psicode.org,https://github.com/psi4/psi4/pull/1429#issuecomment-450276865,1,['test'],['test']
Testability,"Since there are basically no reference data available for UHF, I guess the only thing one could do is to add Psi4-generated data for consistency tests...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006#issuecomment-693506447:145,test,tests,145,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-693506447,1,['test'],['tests']
Testability,"Since there are no tests for the existing EFP multipole potential integrals (at least I did not find anything...), I quickly implemented some tests on the Python layer using finite differences, which can be found [here](https://gist.github.com/maxscheurer/ded7fbb08dcda1fc68b5bce8033f33f4). I would feel more comfortable if these tests were added somewhere to Psi4. Is there any place in the code base dedicated to such test?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1657#issuecomment-499469261:19,test,tests,19,https://psicode.org,https://github.com/psi4/psi4/pull/1657#issuecomment-499469261,4,['test'],"['test', 'tests']"
Testability,Size of irrep 1 of <ab|cd> integrals: 0.005 (MW) / 0.041 (MB); > Size of irrep 2 of <ab|cd> integrals: 0.006 (MW) / 0.049 (MB); > Size of irrep 3 of <ab|cd> integrals: 0.014 (MW) / 0.115 (MB); > Total: 0.043 (MW) / 0.341 (MB); > ; > Size of irrep 0 of <ia|bc> integrals: 0.005 (MW) / 0.037 (MB); > Size of irrep 1 of <ia|bc> integrals: 0.001 (MW) / 0.009 (MB); > Size of irrep 2 of <ia|bc> integrals: 0.002 (MW) / 0.012 (MB); > Size of irrep 3 of <ia|bc> integrals: 0.003 (MW) / 0.028 (MB); > Total: 0.011 (MW) / 0.086 (MB); > ; > Size of irrep 0 of tijab amplitudes: 0.001 (MW) / 0.011 (MB); > Size of irrep 1 of tijab amplitudes: 0.000 (MW) / 0.001 (MB); > Size of irrep 2 of tijab amplitudes: 0.000 (MW) / 0.004 (MB); > Size of irrep 3 of tijab amplitudes: 0.001 (MW) / 0.006 (MB); > Total: 0.003 (MW) / 0.022 (MB); > ```; > ; > Output from running coupled cluster tests:; > ; > ```; > Start 9: cc1; > ```; > ; > 1/79 Test #9: cc1 ..............................**_Failed 1.95 sec; > Start 10: cc10; > 2/79 Test #10: cc10 .............................**_Failed 1.59 sec; > Start 11: cc11; > 3/79 Test #11: cc11 .............................**_Failed 1.82 sec; > Start 12: cc12; > 4/79 Test #12: cc12 .............................**_Failed 1.56 sec; > Start 13: cc13; > 5/79 Test #13: cc13 .............................**_Failed 1.64 sec; > Start 14: cc13a; > 6/79 Test #14: cc13a ............................**_Failed 1.65 sec; > Start 15: cc14; > 7/79 Test #15: cc14 .............................**_Failed 1.58 sec; > Start 16: cc15; > 8/79 Test #16: cc15 .............................**_Failed 1.53 sec; > Start 17: cc16; > 9/79 Test #17: cc16 .............................**_Failed 1.65 sec; > Start 18: cc17; > 10/79 Test #18: cc17 .............................**_Failed 1.65 sec; > Other tests are passing:; > ; > ```; > Start 1: adc1; > ```; > ; > 1/294 Test #1: adc1 ............................. Passed 18.67 sec; > Start 2: adc2; > 2/294 Test #2: adc2 ............................. Passed 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230#issuecomment-178134633:3538,Test,Test,3538,https://psicode.org,https://github.com/psi4/psi4/issues/230#issuecomment-178134633,1,['Test'],['Test']
Testability,"So @loriab pointed this out initially (thank you for that!), and the CI seems to confirm that there's something suspect going on with the `test_gauxc_writer.py` test. I'll work on recreating the error locally on my end and fixing whatever is going on with the test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794:161,test,test,161,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2304604794,2,['test'],['test']
Testability,"So I cross-checked this with the CompositeJK methods, and; as I somewhat suspected might happen, the CompositeJK methods do not work with `screening none`. `SCF_TYPE DFDIRJ+LINK` segfaults, while `SCF_TYPE DFDIRJ+COSX` gives the wrong answer, from my testing. . The composite methods partially implement the screening machinery within themselves instead of relying entirely on the `TwoBodyAOInt::shell_significant()` function for sieving. Some `TwoBodyAOInt` member functions, such as `TwoBodyAOInt::shell_pair_values` (used in DF-DirJ), and `TwoBodyAOInt::shell_pair_significant` (used in LinK) are used to assist with this. However, these functions rely on values that (specifically, `shell_pair_values_`, `screening_threshold_squared_`, and `max_integral_`) are initialized during the call to `TwoBodyAOInt::create_sieve_pair_info`, which is never called when `screening_type` is set to `none` due to the `return` upon registering `ScreeningType::None` for the sieve during `TwoBodyAOInt::setup_sieve`. That's where I suspect these problems are coming from. Given this wasn't caught by CI, it may be reasonable to add a new test for different JK methods at different screening types, but that wouldn't be for this PR.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2973#issuecomment-1570262210:251,test,testing,251,https://psicode.org,https://github.com/psi4/psi4/pull/2973#issuecomment-1570262210,2,['test'],"['test', 'testing']"
Testability,"So I have tried to set-up a good test case, and I run into the `clean()` issue again, see attachments.; [cbs-parser.txt](https://github.com/psi4/psi4/files/1889912/cbs-parser.txt); [cbs-parser.log](https://github.com/psi4/psi4/files/1889914/cbs-parser.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379738813:33,test,test,33,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379738813,3,"['log', 'test']","['log', 'test']"
Testability,"So I now realize something - we may want to apply some of the benchmarking changes made in this PR to DFJCOSK, as well. It will increase the size of the PR, but the benchmarking changes in this PR currently only extend to DirectJK at the moment. Since DFJCOSK has two methods that it separately benchmarks, it will require a bit of retooling regarding some of the internals of the benchmarking framework. It should not have a significant impact on test_erisieve, however. Thoughts?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2547#issuecomment-1152700048:62,benchmark,benchmarking,62,https://psicode.org,https://github.com/psi4/psi4/pull/2547#issuecomment-1152700048,4,['benchmark'],"['benchmarking', 'benchmarks']"
Testability,"So I was pretty sure that I built v2rdm internally, but I rebuilt Psi4 just in case, and now all the tests are passing. So I must have had some old version lying around indeed. Thanks for the tip, everything is good now. Closing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/905#issuecomment-361848285:101,test,tests,101,https://psicode.org,https://github.com/psi4/psi4/issues/905#issuecomment-361848285,1,['test'],['tests']
Testability,"So I was thinking about getting rid of `""component""` too. The difference between something like ""MP2"" and ""B2PLYP"" is that while there's a name for the SCF component of MP2 (it's HF), there's no such thing for the SCF part of B2PLYP. Also, before components were introduced, the keys in the `VARH` dict had to be valid methods, having a check against component gets around this issue. I think a much cleaner interface may be to rework how the extrapolation functions (`corl_xtpl_helgaker_2` etc.) work. Rather than passing in an energy/gradient/Hessian, we could pass in the `wfn` + the variable to extrapolate, and instead of trying to shoehorn the dft extrapolation into the existing interface, it could be neatly contained in a single extrapolation function. The only issue I see with this is that the printing of the CBS stages would have to move from `cbs()` into the extrapolation function itself. This is perhaps better discussed once DDD is in?. ------. I have made changes to the duplication detection, merging the two loops. Instead of a simple counter, it's now an array of job-indices, with the first element being the highest priority (ie the one with the matching wfn). Also, @hokru your ""requested"" syntax now works, see the added test which combines components arbitrarily. `ctest -L cbs` passes.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657:1246,test,test,1246,https://psicode.org,https://github.com/psi4/psi4/pull/2132#issuecomment-973871657,1,['test'],['test']
Testability,"So I've added the option to be able to run frequency calculations via the cbs interface, both using the `""method/basis""` and `frequency(cbs, ...)` syntax. I've added the tests for this too - I wanted to get a reference value for the `HF/cc-pV[DT]Z` extrapolation from other codes (thanks @hokru), but we failed to get it run correctly. When compared to large basis sets, one gets these results:. Freq 1 | Freq 2 | Freq 3 | zeta | RMS; -- | -- | -- | -- | -- ; 1809.246 | 3923.151 | 4020.177 | 2 |   174.1217 ; 1753.040 | 4126.975 | 4226.872 | 3 |    4.1162; 1750.381 | 4130.709 | 4230.122 | 4 |    1.4733; 1748.147 | 4130.445 | 4230.985 | 5 |    0.2300; 1748.003 | 4130.108 | 4230.827 | 6 |    ; 1747.741 | 4130.226 | 4230.575 | [dt] |   0.2207; 1749.876 | 4131.278 | 4230.490 | [tq] |   1.2899; 1747.595 | 4130.375 | 4231.193 | [q5] |   0.3520. I think the convergence is reasonable - it's clear the results (even with HF/[dt]) are not complete junk.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1235#issuecomment-424317527:170,test,tests,170,https://psicode.org,https://github.com/psi4/psi4/pull/1235#issuecomment-424317527,1,['test'],['tests']
Testability,"So [Matt saw some functionals going wrong](https://github.com/psi4/psi4/pull/961#issuecomment-385090273) in the big dft-bench-ionization test (Intel compilers and presumably MKL). Now I'm seeing it, too, when linking against OpenBLAS instead of MKL for a _lot_ of functionals (see below).; `PWB6K: Psi4 vs. Q-Chem: computed value (0.52376) does not match (0.45357) to 4 digits.`. Anyone who builds Psi against non-MKL, please report the results of this test. ```; #BAD 'PWB6K': 0.45356644150000136, #TEST; #BAD 'wB97X-D': 0.4575912357999954, #TEST; #BAD 'LRC-wPBE': 0.45809929579999675, #TEST; #BAD 'BHHLYP': 0.4474902386999986, #TEST; #BAD 'MPW1K': 0.4527968481999949, #TEST; #BAD'LRC-wPBEh': 0.4549011450999956, #TEST; #BAD 'wB97': 0.4561211940999925, #TEST; #BAD 'M11': 0.45965997109999535, #TEST; #BAD 'M08-HX': 0.4616204211000081, #TEST; #BAD 'wB97X': 0.45647112829999514, #TEST; #BAD 'B5050LYP': 0.45086574249999956, #TEST; #BAD 'M05-2X': 0.4583363492999979, #TEST; #BAD 'BB1K': 0.4523318653999979, #TEST; #BAD 'M06-2X': 0.45840746970000623, #TEST; #BAD 'dlDF': 0.46205070889999433, #TEST; #BAD 'M08-SO': 0.4656227382000111, #TEST; #BAD 'M06-HF': 0.4582368217999999, #TEST; #BAD 'MPWB1K': 0.4525753563999899, #TEST; #BAD 'B97-K': 0.4498949295999921, #TEST; #BAD'SOGGA11-X': 0.4601258852000001, #TEST; #BAD 'PBE50': 0.45096528610000064, #TEST; #BAD'CAM-B3LYP': 0.4568003603999955, #TEST; #BAD 'LC-VV10': 0.45568725450000613, #TEST; #BAD 'wB97M-V': 0.4544676075000069, #TEST; #BAD 'wB97X-V': 0.4553026020000033, #TEST; ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1009:137,test,test,137,https://psicode.org,https://github.com/psi4/psi4/issues/1009,27,"['TEST', 'test']","['TEST', 'test']"
Testability,"So after some digging, it seems that different CI runs on different hardware/compilers provide *slightly* different density/exchange matrix elements. I can only presume this is because `-march=native` is generally used in Psi4 builds. Since I set the `test_gauxc_writer.py` test tolerances to be pretty tight (literally no difference between the reference and actual density matrix), this slight deviation led the tests to fail. I didn't want to simply loosen the test tolerances without a good reason to do so, but now that I have said reason, I will just do that.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215:274,test,test,274,https://psicode.org,https://github.com/psi4/psi4/pull/3150#issuecomment-2334026215,3,['test'],"['test', 'tests']"
Testability,"So far I think this looks great - type safe python with a lot of testing, and a great modular design for the solvers. I really like the line broadening plot generation. If there's some kind of provenance info that can be added to the json reference data file that would be handy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1814#issuecomment-644203551:65,test,testing,65,https://psicode.org,https://github.com/psi4/psi4/pull/1814#issuecomment-644203551,1,['test'],['testing']
Testability,"So for the record, this would be:. ```; molecule N2 {; N 0.0000 0.0000 0.0000; N 0.0000 0.0000 2.1180; units au; }. set basis cc-pVDZ; set reference rhf; set e_convergence 1e-12; set d_convergence 1e-12. set dmrg wfn_irrep 0; set dmrg wfn_multp 1; set dmrg frozen_docc [ 1 , 0 , 0 , 0 , 0 , 1 , 0 , 0 ]; set dmrg active [ 2 , 0 , 1 , 1 , 0 , 2 , 1 , 1 ]. set dmrg dmrg_states [ 500, 1000]; set dmrg dmrg_e_convergence [ 1e-10, 1e-10]; set dmrg dmrg_dvdson_rtol [ 1e-5, 1e-10]; set dmrg dmrg_maxsweeps [ 5, 5]; set dmrg dmrg_noiseprefactors [ 0.05, 0.00]; set dmrg dmrg_print_corr false; set dmrg dmrg_chkpt false. set dmrg dmrg_d_convergence 1e-6; set dmrg dmrg_store_unit true; set dmrg dmrg_do_diis true; set dmrg dmrg_diis_branch 1e-2; set dmrg dmrg_store_diis false. set dmrg dmrg_which_root 1 # Ground state; set dmrg dmrg_state_avg false; set dmrg dmrg_active_space NO # INPUT; NO; LOC; set dmrg dmrg_loc_random false. set dmrg dmrg_caspt2_orb pseudocanonical; set dmrg dmrg_ipea 0.0; set dmrg dmrg_imag_shift 0.0. energy(""dmrg-caspt2""). compare_values(-109.103502335253, get_variable(""DMRG-SCF ENERGY""), 6, ""DMRG-SCF Energy"") #TEST; compare_values(-109.311041321133, get_variable(""CURRENT ENERGY""), 6, ""DMRG-CASPT2 Energy"") #TEST; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/388#issuecomment-223891395:1134,TEST,TEST,1134,https://psicode.org,https://github.com/psi4/psi4/pull/388#issuecomment-223891395,2,['TEST'],['TEST']
Testability,"So here's another weird issue with PES scans in Psi4. Namely, it looks like the scan crashes in the SCF cycle every 4 or 5 points, even when I'm not feeding in the previous scf solution. If you try a new calculation in the point where it failed to converge, there's no problem. Test input; ```; molecule mol {; 0 1; symmetry c1; H 0.0 0.0 0.0; H 0.0 0.0 R1; H 0.0 0.0 R2; H 0.0 0.0 R3; } ; ; set basis STO-3G; set ci_maxiter 100. # This crashes at R=0.68; #for ir in range(60, 80, 2):; # This crashes at R=0.74; for ir in range(68, 80, 2):; mol.R1 = 1*(ir/100); mol.R2 = 2*(ir/100); mol.R3 = 3*(ir/100); ci_e=energy('fci'); ```",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/759:278,Test,Test,278,https://psicode.org,https://github.com/psi4/psi4/issues/759,1,['Test'],['Test']
Testability,So https://github.com/psi4/psi4/blob/master/tests/cbs-xtpl-freq/input.dat#L22 is properly catching the `dertype=1` again and doing Hess by findif of Grad?,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949#issuecomment-379576875:44,test,tests,44,https://psicode.org,https://github.com/psi4/psi4/pull/949#issuecomment-379576875,1,['test'],['tests']
Testability,So my testing indicates that appending the PID to the name breaks full-CI (presumably in the TDM code as fci-TDM and fci-TDM-2 are failing) as well as the SAPT code (sapt2 is failing). Any insight from those familiar with those codes would be greatly appreciated.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/548#issuecomment-267088926:6,test,testing,6,https://psicode.org,https://github.com/psi4/psi4/issues/548#issuecomment-267088926,1,['test'],['testing']
Testability,"So one does a frequency calc, either by energies or gradients. ```; #! Optimization followed by frequencies H2O HF/cc-pVDZ. memory 250 mb. molecule h2o {; O ; H 1 0.96; H 1 0.96 2 104.5; }. set basis cc-pVDZ; optimize('scf'); #frequencies('scf', dertype='energy') # TOGGLE; frequencies('scf', dertype='gradient') # TOGGLE. eval = psi4.get_frequencies(); eval.print_out(); evec = psi4.get_normalmodes(); evec.print_out(). ref_freqs = psi4.Vector(3) #TEST; ref_freqs.set(0, 0, 1775.65) #TEST; ref_freqs.set(0, 1, 4113.38) #TEST; ref_freqs.set(0, 2, 4212.18) #TEST. fd_freqs = psi4.wavefunction().frequencies() #TEST; compare_vectors(ref_freqs, fd_freqs, 1, ""Reference vs computed frequencies to 0.1 cm^-1"") #TEST; ```. Both versions pass the frequencies check. But if you diff their printed normal modes, as below, the coordinate system seems unaligned. This job doesn't have the sow/reap complication, though it does have the zmat one. Basically, is this expected or correctable?. ```; Frequency: 1775.58 | Frequency: 1775.65; Force constant: 0.1193 Force constant: 0.1193; X Y Z mass X Y Z mass ; O 0.000 0.000 -0.068 15.994915 | O 0.000 0.000 -0.270 15.994915; H 0.000 0.416 0.536 1.007825 | H 0.000 0.417 0.538 1.007825; H 0.000 -0.416 0.536 1.007825 | H 0.000 -0.417 0.538 1.007825. Frequency: 4113.41 | Frequency: 4113.38; Force constant: 0.6403 Force constant: 0.6403; X Y Z mass X Y Z mass ; O 0.000 0.000 0.049 15.994915 | O 0.000 0.000 0.197 15.994915; H 0.000 0.569 -0.392 1.007825 | H 0.000 0.571 -0.393 1.007825; H 0.000 -0.569 -0.392 1.007825 | H 0.000 -0.571 -0.393 1.007825. Frequency: 4212.15 | Frequency: 4212.18; Force constant: 0.6714 Force constant: 0.6714; X Y Z mass X Y Z mass ; O 0.000 0.068 0.000 15.994915 | O 0.000 0.271 0.000 15.994915; H 0.000 -0.537 0.414 1.007825 | H 0.000 -0.539 0.416 1.007825; H 0.000 -0.537 -0.414 1.007825 | H 0.000 -0.539 -0.416 1.007825. ... # # # #; Irrep: 1 Irrep: 1; 1: 1775.5835048 | 1: 1775.6479720; 2: 4113.4094219 | 2: 4113.3793970; 3: 4212",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/225:449,TEST,TEST,449,https://psicode.org,https://github.com/psi4/psi4/issues/225,6,['TEST'],['TEST']
Testability,"So the windows test fails. I am assuming it's because it's using (implicit) `dertype=2` for the scf frequency - is this a known fail on Windows? @raimis, do you have any idea?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1235#issuecomment-424783271:15,test,test,15,https://psicode.org,https://github.com/psi4/psi4/pull/1235#issuecomment-424783271,1,['test'],['test']
Testability,So... now the VS2015 test crashes even before it anything is printed out....,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-572135738:21,test,test,21,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-572135738,1,['test'],['test']
Testability,Some MRCC-related tests fail,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2634:18,test,tests,18,https://psicode.org,https://github.com/psi4/psi4/issues/2634,1,['test'],['tests']
Testability,Some [large ints](https://dev.azure.com/psi4/psi4/_build/results?buildId=1567&view=logs&j=f31c9f97-4411-58e7-49ac-fc73f645e6b6&t=168f406a-25eb-5f8a-7d4d-4c979d542d09&l=728) in the Cholesky decomp matrix that apparently the lower tolerances can manage but the 1e-6 can't,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1760#issuecomment-571243720:83,log,logs,83,https://psicode.org,https://github.com/psi4/psi4/pull/1760#issuecomment-571243720,1,['log'],['logs']
Testability,Some benchmarking results from timer.dat walltimes:. <details><summary>Before</summary>; <p>. ![before-par](https://user-images.githubusercontent.com/16376046/46955381-d132b800-d060-11e8-8cf1-37b0af125fcc.png). </p>; </details>. <details><summary>After</summary>; <p>. ![after-par](https://user-images.githubusercontent.com/16376046/46955380-d132b800-d060-11e8-8d85-cf13b30484ab.png). </p>; </details>,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1291#issuecomment-429864346:5,benchmark,benchmarking,5,https://psicode.org,https://github.com/psi4/psi4/pull/1291#issuecomment-429864346,1,['benchmark'],['benchmarking']
Testability,"Some bottlenecks that should be easy to fix:. 1.) osrecur.cc:998 Allocates (a tiny bit) of space on the heap. Can be fixed with an array on the stack; 2.) The calculate_f function; 3.) It might help to allocate just a contiguous array of memory in ""init_box"", etc. Just changing the allocation of F from heap to stack improved the timings by 10-20% for overlap, up to 50% for ao_potential in my tests (would be interesting if you can verify that). Thread scaling is better, but could still be improved I think. I may need to get timings for bigger tests",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/592#issuecomment-276222956:395,test,tests,395,https://psicode.org,https://github.com/psi4/psi4/pull/592#issuecomment-276222956,2,['test'],['tests']
Testability,"Some of the MRCC-related tests fail to run, for reasons unrelated to the actual MRCC interface as far as I can tell.; ```; (p4env) gytibor@CRD-CSLW-1:~/qcta$ pytest -m mrcc /home/gytibor/miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/; ============================================================================================================ test session starts ============================================================================================================; platform linux -- Python 3.9.12, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/gytibor/miniconda3/envs/p4env/lib/python3.9/site-packages/psi4, configfile: pytest.ini; collected 4121 items / 4114 deselected / 7 selected. ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/test_addons.py . [ 14%]; ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/test_composite.py F [ 28%]; ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/mrcc/ccsd_t_/test_input.py F [ 42%]; ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/mrcc/ccsdt/test_input.py . [ 57%]; ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/mrcc/ccsdt_q_/test_input.py . [ 71%]; ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/mrcc/optfreq/test_input.py F [ 85%]; ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/mrcc/rohf_ccsdt_q_/test_input.py . [100%]; .; <snip>; .; ========================================================================================================== short test summary info ==========================================================================================================; FAILED ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/test_composite.py::test_allen_focal_point - NameError: name 'psi4' is not defined; FAILED ../miniconda3/envs/p4env/lib/python3.9/site-packages/psi4/tests/mrcc/ccsd_t_/test_input.py::test_mrcc_ccsd_t_ - AssertionError: Using the `local_options` keyword argument is deprecated in fa",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2634:25,test,tests,25,https://psicode.org,https://github.com/psi4/psi4/issues/2634,6,['test'],"['test', 'tests']"
Testability,Some of the `adcc` tests seem to work fine though? I will look into it ASAP.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2388#issuecomment-1004868972:19,test,tests,19,https://psicode.org,https://github.com/psi4/psi4/pull/2388#issuecomment-1004868972,1,['test'],['tests']
Testability,"Some tests from the original issue on a 48 core Intel Xeon Gold 5120 Linux box, with OneAPI compilers (version 2021.2.0) as well as GCC 7.1, with and without the bug fixed:. | Compiler | #Threads | wcombine | Bug fixed? | Energy (Eh) | Still Bad? |; |----------|----------|----------|------------|--------------------|----|; | OneAPI | 1 | True | False | -1963.7577 8206 1252* | yes |; | OneAPI | 8 | True | False | did not converge | yes |; | OneAPI | 1 | False | False | -1963.7615 9009 8066 |; | OneAPI | 8 | False | False | -1962.6864 3082 1442 | yes |; | OneAPI | 1 | True | True | -1963.7615 2234 6426 |; | OneAPI | 8 | True | True | -1963.7615 2417 8940 |; | OneAPI | 1 | False | True | -1963.7615 5899 4243 |; | OneAPI | 8 | False | True | -1963.7615 5898 3752 |; | GCC | 1 | True | False | -1963.7587 7038 0348 | yes |; | GCC | 8 | True | False | -1963.7587 7038 0374 | yes |; | GCC | 1 | False | False | -1963.7615 8294 3193 |; | GCC | 8 | False | False | -1963.7615 8294 3197 |; | GCC | 1 | True | True | -1963.7615 8460 3790 |; | GCC | 8 | True | True | -1963.7615 8460 3791 |; | GCC | 1 | False | True | -1963.7615 5884 0375 |; | GCC | 8 | False | True | -1963.7615 5884 0376 |",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2283#issuecomment-904776872:5,test,tests,5,https://psicode.org,https://github.com/psi4/psi4/pull/2283#issuecomment-904776872,1,['test'],['tests']
Testability,"Something in the recent version of Psi4 is causing coupled cluster test cases to fail on our cluster. It also appears in the clang version of the Travis CI builds. I'm using Intel compiler on our cluster. Is there a new transqt/ccsort module, if so it appears to be failing in it:. From cc1 test output:. ```; Wfn Parameters:; --------------------; Wavefunction = CCSD; Number of irreps = 4; Number of MOs = 25; Number of active MOs = 25; AO-Basis = NONE; Semicanonical = false; Reference = RHF; Print Level = 1. IRREP # MOs # FZDC # DOCC # SOCC # VIRT # FZVR; ----- ----- ------ ------ ------ ------ ------; A1 12 0 3 0 9 0; A2 2 0 0 0 2 0; B1 4 0 1 0 3 0; B2 7 0 1 0 6 0; Transforming integrals...; IWL integrals will be deleted.; (OO|OO)...; Presorting SO-basis two-electron integrals.; Sorting File: SO Ints (nn|nn) nbuckets = 1; Transforming the one-electron integrals and constructing Fock matrices; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (OO|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OO|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|OV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (OV|VV)...; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OO)...; Starting first half-transformation.; Sorting half-transformed integrals.; First half integral transformation complete.; Starting second half-transformation.; Two-electron integral transformation complete.; (VV|OV)...; Starting second half-transformation.; Two-electro",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/230:67,test,test,67,https://psicode.org,https://github.com/psi4/psi4/issues/230,2,['test'],['test']
Testability,"Sometime, could you take another look at `psi4 --test`, @robertodr? Whenever I run, I get the below, and it looks like it's happening outside the pcm_helper fn. That is, in c-side SCF where `@pcmsolver.inp` can't be read b/c the working dir wasn't left in the pcm subdir where `pcmsolver.inp`-->`@pcmsolver.inp`. . Note that the changes in this PR would have only influenced psiapi mode, not psithon, since most of the pcm_helper fn is just repeated from inputparser. I'm not sure whether @raimis is trying to run psithon or psiapi — looks like the latter in intent and the former in practice. Tracing back to [here](https://github.com/Acellera/htmd/pull/409#discussion_r139685402), I think they're still psithon, so this PR may have targeted the wrong approach. Or I may have all my pcmsolver input redirects quite confused. This being the fourth package that has conspired against conda, it may be one too many. ```; RHF-PCM, total algorithm; Error: Error: Getkw, line 33 in /scratch/psilocaluser/conda-builds/pcmsolver_1499412893611/work/src/utils/getkw/Getkw.cpp: Open failed: @pcmsolver.inp; ```. ```; print('RHF-PCM, total algorithm'); > energy_scf1, wfn1 = psi4.energy('scf', return_wfn=True). ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/tests/test_addons.py:425: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/driver.py:460: in energy; wfn = procedures['energy'][lowername](lowername, molecule=molecule, **kwargs); ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1996: in run_scf; scf_wfn = scf_helper(name, post_scf=False, **kwargs); ../../_b_env_placehold_placehold/lib/python3.6/site-packages/psi4/driver/procrouting/proc.py:1271: in scf_helper; scf_wfn = scf_wavefunction_factory(name, base_wfn, core.get_option('SCF', 'REFER",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/818#issuecomment-353769977:49,test,test,49,https://psicode.org,https://github.com/psi4/psi4/pull/818#issuecomment-353769977,1,['test'],['test']
Testability,"Sorry @avcopan, I saw all the `@IRC`s in that gist above and thought opt7 was an unlabeled IRC. But that was for opt-irc-2, which should be fixed now. opt7 fails on a few systems (https://testboard.org/cdash/testSummary.php?project=3&name=opt7&date=2016-03-01). This (https://testboard.org/cdash/testDetails.php?test=7810317&build=63640) looks like the most coherent error message (also copied below), if @psi-rking would like to examine it. ```; Optimizer: Optimization complete!; Int. Coord. RHF opt of HOOH with O-H fixed to 0.95, energy........PASSED; Optimizer: Optimization complete!; Int. Coord. RHF opt of HOOH with O-O-H fixed to 105, energy: computed value (-150.7861731) does not match (-150.7861769) to 6 decimal places.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/253#issuecomment-190956405:188,test,testboard,188,https://psicode.org,https://github.com/psi4/psi4/issues/253#issuecomment-190956405,5,['test'],"['test', 'testDetails', 'testSummary', 'testboard']"
Testability,Sorry I just realized I never followed up on this. On my mac all of the regular tests pass except 86 dcft-grad1 and 93 dcft4 both timed out.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/243#issuecomment-217971287:80,test,tests,80,https://psicode.org,https://github.com/psi4/psi4/issues/243#issuecomment-217971287,1,['test'],['tests']
Testability,"Sorry I'm late to the party; I've been traveling again. I don't think there are any problems with the new scheme. We have a number of tests that have list options, such as SOCC, so if they pass we're all good.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/330#issuecomment-205086828:134,test,tests,134,https://psicode.org,https://github.com/psi4/psi4/pull/330#issuecomment-205086828,1,['test'],['tests']
Testability,Sorry about the failed tests. I'll take a look tomorrow.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/454#issuecomment-236853475:23,test,tests,23,https://psicode.org,https://github.com/psi4/psi4/pull/454#issuecomment-236853475,1,['test'],['tests']
Testability,Sorry for my late response. It looks okay for OCC and DFOCC tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-205295386:60,test,tests,60,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-205295386,1,['test'],['tests']
Testability,"Sorry for taking such a long time on this. @loriab the `input.dat` in `pcmsolver/scf` now shows how to recover files from scratch:; ```python; pid = str(os.getpid()); scratch_dir = os.path.join(core.IOManager.shared_object().get_default_path(), 'psi.' + pid + '.pcmsolver'); pcm_save = reduce(lambda l1, l2 : l1 + l2, (glob.glob(t) for t in [scratch_dir + '*/' + x for x in ['cavity.off__' + pid, 'PEDRA.OUT__' + pid, 'cavity.npz']])); filter(lambda x : shutil.copy(x, psi4.extras.get_input_directory()), pcm_save); ```; Maybe it's an interesting bit for `p4util/util.py`.; The `input.dat` for the `pcmsolver/dipole` test now uses the `perturb_h`, `perturb_with` and `perturb_dipole` parameters. Surprise, surprise, the test is **failing**. After checking the PCM set up, basis, SCF start guess and all other obvious culprits, I found out that the nuclear energy is **different** from the one in the reference file. Do you and/or @andysim and/or @dgasmith have any idea why this could be?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/665#issuecomment-291492708:617,test,test,617,https://psicode.org,https://github.com/psi4/psi4/pull/665#issuecomment-291492708,2,['test'],['test']
Testability,"Sorry for the confusion. Right, no testing needed for a pybinding. For the densities, I was looking for ""is this code exercised in the test suite?"" and ""if not, how can we avert someone breaking this later?"". If such a test is tricky to construct and you're regarding this as more a better-process than a new-numbers PR, then plausible to wait for any occ bugs to crawl out later.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2072#issuecomment-767119536:35,test,testing,35,https://psicode.org,https://github.com/psi4/psi4/pull/2072#issuecomment-767119536,3,['test'],"['test', 'testing']"
Testability,"Sorry for the confusion. What you're doing with PCMSolver is working just fine. What broke down was me not realizing that the `1.1.2` tag had what I needed, and I didn't need `HEAD`. Below is what I wrote to someone recently. External projects for psi4 can choose one of the below (or propose a new scheme), and PCMSolver is doing (2). If the below seems clear, I'll explicitly add it to the wiki. ## External Project Versioning (choose one); 1. Tag a release “0.2”, “v0.2”, or whatever. Let me know and I’ll (i) build the conda package and (ii) bump the `Add_ExternalProject` tag (for non-plugins). Repeat in a few months with “0.3”, etc. This way is handy if you want to settle on stable commits while possibly breaking the repo in interim commits. You may be asked to bump the tag after resolving psi4+externalproj interface or build issues. If you move the tag to a later commit, you'll have to let me know so I rebuild the conda package with the same version but a later build number. This is what CheMPS2 and PCMSolver do.; 2. Tag a release “0.2”, and I’ll (i) tell psinet to do nightly builds that increment micro on each git commit so versions will be ""tag.micro"" (e.g., 0.2.43) and (ii) remove git tag from `Add_ExternalProject` )for non-plugins). When you’re ready for 0.3, just make the new tag, no communication with me necessary. Strongly recommended not to mix light and annotated tags; the latter are always preferred; the former are what you get if you go through the github website tag-making interface. If the repo breaks such that “make” or any “make tests” you devise break, then no package will get uploaded, but otherwise the most recent will always be available. This is what Psi4 itself does.; 3. hybrid– do 2. but have the version that ships with the psi4 binary be pinned to a certain stable build unless user deliberately installs another.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/409#issuecomment-225993854:1570,test,tests,1570,https://psicode.org,https://github.com/psi4/psi4/pull/409#issuecomment-225993854,1,['test'],['tests']
Testability,"Sorry for the delay. The DCFT tests look good to me. I think we can also check of the CC tests; if I remember correctly, those tests are actually validated by comparing the output to the reference using a separate Perl script. If the tests run successfully, it means that the output is present and correct, or Perl wouldn't be able to parse it.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/315#issuecomment-205091286:30,test,tests,30,https://psicode.org,https://github.com/psi4/psi4/pull/315#issuecomment-205091286,4,['test'],['tests']
Testability,Sorry for the late reply.; I meant this: https://github.com/psi4/psi4/blob/6173fba2dc820bba05918f3dfa599550704de4f5/tests/pytests/test_ddx.py#LL76C48-L76C51. In any case the pull request looked good for me.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2952#issuecomment-1540335863:116,test,tests,116,https://psicode.org,https://github.com/psi4/psi4/pull/2952#issuecomment-1540335863,1,['test'],['tests']
Testability,"Sorry for the really slow response. No, haven't caught c-side errors before. You can see if catching general `Exception` works and if can scan traceback for text. Bu don't expend too much effort. It's the placement of driver logic that I'm more worried about breaking. Also, if you rebase, Azure should heal.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1719#issuecomment-534638677:225,log,logic,225,https://psicode.org,https://github.com/psi4/psi4/pull/1719#issuecomment-534638677,1,['log'],['logic']
Testability,"Sorry for the unsettling results. For a more extensive test suite, one can run `psi4 --test full` (or long). If building from source, one can also run `ctest` from <objdir>. Unfortunately, this test evaded both of those suites due to showing up for big systems/basis sets.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2211#issuecomment-869286553:55,test,test,55,https://psicode.org,https://github.com/psi4/psi4/issues/2211#issuecomment-869286553,3,['test'],['test']
Testability,"Sorry it took me so long; I've been traveling quite a bit for work, and didn't get time to look into the problem. I believe I found the culprit, and just pushed a fix into the repo. Could you please test it with a basis that uses spherical harmonics (e.g. cc-pVDZ) and let me know if you get the expected results? Sorry again for my tardiness in fixing this problem. Andy.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/84#issuecomment-104781915:199,test,test,199,https://psicode.org,https://github.com/psi4/psi4/issues/84#issuecomment-104781915,1,['test'],['test']
Testability,"Sorry that I did not have much time to look into this yet. (Teaching, exams, grrr.). My original questions is probably solved but the rest of the discussion on container formats is not. (I'll try to test soon.); I'm opening a new issue for the data format discussion (#562), so we can close this one soon(er).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/504#issuecomment-271233727:199,test,test,199,https://psicode.org,https://github.com/psi4/psi4/issues/504#issuecomment-271233727,1,['test'],['test']
Testability,"Sorry to be nitpick, but could you call the test `cubeprop-frontier` to describe the type of test rather than the molecule used? This will be good to go then.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1138#issuecomment-419064295:44,test,test,44,https://psicode.org,https://github.com/psi4/psi4/pull/1138#issuecomment-419064295,2,['test'],['test']
Testability,Sorry we haven't had an opportunity to follow up on this. We need to do some general scaling tests with many of the parts of Psi4. We tested SAPT0 more extensively than SAPT2+(3) in terms of scaling. In general SAPT0 scales reasonably well at least up to 8 cores. Would have expected similar results for SAPT2+(3) unless perhaps the I/O is beginning to have a serious effect.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/57#issuecomment-122118602:93,test,tests,93,https://psicode.org,https://github.com/psi4/psi4/issues/57#issuecomment-122118602,2,['test'],"['tested', 'tests']"
Testability,"Sorry, @hokru. I've been trying to build Francesco and Shuhe's [DSRG-PT2 gradient plugin](https://github.com/ustcwsh/Shuhe_Project) to test a theory. (In multiple senses of ""theory."") Shuhe's code was written for Python 2, so Psi rightly complains about invalid syntax. ```; Traceback (most recent call last):; File ""/Users/jonathonmisiewicz/psi4/objdir/stage/bin/psi4"", line 331, in <module>; exec(content); File ""<string>"", line 19, in <module>. File ""./../dsrgpt2_plug/__init__.py"", line 45; print ""imported so file: "", sofile; ^; SyntaxError: Missing parentheses in call to 'print'. Did you mean print(""imported so file: "", sofile)?; ```. The error message that Holger's message extractor gives me is less readable. ```; !----------------------------------------------------------------------------------!; ! !; ! "", sofile !; ! , ^ !; ! ,SyntaxError: Missing parentheses in call to 'print'. Did you mean !; ! print(""imported so file: "", sofile)? !; ! !; !----------------------------------------------------------------------------------!; ```. The error extractor should be patched to just report the SyntaxError.",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1920:135,test,test,135,https://psicode.org,https://github.com/psi4/psi4/issues/1920,1,['test'],['test']
Testability,"Sorry, @loriab, I didn't see your previous message announcing the cleanup and introduction of the new qmefp-puream test. I think it's all good as-is, but the folders qc-scfefp-sp1 and qc-scfefp-sp2 appear to not contain an input.dat. Should they be deleted?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/115#issuecomment-171512142:115,test,test,115,https://psicode.org,https://github.com/psi4/psi4/issues/115#issuecomment-171512142,1,['test'],['test']
Testability,"Sorry, I’m out of action due to serious illness so probably can’t be much help. I was working on derivatives but they were buggy. They should in theory be simple, but I don’t know when I’ll be in a position to get back to them. Sorry again :/. > On 7 Nov 2018, at 21:23, Andy Simmonett <notifications@github.com> wrote:; > ; > Description; > ; > This PR builds on the start that @PeterKraus made to get the libecpint library from @robashaw up and running as Psi4's ECP engine.; > ; > Todos; > ; > Notable points (developer or user-interest) that this PR has or will accomplish.; > ; > Improve the speed and stability of the ECP integrals.; > Questions; > ; > @robashaw are the derivative integrals ready to go in Libecpint yet? If not, do you have any idea how much work it will be to implement them?; > Checklist; > ; > Make libecpint play nicely with our CMake infrastructure; > Write wrappers for ECP integral code, making the new code path optional for now; > Tests added for any new features; > Status; > ; > Ready for review; > Ready for merge; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/psi4/psi4/pull/1340; > ; > Commit Summary; > ; > Import libecpint via CMake; > File Changes; > ; > M CMakeLists.txt (3); > M external/upstream/CMakeLists.txt (1); > A external/upstream/libecpint/CMakeLists.txt (57); > M psi4/CMakeLists.txt (9); > M psi4/psi4Config.cmake.in (2) ; > Patch Links:; > ; > https://github.com/psi4/psi4/pull/1340.patch; > https://github.com/psi4/psi4/pull/1340.diff; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1340#issuecomment-439512371:964,Test,Tests,964,https://psicode.org,https://github.com/psi4/psi4/pull/1340#issuecomment-439512371,1,['Test'],['Tests']
Testability,"Sorry, ```C:\Users\erikc\psi4conda\Scripts ``` was what was in my Path. I double checked via ```psi4 --test``` in cmd and the same error pops up. I also just reinstalled anaconda without adding it to my path and then reinstalling psi4. Nothing changed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2236#issuecomment-875209656:103,test,test,103,https://psicode.org,https://github.com/psi4/psi4/issues/2236#issuecomment-875209656,1,['test'],['test']
Testability,Sounds good. Let's just wait until at least the Linux conda packages are out so you can have smoke-tested them with htmd.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/933#issuecomment-382036025:99,test,tested,99,https://psicode.org,https://github.com/psi4/psi4/issues/933#issuecomment-382036025,1,['test'],['tested']
Testability,"Standardized handling of ""/"" in method name between frequency, hessian, gradient, properties and energy. ## Description; - Use of `_cbs_gufunc` helper function consistently across `energy`, `hessian`, `gradient`, `frequency` and `properties`; - `_cbs_gufunc` throws an exception for unsupported ""true"" CBS calls to `frequency` and `properties`, ""method/basis"" syntax works; - all relevant tests pass, see below; - modified regex in `_parse_cbs_gufunc_string()` to correctly handle `sapt2+(3)/basis` calls or `method/6-311++G` calls; splitting now only happens on variants of `+ D:`. ## Todos; Notable points that this PR has either accomplished or will accomplish.; * **Developer Interest**; - [x] Fix for #934 . ## Status; - [x] Ready to go",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/949:389,test,tests,389,https://psicode.org,https://github.com/psi4/psi4/pull/949,1,['test'],['tests']
Testability,Start 112: dcft7; 2/401 Test #177: fsapt-allterms ................... Passed 136.27 sec; Start 201: frac-traverse; 3/401 Test #277: opt-irc-2 ........................ Passed 159.76 sec; Start 312: sapt2; 4/401 Test #111: dcft6 ............................ Passed 165.22 sec; Start 314: sapt4; 5/401 Test #383: cookbook-rohf-orb-rot ............ Passed 222.55 sec; Start 321: scf-bz2; 6/401 Test #312: sapt2 ............................ Passed 93.85 sec; Start 29: cc14; 7/401 Test #201: frac-traverse .................... Passed 121.71 sec; Start 164: dft1; 8/401 Test #274: opt13 ............................ Passed 292.05 sec; Start 38: cc23; 9/401 Test #178: isapt1 ........................... Passed 299.95 sec; Start 35: cc2; 10/401 Test #191: fd-freq-gradient-large ........... Passed 307.91 sec; Start 223: mp2-def2; 11/401 Test #189: fd-freq-energy-large ............. Passed 319.82 sec; Start 39: cc24; 12/401 Test #13: cbs-xtpl-alpha ................... Passed 330.09 sec; Start 24: cc13; 13/401 Test #321: scf-bz2 .......................... Passed 118.24 sec; Start 17: cbs-xtpl-opt; 14/401 Test #314: sapt4 ............................ Passed 176.27 sec; Start 31: cc16; 15/401 Test #113: dcft8 ............................ Passed 344.19 sec; Start 275: opt14; 16/401 Test #354: tu6-cp-ne2 ....................... Passed 347.59 sec; Start 41: cc26; 17/401 Test #110: dcft5 ............................ Passed 355.89 sec; Start 276: opt-irc-1; 18/401 Test #112: dcft7 ............................ Passed 358.91 sec; Start 90: cepa-module; 19/401 Test #164: dft1 ............................. Passed 106.51 sec; Start 96: cisd-opt-fd; 20/401 Test #223: mp2-def2 ......................... Passed 82.85 sec; Start 28: cc13d; 21/401 Test #42: cc27 ............................. Passed 392.24 sec; Start 44: cc29; 22/401 Test #75: cc7 .............................. Passed 394.89 sec; Start 47: cc31; 23/401 Test #275: opt14 ............................ Passed 76.63 sec; Start 368: dft-custom-m,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:1920,Test,Test,1920,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Start 127: dfccsdt1; 234/411 Test #285: props2 ........................... Passed 14.75 sec; Start 372: dft-custom-hybrid; 235/411 Test #14: cbs-xtpl-energy .................. Passed 14.69 sec; Start 101: cubeprop; 236/411 Test #201: fnocc3 ........................... Passed 17.46 sec; Start 393: python-3-index-transforms; 237/411 Test #268: opt2-fd .......................... Passed 12.91 sec; Start 266: opt1-fd; 238/411 Test #122: dfccd-grad1 ...................... Passed 13.35 sec; Start 141: dfomp2-3; 239/411 Test #127: dfccsdt1 ......................... Passed 7.70 sec; Start 192: fd-freq-energy; 240/411 Test #369: dft-jk ........................... Passed 13.09 sec; Start 197: freq-isotope1; 241/411 Test #141: dfomp2-3 ......................... Passed 6.05 sec; Start 15: cbs-xtpl-freq; 242/411 Test #101: cubeprop ......................... Passed 10.02 sec; Start 357: tu4-h2o-freq; 243/411 Test #372: dft-custom-hybrid ................ Passed 11.78 sec; Start 132: dfmp2-4; 244/411 Test #393: python-3-index-transforms ........ Passed 9.38 sec; Start 90: cepa1; 245/411 Test #266: opt1-fd .......................... Passed 10.40 sec; Start 123: dfccsd1; 246/411 Test #192: fd-freq-energy ................... Passed 9.49 sec; Start 365: cubeprop-esp; 247/411 Test #123: dfccsd1 .......................... Passed 3.18 sec; Start 180: fsapt-terms; 248/411 Test #15: cbs-xtpl-freq .................... Passed 8.72 sec; Start 88: cepa2; 249/411 Test #132: dfmp2-4 .......................... Passed 6.41 sec; Start 367: scf-hess1; 250/411 Test #197: freq-isotope1 .................... Passed 11.97 sec; Start 185: fci-h2o; 251/411 Test #90: cepa1 ............................ Passed 9.54 sec; Start 21: cc10; 252/411 Test #357: tu4-h2o-freq ..................... Passed 11.18 sec; Start 270: opt4; 253/411 Test #88: cepa2 ............................ Passed 4.53 sec; Start 241: ocepa-grad1; 254/411 Test #365: cubeprop-esp ..................... Passed 8.61 sec; Start 291: psimrcc-fd-freq,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:22754,Test,Test,22754,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Start 129: dfmp2-1; 119/411 Test #312: rasci-ne ......................... Passed 29.30 sec; Start 64: cc47; 120/411 Test #206: ghosts ........................... Passed 30.14 sec; Start 78: cc8a; 121/411 Test #106: dcft-grad4 ....................... Passed 31.84 sec; Start 80: cc8c; 122/411 Test #273: opt7 ............................. Passed 39.55 sec; Start 26: cc13b; 123/411 Test #27: cc13c ............................ Passed 33.42 sec; Start 140: dfomp2-2; 124/411 Test #64: cc47 ............................. Passed 20.15 sec; Start 342: soscf-dft; 125/411 Test #256: omp2p5-grad2 ..................... Passed 25.07 sec; Start 71: cc53; 126/411 Test #78: cc8a ............................. Passed 14.28 sec; Start 337: scf6; 127/411 Test #129: dfmp2-1 .......................... Passed 29.95 sec; Start 323: sapt7; 128/411 Test #80: cc8c ............................. Passed 17.90 sec; Start 67: cc4a; 129/411 Test #140: dfomp2-2 ......................... Passed 17.39 sec; Start 245: ocepa3; 130/411 Test #71: cc53 ............................. Passed 19.39 sec; Start 374: dft-custom-gga; 131/411 Test #67: cc4a ............................. Passed 18.90 sec; Start 55: cc39; 132/411 Test #26: cc13b ............................ Passed 33.95 sec; Start 92: ci-multi; 133/411 Test #337: scf6 ............................. Passed 27.76 sec; Start 274: opt8; 134/411 Test #342: soscf-dft ........................ Passed 29.78 sec; Start 63: cc46; 135/411 Test #323: sapt7 ............................ Passed 33.16 sec; Start 336: scf5; 136/411 Test #245: ocepa3 ........................... Passed 24.56 sec; Start 196: fd-gradient; 137/411 Test #374: dft-custom-gga ................... Passed 27.06 sec; Start 326: scf-ecp; 138/411 Test #55: cc39 ............................. Passed 21.09 sec; Start 56: cc4; 139/411 Test #63: cc46 ............................. Passed 19.28 sec; Start 1: adc1; 140/411 Test #92: ci-multi ......................... Passed 23.62 sec; Start 126: dfccsd-t-grad1;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:12184,Test,Test,12184,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Start 132: dfmp2-3; 112/412 Test #66: cc48 ............................. Passed 63.06 sec; Start 201: fnocc2; 113/412 Test #349: sapt-compare ..................... Passed 59.37 sec; Start 55: cc38; 114/412 Test #220: mints-benchmark .................. Passed 56.59 sec; Start 81: cc8c; 115/412 Test #308: pywrap-db1 ....................... Passed 62.96 sec; Start 152: dfomp2p5-2; 116/412 Test #65: cc47 ............................. Passed 89.72 sec; Start 68: cc4a; 117/412 Test #57: cc4 .............................. Passed 86.80 sec; Start 79: cc8a; 118/412 Test #132: dfmp2-3 .......................... Passed 59.47 sec; Start 148: dfomp3-2; 119/412 Test #12: cbs-parser ....................... Passed 96.99 sec; Start 246: ocepa3; 120/412 Test #82: cc9 .............................. Passed 89.68 sec; Start 64: cc46; 121/412 Test #55: cc38 ............................. Passed 68.64 sec; Start 74: cc55; 122/412 Test #141: dfomp2-2 ......................... Passed 85.24 sec; Start 56: cc39; 123/412 Test #83: cc9a ............................. Passed 112.00 sec; Start 85: cdomp2-2; 124/412 Test #78: cc8 .............................. Passed 85.11 sec; Start 143: dfomp2-4; 125/412 Test #201: fnocc2 ........................... Passed 90.60 sec; Start 313: rasci-ne; 126/412 Test #108: dcft1 ............................ Passed 127.38 sec; Start 72: cc53; 127/412 Test #68: cc4a ............................. Passed 76.60 sec; Start 338: scf6; 128/412 Test #152: dfomp2p5-2 ....................... Passed 100.80 sec; Start 73: cc54; 129/412 Test #81: cc8c ............................. Passed 114.40 sec; Start 80: cc8b; 130/412 Test #313: rasci-ne ......................... Passed 55.19 sec; Start 107: dcft-grad4; 131/412 Test #64: cc46 ............................. Passed 92.56 sec; Start 337: scf5; 132/412 Test #246: ocepa3 ........................... Passed 110.86 sec; Start 207: ghosts; 133/412 Test #74: cc55 ............................. Passed 104.12 sec; Start 195: fd-freq-gra,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:11681,Test,Test,11681,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Start 152: dfomp2p5-2; 92/412 Test #114: dcft7 ............................ Passed 366.54 sec; Start 82: cc9; 93/412 Test #168: dft-b3lyp ........................ Passed 74.16 sec; Start 298: pubchem1; 94/412 Test #69: cc50 ............................. Passed 59.08 sec; Start 148: dfomp3-2; 95/412 Test #390: python-pubchem ................... Passed 72.12 sec; Start 141: dfomp2-2; 96/412 Test #300: pywrap-alias ..................... Passed 80.85 sec; Start 60: cc42; 97/412 Test #317: sapt2 ............................ Passed 393.02 sec; Start 66: cc48; 98/412 Test #257: omp2p5-grad2 ..................... Passed 84.55 sec; Start 78: cc8; 99/412 Test #35: cc19 ............................. Passed 69.43 sec; Start 57: cc4; 100/412 Test #67: cc49 ............................. Passed 64.19 sec; Start 101: ci-property; 101/412 Test #79: cc8a ............................. Passed 64.97 sec; Start 55: cc38; 102/412 Test #152: dfomp2p5-2 ....................... Passed 55.57 sec; Start 2: adc2; 103/412 Test #82: cc9 .............................. Passed 53.44 sec; Start 72: cc53; 104/412 Test #298: pubchem1 ......................... Passed 65.20 sec; Start 277: opt11; 105/412 Test #148: dfomp3-2 ......................... Passed 61.82 sec; Start 80: cc8b; 106/412 Test #145: dfomp2-grad2 ..................... Passed 129.23 sec; Start 68: cc4a; 107/412 Test #78: cc8 .............................. Passed 50.96 sec; Start 56: cc39; 108/412 Test #141: dfomp2-2 ......................... Passed 65.70 sec; Start 74: cc55; 109/412 Test #60: cc42 ............................. Passed 58.64 sec; Start 81: cc8c; 110/412 Test #72: cc53 ............................. Passed 42.85 sec; Start 83: cc9a; 111/412 Test #2: adc2 ............................. Passed 44.73 sec; Start 163: dft-grad-meta; 112/412 Test #55: cc38 ............................. Passed 48.99 sec; Start 238: nbody-he-cluster; 113/412 Test #66: cc48 ............................. Passed 58.90 sec; Start 171: dft1-alt; 114/412 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:9842,Test,Test,9842,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['Test'],['Test']
Testability,Start 156: dft-grad-lr3; Start 228: mp2-def2; Start 40: cc24; Start 36: cc2; Start 179: fsapt1; Start 301: pywrap-all; Start 146: dfomp2-grad3; Start 305: pywrap-checkrun-rhf; 1/412 Test #228: mp2-def2 ......................... Passed 422.59 sec; Start 42: cc26; 2/412 Test #156: dft-grad-lr3 ..................... Passed 456.14 sec; Start 307: pywrap-checkrun-uhf; 3/412 Test #36: cc2 .............................. Passed 642.46 sec; Start 77: cc7; 4/412 Test #40: cc24 ............................. Passed 651.87 sec; Start 241: ocepa-freq1; 5/412 Test #43: cc27 ............................. Passed 960.14 sec; Start 183: isapt1; 6/412 Test #39: cc23 ............................. Passed 1144.43 sec; Start 306: pywrap-checkrun-rohf; 7/412 Test #41: cc25 ............................. Passed 1174.58 sec; Start 25: cc13; 8/412 Test #146: dfomp2-grad3 ..................... Passed 1217.72 sec; Start 45: cc29; 9/412 Test #46: cc3 .............................. Passed 1255.05 sec; Start 29: cc13d; 10/412 Test #42: cc26 ............................. Passed 914.66 sec; Start 115: dcft8; 11/412 Test #183: isapt1 ........................... Passed 401.39 sec; Start 112: dcft5; 12/412 Test #395: python-vibanalysis ............... Passed 1424.43 sec; Start 18: cbs-xtpl-func; 13/412 Test #37: cc21 ............................. Passed 1446.40 sec; Start 182: fsapt-allterms; 14/412 Test #45: cc29 ............................. Passed 300.99 sec; Start 194: fd-freq-energy-large; 15/412 Test #104: dcft-grad1 ....................... Passed 1521.99 sec; Start 196: fd-freq-gradient-large; 16/412 Test #305: pywrap-checkrun-rhf .............. Passed 1605.76 sec; Start 279: opt13; 17/412 Test #301: pywrap-all ....................... Passed 1667.37 sec; Start 30: cc14; 18/412 Test #241: ocepa-freq1 ...................... Passed 1040.94 sec; Start 113: dcft6; 19/412 Test #29: cc13d ............................ Passed 491.27 sec; Start 374: dft-custom-mgga; 20/412 Test #25: cc13 ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:1287,Test,Test,1287,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['Test'],['Test']
Testability,Start 16: cbs-xtpl-gradient; 15/411 Test #15: cbs-xtpl-freq .................... Passed 12.40 sec; Start 17: cbs-xtpl-opt; 16/411 Test #16: cbs-xtpl-gradient ................ Passed 21.29 sec; Start 19: cbs-xtpl-wrapper; 17/411 Test #17: cbs-xtpl-opt ..................... Passed 63.51 sec; Start 20: cc1; 18/411 Test #13: cbs-xtpl-alpha ................... Passed 128.24 sec; Start 21: cc10; 19/411 Test #21: cc10 ............................. Passed 10.56 sec; Start 22: cc11; 20/411 Test #19: cbs-xtpl-wrapper ................. Passed 70.14 sec; Start 23: cc12; 21/411 Test #20: cc1 .............................. Passed 27.02 sec; Start 24: cc13; 22/411 Test #23: cc12 ............................. Passed 11.49 sec; Start 26: cc13b; 23/411 Test #22: cc11 ............................. Passed 16.46 sec; Start 27: cc13c; 24/411 Test #205: frac-traverse .................... Passed 274.86 sec; Start 28: cc13d; 25/411 Test #26: cc13b ............................ Passed 46.68 sec; Start 29: cc14; 26/411 Test #27: cc13c ............................ Passed 47.39 sec; Start 30: cc15; 27/411 Test #195: fd-freq-gradient-large ........... Passed 355.17 sec; Start 31: cc16; 28/411 Test #25: cc13a ............................ Passed 357.77 sec; Start 32: cc17; 29/411 Test #30: cc15 ............................. Passed 47.52 sec; Start 33: cc18; 30/411 Test #32: cc17 ............................. Passed 25.71 sec; Start 34: cc19; 31/411 Test #113: dcft7 ............................ Passed 385.53 sec; Start 35: cc2; 32/411 Test #33: cc18 ............................. Passed 27.49 sec; Start 36: cc21; 33/411 Test #24: cc13 ............................. Passed 145.39 sec; Start 37: cc22; 34/411 Test #28: cc13d ............................ Passed 149.42 sec; Start 38: cc23; 35/411 Test #34: cc19 ............................. Passed 41.72 sec; Start 39: cc24; 36/411 Test #37: cc22 ............................. Passed 26.35 sec; Start 40: cc25; 37/411 Test #316: sapt2 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:2744,Test,Test,2744,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,"Start 176: docs-bases; 393/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 2.19 sec; Start 311: pywrap-molecule; 394/413 Test #176: docs-bases ....................... Passed 0.56 sec; Start 162: dft-grac; 395/413 Test #310: pywrap-db3 ....................... Passed 0.66 sec; Start 210: matrix1; 396/413 Test #213: mcscf3 ........................... Passed 1.57 sec; Start 103: cubeprop-frontier; 397/413 Test #313: rasci-h2o ........................ Passed 2.34 sec; Start 88: cepa1; 398/413 Test #210: matrix1 .......................... Passed 0.55 sec; 399/413 Test #211: mcscf1 ........................... Passed 1.53 sec; 400/413 Test #311: pywrap-molecule .................. Passed 1.08 sec; 401/413 Test #132: dfmp2-2 .......................... Passed 2.80 sec; 402/413 Test #330: scf-upcast-custom-basis .......... Passed 2.79 sec; 403/413 Test #123: dfccdl1 .......................... Passed 3.04 sec; 404/413 Test #120: dfcasscf-fzc-sp .................. Passed 3.52 sec; 405/413 Test #8: castup1 .......................... Passed 2.21 sec; 406/413 Test #136: dfmp2-grad1 ...................... Passed 3.71 sec; 407/413 Test #162: dft-grac ......................... Passed 2.01 sec; 408/413 Test #103: cubeprop-frontier ................ Passed 2.79 sec; 409/413 Test #6: ao-casscf-sp ..................... Passed 6.03 sec; 410/413 Test #88: cepa1 ............................ Passed 4.24 sec; 411/413 Test #18: cbs-xtpl-func .................... Passed 1422.73 sec; 412/413 Test #180: fsapt1 ........................... Passed 1945.68 sec; 413/413 Test #320: sapt4 ............................ Passed 1820.54 sec. 100% tests passed, 0 tests failed out of 413. Label Time Summary:; adc = 60.32 sec*proc (2 tests); autotest = 2172.08 sec*proc (26 tests); cart = 18455.22 sec*proc (123 tests); cas = 58.02 sec*proc (1 test); casscf = 81.96 sec*proc (11 tests); cbs = 2562.37 sec*proc (11 tests); cc = 14549.66 sec*proc (65 tests); cdomp2 = 54.85 sec*proc (2 tests); cepa = 139.13 sec*",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:37944,Test,Test,37944,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Start 183: fsapt-allterms; 19/413 Test #113: dcft5 ............................ Passed 418.67 sec; Start 195: fd-freq-energy-large; 20/413 Test #48: cc31 ............................. Passed 260.15 sec; Start 197: fd-freq-gradient-large; 21/413 Test #116: dcft8 ............................ Passed 868.73 sec; Start 280: opt13; 22/413 Test #147: dfomp2-grad3 ..................... Passed 1426.39 sec; Start 308: pywrap-checkrun-uhf; 23/413 Test #105: dcft-grad1 ....................... Passed 1466.56 sec; Start 28: cc13c; 24/413 Test #114: dcft6 ............................ Passed 226.08 sec; Start 71: cc52; 25/413 Test #77: cc7 .............................. Passed 665.07 sec; Start 375: dft-custom-mgga; 26/413 Test #13: cbs-xtpl-alpha ................... Passed 425.08 sec; Start 98: cisd-opt-fd; 27/413 Test #28: cc13c ............................ Passed 157.23 sec; Start 307: pywrap-checkrun-rohf; 28/413 Test #46: cc3 .............................. Passed 1642.77 sec; Start 322: sapt6; 29/413 Test #242: ocepa-freq1 ...................... Passed 704.28 sec; Start 31: cc15; 30/413 Test #71: cc52 ............................. Passed 164.06 sec; Start 44: cc28; 31/413 Test #197: fd-freq-gradient-large ........... Passed 290.82 sec; Start 106: dcft-grad2; 32/413 Test #98: cisd-opt-fd ...................... Passed 155.65 sec; Start 146: dfomp2-grad2; 33/413 Test #375: dft-custom-mgga .................. Passed 183.50 sec; Start 11: cbs-delta-energy; 34/413 Test #112: dcft4 ............................ Passed 1745.55 sec; Start 160: dfscf-bz2; 35/413 Test #31: cc15 ............................. Passed 89.05 sec; Start 58: cc40; 36/413 Test #44: cc28 ............................. Passed 88.29 sec; Start 283: opt-irc-2; 37/413 Test #322: sapt6 ............................ Passed 158.72 sec; Start 117: dcft9; 38/413 Test #146: dfomp2-grad2 ..................... Passed 99.16 sec; Start 60: cc42; 39/413 Test #106: dcft-grad2 ....................... Passed 122.59 sec; Start 151: dfom,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:3044,Test,Test,3044,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Start 190: fci-coverage; 349/411 Test #203: frac ............................. Passed 1.40 sec; Start 157: dft-grac; 350/411 Test #345: dfep2-2 .......................... Passed 1.84 sec; Start 361: x2c2; 351/411 Test #213: mints2 ........................... Passed 2.51 sec; Start 233: mp3-grad1; 352/411 Test #157: dft-grac ......................... Passed 1.57 sec; Start 349: sapt-sf1; 353/411 Test #401: json-schema-1-orient ............. Passed 2.05 sec; Start 407: skeletondfmp2; 354/411 Test #199: fnocc1 ........................... Passed 2.94 sec; Start 404: json-schema-1-properties; 355/411 Test #361: x2c2 ............................. Passed 1.99 sec; Start 406: skeletonaointegrals; 356/411 Test #190: fci-coverage ..................... Passed 3.02 sec; Start 328: scf-upcast-custom-basis; 357/411 Test #349: sapt-sf1 ......................... Passed 1.08 sec; Start 395: python-mints13; 358/411 Test #233: mp3-grad1 ........................ Passed 1.75 sec; Start 390: python-mints9; 359/411 Test #407: skeletondfmp2 .................... Passed 1.23 sec; Start 220: mints-helper; 360/411 Test #404: json-schema-1-properties ......... Passed 1.03 sec; Start 8: castup1; 361/411 Test #406: skeletonaointegrals .............. Passed 0.92 sec; Start 221: mints9; 362/411 Test #220: mints-helper ..................... Passed 1.07 sec; Start 383: psi4numpy-rhf-gradient; 363/411 Test #328: scf-upcast-custom-basis .......... Passed 1.36 sec; Start 408: skeletonmointegrals; 364/411 Test #8: castup1 .......................... Passed 1.23 sec; Start 362: x2c3; 365/411 Test #395: python-mints13 ................... Passed 1.90 sec; Start 398: json-v11-gradient; 366/411 Test #390: python-mints9 .................... Passed 1.91 sec; Start 352: stability2; 367/411 Test #383: psi4numpy-rhf-gradient ........... Passed 0.97 sec; Start 353: tu1-h2o-energy; 368/411 Test #408: skeletonmointegrals .............. Passed 0.95 sec; Start 96: cisd-h2o-clpse; 369/411 Test #221: mints9 ..............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:33427,Test,Test,33427,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Start 213: mcscf3; 389/413 Test #218: mints5 ........................... Passed 1.04 sec; Start 214: mints1; 390/413 Test #366: options1 ......................... Passed 0.66 sec; Start 177: docs-dft; 391/413 Test #300: pubchem2 ......................... Passed 1.76 sec; Start 211: mcscf1; 392/413 Test #217: mints4 ........................... Passed 1.08 sec; Start 311: pywrap-molecule; 393/413 Test #214: mints1 ........................... Passed 0.71 sec; Start 310: pywrap-db3; 394/413 Test #177: docs-dft ......................... Passed 0.61 sec; Start 176: docs-bases; 395/413 Test #176: docs-bases ....................... Passed 0.54 sec; Start 162: dft-grac; 396/413 Test #310: pywrap-db3 ....................... Passed 0.68 sec; Start 210: matrix1; 397/413 Test #311: pywrap-molecule .................. Passed 1.08 sec; Start 88: cepa1; 398/413 Test #356: tu2-ch2-energy ................... Passed 3.20 sec; 399/413 Test #210: matrix1 .......................... Passed 0.66 sec; 400/413 Test #211: mcscf1 ........................... Passed 2.13 sec; 401/413 Test #212: mcscf2 ........................... Passed 3.62 sec; 402/413 Test #289: psimrcc-ccsd_t-1 ................. Passed 4.39 sec; 403/413 Test #213: mcscf3 ........................... Passed 2.91 sec; 404/413 Test #329: scf-guess-read1 .................. Passed 4.72 sec; 405/413 Test #162: dft-grac ......................... Passed 2.31 sec; 406/413 Test #330: scf-upcast-custom-basis .......... Passed 4.85 sec; 407/413 Test #8: castup1 .......................... Passed 4.98 sec; 408/413 Test #313: rasci-h2o ........................ Passed 5.23 sec; 409/413 Test #132: dfmp2-2 .......................... Passed 5.73 sec; 410/413 Test #88: cepa1 ............................ Passed 3.93 sec; 411/413 Test #18: cbs-xtpl-func .................... Passed 1465.89 sec; 412/413 Test #180: fsapt1 ........................... Passed 1916.37 sec; 413/413 Test #320: sapt4 ............................ Passed 1842.77 sec. 100% tests ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:37595,Test,Test,37595,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Start 243: ocepa-grad2; 89/412 Test #58: cc40 ............................. Passed 75.15 sec; Start 60: cc42; 90/412 Test #82: cc9 .............................. Passed 62.16 sec; Start 108: dcft1; 91/412 Test #57: cc4 .............................. Passed 57.29 sec; Start 35: cc19; 92/412 Test #114: dcft7 ............................ Passed 393.99 sec; Start 66: cc48; 93/412 Test #69: cc50 ............................. Passed 73.08 sec; Start 101: ci-property; 94/412 Test #78: cc8 .............................. Passed 58.53 sec; Start 65: cc47; 95/412 Test #245: ocepa2 ........................... Passed 85.34 sec; Start 28: cc13c; 96/412 Test #251: omp2-5 ........................... Passed 85.48 sec; Start 67: cc49; 97/412 Test #80: cc8b ............................. Passed 50.08 sec; Start 55: cc38; 98/412 Test #298: pubchem1 ......................... Passed 62.79 sec; Start 257: omp2p5-grad2; 99/412 Test #60: cc42 ............................. Passed 63.53 sec; Start 72: cc53; 100/412 Test #193: fd-freq-energy ................... Passed 94.52 sec; Start 157: dfomp2p5-grad2; 101/412 Test #35: cc19 ............................. Passed 71.33 sec; Start 148: dfomp3-2; 102/412 Test #101: ci-property ...................... Passed 60.88 sec; Start 163: dft-grad-meta; 103/412 Test #66: cc48 ............................. Passed 63.96 sec; Start 27: cc13b; 104/412 Test #243: ocepa-grad2 ...................... Passed 84.44 sec; Start 74: cc55; 105/412 Test #108: dcft1 ............................ Passed 97.71 sec; Start 19: cbs-xtpl-nbody; 106/412 Test #55: cc38 ............................. Passed 58.64 sec; Start 300: pywrap-alias; 107/412 Test #65: cc47 ............................. Passed 80.60 sec; Start 141: dfomp2-2; 108/412 Test #67: cc49 ............................. Passed 72.11 sec; Start 171: dft1-alt; 109/412 Test #72: cc53 ............................. Passed 57.83 sec; Start 73: cc54; 110/412 Test #26: cc13a ............................ Passed 508.31 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:9536,Test,Test,9536,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['Test'],['Test']
Testability,"Start 246: omp2-5; 51/401 Test #12: cbs-parser ....................... Passed 50.44 sec; Start 64: cc48; 52/401 Test #61: cc44 ............................. Passed 62.83 sec; Start 73: cc5a; 53/401 Test #233: nbody-he-cluster ................. Passed 47.19 sec; Start 240: ocepa2; 54/401 Test #58: cc41 ............................. Passed 109.69 sec; Start 333: scf6; 55/401 Test #272: opt11 ............................ Passed 51.45 sec; Start 245: omp2-4; 56/401 Test #28: cc13d ............................ Passed 217.30 sec; Start 369: dft-custom-gga; 57/401 Test #57: cc40 ............................. Passed 61.45 sec; Start 269: opt7; 58/401 Test #46: cc30 ............................. Passed 67.91 sec; Start 308: rasci-ne; 59/401 Test #255: omp3-3 ........................... Passed 75.64 sec; Start 2: adc2; 60/401 Test #27: cc13c ............................ Passed 98.63 sec; Start 67: cc50; 61/401 Test #68: cc51 ............................. Passed 51.83 sec; Start 154: dfscf-bz2; 62/401 Test #143: dfomp2-grad2 ..................... Passed 80.96 sec; Start 259: omp3-grad2; 63/401 Test #369: dft-custom-gga ................... Passed 31.17 sec; Start 146: dfomp3-2; 64/401 Test #257: omp3-5 ........................... Passed 92.99 sec; Start 322: scf-ecp; 65/401 Test #333: scf6 ............................. Passed 42.20 sec; Start 226: mp2-module; 66/401 Test #60: cc43 ............................. Passed 101.83 sec; Start 298: pywrap-cbs1; 67/401 Test #308: rasci-ne ......................... Passed 31.21 sec; Start 152: dfomp2p5-grad2; 68/401 Test #64: cc48 ............................. Passed 64.50 sec; Start 386: python-pubchem; 69/401 Test #2: adc2 ............................. Passed 36.41 sec; Start 376: cc-module,; 70/401 Test #154: dfscf-bz2 ........................ Passed 28.93 sec; Start 150: dfomp2p5-2; 71/401 Test #269: opt7 ............................. Passed 47.94 sec; Start 344: sapt-compare; 72/401 Test #73: cc5a ............................. Passed",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:6371,Test,Test,6371,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Start 257: omp3-5; 47/401 Test #301: pywrap-checkrun-rohf ............. Passed 555.72 sec; Start 272: opt11; 48/401 Test #69: cc52 ............................. Passed 122.20 sec; Start 68: cc51; 49/401 Test #163: dft-b3lyp ........................ Passed 36.67 sec; Start 256: omp3-4; 50/401 Test #24: cc13 ............................. Passed 251.21 sec; Start 246: omp2-5; 51/401 Test #12: cbs-parser ....................... Passed 50.44 sec; Start 64: cc48; 52/401 Test #61: cc44 ............................. Passed 62.83 sec; Start 73: cc5a; 53/401 Test #233: nbody-he-cluster ................. Passed 47.19 sec; Start 240: ocepa2; 54/401 Test #58: cc41 ............................. Passed 109.69 sec; Start 333: scf6; 55/401 Test #272: opt11 ............................ Passed 51.45 sec; Start 245: omp2-4; 56/401 Test #28: cc13d ............................ Passed 217.30 sec; Start 369: dft-custom-gga; 57/401 Test #57: cc40 ............................. Passed 61.45 sec; Start 269: opt7; 58/401 Test #46: cc30 ............................. Passed 67.91 sec; Start 308: rasci-ne; 59/401 Test #255: omp3-3 ........................... Passed 75.64 sec; Start 2: adc2; 60/401 Test #27: cc13c ............................ Passed 98.63 sec; Start 67: cc50; 61/401 Test #68: cc51 ............................. Passed 51.83 sec; Start 154: dfscf-bz2; 62/401 Test #143: dfomp2-grad2 ..................... Passed 80.96 sec; Start 259: omp3-grad2; 63/401 Test #369: dft-custom-gga ................... Passed 31.17 sec; Start 146: dfomp3-2; 64/401 Test #257: omp3-5 ........................... Passed 92.99 sec; Start 322: scf-ecp; 65/401 Test #333: scf6 ............................. Passed 42.20 sec; Start 226: mp2-module; 66/401 Test #60: cc43 ............................. Passed 101.83 sec; Start 298: pywrap-cbs1; 67/401 Test #308: rasci-ne ......................... Passed 31.21 sec; Start 152: dfomp2p5-grad2; 68/401 Test #64: cc48 ............................. Passed 64.50 sec; Start 386:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:6016,Test,Test,6016,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Start 262: opt1-fd; 317/401 Test #164: dft1 ............................. Passed 93.19 sec; Start 263: opt2; 318/401 Test #246: omp2-5 ........................... Passed 34.59 sec; Start 264: opt2-fd; 319/401 Test #252: omp2p5-grad2 ..................... Passed 23.25 sec; Start 265: opt3; 320/401 Test #262: opt1-fd .......................... Passed 7.97 sec; Start 266: opt4; 321/401 Test #265: opt3 ............................. Passed 5.40 sec; Start 267: opt5; 322/401 Test #260: opt-lindep-change ................ Passed 12.63 sec; Start 268: opt6; 323/401 Test #267: opt5 ............................. Passed 2.46 sec; Start 269: opt7; 324/401 Test #264: opt2-fd .......................... Passed 10.98 sec; Start 270: opt8; 325/401 Test #266: opt4 ............................. Passed 9.17 sec; Start 271: opt9; 326/401 Test #263: opt2 ............................. Passed 19.83 sec; Start 272: opt11; 327/401 Test #259: omp3-grad2 ....................... Passed 28.34 sec; Start 273: opt12; 328/401 Test #255: omp3-3 ........................... Passed 39.85 sec; Start 275: opt14; 329/401 Test #256: omp3-4 ........................... Passed 34.77 sec; Start 276: opt-irc-1; 330/401 Test #268: opt6 ............................. Passed 15.72 sec; Start 277: opt-irc-2; 331/401 Test #257: omp3-5 ........................... Passed 36.60 sec; Start 278: opt-irc-3; 332/401 Test #271: opt9 ............................. Passed 12.88 sec; Start 280: props1; 333/401 Test #280: props1 ........................... Passed 3.01 sec; Start 281: props2; 334/401 Test #223: mp2-def2 ......................... Passed 82.11 sec; Start 282: props3; 335/401 Test #273: opt12 ............................ Passed 14.45 sec; Start 292: psithon2; 336/401 Test #270: opt8 ............................. Passed 23.09 sec; Start 293: pubchem1; 337/401 Test #282: props3 ........................... Passed 5.49 sec; Start 294: pubchem2; 338/401 Test #281: props2 ........................... Passed 7.99 sec; Start 29,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:30610,Test,Test,30610,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Start 264: opt2-fd; 319/401 Test #252: omp2p5-grad2 ..................... Passed 23.25 sec; Start 265: opt3; 320/401 Test #262: opt1-fd .......................... Passed 7.97 sec; Start 266: opt4; 321/401 Test #265: opt3 ............................. Passed 5.40 sec; Start 267: opt5; 322/401 Test #260: opt-lindep-change ................ Passed 12.63 sec; Start 268: opt6; 323/401 Test #267: opt5 ............................. Passed 2.46 sec; Start 269: opt7; 324/401 Test #264: opt2-fd .......................... Passed 10.98 sec; Start 270: opt8; 325/401 Test #266: opt4 ............................. Passed 9.17 sec; Start 271: opt9; 326/401 Test #263: opt2 ............................. Passed 19.83 sec; Start 272: opt11; 327/401 Test #259: omp3-grad2 ....................... Passed 28.34 sec; Start 273: opt12; 328/401 Test #255: omp3-3 ........................... Passed 39.85 sec; Start 275: opt14; 329/401 Test #256: omp3-4 ........................... Passed 34.77 sec; Start 276: opt-irc-1; 330/401 Test #268: opt6 ............................. Passed 15.72 sec; Start 277: opt-irc-2; 331/401 Test #257: omp3-5 ........................... Passed 36.60 sec; Start 278: opt-irc-3; 332/401 Test #271: opt9 ............................. Passed 12.88 sec; Start 280: props1; 333/401 Test #280: props1 ........................... Passed 3.01 sec; Start 281: props2; 334/401 Test #223: mp2-def2 ......................... Passed 82.11 sec; Start 282: props3; 335/401 Test #273: opt12 ............................ Passed 14.45 sec; Start 292: psithon2; 336/401 Test #270: opt8 ............................. Passed 23.09 sec; Start 293: pubchem1; 337/401 Test #282: props3 ........................... Passed 5.49 sec; Start 294: pubchem2; 338/401 Test #281: props2 ........................... Passed 7.99 sec; Start 297: pywrap-basis; 339/401 Test #294: pubchem2 ......................... Passed 1.46 sec; Start 299: pywrap-checkrun-convcrit; 340/401 Test #269: opt7 ............................. Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:30794,Test,Test,30794,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Start 266: opt1-fd; 256/411 Test #265: opt1 ............................. Passed 5.49 sec; Start 267: opt2; 257/411 Test #145: dfomp2-grad3 ..................... Passed 346.59 sec; Start 268: opt2-fd; 258/411 Test #266: opt1-fd .......................... Passed 10.04 sec; Start 269: opt3; 259/411 Test #250: omp2-5 ........................... Passed 75.48 sec; Start 270: opt4; 260/411 Test #269: opt3 ............................. Passed 7.02 sec; Start 271: opt5; 261/411 Test #268: opt2-fd .......................... Passed 12.17 sec; Start 272: opt6; 262/411 Test #264: opt-lindep-change ................ Passed 28.17 sec; Start 273: opt7; 263/411 Test #270: opt4 ............................. Passed 9.63 sec; Start 274: opt8; 264/411 Test #271: opt5 ............................. Passed 5.71 sec; Start 275: opt9; 265/411 Test #256: omp2p5-grad2 ..................... Passed 64.33 sec; Start 276: opt11; 266/411 Test #267: opt2 ............................. Passed 23.31 sec; Start 277: opt12; 267/411 Test #275: opt9 ............................. Passed 19.86 sec; Start 279: opt14; 268/411 Test #272: opt6 ............................. Passed 26.36 sec; Start 280: opt-irc-1; 269/411 Test #261: omp3-5 ........................... Passed 72.32 sec; Start 281: opt-irc-2; 270/411 Test #263: omp3-grad2 ....................... Passed 54.66 sec; Start 282: opt-irc-3; 271/411 Test #260: omp3-4 ........................... Passed 74.86 sec; Start 283: opt-freeze-coords; 272/411 Test #277: opt12 ............................ Passed 23.38 sec; Start 284: props1; 273/411 Test #284: props1 ........................... Passed 3.71 sec; Start 285: props2; 274/411 Test #259: omp3-3 ........................... Passed 81.99 sec; Start 286: props3; 275/411 Test #283: opt-freeze-coords ................ Passed 5.69 sec; Start 287: psimrcc-ccsd_t-1; 276/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.97 sec; Start 288: psimrcc-ccsd_t-2; 277/411 Test #274: opt8 ............................. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:24822,Test,Test,24822,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Start 266: opt1-fd; 256/411 Test #265: opt1 ............................. Passed 9.83 sec; Start 267: opt2; 257/411 Test #258: omp3-2 ........................... Passed 41.34 sec; Start 268: opt2-fd; 258/411 Test #264: opt-lindep-change ................ Passed 31.39 sec; Start 269: opt3; 259/411 Test #266: opt1-fd .......................... Passed 29.29 sec; Start 270: opt4; 260/411 Test #269: opt3 ............................. Passed 7.24 sec; Start 271: opt5; 261/411 Test #268: opt2-fd .......................... Passed 14.74 sec; Start 272: opt6; 262/411 Test #267: opt2 ............................. Passed 28.23 sec; Start 273: opt7; 263/411 Test #271: opt5 ............................. Passed 6.29 sec; Start 274: opt8; 264/411 Test #270: opt4 ............................. Passed 11.04 sec; Start 275: opt9; 265/411 Test #256: omp2p5-grad2 ..................... Passed 82.06 sec; Start 276: opt11; 266/411 Test #275: opt9 ............................. Passed 20.41 sec; Start 277: opt12; 267/411 Test #272: opt6 ............................. Passed 30.42 sec; Start 279: opt14; 268/411 Test #274: opt8 ............................. Passed 41.20 sec; Start 280: opt-irc-1; 269/411 Test #273: opt7 ............................. Passed 54.36 sec; Start 281: opt-irc-2; 270/411 Test #277: opt12 ............................ Passed 26.21 sec; Start 282: opt-irc-3; 271/411 Test #263: omp3-grad2 ....................... Passed 107.84 sec; Start 283: opt-freeze-coords; 272/411 Test #261: omp3-5 ........................... Passed 115.84 sec; Start 284: props1; 273/411 Test #284: props1 ........................... Passed 4.88 sec; Start 285: props2; 274/411 Test #283: opt-freeze-coords ................ Passed 7.18 sec; Start 286: props3; 275/411 Test #259: omp3-3 ........................... Passed 125.61 sec; Start 287: psimrcc-ccsd_t-1; 276/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.91 sec; Start 288: psimrcc-ccsd_t-2; 277/411 Test #260: omp3-4 .........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:24795,Test,Test,24795,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,Start 266: opt1-fd; 264/411 Test #264: opt-lindep-change ................ Passed 26.88 sec; Start 267: opt2; 265/411 Test #266: opt1-fd .......................... Passed 11.98 sec; Start 268: opt2-fd; 266/411 Test #268: opt2-fd .......................... Passed 14.60 sec; Start 269: opt3; 267/411 Test #267: opt2 ............................. Passed 24.64 sec; Start 270: opt4; 268/411 Test #259: omp3-3 ........................... Passed 81.47 sec; Start 271: opt5; 269/411 Test #269: opt3 ............................. Passed 5.14 sec; Start 272: opt6; 270/411 Test #271: opt5 ............................. Passed 2.80 sec; Start 273: opt7; 271/411 Test #260: omp3-4 ........................... Passed 82.75 sec; Start 274: opt8; 272/411 Test #270: opt4 ............................. Passed 8.49 sec; Start 275: opt9; 273/411 Test #263: omp3-grad2 ....................... Passed 63.99 sec; Start 276: opt11; 274/411 Test #261: omp3-5 ........................... Passed 81.80 sec; Start 277: opt12; 275/411 Test #272: opt6 ............................. Passed 27.35 sec; Start 279: opt14; 276/411 Test #275: opt9 ............................. Passed 20.61 sec; Start 280: opt-irc-1; 277/411 Test #277: opt12 ............................ Passed 22.89 sec; Start 281: opt-irc-2; 278/411 Test #274: opt8 ............................. Passed 39.25 sec; Start 282: opt-irc-3; 279/411 Test #273: opt7 ............................. Passed 53.11 sec; Start 283: opt-freeze-coords; 280/411 Test #283: opt-freeze-coords ................ Passed 5.99 sec; Start 284: props1; 281/411 Test #276: opt11 ............................ Passed 54.29 sec; Start 285: props2; 282/411 Test #284: props1 ........................... Passed 4.43 sec; Start 286: props3; 283/411 Test #282: opt-irc-3 ........................ Passed 30.34 sec; Start 287: psimrcc-ccsd_t-1; 284/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.10 sec; Start 288: psimrcc-ccsd_t-2; 285/411 Test #285: props2 ........................... ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:25401,Test,Test,25401,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Start 281: props2; 334/401 Test #223: mp2-def2 ......................... Passed 82.11 sec; Start 282: props3; 335/401 Test #273: opt12 ............................ Passed 14.45 sec; Start 292: psithon2; 336/401 Test #270: opt8 ............................. Passed 23.09 sec; Start 293: pubchem1; 337/401 Test #282: props3 ........................... Passed 5.49 sec; Start 294: pubchem2; 338/401 Test #281: props2 ........................... Passed 7.99 sec; Start 297: pywrap-basis; 339/401 Test #294: pubchem2 ......................... Passed 1.46 sec; Start 299: pywrap-checkrun-convcrit; 340/401 Test #269: opt7 ............................. Passed 30.82 sec; Start 300: pywrap-checkrun-rhf; 341/401 Test #144: dfomp2-grad3 ..................... Passed 181.03 sec; Start 301: pywrap-checkrun-rohf; 342/401 Test #278: opt-irc-3 ........................ Passed 19.25 sec; Start 302: pywrap-checkrun-uhf; 343/401 Test #297: pywrap-basis ..................... Passed 9.99 sec; Start 304: pywrap-db3; 344/401 Test #304: pywrap-db3 ....................... Passed 0.90 sec; Start 306: rasci-c2-active; 345/401 Test #299: pywrap-checkrun-convcrit ......... Passed 10.69 sec; Start 307: rasci-h2o; 346/401 Test #292: psithon2 ......................... Passed 14.67 sec; Start 308: rasci-ne; 347/401 Test #109: dcft4 ............................ Passed 254.77 sec; Start 313: sapt3; 348/401 Test #307: rasci-h2o ........................ Passed 2.60 sec; Start 315: sapt5; 349/401 Test #306: rasci-c2-active .................. Passed 5.21 sec; Start 316: sapt6; 350/401 Test #272: opt11 ............................ Passed 36.20 sec; Start 317: sapt-dft-api; 351/401 Test #293: pubchem1 ......................... Passed 23.07 sec; Start 318: sapt-dft-lrc; 352/401 Test #313: sapt3 ............................ Passed 12.75 sec; Start 319: sapt7; 353/401 Test #317: sapt-dft-api ..................... Passed 9.24 sec; Start 322: scf-ecp; 354/401 Test #318: sapt-dft-lrc ..................... Passed 11.33 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:32144,Test,Test,32144,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Start 283: opt-freeze-coords; 272/411 Test #261: omp3-5 ........................... Passed 115.84 sec; Start 284: props1; 273/411 Test #284: props1 ........................... Passed 4.88 sec; Start 285: props2; 274/411 Test #283: opt-freeze-coords ................ Passed 7.18 sec; Start 286: props3; 275/411 Test #259: omp3-3 ........................... Passed 125.61 sec; Start 287: psimrcc-ccsd_t-1; 276/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.91 sec; Start 288: psimrcc-ccsd_t-2; 277/411 Test #260: omp3-4 ........................... Passed 129.75 sec; Start 289: psimrcc-ccsd_t-3; 278/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 2.56 sec; Start 290: psimrcc-ccsd_t-4; 279/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 2.58 sec; Start 291: psimrcc-fd-freq1; 280/411 Test #276: opt11 ............................ Passed 59.16 sec; Start 292: psimrcc-fd-freq2; 281/411 Test #285: props2 ........................... Passed 13.81 sec; Start 293: psimrcc-pt2; 282/411 Test #286: props3 ........................... Passed 15.41 sec; Start 294: psimrcc-sp1; 283/411 Test #293: psimrcc-pt2 ...................... Passed 2.79 sec; Start 295: psithon1; 284/411 Test #282: opt-irc-3 ........................ Passed 30.28 sec; Start 296: psithon2; 285/411 Test #294: psimrcc-sp1 ...................... Passed 5.00 sec; Start 297: pubchem1; 286/411 Test #295: psithon1 ......................... Passed 8.63 sec; Start 298: pubchem2; 287/411 Test #298: pubchem2 ......................... Passed 1.42 sec; Start 299: pywrap-alias; 288/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 19.59 sec; Start 300: pywrap-all; 289/411 Test #291: psimrcc-fd-freq1 ................. Passed 18.86 sec; Start 301: pywrap-basis; 290/411 Test #279: opt14 ............................ Passed 78.18 sec; Start 302: pywrap-cbs1; 291/411 Test #296: psithon2 ......................... Passed 23.99 sec; Start 303: pywrap-checkrun-convcrit; 292/411 Test #301: pywrap-basis ........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:26243,Test,Test,26243,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,Start 283: opt-freeze-coords; 272/411 Test #277: opt12 ............................ Passed 23.38 sec; Start 284: props1; 273/411 Test #284: props1 ........................... Passed 3.71 sec; Start 285: props2; 274/411 Test #259: omp3-3 ........................... Passed 81.99 sec; Start 286: props3; 275/411 Test #283: opt-freeze-coords ................ Passed 5.69 sec; Start 287: psimrcc-ccsd_t-1; 276/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.97 sec; Start 288: psimrcc-ccsd_t-2; 277/411 Test #274: opt8 ............................. Passed 34.19 sec; Start 289: psimrcc-ccsd_t-3; 278/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 2.27 sec; Start 290: psimrcc-ccsd_t-4; 279/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 2.23 sec; Start 291: psimrcc-fd-freq1; 280/411 Test #285: props2 ........................... Passed 13.08 sec; Start 292: psimrcc-fd-freq2; 281/411 Test #286: props3 ........................... Passed 13.45 sec; Start 293: psimrcc-pt2; 282/411 Test #293: psimrcc-pt2 ...................... Passed 2.41 sec; Start 294: psimrcc-sp1; 283/411 Test #273: opt7 ............................. Passed 52.95 sec; Start 295: psithon1; 284/411 Test #294: psimrcc-sp1 ...................... Passed 5.79 sec; Start 296: psithon2; 285/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 19.81 sec; Start 297: pubchem1; 286/411 Test #282: opt-irc-3 ........................ Passed 35.38 sec; Start 298: pubchem2; 287/411 Test #276: opt11 ............................ Passed 59.15 sec; Start 299: pywrap-alias; 288/411 Test #298: pubchem2 ......................... Passed 1.44 sec; Start 300: pywrap-all; 289/411 Test #291: psimrcc-fd-freq1 ................. Passed 25.01 sec; Start 301: pywrap-basis; 290/411 Test #295: psithon1 ......................... Passed 15.32 sec; Start 302: pywrap-cbs1; 291/411 Test #296: psithon2 ......................... Passed 26.42 sec; Start 303: pywrap-checkrun-convcrit; 292/411 Test #301: pywrap-basis .........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:26266,Test,Test,26266,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Start 286: props3; 283/411 Test #282: opt-irc-3 ........................ Passed 30.34 sec; Start 287: psimrcc-ccsd_t-1; 284/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.10 sec; Start 288: psimrcc-ccsd_t-2; 285/411 Test #285: props2 ........................... Passed 15.83 sec; Start 289: psimrcc-ccsd_t-3; 286/411 Test #286: props3 ........................... Passed 13.90 sec; Start 290: psimrcc-ccsd_t-4; 287/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 4.82 sec; Start 291: psimrcc-fd-freq1; 288/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 2.70 sec; Start 292: psimrcc-fd-freq2; 289/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 17.94 sec; Start 293: psimrcc-pt2; 290/411 Test #291: psimrcc-fd-freq1 ................. Passed 17.17 sec; Start 294: psimrcc-sp1; 291/411 Test #293: psimrcc-pt2 ...................... Passed 1.90 sec; Start 295: psithon1; 292/411 Test #279: opt14 ............................ Passed 75.20 sec; Start 296: psithon2; 293/411 Test #294: psimrcc-sp1 ...................... Passed 4.68 sec; Start 297: pubchem1; 294/411 Test #295: psithon1 ......................... Passed 14.49 sec; Start 298: pubchem2; 295/411 Test #298: pubchem2 ......................... Passed 1.29 sec; Start 299: pywrap-alias; 296/411 Test #227: mp2-def2 ......................... Passed 402.38 sec; Start 300: pywrap-all; 297/411 Test #280: opt-irc-1 ........................ Passed 93.85 sec; Start 301: pywrap-basis; 298/411 Test #296: psithon2 ......................... Passed 23.69 sec; Start 302: pywrap-cbs1; 299/411 Test #301: pywrap-basis ..................... Passed 22.01 sec; Start 303: pywrap-checkrun-convcrit; 300/411 Test #292: psimrcc-fd-freq2 ................. Passed 74.92 sec; Start 304: pywrap-checkrun-rhf; 301/411 Test #297: pubchem1 ......................... Passed 57.21 sec; Start 305: pywrap-checkrun-rohf; 302/411 Test #303: pywrap-checkrun-convcrit ......... Passed 43.41 sec; Start 306: pywrap-checkrun-uhf; 303/411 Te,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:27126,Test,Test,27126,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Start 287: psimrcc-ccsd_t-1; 276/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.97 sec; Start 288: psimrcc-ccsd_t-2; 277/411 Test #274: opt8 ............................. Passed 34.19 sec; Start 289: psimrcc-ccsd_t-3; 278/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 2.27 sec; Start 290: psimrcc-ccsd_t-4; 279/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 2.23 sec; Start 291: psimrcc-fd-freq1; 280/411 Test #285: props2 ........................... Passed 13.08 sec; Start 292: psimrcc-fd-freq2; 281/411 Test #286: props3 ........................... Passed 13.45 sec; Start 293: psimrcc-pt2; 282/411 Test #293: psimrcc-pt2 ...................... Passed 2.41 sec; Start 294: psimrcc-sp1; 283/411 Test #273: opt7 ............................. Passed 52.95 sec; Start 295: psithon1; 284/411 Test #294: psimrcc-sp1 ...................... Passed 5.79 sec; Start 296: psithon2; 285/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 19.81 sec; Start 297: pubchem1; 286/411 Test #282: opt-irc-3 ........................ Passed 35.38 sec; Start 298: pubchem2; 287/411 Test #276: opt11 ............................ Passed 59.15 sec; Start 299: pywrap-alias; 288/411 Test #298: pubchem2 ......................... Passed 1.44 sec; Start 300: pywrap-all; 289/411 Test #291: psimrcc-fd-freq1 ................. Passed 25.01 sec; Start 301: pywrap-basis; 290/411 Test #295: psithon1 ......................... Passed 15.32 sec; Start 302: pywrap-cbs1; 291/411 Test #296: psithon2 ......................... Passed 26.42 sec; Start 303: pywrap-checkrun-convcrit; 292/411 Test #301: pywrap-basis ..................... Passed 18.33 sec; Start 304: pywrap-checkrun-rhf; 293/411 Test #279: opt14 ............................ Passed 79.56 sec; Start 305: pywrap-checkrun-rohf; 294/411 Test #297: pubchem1 ......................... Passed 57.25 sec; Start 306: pywrap-checkrun-uhf; 295/411 Test #303: pywrap-checkrun-convcrit ......... Passed 33.68 sec; Start 307: pywrap-db1; 296/411,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:26639,Test,Test,26639,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Start 287: psimrcc-ccsd_t-1; 284/411 Test #286: props3 ........................... Passed 13.64 sec; Start 288: psimrcc-ccsd_t-2; 285/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 3.03 sec; Start 289: psimrcc-ccsd_t-3; 286/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 3.60 sec; Start 290: psimrcc-ccsd_t-4; 287/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 3.03 sec; Start 291: psimrcc-fd-freq1; 288/411 Test #276: opt11 ............................ Passed 61.79 sec; Start 292: psimrcc-fd-freq2; 289/411 Test #282: opt-irc-3 ........................ Passed 37.00 sec; Start 293: psimrcc-pt2; 290/411 Test #293: psimrcc-pt2 ...................... Passed 2.09 sec; Start 294: psimrcc-sp1; 291/411 Test #294: psimrcc-sp1 ...................... Passed 4.67 sec; Start 295: psithon1; 292/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 18.91 sec; Start 296: psithon2; 293/411 Test #291: psimrcc-fd-freq1 ................. Passed 21.65 sec; Start 297: pubchem1; 294/411 Test #295: psithon1 ......................... Passed 12.28 sec; Start 298: pubchem2; 295/411 Test #298: pubchem2 ......................... Passed 1.28 sec; Start 299: pywrap-alias; 296/411 Test #279: opt14 ............................ Passed 78.02 sec; Start 300: pywrap-all; 297/411 Test #296: psithon2 ......................... Passed 23.92 sec; Start 301: pywrap-basis; 298/411 Test #280: opt-irc-1 ........................ Passed 104.00 sec; Start 302: pywrap-cbs1; 299/411 Test #301: pywrap-basis ..................... Passed 18.55 sec; Start 303: pywrap-checkrun-convcrit; 300/411 Test #297: pubchem1 ......................... Passed 53.99 sec; Start 304: pywrap-checkrun-rhf; 301/411 Test #292: psimrcc-fd-freq2 ................. Passed 78.24 sec; Start 305: pywrap-checkrun-rohf; 302/411 Test #303: pywrap-checkrun-convcrit ......... Passed 31.23 sec; Start 306: pywrap-checkrun-uhf; 303/411 Test #299: pywrap-alias ..................... Passed 102.71 sec; Start 307: pywrap-db1; 304/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:27230,Test,Test,27230,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Start 287: psimrcc-ccsd_t-1; 284/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.10 sec; Start 288: psimrcc-ccsd_t-2; 285/411 Test #285: props2 ........................... Passed 15.83 sec; Start 289: psimrcc-ccsd_t-3; 286/411 Test #286: props3 ........................... Passed 13.90 sec; Start 290: psimrcc-ccsd_t-4; 287/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 4.82 sec; Start 291: psimrcc-fd-freq1; 288/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 2.70 sec; Start 292: psimrcc-fd-freq2; 289/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 17.94 sec; Start 293: psimrcc-pt2; 290/411 Test #291: psimrcc-fd-freq1 ................. Passed 17.17 sec; Start 294: psimrcc-sp1; 291/411 Test #293: psimrcc-pt2 ...................... Passed 1.90 sec; Start 295: psithon1; 292/411 Test #279: opt14 ............................ Passed 75.20 sec; Start 296: psithon2; 293/411 Test #294: psimrcc-sp1 ...................... Passed 4.68 sec; Start 297: pubchem1; 294/411 Test #295: psithon1 ......................... Passed 14.49 sec; Start 298: pubchem2; 295/411 Test #298: pubchem2 ......................... Passed 1.29 sec; Start 299: pywrap-alias; 296/411 Test #227: mp2-def2 ......................... Passed 402.38 sec; Start 300: pywrap-all; 297/411 Test #280: opt-irc-1 ........................ Passed 93.85 sec; Start 301: pywrap-basis; 298/411 Test #296: psithon2 ......................... Passed 23.69 sec; Start 302: pywrap-cbs1; 299/411 Test #301: pywrap-basis ..................... Passed 22.01 sec; Start 303: pywrap-checkrun-convcrit; 300/411 Test #292: psimrcc-fd-freq2 ................. Passed 74.92 sec; Start 304: pywrap-checkrun-rhf; 301/411 Test #297: pubchem1 ......................... Passed 57.21 sec; Start 305: pywrap-checkrun-rohf; 302/411 Test #303: pywrap-checkrun-convcrit ......... Passed 43.41 sec; Start 306: pywrap-checkrun-uhf; 303/411 Test #240: ocepa-freq1 ...................... Passed 451.57 sec; Start 307: pywrap-db1; 304/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:27218,Test,Test,27218,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Start 287: psimrcc-ccsd_t-1; 370/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.30 sec; Start 298: pubchem2; 371/411 Test #403: json-schema-1-gradient ........... Passed 1.78 sec; Start 211: mcscf3; 372/411 Test #352: stability2 ....................... Passed 1.36 sec; Start 333: scf2; 373/411 Test #390: python-mints9 .................... Passed 1.81 sec; Start 408: skeletonmointegrals; 374/411 Test #102: decontract ....................... Passed 1.35 sec; Start 288: psimrcc-ccsd_t-2; 375/411 Test #311: rasci-h2o ........................ Passed 1.02 sec; Start 410: skeletonsointegrals; 376/411 Test #211: mcscf3 ........................... Passed 0.85 sec; Start 289: psimrcc-ccsd_t-3; 377/411 Test #408: skeletonmointegrals .............. Passed 0.92 sec; Start 220: mints-helper; 378/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.40 sec; Start 398: json-v11-gradient; 379/411 Test #333: scf2 ............................. Passed 1.23 sec; Start 411: skeletonwavefunction; 380/411 Test #298: pubchem2 ......................... Passed 1.42 sec; Start 404: json-schema-1-properties; 381/411 Test #410: skeletonsointegrals .............. Passed 0.89 sec; Start 400: json-schema-1-ghost; 382/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.47 sec; Start 353: tu1-h2o-energy; 383/411 Test #220: mints-helper ..................... Passed 1.12 sec; Start 330: scf-bs; 384/411 Test #411: skeletonwavefunction ............. Passed 0.90 sec; Start 378: mints12; 385/411 Test #398: json-v11-gradient ................ Passed 0.97 sec; Start 349: sapt-sf1; 386/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.48 sec; Start 387: python-energy; 387/411 Test #404: json-schema-1-properties ......... Passed 1.01 sec; Start 309: pywrap-molecule; 388/411 Test #400: json-schema-1-ghost .............. Passed 1.03 sec; Start 293: psimrcc-pt2; 389/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 396: python-memdfjk; 390/411 Test #330: scf-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:35556,Test,Test,35556,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Start 295: psithon1; 299/411 Test #295: psithon1 ......................... Passed 3.00 sec; Start 296: psithon2; 300/411 Test #296: psithon2 ......................... Passed 9.29 sec; Start 297: pubchem1; 301/411 Test #297: pubchem1 ......................... Passed 40.43 sec; Start 298: pubchem2; 302/411 Test #298: pubchem2 ......................... Passed 2.32 sec; Start 299: pywrap-alias; 303/411 Test #299: pywrap-alias ..................... Passed 18.00 sec; Start 300: pywrap-all; 304/411 Test #300: pywrap-all ....................... Passed 147.28 sec; Start 301: pywrap-basis; 305/411 Test #301: pywrap-basis ..................... Passed 13.12 sec; Start 302: pywrap-cbs1; 306/411 Test #302: pywrap-cbs1 ...................... Passed 36.61 sec; Start 303: pywrap-checkrun-convcrit; 307/411 Test #303: pywrap-checkrun-convcrit ......... Passed 8.53 sec; Start 304: pywrap-checkrun-rhf; 308/411 Test #304: pywrap-checkrun-rhf .............. Passed 92.91 sec; Start 305: pywrap-checkrun-rohf; 309/411 Test #305: pywrap-checkrun-rohf ............. Passed 31.27 sec; Start 306: pywrap-checkrun-uhf; 310/411 Test #306: pywrap-checkrun-uhf .............. Passed 63.05 sec; Start 307: pywrap-db1; 311/411 Test #307: pywrap-db1 ....................... Passed 33.95 sec; Start 308: pywrap-db3; 312/411 Test #308: pywrap-db3 ....................... Passed 0.80 sec; Start 309: pywrap-molecule; 313/411 Test #309: pywrap-molecule .................. Passed 1.17 sec; Start 310: rasci-c2-active; 314/411 Test #310: rasci-c2-active .................. Passed 3.43 sec; Start 311: rasci-h2o; 315/411 Test #311: rasci-h2o ........................ Passed 1.02 sec; Start 312: rasci-ne; 316/411 Test #312: rasci-ne ......................... Passed 26.87 sec; Start 313: rasscf-sp; 317/411 Test #313: rasscf-sp ........................ Passed 2.99 sec; Start 314: sad1; 318/411 Test #314: sad1 ............................. Passed 2.34 sec; Start 315: sapt1; 319/411 Test #315: sapt1 ...........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:28338,Test,Test,28338,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Start 299: pywrap-checkrun-convcrit; 340/401 Test #269: opt7 ............................. Passed 30.82 sec; Start 300: pywrap-checkrun-rhf; 341/401 Test #144: dfomp2-grad3 ..................... Passed 181.03 sec; Start 301: pywrap-checkrun-rohf; 342/401 Test #278: opt-irc-3 ........................ Passed 19.25 sec; Start 302: pywrap-checkrun-uhf; 343/401 Test #297: pywrap-basis ..................... Passed 9.99 sec; Start 304: pywrap-db3; 344/401 Test #304: pywrap-db3 ....................... Passed 0.90 sec; Start 306: rasci-c2-active; 345/401 Test #299: pywrap-checkrun-convcrit ......... Passed 10.69 sec; Start 307: rasci-h2o; 346/401 Test #292: psithon2 ......................... Passed 14.67 sec; Start 308: rasci-ne; 347/401 Test #109: dcft4 ............................ Passed 254.77 sec; Start 313: sapt3; 348/401 Test #307: rasci-h2o ........................ Passed 2.60 sec; Start 315: sapt5; 349/401 Test #306: rasci-c2-active .................. Passed 5.21 sec; Start 316: sapt6; 350/401 Test #272: opt11 ............................ Passed 36.20 sec; Start 317: sapt-dft-api; 351/401 Test #293: pubchem1 ......................... Passed 23.07 sec; Start 318: sapt-dft-lrc; 352/401 Test #313: sapt3 ............................ Passed 12.75 sec; Start 319: sapt7; 353/401 Test #317: sapt-dft-api ..................... Passed 9.24 sec; Start 322: scf-ecp; 354/401 Test #318: sapt-dft-lrc ..................... Passed 11.33 sec; Start 325: scf-guess-read2; 355/401 Test #315: sapt5 ............................ Passed 23.94 sec; Start 331: scf4; 356/401 Test #325: scf-guess-read2 .................. Passed 5.67 sec; Start 333: scf6; 357/401 Test #308: rasci-ne ......................... Passed 30.14 sec; Start 334: scf7; 358/401 Test #319: sapt7 ............................ Passed 22.59 sec; Start 337: soscf-ref; 359/401 Test #331: scf4 ............................. Passed 9.88 sec; Start 338: soscf-dft; 360/401 Test #276: opt-irc-1 ........................ Passed 68.07 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:32699,Test,Test,32699,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Start 304: pywrap-checkrun-rhf; 293/411 Test #301: pywrap-basis ..................... Passed 14.03 sec; Start 305: pywrap-checkrun-rohf; 294/411 Test #303: pywrap-checkrun-convcrit ......... Passed 16.60 sec; Start 306: pywrap-checkrun-uhf; 295/411 Test #299: pywrap-alias ..................... Passed 38.36 sec; Start 307: pywrap-db1; 296/411 Test #297: pubchem1 ......................... Passed 51.64 sec; Start 308: pywrap-db3; 297/411 Test #280: opt-irc-1 ........................ Passed 72.08 sec; Start 309: pywrap-molecule; 298/411 Test #308: pywrap-db3 ....................... Passed 0.71 sec; Start 310: rasci-c2-active; 299/411 Test #309: pywrap-molecule .................. Passed 1.10 sec; Start 311: rasci-h2o; 300/411 Test #279: opt14 ............................ Passed 76.44 sec; Start 312: rasci-ne; 301/411 Test #311: rasci-h2o ........................ Passed 1.35 sec; Start 313: rasscf-sp; 302/411 Test #310: rasci-c2-active .................. Passed 4.30 sec; Start 314: sad1; 303/411 Test #240: ocepa-freq1 ...................... Passed 155.96 sec; Start 315: sapt1; 304/411 Test #314: sad1 ............................. Passed 2.65 sec; Start 317: sapt3; 305/411 Test #292: psimrcc-fd-freq2 ................. Passed 68.11 sec; Start 319: sapt5; 306/411 Test #313: rasscf-sp ........................ Passed 19.84 sec; Start 320: sapt6; 307/411 Test #315: sapt1 ............................ Passed 18.11 sec; Start 321: sapt-dft-api; 308/411 Test #307: pywrap-db1 ....................... Passed 40.55 sec; Start 322: sapt-dft-lrc; 309/411 Test #302: pywrap-cbs1 ...................... Passed 78.86 sec; Start 323: sapt7; 310/411 Test #312: rasci-ne ......................... Passed 35.47 sec; Start 324: sapt8; 311/411 Test #321: sapt-dft-api ..................... Passed 18.96 sec; Start 326: scf-ecp; 312/411 Test #322: sapt-dft-lrc ..................... Passed 21.11 sec; Start 327: scf-guess-read1; 313/411 Test #327: scf-guess-read1 .................. Passed 2.47 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:28236,Test,Test,28236,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Start 304: pywrap-checkrun-rhf; 301/411 Test #297: pubchem1 ......................... Passed 57.21 sec; Start 305: pywrap-checkrun-rohf; 302/411 Test #303: pywrap-checkrun-convcrit ......... Passed 43.41 sec; Start 306: pywrap-checkrun-uhf; 303/411 Test #240: ocepa-freq1 ...................... Passed 451.57 sec; Start 307: pywrap-db1; 304/411 Test #299: pywrap-alias ..................... Passed 113.78 sec; Start 308: pywrap-db3; 305/411 Test #308: pywrap-db3 ....................... Passed 0.67 sec; Start 309: pywrap-molecule; 306/411 Test #309: pywrap-molecule .................. Passed 1.15 sec; Start 310: rasci-c2-active; 307/411 Test #310: rasci-c2-active .................. Passed 7.23 sec; Start 311: rasci-h2o; 308/411 Test #311: rasci-h2o ........................ Passed 3.66 sec; Start 312: rasci-ne; 309/411 Test #281: opt-irc-2 ........................ Passed 200.49 sec; Start 313: rasscf-sp; 310/411 Test #307: pywrap-db1 ....................... Passed 44.94 sec; Start 314: sad1; 311/411 Test #314: sad1 ............................. Passed 3.59 sec; Start 315: sapt1; 312/411 Test #315: sapt1 ............................ Passed 20.29 sec; Start 317: sapt3; 313/411 Test #312: rasci-ne ......................... Passed 34.02 sec; Start 319: sapt5; 314/411 Test #313: rasscf-sp ........................ Passed 52.33 sec; Start 320: sapt6; 315/411 Test #302: pywrap-cbs1 ...................... Passed 212.20 sec; Start 321: sapt-dft-api; 316/411 Test #317: sapt3 ............................ Passed 73.42 sec; Start 322: sapt-dft-lrc; 317/411 Test #319: sapt5 ............................ Passed 77.57 sec; Start 323: sapt7; 318/411 Test #321: sapt-dft-api ..................... Passed 19.67 sec; Start 324: sapt8; 319/411 Test #322: sapt-dft-lrc ..................... Passed 20.38 sec; Start 326: scf-ecp; 320/411 Test #324: sapt8 ............................ Passed 18.16 sec; Start 327: scf-guess-read1; 321/411 Test #327: scf-guess-read1 .................. Passed 3.44 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:28877,Test,Test,28877,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Start 313: pywrap-checkrun-convcrit; 357/415 Test #301: psimrcc-fd-freq1 ................. Passed 23.50 sec; Start 314: pywrap-checkrun-rhf; 358/415 Test #270: omp3-5 ........................... Passed 162.49 sec; Start 315: pywrap-checkrun-rohf; 359/415 Test #306: psithon2 ......................... Passed 24.99 sec; Start 316: pywrap-checkrun-uhf; 360/415 Test #311: pywrap-basis ..................... Passed 15.56 sec; Start 318: pywrap-db3; 361/415 Test #318: pywrap-db3 ....................... Passed 1.13 sec; Start 320: rasci-c2-active; 362/415 Test #288: opt14 ............................ Passed 68.18 sec; Start 321: rasci-h2o; 363/415 Test #321: rasci-h2o ........................ Passed 3.37 sec; Start 322: rasci-ne; 364/415 Test #320: rasci-c2-active .................. Passed 5.60 sec; Start 327: sapt3; 365/415 Test #307: pubchem1 ......................... Passed 32.29 sec; Start 329: sapt5; 366/415 Test #313: pywrap-checkrun-convcrit ......... Passed 31.23 sec; Start 330: sapt6; 367/415 Test #327: sapt3 ............................ Passed 16.32 sec; Start 331: sapt-dft-api; 368/415 Test #302: psimrcc-fd-freq2 ................. Passed 57.34 sec; Start 332: sapt-dft-lrc; 369/415 Test #331: sapt-dft-api ..................... Passed 11.76 sec; Start 333: sapt7; 370/415 Test #322: rasci-ne ......................... Passed 32.10 sec; Start 336: scf-ecp; 371/415 Test #332: sapt-dft-lrc ..................... Passed 10.40 sec; Start 339: scf-guess-read2; 372/415 Test #329: sapt5 ............................ Passed 34.98 sec; Start 345: scf4; 373/415 Test #289: opt-irc-1 ........................ Passed 110.77 sec; Start 347: scf6; 374/415 Test #339: scf-guess-read2 .................. Passed 7.92 sec; Start 348: scf7; 375/415 Test #345: scf4 ............................. Passed 15.10 sec; Start 352: soscf-ref; 376/415 Test #333: sapt7 ............................ Passed 26.37 sec; Start 353: soscf-dft; 377/415 Test #348: scf7 ............................. Passed 20.00 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:34489,Test,Test,34489,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Start 314: sapt4; 5/401 Test #383: cookbook-rohf-orb-rot ............ Passed 222.55 sec; Start 321: scf-bz2; 6/401 Test #312: sapt2 ............................ Passed 93.85 sec; Start 29: cc14; 7/401 Test #201: frac-traverse .................... Passed 121.71 sec; Start 164: dft1; 8/401 Test #274: opt13 ............................ Passed 292.05 sec; Start 38: cc23; 9/401 Test #178: isapt1 ........................... Passed 299.95 sec; Start 35: cc2; 10/401 Test #191: fd-freq-gradient-large ........... Passed 307.91 sec; Start 223: mp2-def2; 11/401 Test #189: fd-freq-energy-large ............. Passed 319.82 sec; Start 39: cc24; 12/401 Test #13: cbs-xtpl-alpha ................... Passed 330.09 sec; Start 24: cc13; 13/401 Test #321: scf-bz2 .......................... Passed 118.24 sec; Start 17: cbs-xtpl-opt; 14/401 Test #314: sapt4 ............................ Passed 176.27 sec; Start 31: cc16; 15/401 Test #113: dcft8 ............................ Passed 344.19 sec; Start 275: opt14; 16/401 Test #354: tu6-cp-ne2 ....................... Passed 347.59 sec; Start 41: cc26; 17/401 Test #110: dcft5 ............................ Passed 355.89 sec; Start 276: opt-irc-1; 18/401 Test #112: dcft7 ............................ Passed 358.91 sec; Start 90: cepa-module; 19/401 Test #164: dft1 ............................. Passed 106.51 sec; Start 96: cisd-opt-fd; 20/401 Test #223: mp2-def2 ......................... Passed 82.85 sec; Start 28: cc13d; 21/401 Test #42: cc27 ............................. Passed 392.24 sec; Start 44: cc29; 22/401 Test #75: cc7 .............................. Passed 394.89 sec; Start 47: cc31; 23/401 Test #275: opt14 ............................ Passed 76.63 sec; Start 368: dft-custom-mgga; 24/401 Test #174: fsapt1 ........................... Passed 424.29 sec; Start 19: cbs-xtpl-wrapper; 25/401 Test #276: opt-irc-1 ........................ Passed 89.12 sec; Start 316: sapt6; 26/401 Test #17: cbs-xtpl-opt ..................... Passed 104.19 sec; Start 114,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:2194,Test,Test,2194,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Start 316: sapt2; 5/411 Test #25: cc13a ............................ Passed 297.32 sec; Start 318: sapt4; 6/411 Test #181: fsapt-allterms ................... Passed 736.98 sec; Start 325: scf-bz2; 7/411 Test #205: frac-traverse .................... Passed 247.88 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 27.30 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 318.32 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 6.14 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 2.45 sec; Start 5: casscf-sa-sp; 12/411 Test #2: adc2 ............................. Passed 46.87 sec; Start 6: ao-casscf-sp; 13/411 Test #394: python-vibanalysis ............... Passed 861.59 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 4.76 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 1.98 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 10.00 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 8.90 sec; Start 11: cbs-delta-energy; 18/411 Test #325: scf-bz2 .......................... Passed 137.96 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ........................ Passed 13.43 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #10: castup3 .......................... Passed 9.55 sec; Start 14: cbs-xtpl-energy; 21/411 Test #14: cbs-xtpl-energy .................. Passed 15.41 sec; Start 15: cbs-xtpl-freq; 22/411 Test #15: cbs-xtpl-freq .................... Passed 9.22 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #12: cbs-parser ....................... Passed 34.00 sec; Start 17: cbs-xtpl-opt; 24/411 Test #16: cbs-xtpl-gradient ................ Passed 27.35 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #278: opt13 ............................ Passed 937.76 sec; Start 20: cc1; 26/411 Test #11: cbs-delta-energy ................. Passed 87,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:1683,Test,Test,1683,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,Start 323: sapt-dft-api; 223/413 Test #167: dft-grad2 ........................ Passed 16.75 sec; Start 155: dft-grad-lr1; 224/413 Test #199: freq-isotope1 .................... Passed 17.40 sec; Start 317: sapt1; 225/413 Test #277: opt9 ............................. Passed 22.86 sec; Start 315: rasscf-sp; 226/413 Test #178: extern1 .......................... Passed 22.24 sec; Start 220: mints8; 227/413 Test #110: dcft2 ............................ Passed 15.97 sec; Start 405: json-schema-1-gradient; 228/413 Test #209: gibbs ............................ Passed 30.26 sec; Start 407: skeleton; 229/413 Test #323: sapt-dft-api ..................... Passed 16.91 sec; Start 406: json-schema-1-properties; 230/413 Test #405: json-schema-1-gradient ........... Passed 1.96 sec; Start 404: json-schema-1-throws; 231/413 Test #407: skeleton ......................... Passed 1.52 sec; Start 268: opt1-fd; 232/413 Test #406: json-schema-1-properties ......... Passed 1.40 sec; Start 124: dfccd-grad1; 233/413 Test #404: json-schema-1-throws ............. Passed 0.65 sec; Start 298: psithon2; 234/413 Test #305: pywrap-checkrun-convcrit ......... Passed 23.29 sec; Start 408: skeletonaointegrals; 235/413 Test #168: dft-psivar ....................... Passed 24.76 sec; Start 91: cepa1; 236/413 Test #155: dft-grad-lr1 ..................... Passed 17.44 sec; Start 272: opt4; 237/413 Test #408: skeletonaointegrals .............. Passed 1.56 sec; Start 163: dft-ghost; 238/413 Test #161: dft-b2plyp ....................... Passed 26.33 sec; Start 159: dfrasscf-sp; 239/413 Test #220: mints8 ........................... Passed 14.77 sec; Start 129: dfccsdt1; 240/413 Test #317: sapt1 ............................ Passed 17.58 sec; Start 102: cubeprop; 241/413 Test #163: dft-ghost ........................ Passed 7.89 sec; Start 303: pywrap-basis; 242/413 Test #268: opt1-fd .......................... Passed 12.67 sec; Start 143: dfomp2-3; 243/413 Test #272: opt4 ............................. Passed 9.80 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:22005,Test,Test,22005,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Start 325: scf-bz2; 7/411 Test #205: frac-traverse .................... Passed 247.88 sec; Start 1: adc1; 8/411 Test #1: adc1 ............................. Passed 27.30 sec; Start 2: adc2; 9/411 Test #113: dcft7 ............................ Passed 318.32 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 6.14 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 2.45 sec; Start 5: casscf-sa-sp; 12/411 Test #2: adc2 ............................. Passed 46.87 sec; Start 6: ao-casscf-sp; 13/411 Test #394: python-vibanalysis ............... Passed 861.59 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 4.76 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 1.98 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 10.00 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 8.90 sec; Start 11: cbs-delta-energy; 18/411 Test #325: scf-bz2 .......................... Passed 137.96 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ........................ Passed 13.43 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #10: castup3 .......................... Passed 9.55 sec; Start 14: cbs-xtpl-energy; 21/411 Test #14: cbs-xtpl-energy .................. Passed 15.41 sec; Start 15: cbs-xtpl-freq; 22/411 Test #15: cbs-xtpl-freq .................... Passed 9.22 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #12: cbs-parser ....................... Passed 34.00 sec; Start 17: cbs-xtpl-opt; 24/411 Test #16: cbs-xtpl-gradient ................ Passed 27.35 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #278: opt13 ............................ Passed 937.76 sec; Start 20: cc1; 26/411 Test #11: cbs-delta-energy ................. Passed 87.39 sec; Start 21: cc10; 27/411 Test #20: cc1 .............................. Passed 39.26 sec; Start 22: cc11; 28/411 Test #21: cc10 ............................. Passed 16.76 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:1867,Test,Test,1867,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,Start 333: scf-occ; 316/412 Test #214: mints2 ........................... Passed 24.07 sec; Start 290: psimrcc-ccsd_t-3; 317/412 Test #118: dfcasscf-sa-sp ................... Passed 26.23 sec; Start 352: dft-reference; 318/412 Test #247: omp2-1 ........................... Passed 22.97 sec; Start 329: scf-upcast-custom-basis; 319/412 Test #263: omp3-grad1 ....................... Passed 24.21 sec; Start 204: frac; 320/412 Test #328: scf-guess-read1 .................. Passed 23.52 sec; Start 117: ao-dfcasscf-sp; 321/412 Test #392: python-mints2 .................... Passed 24.57 sec; Start 362: x2c2; 322/412 Test #142: dfomp2-3 ......................... Passed 26.52 sec; Start 402: json-schema-1-orient; 323/412 Test #315: sad1 ............................. Passed 24.75 sec; Start 236: mp2-property; 324/412 Test #252: omp2-grad1 ....................... Passed 25.97 sec; Start 344: stability1; 325/412 Test #284: opt-freeze-coords ................ Passed 26.18 sec; Start 345: dfep2-1; 326/412 Test #385: psi4numpy-rhf-hessian ............ Passed 25.08 sec; Start 398: json-v11-energy; 327/412 Test #135: dfmp2-grad1 ...................... Passed 23.71 sec; Start 400: json-schema-1-energy; 328/412 Test #346: dfep2-2 .......................... Passed 23.48 sec; Start 389: python-curve; 329/412 Test #312: rasci-h2o ........................ Passed 23.59 sec; Start 235: mp3-grad2; 330/412 Test #333: scf-occ .......................... Passed 23.80 sec; Start 232: mp2p5-grad1; 331/412 Test #290: psimrcc-ccsd_t-3 ................. Passed 23.57 sec; Start 229: mp2-grad1; 332/412 Test #329: scf-upcast-custom-basis .......... Passed 24.34 sec; Start 131: dfmp2-2; 333/412 Test #117: ao-dfcasscf-sp ................... Passed 24.09 sec; Start 234: mp3-grad1; 334/412 Test #352: dft-reference .................... Passed 26.09 sec; Start 294: psimrcc-pt2; 335/412 Test #204: frac ............................. Passed 24.56 sec; Start 121: dfccd1; 336/412 Test #362: x2c2 ........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:30681,Test,Test,30681,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Start 336: scf5; 111/404 Test #68: cc50 ............................. Passed 19.49 sec; Start 64: cc47; 112/404 Test #392: python-cc54 ...................... Passed 13.89 sec; Start 66: cc49; 113/404 Test #73: cc55 ............................. Passed 17.08 sec; Start 274: opt8; 114/404 Test #34: cc19 ............................. Passed 20.82 sec; Start 307: pywrap-db1; 115/404 Test #273: opt7 ............................. Passed 29.71 sec; Start 140: dfomp2-2; 116/404 Test #337: scf6 ............................. Passed 24.89 sec; Start 84: cdomp2-2; 117/404 Test #64: cc47 ............................. Passed 14.94 sec; Start 55: cc39; 118/404 Test #167: dft-b3lyp ........................ Passed 36.49 sec; Start 312: rasci-ne; 119/404 Test #84: cdomp2-2 ......................... Passed 8.35 sec; Start 71: cc53; 120/404 Test #140: dfomp2-2 ......................... Passed 9.35 sec; Start 67: cc4a; 121/404 Test #336: scf5 ............................. Passed 26.26 sec; Start 26: cc13b; 122/404 Test #66: cc49 ............................. Passed 19.38 sec; Start 326: scf-ecp; 123/404 Test #274: opt8 ............................. Passed 19.76 sec; Start 374: dft-custom-gga; 124/404 Test #55: cc39 ............................. Passed 13.27 sec; Start 200: fnocc2; 125/404 Test #71: cc53 ............................. Passed 8.33 sec; Start 56: cc4; 126/404 Test #67: cc4a ............................. Passed 12.55 sec; Start 389: python-pubchem; 127/404 Test #307: pywrap-db1 ....................... Passed 29.84 sec; Start 155: dfscf-bz2; 128/404 Test #26: cc13b ............................ Passed 18.37 sec; Start 245: ocepa3; 129/404 Test #56: cc4 .............................. Passed 12.64 sec; Start 319: sapt5; 130/404 Test #200: fnocc2 ........................... Passed 17.05 sec; Start 297: pubchem1; 131/404 Test #326: scf-ecp .......................... Passed 24.49 sec; Start 12: cbs-parser; 132/404 Test #245: ocepa3 ........................... Passed 7.38 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:11294,Test,Test,11294,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['Test'],['Test']
Testability,Start 367: scf-hess1; 361/411 Test #367: scf-hess1 ........................ Passed 12.20 sec; Start 368: scf-freq1; 362/411 Test #347: sapt-dft2 ........................ Passed 122.60 sec; Start 369: dft-jk; 363/411 Test #368: scf-freq1 ........................ Passed 14.57 sec; Start 370: scf-coverage; 364/411 Test #369: dft-jk ........................... Passed 12.68 sec; Start 371: dft-custom-dhdf; 365/411 Test #360: x2c1 ............................. Passed 72.91 sec; Start 372: dft-custom-hybrid; 366/411 Test #370: scf-coverage ..................... Passed 8.99 sec; Start 373: dft-custom-mgga; 367/411 Test #372: dft-custom-hybrid ................ Passed 13.00 sec; Start 374: dft-custom-gga; 368/411 Test #374: dft-custom-gga ................... Passed 30.24 sec; Start 375: pywrap-bfs; 369/411 Test #375: pywrap-bfs ....................... Passed 24.13 sec; Start 376: pywrap-align; 370/411 Test #376: pywrap-align ..................... Passed 3.39 sec; Start 377: pywrap-align-chiral; 371/411 Test #377: pywrap-align-chiral .............. Passed 2.91 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.27 sec; Start 379: cc-module; 373/411 Test #371: dft-custom-dhdf .................. Passed 89.27 sec; Start 380: psi4numpy-cphf; 374/411 Test #380: psi4numpy-cphf ................... Passed 1.33 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #381: psi4numpy-dfmp2 .................. Passed 2.04 sec; Start 382: psi4numpy-rhf; 376/411 Test #382: psi4numpy-rhf .................... Passed 0.85 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.48 sec; Start 384: psi4numpy-rhf-hessian; 378/411 Test #384: psi4numpy-rhf-hessian ............ Passed 4.83 sec; Start 385: psi4numpy-fci; 379/411 Test #385: psi4numpy-fci .................... Passed 7.57 sec; Start 386: cookbook-rohf-orb-rot; 380/411 Test #305: pywrap-checkrun-rohf ............. Passed 589.53 sec; Start 387: python-energy; 381/411 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:34529,Test,Test,34529,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Start 367: scf-hess1; 361/411 Test #367: scf-hess1 ........................ Passed 12.40 sec; Start 368: scf-freq1; 362/411 Test #347: sapt-dft2 ........................ Passed 115.78 sec; Start 369: dft-jk; 363/411 Test #360: x2c1 ............................. Passed 62.14 sec; Start 370: scf-coverage; 364/411 Test #370: scf-coverage ..................... Passed 6.88 sec; Start 371: dft-custom-dhdf; 365/411 Test #368: scf-freq1 ........................ Passed 11.47 sec; Start 372: dft-custom-hybrid; 366/411 Test #369: dft-jk ........................... Passed 11.27 sec; Start 373: dft-custom-mgga; 367/411 Test #372: dft-custom-hybrid ................ Passed 13.16 sec; Start 374: dft-custom-gga; 368/411 Test #374: dft-custom-gga ................... Passed 32.79 sec; Start 375: pywrap-bfs; 369/411 Test #375: pywrap-bfs ....................... Passed 24.74 sec; Start 376: pywrap-align; 370/411 Test #376: pywrap-align ..................... Passed 3.69 sec; Start 377: pywrap-align-chiral; 371/411 Test #377: pywrap-align-chiral .............. Passed 3.04 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.18 sec; Start 379: cc-module; 373/411 Test #371: dft-custom-dhdf .................. Passed 83.89 sec; Start 380: psi4numpy-cphf; 374/411 Test #380: psi4numpy-cphf ................... Passed 1.31 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #381: psi4numpy-dfmp2 .................. Passed 2.16 sec; Start 382: psi4numpy-rhf; 376/411 Test #382: psi4numpy-rhf .................... Passed 0.89 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.70 sec; Start 384: psi4numpy-rhf-hessian; 378/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.24 sec; Start 385: psi4numpy-fci; 379/411 Test #385: psi4numpy-fci .................... Passed 7.04 sec; Start 386: cookbook-rohf-orb-rot; 380/411 Test #305: pywrap-checkrun-rohf ............. Passed 586.65 sec; Start 387: python-energy; 381/411 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:34514,Test,Test,34514,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Start 368: scf-freq1; 362/411 Test #347: sapt-dft2 ........................ Passed 121.47 sec; Start 369: dft-jk; 363/411 Test #368: scf-freq1 ........................ Passed 23.47 sec; Start 370: scf-coverage; 364/411 Test #369: dft-jk ........................... Passed 14.03 sec; Start 371: dft-custom-dhdf; 365/411 Test #360: x2c1 ............................. Passed 85.68 sec; Start 372: dft-custom-hybrid; 366/411 Test #370: scf-coverage ..................... Passed 14.12 sec; Start 373: dft-custom-mgga; 367/411 Test #372: dft-custom-hybrid ................ Passed 14.18 sec; Start 374: dft-custom-gga; 368/411 Test #305: pywrap-checkrun-rohf ............. Passed 405.81 sec; Start 375: pywrap-bfs; 369/411 Test #375: pywrap-bfs ....................... Passed 23.60 sec; Start 376: pywrap-align; 370/411 Test #374: dft-custom-gga ................... Passed 32.79 sec; Start 377: pywrap-align-chiral; 371/411 Test #376: pywrap-align ..................... Passed 3.23 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.18 sec; Start 379: cc-module; 373/411 Test #377: pywrap-align-chiral .............. Passed 2.88 sec; Start 380: psi4numpy-cphf; 374/411 Test #380: psi4numpy-cphf ................... Passed 1.66 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #381: psi4numpy-dfmp2 .................. Passed 3.39 sec; Start 382: psi4numpy-rhf; 376/411 Test #382: psi4numpy-rhf .................... Passed 0.80 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.82 sec; Start 384: psi4numpy-rhf-hessian; 378/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.83 sec; Start 385: psi4numpy-fci; 379/411 Test #385: psi4numpy-fci .................... Passed 10.74 sec; Start 386: cookbook-rohf-orb-rot; 380/411 Test #371: dft-custom-dhdf .................. Passed 92.73 sec; Start 387: python-energy; 381/411 Test #387: python-energy .................... Passed 2.12 sec; Start 388: python-curve; 382/4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:34606,Test,Test,34606,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,Start 369: dft-jk; 363/411 Test #366: dft-smoke ........................ Passed 13.03 sec; Start 370: scf-coverage; 364/411 Test #368: scf-freq1 ........................ Passed 12.10 sec; Start 371: dft-custom-dhdf; 365/411 Test #370: scf-coverage ..................... Passed 5.55 sec; Start 372: dft-custom-hybrid; 366/411 Test #369: dft-jk ........................... Passed 11.38 sec; Start 373: dft-custom-mgga; 367/411 Test #372: dft-custom-hybrid ................ Passed 10.46 sec; Start 374: dft-custom-gga; 368/411 Test #347: sapt-dft2 ........................ Passed 119.34 sec; Start 375: pywrap-bfs; 369/411 Test #359: tu6-cp-ne2 ....................... Passed 78.43 sec; Start 376: pywrap-align; 370/411 Test #374: dft-custom-gga ................... Passed 29.24 sec; Start 377: pywrap-align-chiral; 371/411 Test #306: pywrap-checkrun-uhf .............. Passed 336.85 sec; Start 378: mints12; 372/411 Test #378: mints12 .......................... Passed 1.19 sec; Start 379: cc-module; 373/411 Test #376: pywrap-align ..................... Passed 3.89 sec; Start 380: psi4numpy-cphf; 374/411 Test #377: pywrap-align-chiral .............. Passed 3.14 sec; Start 381: psi4numpy-dfmp2; 375/411 Test #380: psi4numpy-cphf ................... Passed 1.28 sec; Start 382: psi4numpy-rhf; 376/411 Test #381: psi4numpy-dfmp2 .................. Passed 1.74 sec; Start 383: psi4numpy-rhf-gradient; 377/411 Test #382: psi4numpy-rhf .................... Passed 0.90 sec; Start 384: psi4numpy-rhf-hessian; 378/411 Test #383: psi4numpy-rhf-gradient ........... Passed 1.33 sec; Start 385: psi4numpy-fci; 379/411 Test #300: pywrap-all ....................... Passed 393.32 sec; Start 386: cookbook-rohf-orb-rot; 380/411 Test #384: psi4numpy-rhf-hessian ............ Passed 2.92 sec; Start 387: python-energy; 381/411 Test #387: python-energy .................... Passed 1.22 sec; Start 388: python-curve; 382/411 Test #385: psi4numpy-fci .................... Passed 4.83 sec; Start 389: python-pubchem; 38,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:34714,Test,Test,34714,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['Test'],['Test']
Testability,Start 370: scf-coverage; 356/411 Test #367: scf-hess1 ........................ Passed 12.39 sec; Start 371: dft-custom-dhdf; 357/411 Test #366: dft-smoke ........................ Passed 17.18 sec; Start 372: dft-custom-hybrid; 358/411 Test #369: dft-jk ........................... Passed 12.09 sec; Start 373: dft-custom-mgga; 359/411 Test #368: scf-freq1 ........................ Passed 15.41 sec; Start 374: dft-custom-gga; 360/411 Test #370: scf-coverage ..................... Passed 7.06 sec; Start 375: pywrap-bfs; 361/411 Test #372: dft-custom-hybrid ................ Passed 11.49 sec; Start 376: pywrap-align; 362/411 Test #360: x2c1 ............................. Passed 44.48 sec; Start 377: pywrap-align-chiral; 363/411 Test #376: pywrap-align ..................... Passed 3.18 sec; Start 378: mints12; 364/411 Test #378: mints12 .......................... Passed 1.17 sec; Start 379: cc-module; 365/411 Test #377: pywrap-align-chiral .............. Passed 3.11 sec; Start 380: psi4numpy-cphf; 366/411 Test #227: mp2-def2 ......................... Passed 434.72 sec; Start 381: psi4numpy-dfmp2; 367/411 Test #380: psi4numpy-cphf ................... Passed 1.36 sec; Start 382: psi4numpy-rhf; 368/411 Test #382: psi4numpy-rhf .................... Passed 0.81 sec; Start 383: psi4numpy-rhf-gradient; 369/411 Test #381: psi4numpy-dfmp2 .................. Passed 2.04 sec; Start 384: psi4numpy-rhf-hessian; 370/411 Test #383: psi4numpy-rhf-gradient ........... Passed 2.43 sec; Start 385: psi4numpy-fci; 371/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.52 sec; Start 386: cookbook-rohf-orb-rot; 372/411 Test #385: psi4numpy-fci .................... Passed 4.41 sec; Start 387: python-energy; 373/411 Test #387: python-energy .................... Passed 1.33 sec; Start 388: python-curve; 374/411 Test #240: ocepa-freq1 ...................... Passed 431.50 sec; Start 389: python-pubchem; 375/411 Test #388: python-curve ..................... Passed 3.42 sec; Start 390: python-mint,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:34218,Test,Test,34218,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Start 379: scf-freq1; 384/415 Test #374: zaptn-nh2 ........................ Passed 4.40 sec; Start 380: dft-jk; 385/415 Test #361: dft-custom ....................... Passed 19.16 sec; Start 381: scf-coverage; 386/415 Test #380: dft-jk ........................... Passed 9.46 sec; Start 382: dft-custom-dhdf; 387/415 Test #379: scf-freq1 ........................ Passed 15.42 sec; Start 383: dft-custom-hybrid; 388/415 Test #347: scf6 ............................. Passed 55.68 sec; Start 384: dft-custom-mgga; 389/415 Test #359: sapt-compare ..................... Passed 30.51 sec; Start 385: dft-custom-gga; 390/415 Test #381: scf-coverage ..................... Passed 12.39 sec; Start 389: mints12; 391/415 Test #389: mints12 .......................... Passed 1.73 sec; Start 391: psi4numpy-cphf; 392/415 Test #358: sapt-dft2 ........................ Passed 40.15 sec; Start 396: psi4numpy-fci; 393/415 Test #391: psi4numpy-cphf ................... Passed 2.71 sec; Start 397: cookbook-rohf-orb-rot; 394/415 Test #383: dft-custom-hybrid ................ Passed 10.58 sec; Start 400: python-pubchem; 395/415 Test #396: psi4numpy-fci .................... Passed 11.41 sec; Start 409: json-v11-gradient; 396/415 Test #409: json-v11-gradient ................ Passed 2.83 sec; Start 411: json-schema-1-ghost; 397/415 Test #411: json-schema-1-ghost .............. Passed 2.10 sec; Start 412: json-schema-1-orient; 398/415 Test #412: json-schema-1-orient ............. Passed 3.64 sec; Start 413: json-schema-1-throws; 399/415 Test #385: dft-custom-gga ................... Passed 28.52 sec; Start 415: json-schema-1-properties; 400/415 Test #413: json-schema-1-throws ............. Passed 0.92 sec; 401/415 Test #415: json-schema-1-properties ......... Passed 2.25 sec; 402/415 Test #382: dft-custom-dhdf .................. Passed 37.28 sec; 403/415 Test #400: python-pubchem ................... Passed 31.88 sec; 404/415 Test #290: opt-irc-2 ........................ Passed 211.86 sec; 405/415 Test #384:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:37067,Test,Test,37067,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Start 37: cc21; Start 39: cc23; Start 104: dcft-grad1; Start 43: cc27; Start 111: dcft4; Start 156: dft-grad-lr3; Start 228: mp2-def2; Start 40: cc24; Start 36: cc2; Start 179: fsapt1; Start 301: pywrap-all; Start 146: dfomp2-grad3; Start 305: pywrap-checkrun-rhf; 1/412 Test #228: mp2-def2 ......................... Passed 422.59 sec; Start 42: cc26; 2/412 Test #156: dft-grad-lr3 ..................... Passed 456.14 sec; Start 307: pywrap-checkrun-uhf; 3/412 Test #36: cc2 .............................. Passed 642.46 sec; Start 77: cc7; 4/412 Test #40: cc24 ............................. Passed 651.87 sec; Start 241: ocepa-freq1; 5/412 Test #43: cc27 ............................. Passed 960.14 sec; Start 183: isapt1; 6/412 Test #39: cc23 ............................. Passed 1144.43 sec; Start 306: pywrap-checkrun-rohf; 7/412 Test #41: cc25 ............................. Passed 1174.58 sec; Start 25: cc13; 8/412 Test #146: dfomp2-grad3 ..................... Passed 1217.72 sec; Start 45: cc29; 9/412 Test #46: cc3 .............................. Passed 1255.05 sec; Start 29: cc13d; 10/412 Test #42: cc26 ............................. Passed 914.66 sec; Start 115: dcft8; 11/412 Test #183: isapt1 ........................... Passed 401.39 sec; Start 112: dcft5; 12/412 Test #395: python-vibanalysis ............... Passed 1424.43 sec; Start 18: cbs-xtpl-func; 13/412 Test #37: cc21 ............................. Passed 1446.40 sec; Start 182: fsapt-allterms; 14/412 Test #45: cc29 ............................. Passed 300.99 sec; Start 194: fd-freq-energy-large; 15/412 Test #104: dcft-grad1 ....................... Passed 1521.99 sec; Start 196: fd-freq-gradient-large; 16/412 Test #305: pywrap-checkrun-rhf .............. Passed 1605.76 sec; Start 279: opt13; 17/412 Test #301: pywrap-all ....................... Passed 1667.37 sec; Start 30: cc14; 18/412 Test #241: ocepa-freq1 ...................... Passed 1040.94 sec; Start 113: dcft6; 19/412 Test #29: cc13d ............................ ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:1198,Test,Test,1198,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['Test'],['Test']
Testability,Start 381: psi4numpy-cphf; 374/412 Test #331: scf-bs ........................... Passed 2.43 sec; Start 405: json-schema-1-properties; 375/412 Test #222: mints9 ........................... Passed 2.16 sec; Start 399: json-v11-gradient; 376/412 Test #404: json-schema-1-gradient ........... Passed 2.15 sec; Start 397: python-memdfjk; 377/412 Test #354: tu1-h2o-energy ................... Passed 1.49 sec; Start 401: json-schema-1-ghost; 378/412 Test #223: mints10 .......................... Passed 1.74 sec; Start 379: mints12; 379/412 Test #103: decontract ....................... Passed 1.22 sec; Start 310: pywrap-molecule; 380/412 Test #396: python-mints13 ................... Passed 2.03 sec; Start 388: python-energy; 381/412 Test #215: mints3 ........................... Passed 1.10 sec; Start 335: scf3; 382/412 Test #411: skeletonsointegrals .............. Passed 1.45 sec; Start 212: mcscf3; 383/412 Test #355: tu2-ch2-energy ................... Passed 1.26 sec; Start 217: mints5; 384/412 Test #384: psi4numpy-rhf-gradient ........... Passed 1.45 sec; Start 210: mcscf1; 385/412 Test #405: json-schema-1-properties ......... Passed 1.24 sec; Start 383: psi4numpy-rhf; 386/412 Test #221: mints-helper ..................... Passed 1.60 sec; Start 240: numpy-array-interface; 387/412 Test #399: json-v11-gradient ................ Passed 1.43 sec; Start 213: mints1; 388/412 Test #381: psi4numpy-cphf ................... Passed 1.55 sec; Start 175: docs-bases; 389/412 Test #401: json-schema-1-ghost .............. Passed 1.46 sec; Start 309: pywrap-db3; 390/412 Test #310: pywrap-molecule .................. Passed 1.30 sec; Start 216: mints4; 391/412 Test #388: python-energy .................... Passed 1.27 sec; Start 410: skeletonscf; 392/412 Test #335: scf3 ............................. Passed 1.16 sec; Start 209: matrix1; 393/412 Test #379: mints12 .......................... Passed 1.51 sec; Start 176: docs-dft; 394/412 Test #212: mcscf3 ........................... Passed 1.18 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:36142,Test,Test,36142,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Start 383: psi4numpy-rhf-gradient; 363/411 Test #328: scf-upcast-custom-basis .......... Passed 1.36 sec; Start 408: skeletonmointegrals; 364/411 Test #8: castup1 .......................... Passed 1.23 sec; Start 362: x2c3; 365/411 Test #395: python-mints13 ................... Passed 1.90 sec; Start 398: json-v11-gradient; 366/411 Test #390: python-mints9 .................... Passed 1.91 sec; Start 352: stability2; 367/411 Test #383: psi4numpy-rhf-gradient ........... Passed 0.97 sec; Start 353: tu1-h2o-energy; 368/411 Test #408: skeletonmointegrals .............. Passed 0.95 sec; Start 96: cisd-h2o-clpse; 369/411 Test #221: mints9 ........................... Passed 1.94 sec; Start 403: json-schema-1-gradient; 370/411 Test #398: json-v11-gradient ................ Passed 0.96 sec; Start 327: scf-guess-read1; 371/411 Test #352: stability2 ....................... Passed 0.88 sec; Start 333: scf2; 372/411 Test #362: x2c3 ............................. Passed 1.46 sec; Start 334: scf3; 373/411 Test #353: tu1-h2o-energy ................... Passed 1.10 sec; Start 288: psimrcc-ccsd_t-2; 374/411 Test #96: cisd-h2o-clpse ................... Passed 1.20 sec; Start 400: json-schema-1-ghost; 375/411 Test #334: scf3 ............................. Passed 0.73 sec; Start 287: psimrcc-ccsd_t-1; 376/411 Test #403: json-schema-1-gradient ........... Passed 1.22 sec; Start 289: psimrcc-ccsd_t-3; 377/411 Test #333: scf2 ............................. Passed 1.28 sec; Start 410: skeletonsointegrals; 378/411 Test #327: scf-guess-read1 .................. Passed 1.34 sec; Start 210: mcscf2; 379/411 Test #400: json-schema-1-ghost .............. Passed 1.01 sec; Start 411: skeletonwavefunction; 380/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.53 sec; Start 229: mp2-grad2; 381/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.31 sec; Start 298: pubchem2; 382/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.35 sec; Start 102: decontract; 383/411 Test #410: skeleton,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:34768,Test,Test,34768,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Start 390: python-pubchem; 78/412 Test #264: omp3-grad2 ....................... Passed 104.13 sec; Start 44: cc28; 79/412 Test #62: cc44 ............................. Passed 81.07 sec; Start 116: dcft9; 80/412 Test #19: cbs-xtpl-nbody ................... Passed 123.53 sec; Start 58: cc40; 81/412 Test #114: dcft7 ............................ Passed 416.24 sec; Start 83: cc9a; 82/412 Test #317: sapt2 ............................ Passed 390.46 sec; Start 35: cc19; 83/412 Test #81: cc8c ............................. Passed 62.89 sec; Start 251: omp2-5; 84/412 Test #168: dft-b3lyp ........................ Passed 73.00 sec; Start 69: cc50; 85/412 Test #390: python-pubchem ................... Passed 67.56 sec; Start 31: cc15; 86/412 Test #245: ocepa2 ........................... Passed 93.39 sec; Start 150: dfomp3-grad2; 87/412 Test #26: cc13a ............................ Passed 466.26 sec; Start 28: cc13c; 88/412 Test #243: ocepa-grad2 ...................... Passed 107.72 sec; Start 67: cc49; 89/412 Test #44: cc28 ............................. Passed 95.67 sec; Start 79: cc8a; 90/412 Test #261: omp3-4 ........................... Passed 118.19 sec; Start 298: pubchem1; 91/412 Test #58: cc40 ............................. Passed 78.47 sec; Start 65: cc47; 92/412 Test #83: cc9a ............................. Passed 85.82 sec; Start 141: dfomp2-2; 93/412 Test #35: cc19 ............................. Passed 88.14 sec; Start 21: cc1; 94/412 Test #69: cc50 ............................. Passed 85.29 sec; Start 157: dfomp2p5-grad2; 95/412 Test #116: dcft9 ............................ Passed 122.12 sec; Start 148: dfomp3-2; 96/412 Test #67: cc49 ............................. Passed 68.52 sec; Start 152: dfomp2p5-2; 97/412 Test #251: omp2-5 ........................... Passed 118.71 sec; Start 101: ci-property; 98/412 Test #298: pubchem1 ......................... Passed 66.34 sec; Start 60: cc42; 99/412 Test #79: cc8a ............................. Passed 77.39 sec; Start 66: cc48; 100/412,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:8598,Test,Test,8598,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Start 399: json-schema-1-energy; 314/411 Test #351: dft-reference .................... Passed 4.90 sec; Start 384: psi4numpy-rhf-hessian; 315/411 Test #377: pywrap-align-chiral .............. Passed 3.04 sec; Start 136: dfmp2-grad3; 316/411 Test #116: ao-dfcasscf-sp ................... Passed 6.35 sec; Start 225: mom; 317/411 Test #310: rasci-c2-active .................. Passed 9.23 sec; Start 213: mints2; 318/411 Test #385: psi4numpy-fci .................... Passed 9.16 sec; Start 397: json-v11-energy; 319/411 Test #370: scf-coverage ..................... Passed 11.16 sec; Start 328: scf-upcast-custom-basis; 320/411 Test #135: dfmp2-grad2 ...................... Passed 15.32 sec; Start 327: scf-guess-read1; 321/411 Test #314: sad1 ............................. Passed 5.26 sec; Start 391: python-mints2; 322/411 Test #234: mp3-grad2 ........................ Passed 9.93 sec; Start 362: x2c3; 323/411 Test #284: props1 ........................... Passed 7.76 sec; Start 228: mp2-grad1; 324/411 Test #399: json-schema-1-energy ............. Passed 5.52 sec; Start 271: opt5; 325/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.49 sec; Start 233: mp3-grad1; 326/411 Test #213: mints2 ........................... Passed 2.95 sec; Start 262: omp3-grad1; 327/411 Test #85: cepa0-grad1 ...................... Passed 9.67 sec; Start 121: dfccdl1; 328/411 Test #328: scf-upcast-custom-basis .......... Passed 2.52 sec; Start 356: scf-response1; 329/411 Test #190: fci-coverage ..................... Passed 13.09 sec; Start 361: x2c2; 330/411 Test #327: scf-guess-read1 .................. Passed 2.57 sec; Start 246: omp2-1; 331/411 Test #397: json-v11-energy .................. Passed 3.24 sec; Start 255: omp2p5-grad1; 332/411 Test #225: mom .............................. Passed 3.92 sec; Start 332: scf-occ; 333/411 Test #391: python-mints2 .................... Passed 2.61 sec; Start 345: dfep2-2; 334/411 Test #362: x2c3 ............................. Passed 2.55 sec; Start 229: mp2-g,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:30416,Test,Test,30416,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Start 400: json-schema-1-ghost; 375/411 Test #334: scf3 ............................. Passed 0.73 sec; Start 287: psimrcc-ccsd_t-1; 376/411 Test #403: json-schema-1-gradient ........... Passed 1.22 sec; Start 289: psimrcc-ccsd_t-3; 377/411 Test #333: scf2 ............................. Passed 1.28 sec; Start 410: skeletonsointegrals; 378/411 Test #327: scf-guess-read1 .................. Passed 1.34 sec; Start 210: mcscf2; 379/411 Test #400: json-schema-1-ghost .............. Passed 1.01 sec; Start 411: skeletonwavefunction; 380/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.53 sec; Start 229: mp2-grad2; 381/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.31 sec; Start 298: pubchem2; 382/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.35 sec; Start 102: decontract; 383/411 Test #410: skeletonsointegrals .............. Passed 0.89 sec; Start 293: psimrcc-pt2; 384/411 Test #210: mcscf2 ........................... Passed 1.22 sec; Start 378: mints12; 385/411 Test #411: skeletonwavefunction ............. Passed 0.92 sec; Start 309: pywrap-molecule; 386/411 Test #293: psimrcc-pt2 ...................... Passed 0.87 sec; Start 211: mcscf3; 387/411 Test #102: decontract ....................... Passed 1.19 sec; Start 396: python-memdfjk; 388/411 Test #229: mp2-grad2 ........................ Passed 1.47 sec; Start 214: mints3; 389/411 Test #298: pubchem2 ......................... Passed 1.42 sec; Start 382: psi4numpy-rhf; 390/411 Test #309: pywrap-molecule .................. Passed 1.08 sec; Start 209: mcscf1; 391/411 Test #378: mints12 .......................... Passed 1.17 sec; Start 188: fci-tdm; 392/411 Test #211: mcscf3 ........................... Passed 0.72 sec; Start 308: pywrap-db3; 393/411 Test #382: psi4numpy-rhf .................... Passed 0.79 sec; Start 239: numpy-array-interface; 394/411 Test #396: python-memdfjk ................... Passed 0.95 sec; Start 409: skeletonscf; 395/411 Test #209: mcscf1 ........................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:35932,Test,Test,35932,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,"Start 405: skeleton; 398/411 Test #403: json-schema-1-gradient ........... Passed 1.54 sec; Start 406: skeletonaointegrals; 399/411 Test #404: json-schema-1-properties ......... Passed 1.27 sec; Start 407: skeletondfmp2; 400/411 Test #405: skeleton ......................... Passed 1.30 sec; Start 408: skeletonmointegrals; 401/411 Test #406: skeletonaointegrals .............. Passed 1.33 sec; Start 409: skeletonscf; 402/411 Test #407: skeletondfmp2 .................... Passed 1.53 sec; Start 410: skeletonsointegrals; 403/411 Test #409: skeletonscf ...................... Passed 0.75 sec; Start 411: skeletonwavefunction; 404/411 Test #408: skeletonmointegrals .............. Passed 1.51 sec; 405/411 Test #411: skeletonwavefunction ............. Passed 1.76 sec; 406/411 Test #410: skeletonsointegrals .............. Passed 1.81 sec; 407/411 Test #371: dft-custom-dhdf .................. Passed 84.13 sec; 408/411 Test #379: cc-module ........................ Passed 42.31 sec; 409/411 Test #386: cookbook-rohf-orb-rot ............ Passed 40.50 sec; 410/411 Test #389: python-pubchem ................... Passed 55.23 sec; 411/411 Test #373: dft-custom-mgga .................. Passed 153.16 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 69.98 sec*proc (2 tests); autotest = 2430.21 sec*proc (26 tests); cart = 17487.73 sec*proc (123 tests); cas = 66.60 sec*proc (1 test); casscf = 150.37 sec*proc (11 tests); cbs = 3292.06 sec*proc (10 tests); cc = 12872.21 sec*proc (65 tests); cdomp2 = 104.56 sec*proc (2 tests); cepa = 417.43 sec*proc (7 tests); ci = 125.33 sec*proc (8 tests); cisd = 241.44 sec*proc (7 tests); cookbook = 40.50 sec*proc (1 test); cubeprop = 21.07 sec*proc (2 tests); dcft = 4916.85 sec*proc (13 tests); df = 2467.51 sec*proc (38 tests); dfccd = 5.49 sec*proc (1 test); dfccd-grad = 28.16 sec*proc (1 test); dfccdl = 9.25 sec*proc (1 test); dfccsd = 20.05 sec*proc (1 test); dfccsd-grad = 75.47 sec*proc (1 test); dfccsd-t-grad = 66.61 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:38194,Test,Test,38194,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['Test'],['Test']
Testability,"Start 405: skeleton; 405/411 Test #405: skeleton ......................... Passed 1.10 sec; Start 406: skeletonaointegrals; 406/411 Test #406: skeletonaointegrals .............. Passed 1.17 sec; Start 407: skeletondfmp2; 407/411 Test #407: skeletondfmp2 .................... Passed 1.29 sec; Start 408: skeletonmointegrals; 408/411 Test #408: skeletonmointegrals .............. Passed 1.22 sec; Start 409: skeletonscf; 409/411 Test #409: skeletonscf ...................... Passed 0.72 sec; Start 410: skeletonsointegrals; 410/411 Test #410: skeletonsointegrals .............. Passed 1.01 sec; Start 411: skeletonwavefunction; 411/411 Test #411: skeletonwavefunction ............. Passed 1.03 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 55.73 sec*proc (2 tests); autotest = 374.25 sec*proc (26 tests); cart = 8218.29 sec*proc (123 tests); cas = 41.71 sec*proc (1 test); casscf = 36.15 sec*proc (11 tests); cbs = 546.91 sec*proc (10 tests); cc = 1151.91 sec*proc (65 tests); cdomp2 = 5.24 sec*proc (2 tests); cepa = 30.36 sec*proc (7 tests); ci = 79.29 sec*proc (8 tests); cisd = 117.44 sec*proc (7 tests); cookbook = 18.93 sec*proc (1 test); cubeprop = 16.42 sec*proc (2 tests); dcft = 560.31 sec*proc (13 tests); df = 370.25 sec*proc (38 tests); dfccd = 1.39 sec*proc (1 test); dfccd-grad = 2.01 sec*proc (1 test); dfccdl = 1.41 sec*proc (1 test); dfccsd = 1.55 sec*proc (1 test); dfccsd-grad = 3.50 sec*proc (1 test); dfccsd-t-grad = 3.85 sec*proc (1 test); dfccsdat = 2.57 sec*proc (1 test); dfccsdl = 1.64 sec*proc (1 test); dfccsdt = 1.99 sec*proc (1 test); dfep2 = 4.64 sec*proc (2 tests); dfmp2 = 93.43 sec*proc (11 tests); dfomp2 = 61.41 sec*proc (7 tests); dfomp2.5 = 19.21 sec*proc (4 tests); dfomp3 = 18.74 sec*proc (4 tests); dfscf = 120.49 sec*proc (1 test); dft = 1158.52 sec*proc (27 tests); docs = 1.35 sec*proc (2 tests); ecp = 31.03 sec*proc (2 tests); fci = 9.12 sec*proc (2 tests); fcidump = 2.13 sec*proc (1 test); findif = 682.89 sec*proc (5 test",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:38495,test,tests,38495,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['test'],['tests']
Testability,"Start 405: skeleton; 405/411 Test #405: skeleton ......................... Passed 1.11 sec; Start 406: skeletonaointegrals; 406/411 Test #406: skeletonaointegrals .............. Passed 0.98 sec; Start 407: skeletondfmp2; 407/411 Test #407: skeletondfmp2 .................... Passed 1.33 sec; Start 408: skeletonmointegrals; 408/411 Test #408: skeletonmointegrals .............. Passed 1.07 sec; Start 409: skeletonscf; 409/411 Test #409: skeletonscf ...................... Passed 0.68 sec; Start 410: skeletonsointegrals; 410/411 Test #410: skeletonsointegrals .............. Passed 1.01 sec; Start 411: skeletonwavefunction; 411/411 Test #411: skeletonwavefunction ............. Passed 0.95 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 59.40 sec*proc (2 tests); autotest = 413.88 sec*proc (26 tests); cart = 8685.75 sec*proc (123 tests); cas = 42.49 sec*proc (1 test); casscf = 39.18 sec*proc (11 tests); cbs = 636.82 sec*proc (10 tests); cc = 1337.69 sec*proc (65 tests); cdomp2 = 6.18 sec*proc (2 tests); cepa = 34.84 sec*proc (7 tests); ci = 81.27 sec*proc (8 tests); cisd = 132.02 sec*proc (7 tests); cookbook = 33.29 sec*proc (1 test); cubeprop = 17.72 sec*proc (2 tests); dcft = 859.31 sec*proc (13 tests); df = 444.10 sec*proc (38 tests); dfccd = 1.41 sec*proc (1 test); dfccd-grad = 2.48 sec*proc (1 test); dfccdl = 1.38 sec*proc (1 test); dfccsd = 1.91 sec*proc (1 test); dfccsd-grad = 5.09 sec*proc (1 test); dfccsd-t-grad = 4.20 sec*proc (1 test); dfccsdat = 3.26 sec*proc (1 test); dfccsdl = 1.60 sec*proc (1 test); dfccsdt = 2.15 sec*proc (1 test); dfep2 = 4.83 sec*proc (2 tests); dfmp2 = 103.27 sec*proc (11 tests); dfomp2 = 91.94 sec*proc (7 tests); dfomp2.5 = 23.91 sec*proc (4 tests); dfomp3 = 23.93 sec*proc (4 tests); dfscf = 139.95 sec*proc (1 test); dft = 1225.97 sec*proc (27 tests); docs = 1.17 sec*proc (2 tests); ecp = 31.89 sec*proc (2 tests); fci = 9.85 sec*proc (2 tests); fcidump = 1.78 sec*proc (1 test); findif = 712.53 sec*proc (5 tes",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:38524,test,tests,38524,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['test'],['tests']
Testability,"Start 410: skeletonscf; 392/412 Test #335: scf3 ............................. Passed 1.16 sec; Start 209: matrix1; 393/412 Test #379: mints12 .......................... Passed 1.51 sec; Start 176: docs-dft; 394/412 Test #212: mcscf3 ........................... Passed 1.18 sec; Start 365: options1; 395/412 Test #397: python-memdfjk ................... Passed 1.86 sec; Start 403: json-schema-1-throws; 396/412 Test #210: mcscf1 ........................... Passed 1.06 sec; Start 88: cepa1; 397/412 Test #175: docs-bases ....................... Passed 0.75 sec; 398/412 Test #240: numpy-array-interface ............ Passed 1.01 sec; 399/412 Test #217: mints5 ........................... Passed 1.36 sec; 400/412 Test #383: psi4numpy-rhf .................... Passed 1.21 sec; 401/412 Test #213: mints1 ........................... Passed 0.95 sec; 402/412 Test #309: pywrap-db3 ....................... Passed 0.84 sec; 403/412 Test #209: matrix1 .......................... Passed 0.70 sec; 404/412 Test #410: skeletonscf ...................... Passed 0.81 sec; 405/412 Test #216: mints4 ........................... Passed 0.83 sec; 406/412 Test #176: docs-dft ......................... Passed 0.72 sec; 407/412 Test #403: json-schema-1-throws ............. Passed 0.60 sec; 408/412 Test #365: options1 ......................... Passed 0.68 sec; 409/412 Test #88: cepa1 ............................ Passed 2.11 sec; 410/412 Test #179: fsapt1 ........................... Passed 2105.81 sec; 411/412 Test #18: cbs-xtpl-func .................... Passed 1523.38 sec; 412/412 Test #319: sapt4 ............................ Passed 1971.42 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 75.58 sec*proc (2 tests); autotest = 2463.35 sec*proc (26 tests); cart = 23370.60 sec*proc (123 tests); cas = 61.99 sec*proc (1 test); casscf = 167.92 sec*proc (11 tests); cbs = 3247.75 sec*proc (11 tests); cc = 18280.00 sec*proc (65 tests); cdomp2 = 69.54 sec*proc (2 tests); cepa = 132.16 se",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:37861,Test,Test,37861,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Start 411: skeletonwavefunction; 380/411 Test #298: pubchem2 ......................... Passed 1.42 sec; Start 404: json-schema-1-properties; 381/411 Test #410: skeletonsointegrals .............. Passed 0.89 sec; Start 400: json-schema-1-ghost; 382/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.47 sec; Start 353: tu1-h2o-energy; 383/411 Test #220: mints-helper ..................... Passed 1.12 sec; Start 330: scf-bs; 384/411 Test #411: skeletonwavefunction ............. Passed 0.90 sec; Start 378: mints12; 385/411 Test #398: json-v11-gradient ................ Passed 0.97 sec; Start 349: sapt-sf1; 386/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.48 sec; Start 387: python-energy; 387/411 Test #404: json-schema-1-properties ......... Passed 1.01 sec; Start 309: pywrap-molecule; 388/411 Test #400: json-schema-1-ghost .............. Passed 1.03 sec; Start 293: psimrcc-pt2; 389/411 Test #353: tu1-h2o-energy ................... Passed 1.09 sec; Start 396: python-memdfjk; 390/411 Test #330: scf-bs ........................... Passed 0.85 sec; Start 354: tu2-ch2-energy; 391/411 Test #349: sapt-sf1 ......................... Passed 0.93 sec; Start 175: docs-dft; 392/411 Test #387: python-energy .................... Passed 0.82 sec; Start 382: psi4numpy-rhf; 393/411 Test #378: mints12 .......................... Passed 1.15 sec; Start 334: scf3; 394/411 Test #293: psimrcc-pt2 ...................... Passed 0.97 sec; Start 216: mints5; 395/411 Test #309: pywrap-molecule .................. Passed 1.09 sec; Start 208: matrix1; 396/411 Test #396: python-memdfjk ................... Passed 0.89 sec; Start 308: pywrap-db3; 397/411 Test #175: docs-dft ......................... Passed 0.57 sec; Start 364: options1; 398/411 Test #354: tu2-ch2-energy ................... Passed 0.81 sec; Start 215: mints4; 399/411 Test #382: psi4numpy-rhf .................... Passed 0.81 sec; Start 409: skeletonscf; 400/411 Test #208: matrix1 .......................... Passed 0.53 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:36527,Test,Test,36527,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Start 41: cc25; Start 43: cc27; Start 112: dcft4; Start 105: dcft-grad1; Start 396: python-vibanalysis; Start 30: cc14; Start 147: dfomp2-grad3; Start 157: dft-grad-lr3; Start 229: mp2-def2; Start 32: cc16; 1/413 Test #229: mp2-def2 ......................... Passed 366.62 sec; Start 25: cc13; 2/413 Test #157: dft-grad-lr3 ..................... Passed 422.32 sec; Start 180: fsapt1; 3/413 Test #32: cc16 ............................. Passed 556.73 sec; Start 116: dcft8; 4/413 Test #30: cc14 ............................. Passed 752.25 sec; Start 29: cc13d; 5/413 Test #43: cc27 ............................. Passed 867.54 sec; Start 77: cc7; 6/413 Test #39: cc23 ............................. Passed 965.39 sec; Start 113: dcft5; 7/413 Test #25: cc13 ............................. Passed 598.94 sec; Start 242: ocepa-freq1; 8/413 Test #41: cc25 ............................. Passed 970.65 sec; Start 184: isapt1; 9/413 Test #37: cc21 ............................. Passed 984.02 sec; Start 45: cc29; 10/413 Test #42: cc26 ............................. Passed 997.98 sec; Start 61: cc43; 11/413 Test #29: cc13d ............................ Passed 374.09 sec; Start 13: cbs-xtpl-alpha; 12/413 Test #40: cc24 ............................. Passed 1131.64 sec; Start 59: cc41; 13/413 Test #36: cc2 .............................. Passed 1134.77 sec; Start 48: cc31; 14/413 Test #61: cc43 ............................. Passed 150.20 sec; Start 302: pywrap-all; 15/413 Test #45: cc29 ............................. Passed 198.44 sec; Start 306: pywrap-checkrun-rhf; 16/413 Test #396: python-vibanalysis ............... Passed 1286.48 sec; Start 114: dcft6; 17/413 Test #59: cc41 ............................. Passed 185.32 sec; Start 18: cbs-xtpl-func; 18/413 Test #184: isapt1 ........................... Passed 393.71 sec; Start 183: fsapt-allterms; 19/413 Test #113: dcft5 ............................ Passed 418.67 sec; Start 195: fd-freq-energy-large; 20/413 Test #48: cc31 ............................. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:1230,Test,Test,1230,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Start 55: cc39; 119/411 Test #63: cc46 ............................. Passed 85.23 sec; Start 323: sapt7; 120/411 Test #237: nbody-he-cluster ................. Passed 65.52 sec; Start 67: cc4a; 121/411 Test #323: sapt7 ............................ Passed 32.27 sec; Start 129: dfmp2-1; 122/411 Test #64: cc47 ............................. Passed 86.29 sec; Start 276: opt11; 123/411 Test #261: omp3-5 ........................... Passed 157.82 sec; Start 106: dcft-grad4; 124/411 Test #256: omp2p5-grad2 ..................... Passed 106.36 sec; Start 78: cc8a; 125/411 Test #55: cc39 ............................. Passed 61.61 sec; Start 273: opt7; 126/411 Test #129: dfmp2-1 .......................... Passed 33.05 sec; Start 80: cc8c; 127/411 Test #151: dfomp2p5-2 ....................... Passed 82.30 sec; Start 360: x2c1; 128/411 Test #67: cc4a ............................. Passed 45.28 sec; Start 337: scf6; 129/411 Test #106: dcft-grad4 ....................... Passed 39.15 sec; Start 1: adc1; 130/411 Test #276: opt11 ............................ Passed 56.48 sec; Start 56: cc4; 131/411 Test #78: cc8a ............................. Passed 47.51 sec; Start 342: soscf-dft; 132/411 Test #337: scf6 ............................. Passed 35.45 sec; Start 374: dft-custom-gga; 133/411 Test #360: x2c1 ............................. Passed 37.74 sec; Start 71: cc53; 134/411 Test #80: cc8c ............................. Passed 43.04 sec; Start 263: omp3-grad2; 135/411 Test #273: opt7 ............................. Passed 48.34 sec; Start 49: cc33; 136/411 Test #1: adc1 ............................. Passed 24.91 sec; Start 336: scf5; 137/411 Test #342: soscf-dft ........................ Passed 32.27 sec; Start 20: cc1; 138/411 Test #374: dft-custom-gga ................... Passed 31.31 sec; Start 242: ocepa-grad2; 139/411 Test #56: cc4 .............................. Passed 39.24 sec; Start 84: cdomp2-2; 140/411 Test #49: cc33 ............................. Passed 34.54 sec; Start 125: dfccsd-gra,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:12149,Test,Test,12149,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Start 58: cc41; 54/411 Test #58: cc41 ............................. Passed 20.82 sec; Start 149: dfomp3-grad2; 55/411 Test #149: dfomp3-grad2 ..................... Passed 7.37 sec; Start 69: cc51; 56/411 Test #161: dft-grad-lr2 ..................... Passed 89.66 sec; Start 43: cc28; 57/411 Test #278: opt13 ............................ Passed 799.10 sec; Start 27: cc13c; 58/411 Test #371: dft-custom-dhdf .................. Passed 81.14 sec; Start 319: sapt5; 59/411 Test #27: cc13c ............................ Passed 10.62 sec; Start 279: opt14; 60/411 Test #168: dft1 ............................. Passed 88.97 sec; Start 75: cc6; 61/411 Test #43: cc28 ............................. Passed 24.64 sec; Start 60: cc43; 62/411 Test #60: cc43 ............................. Passed 15.10 sec; Start 91: cepa-module; 63/411 Test #69: cc51 ............................. Passed 56.92 sec; Start 292: psimrcc-fd-freq2; 64/411 Test #91: cepa-module ...................... Passed 19.19 sec; Start 115: dcft9; 65/411 Test #75: cc6 .............................. Passed 49.07 sec; Start 259: omp3-3; 66/411 Test #316: sapt2 ............................ Passed 354.02 sec; Start 74: cc5a; 67/411 Test #115: dcft9 ............................ Passed 13.18 sec; Start 317: sapt3; 68/411 Test #319: sapt5 ............................ Passed 67.31 sec; Start 167: dft-b3lyp; 69/411 Test #259: omp3-3 ........................... Passed 18.77 sec; Start 30: cc15; 70/411 Test #279: opt14 ............................ Passed 74.61 sec; Start 153: dfomp2p5-grad2; 71/411 Test #30: cc15 ............................. Passed 12.46 sec; Start 104: dcft-grad2; 72/411 Test #153: dfomp2p5-grad2 ................... Passed 15.20 sec; Start 61: cc44; 73/411 Test #292: psimrcc-fd-freq2 ................. Passed 62.74 sec; Start 204: frac-ip-fitting; 74/411 Test #104: dcft-grad2 ....................... Passed 16.24 sec; Start 144: dfomp2-grad2; 75/411 Test #74: cc5a ............................. Passed 46.64 sec; Start 11:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:6184,Test,Test,6184,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Start 64: cc47; 119/411 Test #348: sapt-compare ..................... Passed 38.30 sec; Start 106: dcft-grad4; 120/411 Test #237: nbody-he-cluster ................. Passed 25.96 sec; Start 80: cc8c; 121/411 Test #80: cc8c ............................. Passed 6.42 sec; Start 55: cc39; 122/411 Test #219: mints-benchmark .................. Passed 41.17 sec; Start 56: cc4; 123/411 Test #64: cc47 ............................. Passed 13.48 sec; Start 71: cc53; 124/411 Test #66: cc49 ............................. Passed 19.49 sec; Start 245: ocepa3; 125/411 Test #55: cc39 ............................. Passed 10.10 sec; Start 67: cc4a; 126/411 Test #131: dfmp2-3 .......................... Passed 40.64 sec; Start 374: dft-custom-gga; 127/411 Test #71: cc53 ............................. Passed 11.17 sec; Start 78: cc8a; 128/411 Test #56: cc4 .............................. Passed 13.95 sec; Start 82: cc9a; 129/411 Test #245: ocepa3 ........................... Passed 19.83 sec; Start 37: cc22; 130/411 Test #106: dcft-grad4 ....................... Passed 32.29 sec; Start 323: sapt7; 131/411 Test #67: cc4a ............................. Passed 18.64 sec; Start 206: ghosts; 132/411 Test #78: cc8a ............................. Passed 14.25 sec; Start 273: opt7; 133/411 Test #37: cc22 ............................. Passed 7.28 sec; Start 129: dfmp2-1; 134/411 Test #82: cc9a ............................. Passed 14.69 sec; Start 54: cc38; 135/411 Test #54: cc38 ............................. Passed 6.45 sec; Start 312: rasci-ne; 136/411 Test #374: dft-custom-gga ................... Passed 27.50 sec; Start 152: dfomp2p5-grad1; 137/411 Test #152: dfomp2p5-grad1 ................... Passed 4.11 sec; Start 342: soscf-dft; 138/411 Test #323: sapt7 ............................ Passed 30.87 sec; Start 276: opt11; 139/411 Test #273: opt7 ............................. Passed 25.74 sec; Start 142: dfomp2-4; 140/411 Test #206: ghosts ........................... Passed 30.23 sec; Start 63: cc46; 141/4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:12104,Test,Test,12104,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Start 66: cc49; 101/411 Test #237: nbody-he-cluster ................. Passed 37.15 sec; Start 131: dfmp2-3; 102/411 Test #219: mints-benchmark .................. Passed 39.00 sec; Start 307: pywrap-db1; 103/411 Test #59: cc42 ............................. Passed 21.57 sec; Start 276: opt11; 104/411 Test #348: sapt-compare ..................... Passed 39.20 sec; Start 81: cc9; 105/411 Test #65: cc48 ............................. Passed 22.80 sec; Start 263: omp3-grad2; 106/411 Test #81: cc9 .............................. Passed 13.37 sec; Start 30: cc15; 107/411 Test #200: fnocc2 ........................... Passed 21.81 sec; Start 82: cc9a; 108/411 Test #66: cc49 ............................. Passed 21.92 sec; Start 73: cc55; 109/411 Test #263: omp3-grad2 ....................... Passed 24.71 sec; Start 68: cc50; 110/411 Test #307: pywrap-db1 ....................... Passed 36.87 sec; Start 34: cc19; 111/411 Test #131: dfmp2-3 .......................... Passed 38.25 sec; Start 79: cc8b; 112/411 Test #276: opt11 ............................ Passed 41.10 sec; Start 312: rasci-ne; 113/411 Test #73: cc55 ............................. Passed 24.78 sec; Start 273: opt7; 114/411 Test #82: cc9a ............................. Passed 27.74 sec; Start 206: ghosts; 115/411 Test #30: cc15 ............................. Passed 32.63 sec; Start 106: dcft-grad4; 116/411 Test #79: cc8b ............................. Passed 19.65 sec; Start 27: cc13c; 117/411 Test #34: cc19 ............................. Passed 30.20 sec; Start 256: omp2p5-grad2; 118/411 Test #68: cc50 ............................. Passed 34.57 sec; Start 129: dfmp2-1; 119/411 Test #312: rasci-ne ......................... Passed 29.30 sec; Start 64: cc47; 120/411 Test #206: ghosts ........................... Passed 30.14 sec; Start 78: cc8a; 121/411 Test #106: dcft-grad4 ....................... Passed 31.84 sec; Start 80: cc8c; 122/411 Test #273: opt7 ............................. Passed 39.55 sec; Start 26: cc13b; 123/411 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:10562,Test,Test,10562,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Start 78: cc8; 111/412 Test #60: cc42 ............................. Passed 58.59 sec; Start 132: dfmp2-3; 112/412 Test #66: cc48 ............................. Passed 63.06 sec; Start 201: fnocc2; 113/412 Test #349: sapt-compare ..................... Passed 59.37 sec; Start 55: cc38; 114/412 Test #220: mints-benchmark .................. Passed 56.59 sec; Start 81: cc8c; 115/412 Test #308: pywrap-db1 ....................... Passed 62.96 sec; Start 152: dfomp2p5-2; 116/412 Test #65: cc47 ............................. Passed 89.72 sec; Start 68: cc4a; 117/412 Test #57: cc4 .............................. Passed 86.80 sec; Start 79: cc8a; 118/412 Test #132: dfmp2-3 .......................... Passed 59.47 sec; Start 148: dfomp3-2; 119/412 Test #12: cbs-parser ....................... Passed 96.99 sec; Start 246: ocepa3; 120/412 Test #82: cc9 .............................. Passed 89.68 sec; Start 64: cc46; 121/412 Test #55: cc38 ............................. Passed 68.64 sec; Start 74: cc55; 122/412 Test #141: dfomp2-2 ......................... Passed 85.24 sec; Start 56: cc39; 123/412 Test #83: cc9a ............................. Passed 112.00 sec; Start 85: cdomp2-2; 124/412 Test #78: cc8 .............................. Passed 85.11 sec; Start 143: dfomp2-4; 125/412 Test #201: fnocc2 ........................... Passed 90.60 sec; Start 313: rasci-ne; 126/412 Test #108: dcft1 ............................ Passed 127.38 sec; Start 72: cc53; 127/412 Test #68: cc4a ............................. Passed 76.60 sec; Start 338: scf6; 128/412 Test #152: dfomp2p5-2 ....................... Passed 100.80 sec; Start 73: cc54; 129/412 Test #81: cc8c ............................. Passed 114.40 sec; Start 80: cc8b; 130/412 Test #313: rasci-ne ......................... Passed 55.19 sec; Start 107: dcft-grad4; 131/412 Test #64: cc46 ............................. Passed 92.56 sec; Start 337: scf5; 132/412 Test #246: ocepa3 ........................... Passed 110.86 sec; Start 207: ghosts; 133/412 T,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:11593,Test,Test,11593,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Start 82: cc9; 101/412 Test #65: cc47 ............................. Passed 82.63 sec; Start 74: cc55; 102/412 Test #31: cc15 ............................. Passed 138.15 sec; Start 108: dcft1; 103/412 Test #141: dfomp2-2 ......................... Passed 73.14 sec; Start 85: cdomp2-2; 104/412 Test #279: opt13 ............................ Passed 845.14 sec; Start 57: cc4; 105/412 Test #148: dfomp3-2 ......................... Passed 65.50 sec; Start 238: nbody-he-cluster; 106/412 Test #152: dfomp2p5-2 ....................... Passed 56.77 sec; Start 78: cc8; 107/412 Test #28: cc13c ............................ Passed 134.32 sec; Start 274: opt7; 108/412 Test #157: dfomp2p5-grad2 ................... Passed 86.76 sec; Start 277: opt11; 109/412 Test #101: ci-property ...................... Passed 61.99 sec; Start 64: cc46; 110/412 Test #60: cc42 ............................. Passed 67.55 sec; Start 73: cc54; 111/412 Test #66: cc48 ............................. Passed 67.59 sec; Start 68: cc4a; 112/412 Test #82: cc9 .............................. Passed 58.84 sec; Start 171: dft1-alt; 113/412 Test #74: cc55 ............................. Passed 58.53 sec; Start 12: cbs-parser; 114/412 Test #85: cdomp2-2 ......................... Passed 63.06 sec; Start 55: cc38; 115/412 Test #21: cc1 .............................. Passed 135.62 sec; Start 163: dft-grad-meta; 116/412 Test #108: dcft1 ............................ Passed 81.10 sec; Start 143: dfomp2-4; 117/412 Test #57: cc4 .............................. Passed 79.37 sec; Start 2: adc2; 118/412 Test #78: cc8 .............................. Passed 72.73 sec; Start 56: cc39; 119/412 Test #274: opt7 ............................. Passed 71.21 sec; Start 72: cc53; 120/412 Test #238: nbody-he-cluster ................. Passed 75.76 sec; Start 246: ocepa3; 121/412 Test #277: opt11 ............................ Passed 67.19 sec; Start 80: cc8b; 122/412 Test #64: cc46 ............................. Passed 69.45 sec; Start 201: fnocc2; 123/412,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:10666,Test,Test,10666,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Start 82: cc9a; 79/411 Test #78: cc8a ............................. Passed 29.41 sec; Start 83: cdomp2-1; 80/411 Test #80: cc8c ............................. Passed 28.81 sec; Start 84: cdomp2-2; 81/411 Test #79: cc8b ............................. Passed 31.14 sec; Start 85: cepa0-grad1; 82/411 Test #69: cc51 ............................. Passed 65.47 sec; Start 86: cepa0-grad2; 83/411 Test #85: cepa0-grad1 ...................... Passed 8.15 sec; Start 87: cepa1; 84/411 Test #83: cdomp2-1 ......................... Passed 13.54 sec; Start 88: cepa2; 85/411 Test #86: cepa0-grad2 ...................... Passed 11.63 sec; Start 89: cepa3; 86/411 Test #74: cc5a ............................. Passed 69.92 sec; Start 90: cepa1; 87/411 Test #87: cepa1 ............................ Passed 20.52 sec; Start 91: cepa-module; 88/411 Test #88: cepa2 ............................ Passed 20.34 sec; Start 92: ci-multi; 89/411 Test #75: cc6 .............................. Passed 78.50 sec; Start 93: cisd-h2o+-0; 90/411 Test #81: cc9 .............................. Passed 59.24 sec; Start 94: cisd-h2o+-1; 91/411 Test #89: cepa3 ............................ Passed 25.08 sec; Start 95: cisd-h2o+-2; 92/411 Test #93: cisd-h2o+-0 ...................... Passed 7.16 sec; Start 96: cisd-h2o-clpse; 93/411 Test #94: cisd-h2o+-1 ...................... Passed 6.09 sec; Start 97: cisd-opt-fd; 94/411 Test #96: cisd-h2o-clpse ................... Passed 5.20 sec; Start 98: cisd-sp; 95/411 Test #95: cisd-h2o+-2 ...................... Passed 6.73 sec; Start 99: cisd-sp-2; 96/411 Test #99: cisd-sp-2 ........................ Passed 6.04 sec; Start 100: ci-property; 97/411 Test #98: cisd-sp .......................... Passed 16.34 sec; Start 101: cubeprop; 98/411 Test #90: cepa1 ............................ Passed 40.09 sec; Start 102: decontract; 99/411 Test #102: decontract ....................... Passed 2.16 sec; Start 103: dcft-grad1; 100/411 Test #84: cdomp2-2 ......................... Passed 73.49 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:8304,Test,Test,8304,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,"Status update for those who are watching this: my original attempt at the four-index TPDM elements using pre-existing `libdpd` capabilities proved slower than the existing `libiwl` algorithm, so I've had to write new `libdpd` algorithms. The new algorithm working on just the `VVVV` block is beating the `libiwl` algorithm for speed. I'll need to modify the algorithm to handle more general blocks, make sure the speed is still good, and then I can commit the next step. The current plan is to replace the libiwl and presorting steps, but leave the rest of the TPDM logic as-is. This may change.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1745#issuecomment-561305402:566,log,logic,566,https://psicode.org,https://github.com/psi4/psi4/pull/1745#issuecomment-561305402,1,['log'],['logic']
Testability,"Status update on this, including developments from half an hour ago. Numerical tests indicate the difference in reaction energies between the current DF scheme and the new one are negligible. The Excel file is attached if anybody wants to look over the numbers themselves. @ssh2 and I are agreed that between that and some additional theoretical points, we'll just switch the density fitting scheme to fix Point 2. In the new scheme, the cumulant gets contracted against RIFIT integrals as before, and the _entire_ rest of the 2RDM gets contracted against JKFIT integrals. [df_dcft_comparison.xlsx](https://github.com/psi4/psi4/files/3023032/df_dcft_comparison.xlsx). Point 1 is trickier. I've spoken with @jturney about DF gradients in Psi. Although `deriv.cc` does a check to see if the wavefunction is density fitted in the gradient code, it isn't for density fitted gradients but to check whether necessary tensors exist on disk or as member variables. As far as I know, every DF gradient in Psi runs through its own module. DF-MP2 gradients have `dfmp2`, DF-SCF has `scfgrad`, and Bozkaya has `dfocc`. This will require some attention, but likely won't get it until after ACS Orlando.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1579#issuecomment-478019331:79,test,tests,79,https://psicode.org,https://github.com/psi4/psi4/issues/1579#issuecomment-478019331,1,['test'],['tests']
Testability,"Status update: I have coupled DIIS working for OCEPA. The OMP family should follow without _much_ additional effort. For `ocepa-grad2`, I'm seeing in 13 iterations what took 33 [before my meddling](https://github.com/psi4/psi4/blob/master/tests/ocepa-grad2/output.ref). I'm going to take some extra time before pushing anything to do a thorough convergence study.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1777#issuecomment-582943452:239,test,tests,239,https://psicode.org,https://github.com/psi4/psi4/issues/1777#issuecomment-582943452,1,['test'],['tests']
Testability,"Step 1 would be to try some of the tests. If you self-compiled, then `ctest -L smoke -j N` in `$objdir` will run N simultaneous tests from the ""smoke"" test suite (which has only 19 tests, should take about a minute on 4 threads), that will catch whether something is obviously wrong.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/888#issuecomment-432353839:35,test,tests,35,https://psicode.org,https://github.com/psi4/psi4/issues/888#issuecomment-432353839,4,['test'],"['test', 'tests']"
Testability,"Still in the draft stage, but next round of edits is in. I need to give the tests another pass to make sure we have proper coverage. The other major issue is the docs. I'll need to update the section describing excite state psivars, but @loriab, how do you feel about grouping psivars together? See discussion [here](https://github.com/psi4/psi4/pull/2462#discussion_r822344906).",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2569#issuecomment-1129504422:76,test,tests,76,https://psicode.org,https://github.com/psi4/psi4/pull/2569#issuecomment-1129504422,1,['test'],['tests']
Testability,"Strange - perhaps this bug only appears if some quantity is exactly zero, and the differences between machines are enough to throw this off? Output below.; [output.log](https://github.com/psi4/psi4/files/6811291/output.log)",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2243#issuecomment-879324499:164,log,log,164,https://psicode.org,https://github.com/psi4/psi4/issues/2243#issuecomment-879324499,2,['log'],['log']
Testability,"Subset will clone the array so your are not editing internal wavefunction values. It looks like you made your change to accommodate a wave function with symmetry. As noted this will not work. While possible, it will be a reasonable amount of additional work. I should note this operation is not exactly supported or in most cases a recommended thing anyone should do. This may break in the future, but gives something we can quickly test.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1311#issuecomment-436471315:433,test,test,433,https://psicode.org,https://github.com/psi4/psi4/issues/1311#issuecomment-436471315,1,['test'],['test']
Testability,"Sure, I'm happy with that for now. On that regard can you switch on `psi4/libfock/v.cc:483,525` and the like timer functions back on to test out the new functionality? The rank information is unsurprisingly called `rank`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/743#issuecomment-312719601:136,test,test,136,https://psicode.org,https://github.com/psi4/psi4/pull/743#issuecomment-312719601,1,['test'],['test']
Testability,"Sure, I'm just wondering whether this should really be in stdout or the log file?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/588#issuecomment-275939888:72,log,log,72,https://psicode.org,https://github.com/psi4/psi4/pull/588#issuecomment-275939888,1,['log'],['log']
Testability,"Sure, `cpscf_linear_response` in principle allows one to pass a list of operators [here](https://github.com/maxscheurer/psi4/blob/1528bcfda6d55d32712f3e6be4b21a45abe90e55/psi4/driver/procrouting/response/scf_response.py#L113), so you can build your own response property. But apparently this feature is neither tested nor accessible from `psi4.properties`.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2266#issuecomment-964898464:311,test,tested,311,https://psicode.org,https://github.com/psi4/psi4/pull/2266#issuecomment-964898464,1,['test'],['tested']
Testability,"Sure, as soon as I'm done with fixing the tests and cleaning up the code as you suggested.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/810#issuecomment-337592287:42,test,tests,42,https://psicode.org,https://github.com/psi4/psi4/pull/810#issuecomment-337592287,1,['test'],['tests']
Testability,"Sure, here is the script:. ```; import time; import sys; import os; import json. import psi4. def run_fxyz(fxyz, theory='wB97X-D3/def2-TZVP'):; '''; fxyz: absolute path to an xyz file; '''; elements, xyz = [], []; with open(fxyz) as f:; line = next(f); numb_atoms = int(line.split()[0]); line = next(f); charge, multiplicity = map(int, line.split()); for i in range(numb_atoms):; line = next(f); elmnt, x, y, z = line.split() ; elements.append(elmnt); xyz.append((float(x), float(y), float(z))). fxyz = os.path.basename(fxyz); base, ext = os.path.splitext(fxyz). name = base + '_wB97XD3_def2-TZVP'. geom_string = '\n'.join(['%s %f %f %f' % (e, x, y, z) for e, (x, y, z) in zip(elements, xyz)]); geom_string = str(charge) + ' ' + str(multiplicity) + '\n' + geom_string; print(""geom_string"", geom_string). outfile = name + '.psi4'; psi4.core.set_output_file(outfile, False); geom = psi4.geometry(geom_string); settings = {; 'scf_type': 'DF',; 'dft_basis_tolerance': 1e-10,; 'ints_tolerance': 1e-10,; 'dft_pruning_scheme':'robust',; 'S_ORTHOGONALIZATION': 'PARTIALCHOLESKY',; 'S_CHOLESKY_TOLERANCE': 1e-6,; 'wcombine': False,; }; psi4.set_options(settings); start_time = time.time(); grad = psi4.gradient(theory) ; psi4.core.print_variables(); energy = psi4.variable(""SCF TOTAL ENERGY""); psi4.core.clean(); jobtime = time.time() - start; results = {; ""time"": float(jobtime),; ""energy"": energy,; ""gradient"": grad; }. with open(name + "".json"", ""w"") as fout:; json.dump(results, fout, indent=4). print(""Job %s completed in %.2f seconds with energy %.10f"" % (base, jobtime, energy)). def main(args):; assert args[1].endswith("".xyz""); psi4.set_num_threads(1); run_fxyz(args[1]). if __name__ == '__main__':; main(sys.argv); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2548#issuecomment-1100260046:1594,assert,assert,1594,https://psicode.org,https://github.com/psi4/psi4/issues/2548#issuecomment-1100260046,1,['assert'],['assert']
Testability,"Sure, here they are. > On Nov 18, 2015, at 2:31 PM, Ugur Bozkaya notifications@github.com wrote:; > ; > Hi Lori,; > ; > I can not reproduce failings on my computers. Could you send me output files for the failed tests so that I see what is gong wrong?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/psi4/psi4public/issues/190#issuecomment-157834251.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/190#issuecomment-157838070:212,test,tests,212,https://psicode.org,https://github.com/psi4/psi4/issues/190#issuecomment-157838070,1,['test'],['tests']
Testability,"Sure, sounds good. ; - OK with moving to qcengine (sorry about that; I didn't want to touch multiple repos at the same time, hence the `## hack ##`).; - That github repo is where postg development occurs, yes. PRs and requests for features are welcome.; - OK with changing the logic in any way that is more appropriate. Let me know and I can make an attempt.; - Never used conda. I'm OK with making a postg package, though, but I'll probably need some guidance.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1699#issuecomment-521307048:277,log,logic,277,https://psicode.org,https://github.com/psi4/psi4/pull/1699#issuecomment-521307048,1,['log'],['logic']
Testability,"Sure, will do. Thanks for the feedback !!. On Tue, Dec 13, 2016 at 1:55 PM, Lori A. Burns <notifications@github.com>; wrote:. > *@loriab* commented on this pull request.; > ------------------------------; >; > In psi4/driver/procedures/proc.py; > <https://github.com/psi4/psi4/pull/547#pullrequestreview-12747170>:; >; > > @@ -870,7 +870,7 @@ def select_ccsd_t__gradient(name, **kwargs):; > # Considering only ccenergy; >; > func = None; > - if reference == 'UHF':; > + if reference == 'RHF' or reference == 'UHF':; >; > if reference in ['RHF', 'UHF']:; > ------------------------------; >; > In tests/cc13b/input.dat; > <https://github.com/psi4/psi4/pull/547#pullrequestreview-12747170>:; >; > > +}; > +; > +set {; > + reference rhf; > + basis cc-pvdz; > + r_convergence 13; > + e_convergence 13; > + d_convergence 13; > +}; > +; > +analytic, wfn = gradient('ccsd(t)', return_wfn=True); > +; > +set findif points 5; > +fin_diff, wfn = gradient('ccsd(t)', dertype=0, return_wfn=True); > +; > +compare_matrices(analytic, fin_diff, 10, ""RHF-CCSD(T) gradient test"") #TEST; >; > Concur with @amjames <https://github.com/amjames> that it would be good; > to have a quick rhf-ccsd(t) grad in quicktests. In the cfour tests, you'll; > find some gradients; > <https://github.com/psi4/psi4/blob/master/tests/cfour/opt-rhf-ccsd_t_/output.ref#L1024-L1034>; > if you'd like to compare with that.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/psi4/psi4/pull/547#pullrequestreview-12747170>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AFIK8FiN7uGia0qIAoxKEjtzNtRE1cv9ks5rHuoTgaJpZM4LMEuA>; > .; >",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/547#issuecomment-266828985:596,test,tests,596,https://psicode.org,https://github.com/psi4/psi4/pull/547#issuecomment-266828985,5,"['TEST', 'test']","['TEST', 'test', 'tests']"
Testability,"Sure. Those two are usually the same– for curiosity, is your setup where you're not passing `setup --python=sldfjsl` to the psi4 build?. Will merge after the travis build, unless you're trying to test it right away, in which case I'm glad to accept immediately, since that line can't hurt anything.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/378#issuecomment-218798873:196,test,test,196,https://psicode.org,https://github.com/psi4/psi4/pull/378#issuecomment-218798873,1,['test'],['test']
Testability,Switches from Unix Makefiles to Ninja. The Kitware-maintained version of Ninja is required to have Fortran support: https://github.com/Kitware/ninja. There is not that large of a speedup. ## Checklist; - [ ] Tests added for any new features; - [x] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [x] Ready for review; - [x] Ready for merge,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1748:208,Test,Tests,208,https://psicode.org,https://github.com/psi4/psi4/pull/1748,3,"['Test', 'test']","['Tests', 'tests']"
Testability,"Symmetry affects the rotational_symmetry_number in thermochem. But you're right, on second thought the way for users to influence the rsn is [via option](https://github.com/loriab/psi4/blob/pyvib2/tests/freq-isotope2/input.dat#L77) not Molecule symmetry.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/875#issuecomment-349531240:197,test,tests,197,https://psicode.org,https://github.com/psi4/psi4/issues/875#issuecomment-349531240,1,['test'],['tests']
Testability,"T T T T T T T T T --> False; Traceback (most recent call last):; File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1468, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise ValidationError(err); qcelemental.exceptions.ValidationError: Inconsistent or unspecified chg/mult: sys chg: 0.0, frag chg: [0.0, 0.0], sys mult: 1, frag mult: [1, 1]. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""tests/python/databases/input.py"", line 10, in <module>; psi4.wrapper_database.database('scf', 'O24by5mb', cp=0, subset=[""4-0.9"", ""12-0.9"", ""20-0.9"", ""23-0.9""]); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/wrapper_database.py"", line 452, in database; molecule = core.Molecule.from_dict(GEOS[rgt].to_dict()); File ""/home/filip/software/psi4-1.4rc-opt/lib/psi4/driver/qcdb/molecule.py"", line 1477, in to_dict; validated_molrec = qcel.molparse.from_arrays(speclabel=False, verbose=0, domain='qm', **molrec); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/from_arrays.py"", line 381, in from_arrays; verbose=verbose); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 485, in validate_and_fill_chgmult; c_final, fc_final, m_final, fm_final = reconcile(cgmp_exact_c, cgmp_exact_fc, cgmp_exact_m, cgmp_exact_fm); File ""/home/filip/software/psi4-1.4rc-opt/lib/qcelemental/molparse/chgmult.py"", line 475, in reconcile; raise Validatio",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765:2374,test,tests,2374,https://psicode.org,https://github.com/psi4/psi4/pull/2154#issuecomment-882794765,1,['test'],['tests']
Testability,"TD-SCF seems to work as well, I'm going to add some tests for PE...",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2006#issuecomment-692848126:52,test,tests,52,https://psicode.org,https://github.com/psi4/psi4/pull/2006#issuecomment-692848126,1,['test'],['tests']
Testability,"TECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp=libomp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Could NOT find OpenMP (missing: OpenMP_C_FLAGS OpenMP_CXX_FLAGS) ; -- No Doxygen, no docs.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/768#issuecomment-316450754:5392,Test,Test,5392,https://psicode.org,https://github.com/psi4/psi4/issues/768#issuecomment-316450754,14,['Test'],['Test']
Testability,"TEST. for key in fkeys: #TEST; compare_values(fEref[key], fEnergies[key], 2, key) #TEST; ```. ```; (py39b) psilocaluser@bash:psinet:/psi/gits/hrw-l2/objdir39b: (sept21qcdb_rb1) stage/bin/psi4 ../tests/fsapt-ext-abc-au/input.dat ; Enuc..................................................................................PASSED; Eelst.................................................................................PASSED; Eexch.................................................................................PASSED; Eind..................................................................................PASSED; Edisp.................................................................................PASSED; Etot..................................................................................PASSED; fEelst................................................................................FAILED; Traceback (most recent call last):; File ""/psi/gits/hrw-l2/objdir39b/stage/bin/psi4"", line 333, in <module>; exec(content); File ""<string>"", line 101, in <module>; File ""/psi/gits/hrw-l2/objdir39b/stage/lib/psi4/driver/qcdb/testing.py"", line 104, in _mergedapis_compare_values; return qcel.testing.compare_values(expected, computed, **kwargs); File ""/psi/gits/QCElemental/qcelemental/testing.py"", line 178, in compare_values; return return_handler(allclose, label, message, return_message, quiet); File ""/psi/gits/hrw-l2/objdir39b/stage/lib/psi4/driver/p4util/testing.py"", line 189, in _psi4_true_raise_handler; raise TestComparisonError(message). psi4.driver.p4util.exceptions.TestComparisonError: 	fEelst: computed value (-58.7150) does not match (-30.8670) to atol=0.01 by difference (-27.8480). ```. ```; (py39b) psilocaluser@bash:psinet:/psi/gits/hrw-l2/objdir39b: (sept21qcdb_rb1) diff -bwy -W 200 tests/fsapt-ext-abc/fsapt/fsapt.dat tests/fsapt-ext-abc-au/fsapt/fsapt.dat ; ==> F-ISAPT: Links by Charge <==									 ==> F-ISAPT: Links by Charge <==. => Full Analysis <=											 => Full Analysis <=. Fra",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2330:6629,test,testing,6629,https://psicode.org,https://github.com/psi4/psi4/issues/2330,1,['test'],['testing']
Testability,"TEST; ""CURRENT ENERGY"": 0.01122234} #TEST. Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26658499, #TEST; ""CURRENT ENERGY"": -0.01126250} #TEST. Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; ""SAPT EXCH ENERGY"": 0.36569812, #TEST; ""SAPT IND ENERGY"": -0.00840370, #TEST; ""SAPT DISP ENERGY"": -0.26605283, #TEST; ""CURRENT ENERGY"": -0.01073034} #TEST. molecule dimer {; Ne; --; Ar 1 6.5; units bohr; }. set {; basis aug-cc-pvdz; scf_type df; sapt_dft_grac_shift_a 0.203293; sapt_dft_grac_shift_b 0.138264; }. # No hybrid kernel & no exch-disp scaling & no deltaHF; set SAPT_DFT_DO_DHF False; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; ref = (v - DHF) / 1000.0; else:; ref = v / 1000.0; compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST. # No hybrid kernel & no exch-disp scaling; set SAPT_DFT_DO_DHF True; set SAPT_DFT_DO_HYBRID False; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; energy('sapt(dft)', molecule=dimer); for k, v in Eref_nh.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (DISP); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_disp.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST. # Hybrid kernel & exch-disp scaling (FIXED); set SAPT_DFT_DO_HYBRID True; set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; energy('sapt(dft)', molecule=dimer); for k, v in Eref_h_fixed.items(): #TEST; compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=fixed, dHF: "" + k) #TEST. ```; * I think it should be clear from the output file what exch-disp scheme/scale",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216:2202,TEST,TEST,2202,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1283510216,1,['TEST'],['TEST']
Testability,"TEST; > ""SAPT DISP ENERGY"": -0.24398704, #TEST; > ""CURRENT ENERGY"": 0.01122234} #TEST; > ; > Eref_h_disp = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26658499, #TEST; > ""CURRENT ENERGY"": -0.01126250} #TEST; > ; > Eref_h_fixed = {""SAPT ELST ENERGY"": -0.10197193, #TEST; > ""SAPT EXCH ENERGY"": 0.36569812, #TEST; > ""SAPT IND ENERGY"": -0.00840370, #TEST; > ""SAPT DISP ENERGY"": -0.26605283, #TEST; > ""CURRENT ENERGY"": -0.01073034} #TEST; > ; > molecule dimer {; > Ne; > --; > Ar 1 6.5; > units bohr; > }; > ; > set {; > basis aug-cc-pvdz; > scf_type df; > sapt_dft_grac_shift_a 0.203293; > sapt_dft_grac_shift_b 0.138264; > }; > ; > # No hybrid kernel & no exch-disp scaling & no deltaHF; > set SAPT_DFT_DO_DHF False; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > if k in [""SAPT IND ENERGY"", ""CURRENT ENERGY""]:; > ref = (v - DHF) / 1000.0; > else:; > ref = v / 1000.0; > compare_values(ref, psi4.variable(k), 6, ""!hyb, xd=none, !dHF: "" + k) #TEST; > ; > # No hybrid kernel & no exch-disp scaling; > set SAPT_DFT_DO_DHF True; > set SAPT_DFT_DO_HYBRID False; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME none; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_nh.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""!hyb, xd=none, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (DISP); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME disp; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_disp.items(): #TEST; > compare_values(v / 1000.0, psi4.variable(k), 6, ""hyb, xd=disp, dHF: "" + k) #TEST; > ; > # Hybrid kernel & exch-disp scaling (FIXED); > set SAPT_DFT_DO_HYBRID True; > set SAPT_DFT_EXCH_DISP_SCALE_SCHEME fixed ; > set SAPT_DFT_EXCH_DISP_FIXED_SCALE 0.770; > energy('sapt(dft)', molecule=dimer); > for k, v in Eref_h_fixed.i",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967:2144,TEST,TEST,2144,https://psicode.org,https://github.com/psi4/psi4/pull/2481#issuecomment-1284653967,1,['TEST'],['TEST']
Testability,Taking the Krypton dimer at 3 angstroms with the def2-QZVP basis we get:. ```; SCF Energy difference: 7.1e-10 [hartree]; AO potential norm: 2.1e-8; AO max diff: 5.1e-9. AO ERI norm: 4.6e-8; AO ERI max diff: 2.0e-9; ```. Kr is nice and heavy with up to G functions. We could test something like aug-cc-pVDZ-RI for H and I functions.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/592#issuecomment-277770423:274,test,test,274,https://psicode.org,https://github.com/psi4/psi4/pull/592#issuecomment-277770423,1,['test'],['test']
Testability,Tarballs downloaded from GitHub are not git repositories. We use them in FreeBSD ports.; Nothing important should be hard-wired to Git during build/tests.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687#issuecomment-1358102176:148,test,tests,148,https://psicode.org,https://github.com/psi4/psi4/issues/2687#issuecomment-1358102176,1,['test'],['tests']
Testability,Target is 1.5 yes. A lot needs to done and tested and I am not pursuing it full time.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2076#issuecomment-758499682:43,test,tested,43,https://psicode.org,https://github.com/psi4/psi4/pull/2076#issuecomment-758499682,1,['test'],['tested']
Testability,Temporarily disable adcc in tests,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1848:28,test,tests,28,https://psicode.org,https://github.com/psi4/psi4/pull/1848,1,['test'],['tests']
Testability,Test #102: decontract ....................... Passed 2.16 sec; Start 103: dcft-grad1; 100/411 Test #84: cdomp2-2 ......................... Passed 73.49 sec; Start 104: dcft-grad2; 101/411 Test #82: cc9a ............................. Passed 85.12 sec; Start 105: dcft-grad3; 102/411 Test #101: cubeprop ......................... Passed 11.74 sec; Start 106: dcft-grad4; 103/411 Test #278: opt13 ............................ Passed 771.06 sec; Start 107: dcft1; 104/411 Test #70: cc52 ............................. Passed 152.70 sec; Start 108: dcft2; 105/411 Test #92: ci-multi ......................... Passed 65.79 sec; Start 109: dcft3; 106/411 Test #105: dcft-grad3 ....................... Passed 25.56 sec; Start 110: dcft4; 107/411 Test #108: dcft2 ............................ Passed 4.23 sec; Start 111: dcft5; 108/411 Test #109: dcft3 ............................ Passed 9.99 sec; Start 112: dcft6; 109/411 Test #106: dcft-grad4 ....................... Passed 40.26 sec; Start 114: dcft8; 110/411 Test #100: ci-property ...................... Passed 66.32 sec; Start 115: dcft9; 111/411 Test #107: dcft1 ............................ Passed 37.39 sec; Start 116: ao-dfcasscf-sp; 112/411 Test #116: ao-dfcasscf-sp ................... Passed 2.03 sec; Start 117: dfcasscf-sa-sp; 113/411 Test #117: dfcasscf-sa-sp ................... Passed 4.39 sec; Start 118: dfcasscf-fzc-sp; 114/411 Test #118: dfcasscf-fzc-sp .................. Passed 3.26 sec; Start 119: dfcasscf-sp; 115/411 Test #119: dfcasscf-sp ...................... Passed 5.68 sec; Start 120: dfccd1; 116/411 Test #91: cepa-module ...................... Passed 111.91 sec; Start 121: dfccdl1; 117/411 Test #104: dcft-grad2 ....................... Passed 68.01 sec; Start 122: dfccd-grad1; 118/411 Test #120: dfccd1 ........................... Passed 1.99 sec; Start 123: dfccsd1; 119/411 Test #121: dfccdl1 .......................... Passed 2.32 sec; Start 124: dfccsdl1; 120/411 Test #123: dfccsd1 .......................... Passed ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:10137,Test,Test,10137,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,Test #103: dcft-grad1 ....................... Passed 868.18 sec; Start 111: dcft5; 40/411 Test #306: pywrap-checkrun-uhf .............. Passed 553.42 sec; Start 159: dft-grad-meta; 41/411 Test #240: ocepa-freq1 ...................... Passed 481.84 sec; Start 70: cc52; 42/411 Test #178: fsapt1 ........................... Passed 2085.16 sec; Start 305: pywrap-checkrun-rohf; 43/411 Test #159: dft-grad-meta .................... Passed 50.23 sec; Start 297: pubchem1; 44/411 Test #39: cc24 ............................. Passed 399.92 sec; Start 35: cc2; 45/411 Test #297: pubchem1 ......................... Passed 51.77 sec; Start 75: cc6; 46/411 Test #70: cc52 ............................. Passed 130.41 sec; Start 389: python-pubchem; 47/411 Test #75: cc6 .............................. Passed 86.65 sec; Start 41: cc26; 48/411 Test #389: python-pubchem ................... Passed 53.08 sec; Start 61: cc44; 49/411 Test #111: dcft5 ............................ Passed 256.36 sec; Start 170: dft1-alt; 50/411 Test #61: cc44 ............................. Passed 68.38 sec; Start 100: ci-property; 51/411 Test #170: dft1-alt ......................... Passed 47.95 sec; Start 2: adc2; 52/411 Test #2: adc2 ............................. Passed 41.32 sec; Start 230: mp2-module; 53/411 Test #100: ci-property ...................... Passed 53.35 sec; Start 219: mints-benchmark; 54/411 Test #305: pywrap-checkrun-rohf ............. Passed 328.05 sec; Start 348: sapt-compare; 55/411 Test #219: mints-benchmark .................. Passed 40.12 sec; Start 38: cc23; 56/411 Test #348: sapt-compare ..................... Passed 43.18 sec; Start 131: dfmp2-3; 57/411 Test #230: mp2-module ....................... Passed 79.66 sec; Start 40: cc25; 58/411 Test #145: dfomp2-grad3 ..................... Passed 526.80 sec; Start 19: cbs-xtpl-wrapper; 59/411 Test #131: dfmp2-3 .......................... Passed 40.26 sec; Start 307: pywrap-db1; 60/411 Test #35: cc2 .............................. Passed 327.30 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:4888,Test,Test,4888,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Test #104: cubeprop-frontier ................ Passed 4.64 sec; Start 108: dcft-grad3; 219/415 Test #92: cepa1 ............................ Passed 38.25 sec; Start 109: dcft-grad4; 220/415 Test #83: cc9 .............................. Passed 109.04 sec; Start 111: dcft2; 221/415 Test #108: dcft-grad3 ....................... Passed 26.75 sec; Start 113: dcft4; 222/415 Test #84: cc9a ............................. Passed 107.29 sec; Start 114: dcft5; 223/415 Test #109: dcft-grad4 ....................... Passed 36.11 sec; Start 115: dcft6; 224/415 Test #111: dcft2 ............................ Passed 28.90 sec; Start 117: dcft8; 225/415 Test #43: cc26 ............................. Passed 867.28 sec; Start 118: dcft9; 226/415 Test #41: cc24 ............................. Passed 919.62 sec; Start 124: dfccdl1; 227/415 Test #124: dfccdl1 .......................... Passed 4.85 sec; Start 125: dfccd-grad1; 228/415 Test #125: dfccd-grad1 ...................... Passed 29.83 sec; Start 130: dfccsdt1; 229/415 Test #130: dfccsdt1 ......................... Passed 14.17 sec; Start 131: dfccsdat1; 230/415 Test #99: cisd-opt-fd ...................... Passed 118.26 sec; Start 133: dfmp2-2; 231/415 Test #133: dfmp2-2 .......................... Passed 4.49 sec; Start 134: dfmp2-3; 232/415 Test #44: cc27 ............................. Passed 850.53 sec; Start 135: dfmp2-4; 233/415 Test #134: dfmp2-3 .......................... Passed 17.06 sec; Start 138: dfmp2-grad2; 234/415 Test #135: dfmp2-4 .......................... Passed 16.06 sec; Start 139: dfmp2-grad3; 235/415 Test #131: dfccsdat1 ........................ Passed 43.70 sec; Start 140: dfmp2-grad4; 236/415 Test #139: dfmp2-grad3 ...................... Passed 14.29 sec; Start 141: dfmp2-grad5; 237/415 Test #138: dfmp2-grad2 ...................... Passed 22.26 sec; Start 143: dfomp2-2; 238/415 Test #140: dfmp2-grad4 ...................... Passed 19.10 sec; Start 144: dfomp2-3; 239/415 Test #40: cc23 ............................. Passed 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:21490,Test,Test,21490,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #104: dcft-grad2 ....................... Passed 27.58 sec; Start 105: dcft-grad3; 117/411 Test #105: dcft-grad3 ....................... Passed 17.50 sec; Start 106: dcft-grad4; 118/411 Test #106: dcft-grad4 ....................... Passed 32.11 sec; Start 107: dcft1; 119/411 Test #107: dcft1 ............................ Passed 19.13 sec; Start 108: dcft2; 120/411 Test #108: dcft2 ............................ Passed 3.76 sec; Start 109: dcft3; 121/411 Test #109: dcft3 ............................ Passed 8.94 sec; Start 110: dcft4; 122/411 Test #110: dcft4 ............................ Passed 90.18 sec; Start 111: dcft5; 123/411 Test #111: dcft5 ............................ Passed 91.88 sec; Start 112: dcft6; 124/411 Test #112: dcft6 ............................ Passed 113.93 sec; Start 114: dcft8; 125/411 Test #114: dcft8 ............................ Passed 23.39 sec; Start 115: dcft9; 126/411 Test #115: dcft9 ............................ Passed 13.46 sec; Start 116: ao-dfcasscf-sp; 127/411 Test #116: ao-dfcasscf-sp ................... Passed 2.46 sec; Start 117: dfcasscf-sa-sp; 128/411 Test #117: dfcasscf-sa-sp ................... Passed 4.12 sec; Start 118: dfcasscf-fzc-sp; 129/411 Test #118: dfcasscf-fzc-sp .................. Passed 1.70 sec; Start 119: dfcasscf-sp; 130/411 Test #119: dfcasscf-sp ...................... Passed 1.91 sec; Start 120: dfccd1; 131/411 Test #120: dfccd1 ........................... Passed 1.41 sec; Start 121: dfccdl1; 132/411 Test #121: dfccdl1 .......................... Passed 1.38 sec; Start 122: dfccd-grad1; 133/411 Test #122: dfccd-grad1 ...................... Passed 2.48 sec; Start 123: dfccsd1; 134/411 Test #123: dfccsd1 .......................... Passed 1.91 sec; Start 124: dfccsdl1; 135/411 Test #124: dfccsdl1 ......................... Passed 1.60 sec; Start 125: dfccsd-grad1; 136/411 Test #125: dfccsd-grad1 ..................... Passed 5.09 sec; Start 126: dfccsd-t-grad1; 137/411 Test #126: dfccsd-t-grad1 ................... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:11341,Test,Test,11341,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #106: dcft-grad4 ....................... Passed 50.01 sec; Start 34: cc19; 108/411 Test #115: dcft9 ............................ Passed 162.48 sec; Start 129: dfmp2-1; 109/411 Test #144: dfomp2-grad2 ..................... Passed 141.78 sec; Start 68: cc50; 110/411 Test #206: ghosts ........................... Passed 32.82 sec; Start 92: ci-multi; 111/411 Test #129: dfmp2-1 .......................... Passed 34.89 sec; Start 125: dfccsd-grad1; 112/411 Test #263: omp3-grad2 ....................... Passed 134.72 sec; Start 392: python-cc54; 113/411 Test #260: omp3-4 ........................... Passed 151.34 sec; Start 33: cc18; 114/411 Test #84: cdomp2-2 ......................... Passed 63.42 sec; Start 342: soscf-dft; 115/411 Test #46: cc30 ............................. Passed 125.06 sec; Start 249: omp2-4; 116/411 Test #244: ocepa2 ........................... Passed 125.60 sec; Start 32: cc17; 117/411 Test #57: cc40 ............................. Passed 136.25 sec; Start 337: scf6; 118/411 Test #92: ci-multi ......................... Passed 54.72 sec; Start 153: dfomp2p5-grad2; 119/411 Test #34: cc19 ............................. Passed 89.17 sec; Start 65: cc48; 120/411 Test #342: soscf-dft ........................ Passed 39.52 sec; Start 374: dft-custom-gga; 121/411 Test #250: omp2-5 ........................... Passed 133.26 sec; Start 274: opt8; 122/411 Test #27: cc13c ............................ Passed 210.88 sec; Start 16: cbs-xtpl-gradient; 123/411 Test #261: omp3-5 ........................... Passed 183.90 sec; Start 256: omp2p5-grad2; 124/411 Test #125: dfccsd-grad1 ..................... Passed 68.53 sec; Start 202: fnocc4; 125/411 Test #68: cc50 ............................. Passed 86.48 sec; Start 7: casscf-sp; 126/411 Test #33: cc18 ............................. Passed 66.37 sec; Start 326: scf-ecp; 127/411 Test #32: cc17 ............................. Passed 65.50 sec; Start 264: opt-lindep-change; 128/411 Test #374: dft-custom-gga ................... P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:11216,Test,Test,11216,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #106: dcft-grad4 ....................... Passed 51.14 sec; Start 264: opt-lindep-change; 83/411 Test #11: cbs-delta-energy ................. Passed 899.20 sec; Start 379: cc-module; 84/411 Test #264: opt-lindep-change ................ Passed 29.96 sec; Start 336: scf5; 85/411 Test #259: omp3-3 ........................... Passed 267.38 sec; Start 156: dft-b2plyp; 86/411 Test #156: dft-b2plyp ....................... Passed 26.81 sec; Start 326: scf-ecp; 87/411 Test #336: scf5 ............................. Passed 69.66 sec; Start 375: pywrap-bfs; 88/411 Test #43: cc28 ............................. Passed 255.15 sec; Start 173: dft-omega; 89/411 Test #375: pywrap-bfs ....................... Passed 23.72 sec; Start 274: opt8; 90/411 Test #326: scf-ecp .......................... Passed 48.97 sec; Start 1: adc1; 91/411 Test #173: dft-omega ........................ Passed 32.87 sec; Start 24: cc13; 92/411 Test #1: adc1 ............................. Passed 32.13 sec; Start 166: dft-psivar; 93/411 Test #166: dft-psivar ....................... Passed 35.03 sec; Start 337: scf6; 94/411 Test #274: opt8 ............................. Passed 108.86 sec; Start 346: sapt-dft1; 95/411 Test #42: cc27 ............................. Passed 1418.94 sec; Start 114: dcft8; 96/411 Test #346: sapt-dft1 ........................ Passed 28.85 sec; Start 358: tu5-sapt; 97/411 Test #358: tu5-sapt ......................... Passed 24.75 sec; Start 244: ocepa2; 98/411 Test #337: scf6 ............................. Passed 100.15 sec; Start 189: fci-tdm-2; 99/411 Test #189: fci-tdm-2 ........................ Passed 22.07 sec; Start 163: dft-freq; 100/411 Test #163: dft-freq ......................... Passed 31.36 sec; Start 386: cookbook-rohf-orb-rot; 101/411 Test #244: ocepa2 ........................... Passed 300.24 sec; Start 322: sapt-dft-lrc; 102/411 Test #322: sapt-dft-lrc ..................... Passed 22.07 sec; Start 172: dft3; 103/411 Test #172: dft3 ............................. Passed 41.52 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:8824,Test,Test,8824,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Test #109: dcft3 ............................ Passed 25.22 sec; Start 12: cbs-parser; 139/411 Test #65: cc48 ............................. Passed 77.89 sec; Start 166: dft-psivar; 140/411 Test #156: dft-b2plyp ....................... Passed 25.02 sec; Start 126: dfccsd-t-grad1; 141/411 Test #1: adc1 ............................. Passed 25.46 sec; Start 73: cc55; 142/411 Test #207: gibbs ............................ Passed 24.19 sec; Start 67: cc4a; 143/411 Test #173: dft-omega ........................ Passed 24.73 sec; Start 245: ocepa3; 144/411 Test #256: omp2p5-grad2 ..................... Passed 76.39 sec; Start 64: cc47; 145/411 Test #196: fd-gradient ...................... Passed 35.40 sec; Start 346: sapt-dft1; 146/411 Test #375: pywrap-bfs ....................... Passed 24.62 sec; Start 151: dfomp2p5-2; 147/411 Test #153: dfomp2p5-grad2 ................... Passed 104.20 sec; Start 55: cc39; 148/411 Test #166: dft-psivar ....................... Passed 26.30 sec; Start 81: cc9; 149/411 Test #379: cc-module ........................ Passed 496.63 sec; Start 63: cc46; 150/411 Test #82: cc9a ............................. Passed 60.15 sec; Start 313: rasscf-sp; 151/411 Test #59: cc42 ............................. Passed 65.17 sec; Start 189: fci-tdm-2; 152/411 Test #346: sapt-dft1 ........................ Passed 24.50 sec; Start 71: cc53; 153/411 Test #126: dfccsd-t-grad1 ................... Passed 46.35 sec; Start 79: cc8b; 154/411 Test #147: dfomp3-2 ......................... Passed 68.44 sec; Start 163: dft-freq; 155/411 Test #189: fci-tdm-2 ........................ Passed 23.01 sec; Start 78: cc8a; 156/411 Test #67: cc4a ............................. Passed 53.77 sec; Start 358: tu5-sapt; 157/411 Test #73: cc55 ............................. Passed 57.71 sec; Start 172: dft3; 158/411 Test #245: ocepa3 ........................... Passed 57.53 sec; Start 140: dfomp2-2; 159/411 Test #163: dft-freq ......................... Passed 23.58 sec; Start 322: sapt-dft-lrc; 16,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:14082,Test,Test,14082,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #111: dcft4 ............................ Passed 2308.00 sec; Start 47: cc30; 36/412 Test #59: cc41 ............................. Passed 130.64 sec; Start 303: pywrap-cbs1; 37/412 Test #196: fd-freq-gradient-large ........... Passed 333.01 sec; Start 348: sapt-dft2; 38/412 Test #48: cc31 ............................. Passed 158.36 sec; Start 75: cc5a; 39/412 Test #61: cc43 ............................. Passed 139.30 sec; Start 184: isapt2; 40/412 Test #11: cbs-delta-energy ................. Passed 466.92 sec; Start 92: cepa-module; 41/412 Test #98: cisd-opt-fd ...................... Passed 166.82 sec; Start 155: dft-grad-lr2; 42/412 Test #321: sapt6 ............................ Passed 177.06 sec; Start 169: dft1; 43/412 Test #374: dft-custom-mgga .................. Passed 196.38 sec; Start 26: cc13a; 44/412 Test #47: cc30 ............................. Passed 82.76 sec; Start 114: dcft7; 45/412 Test #159: dfscf-bz2 ........................ Passed 150.09 sec; Start 206: frac-traverse; 46/412 Test #105: dcft-grad2 ....................... Passed 127.51 sec; Start 317: sapt2; 47/412 Test #75: cc5a ............................. Passed 90.07 sec; Start 319: sapt4; 48/412 Test #303: pywrap-cbs1 ...................... Passed 101.68 sec; Start 326: scf-bz2; 49/412 Test #92: cepa-module ...................... Passed 93.25 sec; Start 372: dft-custom-dhdf; 50/412 Test #169: dft1 ............................. Passed 117.29 sec; Start 260: omp3-3; 51/412 Test #348: sapt-dft2 ........................ Passed 139.68 sec; Start 281: opt-irc-1; 52/412 Test #155: dft-grad-lr2 ..................... Passed 121.55 sec; Start 27: cc13b; 53/412 Test #184: isapt2 ........................... Passed 134.41 sec; Start 145: dfomp2-grad2; 54/412 Test #27: cc13b ............................ Passed 69.13 sec; Start 280: opt14; 55/412 Test #194: fd-freq-energy-large ............. Passed 573.09 sec; Start 231: mp2-module; 56/412 Test #145: dfomp2-grad2 ..................... Passed 68.95 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:4655,Test,Test,4655,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Test #113: dcft7 ............................ Passed 326.30 sec; Start 3: casscf-fzc-sp; 10/411 Test #3: casscf-fzc-sp .................... Passed 13.41 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 9.02 sec; Start 5: casscf-sa-sp; 12/411 Test #325: scf-bz2 .......................... Passed 127.53 sec; Start 6: ao-casscf-sp; 13/411 Test #2: adc2 ............................. Passed 44.92 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 6.87 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.39 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 19.18 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 9.54 sec; Start 11: cbs-delta-energy; 18/411 Test #10: castup3 .......................... Passed 18.56 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ........................ Passed 28.77 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #394: python-vibanalysis ............... Passed 875.05 sec; Start 14: cbs-xtpl-energy; 21/411 Test #14: cbs-xtpl-energy .................. Passed 13.09 sec; Start 15: cbs-xtpl-freq; 22/411 Test #15: cbs-xtpl-freq .................... Passed 12.78 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #278: opt13 ............................ Passed 926.59 sec; Start 17: cbs-xtpl-opt; 24/411 Test #16: cbs-xtpl-gradient ................ Passed 41.42 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #316: sapt2 ............................ Passed 364.06 sec; Start 20: cc1; 26/411 Test #12: cbs-parser ....................... Passed 96.67 sec; Start 21: cc10; 27/411 Test #21: cc10 ............................. Passed 41.74 sec; Start 22: cc11; 28/411 Test #19: cbs-xtpl-wrapper ................. Passed 87.45 sec; Start 23: cc12; 29/411 Test #17: cbs-xtpl-opt ..................... Passed 124.67 sec; Start 24: cc13; 30/411 Test #23: cc12 ............................. Passed 40.19 sec; Start 26: cc1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:2055,Test,Test,2055,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Test #113: dcft7 ............................ Passed 384.47 sec; Start 162: dft-grad-meta; 121/411 Test #84: cdomp2-2 ......................... Passed 50.72 sec; Start 237: nbody-he-cluster; 122/411 Test #297: pubchem1 ......................... Passed 59.76 sec; Start 170: dft1-alt; 123/411 Test #100: ci-property ...................... Passed 58.63 sec; Start 72: cc54; 124/411 Test #148: dfomp3-grad1 ..................... Passed 39.18 sec; Start 22: cc11; 125/411 Test #12: cbs-parser ....................... Passed 66.53 sec; Start 51: cc35; 126/411 Test #126: dfccsd-t-grad1 ................... Passed 49.75 sec; Start 62: cc45; 127/411 Test #21: cc10 ............................. Passed 61.98 sec; Start 348: sapt-compare; 128/411 Test #54: cc38 ............................. Passed 49.31 sec; Start 245: ocepa3; 129/411 Test #80: cc8c ............................. Passed 66.72 sec; Start 49: cc33; 130/411 Test #125: dfccsd-grad1 ..................... Passed 58.61 sec; Start 299: pywrap-alias; 131/411 Test #72: cc54 ............................. Passed 35.14 sec; Start 37: cc22; 132/411 Test #62: cc45 ............................. Passed 27.12 sec; Start 23: cc12; 133/411 Test #276: opt11 ............................ Passed 62.61 sec; Start 150: dfomp2p5-1; 134/411 Test #162: dft-grad-meta .................... Passed 49.92 sec; Start 92: ci-multi; 135/411 Test #51: cc35 ............................. Passed 44.56 sec; Start 273: opt7; 136/411 Test #170: dft1-alt ......................... Passed 53.15 sec; Start 152: dfomp2p5-grad1; 137/411 Test #22: cc11 ............................. Passed 47.56 sec; Start 219: mints-benchmark; 138/411 Test #237: nbody-he-cluster ................. Passed 58.00 sec; Start 2: adc2; 139/411 Test #25: cc13a ............................ Passed 484.89 sec; Start 131: dfmp2-3; 140/411 Test #348: sapt-compare ..................... Passed 47.43 sec; Start 50: cc34; 141/411 Test #49: cc33 ............................. Passed 43.67 sec; Start 106: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:12363,Test,Test,12363,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['Test'],['Test']
Testability,Test #114: dcft8 ............................ Passed 264.99 sec; Start 168: dft1; 164/411 Test #153: dfomp2p5-grad2 ................... Passed 54.37 sec; Start 169: dft-vv10; 165/411 Test #164: dft-grad1 ........................ Passed 15.62 sec; Start 170: dft1-alt; 166/411 Test #165: dft-grad2 ........................ Passed 18.02 sec; Start 171: dft2; 167/411 Test #163: dft-freq ......................... Passed 27.17 sec; Start 172: dft3; 168/411 Test #171: dft2 ............................. Passed 4.91 sec; Start 173: dft-omega; 169/411 Test #166: dft-psivar ....................... Passed 23.88 sec; Start 174: docs-bases; 170/411 Test #174: docs-bases ....................... Passed 0.60 sec; Start 175: docs-dft; 171/411 Test #175: docs-dft ......................... Passed 0.81 sec; Start 176: extern1; 172/411 Test #169: dft-vv10 ......................... Passed 17.26 sec; Start 177: extern2; 173/411 Test #159: dft-grad-meta .................... Passed 53.57 sec; Start 179: fsapt2; 174/411 Test #179: fsapt2 ........................... Passed 5.01 sec; Start 180: fsapt-terms; 175/411 Test #172: dft3 ............................. Passed 20.79 sec; Start 183: isapt2; 176/411 Test #176: extern1 .......................... Passed 15.25 sec; Start 184: fci-dipole; 177/411 Test #180: fsapt-terms ...................... Passed 8.95 sec; Start 185: fci-h2o; 178/411 Test #173: dft-omega ........................ Passed 25.66 sec; Start 186: fci-h2o-2; 179/411 Test #177: extern2 .......................... Passed 22.17 sec; Start 187: fci-h2o-fzcv; 180/411 Test #184: fci-dipole ....................... Passed 7.88 sec; Start 188: fci-tdm; 181/411 Test #188: fci-tdm .......................... Passed 1.50 sec; Start 189: fci-tdm-2; 182/411 Test #187: fci-h2o-fzcv ..................... Passed 5.59 sec; Start 190: fci-coverage; 183/411 Test #185: fci-h2o .......................... Passed 6.73 sec; Start 191: fcidump; 184/411 Test #186: fci-h2o-2 ........................ Passed 7.05 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:16200,Test,Test,16200,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Test #116: dcft9 ............................ Passed 25.23 sec; Start 20: cbs-xtpl-wrapper; 73/412 Test #21: cc1 .............................. Passed 21.49 sec; Start 250: omp2-4; 74/412 Test #231: mp2-module ....................... Passed 55.07 sec; Start 19: cbs-xtpl-nbody; 75/412 Test #17: cbs-xtpl-opt ..................... Passed 47.15 sec; Start 251: omp2-5; 76/412 Test #250: omp2-4 ........................... Passed 22.47 sec; Start 205: frac-ip-fitting; 77/412 Test #320: sapt5 ............................ Passed 82.22 sec; Start 168: dft-b3lyp; 78/412 Test #251: omp2-5 ........................... Passed 18.07 sec; Start 62: cc44; 79/412 Test #19: cbs-xtpl-nbody ................... Passed 29.87 sec; Start 28: cc13c; 80/412 Test #20: cbs-xtpl-wrapper ................. Passed 52.36 sec; Start 145: dfomp2-grad2; 81/412 Test #293: psimrcc-fd-freq2 ................. Passed 76.06 sec; Start 31: cc15; 82/412 Test #28: cc13c ............................ Passed 20.22 sec; Start 44: cc28; 83/412 Test #31: cc15 ............................. Passed 30.15 sec; Start 264: omp3-grad2; 84/412 Test #145: dfomp2-grad2 ..................... Passed 33.33 sec; Start 27: cc13b; 85/412 Test #62: cc44 ............................. Passed 57.63 sec; Start 390: python-pubchem; 86/412 Test #205: frac-ip-fitting .................. Passed 71.71 sec; Start 262: omp3-5; 87/412 Test #168: dft-b3lyp ........................ Passed 75.48 sec; Start 245: ocepa2; 88/412 Test #27: cc13b ............................ Passed 23.72 sec; Start 243: ocepa-grad2; 89/412 Test #264: omp3-grad2 ....................... Passed 24.30 sec; Start 257: omp2p5-grad2; 90/412 Test #44: cc28 ............................. Passed 51.88 sec; Start 150: dfomp3-grad2; 91/412 Test #262: omp3-5 ........................... Passed 20.80 sec; Start 298: pubchem1; 92/412 Test #150: dfomp3-grad2 ..................... Passed 30.23 sec; Start 300: pywrap-alias; 93/412 Test #257: omp2p5-grad2 ..................... Passed 31.49 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:7853,Test,Test,7853,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Test #117: dfcasscf-sa-sp ................... Passed 4.15 sec; Start 251: omp2-grad1; 274/411 Test #251: omp2-grad1 ....................... Passed 1.29 sec; Start 339: scf-property; 275/411 Test #86: cepa0-grad2 ...................... Passed 1.91 sec; Start 141: dfomp2-3; 276/411 Test #141: dfomp2-3 ......................... Passed 1.85 sec; Start 370: scf-coverage; 277/411 Test #93: cisd-h2o+-0 ...................... Passed 3.91 sec; Start 99: cisd-sp-2; 278/411 Test #185: fci-h2o .......................... Passed 6.04 sec; Start 171: dft2; 279/411 Test #339: scf-property ..................... Passed 4.12 sec; Start 331: scf1; 280/411 Test #186: fci-h2o-2 ........................ Passed 5.93 sec; Start 179: fsapt2; 281/411 Test #184: fci-dipole ....................... Passed 5.96 sec; Start 108: dcft2; 282/411 Test #370: scf-coverage ..................... Passed 2.67 sec; Start 94: cisd-h2o+-1; 283/411 Test #108: dcft2 ............................ Passed 1.25 sec; Start 246: omp2-1; 284/411 Test #99: cisd-sp-2 ........................ Passed 4.22 sec; Start 95: cisd-h2o+-2; 285/411 Test #246: omp2-1 ........................... Passed 1.31 sec; Start 243: ocepa1; 286/411 Test #331: scf1 ............................. Passed 3.74 sec; Start 376: pywrap-align; 287/411 Test #171: dft2 ............................. Passed 4.47 sec; Start 241: ocepa-grad1; 288/411 Test #94: cisd-h2o+-1 ...................... Passed 4.05 sec; Start 120: dfccd1; 289/411 Test #243: ocepa1 ........................... Passed 1.92 sec; Start 136: dfmp2-grad3; 290/411 Test #179: fsapt2 ........................... Passed 4.94 sec; Start 388: python-curve; 291/411 Test #120: dfccd1 ........................... Passed 1.95 sec; Start 3: casscf-fzc-sp; 292/411 Test #241: ocepa-grad1 ...................... Passed 2.87 sec; Start 257: omp3-1; 293/411 Test #95: cisd-h2o+-2 ...................... Passed 4.13 sec; Start 187: fci-h2o-fzcv; 294/411 Test #376: pywrap-align ..................... Passed 3.29 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:26351,Test,Test,26351,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Test #127: dfccsd-t-grad1 ................... Passed 21.66 sec; Start 63: cc45; 159/412 Test #253: omp2-grad2 ....................... Passed 23.46 sec; Start 52: cc35; 160/412 Test #130: dfmp2-1 .......................... Passed 38.02 sec; Start 51: cc34; 161/412 Test #63: cc45 ............................. Passed 12.62 sec; Start 49: cc32; 162/412 Test #51: cc34 ............................. Passed 13.14 sec; Start 327: scf-ecp; 163/412 Test #375: dft-custom-gga ................... Passed 39.00 sec; Start 149: dfomp3-grad1; 164/412 Test #52: cc35 ............................. Passed 19.98 sec; Start 7: casscf-sp; 165/412 Test #49: cc32 ............................. Passed 11.13 sec; Start 16: cbs-xtpl-gradient; 166/412 Test #343: soscf-dft ........................ Passed 37.42 sec; Start 283: opt-irc-3; 167/412 Test #324: sapt7 ............................ Passed 41.10 sec; Start 314: rasscf-sp; 168/412 Test #149: dfomp3-grad1 ..................... Passed 14.19 sec; Start 50: cc33; 169/412 Test #7: casscf-sp ........................ Passed 17.08 sec; Start 1: adc1; 170/412 Test #327: scf-ecp .......................... Passed 29.95 sec; Start 22: cc10; 171/412 Test #16: cbs-xtpl-gradient ................ Passed 24.07 sec; Start 53: cc36; 172/412 Test #314: rasscf-sp ........................ Passed 15.74 sec; Start 110: dcft3; 173/412 Test #50: cc33 ............................. Passed 20.75 sec; Start 203: fnocc4; 174/412 Test #283: opt-irc-3 ........................ Passed 28.19 sec; Start 265: opt-lindep-change; 175/412 Test #53: cc36 ............................. Passed 22.91 sec; Start 208: gibbs; 176/412 Test #110: dcft3 ............................ Passed 25.84 sec; Start 174: dft-omega; 177/412 Test #22: cc10 ............................. Passed 28.03 sec; Start 248: omp2-2; 178/412 Test #1: adc1 ............................. Passed 39.20 sec; Start 129: dfccsdat1; 179/412 Test #203: fnocc4 ........................... Passed 26.18 sec; Start 202: fnocc3; 180/,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:15710,Test,Test,15710,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Test #128: dfccsd-t-grad1 ................... Passed 69.23 sec; Start 22: cc10; 138/413 Test #53: cc36 ............................. Passed 20.23 sec; Start 23: cc11; 139/413 Test #254: omp2-grad2 ....................... Passed 41.63 sec; Start 54: cc37; 140/413 Test #196: fd-freq-gradient ................. Passed 47.07 sec; Start 12: cbs-parser; 141/413 Test #127: dfccsd-grad1 ..................... Passed 37.30 sec; Start 279: opt12; 142/413 Test #2: adc2 ............................. Passed 37.54 sec; Start 111: dcft3; 143/413 Test #266: opt-lindep-change ................ Passed 28.24 sec; Start 350: sapt-compare; 144/413 Test #318: sapt2 ............................ Passed 331.13 sec; Start 198: fd-gradient; 145/413 Test #221: mints-benchmark .................. Passed 43.57 sec; Start 148: dfomp3-1; 146/413 Test #172: dft1-alt ......................... Passed 55.54 sec; Start 284: opt-irc-3; 147/413 Test #115: dcft7 ............................ Passed 345.49 sec; Start 309: pywrap-db1; 148/413 Test #54: cc37 ............................. Passed 35.93 sec; Start 269: opt2; 149/413 Test #279: opt12 ............................ Passed 26.85 sec; Start 361: tu6-cp-ne2; 150/413 Test #22: cc10 ............................. Passed 51.09 sec; Start 74: cc55; 151/413 Test #23: cc11 ............................. Passed 49.40 sec; Start 338: scf5; 152/413 Test #111: dcft3 ............................ Passed 41.52 sec; Start 325: sapt7; 153/413 Test #350: sapt-compare ..................... Passed 44.69 sec; Start 314: rasci-ne; 154/413 Test #304: pywrap-cbs1 ...................... Passed 169.96 sec; Start 93: ci-multi; 155/413 Test #269: opt2 ............................. Passed 27.77 sec; Start 66: cc48; 156/413 Test #284: opt-irc-3 ........................ Passed 32.58 sec; Start 395: python-3-index-transforms; 157/413 Test #198: fd-gradient ...................... Passed 37.81 sec; Start 339: scf6; 158/413 Test #301: pywrap-alias ..................... Passed 80.45 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:13965,Test,Test,13965,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Test #128: dfccsdat1 ........................ Passed 3.19 sec; Start 315: sapt1; 230/404 Test #124: dfccsdl1 ......................... Passed 3.30 sec; Start 9: castup2; 231/404 Test #7: casscf-sp ........................ Passed 5.72 sec; Start 358: tu5-sapt; 232/404 Test #372: dft-custom-hybrid ................ Passed 8.63 sec; Start 201: fnocc3; 233/404 Test #341: soscf-ref ........................ Passed 5.39 sec; Start 270: opt4; 234/404 Test #164: dft-grad1 ........................ Passed 9.34 sec; Start 290: psimrcc-ccsd_t-4; 235/404 Test #201: fnocc3 ........................... Passed 2.69 sec; Start 132: dfmp2-4; 236/404 Test #9: castup2 .......................... Passed 4.06 sec; Start 165: dft-grad2; 237/404 Test #197: freq-isotope1 .................... Passed 7.54 sec; Start 321: sapt-dft-api; 238/404 Test #315: sapt1 ............................ Passed 7.66 sec; Start 133: dfmp2-ecp; 239/404 Test #219: mints-benchmark .................. Passed 8.79 sec; Start 101: cubeprop; 240/404 Test #132: dfmp2-4 .......................... Passed 4.10 sec; Start 3: casscf-fzc-sp; 241/404 Test #270: opt4 ............................. Passed 7.71 sec; Start 5: casscf-sa-sp; 242/404 Test #358: tu5-sapt ......................... Passed 8.52 sec; Start 192: fd-freq-energy; 243/404 Test #3: casscf-fzc-sp .................... Passed 1.83 sec; Start 370: scf-coverage; 244/404 Test #290: psimrcc-ccsd_t-4 ................. Passed 9.60 sec; Start 135: dfmp2-grad2; 245/404 Test #5: casscf-sa-sp ..................... Passed 3.49 sec; Start 369: dft-jk; 246/404 Test #370: scf-coverage ..................... Passed 3.11 sec; Start 241: ocepa-grad1; 247/404 Test #165: dft-grad2 ........................ Passed 9.14 sec; Start 127: dfccsdt1; 248/404 Test #321: sapt-dft-api ..................... Passed 8.99 sec; Start 226: mp2-1; 249/404 Test #133: dfmp2-ecp ........................ Passed 8.06 sec; Start 285: props2; 250/404 Test #135: dfmp2-grad2 ...................... Passed 1.84 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:22200,Test,Test,22200,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['Test'],['Test']
Testability,Test #137: dfmp2-grad3 ...................... Passed 4.45 sec; Start 94: cisd-h2o+-0; 298/412 Test #86: cepa0-grad1 ...................... Passed 2.91 sec; Start 234: mp3-grad1; 299/412 Test #311: rasci-c2-active .................. Passed 5.93 sec; Start 180: fsapt2; 300/412 Test #135: dfmp2-grad1 ...................... Passed 2.72 sec; Start 95: cisd-h2o+-1; 301/412 Test #96: cisd-h2o+-2 ...................... Passed 5.46 sec; Start 121: dfccd1; 302/412 Test #188: fci-h2o-fzcv ..................... Passed 5.45 sec; Start 232: mp2p5-grad1; 303/412 Test #285: props1 ........................... Passed 3.70 sec; Start 332: scf1; 304/412 Test #117: ao-dfcasscf-sp ................... Passed 2.87 sec; Start 235: mp3-grad2; 305/412 Test #172: dft2 ............................. Passed 5.28 sec; Start 204: frac; 306/412 Test #247: omp2-1 ........................... Passed 3.62 sec; Start 229: mp2-grad1; 307/412 Test #234: mp3-grad1 ........................ Passed 3.09 sec; Start 120: dfcasscf-sp; 308/412 Test #237: mpn-bh ........................... Passed 4.49 sec; Start 266: opt1; 309/412 Test #121: dfccd1 ........................... Passed 2.00 sec; Start 230: mp2-grad2; 310/412 Test #232: mp2p5-grad1 ...................... Passed 1.89 sec; Start 356: tu3-h2o-opt; 311/412 Test #377: pywrap-align ..................... Passed 6.42 sec; Start 226: mom; 312/412 Test #340: scf-property ..................... Passed 4.87 sec; Start 272: opt5; 313/412 Test #235: mp3-grad2 ........................ Passed 2.29 sec; Start 122: dfccdl1; 314/412 Test #94: cisd-h2o+-0 ...................... Passed 4.94 sec; Start 295: psimrcc-sp1; 315/412 Test #180: fsapt2 ........................... Passed 5.12 sec; Start 192: fcidump; 316/412 Test #229: mp2-grad1 ........................ Passed 3.11 sec; Start 400: json-schema-1-energy; 317/412 Test #95: cisd-h2o+-1 ...................... Passed 5.23 sec; Start 378: pywrap-align-chiral; 318/412 Test #204: frac ............................. Passed 3.89,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:28890,Test,Test,28890,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Test #13: cbs-xtpl-alpha ................... Passed 97.63 sec; Start 316: sapt2; 42/411 Test #168: dft1 ............................. Passed 85.27 sec; Start 318: sapt4; 43/411 Test #161: dft-grad-lr2 ..................... Passed 86.87 sec; Start 325: scf-bz2; 44/411 Test #113: dcft7 ............................ Passed 189.57 sec; Start 97: cisd-opt-fd; 45/411 Test #325: scf-bz2 .......................... Passed 111.34 sec; Start 47: cc31; 46/411 Test #25: cc13a ............................ Passed 206.71 sec; Start 31: cc16; 47/411 Test #205: frac-traverse .................... Passed 194.22 sec; Start 371: dft-custom-dhdf; 48/411 Test #278: opt13 ............................ Passed 712.54 sec; Start 280: opt-irc-1; 49/411 Test #31: cc16 ............................. Passed 28.06 sec; Start 379: cc-module; 50/411 Test #47: cc31 ............................. Passed 54.32 sec; Start 75: cc6; 51/411 Test #379: cc-module ........................ Passed 26.01 sec; Start 386: cookbook-rohf-orb-rot; 52/411 Test #280: opt-irc-1 ........................ Passed 63.89 sec; Start 279: opt14; 53/411 Test #386: cookbook-rohf-orb-rot ............ Passed 21.41 sec; Start 230: mp2-module; 54/411 Test #97: cisd-opt-fd ...................... Passed 103.47 sec; Start 302: pywrap-cbs1; 55/411 Test #371: dft-custom-dhdf .................. Passed 85.26 sec; Start 58: cc41; 56/411 Test #75: cc6 .............................. Passed 50.52 sec; Start 317: sapt3; 57/411 Test #302: pywrap-cbs1 ...................... Passed 30.77 sec; Start 91: cepa-module; 58/411 Test #316: sapt2 ............................ Passed 305.80 sec; Start 319: sapt5; 59/411 Test #58: cc41 ............................. Passed 36.59 sec; Start 69: cc51; 60/411 Test #230: mp2-module ....................... Passed 54.15 sec; Start 60: cc43; 61/411 Test #91: cepa-module ...................... Passed 23.95 sec; Start 167: dft-b3lyp; 62/411 Test #279: opt14 ............................ Passed 73.59 sec; Start 74: cc5a; 63/41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:5074,Test,Test,5074,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Test #142: dfomp2-4 ......................... Passed 39.72 sec; Start 358: tu5-sapt; 163/411 Test #126: dfccsd-t-grad1 ................... Passed 37.57 sec; Start 48: cc32; 164/411 Test #274: opt8 ............................. Passed 38.33 sec; Start 346: sapt-dft1; 165/411 Test #54: cc38 ............................. Passed 35.68 sec; Start 189: fci-tdm-2; 166/411 Test #32: cc17 ............................. Passed 32.96 sec; Start 172: dft3; 167/411 Test #163: dft-freq ......................... Passed 23.84 sec; Start 50: cc34; 168/411 Test #358: tu5-sapt ......................... Passed 21.03 sec; Start 313: rasscf-sp; 169/411 Test #48: cc32 ............................. Passed 18.61 sec; Start 322: sapt-dft-lrc; 170/411 Test #189: fci-tdm-2 ........................ Passed 20.74 sec; Start 252: omp2-grad2; 171/411 Test #346: sapt-dft1 ........................ Passed 22.43 sec; Start 267: opt2; 172/411 Test #50: cc34 ............................. Passed 13.15 sec; Start 272: opt6; 173/411 Test #313: rasscf-sp ........................ Passed 13.81 sec; Start 245: ocepa3; 174/411 Test #12: cbs-parser ....................... Passed 38.49 sec; Start 202: fnocc4; 175/411 Test #252: omp2-grad2 ....................... Passed 13.44 sec; Start 37: cc22; 176/411 Test #172: dft3 ............................. Passed 20.87 sec; Start 315: sapt1; 177/411 Test #322: sapt-dft-lrc ..................... Passed 20.21 sec; Start 290: psimrcc-ccsd_t-4; 178/411 Test #267: opt2 ............................. Passed 18.64 sec; Start 321: sapt-dft-api; 179/411 Test #37: cc22 ............................. Passed 6.66 sec; Start 138: dfmp2-grad5; 180/411 Test #245: ocepa3 ........................... Passed 14.38 sec; Start 72: cc54; 181/411 Test #272: opt6 ............................. Passed 17.13 sec; Start 296: psithon2; 182/411 Test #202: fnocc4 ........................... Passed 16.01 sec; Start 165: dft-grad2; 183/411 Test #72: cc54 ............................. Passed 5.51 sec; Start 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:16116,Test,Test,16116,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Test #149: dfomp3-grad1 ..................... Passed 20.73 sec; Start 197: fd-gradient; 149/412 Test #127: dfccsd-t-grad1 ................... Passed 29.16 sec; Start 343: soscf-dft; 150/412 Test #107: dcft-grad4 ....................... Passed 38.78 sec; Start 375: dft-custom-gga; 151/412 Test #313: rasci-ne ......................... Passed 40.81 sec; Start 49: cc32; 152/412 Test #134: dfmp2-ecp ........................ Passed 34.88 sec; Start 63: cc45; 153/412 Test #34: cc18 ............................. Passed 34.13 sec; Start 51: cc34; 154/412 Test #253: omp2-grad2 ....................... Passed 34.62 sec; Start 52: cc35; 155/412 Test #207: ghosts ........................... Passed 36.33 sec; Start 327: scf-ecp; 156/412 Test #324: sapt7 ............................ Passed 34.94 sec; Start 1: adc1; 157/412 Test #130: dfmp2-1 .......................... Passed 36.26 sec; Start 16: cbs-xtpl-gradient; 158/412 Test #275: opt8 ............................. Passed 42.88 sec; Start 53: cc36; 159/412 Test #49: cc32 ............................. Passed 30.50 sec; Start 283: opt-irc-3; 160/412 Test #343: soscf-dft ........................ Passed 38.13 sec; Start 50: cc33; 161/412 Test #375: dft-custom-gga ................... Passed 40.10 sec; Start 265: opt-lindep-change; 162/412 Test #126: dfccsd-grad1 ..................... Passed 45.67 sec; Start 174: dft-omega; 163/412 Test #153: dfomp2p5-grad1 ................... Passed 42.65 sec; Start 147: dfomp3-1; 164/412 Test #63: cc45 ............................. Passed 37.23 sec; Start 167: dft-psivar; 165/412 Test #197: fd-gradient ...................... Passed 44.42 sec; Start 376: pywrap-bfs; 166/412 Test #51: cc34 ............................. Passed 33.14 sec; Start 160: dft-b2plyp; 167/412 Test #1: adc1 ............................. Passed 27.32 sec; Start 173: dft3; 168/412 Test #327: scf-ecp .......................... Passed 35.86 sec; Start 268: opt2; 169/412 Test #52: cc35 ............................. Passed 39.98 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:14990,Test,Test,14990,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Test #149: dfomp3-grad2 ..................... Passed 250.21 sec; Start 185: fci-h2o; 207/411 Test #71: cc53 ............................. Passed 97.98 sec; Start 252: omp2-grad2; 208/411 Test #376: pywrap-align ..................... Passed 4.72 sec; Start 107: dcft1; 209/411 Test #15: cbs-xtpl-freq .................... Passed 7.87 sec; Start 248: omp2-3; 210/411 Test #185: fci-h2o .......................... Passed 5.91 sec; Start 89: cepa3; 211/411 Test #20: cc1 .............................. Passed 198.16 sec; Start 147: dfomp3-2; 212/411 Test #89: cepa3 ............................ Passed 11.07 sec; Start 192: fd-freq-energy; 213/411 Test #144: dfomp2-grad2 ..................... Passed 87.37 sec; Start 37: cc22; 214/411 Test #248: omp2-3 ........................... Passed 19.53 sec; Start 341: soscf-ref; 215/411 Test #252: omp2-grad2 ....................... Passed 24.12 sec; Start 360: x2c1; 216/411 Test #151: dfomp2p5-2 ....................... Passed 29.24 sec; Start 81: cc9; 217/411 Test #192: fd-freq-energy ................... Passed 9.41 sec; Start 73: cc55; 218/411 Test #30: cc15 ............................. Passed 38.58 sec; Start 179: fsapt2; 219/411 Test #179: fsapt2 ........................... Passed 5.20 sec; Start 82: cc9a; 220/411 Test #341: soscf-ref ........................ Passed 9.34 sec; Start 10: castup3; 221/411 Test #37: cc22 ............................. Passed 22.33 sec; Start 77: cc8; 222/411 Test #10: castup3 .......................... Passed 20.61 sec; Start 80: cc8c; 223/411 Test #107: dcft1 ............................ Passed 58.98 sec; Start 171: dft2; 224/411 Test #171: dft2 ............................. Passed 6.62 sec; Start 266: opt1-fd; 225/411 Test #147: dfomp3-2 ......................... Passed 64.94 sec; Start 23: cc12; 226/411 Test #266: opt1-fd .......................... Passed 34.40 sec; Start 140: dfomp2-2; 227/411 Test #360: x2c1 ............................. Passed 82.77 sec; Start 313: rasscf-sp; 228/411 Test #73: cc55 .,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:20347,Test,Test,20347,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Test #153: dfomp2p5-2 ....................... Passed 59.14 sec; Start 207: frac-traverse; 81/413 Test #92: cepa-module ...................... Passed 187.69 sec; Start 318: sapt2; 82/413 Test #281: opt14 ............................ Passed 80.55 sec; Start 320: sapt4; 83/413 Test #109: dcft1 ............................ Passed 68.38 sec; Start 327: scf-bz2; 84/413 Test #258: omp2p5-grad2 ..................... Passed 64.16 sec; Start 265: omp3-grad2; 85/413 Test #144: dfomp2-4 ......................... Passed 62.74 sec; Start 142: dfomp2-2; 86/413 Test #67: cc49 ............................. Passed 54.95 sec; Start 83: cc9a; 87/413 Test #79: cc8a ............................. Passed 53.51 sec; Start 282: opt-irc-1; 88/413 Test #158: dfomp2p5-grad2 ................... Passed 80.48 sec; Start 20: cbs-xtpl-wrapper; 89/413 Test #81: cc8c ............................. Passed 52.58 sec; Start 17: cbs-xtpl-opt; 90/413 Test #21: cc1 .............................. Passed 86.44 sec; Start 78: cc8; 91/413 Test #82: cc9 .............................. Passed 67.08 sec; Start 34: cc18; 92/413 Test #142: dfomp2-2 ......................... Passed 51.07 sec; Start 319: sapt3; 93/413 Test #373: dft-custom-dhdf .................. Passed 90.03 sec; Start 321: sapt5; 94/413 Test #83: cc9a ............................. Passed 56.13 sec; Start 391: python-pubchem; 95/413 Test #265: omp3-grad2 ....................... Passed 78.67 sec; Start 194: fd-freq-energy; 96/413 Test #34: cc18 ............................. Passed 48.82 sec; Start 247: ocepa3; 97/413 Test #78: cc8 .............................. Passed 62.52 sec; Start 69: cc50; 98/413 Test #20: cbs-xtpl-wrapper ................. Passed 78.50 sec; Start 294: psimrcc-fd-freq2; 99/413 Test #282: opt-irc-1 ........................ Passed 94.89 sec; Start 50: cc33; 100/413 Test #327: scf-bz2 .......................... Passed 118.72 sec; Start 33: cc17; 101/413 Test #391: python-pubchem ................... Passed 60.41 sec; Start 63: cc45; 102,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:8677,Test,Test,8677,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Test #158: dfomp2p5-grad2 ................... Passed 80.48 sec; Start 20: cbs-xtpl-wrapper; 89/413 Test #81: cc8c ............................. Passed 52.58 sec; Start 17: cbs-xtpl-opt; 90/413 Test #21: cc1 .............................. Passed 86.44 sec; Start 78: cc8; 91/413 Test #82: cc9 .............................. Passed 67.08 sec; Start 34: cc18; 92/413 Test #142: dfomp2-2 ......................... Passed 51.07 sec; Start 319: sapt3; 93/413 Test #373: dft-custom-dhdf .................. Passed 90.03 sec; Start 321: sapt5; 94/413 Test #83: cc9a ............................. Passed 56.13 sec; Start 391: python-pubchem; 95/413 Test #265: omp3-grad2 ....................... Passed 78.67 sec; Start 194: fd-freq-energy; 96/413 Test #34: cc18 ............................. Passed 48.82 sec; Start 247: ocepa3; 97/413 Test #78: cc8 .............................. Passed 62.52 sec; Start 69: cc50; 98/413 Test #20: cbs-xtpl-wrapper ................. Passed 78.50 sec; Start 294: psimrcc-fd-freq2; 99/413 Test #282: opt-irc-1 ........................ Passed 94.89 sec; Start 50: cc33; 100/413 Test #327: scf-bz2 .......................... Passed 118.72 sec; Start 33: cc17; 101/413 Test #391: python-pubchem ................... Passed 60.41 sec; Start 63: cc45; 102/413 Test #319: sapt3 ............................ Passed 76.94 sec; Start 56: cc39; 103/413 Test #17: cbs-xtpl-opt ..................... Passed 105.69 sec; Start 206: frac-ip-fitting; 104/413 Test #321: sapt5 ............................ Passed 74.14 sec; Start 68: cc4a; 105/413 Test #69: cc50 ............................. Passed 50.27 sec; Start 101: ci-property; 106/413 Test #247: ocepa3 ........................... Passed 59.63 sec; Start 169: dft-b3lyp; 107/413 Test #50: cc33 ............................. Passed 44.16 sec; Start 275: opt7; 108/413 Test #63: cc45 ............................. Passed 27.72 sec; Start 150: dfomp3-grad1; 109/413 Test #33: cc17 ............................. Passed 42.65 sec; Start 49: cc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:9410,Test,Test,9410,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Test #158: dft-ghost ........................ Passed 7.55 sec; Start 99: cisd-sp-2; 270/411 Test #341: soscf-ref ........................ Passed 7.60 sec; Start 83: cdomp2-1; 271/411 Test #184: fci-dipole ....................... Passed 5.99 sec; Start 6: ao-casscf-sp; 272/411 Test #94: cisd-h2o+-1 ...................... Passed 4.91 sec; Start 108: dcft2; 273/411 Test #224: molden2 .......................... Passed 6.22 sec; Start 269: opt3; 274/411 Test #99: cisd-sp-2 ........................ Passed 5.95 sec; Start 329: scf-guess-read2; 275/411 Test #198: freq-isotope2 .................... Passed 8.20 sec; Start 234: mp3-grad2; 276/411 Test #6: ao-casscf-sp ..................... Passed 5.33 sec; Start 339: scf-property; 277/411 Test #83: cdomp2-1 ......................... Passed 7.43 sec; Start 9: castup2; 278/411 Test #269: opt3 ............................. Passed 5.42 sec; Start 10: castup3; 279/411 Test #199: fnocc1 ........................... Passed 13.51 sec; Start 233: mp3-grad1; 280/411 Test #108: dcft2 ............................ Passed 8.11 sec; Start 117: dfcasscf-sa-sp; 281/411 Test #234: mp3-grad2 ........................ Passed 4.58 sec; Start 3: casscf-fzc-sp; 282/411 Test #329: scf-guess-read2 .................. Passed 6.02 sec; Start 331: scf1; 283/411 Test #233: mp3-grad1 ........................ Passed 1.89 sec; Start 171: dft2; 284/411 Test #339: scf-property ..................... Passed 5.57 sec; Start 344: dfep2-1; 285/411 Test #117: dfcasscf-sa-sp ................... Passed 5.69 sec; Start 265: opt1; 286/411 Test #344: dfep2-1 .......................... Passed 4.11 sec; Start 223: molden1; 287/411 Test #331: scf1 ............................. Passed 5.42 sec; Start 190: fci-coverage; 288/411 Test #10: castup3 .......................... Passed 8.69 sec; Start 86: cepa0-grad2; 289/411 Test #171: dft2 ............................. Passed 5.48 sec; Start 134: dfmp2-grad1; 290/411 Test #9: castup2 .......................... Passed 10.20 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:26086,Test,Test,26086,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Test #158: dft-ghost ........................ Passed 7.87 sec; Start 51: cc35; 181/411 Test #250: omp2-5 ........................... Passed 295.87 sec; Start 357: tu4-h2o-freq; 182/411 Test #115: dcft9 ............................ Passed 349.55 sec; Start 105: dcft-grad3; 183/411 Test #104: dcft-grad2 ....................... Passed 336.22 sec; Start 180: fsapt-terms; 184/411 Test #64: cc47 ............................. Passed 152.97 sec; Start 149: dfomp3-grad2; 185/411 Test #180: fsapt-terms ...................... Passed 9.14 sec; Start 270: opt4; 186/411 Test #357: tu4-h2o-freq ..................... Passed 23.02 sec; Start 56: cc4; 187/411 Test #270: opt4 ............................. Passed 13.33 sec; Start 55: cc39; 188/411 Test #105: dcft-grad3 ....................... Passed 34.04 sec; Start 49: cc33; 189/411 Test #33: cc18 ............................. Passed 148.37 sec; Start 7: casscf-sp; 190/411 Test #249: omp2-4 ........................... Passed 259.98 sec; Start 98: cisd-sp; 191/411 Test #51: cc35 ............................. Passed 111.53 sec; Start 20: cc1; 192/411 Test #98: cisd-sp .......................... Passed 15.83 sec; Start 197: freq-isotope1; 193/411 Test #197: freq-isotope1 .................... Passed 31.86 sec; Start 63: cc46; 194/411 Test #7: casscf-sp ........................ Passed 89.41 sec; Start 32: cc17; 195/411 Test #49: cc33 ............................. Passed 111.73 sec; Start 258: omp3-2; 196/411 Test #56: cc4 .............................. Passed 144.03 sec; Start 71: cc53; 197/411 Test #55: cc39 ............................. Passed 166.43 sec; Start 144: dfomp2-grad2; 198/411 Test #258: omp3-2 ........................... Passed 74.77 sec; Start 367: scf-hess1; 199/411 Test #367: scf-hess1 ........................ Passed 16.23 sec; Start 184: fci-dipole; 200/411 Test #32: cc17 ............................. Passed 113.71 sec; Start 335: scf4; 201/411 Test #153: dfomp2p5-grad2 ................... Passed 316.26 sec; Start 186: fci,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:17962,Test,Test,17962,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Test #159: dft-freq ......................... Passed 21.58 sec; Start 104: dcft-grad3; 103/401 Test #11: cbs-delta-energy ................. Passed 237.06 sec; Start 295: pywrap-alias; 104/401 Test #252: omp2p5-grad2 ..................... Passed 79.50 sec; Start 268: opt6; 105/401 Test #35: cc2 .............................. Passed 456.44 sec; Start 173: extern2; 106/401 Test #38: cc23 ............................. Passed 464.64 sec; Start 81: cc9a; 107/401 Test #226: mp2-module ....................... Passed 116.12 sec; Start 137: dfmp2-grad5; 108/401 Test #169: dft-omega ........................ Passed 21.02 sec; Start 79: cc8c; 109/401 Test #130: dfmp2-3 .......................... Passed 18.27 sec; Start 63: cc47; 110/401 Test #248: omp2-grad2 ....................... Passed 39.14 sec; Start 72: cc55; 111/401 Test #104: dcft-grad3 ....................... Passed 11.82 sec; Start 292: psithon2; 112/401 Test #244: omp2-3 ........................... Passed 25.17 sec; Start 238: ocepa-grad2; 113/401 Test #241: ocepa3 ........................... Passed 39.10 sec; Start 273: opt12; 114/401 Test #139: dfomp2-2 ......................... Passed 42.17 sec; Start 345: dft-custom; 115/401 Test #190: fd-freq-gradient ................. Passed 19.57 sec; Start 21: cc10; 116/401 Test #41: cc26 ............................. Passed 424.74 sec; Start 234: nbody-intermediates; 117/401 Test #147: dfomp3-grad1 ..................... Passed 26.96 sec; Start 78: cc8b; 118/401 Test #268: opt6 ............................. Passed 21.27 sec; Start 303: pywrap-db1; 119/401 Test #137: dfmp2-grad5 ...................... Passed 18.60 sec; Start 80: cc9; 120/401 Test #141: dfomp2-4 ......................... Passed 38.69 sec; Start 149: dfomp2p5-1; 121/401 Test #173: extern2 .......................... Passed 23.61 sec; Start 55: cc39; 122/401 Test #59: cc42 ............................. Passed 60.86 sec; Start 202: ghosts; 123/401 Test #39: cc24 ............................. Passed 464.47 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:11074,Test,Test,11074,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Test #160: dft-b2plyp ....................... Passed 25.44 sec; Start 153: dfomp2p5-grad1; 152/412 Test #53: cc36 ............................. Passed 27.67 sec; Start 91: cepa1; 153/412 Test #174: dft-omega ........................ Passed 26.66 sec; Start 50: cc33; 154/412 Test #129: dfccsdat1 ........................ Passed 26.53 sec; Start 164: dft-freq; 155/412 Test #7: casscf-sp ........................ Passed 37.16 sec; Start 347: sapt-dft1; 156/412 Test #127: dfccsd-t-grad1 ................... Passed 53.28 sec; Start 190: fci-tdm-2; 157/412 Test #167: dft-psivar ....................... Passed 26.97 sec; Start 72: cc53; 158/412 Test #152: dfomp2p5-2 ....................... Passed 110.98 sec; Start 149: dfomp3-grad1; 159/412 Test #12: cbs-parser ....................... Passed 92.18 sec; Start 34: cc18; 160/412 Test #164: dft-freq ......................... Passed 27.12 sec; Start 85: cdomp2-2; 161/412 Test #91: cepa1 ............................ Passed 33.32 sec; Start 359: tu5-sapt; 162/412 Test #57: cc4 .............................. Passed 63.11 sec; Start 248: omp2-2; 163/412 Test #190: fci-tdm-2 ........................ Passed 25.72 sec; Start 173: dft3; 164/412 Test #197: fd-gradient ...................... Passed 42.33 sec; Start 123: dfccd-grad1; 165/412 Test #347: sapt-dft1 ........................ Passed 28.00 sec; Start 323: sapt-dft-lrc; 166/412 Test #50: cc33 ............................. Passed 49.28 sec; Start 64: cc46; 167/412 Test #153: dfomp2p5-grad1 ................... Passed 51.79 sec; Start 74: cc55; 168/412 Test #359: tu5-sapt ......................... Passed 22.94 sec; Start 273: opt6; 169/412 Test #323: sapt-dft-lrc ..................... Passed 21.56 sec; Start 291: psimrcc-ccsd_t-4; 170/412 Test #126: dfccsd-grad1 ..................... Passed 67.76 sec; Start 268: opt2; 171/412 Test #78: cc8 .............................. Passed 94.88 sec; Start 147: dfomp3-1; 172/412 Test #123: dfccd-grad1 ...................... Passed 25.96 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:15292,Test,Test,15292,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #163: dft-freq ......................... Passed 23.58 sec; Start 322: sapt-dft-lrc; 160/411 Test #55: cc39 ............................. Passed 58.48 sec; Start 277: opt12; 161/411 Test #63: cc46 ............................. Passed 54.24 sec; Start 282: opt-irc-3; 162/411 Test #12: cbs-parser ....................... Passed 83.31 sec; Start 272: opt6; 163/411 Test #64: cc47 ............................. Passed 71.08 sec; Start 315: sapt1; 164/411 Test #358: tu5-sapt ......................... Passed 23.06 sec; Start 267: opt2; 165/411 Test #172: dft3 ............................. Passed 26.14 sec; Start 290: psimrcc-ccsd_t-4; 166/411 Test #151: dfomp2p5-2 ....................... Passed 71.41 sec; Start 176: extern1; 167/411 Test #322: sapt-dft-lrc ..................... Passed 20.32 sec; Start 177: extern2; 168/411 Test #81: cc9 .............................. Passed 69.76 sec; Start 247: omp2-2; 169/411 Test #313: rasscf-sp ........................ Passed 73.93 sec; Start 80: cc8c; 170/411 Test #71: cc53 ............................. Passed 60.75 sec; Start 48: cc32; 171/411 Test #315: sapt1 ............................ Passed 19.99 sec; Start 165: dft-grad2; 172/411 Test #277: opt12 ............................ Passed 26.40 sec; Start 169: dft-vv10; 173/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 19.99 sec; Start 194: fd-freq-gradient; 174/411 Test #79: cc8b ............................. Passed 60.66 sec; Start 321: sapt-dft-api; 175/411 Test #267: opt2 ............................. Passed 25.68 sec; Start 303: pywrap-checkrun-convcrit; 176/411 Test #272: opt6 ............................. Passed 28.86 sec; Start 254: omp2p5-2; 177/411 Test #176: extern1 .......................... Passed 21.76 sec; Start 238: nbody-intermediates; 178/411 Test #282: opt-irc-3 ........................ Passed 33.40 sec; Start 296: psithon2; 179/411 Test #78: cc8a ............................. Passed 64.33 sec; Start 54: cc38; 180/411 Test #165: dft-grad2 ..............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:15995,Test,Test,15995,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #166: dft-grad1 ........................ Passed 18.70 sec; Start 141: dfomp2-1; 228/413 Test #220: mints8 ........................... Passed 19.06 sec; Start 268: opt1-fd; 229/413 Test #171: dft-vv10 ......................... Passed 19.31 sec; Start 110: dcft2; 230/413 Test #303: pywrap-basis ..................... Passed 17.25 sec; Start 10: castup3; 231/413 Test #102: cubeprop ......................... Passed 10.10 sec; Start 84: cdomp2-1; 232/413 Test #5: casscf-sa-sp ..................... Passed 15.42 sec; Start 228: mp2-1; 233/413 Test #368: dft-smoke ........................ Passed 15.59 sec; Start 367: cubeprop-esp; 234/413 Test #326: sapt8 ............................ Passed 15.45 sec; Start 288: props3; 235/413 Test #352: dft-custom ....................... Passed 16.19 sec; Start 219: mints6; 236/413 Test #342: soscf-large ...................... Passed 14.89 sec; Start 91: cepa1; 237/413 Test #141: dfomp2-1 ......................... Passed 13.41 sec; Start 287: props2; 238/413 Test #199: freq-isotope1 .................... Passed 17.04 sec; Start 126: dfccsdl1; 239/413 Test #243: ocepa-grad1 ...................... Passed 15.58 sec; Start 370: scf-freq1; 240/413 Test #340: scf7 ............................. Passed 17.37 sec; Start 14: cbs-xtpl-energy; 241/413 Test #268: opt1-fd .......................... Passed 14.23 sec; Start 139: dfmp2-grad4; 242/413 Test #110: dcft2 ............................ Passed 11.74 sec; Start 129: dfccsdt1; 243/413 Test #84: cdomp2-1 ......................... Passed 10.02 sec; Start 245: ocepa1; 244/413 Test #367: cubeprop-esp ..................... Passed 9.60 sec; Start 159: dfrasscf-sp; 245/413 Test #10: castup3 .......................... Passed 13.10 sec; Start 359: tu4-h2o-freq; 246/413 Test #228: mp2-1 ............................ Passed 12.23 sec; Start 371: dft-jk; 247/413 Test #288: props3 ........................... Passed 13.97 sec; Start 272: opt4; 248/413 Test #219: mints6 ........................... Passed 12.99 s,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:22351,Test,Test,22351,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Test #166: dft-grad2 ........................ Passed 17.93 sec; Start 169: dft1; 165/412 Test #157: dfomp2p5-grad2 ................... Passed 55.53 sec; Start 170: dft-vv10; 166/412 Test #77: cc7 .............................. Passed 356.65 sec; Start 171: dft1-alt; 167/412 Test #167: dft-psivar ....................... Passed 25.10 sec; Start 172: dft2; 168/412 Test #112: dcft5 ............................ Passed 241.80 sec; Start 173: dft3; 169/412 Test #163: dft-grad-meta .................... Passed 53.07 sec; Start 174: dft-omega; 170/412 Test #172: dft2 ............................. Passed 5.89 sec; Start 175: docs-bases; 171/412 Test #175: docs-bases ....................... Passed 0.93 sec; Start 176: docs-dft; 172/412 Test #170: dft-vv10 ......................... Passed 16.95 sec; Start 177: extern1; 173/412 Test #176: docs-dft ......................... Passed 0.74 sec; Start 178: extern2; 174/412 Test #115: dcft8 ............................ Passed 244.85 sec; Start 180: fsapt2; 175/412 Test #173: dft3 ............................. Passed 24.08 sec; Start 181: fsapt-terms; 176/412 Test #177: extern1 .......................... Passed 17.94 sec; Start 184: isapt2; 177/412 Test #155: dft-grad-lr2 ..................... Passed 103.74 sec; Start 185: fci-dipole; 178/412 Test #180: fsapt2 ........................... Passed 5.38 sec; Start 186: fci-h2o; 179/412 Test #178: extern2 .......................... Passed 21.09 sec; Start 187: fci-h2o-2; 180/412 Test #174: dft-omega ........................ Passed 26.95 sec; Start 188: fci-h2o-fzcv; 181/412 Test #181: fsapt-terms ...................... Passed 8.42 sec; Start 189: fci-tdm; 182/412 Test #185: fci-dipole ....................... Passed 8.93 sec; Start 190: fci-tdm-2; 183/412 Test #189: fci-tdm .......................... Passed 2.19 sec; Start 191: fci-coverage; 184/412 Test #186: fci-h2o .......................... Passed 8.29 sec; Start 192: fcidump; 185/412 Test #187: fci-h2o-2 ........................ Passed 7.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:16275,Test,Test,16275,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['Test'],['Test']
Testability,Test #169: dft-vv10 ......................... Passed 13.33 sec; Start 170: dft1-alt; 181/411 Test #170: dft1-alt ......................... Passed 37.70 sec; Start 171: dft2; 182/411 Test #171: dft2 ............................. Passed 4.57 sec; Start 172: dft3; 183/411 Test #172: dft3 ............................. Passed 16.86 sec; Start 173: dft-omega; 184/411 Test #173: dft-omega ........................ Passed 20.02 sec; Start 174: docs-bases; 185/411 Test #174: docs-bases ....................... Passed 0.62 sec; Start 175: docs-dft; 186/411 Test #175: docs-dft ......................... Passed 0.73 sec; Start 176: extern1; 187/411 Test #176: extern1 .......................... Passed 9.72 sec; Start 177: extern2; 188/411 Test #177: extern2 .......................... Passed 9.98 sec; Start 179: fsapt2; 189/411 Test #179: fsapt2 ........................... Passed 4.73 sec; Start 180: fsapt-terms; 190/411 Test #180: fsapt-terms ...................... Passed 7.70 sec; Start 183: isapt2; 191/411 Test #183: isapt2 ........................... Passed 116.32 sec; Start 184: fci-dipole; 192/411 Test #184: fci-dipole ....................... Passed 6.09 sec; Start 185: fci-h2o; 193/411 Test #185: fci-h2o .......................... Passed 5.68 sec; Start 186: fci-h2o-2; 194/411 Test #186: fci-h2o-2 ........................ Passed 5.51 sec; Start 187: fci-h2o-fzcv; 195/411 Test #187: fci-h2o-fzcv ..................... Passed 3.61 sec; Start 188: fci-tdm; 196/411 Test #188: fci-tdm .......................... Passed 0.91 sec; Start 189: fci-tdm-2; 197/411 Test #189: fci-tdm-2 ........................ Passed 18.51 sec; Start 190: fci-coverage; 198/411 Test #190: fci-coverage ..................... Passed 1.46 sec; Start 191: fcidump; 199/411 Test #191: fcidump .......................... Passed 2.13 sec; Start 192: fd-freq-energy; 200/411 Test #192: fd-freq-energy ................... Passed 5.12 sec; Start 194: fd-freq-gradient; 201/411 Test #194: fd-freq-gradient ................. ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:17316,Test,Test,17316,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #16: cbs-xtpl-gradient ................ Passed 24.28 sec; Start 266: opt-lindep-change; 170/413 Test #53: cc36 ............................. Passed 6.31 sec; Start 328: scf-ecp; 171/413 Test #256: omp2p5-2 ......................... Passed 8.70 sec; Start 201: fnocc1; 172/413 Test #284: opt-irc-3 ........................ Passed 28.19 sec; Start 204: fnocc4; 173/413 Test #133: dfmp2-3 .......................... Passed 46.21 sec; Start 274: opt6; 174/413 Test #2: adc2 ............................. Passed 46.83 sec; Start 279: opt12; 175/413 Test #314: rasci-ne ......................... Passed 40.09 sec; Start 269: opt2; 176/413 Test #201: fnocc1 ........................... Passed 5.20 sec; Start 179: extern2; 177/413 Test #325: sapt7 ............................ Passed 38.47 sec; Start 175: dft-omega; 178/413 Test #376: dft-custom-gga ................... Passed 35.71 sec; Start 260: omp3-2; 179/413 Test #131: dfmp2-1 .......................... Passed 38.95 sec; Start 377: pywrap-bfs; 180/413 Test #135: dfmp2-ecp ........................ Passed 39.52 sec; Start 1: adc1; 181/413 Test #208: ghosts ........................... Passed 37.52 sec; Start 165: dft-freq; 182/413 Test #344: soscf-dft ........................ Passed 37.25 sec; Start 209: gibbs; 183/413 Test #266: opt-lindep-change ................ Passed 29.25 sec; Start 203: fnocc3; 184/413 Test #279: opt12 ............................ Passed 22.14 sec; Start 174: dft3; 185/413 Test #274: opt6 ............................. Passed 22.76 sec; Start 161: dft-b2plyp; 186/413 Test #328: scf-ecp .......................... Passed 30.17 sec; Start 250: omp2-3; 187/413 Test #204: fnocc4 ........................... Passed 23.72 sec; Start 348: sapt-dft1; 188/413 Test #179: extern2 .......................... Passed 22.09 sec; Start 168: dft-psivar; 189/413 Test #269: opt2 ............................. Passed 22.92 sec; Start 140: dfmp2-grad5; 190/413 Test #260: omp3-2 ........................... Passed 15.21 sec; Start 3,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:16896,Test,Test,16896,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,"Test #175: docs-bases ....................... Passed 0.75 sec; 398/412 Test #240: numpy-array-interface ............ Passed 1.01 sec; 399/412 Test #217: mints5 ........................... Passed 1.36 sec; 400/412 Test #383: psi4numpy-rhf .................... Passed 1.21 sec; 401/412 Test #213: mints1 ........................... Passed 0.95 sec; 402/412 Test #309: pywrap-db3 ....................... Passed 0.84 sec; 403/412 Test #209: matrix1 .......................... Passed 0.70 sec; 404/412 Test #410: skeletonscf ...................... Passed 0.81 sec; 405/412 Test #216: mints4 ........................... Passed 0.83 sec; 406/412 Test #176: docs-dft ......................... Passed 0.72 sec; 407/412 Test #403: json-schema-1-throws ............. Passed 0.60 sec; 408/412 Test #365: options1 ......................... Passed 0.68 sec; 409/412 Test #88: cepa1 ............................ Passed 2.11 sec; 410/412 Test #179: fsapt1 ........................... Passed 2105.81 sec; 411/412 Test #18: cbs-xtpl-func .................... Passed 1523.38 sec; 412/412 Test #319: sapt4 ............................ Passed 1971.42 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 75.58 sec*proc (2 tests); autotest = 2463.35 sec*proc (26 tests); cart = 23370.60 sec*proc (123 tests); cas = 61.99 sec*proc (1 test); casscf = 167.92 sec*proc (11 tests); cbs = 3247.75 sec*proc (11 tests); cc = 18280.00 sec*proc (65 tests); cdomp2 = 69.54 sec*proc (2 tests); cepa = 132.16 sec*proc (7 tests); ci = 122.62 sec*proc (8 tests); cisd = 205.34 sec*proc (7 tests); cookbook = 632.65 sec*proc (1 test); cubeprop = 21.15 sec*proc (2 tests); dcft = 6649.74 sec*proc (13 tests); df = 2876.21 sec*proc (38 tests); dfccd = 2.00 sec*proc (1 test); dfccd-grad = 6.25 sec*proc (1 test); dfccdl = 6.15 sec*proc (1 test); dfccsd = 6.72 sec*proc (1 test); dfccsd-grad = 45.67 sec*proc (1 test); dfccsd-t-grad = 29.16 sec*proc (1 test); dfccsdat = 40.97 sec*proc (1 test); dfccsdl = 5.99 sec*pr",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:38360,Test,Test,38360,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,"Test #175: docs-bases ....................... Passed 13.52 sec; Start 88: cepa1; 405/412 Test #216: mints4 ........................... Passed 13.68 sec; 406/412 Test #209: matrix1 .......................... Passed 13.44 sec; 407/412 Test #410: skeletonscf ...................... Passed 14.54 sec; 408/412 Test #176: docs-dft ......................... Passed 13.56 sec; 409/412 Test #365: options1 ......................... Passed 12.94 sec; 410/412 Test #403: json-schema-1-throws ............. Passed 12.51 sec; 411/412 Test #88: cepa1 ............................ Passed 15.83 sec; 412/412 Test #319: sapt4 ............................ Passed 1912.45 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 95.19 sec*proc (2 tests); autotest = 994.34 sec*proc (26 tests); cart = 14957.35 sec*proc (123 tests); cas = 53.75 sec*proc (1 test); casscf = 214.86 sec*proc (11 tests); cbs = 1085.57 sec*proc (11 tests); cc = 6887.79 sec*proc (65 tests); cdomp2 = 43.27 sec*proc (2 tests); cepa = 141.35 sec*proc (7 tests); ci = 206.59 sec*proc (8 tests); cisd = 285.49 sec*proc (7 tests); cookbook = 66.55 sec*proc (1 test); cubeprop = 44.67 sec*proc (2 tests); dcft = 2708.77 sec*proc (13 tests); df = 1635.28 sec*proc (38 tests); dfccd = 16.56 sec*proc (1 test); dfccd-grad = 13.91 sec*proc (1 test); dfccdl = 26.46 sec*proc (1 test); dfccsd = 15.59 sec*proc (1 test); dfccsd-grad = 22.13 sec*proc (1 test); dfccsd-t-grad = 21.66 sec*proc (1 test); dfccsdat = 12.93 sec*proc (1 test); dfccsdl = 15.16 sec*proc (1 test); dfccsdt = 15.93 sec*proc (1 test); dfep2 = 46.62 sec*proc (2 tests); dfmp2 = 296.86 sec*proc (11 tests); dfomp2 = 798.00 sec*proc (7 tests); dfomp2.5 = 88.35 sec*proc (4 tests); dfomp3 = 65.99 sec*proc (4 tests); dfscf = 149.44 sec*proc (1 test); dft = 1654.52 sec*proc (27 tests); docs = 27.08 sec*proc (2 tests); ecp = 72.20 sec*proc (2 tests); fci = 46.96 sec*proc (2 tests); fcidump = 27.57 sec*proc (1 test); findif = 886.69 sec*proc (5 tests); fnocc = 76.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:38945,test,tests,38945,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['test'],['tests']
Testability,"Test #178: fsapt1 ........................... Passed 1990.25 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 66.01 sec*proc (2 tests); autotest = 1146.62 sec*proc (26 tests); cart = 11753.15 sec*proc (123 tests); cas = 54.60 sec*proc (1 test); casscf = 72.55 sec*proc (11 tests); cbs = 1265.53 sec*proc (10 tests); cc = 4521.61 sec*proc (65 tests); cdomp2 = 26.59 sec*proc (2 tests); cepa = 98.25 sec*proc (7 tests); ci = 102.86 sec*proc (8 tests); cisd = 160.34 sec*proc (7 tests); cookbook = 85.56 sec*proc (1 test); cubeprop = 20.76 sec*proc (2 tests); dcft = 1432.88 sec*proc (13 tests); df = 809.76 sec*proc (38 tests); dfccd = 2.40 sec*proc (1 test); dfccd-grad = 6.44 sec*proc (1 test); dfccdl = 2.47 sec*proc (1 test); dfccsd = 4.35 sec*proc (1 test); dfccsd-grad = 18.56 sec*proc (1 test); dfccsd-t-grad = 18.88 sec*proc (1 test); dfccsdat = 9.19 sec*proc (1 test); dfccsdl = 4.13 sec*proc (1 test); dfccsdt = 6.97 sec*proc (1 test); dfep2 = 5.76 sec*proc (2 tests); dfmp2 = 129.38 sec*proc (11 tests); dfomp2 = 241.50 sec*proc (7 tests); dfomp2.5 = 75.85 sec*proc (4 tests); dfomp3 = 85.78 sec*proc (4 tests); dfscf = 142.25 sec*proc (1 test); dft = 1405.42 sec*proc (27 tests); docs = 1.27 sec*proc (2 tests); ecp = 40.70 sec*proc (2 tests); fci = 11.34 sec*proc (2 tests); fcidump = 3.32 sec*proc (1 test); findif = 855.60 sec*proc (5 tests); fnocc = 54.59 sec*proc (4 tests); freq = 868.42 sec*proc (6 tests); gradient = 511.58 sec*proc (16 tests); json = 15.62 sec*proc (8 tests); longtests = 3663.30 sec*proc (5 tests); mcscf = 3.51 sec*proc (3 tests); minitests = 60.16 sec*proc (4 tests); mints = 87.38 sec*proc (14 tests); misc = 453.74 sec*proc (16 tests); mp2 = 533.20 sec*proc (13 tests); nbody = 52.44 sec*proc (2 tests); numpy = 0.69 sec*proc (1 test); ocepa = 262.80 sec*proc (6 tests); omp = 342.02 sec*proc (18 tests); opt = 1346.21 sec*proc (21 tests); plug = 9.75 sec*proc (7 tests); prop = 2.45 sec*proc (1 test); properties = 130.49 sec*proc",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:39266,test,tests,39266,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['test'],['tests']
Testability,Test #17: cbs-xtpl-opt ..................... Passed 104.19 sec; Start 114: dcft9; 27/401 Test #40: cc25 ............................. Passed 450.80 sec; Start 179: isapt2; 28/401 Test #36: cc21 ............................. Passed 451.45 sec; Start 69: cc52; 29/401 Test #96: cisd-opt-fd ...................... Passed 87.68 sec; Start 74: cc6; 30/401 Test #368: dft-custom-mgga .................. Passed 62.73 sec; Start 200: frac-ip-fitting; 31/401 Test #19: cbs-xtpl-wrapper ................. Passed 62.39 sec; Start 166: dft1-alt; 32/401 Test #90: cepa-module ...................... Passed 125.09 sec; Start 343: sapt-dft2; 33/401 Test #236: ocepa-freq1 ...................... Passed 489.86 sec; Start 58: cc41; 34/401 Test #179: isapt2 ........................... Passed 46.85 sec; Start 366: dft-custom-dhdf; 35/401 Test #316: sapt6 ............................ Passed 72.26 sec; Start 11: cbs-delta-energy; 36/401 Test #25: cc13a ............................ Passed 519.27 sec; Start 27: cc13c; 37/401 Test #47: cc31 ............................. Passed 131.54 sec; Start 61: cc44; 38/401 Test #74: cc6 .............................. Passed 78.78 sec; Start 12: cbs-parser; 39/401 Test #200: frac-ip-fitting .................. Passed 56.76 sec; Start 255: omp3-3; 40/401 Test #343: sapt-dft2 ........................ Passed 53.47 sec; Start 60: cc43; 41/401 Test #166: dft1-alt ......................... Passed 54.05 sec; Start 163: dft-b3lyp; 42/401 Test #44: cc29 ............................. Passed 150.02 sec; Start 233: nbody-he-cluster; 43/401 Test #29: cc14 ............................. Passed 290.28 sec; Start 46: cc30; 44/401 Test #31: cc16 ............................. Passed 204.91 sec; Start 143: dfomp2-grad2; 45/401 Test #114: dcft9 ............................ Passed 101.63 sec; Start 57: cc40; 46/401 Test #366: dft-custom-dhdf .................. Passed 49.28 sec; Start 257: omp3-5; 47/401 Test #301: pywrap-checkrun-rohf ............. Passed 555.72 sec; Start 272: opt11;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:4124,Test,Test,4124,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Test #18: cbs-xtpl-func .................... Passed 1080.73 sec; Start 31: cc15; 59/412 Test #279: opt13 ............................ Passed 828.21 sec; Start 17: cbs-xtpl-opt; 60/412 Test #320: sapt5 ............................ Passed 79.38 sec; Start 27: cc13b; 61/412 Test #293: psimrcc-fd-freq2 ................. Passed 75.55 sec; Start 62: cc44; 62/412 Test #205: frac-ip-fitting .................. Passed 68.55 sec; Start 157: dfomp2p5-grad2; 63/412 Test #28: cc13c ............................ Passed 80.48 sec; Start 298: pubchem1; 64/412 Test #281: opt-irc-1 ........................ Passed 92.68 sec; Start 251: omp2-5; 65/412 Test #116: dcft9 ............................ Passed 80.09 sec; Start 20: cbs-xtpl-wrapper; 66/412 Test #31: cc15 ............................. Passed 63.11 sec; Start 390: python-pubchem; 67/412 Test #317: sapt2 ............................ Passed 375.81 sec; Start 47: cc30; 68/412 Test #76: cc6 .............................. Passed 78.72 sec; Start 59: cc41; 69/412 Test #75: cc5a ............................. Passed 81.00 sec; Start 105: dcft-grad2; 70/412 Test #48: cc31 ............................. Passed 118.12 sec; Start 44: cc28; 71/412 Test #62: cc44 ............................. Passed 62.89 sec; Start 261: omp3-4; 72/412 Test #92: cepa-module ...................... Passed 94.63 sec; Start 257: omp2p5-grad2; 73/412 Test #27: cc13b ............................ Passed 76.46 sec; Start 148: dfomp3-2; 74/412 Test #17: cbs-xtpl-opt ..................... Passed 87.77 sec; Start 58: cc40; 75/412 Test #157: dfomp2p5-grad2 ................... Passed 63.86 sec; Start 163: dft-grad-meta; 76/412 Test #298: pubchem1 ......................... Passed 62.78 sec; Start 101: ci-property; 77/412 Test #251: omp2-5 ........................... Passed 64.13 sec; Start 264: omp3-grad2; 78/412 Test #32: cc16 ............................. Passed 140.13 sec; Start 303: pywrap-cbs1; 79/412 Test #390: python-pubchem ................... Passed 63.68 sec; Start 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:6752,Test,Test,6752,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #18: cbs-xtpl-func .................... Passed 485.98 sec; Start 25: cc13a; 4/411 Test #193: fd-freq-energy-large ............. Passed 551.44 sec; Start 113: dcft7; 5/411 Test #181: fsapt-allterms ................... Passed 652.63 sec; Start 205: frac-traverse; 6/411 Test #394: python-vibanalysis ............... Passed 680.49 sec; Start 316: sapt2; 7/411 Test #25: cc13a ............................ Passed 254.82 sec; Start 318: sapt4; 8/411 Test #162: dft-grad-lr3 ..................... Passed 489.85 sec; Start 325: scf-bz2; 9/411 Test #113: dcft7 ............................ Passed 278.82 sec; Start 373: dft-custom-mgga; 10/411 Test #278: opt13 ............................ Passed 847.95 sec; Start 320: sapt6; 11/411 Test #205: frac-traverse .................... Passed 221.61 sec; Start 155: dfscf-bz2; 12/411 Test #227: mp2-def2 ......................... Passed 440.79 sec; Start 183: isapt2; 13/411 Test #325: scf-bz2 .......................... Passed 127.53 sec; Start 347: sapt-dft2; 14/411 Test #320: sapt6 ............................ Passed 169.47 sec; Start 112: dcft6; 15/411 Test #155: dfscf-bz2 ........................ Passed 146.26 sec; Start 97: cisd-opt-fd; 16/411 Test #373: dft-custom-mgga .................. Passed 193.16 sec; Start 281: opt-irc-2; 17/411 Test #316: sapt2 ............................ Passed 360.69 sec; Start 300: pywrap-all; 18/411 Test #347: sapt-dft2 ........................ Passed 128.97 sec; Start 161: dft-grad-lr2; 19/411 Test #183: isapt2 ........................... Passed 138.45 sec; Start 168: dft1; 20/411 Test #161: dft-grad-lr2 ..................... Passed 106.27 sec; Start 304: pywrap-checkrun-rhf; 21/411 Test #168: dft1 ............................. Passed 104.16 sec; Start 371: dft-custom-dhdf; 22/411 Test #97: cisd-opt-fd ...................... Passed 145.89 sec; Start 103: dcft-grad1; 23/411 Test #281: opt-irc-2 ........................ Passed 161.25 sec; Start 45: cc3; 24/411 Test #112: dcft6 ............................ ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:1538,Test,Test,1538,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Test #196: fd-freq-gradient ................. Passed 33.45 sec; Start 152: dfomp2p5-1; 139/413 Test #85: cdomp2-2 ......................... Passed 11.51 sec; Start 350: sapt-compare; 140/413 Test #239: nbody-he-cluster ................. Passed 40.41 sec; Start 338: scf5; 141/413 Test #33: cc17 ............................. Passed 14.22 sec; Start 309: pywrap-db1; 142/413 Test #63: cc45 ............................. Passed 10.89 sec; Start 276: opt8; 143/413 Test #254: omp2-grad2 ....................... Passed 14.40 sec; Start 24: cc12; 144/413 Test #127: dfccsd-grad1 ..................... Passed 12.88 sec; Start 221: mints-benchmark; 145/413 Test #152: dfomp2p5-1 ....................... Passed 12.39 sec; Start 93: ci-multi; 146/413 Test #278: opt11 ............................ Passed 47.74 sec; Start 362: x2c1; 147/413 Test #24: cc12 ............................. Passed 7.89 sec; Start 2: adc2; 148/413 Test #299: pubchem1 ......................... Passed 64.73 sec; Start 198: fd-gradient; 149/413 Test #362: x2c1 ............................. Passed 4.60 sec; Start 133: dfmp2-3; 150/413 Test #101: ci-property ...................... Passed 54.08 sec; Start 111: dcft3; 151/413 Test #111: dcft3 ............................ Passed 3.43 sec; Start 54: cc37; 152/413 Test #172: dft1-alt ......................... Passed 50.47 sec; Start 339: scf6; 153/413 Test #54: cc37 ............................. Passed 4.07 sec; Start 314: rasci-ne; 154/413 Test #164: dft-grad-meta .................... Passed 53.14 sec; Start 73: cc54; 155/413 Test #108: dcft-grad4 ....................... Passed 32.86 sec; Start 49: cc32; 156/413 Test #338: scf5 ............................. Passed 27.19 sec; Start 325: sapt7; 157/413 Test #93: ci-multi ......................... Passed 17.51 sec; Start 135: dfmp2-ecp; 158/413 Test #276: opt8 ............................. Passed 24.70 sec; Start 131: dfmp2-1; 159/413 Test #49: cc32 ............................. Passed 7.34 sec; Start 51: cc34; 160/413 Test,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:14018,Test,Test,14018,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['Test'],['Test']
Testability,Test #196: fd-freq-gradient ................. Passed 51.16 sec; Start 85: cdomp2-2; 140/413 Test #152: dfomp2p5-1 ....................... Passed 40.42 sec; Start 127: dfccsd-grad1; 141/413 Test #49: cc32 ............................. Passed 29.39 sec; Start 148: dfomp3-1; 142/413 Test #74: cc55 ............................. Passed 87.98 sec; Start 394: python-cc54; 143/413 Test #276: opt8 ............................. Passed 42.07 sec; Start 111: dcft3; 144/413 Test #108: dcft-grad4 ....................... Passed 46.24 sec; Start 2: adc2; 145/413 Test #23: cc11 ............................. Passed 48.45 sec; Start 309: pywrap-db1; 146/413 Test #22: cc10 ............................. Passed 62.56 sec; Start 51: cc34; 147/413 Test #254: omp2-grad2 ....................... Passed 47.57 sec; Start 198: fd-gradient; 148/413 Test #221: mints-benchmark .................. Passed 44.46 sec; Start 54: cc37; 149/413 Test #350: sapt-compare ..................... Passed 47.15 sec; Start 338: scf5; 150/413 Test #85: cdomp2-2 ......................... Passed 50.40 sec; Start 24: cc12; 151/413 Test #127: dfccsd-grad1 ..................... Passed 50.32 sec; Start 93: ci-multi; 152/413 Test #111: dcft3 ............................ Passed 36.01 sec; Start 133: dfmp2-3; 153/413 Test #2: adc2 ............................. Passed 35.27 sec; Start 73: cc54; 154/413 Test #51: cc34 ............................. Passed 32.68 sec; Start 284: opt-irc-3; 155/413 Test #148: dfomp3-1 ......................... Passed 60.15 sec; Start 339: scf6; 156/413 Test #309: pywrap-db1 ....................... Passed 45.27 sec; Start 325: sapt7; 157/413 Test #198: fd-gradient ...................... Passed 44.67 sec; Start 266: opt-lindep-change; 158/413 Test #66: cc48 ............................. Passed 106.95 sec; Start 130: dfccsdat1; 159/413 Test #394: python-cc54 ...................... Passed 69.22 sec; Start 314: rasci-ne; 160/413 Test #54: cc37 ............................. Passed 47.11 sec; Start 16: cbs,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:14135,Test,Test,14135,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Test #196: fd-freq-gradient-large ........... Passed 312.40 sec; Start 260: omp3-3; 44/412 Test #159: dfscf-bz2 ........................ Passed 150.66 sec; Start 27: cc13b; 45/412 Test #98: cisd-opt-fd ...................... Passed 165.52 sec; Start 26: cc13a; 46/412 Test #105: dcft-grad2 ....................... Passed 142.01 sec; Start 114: dcft7; 47/412 Test #348: sapt-dft2 ........................ Passed 127.97 sec; Start 206: frac-traverse; 48/412 Test #75: cc5a ............................. Passed 116.05 sec; Start 317: sapt2; 49/412 Test #184: isapt2 ........................... Passed 121.27 sec; Start 319: sapt4; 50/412 Test #303: pywrap-cbs1 ...................... Passed 132.02 sec; Start 326: scf-bz2; 51/412 Test #155: dft-grad-lr2 ..................... Passed 112.86 sec; Start 262: omp3-5; 52/412 Test #92: cepa-module ...................... Passed 134.25 sec; Start 372: dft-custom-dhdf; 53/412 Test #27: cc13b ............................ Passed 61.84 sec; Start 281: opt-irc-1; 54/412 Test #260: omp3-3 ........................... Passed 75.45 sec; Start 17: cbs-xtpl-opt; 55/412 Test #262: omp3-5 ........................... Passed 37.38 sec; Start 116: dcft9; 56/412 Test #169: dft1 ............................. Passed 111.17 sec; Start 76: cc6; 57/412 Test #116: dcft9 ............................ Passed 29.49 sec; Start 28: cc13c; 58/412 Test #17: cbs-xtpl-opt ..................... Passed 65.63 sec; Start 280: opt14; 59/412 Test #28: cc13c ............................ Passed 20.50 sec; Start 31: cc15; 60/412 Test #281: opt-irc-1 ........................ Passed 90.19 sec; Start 231: mp2-module; 61/412 Test #372: dft-custom-dhdf .................. Passed 101.66 sec; Start 70: cc51; 62/412 Test #194: fd-freq-energy-large ............. Passed 554.36 sec; Start 19: cbs-xtpl-nbody; 63/412 Test #31: cc15 ............................. Passed 28.61 sec; Start 318: sapt3; 64/412 Test #76: cc6 .............................. Passed 69.60 sec; Start 108: dcft1; 65/412 Te,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:5382,Test,Test,5382,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['Test'],['Test']
Testability,Test #197: fd-gradient ...................... Passed 42.33 sec; Start 123: dfccd-grad1; 165/412 Test #347: sapt-dft1 ........................ Passed 28.00 sec; Start 323: sapt-dft-lrc; 166/412 Test #50: cc33 ............................. Passed 49.28 sec; Start 64: cc46; 167/412 Test #153: dfomp2p5-grad1 ................... Passed 51.79 sec; Start 74: cc55; 168/412 Test #359: tu5-sapt ......................... Passed 22.94 sec; Start 273: opt6; 169/412 Test #323: sapt-dft-lrc ..................... Passed 21.56 sec; Start 291: psimrcc-ccsd_t-4; 170/412 Test #126: dfccsd-grad1 ..................... Passed 67.76 sec; Start 268: opt2; 171/412 Test #78: cc8 .............................. Passed 94.88 sec; Start 147: dfomp3-1; 172/412 Test #123: dfccd-grad1 ...................... Passed 25.96 sec; Start 33: cc17; 173/412 Test #173: dft3 ............................. Passed 26.79 sec; Start 316: sapt1; 174/412 Test #201: fnocc2 ........................... Passed 84.40 sec; Start 246: ocepa3; 175/412 Test #248: omp2-2 ........................... Passed 30.61 sec; Start 23: cc11; 176/412 Test #149: dfomp3-grad1 ..................... Passed 44.45 sec; Start 52: cc35; 177/412 Test #72: cc53 ............................. Passed 59.55 sec; Start 283: opt-irc-3; 178/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 19.87 sec; Start 278: opt12; 179/412 Test #273: opt6 ............................. Passed 26.74 sec; Start 166: dft-grad2; 180/412 Test #34: cc18 ............................. Passed 51.43 sec; Start 322: sapt-dft-api; 181/412 Test #85: cdomp2-2 ......................... Passed 51.89 sec; Start 154: dft-grad-lr1; 182/412 Test #316: sapt1 ............................ Passed 19.12 sec; Start 203: fnocc4; 183/412 Test #147: dfomp3-1 ......................... Passed 21.93 sec; Start 200: fnocc1; 184/412 Test #268: opt2 ............................. Passed 22.81 sec; Start 178: extern2; 185/412 Test #64: cc46 ............................. Passed 42.40 sec; Start 297:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:16479,Test,Test,16479,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #197: fnocc3 ........................... Passed 28.90 sec; Start 108: dcft3; 215/401 Test #361: dft-smoke ........................ Passed 20.87 sec; Start 222: mp2-1; 216/401 Test #91: ci-multi ......................... Passed 39.51 sec; Start 249: omp2p5-1; 217/401 Test #135: dfmp2-grad3 ...................... Passed 7.72 sec; Start 33: cc18; 218/401 Test #136: dfmp2-grad4 ...................... Passed 15.13 sec; Start 213: mints6; 219/401 Test #306: rasci-c2-active .................. Passed 11.86 sec; Start 352: tu4-h2o-freq; 220/401 Test #172: extern1 .......................... Passed 33.19 sec; Start 365: scf-coverage; 221/401 Test #3: casscf-fzc-sp .................... Passed 31.47 sec; Start 48: cc32; 222/401 Test #26: cc13b ............................ Passed 111.05 sec; Start 7: casscf-sp; 223/401 Test #237: ocepa-grad1 ...................... Passed 20.61 sec; Start 358: zaptn-nh2; 224/401 Test #213: mints6 ........................... Passed 4.57 sec; Start 132: dfmp2-ecp; 225/401 Test #249: omp2p5-1 ......................... Passed 5.45 sec; Start 125: dfccsd-t-grad1; 226/401 Test #358: zaptn-nh2 ........................ Passed 2.73 sec; Start 243: omp2-2; 227/401 Test #56: cc4 .............................. Passed 53.51 sec; Start 353: tu5-sapt; 228/401 Test #389: python-cc54 ...................... Passed 45.82 sec; Start 121: dfccd-grad1; 229/401 Test #365: scf-coverage ..................... Passed 8.70 sec; Start 182: fci-h2o-2; 230/401 Test #83: cdomp2-2 ......................... Passed 49.94 sec; Start 250: omp2p5-2; 231/401 Test #320: sapt8 ............................ Passed 17.13 sec; Start 100: cubeprop; 232/401 Test #222: mp2-1 ............................ Passed 12.18 sec; Start 186: fci-coverage; 233/401 Test #195: fnocc1 ........................... Passed 27.92 sec; Start 85: cepa0-grad2; 234/401 Test #106: dcft1 ............................ Passed 89.98 sec; Start 311: sapt1; 235/401 Test #182: fci-h2o-2 ........................ Passed 4.2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:21384,Test,Test,21384,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Test #197: freq-isotope1 .................... Passed 6.33 sec; Start 198: freq-isotope2; 204/411 Test #198: freq-isotope2 .................... Passed 3.43 sec; Start 199: fnocc1; 205/411 Test #199: fnocc1 ........................... Passed 2.95 sec; Start 200: fnocc2; 206/411 Test #200: fnocc2 ........................... Passed 11.37 sec; Start 201: fnocc3; 207/411 Test #201: fnocc3 ........................... Passed 2.72 sec; Start 202: fnocc4; 208/411 Test #202: fnocc4 ........................... Passed 11.17 sec; Start 203: frac; 209/411 Test #203: frac ............................. Passed 1.62 sec; Start 204: frac-ip-fitting; 210/411 Test #204: frac-ip-fitting .................. Passed 55.62 sec; Start 206: ghosts; 211/411 Test #206: ghosts ........................... Passed 29.11 sec; Start 207: gibbs; 212/411 Test #207: gibbs ............................ Passed 9.11 sec; Start 208: matrix1; 213/411 Test #208: matrix1 .......................... Passed 0.59 sec; Start 209: mcscf1; 214/411 Test #209: mcscf1 ........................... Passed 0.76 sec; Start 210: mcscf2; 215/411 Test #210: mcscf2 ........................... Passed 1.35 sec; Start 211: mcscf3; 216/411 Test #211: mcscf3 ........................... Passed 0.73 sec; Start 212: mints1; 217/411 Test #212: mints1 ........................... Passed 0.58 sec; Start 213: mints2; 218/411 Test #213: mints2 ........................... Passed 2.07 sec; Start 214: mints3; 219/411 Test #214: mints3 ........................... Passed 1.08 sec; Start 215: mints4; 220/411 Test #215: mints4 ........................... Passed 0.62 sec; Start 216: mints5; 221/411 Test #216: mints5 ........................... Passed 0.73 sec; Start 217: mints6; 222/411 Test #217: mints6 ........................... Passed 10.06 sec; Start 218: mints8; 223/411 Test #218: mints8 ........................... Passed 12.89 sec; Start 219: mints-benchmark; 224/411 Test #219: mints-benchmark .................. Passed 37.88 sec; Start 220: mints-,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:19491,Test,Test,19491,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #198: freq-isotope2 .................... Passed 8.20 sec; Start 234: mp3-grad2; 276/411 Test #6: ao-casscf-sp ..................... Passed 5.33 sec; Start 339: scf-property; 277/411 Test #83: cdomp2-1 ......................... Passed 7.43 sec; Start 9: castup2; 278/411 Test #269: opt3 ............................. Passed 5.42 sec; Start 10: castup3; 279/411 Test #199: fnocc1 ........................... Passed 13.51 sec; Start 233: mp3-grad1; 280/411 Test #108: dcft2 ............................ Passed 8.11 sec; Start 117: dfcasscf-sa-sp; 281/411 Test #234: mp3-grad2 ........................ Passed 4.58 sec; Start 3: casscf-fzc-sp; 282/411 Test #329: scf-guess-read2 .................. Passed 6.02 sec; Start 331: scf1; 283/411 Test #233: mp3-grad1 ........................ Passed 1.89 sec; Start 171: dft2; 284/411 Test #339: scf-property ..................... Passed 5.57 sec; Start 344: dfep2-1; 285/411 Test #117: dfcasscf-sa-sp ................... Passed 5.69 sec; Start 265: opt1; 286/411 Test #344: dfep2-1 .......................... Passed 4.11 sec; Start 223: molden1; 287/411 Test #331: scf1 ............................. Passed 5.42 sec; Start 190: fci-coverage; 288/411 Test #10: castup3 .......................... Passed 8.69 sec; Start 86: cepa0-grad2; 289/411 Test #171: dft2 ............................. Passed 5.48 sec; Start 134: dfmp2-grad1; 290/411 Test #9: castup2 .......................... Passed 10.20 sec; Start 85: cepa0-grad1; 291/411 Test #265: opt1 ............................. Passed 5.72 sec; Start 179: fsapt2; 292/411 Test #134: dfmp2-grad1 ...................... Passed 5.24 sec; Start 136: dfmp2-grad3; 293/411 Test #3: casscf-fzc-sp .................... Passed 11.70 sec; Start 187: fci-h2o-fzcv; 294/411 Test #85: cepa0-grad1 ...................... Passed 5.54 sec; Start 376: pywrap-align; 295/411 Test #223: molden1 .......................... Passed 6.44 sec; Start 385: psi4numpy-fci; 296/411 Test #190: fci-coverage ..................... Passed 6,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:26634,Test,Test,26634,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Test #200: fnocc2 ........................... Passed 53.28 sec; Start 211: mcscf3; 209/411 Test #210: mcscf2 ........................... Passed 1.72 sec; Start 212: mints1; 210/411 Test #212: mints1 ........................... Passed 0.52 sec; Start 213: mints2; 211/411 Test #211: mcscf3 ........................... Passed 1.10 sec; Start 214: mints3; 212/411 Test #214: mints3 ........................... Passed 1.03 sec; Start 215: mints4; 213/411 Test #215: mints4 ........................... Passed 0.51 sec; Start 216: mints5; 214/411 Test #216: mints5 ........................... Passed 0.58 sec; Start 217: mints6; 215/411 Test #213: mints2 ........................... Passed 3.45 sec; Start 218: mints8; 216/411 Test #207: gibbs ............................ Passed 20.68 sec; Start 219: mints-benchmark; 217/411 Test #217: mints6 ........................... Passed 12.24 sec; Start 220: mints-helper; 218/411 Test #220: mints-helper ..................... Passed 1.95 sec; Start 221: mints9; 219/411 Test #221: mints9 ........................... Passed 1.96 sec; Start 222: mints10; 220/411 Test #218: mints8 ........................... Passed 17.33 sec; Start 223: molden1; 221/411 Test #222: mints10 .......................... Passed 2.31 sec; Start 224: molden2; 222/411 Test #206: ghosts ........................... Passed 35.46 sec; Start 225: mom; 223/411 Test #224: molden2 .......................... Passed 4.76 sec; Start 226: mp2-1; 224/411 Test #223: molden1 .......................... Passed 5.33 sec; Start 227: mp2-def2; 225/411 Test #225: mom .............................. Passed 4.07 sec; Start 228: mp2-grad1; 226/411 Test #228: mp2-grad1 ........................ Passed 3.01 sec; Start 229: mp2-grad2; 227/411 Test #229: mp2-grad2 ........................ Passed 6.82 sec; Start 230: mp2-module; 228/411 Test #226: mp2-1 ............................ Passed 12.93 sec; Start 231: mp2p5-grad1; 229/411 Test #231: mp2p5-grad1 ...................... Passed 3.93 sec; Start 232:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:20213,Test,Test,20213,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Test #201: fnocc2 ........................... Passed 84.40 sec; Start 246: ocepa3; 175/412 Test #248: omp2-2 ........................... Passed 30.61 sec; Start 23: cc11; 176/412 Test #149: dfomp3-grad1 ..................... Passed 44.45 sec; Start 52: cc35; 177/412 Test #72: cc53 ............................. Passed 59.55 sec; Start 283: opt-irc-3; 178/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 19.87 sec; Start 278: opt12; 179/412 Test #273: opt6 ............................. Passed 26.74 sec; Start 166: dft-grad2; 180/412 Test #34: cc18 ............................. Passed 51.43 sec; Start 322: sapt-dft-api; 181/412 Test #85: cdomp2-2 ......................... Passed 51.89 sec; Start 154: dft-grad-lr1; 182/412 Test #316: sapt1 ............................ Passed 19.12 sec; Start 203: fnocc4; 183/412 Test #147: dfomp3-1 ......................... Passed 21.93 sec; Start 200: fnocc1; 184/412 Test #268: opt2 ............................. Passed 22.81 sec; Start 178: extern2; 185/412 Test #64: cc46 ............................. Passed 42.40 sec; Start 297: psithon2; 186/412 Test #52: cc35 ............................. Passed 24.32 sec; Start 202: fnocc3; 187/412 Test #74: cc55 ............................. Passed 45.69 sec; Start 55: cc38; 188/412 Test #33: cc17 ............................. Passed 30.45 sec; Start 16: cbs-xtpl-gradient; 189/412 Test #23: cc11 ............................. Passed 29.96 sec; Start 73: cc54; 190/412 Test #200: fnocc1 ........................... Passed 12.18 sec; Start 267: opt1-fd; 191/412 Test #166: dft-grad2 ........................ Passed 17.30 sec; Start 292: psimrcc-fd-freq1; 192/412 Test #322: sapt-dft-api ..................... Passed 17.66 sec; Start 219: mints8; 193/412 Test #154: dft-grad-lr1 ..................... Passed 17.73 sec; Start 170: dft-vv10; 194/412 Test #278: opt12 ............................ Passed 20.24 sec; Start 253: omp2-grad2; 195/412 Test #283: opt-irc-3 ........................ Passed 28.90 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:17398,Test,Test,17398,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #202: fnocc2 ........................... Passed 38.75 sec; Start 55: cc38; 120/413 Test #34: cc18 ............................. Passed 31.77 sec; Start 278: opt11; 121/413 Test #394: python-cc54 ...................... Passed 22.07 sec; Start 101: ci-property; 122/413 Test #22: cc10 ............................. Passed 23.54 sec; Start 57: cc4; 123/413 Test #169: dft-b3lyp ........................ Passed 69.47 sec; Start 196: fd-freq-gradient; 124/413 Test #150: dfomp3-grad1 ..................... Passed 15.81 sec; Start 23: cc11; 125/413 Test #318: sapt2 ............................ Passed 352.30 sec; Start 154: dfomp2p5-grad1; 126/413 Test #67: cc49 ............................. Passed 41.04 sec; Start 172: dft1-alt; 127/413 Test #55: cc38 ............................. Passed 9.24 sec; Start 50: cc33; 128/413 Test #23: cc11 ............................. Passed 8.19 sec; Start 164: dft-grad-meta; 129/413 Test #69: cc50 ............................. Passed 40.76 sec; Start 52: cc35; 130/413 Test #57: cc4 .............................. Passed 11.85 sec; Start 38: cc22; 131/413 Test #154: dfomp2p5-grad1 ................... Passed 16.49 sec; Start 148: dfomp3-1; 132/413 Test #38: cc22 ............................. Passed 11.28 sec; Start 33: cc17; 133/413 Test #275: opt7 ............................. Passed 42.19 sec; Start 85: cdomp2-2; 134/413 Test #50: cc33 ............................. Passed 19.32 sec; Start 254: omp2-grad2; 135/413 Test #391: python-pubchem ................... Passed 64.38 sec; Start 63: cc45; 136/413 Test #52: cc35 ............................. Passed 19.03 sec; Start 127: dfccsd-grad1; 137/413 Test #148: dfomp3-1 ......................... Passed 7.43 sec; Start 108: dcft-grad4; 138/413 Test #196: fd-freq-gradient ................. Passed 33.45 sec; Start 152: dfomp2p5-1; 139/413 Test #85: cdomp2-2 ......................... Passed 11.51 sec; Start 350: sapt-compare; 140/413 Test #239: nbody-he-cluster ................. Passed 40.41 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:12275,Test,Test,12275,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['Test'],['Test']
Testability,Test #205: fnocc4 ........................... Passed 22.18 sec; Start 293: opt-full-hess-every; 61/415 Test #6: ao-casscf-sp ..................... Passed 5.22 sec; Start 357: sapt-dft1; 62/415 Test #377: dft-smoke ........................ Passed 22.20 sec; Start 201: freq-isotope2; 63/415 Test #252: ocepa1 ........................... Passed 8.85 sec; Start 194: fcidump; 64/415 Test #260: omp2-grad1 ....................... Passed 9.57 sec; Start 266: omp3-1; 65/415 Test #132: dfmp2-1 .......................... Passed 16.83 sec; Start 334: sapt8; 66/415 Test #194: fcidump .......................... Passed 7.22 sec; Start 226: molden1; 67/415 Test #142: dfomp2-1 ......................... Passed 12.15 sec; Start 274: opt1; 68/415 Test #103: cubeprop ......................... Passed 12.58 sec; Start 227: molden2; 69/415 Test #368: tu4-h2o-freq ..................... Passed 13.90 sec; Start 8: castup1; 70/415 Test #201: freq-isotope2 .................... Passed 11.36 sec; Start 369: tu5-sapt; 71/415 Test #172: dft-vv10 ......................... Passed 16.42 sec; Start 160: dfrasscf-sp; 72/415 Test #357: sapt-dft1 ........................ Passed 14.97 sec; Start 292: opt-freeze-coords; 73/415 Test #293: opt-full-hess-every .............. Passed 15.99 sec; Start 305: psithon1; 74/415 Test #8: castup1 .......................... Passed 4.90 sec; Start 137: dfmp2-grad1; 75/415 Test #266: omp3-1 ........................... Passed 10.08 sec; Start 376: cubeprop-esp; 76/415 Test #274: opt1 ............................. Passed 11.75 sec; Start 325: sapt1; 77/415 Test #226: molden1 .......................... Passed 14.09 sec; Start 378: scf-hess1; 78/415 Test #227: molden2 .......................... Passed 12.71 sec; Start 239: mpn-bh; 79/415 Test #292: opt-freeze-coords ................ Passed 8.13 sec; Start 234: mp2p5-grad1; 80/415 Test #334: sapt8 ............................ Passed 16.61 sec; Start 123: dfccd1; 81/415 Test #369: tu5-sapt ......................... Passed 12.10 se,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:6944,Test,Test,6944,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #209: mcscf1 ........................... Passed 0.76 sec; Start 210: mcscf2; 215/411 Test #210: mcscf2 ........................... Passed 1.35 sec; Start 211: mcscf3; 216/411 Test #211: mcscf3 ........................... Passed 0.73 sec; Start 212: mints1; 217/411 Test #212: mints1 ........................... Passed 0.58 sec; Start 213: mints2; 218/411 Test #213: mints2 ........................... Passed 2.07 sec; Start 214: mints3; 219/411 Test #214: mints3 ........................... Passed 1.08 sec; Start 215: mints4; 220/411 Test #215: mints4 ........................... Passed 0.62 sec; Start 216: mints5; 221/411 Test #216: mints5 ........................... Passed 0.73 sec; Start 217: mints6; 222/411 Test #217: mints6 ........................... Passed 10.06 sec; Start 218: mints8; 223/411 Test #218: mints8 ........................... Passed 12.89 sec; Start 219: mints-benchmark; 224/411 Test #219: mints-benchmark .................. Passed 37.88 sec; Start 220: mints-helper; 225/411 Test #220: mints-helper ..................... Passed 1.31 sec; Start 221: mints9; 226/411 Test #221: mints9 ........................... Passed 1.97 sec; Start 222: mints10; 227/411 Test #222: mints10 .......................... Passed 1.18 sec; Start 223: molden1; 228/411 Test #223: molden1 .......................... Passed 1.41 sec; Start 224: molden2; 229/411 Test #224: molden2 .......................... Passed 1.31 sec; Start 225: mom; 230/411 Test #225: mom .............................. Passed 2.22 sec; Start 226: mp2-1; 231/411 Test #226: mp2-1 ............................ Passed 2.04 sec; Start 227: mp2-def2; 232/411 Test #227: mp2-def2 ......................... Passed 373.75 sec; Start 228: mp2-grad1; 233/411 Test #228: mp2-grad1 ........................ Passed 1.70 sec; Start 229: mp2-grad2; 234/411 Test #229: mp2-grad2 ........................ Passed 1.52 sec; Start 230: mp2-module; 235/411 Test #230: mp2-module ....................... Passed 35.44 sec; Start 231: mp2p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:20499,Test,Test,20499,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #209: mcscf1 ........................... Passed 0.98 sec; Start 210: mcscf2; 208/411 Test #200: fnocc2 ........................... Passed 53.28 sec; Start 211: mcscf3; 209/411 Test #210: mcscf2 ........................... Passed 1.72 sec; Start 212: mints1; 210/411 Test #212: mints1 ........................... Passed 0.52 sec; Start 213: mints2; 211/411 Test #211: mcscf3 ........................... Passed 1.10 sec; Start 214: mints3; 212/411 Test #214: mints3 ........................... Passed 1.03 sec; Start 215: mints4; 213/411 Test #215: mints4 ........................... Passed 0.51 sec; Start 216: mints5; 214/411 Test #216: mints5 ........................... Passed 0.58 sec; Start 217: mints6; 215/411 Test #213: mints2 ........................... Passed 3.45 sec; Start 218: mints8; 216/411 Test #207: gibbs ............................ Passed 20.68 sec; Start 219: mints-benchmark; 217/411 Test #217: mints6 ........................... Passed 12.24 sec; Start 220: mints-helper; 218/411 Test #220: mints-helper ..................... Passed 1.95 sec; Start 221: mints9; 219/411 Test #221: mints9 ........................... Passed 1.96 sec; Start 222: mints10; 220/411 Test #218: mints8 ........................... Passed 17.33 sec; Start 223: molden1; 221/411 Test #222: mints10 .......................... Passed 2.31 sec; Start 224: molden2; 222/411 Test #206: ghosts ........................... Passed 35.46 sec; Start 225: mom; 223/411 Test #224: molden2 .......................... Passed 4.76 sec; Start 226: mp2-1; 224/411 Test #223: molden1 .......................... Passed 5.33 sec; Start 227: mp2-def2; 225/411 Test #225: mom .............................. Passed 4.07 sec; Start 228: mp2-grad1; 226/411 Test #228: mp2-grad1 ........................ Passed 3.01 sec; Start 229: mp2-grad2; 227/411 Test #229: mp2-grad2 ........................ Passed 6.82 sec; Start 230: mp2-module; 228/411 Test #226: mp2-1 ............................ Passed 12.93 sec; Start 231: mp2p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:20123,Test,Test,20123,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Test #209: mcscf1 ........................... Passed 1.10 sec; Start 210: mcscf2; 208/411 Test #210: mcscf2 ........................... Passed 1.64 sec; Start 211: mcscf3; 209/411 Test #211: mcscf3 ........................... Passed 0.97 sec; Start 212: mints1; 210/411 Test #212: mints1 ........................... Passed 0.62 sec; Start 213: mints2; 211/411 Test #213: mints2 ........................... Passed 3.17 sec; Start 214: mints3; 212/411 Test #214: mints3 ........................... Passed 1.12 sec; Start 215: mints4; 213/411 Test #215: mints4 ........................... Passed 0.58 sec; Start 216: mints5; 214/411 Test #207: gibbs ............................ Passed 21.62 sec; Start 217: mints6; 215/411 Test #216: mints5 ........................... Passed 0.65 sec; Start 218: mints8; 216/411 Test #200: fnocc2 ........................... Passed 54.94 sec; Start 219: mints-benchmark; 217/411 Test #206: ghosts ........................... Passed 34.38 sec; Start 220: mints-helper; 218/411 Test #220: mints-helper ..................... Passed 1.34 sec; Start 221: mints9; 219/411 Test #221: mints9 ........................... Passed 2.00 sec; Start 222: mints10; 220/411 Test #222: mints10 .......................... Passed 1.63 sec; Start 223: molden1; 221/411 Test #217: mints6 ........................... Passed 16.04 sec; Start 224: molden2; 222/411 Test #218: mints8 ........................... Passed 18.09 sec; Start 225: mom; 223/411 Test #223: molden1 .......................... Passed 5.30 sec; Start 226: mp2-1; 224/411 Test #225: mom .............................. Passed 3.92 sec; Start 227: mp2-def2; 225/411 Test #224: molden2 .......................... Passed 6.41 sec; Start 228: mp2-grad1; 226/411 Test #228: mp2-grad1 ........................ Passed 4.16 sec; Start 229: mp2-grad2; 227/411 Test #226: mp2-1 ............................ Passed 12.01 sec; Start 230: mp2-module; 228/411 Test #229: mp2-grad2 ........................ Passed 7.55 sec; Start 231: mp2p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:20122,Test,Test,20122,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Test #20: cbs-xtpl-wrapper ................. Passed 52.36 sec; Start 145: dfomp2-grad2; 81/412 Test #293: psimrcc-fd-freq2 ................. Passed 76.06 sec; Start 31: cc15; 82/412 Test #28: cc13c ............................ Passed 20.22 sec; Start 44: cc28; 83/412 Test #31: cc15 ............................. Passed 30.15 sec; Start 264: omp3-grad2; 84/412 Test #145: dfomp2-grad2 ..................... Passed 33.33 sec; Start 27: cc13b; 85/412 Test #62: cc44 ............................. Passed 57.63 sec; Start 390: python-pubchem; 86/412 Test #205: frac-ip-fitting .................. Passed 71.71 sec; Start 262: omp3-5; 87/412 Test #168: dft-b3lyp ........................ Passed 75.48 sec; Start 245: ocepa2; 88/412 Test #27: cc13b ............................ Passed 23.72 sec; Start 243: ocepa-grad2; 89/412 Test #264: omp3-grad2 ....................... Passed 24.30 sec; Start 257: omp2p5-grad2; 90/412 Test #44: cc28 ............................. Passed 51.88 sec; Start 150: dfomp3-grad2; 91/412 Test #262: omp3-5 ........................... Passed 20.80 sec; Start 298: pubchem1; 92/412 Test #150: dfomp3-grad2 ..................... Passed 30.23 sec; Start 300: pywrap-alias; 93/412 Test #257: omp2p5-grad2 ..................... Passed 31.49 sec; Start 35: cc19; 94/412 Test #245: ocepa2 ........................... Passed 37.86 sec; Start 58: cc40; 95/412 Test #243: ocepa-grad2 ...................... Passed 32.33 sec; Start 69: cc50; 96/412 Test #390: python-pubchem ................... Passed 60.96 sec; Start 157: dfomp2p5-grad2; 97/412 Test #35: cc19 ............................. Passed 36.78 sec; Start 83: cc9a; 98/412 Test #157: dfomp2p5-grad2 ................... Passed 27.45 sec; Start 101: ci-property; 99/412 Test #58: cc40 ............................. Passed 42.80 sec; Start 60: cc42; 100/412 Test #300: pywrap-alias ..................... Passed 45.62 sec; Start 66: cc48; 101/412 Test #298: pubchem1 ......................... Passed 68.60 sec; Start 67: cc49; 102/412,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:8596,Test,Test,8596,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Test #20: cbs-xtpl-wrapper ................. Passed 78.50 sec; Start 294: psimrcc-fd-freq2; 99/413 Test #282: opt-irc-1 ........................ Passed 94.89 sec; Start 50: cc33; 100/413 Test #327: scf-bz2 .......................... Passed 118.72 sec; Start 33: cc17; 101/413 Test #391: python-pubchem ................... Passed 60.41 sec; Start 63: cc45; 102/413 Test #319: sapt3 ............................ Passed 76.94 sec; Start 56: cc39; 103/413 Test #17: cbs-xtpl-opt ..................... Passed 105.69 sec; Start 206: frac-ip-fitting; 104/413 Test #321: sapt5 ............................ Passed 74.14 sec; Start 68: cc4a; 105/413 Test #69: cc50 ............................. Passed 50.27 sec; Start 101: ci-property; 106/413 Test #247: ocepa3 ........................... Passed 59.63 sec; Start 169: dft-b3lyp; 107/413 Test #50: cc33 ............................. Passed 44.16 sec; Start 275: opt7; 108/413 Test #63: cc45 ............................. Passed 27.72 sec; Start 150: dfomp3-grad1; 109/413 Test #33: cc17 ............................. Passed 42.65 sec; Start 49: cc32; 110/413 Test #194: fd-freq-energy ................... Passed 91.14 sec; Start 299: pubchem1; 111/413 Test #294: psimrcc-fd-freq2 ................. Passed 76.06 sec; Start 379: pywrap-align-chiral; 112/413 Test #56: cc39 ............................. Passed 54.19 sec; Start 278: opt11; 113/413 Test #49: cc32 ............................. Passed 28.02 sec; Start 164: dft-grad-meta; 114/413 Test #379: pywrap-align-chiral .............. Passed 8.08 sec; Start 304: pywrap-cbs1; 115/413 Test #68: cc4a ............................. Passed 50.42 sec; Start 202: fnocc2; 116/413 Test #150: dfomp3-grad1 ..................... Passed 36.83 sec; Start 85: cdomp2-2; 117/413 Test #101: ci-property ...................... Passed 55.52 sec; Start 154: dfomp2p5-grad1; 118/413 Test #275: opt7 ............................. Passed 53.16 sec; Start 378: pywrap-align; 119/413 Test #206: frac-ip-fitting ..................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:10324,Test,Test,10324,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Test #20: cc1 .............................. Passed 48.25 sec; Start 303: pywrap-checkrun-convcrit; 153/411 Test #245: ocepa3 ........................... Passed 33.70 sec; Start 63: cc46; 154/411 Test #169: dft-vv10 ......................... Passed 15.24 sec; Start 272: opt6; 155/411 Test #340: soscf-large ...................... Passed 14.07 sec; Start 301: pywrap-basis; 156/411 Test #303: pywrap-checkrun-convcrit ......... Passed 17.59 sec; Start 81: cc9; 157/411 Test #82: cc9a ............................. Passed 31.21 sec; Start 202: fnocc4; 158/411 Test #301: pywrap-basis ..................... Passed 13.95 sec; Start 33: cc18; 159/411 Test #153: dfomp2p5-grad2 ................... Passed 43.43 sec; Start 218: mints8; 160/411 Test #12: cbs-parser ....................... Passed 34.34 sec; Start 164: dft-grad1; 161/411 Test #63: cc46 ............................. Passed 21.10 sec; Start 71: cc53; 162/411 Test #272: opt6 ............................. Passed 19.80 sec; Start 313: rasscf-sp; 163/411 Test #81: cc9 .............................. Passed 12.85 sec; Start 49: cc33; 164/411 Test #313: rasscf-sp ........................ Passed 6.83 sec; Start 286: props3; 165/411 Test #33: cc18 ............................. Passed 12.43 sec; Start 138: dfmp2-grad5; 166/411 Test #71: cc53 ............................. Passed 8.74 sec; Start 282: opt-irc-3; 167/411 Test #202: fnocc4 ........................... Passed 16.34 sec; Start 51: cc35; 168/411 Test #218: mints8 ........................... Passed 14.77 sec; Start 5: casscf-sa-sp; 169/411 Test #164: dft-grad1 ........................ Passed 14.38 sec; Start 350: dft-custom; 170/411 Test #49: cc33 ............................. Passed 7.11 sec; Start 256: omp2p5-grad2; 171/411 Test #51: cc35 ............................. Passed 7.28 sec; Start 152: dfomp2p5-grad1; 172/411 Test #138: dfmp2-grad5 ...................... Passed 11.47 sec; Start 217: mints6; 173/411 Test #5: casscf-sa-sp ..................... Passed 8.94 sec; Sta,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:15209,Test,Test,15209,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,"Test #210: mcscf1 ........................... Passed 13.81 sec; Start 410: skeletonscf; 400/412 Test #383: psi4numpy-rhf .................... Passed 14.91 sec; Start 209: matrix1; 401/412 Test #240: numpy-array-interface ............ Passed 13.74 sec; Start 176: docs-dft; 402/412 Test #213: mints1 ........................... Passed 14.04 sec; Start 365: options1; 403/412 Test #309: pywrap-db3 ....................... Passed 13.36 sec; Start 403: json-schema-1-throws; 404/412 Test #175: docs-bases ....................... Passed 13.52 sec; Start 88: cepa1; 405/412 Test #216: mints4 ........................... Passed 13.68 sec; 406/412 Test #209: matrix1 .......................... Passed 13.44 sec; 407/412 Test #410: skeletonscf ...................... Passed 14.54 sec; 408/412 Test #176: docs-dft ......................... Passed 13.56 sec; 409/412 Test #365: options1 ......................... Passed 12.94 sec; 410/412 Test #403: json-schema-1-throws ............. Passed 12.51 sec; 411/412 Test #88: cepa1 ............................ Passed 15.83 sec; 412/412 Test #319: sapt4 ............................ Passed 1912.45 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 95.19 sec*proc (2 tests); autotest = 994.34 sec*proc (26 tests); cart = 14957.35 sec*proc (123 tests); cas = 53.75 sec*proc (1 test); casscf = 214.86 sec*proc (11 tests); cbs = 1085.57 sec*proc (11 tests); cc = 6887.79 sec*proc (65 tests); cdomp2 = 43.27 sec*proc (2 tests); cepa = 141.35 sec*proc (7 tests); ci = 206.59 sec*proc (8 tests); cisd = 285.49 sec*proc (7 tests); cookbook = 66.55 sec*proc (1 test); cubeprop = 44.67 sec*proc (2 tests); dcft = 2708.77 sec*proc (13 tests); df = 1635.28 sec*proc (38 tests); dfccd = 16.56 sec*proc (1 test); dfccd-grad = 13.91 sec*proc (1 test); dfccdl = 26.46 sec*proc (1 test); dfccsd = 15.59 sec*proc (1 test); dfccsd-grad = 22.13 sec*proc (1 test); dfccsd-t-grad = 21.66 sec*proc (1 test); dfccsdat = 12.93 sec*proc (1 test); dfccsdl = 15.16 se",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:38468,Test,Test,38468,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Test #210: mcscf2 ........................... Passed 1.35 sec; Start 211: mcscf3; 216/411 Test #211: mcscf3 ........................... Passed 0.73 sec; Start 212: mints1; 217/411 Test #212: mints1 ........................... Passed 0.58 sec; Start 213: mints2; 218/411 Test #213: mints2 ........................... Passed 2.07 sec; Start 214: mints3; 219/411 Test #214: mints3 ........................... Passed 1.08 sec; Start 215: mints4; 220/411 Test #215: mints4 ........................... Passed 0.62 sec; Start 216: mints5; 221/411 Test #216: mints5 ........................... Passed 0.73 sec; Start 217: mints6; 222/411 Test #217: mints6 ........................... Passed 10.06 sec; Start 218: mints8; 223/411 Test #218: mints8 ........................... Passed 12.89 sec; Start 219: mints-benchmark; 224/411 Test #219: mints-benchmark .................. Passed 37.88 sec; Start 220: mints-helper; 225/411 Test #220: mints-helper ..................... Passed 1.31 sec; Start 221: mints9; 226/411 Test #221: mints9 ........................... Passed 1.97 sec; Start 222: mints10; 227/411 Test #222: mints10 .......................... Passed 1.18 sec; Start 223: molden1; 228/411 Test #223: molden1 .......................... Passed 1.41 sec; Start 224: molden2; 229/411 Test #224: molden2 .......................... Passed 1.31 sec; Start 225: mom; 230/411 Test #225: mom .............................. Passed 2.22 sec; Start 226: mp2-1; 231/411 Test #226: mp2-1 ............................ Passed 2.04 sec; Start 227: mp2-def2; 232/411 Test #227: mp2-def2 ......................... Passed 373.75 sec; Start 228: mp2-grad1; 233/411 Test #228: mp2-grad1 ........................ Passed 1.70 sec; Start 229: mp2-grad2; 234/411 Test #229: mp2-grad2 ........................ Passed 1.52 sec; Start 230: mp2-module; 235/411 Test #230: mp2-module ....................... Passed 35.44 sec; Start 231: mp2p5-grad1; 236/411 Test #231: mp2p5-grad1 ...................... Passed 1.74 sec; Start 232:,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:20589,Test,Test,20589,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #210: mcscf2 ........................... Passed 1.64 sec; Start 211: mcscf3; 209/411 Test #211: mcscf3 ........................... Passed 0.97 sec; Start 212: mints1; 210/411 Test #212: mints1 ........................... Passed 0.62 sec; Start 213: mints2; 211/411 Test #213: mints2 ........................... Passed 3.17 sec; Start 214: mints3; 212/411 Test #214: mints3 ........................... Passed 1.12 sec; Start 215: mints4; 213/411 Test #215: mints4 ........................... Passed 0.58 sec; Start 216: mints5; 214/411 Test #207: gibbs ............................ Passed 21.62 sec; Start 217: mints6; 215/411 Test #216: mints5 ........................... Passed 0.65 sec; Start 218: mints8; 216/411 Test #200: fnocc2 ........................... Passed 54.94 sec; Start 219: mints-benchmark; 217/411 Test #206: ghosts ........................... Passed 34.38 sec; Start 220: mints-helper; 218/411 Test #220: mints-helper ..................... Passed 1.34 sec; Start 221: mints9; 219/411 Test #221: mints9 ........................... Passed 2.00 sec; Start 222: mints10; 220/411 Test #222: mints10 .......................... Passed 1.63 sec; Start 223: molden1; 221/411 Test #217: mints6 ........................... Passed 16.04 sec; Start 224: molden2; 222/411 Test #218: mints8 ........................... Passed 18.09 sec; Start 225: mom; 223/411 Test #223: molden1 .......................... Passed 5.30 sec; Start 226: mp2-1; 224/411 Test #225: mom .............................. Passed 3.92 sec; Start 227: mp2-def2; 225/411 Test #224: molden2 .......................... Passed 6.41 sec; Start 228: mp2-grad1; 226/411 Test #228: mp2-grad1 ........................ Passed 4.16 sec; Start 229: mp2-grad2; 227/411 Test #226: mp2-1 ............................ Passed 12.01 sec; Start 230: mp2-module; 228/411 Test #229: mp2-grad2 ........................ Passed 7.55 sec; Start 231: mp2p5-grad1; 229/411 Test #145: dfomp2-grad3 ..................... Passed 427.26 sec; Start 23,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:20212,Test,Test,20212,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Test #211: mcscf3 ........................... Passed 0.80 sec; Start 212: mints1; 217/411 Test #212: mints1 ........................... Passed 0.59 sec; Start 213: mints2; 218/411 Test #213: mints2 ........................... Passed 2.46 sec; Start 214: mints3; 219/411 Test #214: mints3 ........................... Passed 1.16 sec; Start 215: mints4; 220/411 Test #215: mints4 ........................... Passed 0.65 sec; Start 216: mints5; 221/411 Test #216: mints5 ........................... Passed 0.68 sec; Start 217: mints6; 222/411 Test #217: mints6 ........................... Passed 9.90 sec; Start 218: mints8; 223/411 Test #218: mints8 ........................... Passed 12.53 sec; Start 219: mints-benchmark; 224/411 Test #219: mints-benchmark .................. Passed 33.55 sec; Start 220: mints-helper; 225/411 Test #220: mints-helper ..................... Passed 1.48 sec; Start 221: mints9; 226/411 Test #221: mints9 ........................... Passed 1.78 sec; Start 222: mints10; 227/411 Test #222: mints10 .......................... Passed 1.24 sec; Start 223: molden1; 228/411 Test #223: molden1 .......................... Passed 1.79 sec; Start 224: molden2; 229/411 Test #224: molden2 .......................... Passed 1.44 sec; Start 225: mom; 230/411 Test #225: mom .............................. Passed 2.09 sec; Start 226: mp2-1; 231/411 Test #226: mp2-1 ............................ Passed 2.16 sec; Start 227: mp2-def2; 232/411 Test #227: mp2-def2 ......................... Passed 342.94 sec; Start 228: mp2-grad1; 233/411 Test #228: mp2-grad1 ........................ Passed 1.52 sec; Start 229: mp2-grad2; 234/411 Test #229: mp2-grad2 ........................ Passed 1.88 sec; Start 230: mp2-module; 235/411 Test #230: mp2-module ....................... Passed 35.05 sec; Start 231: mp2p5-grad1; 236/411 Test #231: mp2p5-grad1 ...................... Passed 1.53 sec; Start 232: mp2p5-grad2; 237/411 Test #232: mp2p5-grad2 ...................... Passed 1.75 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:20653,Test,Test,20653,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #211: mcscf3 ........................... Passed 0.96 sec; Start 212: mints1; 202/411 Test #212: mints1 ........................... Passed 0.58 sec; Start 213: mints2; 203/411 Test #196: fd-gradient ...................... Passed 39.39 sec; Start 214: mints3; 204/411 Test #155: dfscf-bz2 ........................ Passed 143.01 sec; Start 215: mints4; 205/411 Test #214: mints3 ........................... Passed 0.99 sec; Start 216: mints5; 206/411 Test #213: mints2 ........................... Passed 2.55 sec; Start 217: mints6; 207/411 Test #215: mints4 ........................... Passed 0.54 sec; Start 218: mints8; 208/411 Test #216: mints5 ........................... Passed 0.62 sec; Start 219: mints-benchmark; 209/411 Test #202: fnocc4 ........................... Passed 28.48 sec; Start 220: mints-helper; 210/411 Test #220: mints-helper ..................... Passed 1.24 sec; Start 221: mints9; 211/411 Test #221: mints9 ........................... Passed 2.01 sec; Start 222: mints10; 212/411 Test #168: dft1 ............................. Passed 104.93 sec; Start 223: molden1; 213/411 Test #222: mints10 .......................... Passed 2.63 sec; Start 224: molden2; 214/411 Test #207: gibbs ............................ Passed 22.11 sec; Start 225: mom; 215/411 Test #217: mints6 ........................... Passed 13.02 sec; Start 226: mp2-1; 216/411 Test #225: mom .............................. Passed 5.50 sec; Start 227: mp2-def2; 217/411 Test #218: mints8 ........................... Passed 18.43 sec; Start 228: mp2-grad1; 218/411 Test #223: molden1 .......................... Passed 11.23 sec; Start 229: mp2-grad2; 219/411 Test #206: ghosts ........................... Passed 34.53 sec; Start 230: mp2-module; 220/411 Test #224: molden2 .......................... Passed 17.32 sec; Start 231: mp2p5-grad1; 221/411 Test #228: mp2-grad1 ........................ Passed 9.84 sec; Start 232: mp2p5-grad2; 222/411 Test #229: mp2-grad2 ........................ Passed 9.84 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:19693,Test,Test,19693,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,Test #214: mints3 ........................... Passed 0.99 sec; Start 216: mints5; 206/411 Test #213: mints2 ........................... Passed 2.55 sec; Start 217: mints6; 207/411 Test #215: mints4 ........................... Passed 0.54 sec; Start 218: mints8; 208/411 Test #216: mints5 ........................... Passed 0.62 sec; Start 219: mints-benchmark; 209/411 Test #202: fnocc4 ........................... Passed 28.48 sec; Start 220: mints-helper; 210/411 Test #220: mints-helper ..................... Passed 1.24 sec; Start 221: mints9; 211/411 Test #221: mints9 ........................... Passed 2.01 sec; Start 222: mints10; 212/411 Test #168: dft1 ............................. Passed 104.93 sec; Start 223: molden1; 213/411 Test #222: mints10 .......................... Passed 2.63 sec; Start 224: molden2; 214/411 Test #207: gibbs ............................ Passed 22.11 sec; Start 225: mom; 215/411 Test #217: mints6 ........................... Passed 13.02 sec; Start 226: mp2-1; 216/411 Test #225: mom .............................. Passed 5.50 sec; Start 227: mp2-def2; 217/411 Test #218: mints8 ........................... Passed 18.43 sec; Start 228: mp2-grad1; 218/411 Test #223: molden1 .......................... Passed 11.23 sec; Start 229: mp2-grad2; 219/411 Test #206: ghosts ........................... Passed 34.53 sec; Start 230: mp2-module; 220/411 Test #224: molden2 .......................... Passed 17.32 sec; Start 231: mp2p5-grad1; 221/411 Test #228: mp2-grad1 ........................ Passed 9.84 sec; Start 232: mp2p5-grad2; 222/411 Test #229: mp2-grad2 ........................ Passed 9.84 sec; Start 233: mp3-grad1; 223/411 Test #200: fnocc2 ........................... Passed 59.94 sec; Start 234: mp3-grad2; 224/411 Test #231: mp2p5-grad1 ...................... Passed 7.83 sec; Start 235: mp2-property; 225/411 Test #233: mp3-grad1 ........................ Passed 8.32 sec; Start 236: mpn-bh; 226/411 Test #235: mp2-property ..................... Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538:20055,Test,Test,20055,https://psicode.org,https://github.com/psi4/psi4/pull/1087#issuecomment-408854538,1,['Test'],['Test']
Testability,Test #214: mints3 ........................... Passed 1.08 sec; Start 215: mints4; 220/411 Test #215: mints4 ........................... Passed 0.62 sec; Start 216: mints5; 221/411 Test #216: mints5 ........................... Passed 0.73 sec; Start 217: mints6; 222/411 Test #217: mints6 ........................... Passed 10.06 sec; Start 218: mints8; 223/411 Test #218: mints8 ........................... Passed 12.89 sec; Start 219: mints-benchmark; 224/411 Test #219: mints-benchmark .................. Passed 37.88 sec; Start 220: mints-helper; 225/411 Test #220: mints-helper ..................... Passed 1.31 sec; Start 221: mints9; 226/411 Test #221: mints9 ........................... Passed 1.97 sec; Start 222: mints10; 227/411 Test #222: mints10 .......................... Passed 1.18 sec; Start 223: molden1; 228/411 Test #223: molden1 .......................... Passed 1.41 sec; Start 224: molden2; 229/411 Test #224: molden2 .......................... Passed 1.31 sec; Start 225: mom; 230/411 Test #225: mom .............................. Passed 2.22 sec; Start 226: mp2-1; 231/411 Test #226: mp2-1 ............................ Passed 2.04 sec; Start 227: mp2-def2; 232/411 Test #227: mp2-def2 ......................... Passed 373.75 sec; Start 228: mp2-grad1; 233/411 Test #228: mp2-grad1 ........................ Passed 1.70 sec; Start 229: mp2-grad2; 234/411 Test #229: mp2-grad2 ........................ Passed 1.52 sec; Start 230: mp2-module; 235/411 Test #230: mp2-module ....................... Passed 35.44 sec; Start 231: mp2p5-grad1; 236/411 Test #231: mp2p5-grad1 ...................... Passed 1.74 sec; Start 232: mp2p5-grad2; 237/411 Test #232: mp2p5-grad2 ...................... Passed 1.67 sec; Start 233: mp3-grad1; 238/411 Test #233: mp3-grad1 ........................ Passed 1.32 sec; Start 234: mp3-grad2; 239/411 Test #234: mp3-grad2 ........................ Passed 1.68 sec; Start 235: mp2-property; 240/411 Test #235: mp2-property ..................... Passed 2.6,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:20949,Test,Test,20949,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #215: mints4 ........................... Passed 0.58 sec; Start 216: mints5; 214/411 Test #207: gibbs ............................ Passed 21.62 sec; Start 217: mints6; 215/411 Test #216: mints5 ........................... Passed 0.65 sec; Start 218: mints8; 216/411 Test #200: fnocc2 ........................... Passed 54.94 sec; Start 219: mints-benchmark; 217/411 Test #206: ghosts ........................... Passed 34.38 sec; Start 220: mints-helper; 218/411 Test #220: mints-helper ..................... Passed 1.34 sec; Start 221: mints9; 219/411 Test #221: mints9 ........................... Passed 2.00 sec; Start 222: mints10; 220/411 Test #222: mints10 .......................... Passed 1.63 sec; Start 223: molden1; 221/411 Test #217: mints6 ........................... Passed 16.04 sec; Start 224: molden2; 222/411 Test #218: mints8 ........................... Passed 18.09 sec; Start 225: mom; 223/411 Test #223: molden1 .......................... Passed 5.30 sec; Start 226: mp2-1; 224/411 Test #225: mom .............................. Passed 3.92 sec; Start 227: mp2-def2; 225/411 Test #224: molden2 .......................... Passed 6.41 sec; Start 228: mp2-grad1; 226/411 Test #228: mp2-grad1 ........................ Passed 4.16 sec; Start 229: mp2-grad2; 227/411 Test #226: mp2-1 ............................ Passed 12.01 sec; Start 230: mp2-module; 228/411 Test #229: mp2-grad2 ........................ Passed 7.55 sec; Start 231: mp2p5-grad1; 229/411 Test #145: dfomp2-grad3 ..................... Passed 427.26 sec; Start 232: mp2p5-grad2; 230/411 Test #231: mp2p5-grad1 ...................... Passed 4.31 sec; Start 233: mp3-grad1; 231/411 Test #183: isapt2 ........................... Passed 136.47 sec; Start 234: mp3-grad2; 232/411 Test #233: mp3-grad1 ........................ Passed 6.71 sec; Start 235: mp2-property; 233/411 Test #219: mints-benchmark .................. Passed 42.31 sec; Start 236: mpn-bh; 234/411 Test #232: mp2p5-grad2 ...................... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:20663,Test,Test,20663,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,"Test #216: mints4 ........................... Passed 14.79 sec; Start 88: cepa1; 405/412 Test #240: numpy-array-interface ............ Passed 15.57 sec; 406/412 Test #309: pywrap-db3 ....................... Passed 14.49 sec; 407/412 Test #209: matrix1 .......................... Passed 15.24 sec; 408/412 Test #176: docs-dft ......................... Passed 16.24 sec; 409/412 Test #365: options1 ......................... Passed 13.68 sec; 410/412 Test #403: json-schema-1-throws ............. Passed 13.62 sec; 411/412 Test #88: cepa1 ............................ Passed 16.51 sec; 412/412 Test #319: sapt4 ............................ Passed 1885.78 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 85.75 sec*proc (2 tests); autotest = 1081.30 sec*proc (26 tests); cart = 14263.36 sec*proc (123 tests); cas = 59.52 sec*proc (1 test); casscf = 245.49 sec*proc (11 tests); cbs = 978.44 sec*proc (11 tests); cc = 5456.09 sec*proc (65 tests); cdomp2 = 39.91 sec*proc (2 tests); cepa = 180.93 sec*proc (7 tests); ci = 233.38 sec*proc (8 tests); cisd = 294.07 sec*proc (7 tests); cookbook = 58.33 sec*proc (1 test); cubeprop = 77.64 sec*proc (2 tests); dcft = 2278.61 sec*proc (13 tests); df = 1624.44 sec*proc (38 tests); dfccd = 16.01 sec*proc (1 test); dfccd-grad = 27.12 sec*proc (1 test); dfccdl = 16.03 sec*proc (1 test); dfccsd = 16.85 sec*proc (1 test); dfccsd-grad = 16.86 sec*proc (1 test); dfccsd-t-grad = 21.71 sec*proc (1 test); dfccsdat = 46.01 sec*proc (1 test); dfccsdl = 16.94 sec*proc (1 test); dfccsdt = 17.32 sec*proc (1 test); dfep2 = 34.66 sec*proc (2 tests); dfmp2 = 299.94 sec*proc (11 tests); dfomp2 = 703.06 sec*proc (7 tests); dfomp2.5 = 80.33 sec*proc (4 tests); dfomp3 = 113.97 sec*proc (4 tests); dfscf = 159.76 sec*proc (1 test); dft = 1825.64 sec*proc (27 tests); docs = 30.71 sec*proc (2 tests); ecp = 76.81 sec*proc (2 tests); fci = 39.98 sec*proc (2 tests); fcidump = 17.80 sec*proc (1 test); findif = 893.74 sec*proc (5 tests); fnocc = 13",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:38947,test,tests,38947,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['test'],['tests']
Testability,"Test #216: mints5 ........................... Passed 0.58 sec; Start 215: mints4; 402/411 Test #239: numpy-array-interface ............ Passed 0.62 sec; Start 208: matrix1; 403/411 Test #409: skeletonscf ...................... Passed 0.62 sec; Start 87: cepa1; 404/411 Test #364: options1 ......................... Passed 0.57 sec; 405/411 Test #175: docs-dft ......................... Passed 0.60 sec; 406/411 Test #402: json-schema-1-throws ............. Passed 0.56 sec; 407/411 Test #174: docs-bases ....................... Passed 0.53 sec; 408/411 Test #215: mints4 ........................... Passed 0.51 sec; 409/411 Test #208: matrix1 .......................... Passed 0.51 sec; 410/411 Test #87: cepa1 ............................ Passed 1.82 sec; 411/411 Test #318: sapt4 ............................ Passed 1890.44 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 66.55 sec*proc (2 tests); autotest = 2224.11 sec*proc (26 tests); cart = 16014.43 sec*proc (123 tests); cas = 59.03 sec*proc (1 test); casscf = 53.75 sec*proc (11 tests); cbs = 3517.28 sec*proc (10 tests); cc = 9427.35 sec*proc (65 tests); cdomp2 = 44.89 sec*proc (2 tests); cepa = 199.36 sec*proc (7 tests); ci = 100.45 sec*proc (8 tests); cisd = 209.41 sec*proc (7 tests); cookbook = 284.29 sec*proc (1 test); cubeprop = 19.63 sec*proc (2 tests); dcft = 3319.98 sec*proc (13 tests); df = 1994.11 sec*proc (38 tests); dfccd = 1.33 sec*proc (1 test); dfccd-grad = 3.71 sec*proc (1 test); dfccdl = 4.09 sec*proc (1 test); dfccsd = 3.47 sec*proc (1 test); dfccsd-grad = 39.72 sec*proc (1 test); dfccsd-t-grad = 37.57 sec*proc (1 test); dfccsdat = 4.01 sec*proc (1 test); dfccsdl = 2.51 sec*proc (1 test); dfccsdt = 2.35 sec*proc (1 test); dfep2 = 4.67 sec*proc (2 tests); dfmp2 = 118.85 sec*proc (11 tests); dfomp2 = 1035.30 sec*proc (7 tests); dfomp2.5 = 224.33 sec*proc (4 tests); dfomp3 = 258.95 sec*proc (4 tests); dfscf = 133.50 sec*proc (1 test); dft = 1440.06 sec*proc (27 tests); docs = 1.1",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:38520,test,tests,38520,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['test'],['tests']
Testability,Test #216: mints5 ........................... Passed 0.68 sec; Start 217: mints6; 222/411 Test #217: mints6 ........................... Passed 9.90 sec; Start 218: mints8; 223/411 Test #218: mints8 ........................... Passed 12.53 sec; Start 219: mints-benchmark; 224/411 Test #219: mints-benchmark .................. Passed 33.55 sec; Start 220: mints-helper; 225/411 Test #220: mints-helper ..................... Passed 1.48 sec; Start 221: mints9; 226/411 Test #221: mints9 ........................... Passed 1.78 sec; Start 222: mints10; 227/411 Test #222: mints10 .......................... Passed 1.24 sec; Start 223: molden1; 228/411 Test #223: molden1 .......................... Passed 1.79 sec; Start 224: molden2; 229/411 Test #224: molden2 .......................... Passed 1.44 sec; Start 225: mom; 230/411 Test #225: mom .............................. Passed 2.09 sec; Start 226: mp2-1; 231/411 Test #226: mp2-1 ............................ Passed 2.16 sec; Start 227: mp2-def2; 232/411 Test #227: mp2-def2 ......................... Passed 342.94 sec; Start 228: mp2-grad1; 233/411 Test #228: mp2-grad1 ........................ Passed 1.52 sec; Start 229: mp2-grad2; 234/411 Test #229: mp2-grad2 ........................ Passed 1.88 sec; Start 230: mp2-module; 235/411 Test #230: mp2-module ....................... Passed 35.05 sec; Start 231: mp2p5-grad1; 236/411 Test #231: mp2p5-grad1 ...................... Passed 1.53 sec; Start 232: mp2p5-grad2; 237/411 Test #232: mp2p5-grad2 ...................... Passed 1.75 sec; Start 233: mp3-grad1; 238/411 Test #233: mp3-grad1 ........................ Passed 1.47 sec; Start 234: mp3-grad2; 239/411 Test #234: mp3-grad2 ........................ Passed 1.76 sec; Start 235: mp2-property; 240/411 Test #235: mp2-property ..................... Passed 2.66 sec; Start 236: mpn-bh; 241/411 Test #236: mpn-bh ........................... Passed 3.13 sec; Start 237: nbody-he-cluster; 242/411 Test #237: nbody-he-cluster ................. P,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:21103,Test,Test,21103,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #221: mints-benchmark .................. Passed 43.57 sec; Start 148: dfomp3-1; 146/413 Test #172: dft1-alt ......................... Passed 55.54 sec; Start 284: opt-irc-3; 147/413 Test #115: dcft7 ............................ Passed 345.49 sec; Start 309: pywrap-db1; 148/413 Test #54: cc37 ............................. Passed 35.93 sec; Start 269: opt2; 149/413 Test #279: opt12 ............................ Passed 26.85 sec; Start 361: tu6-cp-ne2; 150/413 Test #22: cc10 ............................. Passed 51.09 sec; Start 74: cc55; 151/413 Test #23: cc11 ............................. Passed 49.40 sec; Start 338: scf5; 152/413 Test #111: dcft3 ............................ Passed 41.52 sec; Start 325: sapt7; 153/413 Test #350: sapt-compare ..................... Passed 44.69 sec; Start 314: rasci-ne; 154/413 Test #304: pywrap-cbs1 ...................... Passed 169.96 sec; Start 93: ci-multi; 155/413 Test #269: opt2 ............................. Passed 27.77 sec; Start 66: cc48; 156/413 Test #284: opt-irc-3 ........................ Passed 32.58 sec; Start 395: python-3-index-transforms; 157/413 Test #198: fd-gradient ...................... Passed 37.81 sec; Start 339: scf6; 158/413 Test #301: pywrap-alias ..................... Passed 80.45 sec; Start 131: dfmp2-1; 159/413 Test #148: dfomp3-1 ......................... Passed 43.61 sec; Start 133: dfmp2-3; 160/413 Test #395: python-3-index-transforms ........ Passed 9.79 sec; Start 135: dfmp2-ecp; 161/413 Test #309: pywrap-db1 ....................... Passed 42.33 sec; Start 344: soscf-dft; 162/413 Test #12: cbs-parser ....................... Passed 86.78 sec; Start 376: dft-custom-gga; 163/413 Test #338: scf5 ............................. Passed 41.90 sec; Start 388: cookbook-rohf-orb-rot; 164/413 Test #325: sapt7 ............................ Passed 35.57 sec; Start 250: omp2-3; 165/413 Test #314: rasci-ne ......................... Passed 34.88 sec; Start 16: cbs-xtpl-gradient; 166/413 Test #131: dfmp2-1 ..........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:14687,Test,Test,14687,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Test #223: molden1 .......................... Passed 9.22 sec; Start 127: dfccsdt1; 261/411 Test #185: fci-h2o .......................... Passed 7.33 sec; Start 90: cepa1; 262/411 Test #243: ocepa1 ........................... Passed 12.67 sec; Start 9: castup2; 263/411 Test #184: fci-dipole ....................... Passed 8.24 sec; Start 265: opt1; 264/411 Test #266: opt1-fd .......................... Passed 21.17 sec; Start 10: castup3; 265/411 Test #186: fci-h2o-2 ........................ Passed 8.30 sec; Start 339: scf-property; 266/411 Test #241: ocepa-grad1 ...................... Passed 22.53 sec; Start 191: fcidump; 267/411 Test #265: opt1 ............................. Passed 8.60 sec; Start 141: dfomp2-3; 268/411 Test #6: ao-casscf-sp ..................... Passed 11.39 sec; Start 117: dfcasscf-sa-sp; 269/411 Test #339: scf-property ..................... Passed 7.74 sec; Start 88: cepa2; 270/411 Test #199: fnocc1 ........................... Passed 24.12 sec; Start 179: fsapt2; 271/411 Test #143: dfomp2-grad1 ..................... Passed 30.12 sec; Start 99: cisd-sp-2; 272/411 Test #127: dfccsdt1 ......................... Passed 13.28 sec; Start 171: dft2; 273/411 Test #191: fcidump .......................... Passed 6.70 sec; Start 331: scf1; 274/411 Test #226: mp2-1 ............................ Passed 20.61 sec; Start 93: cisd-h2o+-0; 275/411 Test #122: dfccd-grad1 ...................... Passed 31.02 sec; Start 86: cepa0-grad2; 276/411 Test #132: dfmp2-4 .......................... Passed 15.60 sec; Start 94: cisd-h2o+-1; 277/411 Test #341: soscf-ref ........................ Passed 22.36 sec; Start 108: dcft2; 278/411 Test #117: dfcasscf-sa-sp ................... Passed 5.04 sec; Start 283: opt-freeze-coords; 279/411 Test #9: castup2 .......................... Passed 15.17 sec; Start 329: scf-guess-read2; 280/411 Test #141: dfomp2-3 ......................... Passed 6.53 sec; Start 134: dfmp2-grad1; 281/411 Test #10: castup3 .......................... Passed 14.5,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:25391,Test,Test,25391,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #239: numpy-array-interface ............ Passed 0.74 sec; Start 240: ocepa-freq1; 245/411 Test #240: ocepa-freq1 ...................... Passed 47.05 sec; Start 241: ocepa-grad1; 246/411 Test #241: ocepa-grad1 ...................... Passed 2.50 sec; Start 242: ocepa-grad2; 247/411 Test #242: ocepa-grad2 ...................... Passed 8.81 sec; Start 243: ocepa1; 248/411 Test #243: ocepa1 ........................... Passed 2.08 sec; Start 244: ocepa2; 249/411 Test #244: ocepa2 ........................... Passed 17.07 sec; Start 245: ocepa3; 250/411 Test #245: ocepa3 ........................... Passed 9.75 sec; Start 246: omp2-1; 251/411 Test #246: omp2-1 ........................... Passed 1.19 sec; Start 247: omp2-2; 252/411 Test #247: omp2-2 ........................... Passed 4.05 sec; Start 248: omp2-3; 253/411 Test #248: omp2-3 ........................... Passed 3.58 sec; Start 249: omp2-4; 254/411 Test #249: omp2-4 ........................... Passed 10.52 sec; Start 250: omp2-5; 255/411 Test #250: omp2-5 ........................... Passed 8.42 sec; Start 251: omp2-grad1; 256/411 Test #251: omp2-grad1 ....................... Passed 2.01 sec; Start 252: omp2-grad2; 257/411 Test #252: omp2-grad2 ....................... Passed 4.91 sec; Start 253: omp2p5-1; 258/411 Test #253: omp2p5-1 ......................... Passed 1.75 sec; Start 254: omp2p5-2; 259/411 Test #254: omp2p5-2 ......................... Passed 3.05 sec; Start 255: omp2p5-grad1; 260/411 Test #255: omp2p5-grad1 ..................... Passed 2.31 sec; Start 256: omp2p5-grad2; 261/411 Test #256: omp2p5-grad2 ..................... Passed 7.90 sec; Start 257: omp3-1; 262/411 Test #257: omp3-1 ........................... Passed 1.59 sec; Start 258: omp3-2; 263/411 Test #258: omp3-2 ........................... Passed 4.98 sec; Start 259: omp3-3; 264/411 Test #259: omp3-3 ........................... Passed 20.87 sec; Start 260: omp3-4; 265/411 Test #260: omp3-4 ........................... Passed 8.98 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:23265,Test,Test,23265,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #240: ocepa-freq1 ...................... Passed 51.87 sec; Start 241: ocepa-grad1; 246/411 Test #241: ocepa-grad1 ...................... Passed 2.45 sec; Start 242: ocepa-grad2; 247/411 Test #242: ocepa-grad2 ...................... Passed 11.50 sec; Start 243: ocepa1; 248/411 Test #243: ocepa1 ........................... Passed 1.88 sec; Start 244: ocepa2; 249/411 Test #244: ocepa2 ........................... Passed 14.81 sec; Start 245: ocepa3; 250/411 Test #245: ocepa3 ........................... Passed 9.93 sec; Start 246: omp2-1; 251/411 Test #246: omp2-1 ........................... Passed 1.42 sec; Start 247: omp2-2; 252/411 Test #247: omp2-2 ........................... Passed 4.76 sec; Start 248: omp2-3; 253/411 Test #248: omp2-3 ........................... Passed 4.44 sec; Start 249: omp2-4; 254/411 Test #249: omp2-4 ........................... Passed 10.24 sec; Start 250: omp2-5; 255/411 Test #250: omp2-5 ........................... Passed 9.05 sec; Start 251: omp2-grad1; 256/411 Test #251: omp2-grad1 ....................... Passed 2.00 sec; Start 252: omp2-grad2; 257/411 Test #252: omp2-grad2 ....................... Passed 4.71 sec; Start 253: omp2p5-1; 258/411 Test #253: omp2p5-1 ......................... Passed 1.63 sec; Start 254: omp2p5-2; 259/411 Test #254: omp2p5-2 ......................... Passed 3.36 sec; Start 255: omp2p5-grad1; 260/411 Test #255: omp2p5-grad1 ..................... Passed 2.01 sec; Start 256: omp2p5-grad2; 261/411 Test #256: omp2p5-grad2 ..................... Passed 8.20 sec; Start 257: omp3-1; 262/411 Test #257: omp3-1 ........................... Passed 1.83 sec; Start 258: omp3-2; 263/411 Test #258: omp3-2 ........................... Passed 4.40 sec; Start 259: omp3-3; 264/411 Test #259: omp3-3 ........................... Passed 19.94 sec; Start 260: omp3-4; 265/411 Test #260: omp3-4 ........................... Passed 9.40 sec; Start 261: omp3-5; 266/411 Test #261: omp3-5 ........................... Passed 13.04 sec; Start 2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:23388,Test,Test,23388,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #241: ocepa3 ........................... Passed 39.10 sec; Start 273: opt12; 114/401 Test #139: dfomp2-2 ......................... Passed 42.17 sec; Start 345: dft-custom; 115/401 Test #190: fd-freq-gradient ................. Passed 19.57 sec; Start 21: cc10; 116/401 Test #41: cc26 ............................. Passed 424.74 sec; Start 234: nbody-intermediates; 117/401 Test #147: dfomp3-grad1 ..................... Passed 26.96 sec; Start 78: cc8b; 118/401 Test #268: opt6 ............................. Passed 21.27 sec; Start 303: pywrap-db1; 119/401 Test #137: dfmp2-grad5 ...................... Passed 18.60 sec; Start 80: cc9; 120/401 Test #141: dfomp2-4 ......................... Passed 38.69 sec; Start 149: dfomp2p5-1; 121/401 Test #173: extern2 .......................... Passed 23.61 sec; Start 55: cc39; 122/401 Test #59: cc42 ............................. Passed 60.86 sec; Start 202: ghosts; 123/401 Test #39: cc24 ............................. Passed 464.47 sec; Start 43: cc28; 124/401 Test #77: cc8a ............................. Passed 50.80 sec; Start 151: dfomp2p5-grad1; 125/401 Test #273: opt12 ............................ Passed 19.08 sec; Start 22: cc11; 126/401 Test #292: psithon2 ......................... Passed 20.69 sec; Start 271: opt9; 127/401 Test #345: dft-custom ....................... Passed 18.67 sec; Start 334: scf7; 128/401 Test #66: cc4a ............................. Passed 43.61 sec; Start 313: sapt3; 129/401 Test #202: ghosts ........................... Passed 16.16 sec; Start 70: cc53; 130/401 Test #234: nbody-intermediates .............. Passed 26.04 sec; Start 260: opt-lindep-change; 131/401 Test #149: dfomp2p5-1 ....................... Passed 30.82 sec; Start 37: cc22; 132/401 Test #271: opt9 ............................. Passed 23.90 sec; Start 23: cc12; 133/401 Test #313: sapt3 ............................ Passed 15.45 sec; Start 372: pywrap-bfs; 134/401 Test #303: pywrap-db1 ....................... Passed 36.68 sec; Start 332: scf,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:12082,Test,Test,12082,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Test #243: ocepa1 ........................... Passed 12.67 sec; Start 9: castup2; 263/411 Test #184: fci-dipole ....................... Passed 8.24 sec; Start 265: opt1; 264/411 Test #266: opt1-fd .......................... Passed 21.17 sec; Start 10: castup3; 265/411 Test #186: fci-h2o-2 ........................ Passed 8.30 sec; Start 339: scf-property; 266/411 Test #241: ocepa-grad1 ...................... Passed 22.53 sec; Start 191: fcidump; 267/411 Test #265: opt1 ............................. Passed 8.60 sec; Start 141: dfomp2-3; 268/411 Test #6: ao-casscf-sp ..................... Passed 11.39 sec; Start 117: dfcasscf-sa-sp; 269/411 Test #339: scf-property ..................... Passed 7.74 sec; Start 88: cepa2; 270/411 Test #199: fnocc1 ........................... Passed 24.12 sec; Start 179: fsapt2; 271/411 Test #143: dfomp2-grad1 ..................... Passed 30.12 sec; Start 99: cisd-sp-2; 272/411 Test #127: dfccsdt1 ......................... Passed 13.28 sec; Start 171: dft2; 273/411 Test #191: fcidump .......................... Passed 6.70 sec; Start 331: scf1; 274/411 Test #226: mp2-1 ............................ Passed 20.61 sec; Start 93: cisd-h2o+-0; 275/411 Test #122: dfccd-grad1 ...................... Passed 31.02 sec; Start 86: cepa0-grad2; 276/411 Test #132: dfmp2-4 .......................... Passed 15.60 sec; Start 94: cisd-h2o+-1; 277/411 Test #341: soscf-ref ........................ Passed 22.36 sec; Start 108: dcft2; 278/411 Test #117: dfcasscf-sa-sp ................... Passed 5.04 sec; Start 283: opt-freeze-coords; 279/411 Test #9: castup2 .......................... Passed 15.17 sec; Start 329: scf-guess-read2; 280/411 Test #141: dfomp2-3 ......................... Passed 6.53 sec; Start 134: dfmp2-grad1; 281/411 Test #10: castup3 .......................... Passed 14.53 sec; Start 294: psimrcc-sp1; 282/411 Test #179: fsapt2 ........................... Passed 5.59 sec; Start 251: omp2-grad1; 283/411 Test #171: dft2 ............................. Pa,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:25573,Test,Test,25573,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #243: ocepa1 ........................... Passed 9.79 sec; Start 244: ocepa2; 242/411 Test #237: nbody-he-cluster ................. Passed 60.60 sec; Start 245: ocepa3; 243/411 Test #230: mp2-module ....................... Passed 107.78 sec; Start 246: omp2-1; 244/411 Test #246: omp2-1 ........................... Passed 5.36 sec; Start 247: omp2-2; 245/411 Test #242: ocepa-grad2 ...................... Passed 92.28 sec; Start 248: omp2-3; 246/411 Test #245: ocepa3 ........................... Passed 60.90 sec; Start 249: omp2-4; 247/411 Test #247: omp2-2 ........................... Passed 26.70 sec; Start 250: omp2-5; 248/411 Test #244: ocepa2 ........................... Passed 90.41 sec; Start 251: omp2-grad1; 249/411 Test #251: omp2-grad1 ....................... Passed 5.49 sec; Start 252: omp2-grad2; 250/411 Test #248: omp2-3 ........................... Passed 26.78 sec; Start 253: omp2p5-1; 251/411 Test #253: omp2p5-1 ......................... Passed 9.78 sec; Start 254: omp2p5-2; 252/411 Test #110: dcft4 ............................ Passed 1083.53 sec; Start 255: omp2p5-grad1; 253/411 Test #254: omp2p5-2 ......................... Passed 19.37 sec; Start 256: omp2p5-grad2; 254/411 Test #252: omp2-grad2 ....................... Passed 39.15 sec; Start 257: omp3-1; 255/411 Test #255: omp2p5-grad1 ..................... Passed 11.73 sec; Start 258: omp3-2; 256/411 Test #257: omp3-1 ........................... Passed 7.36 sec; Start 259: omp3-3; 257/411 Test #250: omp2-5 ........................... Passed 78.34 sec; Start 260: omp3-4; 258/411 Test #258: omp3-2 ........................... Passed 26.24 sec; Start 261: omp3-5; 259/411 Test #249: omp2-4 ........................... Passed 94.89 sec; Start 262: omp3-grad1; 260/411 Test #145: dfomp2-grad3 ..................... Passed 811.31 sec; Start 263: omp3-grad2; 261/411 Test #262: omp3-grad1 ....................... Passed 7.04 sec; Start 264: opt-lindep-change; 262/411 Test #256: omp2p5-grad2 ..................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:23295,Test,Test,23295,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,1,['Test'],['Test']
Testability,Test #245: omp2-4 ........................... Passed 113.76 sec; Start 59: cc42; 85/401 Test #150: dfomp2p5-2 ....................... Passed 66.64 sec; Start 162: dft-psivar; 86/401 Test #146: dfomp3-2 ......................... Passed 83.22 sec; Start 263: opt2; 87/401 Test #270: opt8 ............................. Passed 39.82 sec; Start 248: omp2-grad2; 88/401 Test #319: sapt7 ............................ Passed 25.97 sec; Start 278: opt-irc-3; 89/401 Test #168: dft3 ............................. Passed 24.29 sec; Start 185: fci-tdm-2; 90/401 Test #259: omp3-grad2 ....................... Passed 100.33 sec; Start 241: ocepa3; 91/401 Test #144: dfomp2-grad3 ..................... Passed 728.97 sec; Start 139: dfomp2-2; 92/401 Test #192: fd-gradient ...................... Passed 40.43 sec; Start 159: dft-freq; 93/401 Test #338: soscf-dft ........................ Passed 24.29 sec; Start 77: cc8a; 94/401 Test #45: cc3 .............................. Passed 739.07 sec; Start 169: dft-omega; 95/401 Test #158: dft-grad-meta .................... Passed 20.41 sec; Start 141: dfomp2-4; 96/401 Test #152: dfomp2p5-grad2 ................... Passed 98.47 sec; Start 103: dcft-grad2; 97/401 Test #162: dft-psivar ....................... Passed 20.43 sec; Start 244: omp2-3; 98/401 Test #263: opt2 ............................. Passed 20.54 sec; Start 130: dfmp2-3; 99/401 Test #185: fci-tdm-2 ........................ Passed 19.94 sec; Start 147: dfomp3-grad1; 100/401 Test #278: opt-irc-3 ........................ Passed 27.50 sec; Start 190: fd-freq-gradient; 101/401 Test #34: cc19 ............................. Passed 58.89 sec; Start 66: cc4a; 102/401 Test #159: dft-freq ......................... Passed 21.58 sec; Start 104: dcft-grad3; 103/401 Test #11: cbs-delta-energy ................. Passed 237.06 sec; Start 295: pywrap-alias; 104/401 Test #252: omp2p5-grad2 ..................... Passed 79.50 sec; Start 268: opt6; 105/401 Test #35: cc2 .............................. Passed 456.44 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:9411,Test,Test,9411,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Test #248: omp2-2 ........................... Passed 30.61 sec; Start 23: cc11; 176/412 Test #149: dfomp3-grad1 ..................... Passed 44.45 sec; Start 52: cc35; 177/412 Test #72: cc53 ............................. Passed 59.55 sec; Start 283: opt-irc-3; 178/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 19.87 sec; Start 278: opt12; 179/412 Test #273: opt6 ............................. Passed 26.74 sec; Start 166: dft-grad2; 180/412 Test #34: cc18 ............................. Passed 51.43 sec; Start 322: sapt-dft-api; 181/412 Test #85: cdomp2-2 ......................... Passed 51.89 sec; Start 154: dft-grad-lr1; 182/412 Test #316: sapt1 ............................ Passed 19.12 sec; Start 203: fnocc4; 183/412 Test #147: dfomp3-1 ......................... Passed 21.93 sec; Start 200: fnocc1; 184/412 Test #268: opt2 ............................. Passed 22.81 sec; Start 178: extern2; 185/412 Test #64: cc46 ............................. Passed 42.40 sec; Start 297: psithon2; 186/412 Test #52: cc35 ............................. Passed 24.32 sec; Start 202: fnocc3; 187/412 Test #74: cc55 ............................. Passed 45.69 sec; Start 55: cc38; 188/412 Test #33: cc17 ............................. Passed 30.45 sec; Start 16: cbs-xtpl-gradient; 189/412 Test #23: cc11 ............................. Passed 29.96 sec; Start 73: cc54; 190/412 Test #200: fnocc1 ........................... Passed 12.18 sec; Start 267: opt1-fd; 191/412 Test #166: dft-grad2 ........................ Passed 17.30 sec; Start 292: psimrcc-fd-freq1; 192/412 Test #322: sapt-dft-api ..................... Passed 17.66 sec; Start 219: mints8; 193/412 Test #154: dft-grad-lr1 ..................... Passed 17.73 sec; Start 170: dft-vv10; 194/412 Test #278: opt12 ............................ Passed 20.24 sec; Start 253: omp2-grad2; 195/412 Test #283: opt-irc-3 ........................ Passed 28.90 sec; Start 304: pywrap-checkrun-convcrit; 196/412 Test #246: ocepa3 ...........................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:17490,Test,Test,17490,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #251: omp2-5 ........................... Passed 49.94 sec; Start 168: dft-b3lyp; 83/412 Test #26: cc13a ............................ Passed 327.85 sec; Start 69: cc50; 84/412 Test #243: ocepa-grad2 ...................... Passed 63.73 sec; Start 300: pywrap-alias; 85/412 Test #20: cbs-xtpl-wrapper ................. Passed 79.22 sec; Start 390: python-pubchem; 86/412 Test #62: cc44 ............................. Passed 68.65 sec; Start 257: omp2p5-grad2; 87/412 Test #205: frac-ip-fitting .................. Passed 71.49 sec; Start 145: dfomp2-grad2; 88/412 Test #65: cc47 ............................. Passed 50.77 sec; Start 35: cc19; 89/412 Test #264: omp3-grad2 ....................... Passed 80.57 sec; Start 67: cc49; 90/412 Test #58: cc40 ............................. Passed 63.55 sec; Start 79: cc8a; 91/412 Test #250: omp2-4 ........................... Passed 85.98 sec; Start 152: dfomp2p5-2; 92/412 Test #114: dcft7 ............................ Passed 366.54 sec; Start 82: cc9; 93/412 Test #168: dft-b3lyp ........................ Passed 74.16 sec; Start 298: pubchem1; 94/412 Test #69: cc50 ............................. Passed 59.08 sec; Start 148: dfomp3-2; 95/412 Test #390: python-pubchem ................... Passed 72.12 sec; Start 141: dfomp2-2; 96/412 Test #300: pywrap-alias ..................... Passed 80.85 sec; Start 60: cc42; 97/412 Test #317: sapt2 ............................ Passed 393.02 sec; Start 66: cc48; 98/412 Test #257: omp2p5-grad2 ..................... Passed 84.55 sec; Start 78: cc8; 99/412 Test #35: cc19 ............................. Passed 69.43 sec; Start 57: cc4; 100/412 Test #67: cc49 ............................. Passed 64.19 sec; Start 101: ci-property; 101/412 Test #79: cc8a ............................. Passed 64.97 sec; Start 55: cc38; 102/412 Test #152: dfomp2p5-2 ....................... Passed 55.57 sec; Start 2: adc2; 103/412 Test #82: cc9 .............................. Passed 53.44 sec; Start 72: cc53; 104/412 Test #298: pubchem,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:8951,Test,Test,8951,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['Test'],['Test']
Testability,Test #253: omp2-grad2 ....................... Passed 23.67 sec; Start 1: adc1; 160/412 Test #393: python-cc54 ...................... Passed 18.00 sec; Start 52: cc35; 161/412 Test #34: cc18 ............................. Passed 28.47 sec; Start 283: opt-irc-3; 162/412 Test #153: dfomp2p5-grad1 ................... Passed 18.64 sec; Start 63: cc45; 163/412 Test #343: soscf-dft ........................ Passed 41.34 sec; Start 16: cbs-xtpl-gradient; 164/412 Test #52: cc35 ............................. Passed 27.41 sec; Start 265: opt-lindep-change; 165/412 Test #63: cc45 ............................. Passed 25.41 sec; Start 51: cc34; 166/412 Test #327: scf-ecp .......................... Passed 37.77 sec; Start 22: cc10; 167/412 Test #1: adc1 ............................. Passed 39.52 sec; Start 174: dft-omega; 168/412 Test #16: cbs-xtpl-gradient ................ Passed 34.97 sec; Start 7: casscf-sp; 169/412 Test #283: opt-irc-3 ........................ Passed 38.80 sec; Start 149: dfomp3-grad1; 170/412 Test #51: cc34 ............................. Passed 27.13 sec; Start 49: cc32; 171/412 Test #22: cc10 ............................. Passed 27.87 sec; Start 110: dcft3; 172/412 Test #149: dfomp3-grad1 ..................... Passed 25.97 sec; Start 167: dft-psivar; 173/412 Test #7: casscf-sp ........................ Passed 31.13 sec; Start 203: fnocc4; 174/412 Test #265: opt-lindep-change ................ Passed 47.51 sec; Start 50: cc33; 175/412 Test #174: dft-omega ........................ Passed 46.04 sec; Start 376: pywrap-bfs; 176/412 Test #49: cc32 ............................. Passed 26.57 sec; Start 53: cc36; 177/412 Test #110: dcft3 ............................ Passed 25.36 sec; Start 160: dft-b2plyp; 178/412 Test #50: cc33 ............................. Passed 30.41 sec; Start 314: rasscf-sp; 179/412 Test #203: fnocc4 ........................... Passed 37.17 sec; Start 273: opt6; 180/412 Test #53: cc36 ............................. Passed 27.88 sec; Start 268: opt2; 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:15812,Test,Test,15812,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Test #256: omp2-2 ........................... Passed 32.02 sec; Start 127: dfccsdl1; 48/415 Test #371: x2c1 ............................. Passed 130.82 sec; Start 4: casscf-semi; 49/415 Test #5: casscf-sa-sp ..................... Passed 14.54 sec; Start 205: fnocc4; 50/415 Test #14: cbs-xtpl-energy .................. Passed 17.93 sec; Start 377: dft-smoke; 51/415 Test #85: cdomp2-1 ......................... Passed 16.80 sec; Start 126: dfccsd1; 52/415 Test #116: dcft7 ............................ Passed 408.77 sec; Start 132: dfmp2-1; 53/415 Test #4: casscf-semi ...................... Passed 15.25 sec; Start 252: ocepa1; 54/415 Test #179: extern1 .......................... Passed 22.42 sec; Start 6: ao-casscf-sp; 55/415 Test #127: dfccsdl1 ......................... Passed 19.45 sec; Start 172: dft-vv10; 56/415 Test #126: dfccsd1 .......................... Passed 16.21 sec; Start 142: dfomp2-1; 57/415 Test #403: python-cc54 ...................... Passed 49.72 sec; Start 260: omp2-grad1; 58/415 Test #386: pywrap-bfs ....................... Passed 24.47 sec; Start 368: tu4-h2o-freq; 59/415 Test #323: rasscf-sp ........................ Passed 37.57 sec; Start 103: cubeprop; 60/415 Test #205: fnocc4 ........................... Passed 22.18 sec; Start 293: opt-full-hess-every; 61/415 Test #6: ao-casscf-sp ..................... Passed 5.22 sec; Start 357: sapt-dft1; 62/415 Test #377: dft-smoke ........................ Passed 22.20 sec; Start 201: freq-isotope2; 63/415 Test #252: ocepa1 ........................... Passed 8.85 sec; Start 194: fcidump; 64/415 Test #260: omp2-grad1 ....................... Passed 9.57 sec; Start 266: omp3-1; 65/415 Test #132: dfmp2-1 .......................... Passed 16.83 sec; Start 334: sapt8; 66/415 Test #194: fcidump .......................... Passed 7.22 sec; Start 226: molden1; 67/415 Test #142: dfomp2-1 ......................... Passed 12.15 sec; Start 274: opt1; 68/415 Test #103: cubeprop ......................... Passed 12.58 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:5748,Test,Test,5748,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #256: omp2p5-grad2 ..................... Passed 66.01 sec; Start 204: frac-ip-fitting; 102/411 Test #68: cc50 ............................. Passed 57.81 sec; Start 250: omp2-5; 103/411 Test #260: omp3-4 ........................... Passed 82.25 sec; Start 73: cc55; 104/411 Test #317: sapt3 ............................ Passed 75.27 sec; Start 33: cc18; 105/411 Test #66: cc49 ............................. Passed 50.65 sec; Start 389: python-pubchem; 106/411 Test #64: cc47 ............................. Passed 42.26 sec; Start 71: cc53; 107/411 Test #319: sapt5 ............................ Passed 78.72 sec; Start 82: cc9a; 108/411 Test #33: cc18 ............................. Passed 35.82 sec; Start 297: pubchem1; 109/411 Test #263: omp3-grad2 ....................... Passed 57.05 sec; Start 12: cbs-parser; 110/411 Test #73: cc55 ............................. Passed 42.84 sec; Start 100: ci-property; 111/411 Test #71: cc53 ............................. Passed 36.60 sec; Start 32: cc17; 112/411 Test #244: ocepa2 ........................... Passed 63.39 sec; Start 84: cdomp2-2; 113/411 Test #316: sapt2 ............................ Passed 341.30 sec; Start 80: cc8c; 114/411 Test #167: dft-b3lyp ........................ Passed 65.67 sec; Start 21: cc10; 115/411 Test #204: frac-ip-fitting .................. Passed 75.23 sec; Start 126: dfccsd-t-grad1; 116/411 Test #389: python-pubchem ................... Passed 59.41 sec; Start 148: dfomp3-grad1; 117/411 Test #250: omp2-5 ........................... Passed 68.60 sec; Start 54: cc38; 118/411 Test #82: cc9a ............................. Passed 46.42 sec; Start 125: dfccsd-grad1; 119/411 Test #32: cc17 ............................. Passed 33.17 sec; Start 276: opt11; 120/411 Test #113: dcft7 ............................ Passed 384.47 sec; Start 162: dft-grad-meta; 121/411 Test #84: cdomp2-2 ......................... Passed 50.72 sec; Start 237: nbody-he-cluster; 122/411 Test #297: pubchem1 ......................... Passed 59.7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:10612,Test,Test,10612,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['Test'],['Test']
Testability,Test #258: omp3-2 ........................... Passed 25.47 sec; Start 262: omp3-grad1; 260/411 Test #262: omp3-grad1 ....................... Passed 4.63 sec; Start 263: omp3-grad2; 261/411 Test #256: omp2p5-grad2 ..................... Passed 52.91 sec; Start 264: opt-lindep-change; 262/411 Test #145: dfomp2-grad3 ..................... Passed 758.68 sec; Start 265: opt1; 263/411 Test #265: opt1 ............................. Passed 4.84 sec; Start 266: opt1-fd; 264/411 Test #266: opt1-fd .......................... Passed 9.24 sec; Start 267: opt2; 265/411 Test #264: opt-lindep-change ................ Passed 26.61 sec; Start 268: opt2-fd; 266/411 Test #259: omp3-3 ........................... Passed 68.14 sec; Start 269: opt3; 267/411 Test #260: omp3-4 ........................... Passed 60.75 sec; Start 270: opt4; 268/411 Test #263: omp3-grad2 ....................... Passed 43.76 sec; Start 271: opt5; 269/411 Test #269: opt3 ............................. Passed 4.65 sec; Start 272: opt6; 270/411 Test #261: omp3-5 ........................... Passed 50.13 sec; Start 273: opt7; 271/411 Test #268: opt2-fd .......................... Passed 11.22 sec; Start 274: opt8; 272/411 Test #271: opt5 ............................. Passed 2.35 sec; Start 275: opt9; 273/411 Test #270: opt4 ............................. Passed 8.04 sec; Start 276: opt11; 274/411 Test #267: opt2 ............................. Passed 19.83 sec; Start 277: opt12; 275/411 Test #275: opt9 ............................. Passed 12.46 sec; Start 279: opt14; 276/411 Test #272: opt6 ............................. Passed 17.94 sec; Start 280: opt-irc-1; 277/411 Test #277: opt12 ............................ Passed 18.41 sec; Start 281: opt-irc-2; 278/411 Test #274: opt8 ............................. Passed 27.80 sec; Start 282: opt-irc-3; 279/411 Test #273: opt7 ............................. Passed 37.31 sec; Start 283: opt-freeze-coords; 280/411 Test #283: opt-freeze-coords ................ Passed 3.78 sec; Start 284: ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637:24972,Test,Test,24972,https://psicode.org,https://github.com/psi4/psi4/pull/1115#issuecomment-411094637,1,['Test'],['Test']
Testability,Test #262: opt1-fd .......................... Passed 12.30 sec; Start 91: ci-multi; 189/401 Test #102: dcft-grad1 ....................... Passed 884.24 sec; Start 214: mints8; 190/401 Test #337: soscf-ref ........................ Passed 10.01 sec; Start 83: cdomp2-2; 191/401 Test #99: ci-property ...................... Passed 29.65 sec; Start 167: dft2; 192/401 Test #364: dft-jk ........................... Passed 6.91 sec; Start 389: python-cc54; 193/401 Test #188: fd-freq-energy ................... Passed 10.27 sec; Start 342: sapt-dft1; 194/401 Test #127: dfccsdat1 ........................ Passed 20.44 sec; Start 157: dft-ghost; 195/401 Test #16: cbs-xtpl-gradient ................ Passed 31.05 sec; Start 32: cc17; 196/401 Test #167: dft2 ............................. Passed 4.99 sec; Start 197: fnocc3; 197/401 Test #214: mints8 ........................... Passed 6.50 sec; Start 128: dfmp2-1; 198/401 Test #165: dft-vv10 ......................... Passed 14.72 sec; Start 172: extern1; 199/401 Test #157: dft-ghost ........................ Passed 5.75 sec; Start 3: casscf-fzc-sp; 200/401 Test #52: cc36 ............................. Passed 19.60 sec; Start 97: cisd-sp; 201/401 Test #65: cc49 ............................. Passed 49.90 sec; Start 382: psi4numpy-fci; 202/401 Test #288: psimrcc-fd-freq2 ................. Passed 45.93 sec; Start 325: scf-guess-read2; 203/401 Test #30: cc15 ............................. Passed 88.99 sec; Start 361: dft-smoke; 204/401 Test #97: cisd-sp .......................... Passed 7.46 sec; Start 282: props3; 205/401 Test #342: sapt-dft1 ........................ Passed 17.69 sec; Start 237: ocepa-grad1; 206/401 Test #128: dfmp2-1 .......................... Passed 16.62 sec; Start 265: opt3; 207/401 Test #382: psi4numpy-fci .................... Passed 11.77 sec; Start 124: dfccsd-grad1; 208/401 Test #282: props3 ........................... Passed 6.31 sec; Start 195: fnocc1; 209/401 Test #53: cc37 ............................. Passed 29.79,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:18966,Test,Test,18966,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,Test #265: opt-lindep-change ................ Passed 27.51 sec; Start 164: dft-freq; 174/412 Test #174: dft-omega ........................ Passed 27.32 sec; Start 278: opt12; 175/412 Test #376: pywrap-bfs ....................... Passed 26.34 sec; Start 273: opt6; 176/412 Test #167: dft-psivar ....................... Passed 26.92 sec; Start 190: fci-tdm-2; 177/412 Test #160: dft-b2plyp ....................... Passed 26.53 sec; Start 129: dfccsdat1; 178/412 Test #283: opt-irc-3 ........................ Passed 35.90 sec; Start 178: extern2; 179/412 Test #50: cc33 ............................. Passed 33.85 sec; Start 359: tu5-sapt; 180/412 Test #173: dft3 ............................. Passed 27.34 sec; Start 7: casscf-sp; 181/412 Test #347: sapt-dft1 ........................ Passed 27.67 sec; Start 208: gibbs; 182/412 Test #268: opt2 ............................. Passed 31.71 sec; Start 110: dcft3; 183/412 Test #190: fci-tdm-2 ........................ Passed 22.12 sec; Start 248: omp2-2; 184/412 Test #359: tu5-sapt ......................... Passed 23.82 sec; Start 259: omp3-2; 185/412 Test #164: dft-freq ......................... Passed 28.89 sec; Start 323: sapt-dft-lrc; 186/412 Test #278: opt12 ............................ Passed 31.06 sec; Start 202: fnocc3; 187/412 Test #304: pywrap-checkrun-convcrit ......... Passed 35.86 sec; Start 144: dfomp2-grad1; 188/412 Test #203: fnocc4 ........................... Passed 42.55 sec; Start 22: cc10; 189/412 Test #273: opt6 ............................. Passed 37.13 sec; Start 200: fnocc1; 190/412 Test #314: rasscf-sp ........................ Passed 46.98 sec; Start 291: psimrcc-ccsd_t-4; 191/412 Test #178: extern2 .......................... Passed 37.34 sec; Start 249: omp2-3; 192/412 Test #129: dfccsdat1 ........................ Passed 40.97 sec; Start 38: cc22; 193/412 Test #323: sapt-dft-lrc ..................... Passed 23.16 sec; Start 292: psimrcc-fd-freq1; 194/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 19.7,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:17311,Test,Test,17311,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Test #268: opt2 ............................. Passed 24.99 sec; Start 347: sapt-dft1; 176/412 Test #63: cc45 ............................. Passed 29.71 sec; Start 164: dft-freq; 177/412 Test #129: dfccsdat1 ........................ Passed 24.22 sec; Start 359: tu5-sapt; 178/412 Test #167: dft-psivar ....................... Passed 26.84 sec; Start 22: cc10; 179/412 Test #54: cc37 ............................. Passed 17.07 sec; Start 190: fci-tdm-2; 180/412 Test #23: cc11 ............................. Passed 37.24 sec; Start 110: dcft3; 181/412 Test #16: cbs-xtpl-gradient ................ Passed 30.29 sec; Start 259: omp3-2; 182/412 Test #304: pywrap-checkrun-convcrit ......... Passed 25.61 sec; Start 249: omp2-3; 183/412 Test #173: dft3 ............................. Passed 27.08 sec; Start 178: extern2; 184/412 Test #314: rasscf-sp ........................ Passed 25.89 sec; Start 323: sapt-dft-lrc; 185/412 Test #203: fnocc4 ........................... Passed 22.44 sec; Start 38: cc22; 186/412 Test #278: opt12 ............................ Passed 22.72 sec; Start 21: cc1; 187/412 Test #273: opt6 ............................. Passed 22.63 sec; Start 208: gibbs; 188/412 Test #283: opt-irc-3 ........................ Passed 31.24 sec; Start 276: opt9; 189/412 Test #22: cc10 ............................. Passed 16.39 sec; Start 291: psimrcc-ccsd_t-4; 190/412 Test #110: dcft3 ............................ Passed 13.01 sec; Start 139: dfmp2-grad5; 191/412 Test #359: tu5-sapt ......................... Passed 21.09 sec; Start 297: psithon2; 192/412 Test #164: dft-freq ......................... Passed 23.16 sec; Start 316: sapt1; 193/412 Test #249: omp2-3 ........................... Passed 16.61 sec; Start 24: cc12; 194/412 Test #347: sapt-dft1 ........................ Passed 24.82 sec; Start 239: nbody-intermediates; 195/412 Test #259: omp3-2 ........................... Passed 18.69 sec; Start 322: sapt-dft-api; 196/412 Test #190: fci-tdm-2 ........................ Passed 21.75 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:17489,Test,Test,17489,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['Test'],['Test']
Testability,Test #26: cc13b ............................ Passed 33.95 sec; Start 92: ci-multi; 133/411 Test #337: scf6 ............................. Passed 27.76 sec; Start 274: opt8; 134/411 Test #342: soscf-dft ........................ Passed 29.78 sec; Start 63: cc46; 135/411 Test #323: sapt7 ............................ Passed 33.16 sec; Start 336: scf5; 136/411 Test #245: ocepa3 ........................... Passed 24.56 sec; Start 196: fd-gradient; 137/411 Test #374: dft-custom-gga ................... Passed 27.06 sec; Start 326: scf-ecp; 138/411 Test #55: cc39 ............................. Passed 21.09 sec; Start 56: cc4; 139/411 Test #63: cc46 ............................. Passed 19.28 sec; Start 1: adc1; 140/411 Test #92: ci-multi ......................... Passed 23.62 sec; Start 126: dfccsd-t-grad1; 141/411 Test #274: opt8 ............................. Passed 30.29 sec; Start 125: dfccsd-grad1; 142/411 Test #196: fd-gradient ...................... Passed 23.62 sec; Start 142: dfomp2-4; 143/411 Test #126: dfccsd-t-grad1 ................... Passed 13.89 sec; Start 156: dft-b2plyp; 144/411 Test #336: scf5 ............................. Passed 28.55 sec; Start 264: opt-lindep-change; 145/411 Test #56: cc4 .............................. Passed 21.15 sec; Start 84: cdomp2-2; 146/411 Test #1: adc1 ............................. Passed 22.62 sec; Start 72: cc54; 147/411 Test #326: scf-ecp .......................... Passed 26.12 sec; Start 20: cc1; 148/411 Test #125: dfccsd-grad1 ..................... Passed 16.34 sec; Start 166: dft-psivar; 149/411 Test #142: dfomp2-4 ......................... Passed 15.37 sec; Start 173: dft-omega; 150/411 Test #84: cdomp2-2 ......................... Passed 11.26 sec; Start 12: cbs-parser; 151/411 Test #72: cc54 ............................. Passed 9.82 sec; Start 375: pywrap-bfs; 152/411 Test #156: dft-b2plyp ....................... Passed 23.12 sec; Start 202: fnocc4; 153/411 Test #20: cc1 .............................. Passed 16.97 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:13374,Test,Test,13374,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Test #271: omp3-grad1 ....................... Passed 21.77 sec; Start 272: omp3-grad2; 329/415 Test #117: dcft8 ............................ Passed 641.13 sec; Start 273: opt-lindep-change; 330/415 Test #78: cc7 .............................. Passed 852.46 sec; Start 275: opt1-fd; 331/415 Test #47: cc3 .............................. Passed 1326.74 sec; Start 276: opt2; 332/415 Test #273: opt-lindep-change ................ Passed 14.64 sec; Start 277: opt2-fd; 333/415 Test #258: omp2-4 ........................... Passed 169.20 sec; Start 278: opt3; 334/415 Test #259: omp2-5 ........................... Passed 162.45 sec; Start 279: opt4; 335/415 Test #265: omp2p5-grad2 ..................... Passed 129.11 sec; Start 280: opt5; 336/415 Test #275: opt1-fd .......................... Passed 23.31 sec; Start 281: opt6; 337/415 Test #278: opt3 ............................. Passed 8.51 sec; Start 282: opt7; 338/415 Test #277: opt2-fd .......................... Passed 16.33 sec; Start 283: opt8; 339/415 Test #280: opt5 ............................. Passed 5.69 sec; Start 284: opt9; 340/415 Test #279: opt4 ............................. Passed 13.08 sec; Start 285: opt11; 341/415 Test #276: opt2 ............................. Passed 34.26 sec; Start 286: opt12; 342/415 Test #284: opt9 ............................. Passed 26.51 sec; Start 288: opt14; 343/415 Test #281: opt6 ............................. Passed 30.69 sec; Start 289: opt-irc-1; 344/415 Test #286: opt12 ............................ Passed 23.11 sec; Start 290: opt-irc-2; 345/415 Test #268: omp3-3 ........................... Passed 157.73 sec; Start 291: opt-irc-3; 346/415 Test #283: opt8 ............................. Passed 41.15 sec; Start 294: props1; 347/415 Test #294: props1 ........................... Passed 6.51 sec; Start 295: props2; 348/415 Test #282: opt7 ............................. Passed 53.62 sec; Start 296: props3; 349/415 Test #295: props2 ........................... Passed 9.79 sec; Start 300: psimr,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:31826,Test,Test,31826,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #271: opt5 ............................. Passed 2.02 sec; Start 272: opt6; 277/411 Test #272: opt6 ............................. Passed 13.13 sec; Start 273: opt7; 278/411 Test #273: opt7 ............................. Passed 25.45 sec; Start 274: opt8; 279/411 Test #274: opt8 ............................. Passed 19.47 sec; Start 275: opt9; 280/411 Test #275: opt9 ............................. Passed 9.79 sec; Start 276: opt11; 281/411 Test #276: opt11 ............................ Passed 29.14 sec; Start 277: opt12; 282/411 Test #277: opt12 ............................ Passed 16.66 sec; Start 279: opt14; 283/411 Test #279: opt14 ............................ Passed 69.04 sec; Start 280: opt-irc-1; 284/411 Test #280: opt-irc-1 ........................ Passed 53.50 sec; Start 281: opt-irc-2; 285/411 Test #281: opt-irc-2 ........................ Passed 84.18 sec; Start 282: opt-irc-3; 286/411 Test #282: opt-irc-3 ........................ Passed 15.17 sec; Start 283: opt-freeze-coords; 287/411 Test #283: opt-freeze-coords ................ Passed 3.15 sec; Start 284: props1; 288/411 Test #284: props1 ........................... Passed 2.52 sec; Start 285: props2; 289/411 Test #285: props2 ........................... Passed 11.98 sec; Start 286: props3; 290/411 Test #286: props3 ........................... Passed 13.90 sec; Start 287: psimrcc-ccsd_t-1; 291/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 1.41 sec; Start 288: psimrcc-ccsd_t-2; 292/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 1.46 sec; Start 289: psimrcc-ccsd_t-3; 293/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 1.43 sec; Start 290: psimrcc-ccsd_t-4; 294/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 18.05 sec; Start 291: psimrcc-fd-freq1; 295/411 Test #291: psimrcc-fd-freq1 ................. Passed 8.31 sec; Start 292: psimrcc-fd-freq2; 296/411 Test #292: psimrcc-fd-freq2 ................. Passed 55.01 sec; Start 293: psimrcc-pt2; 297/411 Test #293: psimrcc-pt2 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:26231,Test,Test,26231,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #271: opt5 ............................. Passed 2.80 sec; Start 273: opt7; 271/411 Test #260: omp3-4 ........................... Passed 82.75 sec; Start 274: opt8; 272/411 Test #270: opt4 ............................. Passed 8.49 sec; Start 275: opt9; 273/411 Test #263: omp3-grad2 ....................... Passed 63.99 sec; Start 276: opt11; 274/411 Test #261: omp3-5 ........................... Passed 81.80 sec; Start 277: opt12; 275/411 Test #272: opt6 ............................. Passed 27.35 sec; Start 279: opt14; 276/411 Test #275: opt9 ............................. Passed 20.61 sec; Start 280: opt-irc-1; 277/411 Test #277: opt12 ............................ Passed 22.89 sec; Start 281: opt-irc-2; 278/411 Test #274: opt8 ............................. Passed 39.25 sec; Start 282: opt-irc-3; 279/411 Test #273: opt7 ............................. Passed 53.11 sec; Start 283: opt-freeze-coords; 280/411 Test #283: opt-freeze-coords ................ Passed 5.99 sec; Start 284: props1; 281/411 Test #276: opt11 ............................ Passed 54.29 sec; Start 285: props2; 282/411 Test #284: props1 ........................... Passed 4.43 sec; Start 286: props3; 283/411 Test #282: opt-irc-3 ........................ Passed 30.34 sec; Start 287: psimrcc-ccsd_t-1; 284/411 Test #287: psimrcc-ccsd_t-1 ................. Passed 2.10 sec; Start 288: psimrcc-ccsd_t-2; 285/411 Test #285: props2 ........................... Passed 15.83 sec; Start 289: psimrcc-ccsd_t-3; 286/411 Test #286: props3 ........................... Passed 13.90 sec; Start 290: psimrcc-ccsd_t-4; 287/411 Test #288: psimrcc-ccsd_t-2 ................. Passed 4.82 sec; Start 291: psimrcc-fd-freq1; 288/411 Test #289: psimrcc-ccsd_t-3 ................. Passed 2.70 sec; Start 292: psimrcc-fd-freq2; 289/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 17.94 sec; Start 293: psimrcc-pt2; 290/411 Test #291: psimrcc-fd-freq1 ................. Passed 17.17 sec; Start 294: psimrcc-sp1; 291/411 Test #293: psimr,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:25965,Test,Test,25965,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Test #274: opt8 ............................. Passed 38.33 sec; Start 346: sapt-dft1; 165/411 Test #54: cc38 ............................. Passed 35.68 sec; Start 189: fci-tdm-2; 166/411 Test #32: cc17 ............................. Passed 32.96 sec; Start 172: dft3; 167/411 Test #163: dft-freq ......................... Passed 23.84 sec; Start 50: cc34; 168/411 Test #358: tu5-sapt ......................... Passed 21.03 sec; Start 313: rasscf-sp; 169/411 Test #48: cc32 ............................. Passed 18.61 sec; Start 322: sapt-dft-lrc; 170/411 Test #189: fci-tdm-2 ........................ Passed 20.74 sec; Start 252: omp2-grad2; 171/411 Test #346: sapt-dft1 ........................ Passed 22.43 sec; Start 267: opt2; 172/411 Test #50: cc34 ............................. Passed 13.15 sec; Start 272: opt6; 173/411 Test #313: rasscf-sp ........................ Passed 13.81 sec; Start 245: ocepa3; 174/411 Test #12: cbs-parser ....................... Passed 38.49 sec; Start 202: fnocc4; 175/411 Test #252: omp2-grad2 ....................... Passed 13.44 sec; Start 37: cc22; 176/411 Test #172: dft3 ............................. Passed 20.87 sec; Start 315: sapt1; 177/411 Test #322: sapt-dft-lrc ..................... Passed 20.21 sec; Start 290: psimrcc-ccsd_t-4; 178/411 Test #267: opt2 ............................. Passed 18.64 sec; Start 321: sapt-dft-api; 179/411 Test #37: cc22 ............................. Passed 6.66 sec; Start 138: dfmp2-grad5; 180/411 Test #245: ocepa3 ........................... Passed 14.38 sec; Start 72: cc54; 181/411 Test #272: opt6 ............................. Passed 17.13 sec; Start 296: psithon2; 182/411 Test #202: fnocc4 ........................... Passed 16.01 sec; Start 165: dft-grad2; 183/411 Test #72: cc54 ............................. Passed 5.51 sec; Start 177: extern2; 184/411 Test #138: dfmp2-grad5 ...................... Passed 11.11 sec; Start 160: dft-grad-lr1; 185/411 Test #315: sapt1 ............................ Passed 17.72 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:16297,Test,Test,16297,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Test #280: opt13 ............................ Passed 825.07 sec; Start 101: ci-property; 111/413 Test #318: sapt2 ............................ Passed 352.35 sec; Start 202: fnocc2; 112/413 Test #247: ocepa3 ........................... Passed 52.53 sec; Start 239: nbody-he-cluster; 113/413 Test #34: cc18 ............................. Passed 50.39 sec; Start 50: cc33; 114/413 Test #115: dcft7 ............................ Passed 394.48 sec; Start 68: cc4a; 115/413 Test #169: dft-b3lyp ........................ Passed 70.61 sec; Start 275: opt7; 116/413 Test #12: cbs-parser ....................... Passed 74.89 sec; Start 72: cc53; 117/413 Test #69: cc50 ............................. Passed 65.05 sec; Start 33: cc17; 118/413 Test #301: pywrap-alias ..................... Passed 85.24 sec; Start 164: dft-grad-meta; 119/413 Test #128: dfccsd-t-grad1 ................... Passed 60.82 sec; Start 278: opt11; 120/413 Test #50: cc33 ............................. Passed 40.75 sec; Start 52: cc35; 121/413 Test #101: ci-property ...................... Passed 58.02 sec; Start 38: cc22; 122/413 Test #56: cc39 ............................. Passed 69.67 sec; Start 74: cc55; 123/413 Test #299: pubchem1 ......................... Passed 63.57 sec; Start 154: dfomp2p5-grad1; 124/413 Test #239: nbody-he-cluster ................. Passed 60.48 sec; Start 172: dft1-alt; 125/413 Test #202: fnocc2 ........................... Passed 76.70 sec; Start 150: dfomp3-grad1; 126/413 Test #68: cc4a ............................. Passed 61.95 sec; Start 55: cc38; 127/413 Test #33: cc17 ............................. Passed 49.20 sec; Start 63: cc45; 128/413 Test #275: opt7 ............................. Passed 61.83 sec; Start 196: fd-freq-gradient; 129/413 Test #164: dft-grad-meta .................... Passed 52.68 sec; Start 152: dfomp2p5-1; 130/413 Test #52: cc35 ............................. Passed 52.95 sec; Start 22: cc10; 131/413 Test #38: cc22 ............................. Passed 53.38 sec; Start 66: cc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:11471,Test,Test,11471,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Test #280: opt5 ............................. Passed 5.69 sec; Start 284: opt9; 340/415 Test #279: opt4 ............................. Passed 13.08 sec; Start 285: opt11; 341/415 Test #276: opt2 ............................. Passed 34.26 sec; Start 286: opt12; 342/415 Test #284: opt9 ............................. Passed 26.51 sec; Start 288: opt14; 343/415 Test #281: opt6 ............................. Passed 30.69 sec; Start 289: opt-irc-1; 344/415 Test #286: opt12 ............................ Passed 23.11 sec; Start 290: opt-irc-2; 345/415 Test #268: omp3-3 ........................... Passed 157.73 sec; Start 291: opt-irc-3; 346/415 Test #283: opt8 ............................. Passed 41.15 sec; Start 294: props1; 347/415 Test #294: props1 ........................... Passed 6.51 sec; Start 295: props2; 348/415 Test #282: opt7 ............................. Passed 53.62 sec; Start 296: props3; 349/415 Test #295: props2 ........................... Passed 9.79 sec; Start 300: psimrcc-ccsd_t-4; 350/415 Test #296: props3 ........................... Passed 6.31 sec; Start 301: psimrcc-fd-freq1; 351/415 Test #285: opt11 ............................ Passed 62.59 sec; Start 302: psimrcc-fd-freq2; 352/415 Test #272: omp3-grad2 ....................... Passed 118.41 sec; Start 306: psithon2; 353/415 Test #300: psimrcc-ccsd_t-4 ................. Passed 10.81 sec; Start 307: pubchem1; 354/415 Test #291: opt-irc-3 ........................ Passed 34.77 sec; Start 308: pubchem2; 355/415 Test #308: pubchem2 ......................... Passed 2.65 sec; Start 311: pywrap-basis; 356/415 Test #269: omp3-4 ........................... Passed 164.96 sec; Start 313: pywrap-checkrun-convcrit; 357/415 Test #301: psimrcc-fd-freq1 ................. Passed 23.50 sec; Start 314: pywrap-checkrun-rhf; 358/415 Test #270: omp3-5 ........................... Passed 162.49 sec; Start 315: pywrap-checkrun-rohf; 359/415 Test #306: psithon2 ......................... Passed 24.99 sec; Start 316: pywrap-checkrun,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:32839,Test,Test,32839,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #282: opt-irc-1 ........................ Passed 84.38 sec; Start 319: sapt3; 79/413 Test #265: omp3-grad2 ....................... Passed 64.41 sec; Start 21: cc1; 80/413 Test #60: cc42 ............................. Passed 60.49 sec; Start 158: dfomp2p5-grad2; 81/413 Test #20: cbs-xtpl-wrapper ................. Passed 71.25 sec; Start 301: pywrap-alias; 82/413 Test #17: cbs-xtpl-opt ..................... Passed 84.79 sec; Start 294: psimrcc-fd-freq2; 83/413 Test #194: fd-freq-energy ................... Passed 71.76 sec; Start 321: sapt5; 84/413 Test #281: opt14 ............................ Passed 84.37 sec; Start 12: cbs-parser; 85/413 Test #246: ocepa2 ........................... Passed 62.00 sec; Start 64: cc46; 86/413 Test #207: frac-traverse .................... Passed 228.24 sec; Start 258: omp2p5-grad2; 87/413 Test #301: pywrap-alias ..................... Passed 54.99 sec; Start 74: cc55; 88/413 Test #319: sapt3 ............................ Passed 78.46 sec; Start 142: dfomp2-2; 89/413 Test #21: cc1 .............................. Passed 73.87 sec; Start 149: dfomp3-2; 90/413 Test #64: cc46 ............................. Passed 60.35 sec; Start 206: frac-ip-fitting; 91/413 Test #294: psimrcc-fd-freq2 ................. Passed 79.90 sec; Start 35: cc19; 92/413 Test #321: sapt5 ............................ Passed 73.63 sec; Start 79: cc8a; 93/413 Test #158: dfomp2p5-grad2 ................... Passed 84.82 sec; Start 153: dfomp2p5-2; 94/413 Test #12: cbs-parser ....................... Passed 84.27 sec; Start 78: cc8; 95/413 Test #258: omp2p5-grad2 ..................... Passed 70.71 sec; Start 83: cc9a; 96/413 Test #142: dfomp2-2 ......................... Passed 56.15 sec; Start 169: dft-b3lyp; 97/413 Test #74: cc55 ............................. Passed 72.94 sec; Start 72: cc53; 98/413 Test #79: cc8a ............................. Passed 57.92 sec; Start 80: cc8b; 99/413 Test #35: cc19 ............................. Passed 59.63 sec; Start 66: cc48; 100/413 Test #149,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:8587,Test,Test,8587,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Test #282: opt-irc-3 ........................ Passed 14.20 sec; Start 159: dft-grad-meta; 155/404 Test #148: dfomp3-grad1 ..................... Passed 3.61 sec; Start 342: soscf-dft; 156/404 Test #106: dcft-grad4 ....................... Passed 14.52 sec; Start 49: cc33; 157/404 Test #375: pywrap-bfs ....................... Passed 25.33 sec; Start 72: cc54; 158/404 Test #172: dft3 ............................. Passed 18.93 sec; Start 150: dfomp2p5-1; 159/404 Test #267: opt2 ............................. Passed 15.94 sec; Start 296: psithon2; 160/404 Test #150: dfomp2p5-1 ....................... Passed 2.94 sec; Start 163: dft-freq; 161/404 Test #49: cc33 ............................. Passed 5.98 sec; Start 272: opt6; 162/404 Test #72: cc54 ............................. Passed 5.02 sec; Start 189: fci-tdm-2; 163/404 Test #323: sapt7 ............................ Passed 18.91 sec; Start 32: cc17; 164/404 Test #166: dft-psivar ....................... Passed 17.69 sec; Start 138: dfmp2-grad5; 165/404 Test #296: psithon2 ......................... Passed 10.77 sec; Start 20: cc1; 166/404 Test #32: cc17 ............................. Passed 6.82 sec; Start 207: gibbs; 167/404 Test #159: dft-grad-meta .................... Passed 20.03 sec; Start 146: dfomp3-1; 168/404 Test #342: soscf-dft ........................ Passed 18.93 sec; Start 248: omp2-3; 169/404 Test #272: opt6 ............................. Passed 11.40 sec; Start 131: dfmp2-3; 170/404 Test #146: dfomp3-1 ......................... Passed 4.53 sec; Start 173: dft-omega; 171/404 Test #163: dft-freq ......................... Passed 17.07 sec; Start 177: extern2; 172/404 Test #20: cc1 .............................. Passed 10.62 sec; Start 109: dcft3; 173/404 Test #138: dfmp2-grad5 ...................... Passed 11.52 sec; Start 303: pywrap-checkrun-convcrit; 174/404 Test #189: fci-tdm-2 ........................ Passed 17.95 sec; Start 52: cc36; 175/404 Test #248: omp2-3 ........................... Passed 7.70 sec; Start ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:15266,Test,Test,15266,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['Test'],['Test']
Testability,Test #28: cc13b ............................ Passed 229.19 sec; Start 312: pywrap-cbs1; 7/415 Test #110: dcft1 ............................ Passed 127.34 sec; Start 27: cc13a; 8/415 Test #107: dcft-grad2 ....................... Passed 252.96 sec; Start 116: dcft7; 9/415 Test #79: cc8 .............................. Passed 81.11 sec; Start 208: frac-traverse; 10/415 Test #185: isapt1 ........................... Passed 272.01 sec; Start 326: sapt2; 11/415 Test #35: cc18 ............................. Passed 60.66 sec; Start 328: sapt4; 12/415 Test #245: nbody-convergence ................ Passed 293.73 sec; Start 335: scf-bz2; 13/415 Test #152: dfomp3-grad2 ..................... Passed 117.47 sec; Start 251: ocepa-grad2; 14/415 Test #233: mp2-module ....................... Passed 120.91 sec; Start 68: cc49; 15/415 Test #326: sapt2 ............................ Passed 97.27 sec; Start 58: cc4; 16/415 Test #208: frac-traverse .................... Passed 108.53 sec; Start 390: cc-module; 17/415 Test #198: fd-freq-gradient-large ........... Passed 411.24 sec; Start 34: cc17; 18/415 Test #335: scf-bz2 .......................... Passed 122.59 sec; Start 203: fnocc2; 19/415 Test #68: cc49 ............................. Passed 101.33 sec; Start 86: cdomp2-2; 20/415 Test #312: pywrap-cbs1 ...................... Passed 212.96 sec; Start 21: cbs-xtpl-dict; 21/415 Test #58: cc4 .............................. Passed 77.72 sec; Start 309: pywrap-alias; 22/415 Test #328: sapt4 ............................ Passed 175.17 sec; Start 15: cbs-xtpl-freq; 23/415 Test #251: ocepa-grad2 ...................... Passed 151.67 sec; Start 129: dfccsd-t-grad1; 24/415 Test #34: cc17 ............................. Passed 69.76 sec; Start 7: casscf-sp; 25/415 Test #21: cbs-xtpl-dict .................... Passed 74.23 sec; Start 16: cbs-xtpl-gradient; 26/415 Test #203: fnocc2 ........................... Passed 101.57 sec; Start 371: x2c1; 27/415 Test #86: cdomp2-2 ......................... Passed 86.06 sec; ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:1963,Test,Test,1963,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #28: cc13c ............................ Passed 24.56 sec; Start 145: dfomp2-grad2; 71/412 Test #76: cc6 .............................. Passed 63.00 sec; Start 264: omp3-grad2; 72/412 Test #280: opt14 ............................ Passed 90.98 sec; Start 250: omp2-4; 73/412 Test #317: sapt2 ............................ Passed 360.01 sec; Start 116: dcft9; 74/412 Test #145: dfomp2-grad2 ..................... Passed 24.12 sec; Start 261: omp3-4; 75/412 Test #264: omp3-grad2 ....................... Passed 21.01 sec; Start 193: fd-freq-energy; 76/412 Test #70: cc51 ............................. Passed 70.89 sec; Start 21: cc1; 77/412 Test #318: sapt3 ............................ Passed 80.34 sec; Start 320: sapt5; 78/412 Test #250: omp2-4 ........................... Passed 46.24 sec; Start 251: omp2-5; 79/412 Test #116: dcft9 ............................ Passed 66.57 sec; Start 20: cbs-xtpl-wrapper; 80/412 Test #21: cc1 .............................. Passed 59.47 sec; Start 262: omp3-5; 81/412 Test #261: omp3-4 ........................... Passed 70.83 sec; Start 243: ocepa-grad2; 82/412 Test #193: fd-freq-energy ................... Passed 73.69 sec; Start 293: psimrcc-fd-freq2; 83/412 Test #251: omp2-5 ........................... Passed 48.12 sec; Start 150: dfomp3-grad2; 84/412 Test #262: omp3-5 ........................... Passed 26.64 sec; Start 257: omp2p5-grad2; 85/412 Test #243: ocepa-grad2 ...................... Passed 24.41 sec; Start 245: ocepa2; 86/412 Test #150: dfomp3-grad2 ..................... Passed 20.75 sec; Start 44: cc28; 87/412 Test #320: sapt5 ............................ Passed 77.11 sec; Start 62: cc44; 88/412 Test #20: cbs-xtpl-wrapper ................. Passed 58.85 sec; Start 300: pywrap-alias; 89/412 Test #257: omp2p5-grad2 ..................... Passed 29.36 sec; Start 205: frac-ip-fitting; 90/412 Test #245: ocepa2 ........................... Passed 35.89 sec; Start 83: cc9a; 91/412 Test #83: cc9a ............................. Passed 11.86 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:7657,Test,Test,7657,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Test #28: cc13c ............................ Passed 80.48 sec; Start 298: pubchem1; 64/412 Test #281: opt-irc-1 ........................ Passed 92.68 sec; Start 251: omp2-5; 65/412 Test #116: dcft9 ............................ Passed 80.09 sec; Start 20: cbs-xtpl-wrapper; 66/412 Test #31: cc15 ............................. Passed 63.11 sec; Start 390: python-pubchem; 67/412 Test #317: sapt2 ............................ Passed 375.81 sec; Start 47: cc30; 68/412 Test #76: cc6 .............................. Passed 78.72 sec; Start 59: cc41; 69/412 Test #75: cc5a ............................. Passed 81.00 sec; Start 105: dcft-grad2; 70/412 Test #48: cc31 ............................. Passed 118.12 sec; Start 44: cc28; 71/412 Test #62: cc44 ............................. Passed 62.89 sec; Start 261: omp3-4; 72/412 Test #92: cepa-module ...................... Passed 94.63 sec; Start 257: omp2p5-grad2; 73/412 Test #27: cc13b ............................ Passed 76.46 sec; Start 148: dfomp3-2; 74/412 Test #17: cbs-xtpl-opt ..................... Passed 87.77 sec; Start 58: cc40; 75/412 Test #157: dfomp2p5-grad2 ................... Passed 63.86 sec; Start 163: dft-grad-meta; 76/412 Test #298: pubchem1 ......................... Passed 62.78 sec; Start 101: ci-property; 77/412 Test #251: omp2-5 ........................... Passed 64.13 sec; Start 264: omp3-grad2; 78/412 Test #32: cc16 ............................. Passed 140.13 sec; Start 303: pywrap-cbs1; 79/412 Test #390: python-pubchem ................... Passed 63.68 sec; Start 145: dfomp2-grad2; 80/412 Test #20: cbs-xtpl-wrapper ................. Passed 71.38 sec; Start 231: mp2-module; 81/412 Test #47: cc30 ............................. Passed 73.41 sec; Start 171: dft1-alt; 82/412 Test #257: omp2p5-grad2 ..................... Passed 60.64 sec; Start 61: cc43; 83/412 Test #163: dft-grad-meta .................... Passed 53.44 sec; Start 193: fd-freq-energy; 84/412 Test #44: cc28 ............................. Passed 82.41 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:7207,Test,Test,7207,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #28: cc13d ............................ Passed 45.89 sec; Start 60: cc43; 70/411 Test #280: opt-irc-1 ........................ Passed 62.40 sec; Start 43: cc28; 71/411 Test #2: adc2 ............................. Passed 42.66 sec; Start 302: pywrap-cbs1; 72/411 Test #219: mints-benchmark .................. Passed 44.34 sec; Start 46: cc30; 73/411 Test #131: dfmp2-3 .......................... Passed 42.79 sec; Start 348: sapt-compare; 74/411 Test #170: dft1-alt ......................... Passed 47.57 sec; Start 307: pywrap-db1; 75/411 Test #43: cc28 ............................. Passed 42.73 sec; Start 230: mp2-module; 76/411 Test #60: cc43 ............................. Passed 51.52 sec; Start 31: cc16; 77/411 Test #46: cc30 ............................. Passed 45.99 sec; Start 129: dfmp2-1; 78/411 Test #302: pywrap-cbs1 ...................... Passed 59.67 sec; Start 386: cookbook-rohf-orb-rot; 79/411 Test #348: sapt-compare ..................... Passed 41.11 sec; Start 57: cc40; 80/411 Test #307: pywrap-db1 ....................... Passed 42.02 sec; Start 312: rasci-ne; 81/411 Test #129: dfmp2-1 .......................... Passed 32.52 sec; Start 206: ghosts; 82/411 Test #230: mp2-module ....................... Passed 61.78 sec; Start 106: dcft-grad4; 83/411 Test #57: cc40 ............................. Passed 28.50 sec; Start 259: omp3-3; 84/411 Test #31: cc16 ............................. Passed 63.68 sec; Start 115: dcft9; 85/411 Test #312: rasci-ne ......................... Passed 35.69 sec; Start 323: sapt7; 86/411 Test #206: ghosts ........................... Passed 32.53 sec; Start 342: soscf-dft; 87/411 Test #386: cookbook-rohf-orb-rot ............ Passed 60.55 sec; Start 237: nbody-he-cluster; 88/411 Test #106: dcft-grad4 ....................... Passed 33.82 sec; Start 66: cc49; 89/411 Test #115: dcft9 ............................ Passed 26.24 sec; Start 359: tu6-cp-ne2; 90/411 Test #259: omp3-3 ........................... Passed 42.02 sec; Start 11: cbs-de,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:7576,Test,Test,7576,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,"Test #293: psimrcc-pt2 ...................... Passed 0.97 sec; Start 216: mints5; 395/411 Test #309: pywrap-molecule .................. Passed 1.09 sec; Start 208: matrix1; 396/411 Test #396: python-memdfjk ................... Passed 0.89 sec; Start 308: pywrap-db3; 397/411 Test #175: docs-dft ......................... Passed 0.57 sec; Start 364: options1; 398/411 Test #354: tu2-ch2-energy ................... Passed 0.81 sec; Start 215: mints4; 399/411 Test #382: psi4numpy-rhf .................... Passed 0.81 sec; Start 409: skeletonscf; 400/411 Test #208: matrix1 .......................... Passed 0.53 sec; Start 212: mints1; 401/411 Test #334: scf3 ............................. Passed 0.70 sec; Start 174: docs-bases; 402/411 Test #216: mints5 ........................... Passed 0.57 sec; Start 402: json-schema-1-throws; 403/411 Test #308: pywrap-db3 ....................... Passed 0.69 sec; Start 87: cepa1; 404/411 Test #364: options1 ......................... Passed 0.57 sec; 405/411 Test #215: mints4 ........................... Passed 0.54 sec; 406/411 Test #174: docs-bases ....................... Passed 0.52 sec; 407/411 Test #212: mints1 ........................... Passed 0.55 sec; 408/411 Test #402: json-schema-1-throws ............. Passed 0.52 sec; 409/411 Test #409: skeletonscf ...................... Passed 0.61 sec; 410/411 Test #87: cepa1 ............................ Passed 4.49 sec; 411/411 Test #318: sapt4 ............................ Passed 1705.52 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 53.30 sec*proc (2 tests); autotest = 715.90 sec*proc (26 tests); cart = 10496.39 sec*proc (123 tests); cas = 45.67 sec*proc (1 test); casscf = 97.70 sec*proc (11 tests); cbs = 775.99 sec*proc (10 tests); cc = 3501.05 sec*proc (65 tests); cdomp2 = 18.69 sec*proc (2 tests); cepa = 70.98 sec*proc (7 tests); ci = 91.90 sec*proc (8 tests); cisd = 133.06 sec*proc (7 tests); cookbook = 21.41 sec*proc (1 test); cubeprop = 18.63 sec*proc (2 te",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:37901,Test,Test,37901,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Test #297: pubchem1 ......................... Passed 22.81 sec; Start 62: cc45; 142/404 Test #126: dfccsd-t-grad1 ................... Passed 10.40 sec; Start 375: pywrap-bfs; 143/404 Test #155: dfscf-bz2 ........................ Passed 31.62 sec; Start 152: dfomp2p5-grad1; 144/404 Test #313: rasscf-sp ........................ Passed 11.43 sec; Start 54: cc38; 145/404 Test #62: cc45 ............................. Passed 7.58 sec; Start 282: opt-irc-3; 146/404 Test #33: cc18 ............................. Passed 14.20 sec; Start 172: dft3; 147/404 Test #152: dfomp2p5-grad1 ................... Passed 5.61 sec; Start 252: omp2-grad2; 148/404 Test #100: ci-property ...................... Passed 21.60 sec; Start 106: dcft-grad4; 149/404 Test #54: cc38 ............................. Passed 6.52 sec; Start 267: opt2; 150/404 Test #196: fd-gradient ...................... Passed 23.74 sec; Start 92: ci-multi; 151/404 Test #252: omp2-grad2 ....................... Passed 5.58 sec; Start 323: sapt7; 152/404 Test #92: ci-multi ......................... Passed 7.78 sec; Start 148: dfomp3-grad1; 153/404 Test #348: sapt-compare ..................... Passed 20.49 sec; Start 166: dft-psivar; 154/404 Test #282: opt-irc-3 ........................ Passed 14.20 sec; Start 159: dft-grad-meta; 155/404 Test #148: dfomp3-grad1 ..................... Passed 3.61 sec; Start 342: soscf-dft; 156/404 Test #106: dcft-grad4 ....................... Passed 14.52 sec; Start 49: cc33; 157/404 Test #375: pywrap-bfs ....................... Passed 25.33 sec; Start 72: cc54; 158/404 Test #172: dft3 ............................. Passed 18.93 sec; Start 150: dfomp2p5-1; 159/404 Test #267: opt2 ............................. Passed 15.94 sec; Start 296: psithon2; 160/404 Test #150: dfomp2p5-1 ....................... Passed 2.94 sec; Start 163: dft-freq; 161/404 Test #49: cc33 ............................. Passed 5.98 sec; Start 272: opt6; 162/404 Test #72: cc54 ............................. Passed 5.02 sec; Start 1,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338:14066,Test,Test,14066,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-404174338,1,['Test'],['Test']
Testability,Test #29: cc14 ............................. Passed 343.83 sec; Start 74: cc5a; 66/411 Test #278: opt13 ............................ Passed 797.72 sec; Start 19: cbs-xtpl-wrapper; 67/411 Test #359: tu6-cp-ne2 ....................... Passed 350.78 sec; Start 107: dcft1; 68/411 Test #292: psimrcc-fd-freq2 ................. Passed 76.46 sec; Start 159: dft-grad-meta; 69/411 Test #69: cc51 ............................. Passed 82.00 sec; Start 58: cc41; 70/411 Test #75: cc6 .............................. Passed 84.41 sec; Start 379: cc-module; 71/411 Test #242: ocepa-grad2 ...................... Passed 79.99 sec; Start 91: cepa-module; 72/411 Test #100: ci-property ...................... Passed 63.75 sec; Start 61: cc44; 73/411 Test #159: dft-grad-meta .................... Passed 50.20 sec; Start 297: pubchem1; 74/411 Test #20: cc1 .............................. Passed 93.10 sec; Start 389: python-pubchem; 75/411 Test #19: cbs-xtpl-wrapper ................. Passed 92.53 sec; Start 60: cc43; 76/411 Test #74: cc5a ............................. Passed 103.50 sec; Start 200: fnocc2; 77/411 Test #17: cbs-xtpl-opt ..................... Passed 122.34 sec; Start 170: dft1-alt; 78/411 Test #107: dcft1 ............................ Passed 106.25 sec; Start 259: omp3-3; 79/411 Test #297: pubchem1 ......................... Passed 56.59 sec; Start 66: cc49; 80/411 Test #389: python-pubchem ................... Passed 58.95 sec; Start 307: pywrap-db1; 81/411 Test #61: cc44 ............................. Passed 92.56 sec; Start 131: dfmp2-3; 82/411 Test #58: cc41 ............................. Passed 142.32 sec; Start 219: mints-benchmark; 83/411 Test #170: dft1-alt ......................... Passed 52.99 sec; Start 348: sapt-compare; 84/411 Test #200: fnocc2 ........................... Passed 65.84 sec; Start 2: adc2; 85/411 Test #307: pywrap-db1 ....................... Passed 45.25 sec; Start 115: dcft9; 86/411 Test #66: cc49 ............................. Passed 56.56 sec; Start 77: cc8; 8,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:7395,Test,Test,7395,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #29: cc14 ............................. Passed 394.66 sec; Start 386: cookbook-rohf-orb-rot; 40/411 Test #281: opt-irc-2 ........................ Passed 199.50 sec; Start 24: cc13; 41/411 Test #44: cc29 ............................. Passed 195.66 sec; Start 70: cc52; 42/411 Test #47: cc31 ............................. Passed 181.89 sec; Start 28: cc13d; 43/411 Test #379: cc-module ........................ Passed 306.49 sec; Start 161: dft-grad-lr2; 44/411 Test #13: cbs-xtpl-alpha ................... Passed 354.70 sec; Start 25: cc13a; 45/411 Test #31: cc16 ............................. Passed 243.41 sec; Start 113: dcft7; 46/411 Test #161: dft-grad-lr2 ..................... Passed 104.85 sec; Start 205: frac-traverse; 47/411 Test #70: cc52 ............................. Passed 164.44 sec; Start 316: sapt2; 48/411 Test #386: cookbook-rohf-orb-rot ............ Passed 284.29 sec; Start 318: sapt4; 49/411 Test #28: cc13d ............................ Passed 209.13 sec; Start 325: scf-bz2; 50/411 Test #24: cc13 ............................. Passed 257.74 sec; Start 168: dft1; 51/411 Test #205: frac-traverse .................... Passed 211.75 sec; Start 371: dft-custom-dhdf; 52/411 Test #325: scf-bz2 .......................... Passed 122.09 sec; Start 58: cc41; 53/411 Test #168: dft1 ............................. Passed 104.02 sec; Start 75: cc6; 54/411 Test #371: dft-custom-dhdf .................. Passed 89.70 sec; Start 279: opt14; 55/411 Test #75: cc6 .............................. Passed 81.73 sec; Start 69: cc51; 56/411 Test #58: cc41 ............................. Passed 85.94 sec; Start 60: cc43; 57/411 Test #113: dcft7 ............................ Passed 343.68 sec; Start 317: sapt3; 58/411 Test #25: cc13a ............................ Passed 404.79 sec; Start 91: cepa-module; 59/411 Test #316: sapt2 ............................ Passed 352.75 sec; Start 319: sapt5; 60/411 Test #279: opt14 ............................ Passed 78.21 sec; Start 302: pywrap-cbs1; 61/41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:4848,Test,Test,4848,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Test #2: adc2 ............................. Passed 33.36 sec; Start 16: cbs-xtpl-gradient; 149/411 Test #219: mints-benchmark .................. Passed 38.75 sec; Start 109: dcft3; 150/411 Test #92: ci-multi ......................... Passed 48.56 sec; Start 143: dfomp2-grad1; 151/411 Test #48: cc32 ............................. Passed 21.71 sec; Start 323: sapt7; 152/411 Test #106: dcft-grad4 ....................... Passed 37.45 sec; Start 53: cc37; 153/411 Test #131: dfmp2-3 .......................... Passed 40.05 sec; Start 200: fnocc2; 154/411 Test #143: dfomp2-grad1 ..................... Passed 9.64 sec; Start 206: ghosts; 155/411 Test #273: opt7 ............................. Passed 50.60 sec; Start 336: scf5; 156/411 Test #146: dfomp3-1 ......................... Passed 18.00 sec; Start 129: dfmp2-1; 157/411 Test #52: cc36 ............................. Passed 14.24 sec; Start 360: x2c1; 158/411 Test #109: dcft3 ............................ Passed 13.16 sec; Start 252: omp2-grad2; 159/411 Test #299: pywrap-alias ..................... Passed 75.37 sec; Start 337: scf6; 160/411 Test #53: cc37 ............................. Passed 9.51 sec; Start 374: dft-custom-gga; 161/411 Test #16: cbs-xtpl-gradient ................ Passed 21.53 sec; Start 342: soscf-dft; 162/411 Test #307: pywrap-db1 ....................... Passed 42.38 sec; Start 196: fd-gradient; 163/411 Test #312: rasci-ne ......................... Passed 36.76 sec; Start 274: opt8; 164/411 Test #360: x2c1 ............................. Passed 20.23 sec; Start 392: python-cc54; 165/411 Test #133: dfmp2-ecp ........................ Passed 34.96 sec; Start 326: scf-ecp; 166/411 Test #252: omp2-grad2 ....................... Passed 22.08 sec; Start 254: omp2p5-2; 167/411 Test #323: sapt7 ............................ Passed 31.93 sec; Start 258: omp3-2; 168/411 Test #206: ghosts ........................... Passed 32.07 sec; Start 264: opt-lindep-change; 169/411 Test #200: fnocc2 ........................... Passed 34,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:14926,Test,Test,14926,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['Test'],['Test']
Testability,"Test #2: adc2 ............................. Passed 36.41 sec; Start 376: cc-module,; 70/401 Test #154: dfscf-bz2 ........................ Passed 28.93 sec; Start 150: dfomp2p5-2; 71/401 Test #269: opt7 ............................. Passed 47.94 sec; Start 344: sapt-compare; 72/401 Test #73: cc5a ............................. Passed 74.57 sec; Start 105: dcft-grad4; 73/401 Test #67: cc50 ............................. Passed 55.14 sec; Start 315: sapt5; 74/401 Test #240: ocepa2 ........................... Passed 83.65 sec; Start 1: adc1; 75/401 Test #246: omp2-5 ........................... Passed 93.98 sec; Start 252: omp2p5-grad2; 76/401 Test #386: python-pubchem ................... Passed 37.36 sec; Start 270: opt8; 77/401 Test #322: scf-ecp .......................... Passed 46.62 sec; Start 293: pubchem1; 78/401 Test #344: sapt-compare ..................... Passed 36.21 sec; Start 192: fd-gradient; 79/401 Test #256: omp3-4 ........................... Passed 115.84 sec; Start 34: cc19; 80/401 Test #1: adc1 ............................. Passed 25.29 sec; Start 319: sapt7; 81/401 Test #105: dcft-grad4 ....................... Passed 37.37 sec; Start 168: dft3; 82/401 Test #315: sapt5 ............................ Passed 36.47 sec; Start 338: soscf-dft; 83/401 Test #293: pubchem1 ......................... Passed 33.06 sec; Start 158: dft-grad-meta; 84/401 Test #245: omp2-4 ........................... Passed 113.76 sec; Start 59: cc42; 85/401 Test #150: dfomp2p5-2 ....................... Passed 66.64 sec; Start 162: dft-psivar; 86/401 Test #146: dfomp3-2 ......................... Passed 83.22 sec; Start 263: opt2; 87/401 Test #270: opt8 ............................. Passed 39.82 sec; Start 248: omp2-grad2; 88/401 Test #319: sapt7 ............................ Passed 25.97 sec; Start 278: opt-irc-3; 89/401 Test #168: dft3 ............................. Passed 24.29 sec; Start 185: fci-tdm-2; 90/401 Test #259: omp3-grad2 ....................... Passed 100.33 sec; Start 241: o",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:8040,Test,Test,8040,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,"Test #306: pywrap-checkrun-rohf ............. Passed 288.21 sec; 403/412 Test #390: python-pubchem ................... Passed 69.31 sec; 404/412 Test #360: tu6-cp-ne2 ....................... Passed 164.40 sec; 405/412 Test #380: cc-module ........................ Passed 133.41 sec; 406/412 Test #319: sapt4 ............................ Passed 2071.90 sec; 407/412 Test #387: cookbook-rohf-orb-rot ............ Passed 136.41 sec; 408/412 Test #307: pywrap-checkrun-uhf .............. Passed 359.25 sec; 409/412 Test #374: dft-custom-mgga .................. Passed 183.98 sec; 410/412 Test #301: pywrap-all ....................... Passed 395.58 sec; 411/412 Test #305: pywrap-checkrun-rhf .............. Passed 385.47 sec; 412/412 Test #179: fsapt1 ........................... Passed 2170.07 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 108.50 sec*proc (2 tests); autotest = 2062.88 sec*proc (26 tests); cart = 16305.41 sec*proc (123 tests); cas = 58.41 sec*proc (1 test); casscf = 103.21 sec*proc (11 tests); cbs = 1826.17 sec*proc (11 tests); cc = 9278.45 sec*proc (65 tests); cdomp2 = 58.18 sec*proc (2 tests); cepa = 179.64 sec*proc (7 tests); ci = 118.89 sec*proc (8 tests); cisd = 183.70 sec*proc (7 tests); cookbook = 136.41 sec*proc (1 test); cubeprop = 21.80 sec*proc (2 tests); dcft = 2471.58 sec*proc (13 tests); df = 1452.90 sec*proc (38 tests); dfccd = 4.04 sec*proc (1 test); dfccd-grad = 9.99 sec*proc (1 test); dfccdl = 3.66 sec*proc (1 test); dfccsd = 6.21 sec*proc (1 test); dfccsd-grad = 32.53 sec*proc (1 test); dfccsd-t-grad = 34.47 sec*proc (1 test); dfccsdat = 24.65 sec*proc (1 test); dfccsdl = 6.27 sec*proc (1 test); dfccsdt = 11.08 sec*proc (1 test); dfep2 = 5.96 sec*proc (2 tests); dfmp2 = 175.93 sec*proc (11 tests); dfomp2 = 589.68 sec*proc (7 tests); dfomp2.5 = 145.34 sec*proc (4 tests); dfomp3 = 183.40 sec*proc (4 tests); dfscf = 147.05 sec*proc (1 test); dft = 1465.58 sec*proc (27 tests); docs = 1.67 sec*proc (2 tests); ecp = 66.44",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:38677,test,test,38677,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['test'],['test']
Testability,Test #307: pywrap-checkrun-rohf ............. Passed 509.19 sec; Start 109: dcft1; 67/413 Test #64: cc46 ............................. Passed 66.16 sec; Start 153: dfomp2p5-2; 68/413 Test #308: pywrap-checkrun-uhf .............. Passed 711.32 sec; Start 57: cc4; 69/413 Test #280: opt13 ............................ Passed 715.73 sec; Start 258: omp2p5-grad2; 70/413 Test #70: cc51 ............................. Passed 106.95 sec; Start 144: dfomp2-4; 71/413 Test #252: omp2-5 ........................... Passed 99.66 sec; Start 158: dfomp2p5-grad2; 72/413 Test #244: ocepa-grad2 ...................... Passed 93.25 sec; Start 21: cc1; 73/413 Test #80: cc8b ............................. Passed 77.16 sec; Start 67: cc49; 74/413 Test #246: ocepa2 ........................... Passed 81.77 sec; Start 79: cc8a; 75/413 Test #57: cc4 .............................. Passed 41.82 sec; Start 373: dft-custom-dhdf; 76/413 Test #180: fsapt1 ........................... Passed 1757.68 sec; Start 82: cc9; 77/413 Test #19: cbs-xtpl-nbody ................... Passed 91.35 sec; Start 81: cc8c; 78/413 Test #232: mp2-module ....................... Passed 103.88 sec; Start 26: cc13a; 79/413 Test #170: dft1 ............................. Passed 106.31 sec; Start 115: dcft7; 80/413 Test #153: dfomp2p5-2 ....................... Passed 59.14 sec; Start 207: frac-traverse; 81/413 Test #92: cepa-module ...................... Passed 187.69 sec; Start 318: sapt2; 82/413 Test #281: opt14 ............................ Passed 80.55 sec; Start 320: sapt4; 83/413 Test #109: dcft1 ............................ Passed 68.38 sec; Start 327: scf-bz2; 84/413 Test #258: omp2p5-grad2 ..................... Passed 64.16 sec; Start 265: omp3-grad2; 85/413 Test #144: dfomp2-4 ......................... Passed 62.74 sec; Start 142: dfomp2-2; 86/413 Test #67: cc49 ............................. Passed 54.95 sec; Start 83: cc9a; 87/413 Test #79: cc8a ............................. Passed 53.51 sec; Start 282: opt-irc-1; 88/413 Tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:7404,Test,Test,7404,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,"Test #309: pywrap-db3 ....................... Passed 13.36 sec; Start 403: json-schema-1-throws; 404/412 Test #175: docs-bases ....................... Passed 13.52 sec; Start 88: cepa1; 405/412 Test #216: mints4 ........................... Passed 13.68 sec; 406/412 Test #209: matrix1 .......................... Passed 13.44 sec; 407/412 Test #410: skeletonscf ...................... Passed 14.54 sec; 408/412 Test #176: docs-dft ......................... Passed 13.56 sec; 409/412 Test #365: options1 ......................... Passed 12.94 sec; 410/412 Test #403: json-schema-1-throws ............. Passed 12.51 sec; 411/412 Test #88: cepa1 ............................ Passed 15.83 sec; 412/412 Test #319: sapt4 ............................ Passed 1912.45 sec. 100% tests passed, 0 tests failed out of 412. Label Time Summary:; adc = 95.19 sec*proc (2 tests); autotest = 994.34 sec*proc (26 tests); cart = 14957.35 sec*proc (123 tests); cas = 53.75 sec*proc (1 test); casscf = 214.86 sec*proc (11 tests); cbs = 1085.57 sec*proc (11 tests); cc = 6887.79 sec*proc (65 tests); cdomp2 = 43.27 sec*proc (2 tests); cepa = 141.35 sec*proc (7 tests); ci = 206.59 sec*proc (8 tests); cisd = 285.49 sec*proc (7 tests); cookbook = 66.55 sec*proc (1 test); cubeprop = 44.67 sec*proc (2 tests); dcft = 2708.77 sec*proc (13 tests); df = 1635.28 sec*proc (38 tests); dfccd = 16.56 sec*proc (1 test); dfccd-grad = 13.91 sec*proc (1 test); dfccdl = 26.46 sec*proc (1 test); dfccsd = 15.59 sec*proc (1 test); dfccsd-grad = 22.13 sec*proc (1 test); dfccsd-t-grad = 21.66 sec*proc (1 test); dfccsdat = 12.93 sec*proc (1 test); dfccsdl = 15.16 sec*proc (1 test); dfccsdt = 15.93 sec*proc (1 test); dfep2 = 46.62 sec*proc (2 tests); dfmp2 = 296.86 sec*proc (11 tests); dfomp2 = 798.00 sec*proc (7 tests); dfomp2.5 = 88.35 sec*proc (4 tests); dfomp3 = 65.99 sec*proc (4 tests); dfscf = 149.44 sec*proc (1 test); dft = 1654.52 sec*proc (27 tests); docs = 27.08 sec*proc (2 tests); ecp = 72.20 sec*proc (2 tests); fci = 46.9",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:38841,test,tests,38841,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['test'],['tests']
Testability,Test #30: cc14 ............................. Passed 144.79 sec; Start 112: dcft5; 19/412 Test #115: dcft8 ............................ Passed 195.18 sec; Start 29: cc13d; 20/412 Test #36: cc2 .............................. Passed 211.45 sec; Start 360: tu6-cp-ne2; 21/412 Test #29: cc13d ............................ Passed 59.38 sec; Start 387: cookbook-rohf-orb-rot; 22/412 Test #13: cbs-xtpl-alpha ................... Passed 119.40 sec; Start 183: isapt1; 23/412 Test #360: tu6-cp-ne2 ....................... Passed 92.67 sec; Start 380: cc-module; 24/412 Test #387: cookbook-rohf-orb-rot ............ Passed 58.33 sec; Start 45: cc29; 25/412 Test #380: cc-module ........................ Passed 43.51 sec; Start 32: cc16; 26/412 Test #112: dcft5 ............................ Passed 143.69 sec; Start 11: cbs-delta-energy; 27/412 Test #32: cc16 ............................. Passed 37.14 sec; Start 71: cc52; 28/412 Test #11: cbs-delta-energy ................. Passed 41.66 sec; Start 282: opt-irc-2; 29/412 Test #45: cc29 ............................. Passed 71.91 sec; Start 113: dcft6; 30/412 Test #71: cc52 ............................. Passed 78.79 sec; Start 18: cbs-xtpl-func; 31/412 Test #156: dft-grad-lr3 ..................... Passed 442.09 sec; Start 182: fsapt-allterms; 32/412 Test #282: opt-irc-2 ........................ Passed 102.23 sec; Start 194: fd-freq-energy-large; 33/412 Test #113: dcft6 ............................ Passed 122.67 sec; Start 196: fd-freq-gradient-large; 34/412 Test #395: python-vibanalysis ............... Passed 724.74 sec; Start 279: opt13; 35/412 Test #228: mp2-def2 ......................... Passed 434.07 sec; Start 374: dft-custom-mgga; 36/412 Test #183: isapt1 ........................... Passed 444.63 sec; Start 321: sapt6; 37/412 Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ........... Passed 280.15 sec; Start 159: dfscf-bz2; 39/412 Test #321: sapt6 ..........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:2874,Test,Test,2874,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Test #311: rasci-h2o ........................ Passed 1.02 sec; Start 312: rasci-ne; 316/411 Test #312: rasci-ne ......................... Passed 26.87 sec; Start 313: rasscf-sp; 317/411 Test #313: rasscf-sp ........................ Passed 2.99 sec; Start 314: sad1; 318/411 Test #314: sad1 ............................. Passed 2.34 sec; Start 315: sapt1; 319/411 Test #315: sapt1 ............................ Passed 15.26 sec; Start 317: sapt3; 320/411 Test #317: sapt3 ............................ Passed 65.42 sec; Start 319: sapt5; 321/411 Test #319: sapt5 ............................ Passed 59.80 sec; Start 320: sapt6; 322/411 Test #320: sapt6 ............................ Passed 124.23 sec; Start 321: sapt-dft-api; 323/411 Test #321: sapt-dft-api ..................... Passed 15.41 sec; Start 322: sapt-dft-lrc; 324/411 Test #322: sapt-dft-lrc ..................... Passed 18.05 sec; Start 323: sapt7; 325/411 Test #323: sapt7 ............................ Passed 28.88 sec; Start 324: sapt8; 326/411 Test #324: sapt8 ............................ Passed 11.64 sec; Start 326: scf-ecp; 327/411 Test #326: scf-ecp .......................... Passed 20.55 sec; Start 327: scf-guess-read1; 328/411 Test #327: scf-guess-read1 .................. Passed 1.55 sec; Start 328: scf-upcast-custom-basis; 329/411 Test #328: scf-upcast-custom-basis .......... Passed 1.40 sec; Start 329: scf-guess-read2; 330/411 Test #329: scf-guess-read2 .................. Passed 3.63 sec; Start 330: scf-bs; 331/411 Test #330: scf-bs ........................... Passed 1.09 sec; Start 331: scf1; 332/411 Test #331: scf1 ............................. Passed 3.69 sec; Start 332: scf-occ; 333/411 Test #332: scf-occ .......................... Passed 1.57 sec; Start 333: scf2; 334/411 Test #333: scf2 ............................. Passed 1.37 sec; Start 334: scf3; 335/411 Test #334: scf3 ............................. Passed 0.88 sec; Start 335: scf4; 336/411 Test #335: scf4 ............................. Passed 5.62 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:29931,Test,Test,29931,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #311: rasci-h2o ........................ Passed 1.15 sec; Start 312: rasci-ne; 316/411 Test #312: rasci-ne ......................... Passed 30.80 sec; Start 313: rasscf-sp; 317/411 Test #313: rasscf-sp ........................ Passed 3.35 sec; Start 314: sad1; 318/411 Test #314: sad1 ............................. Passed 2.32 sec; Start 315: sapt1; 319/411 Test #315: sapt1 ............................ Passed 16.80 sec; Start 317: sapt3; 320/411 Test #317: sapt3 ............................ Passed 62.76 sec; Start 319: sapt5; 321/411 Test #319: sapt5 ............................ Passed 67.51 sec; Start 320: sapt6; 322/411 Test #320: sapt6 ............................ Passed 144.15 sec; Start 321: sapt-dft-api; 323/411 Test #321: sapt-dft-api ..................... Passed 15.28 sec; Start 322: sapt-dft-lrc; 324/411 Test #322: sapt-dft-lrc ..................... Passed 18.85 sec; Start 323: sapt7; 325/411 Test #323: sapt7 ............................ Passed 28.91 sec; Start 324: sapt8; 326/411 Test #324: sapt8 ............................ Passed 11.95 sec; Start 326: scf-ecp; 327/411 Test #326: scf-ecp .......................... Passed 21.50 sec; Start 327: scf-guess-read1; 328/411 Test #327: scf-guess-read1 .................. Passed 1.43 sec; Start 328: scf-upcast-custom-basis; 329/411 Test #328: scf-upcast-custom-basis .......... Passed 1.66 sec; Start 329: scf-guess-read2; 330/411 Test #329: scf-guess-read2 .................. Passed 3.38 sec; Start 330: scf-bs; 331/411 Test #330: scf-bs ........................... Passed 1.12 sec; Start 331: scf1; 332/411 Test #331: scf1 ............................. Passed 4.00 sec; Start 332: scf-occ; 333/411 Test #332: scf-occ .......................... Passed 1.67 sec; Start 333: scf2; 334/411 Test #333: scf2 ............................. Passed 1.47 sec; Start 334: scf3; 335/411 Test #334: scf3 ............................. Passed 0.82 sec; Start 335: scf4; 336/411 Test #335: scf4 ............................. Passed 5.58 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:29960,Test,Test,29960,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #311: rasci-h2o ........................ Passed 2.14 sec; Start 313: rasscf-sp; 302/411 Test #103: dcft-grad1 ....................... Passed 694.99 sec; Start 314: sad1; 303/411 Test #314: sad1 ............................. Passed 4.30 sec; Start 315: sapt1; 304/411 Test #307: pywrap-db1 ....................... Passed 43.56 sec; Start 317: sapt3; 305/411 Test #313: rasscf-sp ........................ Passed 18.30 sec; Start 319: sapt5; 306/411 Test #299: pywrap-alias ..................... Passed 96.68 sec; Start 320: sapt6; 307/411 Test #315: sapt1 ............................ Passed 18.51 sec; Start 321: sapt-dft-api; 308/411 Test #312: rasci-ne ......................... Passed 34.65 sec; Start 322: sapt-dft-lrc; 309/411 Test #302: pywrap-cbs1 ...................... Passed 113.59 sec; Start 323: sapt7; 310/411 Test #321: sapt-dft-api ..................... Passed 19.65 sec; Start 324: sapt8; 311/411 Test #322: sapt-dft-lrc ..................... Passed 21.96 sec; Start 326: scf-ecp; 312/411 Test #324: sapt8 ............................ Passed 14.45 sec; Start 327: scf-guess-read1; 313/411 Test #327: scf-guess-read1 .................. Passed 2.09 sec; Start 328: scf-upcast-custom-basis; 314/411 Test #328: scf-upcast-custom-basis .......... Passed 2.57 sec; Start 329: scf-guess-read2; 315/411 Test #162: dft-grad-lr3 ..................... Passed 457.07 sec; Start 330: scf-bs; 316/411 Test #330: scf-bs ........................... Passed 2.31 sec; Start 331: scf1; 317/411 Test #281: opt-irc-2 ........................ Passed 181.13 sec; Start 332: scf-occ; 318/411 Test #329: scf-guess-read2 .................. Passed 8.37 sec; Start 333: scf2; 319/411 Test #331: scf1 ............................. Passed 5.33 sec; Start 334: scf3; 320/411 Test #332: scf-occ .......................... Passed 3.27 sec; Start 335: scf4; 321/411 Test #318: sapt4 ............................ Passed 2052.59 sec; Start 336: scf5; 322/411 Test #334: scf3 ............................. Passed 0.81,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:29122,Test,Test,29122,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Test #311: rasci-h2o ........................ Passed 5.24 sec; Start 313: rasscf-sp; 310/411 Test #312: rasci-ne ......................... Passed 35.09 sec; Start 314: sad1; 311/411 Test #314: sad1 ............................. Passed 3.73 sec; Start 315: sapt1; 312/411 Test #315: sapt1 ............................ Passed 18.44 sec; Start 317: sapt3; 313/411 Test #313: rasscf-sp ........................ Passed 57.25 sec; Start 319: sapt5; 314/411 Test #240: ocepa-freq1 ...................... Passed 660.21 sec; Start 320: sapt6; 315/411 Test #302: pywrap-cbs1 ...................... Passed 205.80 sec; Start 321: sapt-dft-api; 316/411 Test #321: sapt-dft-api ..................... Passed 18.52 sec; Start 322: sapt-dft-lrc; 317/411 Test #317: sapt3 ............................ Passed 71.48 sec; Start 323: sapt7; 318/411 Test #322: sapt-dft-lrc ..................... Passed 21.17 sec; Start 324: sapt8; 319/411 Test #319: sapt5 ............................ Passed 72.33 sec; Start 326: scf-ecp; 320/411 Test #324: sapt8 ............................ Passed 16.21 sec; Start 327: scf-guess-read1; 321/411 Test #327: scf-guess-read1 .................. Passed 3.33 sec; Start 328: scf-upcast-custom-basis; 322/411 Test #328: scf-upcast-custom-basis .......... Passed 3.34 sec; Start 329: scf-guess-read2; 323/411 Test #323: sapt7 ............................ Passed 36.08 sec; Start 330: scf-bs; 324/411 Test #329: scf-guess-read2 .................. Passed 11.05 sec; Start 331: scf1; 325/411 Test #330: scf-bs ........................... Passed 2.28 sec; Start 332: scf-occ; 326/411 Test #326: scf-ecp .......................... Passed 34.58 sec; Start 333: scf2; 327/411 Test #333: scf2 ............................. Passed 1.69 sec; Start 334: scf3; 328/411 Test #332: scf-occ .......................... Passed 3.43 sec; Start 335: scf4; 329/411 Test #334: scf3 ............................. Passed 1.53 sec; Start 336: scf5; 330/411 Test #331: scf1 ............................. Passed 5.00 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:29715,Test,Test,29715,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Test #312: rasci-ne ......................... Passed 26.87 sec; Start 313: rasscf-sp; 317/411 Test #313: rasscf-sp ........................ Passed 2.99 sec; Start 314: sad1; 318/411 Test #314: sad1 ............................. Passed 2.34 sec; Start 315: sapt1; 319/411 Test #315: sapt1 ............................ Passed 15.26 sec; Start 317: sapt3; 320/411 Test #317: sapt3 ............................ Passed 65.42 sec; Start 319: sapt5; 321/411 Test #319: sapt5 ............................ Passed 59.80 sec; Start 320: sapt6; 322/411 Test #320: sapt6 ............................ Passed 124.23 sec; Start 321: sapt-dft-api; 323/411 Test #321: sapt-dft-api ..................... Passed 15.41 sec; Start 322: sapt-dft-lrc; 324/411 Test #322: sapt-dft-lrc ..................... Passed 18.05 sec; Start 323: sapt7; 325/411 Test #323: sapt7 ............................ Passed 28.88 sec; Start 324: sapt8; 326/411 Test #324: sapt8 ............................ Passed 11.64 sec; Start 326: scf-ecp; 327/411 Test #326: scf-ecp .......................... Passed 20.55 sec; Start 327: scf-guess-read1; 328/411 Test #327: scf-guess-read1 .................. Passed 1.55 sec; Start 328: scf-upcast-custom-basis; 329/411 Test #328: scf-upcast-custom-basis .......... Passed 1.40 sec; Start 329: scf-guess-read2; 330/411 Test #329: scf-guess-read2 .................. Passed 3.63 sec; Start 330: scf-bs; 331/411 Test #330: scf-bs ........................... Passed 1.09 sec; Start 331: scf1; 332/411 Test #331: scf1 ............................. Passed 3.69 sec; Start 332: scf-occ; 333/411 Test #332: scf-occ .......................... Passed 1.57 sec; Start 333: scf2; 334/411 Test #333: scf2 ............................. Passed 1.37 sec; Start 334: scf3; 335/411 Test #334: scf3 ............................. Passed 0.88 sec; Start 335: scf4; 336/411 Test #335: scf4 ............................. Passed 5.62 sec; Start 336: scf5; 337/411 Test #336: scf5 ............................. Passed 20.24 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:30023,Test,Test,30023,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #312: rasci-ne ......................... Passed 30.80 sec; Start 313: rasscf-sp; 317/411 Test #313: rasscf-sp ........................ Passed 3.35 sec; Start 314: sad1; 318/411 Test #314: sad1 ............................. Passed 2.32 sec; Start 315: sapt1; 319/411 Test #315: sapt1 ............................ Passed 16.80 sec; Start 317: sapt3; 320/411 Test #317: sapt3 ............................ Passed 62.76 sec; Start 319: sapt5; 321/411 Test #319: sapt5 ............................ Passed 67.51 sec; Start 320: sapt6; 322/411 Test #320: sapt6 ............................ Passed 144.15 sec; Start 321: sapt-dft-api; 323/411 Test #321: sapt-dft-api ..................... Passed 15.28 sec; Start 322: sapt-dft-lrc; 324/411 Test #322: sapt-dft-lrc ..................... Passed 18.85 sec; Start 323: sapt7; 325/411 Test #323: sapt7 ............................ Passed 28.91 sec; Start 324: sapt8; 326/411 Test #324: sapt8 ............................ Passed 11.95 sec; Start 326: scf-ecp; 327/411 Test #326: scf-ecp .......................... Passed 21.50 sec; Start 327: scf-guess-read1; 328/411 Test #327: scf-guess-read1 .................. Passed 1.43 sec; Start 328: scf-upcast-custom-basis; 329/411 Test #328: scf-upcast-custom-basis .......... Passed 1.66 sec; Start 329: scf-guess-read2; 330/411 Test #329: scf-guess-read2 .................. Passed 3.38 sec; Start 330: scf-bs; 331/411 Test #330: scf-bs ........................... Passed 1.12 sec; Start 331: scf1; 332/411 Test #331: scf1 ............................. Passed 4.00 sec; Start 332: scf-occ; 333/411 Test #332: scf-occ .......................... Passed 1.67 sec; Start 333: scf2; 334/411 Test #333: scf2 ............................. Passed 1.47 sec; Start 334: scf3; 335/411 Test #334: scf3 ............................. Passed 0.82 sec; Start 335: scf4; 336/411 Test #335: scf4 ............................. Passed 5.58 sec; Start 336: scf5; 337/411 Test #336: scf5 ............................. Passed 20.24 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:30052,Test,Test,30052,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #314: sapt4 ............................ Passed 176.27 sec; Start 31: cc16; 15/401 Test #113: dcft8 ............................ Passed 344.19 sec; Start 275: opt14; 16/401 Test #354: tu6-cp-ne2 ....................... Passed 347.59 sec; Start 41: cc26; 17/401 Test #110: dcft5 ............................ Passed 355.89 sec; Start 276: opt-irc-1; 18/401 Test #112: dcft7 ............................ Passed 358.91 sec; Start 90: cepa-module; 19/401 Test #164: dft1 ............................. Passed 106.51 sec; Start 96: cisd-opt-fd; 20/401 Test #223: mp2-def2 ......................... Passed 82.85 sec; Start 28: cc13d; 21/401 Test #42: cc27 ............................. Passed 392.24 sec; Start 44: cc29; 22/401 Test #75: cc7 .............................. Passed 394.89 sec; Start 47: cc31; 23/401 Test #275: opt14 ............................ Passed 76.63 sec; Start 368: dft-custom-mgga; 24/401 Test #174: fsapt1 ........................... Passed 424.29 sec; Start 19: cbs-xtpl-wrapper; 25/401 Test #276: opt-irc-1 ........................ Passed 89.12 sec; Start 316: sapt6; 26/401 Test #17: cbs-xtpl-opt ..................... Passed 104.19 sec; Start 114: dcft9; 27/401 Test #40: cc25 ............................. Passed 450.80 sec; Start 179: isapt2; 28/401 Test #36: cc21 ............................. Passed 451.45 sec; Start 69: cc52; 29/401 Test #96: cisd-opt-fd ...................... Passed 87.68 sec; Start 74: cc6; 30/401 Test #368: dft-custom-mgga .................. Passed 62.73 sec; Start 200: frac-ip-fitting; 31/401 Test #19: cbs-xtpl-wrapper ................. Passed 62.39 sec; Start 166: dft1-alt; 32/401 Test #90: cepa-module ...................... Passed 125.09 sec; Start 343: sapt-dft2; 33/401 Test #236: ocepa-freq1 ...................... Passed 489.86 sec; Start 58: cc41; 34/401 Test #179: isapt2 ........................... Passed 46.85 sec; Start 366: dft-custom-dhdf; 35/401 Test #316: sapt6 ............................ Passed 72.26 sec; Start 11: cbs-de,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832:3027,Test,Test,3027,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-402453832,1,['Test'],['Test']
Testability,"Test #320: sapt4 ............................ Passed 1752.25 sec. 100% tests passed, 0 tests failed out of 413. Label Time Summary:; adc = 61.49 sec*proc (2 tests); autotest = 922.50 sec*proc (26 tests); cart = 14440.26 sec*proc (123 tests); cas = 54.08 sec*proc (1 test); casscf = 52.79 sec*proc (11 tests); cbs = 1204.67 sec*proc (11 tests); cc = 8491.83 sec*proc (65 tests); cdomp2 = 14.24 sec*proc (2 tests); cepa = 61.54 sec*proc (7 tests); ci = 100.79 sec*proc (8 tests); cisd = 153.89 sec*proc (7 tests); cookbook = 58.96 sec*proc (1 test); cubeprop = 23.43 sec*proc (3 tests); dcft = 3267.46 sec*proc (13 tests); df = 1398.11 sec*proc (38 tests); dfccd = 1.45 sec*proc (1 test); dfccd-grad = 4.92 sec*proc (1 test); dfccdl = 1.45 sec*proc (1 test); dfccsd = 5.83 sec*proc (1 test); dfccsd-grad = 12.88 sec*proc (1 test); dfccsd-t-grad = 23.29 sec*proc (1 test); dfccsdat = 6.62 sec*proc (1 test); dfccsdl = 4.23 sec*proc (1 test); dfccsdt = 3.54 sec*proc (1 test); dfep2 = 5.17 sec*proc (2 tests); dfmp2 = 147.71 sec*proc (11 tests); dfomp2 = 839.71 sec*proc (7 tests); dfomp2.5 = 75.15 sec*proc (4 tests); dfomp3 = 76.55 sec*proc (4 tests); dfscf = 140.11 sec*proc (1 test); dft = 1393.25 sec*proc (27 tests); docs = 1.19 sec*proc (2 tests); ecp = 56.86 sec*proc (2 tests); fci = 11.44 sec*proc (2 tests); fcidump = 3.20 sec*proc (1 test); findif = 882.37 sec*proc (5 tests); fnocc = 60.65 sec*proc (4 tests); freq = 907.54 sec*proc (6 tests); gradient = 1348.43 sec*proc (16 tests); json = 16.86 sec*proc (8 tests); longtests = 3472.72 sec*proc (5 tests); mcscf = 3.06 sec*proc (3 tests); minitests = 70.98 sec*proc (4 tests); mints = 87.46 sec*proc (14 tests); misc = 462.46 sec*proc (16 tests); mp2 = 512.51 sec*proc (13 tests); nbody = 53.58 sec*proc (2 tests); numpy = 0.80 sec*proc (1 test); ocepa = 556.75 sec*proc (6 tests); omp = 259.48 sec*proc (18 tests); opt = 1349.10 sec*proc (21 tests); plug = 7.90 sec*proc (7 tests); prop = 2.27 sec*proc (1 test); properties = 128.12 sec*pro",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:39451,test,tests,39451,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['test'],['tests']
Testability,Test #320: sapt5 ............................ Passed 93.23 sec; Start 17: cbs-xtpl-opt; 63/412 Test #76: cc6 .............................. Passed 75.78 sec; Start 20: cbs-xtpl-wrapper; 64/412 Test #70: cc51 ............................. Passed 87.01 sec; Start 260: omp3-3; 65/412 Test #205: frac-ip-fitting .................. Passed 76.46 sec; Start 390: python-pubchem; 66/412 Test #206: frac-traverse .................... Passed 244.37 sec; Start 62: cc44; 67/412 Test #293: psimrcc-fd-freq2 ................. Passed 85.30 sec; Start 261: omp3-4; 68/412 Test #193: fd-freq-energy ................... Passed 63.85 sec; Start 116: dcft9; 69/412 Test #168: dft-b3lyp ........................ Passed 82.97 sec; Start 298: pubchem1; 70/412 Test #26: cc13a ............................ Passed 316.11 sec; Start 44: cc28; 71/412 Test #231: mp2-module ....................... Passed 82.21 sec; Start 21: cc1; 72/412 Test #20: cbs-xtpl-wrapper ................. Passed 82.20 sec; Start 243: ocepa-grad2; 73/412 Test #390: python-pubchem ................... Passed 77.47 sec; Start 19: cbs-xtpl-nbody; 74/412 Test #17: cbs-xtpl-opt ..................... Passed 98.26 sec; Start 28: cc13c; 75/412 Test #114: dcft7 ............................ Passed 323.56 sec; Start 27: cc13b; 76/412 Test #260: omp3-3 ........................... Passed 91.31 sec; Start 245: ocepa2; 77/412 Test #62: cc44 ............................. Passed 89.37 sec; Start 264: omp3-grad2; 78/412 Test #261: omp3-4 ........................... Passed 96.80 sec; Start 101: ci-property; 79/412 Test #298: pubchem1 ......................... Passed 86.18 sec; Start 251: omp2-5; 80/412 Test #116: dcft9 ............................ Passed 108.41 sec; Start 250: omp2-4; 81/412 Test #44: cc28 ............................. Passed 98.15 sec; Start 262: omp3-5; 82/412 Test #317: sapt2 ............................ Passed 372.09 sec; Start 257: omp2p5-grad2; 83/412 Test #243: ocepa-grad2 ...................... Passed 99.73 sec; Start 31: cc,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141:7134,Test,Test,7134,https://psicode.org,https://github.com/psi4/psi4/pull/1227#issuecomment-421362141,1,['Test'],['Test']
Testability,Test #327: scf-guess-read1 .................. Passed 2.47 sec; Start 328: scf-upcast-custom-basis; 314/411 Test #324: sapt8 ............................ Passed 14.51 sec; Start 329: scf-guess-read2; 315/411 Test #328: scf-upcast-custom-basis .......... Passed 1.97 sec; Start 330: scf-bs; 316/411 Test #330: scf-bs ........................... Passed 1.63 sec; Start 331: scf1; 317/411 Test #329: scf-guess-read2 .................. Passed 6.23 sec; Start 332: scf-occ; 318/411 Test #331: scf1 ............................. Passed 4.71 sec; Start 333: scf2; 319/411 Test #332: scf-occ .......................... Passed 3.86 sec; Start 334: scf3; 320/411 Test #333: scf2 ............................. Passed 2.36 sec; Start 335: scf4; 321/411 Test #334: scf3 ............................. Passed 0.75 sec; Start 336: scf5; 322/411 Test #281: opt-irc-2 ........................ Passed 136.33 sec; Start 337: scf6; 323/411 Test #323: sapt7 ............................ Passed 33.35 sec; Start 338: scf7; 324/411 Test #326: scf-ecp .......................... Passed 29.07 sec; Start 339: scf-property; 325/411 Test #335: scf4 ............................. Passed 10.70 sec; Start 340: soscf-large; 326/411 Test #339: scf-property ..................... Passed 4.58 sec; Start 341: soscf-ref; 327/411 Test #338: scf7 ............................. Passed 13.74 sec; Start 342: soscf-dft; 328/411 Test #319: sapt5 ............................ Passed 74.62 sec; Start 343: stability1; 329/411 Test #317: sapt3 ............................ Passed 76.90 sec; Start 344: dfep2-1; 330/411 Test #341: soscf-ref ........................ Passed 11.34 sec; Start 345: dfep2-2; 331/411 Test #343: stability1 ....................... Passed 3.84 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 3.53 sec; Start 347: sapt-dft2; 333/411 Test #340: soscf-large ...................... Passed 15.14 sec; Start 348: sapt-compare; 334/411 Test #345: dfep2-2 .......................... Passed,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:30169,Test,Test,30169,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Test #329: scf-guess-read2 .................. Passed 6.02 sec; Start 331: scf1; 283/411 Test #233: mp3-grad1 ........................ Passed 1.89 sec; Start 171: dft2; 284/411 Test #339: scf-property ..................... Passed 5.57 sec; Start 344: dfep2-1; 285/411 Test #117: dfcasscf-sa-sp ................... Passed 5.69 sec; Start 265: opt1; 286/411 Test #344: dfep2-1 .......................... Passed 4.11 sec; Start 223: molden1; 287/411 Test #331: scf1 ............................. Passed 5.42 sec; Start 190: fci-coverage; 288/411 Test #10: castup3 .......................... Passed 8.69 sec; Start 86: cepa0-grad2; 289/411 Test #171: dft2 ............................. Passed 5.48 sec; Start 134: dfmp2-grad1; 290/411 Test #9: castup2 .......................... Passed 10.20 sec; Start 85: cepa0-grad1; 291/411 Test #265: opt1 ............................. Passed 5.72 sec; Start 179: fsapt2; 292/411 Test #134: dfmp2-grad1 ...................... Passed 5.24 sec; Start 136: dfmp2-grad3; 293/411 Test #3: casscf-fzc-sp .................... Passed 11.70 sec; Start 187: fci-h2o-fzcv; 294/411 Test #85: cepa0-grad1 ...................... Passed 5.54 sec; Start 376: pywrap-align; 295/411 Test #223: molden1 .......................... Passed 6.44 sec; Start 385: psi4numpy-fci; 296/411 Test #190: fci-coverage ..................... Passed 6.40 sec; Start 370: scf-coverage; 297/411 Test #86: cepa0-grad2 ...................... Passed 7.61 sec; Start 310: rasci-c2-active; 298/411 Test #136: dfmp2-grad3 ...................... Passed 2.86 sec; Start 262: omp3-grad1; 299/411 Test #179: fsapt2 ........................... Passed 4.74 sec; Start 271: opt5; 300/411 Test #385: psi4numpy-fci .................... Passed 4.01 sec; Start 229: mp2-grad2; 301/411 Test #187: fci-h2o-fzcv ..................... Passed 4.42 sec; Start 255: omp2p5-grad1; 302/411 Test #370: scf-coverage ..................... Passed 4.30 sec; Start 236: mpn-bh; 303/411 Test #262: omp3-grad1 ....................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:27287,Test,Test,27287,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Test #331: scf1 ............................. Passed 5.33 sec; Start 334: scf3; 320/411 Test #332: scf-occ .......................... Passed 3.27 sec; Start 335: scf4; 321/411 Test #318: sapt4 ............................ Passed 2052.59 sec; Start 336: scf5; 322/411 Test #334: scf3 ............................. Passed 0.81 sec; Start 337: scf6; 323/411 Test #333: scf2 ............................. Passed 1.56 sec; Start 338: scf7; 324/411 Test #323: sapt7 ............................ Passed 34.19 sec; Start 339: scf-property; 325/411 Test #339: scf-property ..................... Passed 6.15 sec; Start 340: soscf-large; 326/411 Test #335: scf4 ............................. Passed 13.02 sec; Start 341: soscf-ref; 327/411 Test #326: scf-ecp .......................... Passed 30.68 sec; Start 342: soscf-dft; 328/411 Test #338: scf7 ............................. Passed 16.23 sec; Start 343: stability1; 329/411 Test #343: stability1 ....................... Passed 2.42 sec; Start 344: dfep2-1; 330/411 Test #319: sapt5 ............................ Passed 75.45 sec; Start 345: dfep2-2; 331/411 Test #317: sapt3 ............................ Passed 76.62 sec; Start 346: sapt-dft1; 332/411 Test #344: dfep2-1 .......................... Passed 4.52 sec; Start 347: sapt-dft2; 333/411 Test #345: dfep2-2 .......................... Passed 2.12 sec; Start 348: sapt-compare; 334/411 Test #340: soscf-large ...................... Passed 15.89 sec; Start 349: sapt-sf1; 335/411 Test #341: soscf-ref ........................ Passed 14.83 sec; Start 350: dft-custom; 336/411 Test #336: scf5 ............................. Passed 32.53 sec; Start 351: dft-reference; 337/411 Test #349: sapt-sf1 ......................... Passed 5.59 sec; Start 352: stability2; 338/411 Test #352: stability2 ....................... Passed 1.67 sec; Start 353: tu1-h2o-energy; 339/411 Test #351: dft-reference .................... Passed 3.51 sec; Start 354: tu2-ch2-energy; 340/411 Test #353: tu1-h2o-energy ..............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:30798,Test,Test,30798,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Test #333: scf2 ............................. Passed 1.69 sec; Start 334: scf3; 328/411 Test #332: scf-occ .......................... Passed 3.43 sec; Start 335: scf4; 329/411 Test #334: scf3 ............................. Passed 1.53 sec; Start 336: scf5; 330/411 Test #331: scf1 ............................. Passed 5.00 sec; Start 337: scf6; 331/411 Test #335: scf4 ............................. Passed 15.70 sec; Start 338: scf7; 332/411 Test #338: scf7 ............................. Passed 19.73 sec; Start 339: scf-property; 333/411 Test #339: scf-property ..................... Passed 6.13 sec; Start 340: soscf-large; 334/411 Test #336: scf5 ............................. Passed 47.10 sec; Start 341: soscf-ref; 335/411 Test #340: soscf-large ...................... Passed 14.32 sec; Start 342: soscf-dft; 336/411 Test #337: scf6 ............................. Passed 55.58 sec; Start 343: stability1; 337/411 Test #343: stability1 ....................... Passed 4.70 sec; Start 344: dfep2-1; 338/411 Test #341: soscf-ref ........................ Passed 17.33 sec; Start 345: dfep2-2; 339/411 Test #344: dfep2-1 .......................... Passed 4.28 sec; Start 346: sapt-dft1; 340/411 Test #345: dfep2-2 .......................... Passed 2.36 sec; Start 347: sapt-dft2; 341/411 Test #320: sapt6 ............................ Passed 163.62 sec; Start 348: sapt-compare; 342/411 Test #342: soscf-dft ........................ Passed 32.27 sec; Start 349: sapt-sf1; 343/411 Test #349: sapt-sf1 ......................... Passed 1.95 sec; Start 350: dft-custom; 344/411 Test #346: sapt-dft1 ........................ Passed 24.71 sec; Start 351: dft-reference; 345/411 Test #351: dft-reference .................... Passed 3.46 sec; Start 352: stability2; 346/411 Test #352: stability2 ....................... Passed 2.41 sec; Start 353: tu1-h2o-energy; 347/411 Test #353: tu1-h2o-energy ................... Passed 1.29 sec; Start 354: tu2-ch2-energy; 348/411 Test #354: tu2-ch2-energy ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325:31388,Test,Test,31388,https://psicode.org,https://github.com/psi4/psi4/pull/1112#issuecomment-409912325,1,['Test'],['Test']
Testability,Test #337: scf6 ............................. Passed 35.45 sec; Start 374: dft-custom-gga; 133/411 Test #360: x2c1 ............................. Passed 37.74 sec; Start 71: cc53; 134/411 Test #80: cc8c ............................. Passed 43.04 sec; Start 263: omp3-grad2; 135/411 Test #273: opt7 ............................. Passed 48.34 sec; Start 49: cc33; 136/411 Test #1: adc1 ............................. Passed 24.91 sec; Start 336: scf5; 137/411 Test #342: soscf-dft ........................ Passed 32.27 sec; Start 20: cc1; 138/411 Test #374: dft-custom-gga ................... Passed 31.31 sec; Start 242: ocepa-grad2; 139/411 Test #56: cc4 .............................. Passed 39.24 sec; Start 84: cdomp2-2; 140/411 Test #49: cc33 ............................. Passed 34.54 sec; Start 125: dfccsd-grad1; 141/411 Test #336: scf5 ............................. Passed 35.51 sec; Start 326: scf-ecp; 142/411 Test #71: cc53 ............................. Passed 48.12 sec; Start 33: cc18; 143/411 Test #263: omp3-grad2 ....................... Passed 66.43 sec; Start 92: ci-multi; 144/411 Test #84: cdomp2-2 ......................... Passed 39.81 sec; Start 140: dfomp2-2; 145/411 Test #326: scf-ecp .......................... Passed 28.55 sec; Start 264: opt-lindep-change; 146/411 Test #125: dfccsd-grad1 ..................... Passed 39.72 sec; Start 200: fnocc2; 147/411 Test #33: cc18 ............................. Passed 48.20 sec; Start 392: python-cc54; 148/411 Test #264: opt-lindep-change ................ Passed 25.78 sec; Start 196: fd-gradient; 149/411 Test #92: ci-multi ......................... Passed 36.95 sec; Start 16: cbs-xtpl-gradient; 150/411 Test #242: ocepa-grad2 ...................... Passed 79.46 sec; Start 375: pywrap-bfs; 151/411 Test #20: cc1 .............................. Passed 85.27 sec; Start 156: dft-b2plyp; 152/411 Test #140: dfomp2-2 ......................... Passed 43.89 sec; Start 51: cc35; 153/411 Test #392: python-cc54 ...................... Passe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:13334,Test,Test,13334,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Test #340: soscf-large ...................... Passed 14.19 sec; Start 275: opt9; 219/411 Test #194: fd-freq-gradient ................. Passed 12.13 sec; Start 133: dfmp2-ecp; 220/411 Test #207: gibbs ............................ Passed 11.18 sec; Start 23: cc12; 221/411 Test #5: casscf-sa-sp ..................... Passed 7.38 sec; Start 217: mints6; 222/411 Test #23: cc12 ............................. Passed 3.81 sec; Start 368: scf-freq1; 223/411 Test #372: dft-custom-hybrid ................ Passed 8.36 sec; Start 369: dft-jk; 224/411 Test #14: cbs-xtpl-energy .................. Passed 8.78 sec; Start 296: psithon2; 225/411 Test #275: opt9 ............................. Passed 9.31 sec; Start 122: dfccd-grad1; 226/411 Test #133: dfmp2-ecp ........................ Passed 10.55 sec; Start 154: dfrasscf-sp; 227/411 Test #122: dfccd-grad1 ...................... Passed 2.71 sec; Start 341: soscf-ref; 228/411 Test #154: dfrasscf-sp ...................... Passed 2.65 sec; Start 177: extern2; 229/411 Test #368: scf-freq1 ........................ Passed 7.99 sec; Start 52: cc36; 230/411 Test #217: mints6 ........................... Passed 11.46 sec; Start 176: extern1; 231/411 Test #369: dft-jk ........................... Passed 9.92 sec; Start 285: props2; 232/411 Test #341: soscf-ref ........................ Passed 6.33 sec; Start 48: cc32; 233/411 Test #296: psithon2 ......................... Passed 11.70 sec; Start 357: tu4-h2o-freq; 234/411 Test #52: cc36 ............................. Passed 5.86 sec; Start 268: opt2-fd; 235/411 Test #48: cc32 ............................. Passed 5.60 sec; Start 101: cubeprop; 236/411 Test #357: tu4-h2o-freq ..................... Passed 9.00 sec; Start 90: cepa1; 237/411 Test #177: extern2 .......................... Passed 14.54 sec; Start 21: cc10; 238/411 Test #176: extern1 .......................... Passed 12.83 sec; Start 98: cisd-sp; 239/411 Test #285: props2 ........................... Passed 12.47 sec; Start 132: dfmp2-4; 240/411 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:21253,Test,Test,21253,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Test #342: soscf-dft ........................ Passed 30.10 sec; Start 276: opt11; 93/411 Test #237: nbody-he-cluster ................. Passed 35.76 sec; Start 374: dft-custom-gga; 94/411 Test #66: cc49 ............................. Passed 30.67 sec; Start 68: cc50; 95/411 Test #244: ocepa2 ........................... Passed 36.96 sec; Start 273: opt7; 96/411 Test #374: dft-custom-gga ................... Passed 28.59 sec; Start 59: cc42; 97/411 Test #276: opt11 ............................ Passed 43.58 sec; Start 156: dft-b2plyp; 98/411 Test #68: cc50 ............................. Passed 32.32 sec; Start 1: adc1; 99/411 Test #11: cbs-delta-energy ................. Passed 58.90 sec; Start 264: opt-lindep-change; 100/411 Test #59: cc42 ............................. Passed 20.74 sec; Start 173: dft-omega; 101/411 Test #359: tu6-cp-ne2 ....................... Passed 74.91 sec; Start 375: pywrap-bfs; 102/411 Test #273: opt7 ............................. Passed 36.48 sec; Start 149: dfomp3-grad2; 103/411 Test #1: adc1 ............................. Passed 24.56 sec; Start 55: cc39; 104/411 Test #156: dft-b2plyp ....................... Passed 25.95 sec; Start 34: cc19; 105/411 Test #264: opt-lindep-change ................ Passed 25.13 sec; Start 65: cc48; 106/411 Test #173: dft-omega ........................ Passed 23.97 sec; Start 379: cc-module; 107/411 Test #55: cc39 ............................. Passed 13.65 sec; Start 299: pywrap-alias; 108/411 Test #375: pywrap-bfs ....................... Passed 25.71 sec; Start 27: cc13c; 109/411 Test #149: dfomp3-grad2 ..................... Passed 26.64 sec; Start 326: scf-ecp; 110/411 Test #178: fsapt1 ........................... Passed 2140.46 sec; Start 104: dcft-grad2; 111/411 Test #34: cc19 ............................. Passed 36.87 sec; Start 91: cepa-module; 112/411 Test #65: cc48 ............................. Passed 34.57 sec; Start 358: tu5-sapt; 113/411 Test #326: scf-ecp .......................... Passed 27.04 sec; Start 5,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:9694,Test,Test,9694,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Test #346: sapt-dft1 ........................ Passed 22.43 sec; Start 267: opt2; 172/411 Test #50: cc34 ............................. Passed 13.15 sec; Start 272: opt6; 173/411 Test #313: rasscf-sp ........................ Passed 13.81 sec; Start 245: ocepa3; 174/411 Test #12: cbs-parser ....................... Passed 38.49 sec; Start 202: fnocc4; 175/411 Test #252: omp2-grad2 ....................... Passed 13.44 sec; Start 37: cc22; 176/411 Test #172: dft3 ............................. Passed 20.87 sec; Start 315: sapt1; 177/411 Test #322: sapt-dft-lrc ..................... Passed 20.21 sec; Start 290: psimrcc-ccsd_t-4; 178/411 Test #267: opt2 ............................. Passed 18.64 sec; Start 321: sapt-dft-api; 179/411 Test #37: cc22 ............................. Passed 6.66 sec; Start 138: dfmp2-grad5; 180/411 Test #245: ocepa3 ........................... Passed 14.38 sec; Start 72: cc54; 181/411 Test #272: opt6 ............................. Passed 17.13 sec; Start 296: psithon2; 182/411 Test #202: fnocc4 ........................... Passed 16.01 sec; Start 165: dft-grad2; 183/411 Test #72: cc54 ............................. Passed 5.51 sec; Start 177: extern2; 184/411 Test #138: dfmp2-grad5 ...................... Passed 11.11 sec; Start 160: dft-grad-lr1; 185/411 Test #315: sapt1 ............................ Passed 17.72 sec; Start 303: pywrap-checkrun-convcrit; 186/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 18.60 sec; Start 109: dcft3; 187/411 Test #321: sapt-dft-api ..................... Passed 16.86 sec; Start 152: dfomp2p5-grad1; 188/411 Test #296: psithon2 ......................... Passed 12.17 sec; Start 277: opt12; 189/411 Test #109: dcft3 ............................ Passed 3.99 sec; Start 143: dfomp2-grad1; 190/411 Test #177: extern2 .......................... Passed 11.95 sec; Start 258: omp3-2; 191/411 Test #152: dfomp2p5-grad1 ................... Passed 5.52 sec; Start 169: dft-vv10; 192/411 Test #143: dfomp2-grad1 ...................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901:16948,Test,Test,16948,https://psicode.org,https://github.com/psi4/psi4/pull/1077#issuecomment-409911901,1,['Test'],['Test']
Testability,Test #34: cc18 ............................. Passed 20.64 sec; Start 375: dft-custom-gga; 156/412 Test #134: dfmp2-ecp ........................ Passed 42.25 sec; Start 324: sapt7; 157/412 Test #207: ghosts ........................... Passed 42.65 sec; Start 343: soscf-dft; 158/412 Test #127: dfccsd-t-grad1 ................... Passed 21.66 sec; Start 63: cc45; 159/412 Test #253: omp2-grad2 ....................... Passed 23.46 sec; Start 52: cc35; 160/412 Test #130: dfmp2-1 .......................... Passed 38.02 sec; Start 51: cc34; 161/412 Test #63: cc45 ............................. Passed 12.62 sec; Start 49: cc32; 162/412 Test #51: cc34 ............................. Passed 13.14 sec; Start 327: scf-ecp; 163/412 Test #375: dft-custom-gga ................... Passed 39.00 sec; Start 149: dfomp3-grad1; 164/412 Test #52: cc35 ............................. Passed 19.98 sec; Start 7: casscf-sp; 165/412 Test #49: cc32 ............................. Passed 11.13 sec; Start 16: cbs-xtpl-gradient; 166/412 Test #343: soscf-dft ........................ Passed 37.42 sec; Start 283: opt-irc-3; 167/412 Test #324: sapt7 ............................ Passed 41.10 sec; Start 314: rasscf-sp; 168/412 Test #149: dfomp3-grad1 ..................... Passed 14.19 sec; Start 50: cc33; 169/412 Test #7: casscf-sp ........................ Passed 17.08 sec; Start 1: adc1; 170/412 Test #327: scf-ecp .......................... Passed 29.95 sec; Start 22: cc10; 171/412 Test #16: cbs-xtpl-gradient ................ Passed 24.07 sec; Start 53: cc36; 172/412 Test #314: rasscf-sp ........................ Passed 15.74 sec; Start 110: dcft3; 173/412 Test #50: cc33 ............................. Passed 20.75 sec; Start 203: fnocc4; 174/412 Test #283: opt-irc-3 ........................ Passed 28.19 sec; Start 265: opt-lindep-change; 175/412 Test #53: cc36 ............................. Passed 22.91 sec; Start 208: gibbs; 176/412 Test #110: dcft3 ............................ Passed 25.84 sec; Start 174: dft-ome,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272:15434,Test,Test,15434,https://psicode.org,https://github.com/psi4/psi4/pull/1225#issuecomment-419883272,1,['Test'],['Test']
Testability,Test #34: cc18 ............................. Passed 70.30 sec; Start 50: cc33; 129/413 Test #55: cc38 ............................. Passed 54.69 sec; Start 38: cc22; 130/413 Test #239: nbody-he-cluster ................. Passed 61.77 sec; Start 52: cc35; 131/413 Test #299: pubchem1 ......................... Passed 62.13 sec; Start 172: dft1-alt; 132/413 Test #109: dcft1 ............................ Passed 104.14 sec; Start 164: dft-grad-meta; 133/413 Test #278: opt11 ............................ Passed 53.92 sec; Start 33: cc17; 134/413 Test #23: cc11 ............................. Passed 41.50 sec; Start 85: cdomp2-2; 135/413 Test #148: dfomp3-1 ......................... Passed 34.66 sec; Start 63: cc45; 136/413 Test #57: cc4 .............................. Passed 48.48 sec; Start 254: omp2-grad2; 137/413 Test #154: dfomp2p5-grad1 ................... Passed 43.84 sec; Start 152: dfomp2p5-1; 138/413 Test #50: cc33 ............................. Passed 40.84 sec; Start 127: dfccsd-grad1; 139/413 Test #196: fd-freq-gradient ................. Passed 46.68 sec; Start 108: dcft-grad4; 140/413 Test #101: ci-property ...................... Passed 54.46 sec; Start 350: sapt-compare; 141/413 Test #38: cc22 ............................. Passed 43.86 sec; Start 338: scf5; 142/413 Test #26: cc13a ............................ Passed 552.09 sec; Start 276: opt8; 143/413 Test #52: cc35 ............................. Passed 48.07 sec; Start 24: cc12; 144/413 Test #172: dft1-alt ......................... Passed 51.80 sec; Start 309: pywrap-db1; 145/413 Test #63: cc45 ............................. Passed 26.77 sec; Start 198: fd-gradient; 146/413 Test #164: dft-grad-meta .................... Passed 51.13 sec; Start 221: mints-benchmark; 147/413 Test #33: cc17 ............................. Passed 37.13 sec; Start 54: cc37; 148/413 Test #85: cdomp2-2 ......................... Passed 38.27 sec; Start 111: dcft3; 149/413 Test #152: dfomp2p5-1 ....................... Passed 33.21 sec; Start 93,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:13136,Test,Test,13136,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Test #35: cc19 ............................. Passed 71.41 sec; Start 108: dcft1; 120/412 Test #60: cc42 ............................. Passed 90.67 sec; Start 338: scf6; 121/412 Test #67: cc49 ............................. Passed 66.95 sec; Start 207: ghosts; 122/412 Test #300: pywrap-alias ..................... Passed 91.22 sec; Start 337: scf5; 123/412 Test #143: dfomp2-4 ......................... Passed 43.57 sec; Start 66: cc48; 124/412 Test #274: opt7 ............................. Passed 53.71 sec; Start 343: soscf-dft; 125/412 Test #324: sapt7 ............................ Passed 35.25 sec; Start 141: dfomp2-2; 126/412 Test #313: rasci-ne ......................... Passed 40.47 sec; Start 56: cc39; 127/412 Test #69: cc50 ............................. Passed 52.28 sec; Start 375: dft-custom-gga; 128/412 Test #134: dfmp2-ecp ........................ Passed 36.52 sec; Start 152: dfomp2p5-2; 129/412 Test #21: cc1 .............................. Passed 100.25 sec; Start 195: fd-freq-gradient; 130/412 Test #130: dfmp2-1 .......................... Passed 35.57 sec; Start 275: opt8; 131/412 Test #207: ghosts ........................... Passed 35.10 sec; Start 79: cc8a; 132/412 Test #343: soscf-dft ........................ Passed 32.03 sec; Start 63: cc45; 133/412 Test #338: scf6 ............................. Passed 43.81 sec; Start 12: cbs-parser; 134/412 Test #80: cc8b ............................. Passed 57.05 sec; Start 327: scf-ecp; 135/412 Test #375: dft-custom-gga ................... Passed 36.12 sec; Start 93: ci-multi; 136/412 Test #337: scf5 ............................. Passed 49.46 sec; Start 265: opt-lindep-change; 137/412 Test #250: omp2-4 ........................... Passed 85.02 sec; Start 376: pywrap-bfs; 138/412 Test #275: opt8 ............................. Passed 43.16 sec; Start 127: dfccsd-t-grad1; 139/412 Test #63: cc45 ............................. Passed 36.28 sec; Start 78: cc8; 140/412 Test #56: cc39 ............................. Passed 61.65 sec; S,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:12347,Test,Test,12347,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #360: x2c1 ............................. Passed 98.07 sec; Start 250: omp2-5; 105/411 Test #56: cc4 .............................. Passed 77.71 sec; Start 84: cdomp2-2; 106/411 Test #323: sapt7 ............................ Passed 42.68 sec; Start 206: ghosts; 107/411 Test #106: dcft-grad4 ....................... Passed 50.01 sec; Start 34: cc19; 108/411 Test #115: dcft9 ............................ Passed 162.48 sec; Start 129: dfmp2-1; 109/411 Test #144: dfomp2-grad2 ..................... Passed 141.78 sec; Start 68: cc50; 110/411 Test #206: ghosts ........................... Passed 32.82 sec; Start 92: ci-multi; 111/411 Test #129: dfmp2-1 .......................... Passed 34.89 sec; Start 125: dfccsd-grad1; 112/411 Test #263: omp3-grad2 ....................... Passed 134.72 sec; Start 392: python-cc54; 113/411 Test #260: omp3-4 ........................... Passed 151.34 sec; Start 33: cc18; 114/411 Test #84: cdomp2-2 ......................... Passed 63.42 sec; Start 342: soscf-dft; 115/411 Test #46: cc30 ............................. Passed 125.06 sec; Start 249: omp2-4; 116/411 Test #244: ocepa2 ........................... Passed 125.60 sec; Start 32: cc17; 117/411 Test #57: cc40 ............................. Passed 136.25 sec; Start 337: scf6; 118/411 Test #92: ci-multi ......................... Passed 54.72 sec; Start 153: dfomp2p5-grad2; 119/411 Test #34: cc19 ............................. Passed 89.17 sec; Start 65: cc48; 120/411 Test #342: soscf-dft ........................ Passed 39.52 sec; Start 374: dft-custom-gga; 121/411 Test #250: omp2-5 ........................... Passed 133.26 sec; Start 274: opt8; 122/411 Test #27: cc13c ............................ Passed 210.88 sec; Start 16: cbs-xtpl-gradient; 123/411 Test #261: omp3-5 ........................... Passed 183.90 sec; Start 256: omp2p5-grad2; 124/411 Test #125: dfccsd-grad1 ..................... Passed 68.53 sec; Start 202: fnocc4; 125/411 Test #68: cc50 ............................. Passed 86.4,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:10947,Test,Test,10947,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #363: scf-freq1 ........................ Passed 9.96 sec; Start 374: pywrap-align-chiral; 376/401 Test #373: pywrap-align .....................***Failed 0.80 sec; Start 375: mints12; 377/401 Test #374: pywrap-align-chiral ..............***Failed 0.75 sec; Start 377: psi4numpy-cphf; 378/401 Test #375: mints12 .......................... Passed 1.23 sec; Start 382: psi4numpy-fci; 379/401 Test #377: psi4numpy-cphf ................... Passed 1.87 sec; Start 383: cookbook-rohf-orb-rot; 380/401 Test #367: dft-custom-hybrid ................ Passed 9.93 sec; Start 386: python-pubchem; 381/401 Test #382: psi4numpy-fci .................... Passed 5.69 sec; Start 395: json-v11_gradient; 382/401 Test #395: json-v11_gradient ................ Passed 1.20 sec; Start 397: json-schema_0_ghost; 383/401 Test #397: json-schema_0_ghost .............. Passed 1.28 sec; Start 398: json-schema_0_orient; 384/401 Test #398: json-schema_0_orient ............. Passed 3.40 sec; Start 399: json-schema_0_throws; 385/401 Test #399: json-schema_0_throws ............. Passed 0.60 sec; Start 401: json-schema_0_properties; 386/401 Test #401: json-schema_0_properties .........***Failed 1.49 sec; 387/401 Test #343: sapt-dft2 ........................ Passed 44.50 sec; 388/401 Test #369: dft-custom-gga ................... Passed 31.04 sec; 389/401 Test #386: python-pubchem ................... Passed 26.22 sec; 390/401 Test #366: dft-custom-dhdf .................. Passed 42.54 sec; 391/401 Test #277: opt-irc-2 ........................ Passed 128.92 sec; 392/401 Test #236: ocepa-freq1 ...................... Passed 211.47 sec; 393/401 Test #368: dft-custom-mgga .................. Passed 56.55 sec; 394/401 Test #102: dcft-grad1 ....................... Passed 432.70 sec; 395/401 Test #383: cookbook-rohf-orb-rot ............ Passed 107.12 sec; 396/401 Test #354: tu6-cp-ne2 ....................... Passed 135.55 sec; 397/401 Test #301: pywrap-checkrun-rohf ............. Passed 191.40 sec; 398/401 Test #302: py,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:36081,Test,Test,36081,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Test #364: tu1-h2o-energy ................... Passed 3.91 sec; Start 2: adc2; 144/415 Test #344: scf3 ............................. Passed 2.32 sec; Start 9: castup2; 145/415 Test #367: scf-response1 .................... Passed 4.22 sec; Start 10: castup3; 146/415 Test #394: psi4numpy-rhf-gradient ........... Passed 3.17 sec; Start 12: cbs-parser; 147/415 Test #375: options1 ......................... Passed 1.05 sec; Start 13: cbs-xtpl-alpha; 148/415 Test #407: python-memdfjk ................... Passed 1.54 sec; Start 17: cbs-xtpl-opt; 149/415 Test #215: mints1 ........................... Passed 1.26 sec; Start 19: cbs-xtpl-nbody; 150/415 Test #393: psi4numpy-rhf .................... Passed 1.46 sec; Start 20: cbs-xtpl-wrapper; 151/415 Test #248: numpy-array-interface ............ Passed 1.09 sec; Start 23: cc10; 152/415 Test #211: matrix1 .......................... Passed 1.16 sec; Start 24: cc11; 153/415 Test #10: castup3 .......................... Passed 13.51 sec; Start 25: cc12; 154/415 Test #9: castup2 .......................... Passed 13.71 sec; Start 26: cc13; 155/415 Test #1: adc1 ............................. Passed 24.99 sec; Start 29: cc13c; 156/415 Test #2: adc2 ............................. Passed 37.11 sec; Start 30: cc13d; 157/415 Test #24: cc11 ............................. Passed 50.15 sec; Start 31: cc14; 158/415 Test #23: cc10 ............................. Passed 71.48 sec; Start 33: cc16; 159/415 Test #25: cc12 ............................. Passed 71.24 sec; Start 36: cc19; 160/415 Test #20: cbs-xtpl-wrapper ................. Passed 94.08 sec; Start 37: cc2; 161/415 Test #12: cbs-parser ....................... Passed 116.86 sec; Start 38: cc21; 162/415 Test #19: cbs-xtpl-nbody ................... Passed 141.24 sec; Start 39: cc22; 163/415 Test #17: cbs-xtpl-opt ..................... Passed 192.06 sec; Start 40: cc23; 164/415 Test #39: cc22 ............................. Passed 61.46 sec; Start 41: cc24; 165/415 Test #36: cc19 ....................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:14805,Test,Test,14805,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #369: dft-jk ........................... Passed 10.91 sec; Start 176: extern1; 209/411 Test #79: cc8b ............................. Passed 30.57 sec; Start 53: cc37; 210/411 Test #7: casscf-sp ........................ Passed 18.52 sec; Start 126: dfccsd-t-grad1; 211/411 Test #252: omp2-grad2 ....................... Passed 26.82 sec; Start 180: fsapt-terms; 212/411 Test #360: x2c1 ............................. Passed 31.42 sec; Start 365: cubeprop-esp; 213/411 Test #146: dfomp3-1 ......................... Passed 14.83 sec; Start 78: cc8a; 214/411 Test #62: cc45 ............................. Passed 15.77 sec; Start 50: cc34; 215/411 Test #53: cc37 ............................. Passed 12.36 sec; Start 37: cc22; 216/411 Test #176: extern1 .......................... Passed 15.70 sec; Start 52: cc36; 217/411 Test #180: fsapt-terms ...................... Passed 8.57 sec; Start 248: omp2-3; 218/411 Test #365: cubeprop-esp ..................... Passed 8.32 sec; Start 291: psimrcc-fd-freq1; 219/411 Test #126: dfccsd-t-grad1 ................... Passed 21.28 sec; Start 140: dfomp2-2; 220/411 Test #50: cc34 ............................. Passed 18.78 sec; Start 98: cisd-sp; 221/411 Test #52: cc36 ............................. Passed 18.16 sec; Start 338: scf7; 222/411 Test #291: psimrcc-fd-freq1 ................. Passed 17.80 sec; Start 158: dft-ghost; 223/411 Test #37: cc22 ............................. Passed 23.36 sec; Start 258: omp3-2; 224/411 Test #248: omp2-3 ........................... Passed 22.74 sec; Start 268: opt2-fd; 225/411 Test #98: cisd-sp .......................... Passed 8.82 sec; Start 270: opt4; 226/411 Test #158: dft-ghost ........................ Passed 7.78 sec; Start 80: cc8c; 227/411 Test #338: scf7 ............................. Passed 12.79 sec; Start 150: dfomp2p5-1; 228/411 Test #78: cc8a ............................. Passed 34.47 sec; Start 247: omp2-2; 229/411 Test #140: dfomp2-2 ......................... Passed 25.41 sec; Start 368: scf-freq1;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:20398,Test,Test,20398,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Test #369: scf-freq1 ........................ Passed 12.95 sec; Start 102: cubeprop; 238/412 Test #370: dft-jk ........................... Passed 11.53 sec; Start 242: ocepa-grad1; 239/412 Test #7: casscf-sp ........................ Passed 26.79 sec; Start 128: dfccsdt1; 240/412 Test #218: mints6 ........................... Passed 13.28 sec; Start 140: dfomp2-1; 241/412 Test #21: cc1 .............................. Passed 66.60 sec; Start 271: opt4; 242/412 Test #394: python-3-index-transforms ........ Passed 10.43 sec; Start 227: mp2-1; 243/412 Test #373: dft-custom-hybrid ................ Passed 13.48 sec; Start 109: dcft2; 244/412 Test #102: cubeprop ......................... Passed 11.81 sec; Start 336: scf4; 245/412 Test #269: opt2-fd .......................... Passed 13.50 sec; Start 368: scf-hess1; 246/412 Test #99: cisd-sp .......................... Passed 13.54 sec; Start 9: castup2; 247/412 Test #200: fnocc1 ........................... Passed 20.84 sec; Start 366: cubeprop-esp; 248/412 Test #342: soscf-ref ........................ Passed 15.51 sec; Start 123: dfccd-grad1; 249/412 Test #128: dfccsdt1 ......................... Passed 8.98 sec; Start 199: freq-isotope2; 250/412 Test #267: opt1-fd .......................... Passed 17.28 sec; Start 386: psi4numpy-fci; 251/412 Test #144: dfomp2-grad1 ..................... Passed 21.27 sec; Start 256: omp2p5-grad1; 252/412 Test #140: dfomp2-1 ......................... Passed 9.85 sec; Start 15: cbs-xtpl-freq; 253/412 Test #242: ocepa-grad1 ...................... Passed 15.68 sec; Start 185: fci-dipole; 254/412 Test #202: fnocc3 ........................... Passed 22.03 sec; Start 133: dfmp2-4; 255/412 Test #271: opt4 ............................. Passed 10.07 sec; Start 181: fsapt-terms; 256/412 Test #227: mp2-1 ............................ Passed 10.06 sec; Start 10: castup3; 257/412 Test #109: dcft2 ............................ Passed 9.00 sec; Start 162: dft-ghost; 258/412 Test #386: psi4numpy-fci ...............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646:23271,Test,Test,23271,https://psicode.org,https://github.com/psi4/psi4/pull/1221#issuecomment-419096646,1,['Test'],['Test']
Testability,Test #372: scf-coverage ..................... Passed 7.31 sec; Start 286: props1; 326/413 Test #193: fcidump .......................... Passed 6.38 sec; Start 346: dfep2-1; 327/413 Test #237: mp2-property ..................... Passed 3.24 sec; Start 186: fci-dipole; 328/413 Test #341: scf-property ..................... Passed 4.58 sec; Start 363: x2c2; 329/413 Test #225: molden1 .......................... Passed 5.11 sec; Start 230: mp2-grad1; 330/413 Test #357: tu3-h2o-opt ...................... Passed 4.50 sec; Start 358: scf-response1; 331/413 Test #182: fsapt-terms ...................... Passed 7.85 sec; Start 336: scf3; 332/413 Test #336: scf3 ............................. Passed 1.25 sec; Start 365: zaptn-nh2; 333/413 Test #346: dfep2-1 .......................... Passed 3.37 sec; Start 316: sad1; 334/413 Test #363: x2c2 ............................. Passed 2.92 sec; Start 4: casscf-semi; 335/413 Test #286: props1 ........................... Passed 4.61 sec; Start 333: scf1; 336/413 Test #119: dfcasscf-sa-sp ................... Passed 5.44 sec; Start 295: psimrcc-pt2; 337/413 Test #358: scf-response1 .................... Passed 2.69 sec; Start 205: frac; 338/413 Test #230: mp2-grad1 ........................ Passed 3.86 sec; Start 273: opt5; 339/413 Test #316: sad1 ............................. Passed 5.20 sec; Start 353: dft-reference; 340/413 Test #365: zaptn-nh2 ........................ Passed 5.58 sec; Start 181: fsapt2; 341/413 Test #186: fci-dipole ....................... Passed 8.25 sec; Start 223: mints9; 342/413 Test #255: omp2p5-1 ......................... Passed 9.93 sec; Start 224: mints10; 343/413 Test #295: psimrcc-pt2 ...................... Passed 5.41 sec; Start 222: mints-helper; 344/413 Test #134: dfmp2-4 .......................... Passed 12.79 sec; Start 216: mints3; 345/413 Test #362: x2c1 ............................. Passed 51.59 sec; Start 15: cbs-xtpl-freq; 346/413 Test #3: casscf-fzc-sp .................... Passed 17.22 sec; Start 291: p,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:31680,Test,Test,31680,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Test #374: dft-custom-mgga .................. Passed 198.14 sec; Start 98: cisd-opt-fd; 38/412 Test #196: fd-freq-gradient-large ........... Passed 280.15 sec; Start 159: dfscf-bz2; 39/412 Test #321: sapt6 ............................ Passed 188.13 sec; Start 48: cc31; 40/412 Test #98: cisd-opt-fd ...................... Passed 161.17 sec; Start 59: cc41; 41/412 Test #159: dfscf-bz2 ........................ Passed 159.76 sec; Start 348: sapt-dft2; 42/412 Test #18: cbs-xtpl-func .................... Passed 512.57 sec; Start 61: cc43; 43/412 Test #194: fd-freq-energy-large ............. Passed 497.43 sec; Start 184: isapt2; 44/412 Test #59: cc41 ............................. Passed 78.71 sec; Start 105: dcft-grad2; 45/412 Test #61: cc43 ............................. Passed 53.47 sec; Start 155: dft-grad-lr2; 46/412 Test #48: cc31 ............................. Passed 121.57 sec; Start 169: dft1; 47/412 Test #182: fsapt-allterms ................... Passed 576.36 sec; Start 303: pywrap-cbs1; 48/412 Test #105: dcft-grad2 ....................... Passed 66.83 sec; Start 75: cc5a; 49/412 Test #348: sapt-dft2 ........................ Passed 127.69 sec; Start 26: cc13a; 50/412 Test #303: pywrap-cbs1 ...................... Passed 50.85 sec; Start 114: dcft7; 51/412 Test #184: isapt2 ........................... Passed 125.81 sec; Start 206: frac-traverse; 52/412 Test #155: dft-grad-lr2 ..................... Passed 105.50 sec; Start 317: sapt2; 53/412 Test #75: cc5a ............................. Passed 56.09 sec; Start 319: sapt4; 54/412 Test #169: dft1 ............................. Passed 104.75 sec; Start 326: scf-bz2; 55/412 Test #326: scf-bz2 .......................... Passed 135.97 sec; Start 372: dft-custom-dhdf; 56/412 Test #279: opt13 ............................ Passed 775.41 sec; Start 47: cc30; 57/412 Test #206: frac-traverse .................... Passed 219.70 sec; Start 92: cepa-module; 58/412 Test #26: cc13a ............................ Passed 269.35 sec; Start 281: o,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899:4656,Test,Test,4656,https://psicode.org,https://github.com/psi4/psi4/pull/1226#issuecomment-420597899,1,['Test'],['Test']
Testability,Test #376: dft-custom-gga ................... Passed 35.71 sec; Start 260: omp3-2; 179/413 Test #131: dfmp2-1 .......................... Passed 38.95 sec; Start 377: pywrap-bfs; 180/413 Test #135: dfmp2-ecp ........................ Passed 39.52 sec; Start 1: adc1; 181/413 Test #208: ghosts ........................... Passed 37.52 sec; Start 165: dft-freq; 182/413 Test #344: soscf-dft ........................ Passed 37.25 sec; Start 209: gibbs; 183/413 Test #266: opt-lindep-change ................ Passed 29.25 sec; Start 203: fnocc3; 184/413 Test #279: opt12 ............................ Passed 22.14 sec; Start 174: dft3; 185/413 Test #274: opt6 ............................. Passed 22.76 sec; Start 161: dft-b2plyp; 186/413 Test #328: scf-ecp .......................... Passed 30.17 sec; Start 250: omp2-3; 187/413 Test #204: fnocc4 ........................... Passed 23.72 sec; Start 348: sapt-dft1; 188/413 Test #179: extern2 .......................... Passed 22.09 sec; Start 168: dft-psivar; 189/413 Test #269: opt2 ............................. Passed 22.92 sec; Start 140: dfmp2-grad5; 190/413 Test #260: omp3-2 ........................... Passed 15.21 sec; Start 305: pywrap-checkrun-convcrit; 191/413 Test #203: fnocc3 ........................... Passed 13.44 sec; Start 191: fci-tdm-2; 192/413 Test #175: dft-omega ........................ Passed 27.08 sec; Start 360: tu5-sapt; 193/413 Test #377: pywrap-bfs ....................... Passed 26.40 sec; Start 249: omp2-2; 194/413 Test #1: adc1 ............................. Passed 26.88 sec; Start 107: dcft-grad3; 195/413 Test #250: omp2-3 ........................... Passed 18.82 sec; Start 90: cepa3; 196/413 Test #165: dft-freq ......................... Passed 23.47 sec; Start 240: nbody-intermediates; 197/413 Test #209: gibbs ............................ Passed 23.05 sec; Start 145: dfomp2-grad1; 198/413 Test #305: pywrap-checkrun-convcrit ......... Passed 18.20 sec; Start 277: opt9; 199/413 Test #140: dfmp2-grad5 ...........,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:17721,Test,Test,17721,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Test #376: pywrap-bfs ....................... Passed 26.34 sec; Start 273: opt6; 176/412 Test #167: dft-psivar ....................... Passed 26.92 sec; Start 190: fci-tdm-2; 177/412 Test #160: dft-b2plyp ....................... Passed 26.53 sec; Start 129: dfccsdat1; 178/412 Test #283: opt-irc-3 ........................ Passed 35.90 sec; Start 178: extern2; 179/412 Test #50: cc33 ............................. Passed 33.85 sec; Start 359: tu5-sapt; 180/412 Test #173: dft3 ............................. Passed 27.34 sec; Start 7: casscf-sp; 181/412 Test #347: sapt-dft1 ........................ Passed 27.67 sec; Start 208: gibbs; 182/412 Test #268: opt2 ............................. Passed 31.71 sec; Start 110: dcft3; 183/412 Test #190: fci-tdm-2 ........................ Passed 22.12 sec; Start 248: omp2-2; 184/412 Test #359: tu5-sapt ......................... Passed 23.82 sec; Start 259: omp3-2; 185/412 Test #164: dft-freq ......................... Passed 28.89 sec; Start 323: sapt-dft-lrc; 186/412 Test #278: opt12 ............................ Passed 31.06 sec; Start 202: fnocc3; 187/412 Test #304: pywrap-checkrun-convcrit ......... Passed 35.86 sec; Start 144: dfomp2-grad1; 188/412 Test #203: fnocc4 ........................... Passed 42.55 sec; Start 22: cc10; 189/412 Test #273: opt6 ............................. Passed 37.13 sec; Start 200: fnocc1; 190/412 Test #314: rasscf-sp ........................ Passed 46.98 sec; Start 291: psimrcc-ccsd_t-4; 191/412 Test #178: extern2 .......................... Passed 37.34 sec; Start 249: omp2-3; 192/412 Test #129: dfccsdat1 ........................ Passed 40.97 sec; Start 38: cc22; 193/412 Test #323: sapt-dft-lrc ..................... Passed 23.16 sec; Start 292: psimrcc-fd-freq1; 194/412 Test #291: psimrcc-ccsd_t-4 ................. Passed 19.77 sec; Start 54: cc37; 195/412 Test #208: gibbs ............................ Passed 46.18 sec; Start 316: sapt1; 196/412 Test #144: dfomp2-grad1 ..................... Passed 34.46 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:17499,Test,Test,17499,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Test #380: mints12 .......................... Passed 1.30 sec; Start 336: scf3; 381/413 Test #104: decontract ....................... Passed 1.30 sec; Start 300: pubchem2; 382/413 Test #355: tu1-h2o-energy ................... Passed 1.26 sec; Start 212: mcscf2; 383/413 Test #290: psimrcc-ccsd_t-2 ................. Passed 1.63 sec; Start 213: mcscf3; 384/413 Test #356: tu2-ch2-energy ................... Passed 0.86 sec; Start 218: mints5; 385/413 Test #330: scf-upcast-custom-basis .......... Passed 1.54 sec; Start 241: numpy-array-interface; 386/413 Test #351: sapt-sf1 ......................... Passed 1.06 sec; Start 217: mints4; 387/413 Test #222: mints-helper ..................... Passed 1.14 sec; Start 366: options1; 388/413 Test #336: scf3 ............................. Passed 0.87 sec; Start 214: mints1; 389/413 Test #332: scf-bs ........................... Passed 1.06 sec; Start 211: mcscf1; 390/413 Test #216: mints3 ........................... Passed 1.11 sec; Start 177: docs-dft; 391/413 Test #223: mints9 ........................... Passed 2.13 sec; Start 162: dft-grac; 392/413 Test #347: dfep2-2 .......................... Passed 2.02 sec; Start 311: pywrap-molecule; 393/413 Test #8: castup1 .......................... Passed 1.50 sec; Start 310: pywrap-db3; 394/413 Test #213: mcscf3 ........................... Passed 0.90 sec; Start 176: docs-bases; 395/413 Test #217: mints4 ........................... Passed 0.61 sec; Start 210: matrix1; 396/413 Test #366: options1 ......................... Passed 0.61 sec; Start 103: cubeprop-frontier; 397/413 Test #241: numpy-array-interface ............ Passed 0.80 sec; Start 88: cepa1; 398/413 Test #214: mints1 ........................... Passed 0.75 sec; 399/413 Test #177: docs-dft ......................... Passed 0.62 sec; 400/413 Test #218: mints5 ........................... Passed 1.04 sec; 401/413 Test #212: mcscf2 ........................... Passed 1.45 sec; 402/413 Test #211: mcscf1 ........................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678:36727,Test,Test,36727,https://psicode.org,https://github.com/psi4/psi4/pull/1264#issuecomment-425525678,1,['Test'],['Test']
Testability,"Test #384: dft-custom-mgga .................. Passed 56.51 sec; 406/415 Test #249: ocepa-freq1 ...................... Passed 749.07 sec; 407/415 Test #106: dcft-grad1 ....................... Passed 1347.53 sec; 408/415 Test #397: cookbook-rohf-orb-rot ............ Passed 443.85 sec; 409/415 Test #148: dfomp2-grad3 ..................... Passed 1213.44 sec; 410/415 Test #370: tu6-cp-ne2 ....................... Passed 555.15 sec; 411/415 Test #315: pywrap-checkrun-rohf ............. Passed 668.23 sec; 412/415 Test #113: dcft4 ............................ Passed 1477.74 sec; 413/415 Test #316: pywrap-checkrun-uhf .............. Passed 728.94 sec; 414/415 Test #18: cbs-xtpl-func .................... Passed 3334.37 sec; 415/415 Test #314: pywrap-checkrun-rhf .............. Passed 750.17 sec. 100% tests passed, 0 tests failed out of 415. Label Time Summary:; adc = 62.10 sec*proc (2 tests); autotest = 3142.09 sec*proc (26 tests); cart = 16551.08 sec*proc (123 tests); cas = 28.56 sec*proc (1 test); casscf = 215.89 sec*proc (11 tests); cbs = 5376.02 sec*proc (12 tests); cc = 17865.62 sec*proc (65 tests); cdomp2 = 102.86 sec*proc (2 tests); cepa = 362.38 sec*proc (7 tests); ci = 100.54 sec*proc (8 tests); cisd = 147.55 sec*proc (7 tests); cookbook = 443.85 sec*proc (1 test); cubeprop = 24.72 sec*proc (3 tests); dcft = 5201.52 sec*proc (13 tests); df = 3130.41 sec*proc (38 tests); dfccd = 7.27 sec*proc (1 test); dfccd-grad = 29.83 sec*proc (1 test); dfccdl = 4.85 sec*proc (1 test); dfccsd = 16.21 sec*proc (1 test); dfccsd-grad = 94.95 sec*proc (1 test); dfccsd-t-grad = 103.60 sec*proc (1 test); dfccsdat = 43.70 sec*proc (1 test); dfccsdl = 19.45 sec*proc (1 test); dfccsdt = 14.17 sec*proc (1 test); dfep2 = 6.02 sec*proc (2 tests); dfmp2 = 184.52 sec*proc (11 tests); dfomp2 = 1710.82 sec*proc (7 tests); dfomp2.5 = 342.31 sec*proc (4 tests); dfomp3 = 402.50 sec*proc (4 tests); dfscf = 31.82 sec*proc (1 test); dft = 751.03 sec*proc (27 tests); docs = 2.03 sec*proc (2 tests); ecp = ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:39045,test,test,39045,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['test'],['test']
Testability,Test #390: python-mints9 .................... Passed 1.78 sec; Start 391: python-mints2; 392/411 Test #391: python-mints2 .................... Passed 2.86 sec; Start 392: python-cc54; 393/411 Test #392: python-cc54 ...................... Passed 9.47 sec; Start 393: python-3-index-transforms; 394/411 Test #393: python-3-index-transforms ........ Passed 9.40 sec; Start 395: python-mints13; 395/411 Test #395: python-mints13 ................... Passed 1.93 sec; Start 396: python-memdfjk; 396/411 Test #396: python-memdfjk ................... Passed 0.97 sec; Start 397: json-v11-energy; 397/411 Test #397: json-v11-energy .................. Passed 2.02 sec; Start 398: json-v11-gradient; 398/411 Test #398: json-v11-gradient ................ Passed 1.15 sec; Start 399: json-schema-1-energy; 399/411 Test #399: json-schema-1-energy ............. Passed 1.84 sec; Start 400: json-schema-1-ghost; 400/411 Test #400: json-schema-1-ghost .............. Passed 1.05 sec; Start 401: json-schema-1-orient; 401/411 Test #401: json-schema-1-orient ............. Passed 1.49 sec; Start 402: json-schema-1-throws; 402/411 Test #402: json-schema-1-throws ............. Passed 0.59 sec; Start 403: json-schema-1-gradient; 403/411 Test #403: json-schema-1-gradient ........... Passed 1.45 sec; Start 404: json-schema-1-properties; 404/411 Test #404: json-schema-1-properties ......... Passed 1.90 sec; Start 405: skeleton; 405/411 Test #405: skeleton ......................... Passed 1.11 sec; Start 406: skeletonaointegrals; 406/411 Test #406: skeletonaointegrals .............. Passed 0.98 sec; Start 407: skeletondfmp2; 407/411 Test #407: skeletondfmp2 .................... Passed 1.33 sec; Start 408: skeletonmointegrals; 408/411 Test #408: skeletonmointegrals .............. Passed 1.07 sec; Start 409: skeletonscf; 409/411 Test #409: skeletonscf ...................... Passed 0.68 sec; Start 410: skeletonsointegrals; 410/411 Test #410: skeletonsointegrals .............. Passed 1.01 sec; Start 411: skeleto,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:37144,Test,Test,37144,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['Test'],['Test']
Testability,Test #390: python-mints9 .................... Passed 1.96 sec; Start 391: python-mints2; 377/411 Test #391: python-mints2 .................... Passed 2.41 sec; Start 392: python-cc54; 378/411 Test #320: sapt6 ............................ Passed 164.21 sec; Start 393: python-3-index-transforms; 379/411 Test #162: dft-grad-lr3 ..................... Passed 463.80 sec; Start 395: python-mints13; 380/411 Test #395: python-mints13 ................... Passed 1.91 sec; Start 396: python-memdfjk; 381/411 Test #396: python-memdfjk ................... Passed 0.94 sec; Start 397: json-v11-energy; 382/411 Test #393: python-3-index-transforms ........ Passed 10.61 sec; Start 398: json-v11-gradient; 383/411 Test #397: json-v11-energy .................. Passed 3.63 sec; Start 399: json-schema-1-energy; 384/411 Test #398: json-v11-gradient ................ Passed 2.08 sec; Start 400: json-schema-1-ghost; 385/411 Test #400: json-schema-1-ghost .............. Passed 1.34 sec; Start 401: json-schema-1-orient; 386/411 Test #392: python-cc54 ...................... Passed 22.48 sec; Start 402: json-schema-1-throws; 387/411 Test #399: json-schema-1-energy ............. Passed 3.15 sec; Start 403: json-schema-1-gradient; 388/411 Test #401: json-schema-1-orient ............. Passed 2.07 sec; Start 404: json-schema-1-properties; 389/411 Test #402: json-schema-1-throws ............. Passed 0.60 sec; Start 405: skeleton; 390/411 Test #404: json-schema-1-properties ......... Passed 1.09 sec; Start 406: skeletonaointegrals; 391/411 Test #403: json-schema-1-gradient ........... Passed 1.66 sec; Start 407: skeletondfmp2; 392/411 Test #405: skeleton ......................... Passed 1.22 sec; Start 408: skeletonmointegrals; 393/411 Test #406: skeletonaointegrals .............. Passed 1.35 sec; Start 409: skeletonscf; 394/411 Test #408: skeletonmointegrals .............. Passed 1.63 sec; Start 410: skeletonsointegrals; 395/411 Test #409: skeletonscf ...................... Passed 0.67 sec; Start 411: sk,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:36166,Test,Test,36166,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Test #390: python-mints9 .................... Passed 2.10 sec; Start 391: python-mints2; 392/411 Test #391: python-mints2 .................... Passed 2.42 sec; Start 392: python-cc54; 393/411 Test #392: python-cc54 ...................... Passed 4.64 sec; Start 393: python-3-index-transforms; 394/411 Test #393: python-3-index-transforms ........ Passed 9.23 sec; Start 395: python-mints13; 395/411 Test #395: python-mints13 ................... Passed 1.73 sec; Start 396: python-memdfjk; 396/411 Test #396: python-memdfjk ................... Passed 1.03 sec; Start 397: json-v11-energy; 397/411 Test #397: json-v11-energy .................. Passed 1.88 sec; Start 398: json-v11-gradient; 398/411 Test #398: json-v11-gradient ................ Passed 1.11 sec; Start 399: json-schema-1-energy; 399/411 Test #399: json-schema-1-energy ............. Passed 2.00 sec; Start 400: json-schema-1-ghost; 400/411 Test #400: json-schema-1-ghost .............. Passed 1.09 sec; Start 401: json-schema-1-orient; 401/411 Test #401: json-schema-1-orient ............. Passed 1.55 sec; Start 402: json-schema-1-throws; 402/411 Test #402: json-schema-1-throws ............. Passed 0.65 sec; Start 403: json-schema-1-gradient; 403/411 Test #403: json-schema-1-gradient ........... Passed 1.32 sec; Start 404: json-schema-1-properties; 404/411 Test #404: json-schema-1-properties ......... Passed 1.08 sec; Start 405: skeleton; 405/411 Test #405: skeleton ......................... Passed 1.10 sec; Start 406: skeletonaointegrals; 406/411 Test #406: skeletonaointegrals .............. Passed 1.17 sec; Start 407: skeletondfmp2; 407/411 Test #407: skeletondfmp2 .................... Passed 1.29 sec; Start 408: skeletonmointegrals; 408/411 Test #408: skeletonmointegrals .............. Passed 1.22 sec; Start 409: skeletonscf; 409/411 Test #409: skeletonscf ...................... Passed 0.72 sec; Start 410: skeletonsointegrals; 410/411 Test #410: skeletonsointegrals .............. Passed 1.01 sec; Start 411: skeleto,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:37115,Test,Test,37115,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #391: python-pubchem ................... Passed 64.54 sec; Start 56: cc39; 109/413 Test #206: frac-ip-fitting .................. Passed 73.00 sec; Start 299: pubchem1; 110/413 Test #280: opt13 ............................ Passed 825.07 sec; Start 101: ci-property; 111/413 Test #318: sapt2 ............................ Passed 352.35 sec; Start 202: fnocc2; 112/413 Test #247: ocepa3 ........................... Passed 52.53 sec; Start 239: nbody-he-cluster; 113/413 Test #34: cc18 ............................. Passed 50.39 sec; Start 50: cc33; 114/413 Test #115: dcft7 ............................ Passed 394.48 sec; Start 68: cc4a; 115/413 Test #169: dft-b3lyp ........................ Passed 70.61 sec; Start 275: opt7; 116/413 Test #12: cbs-parser ....................... Passed 74.89 sec; Start 72: cc53; 117/413 Test #69: cc50 ............................. Passed 65.05 sec; Start 33: cc17; 118/413 Test #301: pywrap-alias ..................... Passed 85.24 sec; Start 164: dft-grad-meta; 119/413 Test #128: dfccsd-t-grad1 ................... Passed 60.82 sec; Start 278: opt11; 120/413 Test #50: cc33 ............................. Passed 40.75 sec; Start 52: cc35; 121/413 Test #101: ci-property ...................... Passed 58.02 sec; Start 38: cc22; 122/413 Test #56: cc39 ............................. Passed 69.67 sec; Start 74: cc55; 123/413 Test #299: pubchem1 ......................... Passed 63.57 sec; Start 154: dfomp2p5-grad1; 124/413 Test #239: nbody-he-cluster ................. Passed 60.48 sec; Start 172: dft1-alt; 125/413 Test #202: fnocc2 ........................... Passed 76.70 sec; Start 150: dfomp3-grad1; 126/413 Test #68: cc4a ............................. Passed 61.95 sec; Start 55: cc38; 127/413 Test #33: cc17 ............................. Passed 49.20 sec; Start 63: cc45; 128/413 Test #275: opt7 ............................. Passed 61.83 sec; Start 196: fd-freq-gradient; 129/413 Test #164: dft-grad-meta .................... Passed 52.68 sec; Start 152: df,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:11294,Test,Test,11294,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,"Test #392: python-cc54 ...................... Passed 73.15 sec; Start 408: skeletonmointegrals; 401/411 Test #407: skeletondfmp2 .................... Passed 3.74 sec; Start 409: skeletonscf; 402/411 Test #409: skeletonscf ...................... Passed 0.65 sec; Start 410: skeletonsointegrals; 403/411 Test #408: skeletonmointegrals .............. Passed 2.54 sec; Start 411: skeletonwavefunction; 404/411 Test #410: skeletonsointegrals .............. Passed 2.57 sec; 405/411 Test #411: skeletonwavefunction ............. Passed 3.89 sec; 406/411 Test #359: tu6-cp-ne2 ....................... Passed 418.72 sec; 407/411 Test #379: cc-module ........................ Passed 363.33 sec; 408/411 Test #300: pywrap-all ....................... Passed 888.77 sec; 409/411 Test #306: pywrap-checkrun-uhf .............. Passed 840.06 sec; 410/411 Test #386: cookbook-rohf-orb-rot ............ Passed 392.68 sec; 411/411 Test #304: pywrap-checkrun-rhf .............. Passed 856.50 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 74.17 sec*proc (2 tests); autotest = 2335.09 sec*proc (26 tests); cart = 18260.17 sec*proc (123 tests); cas = 63.79 sec*proc (1 test); casscf = 108.38 sec*proc (11 tests); cbs = 1185.86 sec*proc (10 tests); cc = 11652.87 sec*proc (65 tests); cdomp2 = 65.07 sec*proc (2 tests); cepa = 275.55 sec*proc (7 tests); ci = 145.71 sec*proc (8 tests); cisd = 217.60 sec*proc (7 tests); cookbook = 392.68 sec*proc (1 test); cubeprop = 20.57 sec*proc (2 tests); dcft = 3928.91 sec*proc (13 tests); df = 2256.10 sec*proc (38 tests); dfccd = 3.98 sec*proc (1 test); dfccd-grad = 27.33 sec*proc (1 test); dfccdl = 3.46 sec*proc (1 test); dfccsd = 6.58 sec*proc (1 test); dfccsd-grad = 77.74 sec*proc (1 test); dfccsd-t-grad = 71.93 sec*proc (1 test); dfccsdat = 32.02 sec*proc (1 test); dfccsdl = 20.44 sec*proc (1 test); dfccsdt = 27.22 sec*proc (1 test); dfep2 = 5.48 sec*proc (2 tests); dfmp2 = 152.42 sec*proc (11 tests); dfomp2 = 1078.80 sec*proc (7 tests); ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219:38401,test,tests,38401,https://psicode.org,https://github.com/psi4/psi4/pull/1091#issuecomment-409148219,2,['test'],['tests']
Testability,Test #3: casscf-fzc-sp .................... Passed 13.41 sec; Start 4: casscf-semi; 11/411 Test #4: casscf-semi ...................... Passed 9.02 sec; Start 5: casscf-sa-sp; 12/411 Test #325: scf-bz2 .......................... Passed 127.53 sec; Start 6: ao-casscf-sp; 13/411 Test #2: adc2 ............................. Passed 44.92 sec; Start 7: casscf-sp; 14/411 Test #6: ao-casscf-sp ..................... Passed 6.87 sec; Start 8: castup1; 15/411 Test #8: castup1 .......................... Passed 2.39 sec; Start 9: castup2; 16/411 Test #5: casscf-sa-sp ..................... Passed 19.18 sec; Start 10: castup3; 17/411 Test #9: castup2 .......................... Passed 9.54 sec; Start 11: cbs-delta-energy; 18/411 Test #10: castup3 .......................... Passed 18.56 sec; Start 12: cbs-parser; 19/411 Test #7: casscf-sp ........................ Passed 28.77 sec; Start 13: cbs-xtpl-alpha; 20/411 Test #394: python-vibanalysis ............... Passed 875.05 sec; Start 14: cbs-xtpl-energy; 21/411 Test #14: cbs-xtpl-energy .................. Passed 13.09 sec; Start 15: cbs-xtpl-freq; 22/411 Test #15: cbs-xtpl-freq .................... Passed 12.78 sec; Start 16: cbs-xtpl-gradient; 23/411 Test #278: opt13 ............................ Passed 926.59 sec; Start 17: cbs-xtpl-opt; 24/411 Test #16: cbs-xtpl-gradient ................ Passed 41.42 sec; Start 19: cbs-xtpl-wrapper; 25/411 Test #316: sapt2 ............................ Passed 364.06 sec; Start 20: cc1; 26/411 Test #12: cbs-parser ....................... Passed 96.67 sec; Start 21: cc10; 27/411 Test #21: cc10 ............................. Passed 41.74 sec; Start 22: cc11; 28/411 Test #19: cbs-xtpl-wrapper ................. Passed 87.45 sec; Start 23: cc12; 29/411 Test #17: cbs-xtpl-opt ..................... Passed 124.67 sec; Start 24: cc13; 30/411 Test #23: cc12 ............................. Passed 40.19 sec; Start 26: cc13b; 31/411 Test #22: cc11 ............................. Passed 65.06 sec; Start 27: cc13c; 32/411,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:2154,Test,Test,2154,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Test #3: casscf-fzc-sp .................... Passed 18.71 sec; Start 142: dfomp2-4; 248/411 Test #79: cc8b ............................. Passed 28.79 sec; Start 126: dfccsd-t-grad1; 249/411 Test #94: cisd-h2o+-1 ...................... Passed 5.15 sec; Start 22: cc11; 250/411 Test #54: cc38 ............................. Passed 29.55 sec; Start 95: cisd-h2o+-2; 251/411 Test #392: python-cc54 ...................... Passed 28.18 sec; Start 295: psithon1; 252/411 Test #84: cdomp2-2 ......................... Passed 30.82 sec; Start 294: psimrcc-sp1; 253/411 Test #95: cisd-h2o+-2 ...................... Passed 5.19 sec; Start 310: rasci-c2-active; 254/411 Test #294: psimrcc-sp1 ...................... Passed 3.91 sec; Start 72: cc54; 255/411 Test #125: dfccsd-grad1 ..................... Passed 29.42 sec; Start 331: scf1; 256/411 Test #295: psithon1 ......................... Passed 9.42 sec; Start 62: cc45; 257/411 Test #310: rasci-c2-active .................. Passed 7.42 sec; Start 6: ao-casscf-sp; 258/411 Test #78: cc8a ............................. Passed 36.32 sec; Start 132: dfmp2-4; 259/411 Test #142: dfomp2-4 ......................... Passed 24.29 sec; Start 152: dfomp2p5-grad1; 260/411 Test #126: dfccsd-t-grad1 ................... Passed 22.19 sec; Start 377: pywrap-align-chiral; 261/411 Test #22: cc11 ............................. Passed 21.45 sec; Start 90: cepa1; 262/411 Test #331: scf1 ............................. Passed 4.75 sec; Start 236: mpn-bh; 263/411 Test #6: ao-casscf-sp ..................... Passed 4.17 sec; Start 283: opt-freeze-coords; 264/411 Test #377: pywrap-align-chiral .............. Passed 3.28 sec; Start 148: dfomp3-grad1; 265/411 Test #132: dfmp2-4 .......................... Passed 6.32 sec; Start 385: psi4numpy-fci; 266/411 Test #236: mpn-bh ........................... Passed 4.79 sec; Start 53: cc37; 267/411 Test #62: cc45 ............................. Passed 10.83 sec; Start 146: dfomp3-1; 268/411 Test #283: opt-freeze-coords ................ ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:24108,Test,Test,24108,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,"Test #403: json-schema-1-gradient ........... Passed 1.32 sec; Start 404: json-schema-1-properties; 404/411 Test #404: json-schema-1-properties ......... Passed 1.08 sec; Start 405: skeleton; 405/411 Test #405: skeleton ......................... Passed 1.10 sec; Start 406: skeletonaointegrals; 406/411 Test #406: skeletonaointegrals .............. Passed 1.17 sec; Start 407: skeletondfmp2; 407/411 Test #407: skeletondfmp2 .................... Passed 1.29 sec; Start 408: skeletonmointegrals; 408/411 Test #408: skeletonmointegrals .............. Passed 1.22 sec; Start 409: skeletonscf; 409/411 Test #409: skeletonscf ...................... Passed 0.72 sec; Start 410: skeletonsointegrals; 410/411 Test #410: skeletonsointegrals .............. Passed 1.01 sec; Start 411: skeletonwavefunction; 411/411 Test #411: skeletonwavefunction ............. Passed 1.03 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 55.73 sec*proc (2 tests); autotest = 374.25 sec*proc (26 tests); cart = 8218.29 sec*proc (123 tests); cas = 41.71 sec*proc (1 test); casscf = 36.15 sec*proc (11 tests); cbs = 546.91 sec*proc (10 tests); cc = 1151.91 sec*proc (65 tests); cdomp2 = 5.24 sec*proc (2 tests); cepa = 30.36 sec*proc (7 tests); ci = 79.29 sec*proc (8 tests); cisd = 117.44 sec*proc (7 tests); cookbook = 18.93 sec*proc (1 test); cubeprop = 16.42 sec*proc (2 tests); dcft = 560.31 sec*proc (13 tests); df = 370.25 sec*proc (38 tests); dfccd = 1.39 sec*proc (1 test); dfccd-grad = 2.01 sec*proc (1 test); dfccdl = 1.41 sec*proc (1 test); dfccsd = 1.55 sec*proc (1 test); dfccsd-grad = 3.50 sec*proc (1 test); dfccsd-t-grad = 3.85 sec*proc (1 test); dfccsdat = 2.57 sec*proc (1 test); dfccsdl = 1.64 sec*proc (1 test); dfccsdt = 1.99 sec*proc (1 test); dfep2 = 4.64 sec*proc (2 tests); dfmp2 = 93.43 sec*proc (11 tests); dfomp2 = 61.41 sec*proc (7 tests); dfomp2.5 = 19.21 sec*proc (4 tests); dfomp3 = 18.74 sec*proc (4 tests); dfscf = 120.49 sec*proc (1 test); dft = 1158.52 sec*proc (",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:38323,test,tests,38323,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['test'],['tests']
Testability,"Test #403: json-schema-1-gradient ........... Passed 1.45 sec; Start 404: json-schema-1-properties; 404/411 Test #404: json-schema-1-properties ......... Passed 1.90 sec; Start 405: skeleton; 405/411 Test #405: skeleton ......................... Passed 1.11 sec; Start 406: skeletonaointegrals; 406/411 Test #406: skeletonaointegrals .............. Passed 0.98 sec; Start 407: skeletondfmp2; 407/411 Test #407: skeletondfmp2 .................... Passed 1.33 sec; Start 408: skeletonmointegrals; 408/411 Test #408: skeletonmointegrals .............. Passed 1.07 sec; Start 409: skeletonscf; 409/411 Test #409: skeletonscf ...................... Passed 0.68 sec; Start 410: skeletonsointegrals; 410/411 Test #410: skeletonsointegrals .............. Passed 1.01 sec; Start 411: skeletonwavefunction; 411/411 Test #411: skeletonwavefunction ............. Passed 0.95 sec. 100% tests passed, 0 tests failed out of 411. Label Time Summary:; adc = 59.40 sec*proc (2 tests); autotest = 413.88 sec*proc (26 tests); cart = 8685.75 sec*proc (123 tests); cas = 42.49 sec*proc (1 test); casscf = 39.18 sec*proc (11 tests); cbs = 636.82 sec*proc (10 tests); cc = 1337.69 sec*proc (65 tests); cdomp2 = 6.18 sec*proc (2 tests); cepa = 34.84 sec*proc (7 tests); ci = 81.27 sec*proc (8 tests); cisd = 132.02 sec*proc (7 tests); cookbook = 33.29 sec*proc (1 test); cubeprop = 17.72 sec*proc (2 tests); dcft = 859.31 sec*proc (13 tests); df = 444.10 sec*proc (38 tests); dfccd = 1.41 sec*proc (1 test); dfccd-grad = 2.48 sec*proc (1 test); dfccdl = 1.38 sec*proc (1 test); dfccsd = 1.91 sec*proc (1 test); dfccsd-grad = 5.09 sec*proc (1 test); dfccsd-t-grad = 4.20 sec*proc (1 test); dfccsdat = 3.26 sec*proc (1 test); dfccsdl = 1.60 sec*proc (1 test); dfccsdt = 2.15 sec*proc (1 test); dfep2 = 4.83 sec*proc (2 tests); dfmp2 = 103.27 sec*proc (11 tests); dfomp2 = 91.94 sec*proc (7 tests); dfomp2.5 = 23.91 sec*proc (4 tests); dfomp3 = 23.93 sec*proc (4 tests); dfscf = 139.95 sec*proc (1 test); dft = 1225.97 sec*proc ",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972:38352,test,tests,38352,https://psicode.org,https://github.com/psi4/psi4/pull/1071#issuecomment-407449972,1,['test'],['tests']
Testability,Test #44: cc28 ............................. Passed 82.41 sec; Start 150: dfomp3-grad2; 85/412 Test #148: dfomp3-2 ......................... Passed 63.71 sec; Start 82: cc9; 86/412 Test #101: ci-property ...................... Passed 57.32 sec; Start 260: omp3-3; 87/412 Test #58: cc40 ............................. Passed 66.56 sec; Start 220: mints-benchmark; 88/412 Test #59: cc41 ............................. Passed 107.46 sec; Start 83: cc9a; 89/412 Test #105: dcft-grad2 ....................... Passed 101.83 sec; Start 19: cbs-xtpl-nbody; 90/412 Test #261: omp3-4 ........................... Passed 87.40 sec; Start 243: ocepa-grad2; 91/412 Test #171: dft1-alt ......................... Passed 53.53 sec; Start 132: dfmp2-3; 92/412 Test #264: omp3-grad2 ....................... Passed 71.89 sec; Start 262: omp3-5; 93/412 Test #220: mints-benchmark .................. Passed 42.98 sec; Start 277: opt11; 94/412 Test #145: dfomp2-grad2 ..................... Passed 91.70 sec; Start 81: cc8c; 95/412 Test #132: dfmp2-3 .......................... Passed 41.50 sec; Start 245: ocepa2; 96/412 Test #82: cc9 .............................. Passed 81.68 sec; Start 393: python-cc54; 97/412 Test #231: mp2-module ....................... Passed 115.34 sec; Start 349: sapt-compare; 98/412 Test #83: cc9a ............................. Passed 74.28 sec; Start 308: pywrap-db1; 99/412 Test #193: fd-freq-energy ................... Passed 97.88 sec; Start 361: x2c1; 100/412 Test #19: cbs-xtpl-nbody ................... Passed 102.30 sec; Start 60: cc42; 101/412 Test #260: omp3-3 ........................... Passed 112.58 sec; Start 68: cc4a; 102/412 Test #277: opt11 ............................ Passed 63.60 sec; Start 300: pywrap-alias; 103/412 Test #81: cc8c ............................. Passed 64.99 sec; Start 2: adc2; 104/412 Test #150: dfomp3-grad2 ..................... Passed 124.28 sec; Start 65: cc47; 105/412 Test #243: ocepa-grad2 ...................... Passed 114.31 sec; Start 21: cc1; 106,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504:9145,Test,Test,9145,https://psicode.org,https://github.com/psi4/psi4/pull/1199#issuecomment-417683504,1,['Test'],['Test']
Testability,Test #47: cc30 ............................. Passed 80.66 sec; Start 320: sapt4; 68/413 Test #170: dft1 ............................. Passed 111.14 sec; Start 327: scf-bz2; 69/413 Test #232: mp2-module ....................... Passed 104.71 sec; Start 17: cbs-xtpl-opt; 70/413 Test #62: cc44 ............................. Passed 97.23 sec; Start 149: dfomp3-2; 71/413 Test #252: omp2-5 ........................... Passed 94.12 sec; Start 246: ocepa2; 72/413 Test #381: cc-module ........................ Passed 215.27 sec; Start 373: dft-custom-dhdf; 73/413 Test #244: ocepa-grad2 ...................... Passed 91.63 sec; Start 282: opt-irc-1; 74/413 Test #75: cc5a ............................. Passed 101.97 sec; Start 281: opt14; 75/413 Test #19: cbs-xtpl-nbody ................... Passed 99.42 sec; Start 21: cc1; 76/413 Test #149: dfomp3-2 ......................... Passed 52.68 sec; Start 80: cc8b; 77/413 Test #246: ocepa2 ........................... Passed 63.98 sec; Start 158: dfomp2p5-grad2; 78/413 Test #17: cbs-xtpl-opt ..................... Passed 82.27 sec; Start 65: cc47; 79/413 Test #80: cc8b ............................. Passed 39.55 sec; Start 194: fd-freq-energy; 80/413 Test #21: cc1 .............................. Passed 62.73 sec; Start 64: cc46; 81/413 Test #281: opt14 ............................ Passed 79.81 sec; Start 35: cc19; 82/413 Test #373: dft-custom-dhdf .................. Passed 92.67 sec; Start 265: omp3-grad2; 83/413 Test #327: scf-bz2 .......................... Passed 127.64 sec; Start 109: dcft1; 84/413 Test #65: cc47 ............................. Passed 41.31 sec; Start 20: cbs-xtpl-wrapper; 85/413 Test #282: opt-irc-1 ........................ Passed 95.47 sec; Start 258: omp2p5-grad2; 86/413 Test #158: dfomp2p5-grad2 ................... Passed 61.57 sec; Start 144: dfomp2-4; 87/413 Test #35: cc19 ............................. Passed 58.05 sec; Start 319: sapt3; 88/413 Test #194: fd-freq-energy ................... Passed 85.55 sec; Start 82: cc9,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:7548,Test,Test,7548,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Test #50: cc33 ............................. Passed 40.75 sec; Start 52: cc35; 121/413 Test #101: ci-property ...................... Passed 58.02 sec; Start 38: cc22; 122/413 Test #56: cc39 ............................. Passed 69.67 sec; Start 74: cc55; 123/413 Test #299: pubchem1 ......................... Passed 63.57 sec; Start 154: dfomp2p5-grad1; 124/413 Test #239: nbody-he-cluster ................. Passed 60.48 sec; Start 172: dft1-alt; 125/413 Test #202: fnocc2 ........................... Passed 76.70 sec; Start 150: dfomp3-grad1; 126/413 Test #68: cc4a ............................. Passed 61.95 sec; Start 55: cc38; 127/413 Test #33: cc17 ............................. Passed 49.20 sec; Start 63: cc45; 128/413 Test #275: opt7 ............................. Passed 61.83 sec; Start 196: fd-freq-gradient; 129/413 Test #164: dft-grad-meta .................... Passed 52.68 sec; Start 152: dfomp2p5-1; 130/413 Test #52: cc35 ............................. Passed 52.95 sec; Start 22: cc10; 131/413 Test #38: cc22 ............................. Passed 53.38 sec; Start 66: cc48; 132/413 Test #278: opt11 ............................ Passed 63.10 sec; Start 108: dcft-grad4; 133/413 Test #172: dft1-alt ......................... Passed 53.73 sec; Start 276: opt8; 134/413 Test #72: cc53 ............................. Passed 84.38 sec; Start 23: cc11; 135/413 Test #154: dfomp2p5-grad1 ................... Passed 55.87 sec; Start 49: cc32; 136/413 Test #63: cc45 ............................. Passed 39.41 sec; Start 254: omp2-grad2; 137/413 Test #55: cc38 ............................. Passed 49.92 sec; Start 221: mints-benchmark; 138/413 Test #150: dfomp3-grad1 ..................... Passed 53.60 sec; Start 350: sapt-compare; 139/413 Test #196: fd-freq-gradient ................. Passed 51.16 sec; Start 85: cdomp2-2; 140/413 Test #152: dfomp2p5-1 ....................... Passed 40.42 sec; Start 127: dfccsd-grad1; 141/413 Test #49: cc32 ............................. Passed 29.39 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:12392,Test,Test,12392,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Test #51: cc35 ............................. Passed 18.61 sec; Start 277: opt12; 165/411 Test #189: fci-tdm-2 ........................ Passed 19.97 sec; Start 346: sapt-dft1; 166/411 Test #33: cc18 ............................. Passed 19.88 sec; Start 360: x2c1; 167/411 Test #163: dft-freq ......................... Passed 20.91 sec; Start 252: omp2-grad2; 168/411 Test #49: cc33 ............................. Passed 15.20 sec; Start 322: sapt-dft-lrc; 169/411 Test #16: cbs-xtpl-gradient ................ Passed 18.76 sec; Start 272: opt6; 170/411 Test #172: dft3 ............................. Passed 19.83 sec; Start 150: dfomp2p5-1; 171/411 Test #360: x2c1 ............................. Passed 12.27 sec; Start 358: tu5-sapt; 172/411 Test #277: opt12 ............................ Passed 20.43 sec; Start 32: cc17; 173/411 Test #252: omp2-grad2 ....................... Passed 12.52 sec; Start 267: opt2; 174/411 Test #346: sapt-dft1 ........................ Passed 21.76 sec; Start 248: omp2-3; 175/411 Test #150: dfomp2p5-1 ....................... Passed 10.49 sec; Start 303: pywrap-checkrun-convcrit; 176/411 Test #322: sapt-dft-lrc ..................... Passed 18.93 sec; Start 146: dfomp3-1; 177/411 Test #272: opt6 ............................. Passed 19.96 sec; Start 138: dfmp2-grad5; 178/411 Test #32: cc17 ............................. Passed 14.49 sec; Start 194: fd-freq-gradient; 179/411 Test #358: tu5-sapt ......................... Passed 18.58 sec; Start 177: extern2; 180/411 Test #146: dfomp3-1 ......................... Passed 11.24 sec; Start 315: sapt1; 181/411 Test #248: omp2-3 ........................... Passed 16.18 sec; Start 282: opt-irc-3; 182/411 Test #267: opt2 ............................. Passed 20.32 sec; Start 128: dfccsdat1; 183/411 Test #303: pywrap-checkrun-convcrit ......... Passed 16.70 sec; Start 37: cc22; 184/411 Test #138: dfmp2-grad5 ...................... Passed 14.87 sec; Start 290: psimrcc-ccsd_t-4; 185/411 Test #128: dfccsdat1 ................,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064:16319,Test,Test,16319,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-405575064,1,['Test'],['Test']
Testability,Test #61: cc44 ............................. Passed 50.54 sec; Start 17: cbs-xtpl-opt; 60/411 Test #74: cc5a ............................. Passed 53.95 sec; Start 100: ci-property; 61/411 Test #114: dcft8 ............................ Passed 75.09 sec; Start 280: opt-irc-1; 62/411 Test #159: dft-grad-meta .................... Passed 54.04 sec; Start 389: python-pubchem; 63/411 Test #297: pubchem1 ......................... Passed 54.36 sec; Start 28: cc13d; 64/411 Test #24: cc13 ............................. Passed 61.45 sec; Start 58: cc41; 65/411 Test #17: cbs-xtpl-opt ..................... Passed 52.63 sec; Start 2: adc2; 66/411 Test #100: ci-property ...................... Passed 50.10 sec; Start 219: mints-benchmark; 67/411 Test #58: cc41 ............................. Passed 34.52 sec; Start 170: dft1-alt; 68/411 Test #389: python-pubchem ................... Passed 50.39 sec; Start 131: dfmp2-3; 69/411 Test #28: cc13d ............................ Passed 45.89 sec; Start 60: cc43; 70/411 Test #280: opt-irc-1 ........................ Passed 62.40 sec; Start 43: cc28; 71/411 Test #2: adc2 ............................. Passed 42.66 sec; Start 302: pywrap-cbs1; 72/411 Test #219: mints-benchmark .................. Passed 44.34 sec; Start 46: cc30; 73/411 Test #131: dfmp2-3 .......................... Passed 42.79 sec; Start 348: sapt-compare; 74/411 Test #170: dft1-alt ......................... Passed 47.57 sec; Start 307: pywrap-db1; 75/411 Test #43: cc28 ............................. Passed 42.73 sec; Start 230: mp2-module; 76/411 Test #60: cc43 ............................. Passed 51.52 sec; Start 31: cc16; 77/411 Test #46: cc30 ............................. Passed 45.99 sec; Start 129: dfmp2-1; 78/411 Test #302: pywrap-cbs1 ...................... Passed 59.67 sec; Start 386: cookbook-rohf-orb-rot; 79/411 Test #348: sapt-compare ..................... Passed 41.11 sec; Start 57: cc40; 80/411 Test #307: pywrap-db1 ....................... Passed 42.02 sec; Start 312: ras,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:6658,Test,Test,6658,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Test #65: cc48 ............................. Passed 34.57 sec; Start 358: tu5-sapt; 113/411 Test #326: scf-ecp .......................... Passed 27.04 sec; Start 54: cc38; 114/411 Test #358: tu5-sapt ......................... Passed 21.52 sec; Start 274: opt8; 115/411 Test #299: pywrap-alias ..................... Passed 48.68 sec; Start 166: dft-psivar; 116/411 Test #27: cc13c ............................ Passed 62.03 sec; Start 336: scf5; 117/411 Test #54: cc38 ............................. Passed 25.71 sec; Start 163: dft-freq; 118/411 Test #166: dft-psivar ....................... Passed 23.63 sec; Start 189: fci-tdm-2; 119/411 Test #274: opt8 ............................. Passed 27.54 sec; Start 346: sapt-dft1; 120/411 Test #163: dft-freq ......................... Passed 21.30 sec; Start 144: dfomp2-grad2; 121/411 Test #91: cepa-module ...................... Passed 60.97 sec; Start 30: cc15; 122/411 Test #104: dcft-grad2 ....................... Passed 70.28 sec; Start 261: omp3-5; 123/411 Test #189: fci-tdm-2 ........................ Passed 20.43 sec; Start 147: dfomp3-2; 124/411 Test #336: scf5 ............................. Passed 31.05 sec; Start 196: fd-gradient; 125/411 Test #346: sapt-dft1 ........................ Passed 22.66 sec; Start 322: sapt-dft-lrc; 126/411 Test #379: cc-module ........................ Passed 113.57 sec; Start 26: cc13b; 127/411 Test #322: sapt-dft-lrc ..................... Passed 19.70 sec; Start 249: omp2-4; 128/411 Test #196: fd-gradient ...................... Passed 31.18 sec; Start 260: omp3-4; 129/411 Test #30: cc15 ............................. Passed 45.82 sec; Start 92: ci-multi; 130/411 Test #147: dfomp3-2 ......................... Passed 39.98 sec; Start 56: cc4; 131/411 Test #144: dfomp2-grad2 ..................... Passed 48.38 sec; Start 290: psimrcc-ccsd_t-4; 132/411 Test #261: omp3-5 ........................... Passed 59.17 sec; Start 250: omp2-5; 133/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 17.78 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:11525,Test,Test,11525,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Test #65: cc48 ............................. Passed 95.69 sec; Start 280: opt-irc-1; 72/411 Test #168: dft1 ............................. Passed 124.66 sec; Start 230: mp2-module; 73/411 Test #140: dfomp2-2 ......................... Passed 58.63 sec; Start 261: omp3-5; 74/411 Test #34: cc19 ............................. Passed 72.40 sec; Start 259: omp3-3; 75/411 Test #61: cc44 ............................. Passed 86.68 sec; Start 242: ocepa-grad2; 76/411 Test #302: pywrap-cbs1 ...................... Passed 161.22 sec; Start 151: dfomp2p5-2; 77/411 Test #371: dft-custom-dhdf .................. Passed 99.18 sec; Start 19: cbs-xtpl-wrapper; 78/411 Test #325: scf-bz2 .......................... Passed 123.80 sec; Start 81: cc9; 79/411 Test #280: opt-irc-1 ........................ Passed 105.80 sec; Start 56: cc4; 80/411 Test #151: dfomp2p5-2 ....................... Passed 32.00 sec; Start 279: opt14; 81/411 Test #261: omp3-5 ........................... Passed 71.80 sec; Start 63: cc46; 82/411 Test #230: mp2-module ....................... Passed 83.78 sec; Start 156: dfomp2p5-grad2; 83/411 Test #242: ocepa-grad2 ...................... Passed 48.77 sec; Start 249: omp2-4; 84/411 Test #81: cc9 .............................. Passed 33.45 sec; Start 292: psimrcc-fd-freq2; 85/411 Test #259: omp3-3 ........................... Passed 65.71 sec; Start 78: cc8a; 86/411 Test #56: cc4 .............................. Passed 32.87 sec; Start 142: dfomp2-4; 87/411 Test #63: cc46 ............................. Passed 37.77 sec; Start 77: cc8; 88/411 Test #19: cbs-xtpl-wrapper ................. Passed 73.55 sec; Start 260: omp3-4; 89/411 Test #142: dfomp2-4 ......................... Passed 39.17 sec; Start 256: omp2p5-grad2; 90/411 Test #205: frac-traverse .................... Passed 218.91 sec; Start 317: sapt3; 91/411 Test #78: cc8a ............................. Passed 53.44 sec; Start 79: cc8b; 92/411 Test #279: opt14 ............................ Passed 79.82 sec; Start 67: cc4a; 93/41,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:7894,Test,Test,7894,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['Test'],['Test']
Testability,Test #66: cc48 ............................. Passed 58.90 sec; Start 171: dft1-alt; 114/412 Test #57: cc4 .............................. Passed 54.52 sec; Start 274: opt7; 115/412 Test #101: ci-property ...................... Passed 63.78 sec; Start 73: cc54; 116/412 Test #80: cc8b ............................. Passed 40.89 sec; Start 64: cc46; 117/412 Test #277: opt11 ............................ Passed 57.11 sec; Start 85: cdomp2-2; 118/412 Test #56: cc39 ............................. Passed 48.43 sec; Start 143: dfomp2-4; 119/412 Test #68: cc4a ............................. Passed 55.65 sec; Start 246: ocepa3; 120/412 Test #163: dft-grad-meta .................... Passed 57.17 sec; Start 308: pywrap-db1; 121/412 Test #171: dft1-alt ......................... Passed 61.25 sec; Start 12: cbs-parser; 122/412 Test #74: cc55 ............................. Passed 69.06 sec; Start 349: sapt-compare; 123/412 Test #274: opt7 ............................. Passed 67.33 sec; Start 21: cc1; 124/412 Test #238: nbody-he-cluster ................. Passed 70.58 sec; Start 220: mints-benchmark; 125/412 Test #279: opt13 ............................ Passed 837.45 sec; Start 338: scf6; 126/412 Test #73: cc54 ............................. Passed 63.23 sec; Start 132: dfmp2-3; 127/412 Test #64: cc46 ............................. Passed 66.40 sec; Start 201: fnocc2; 128/412 Test #83: cc9a ............................. Passed 95.41 sec; Start 337: scf5; 129/412 Test #81: cc8c ............................. Passed 100.16 sec; Start 33: cc17; 130/412 Test #308: pywrap-db1 ....................... Passed 48.18 sec; Start 107: dcft-grad4; 131/412 Test #85: cdomp2-2 ......................... Passed 78.83 sec; Start 195: fd-freq-gradient; 132/412 Test #143: dfomp2-4 ......................... Passed 65.99 sec; Start 93: ci-multi; 133/412 Test #349: sapt-compare ..................... Passed 46.08 sec; Start 361: x2c1; 134/412 Test #220: mints-benchmark .................. Passed 43.40 sec; Start 313: r,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068:11742,Test,Test,11742,https://psicode.org,https://github.com/psi4/psi4/pull/1220#issuecomment-419126068,1,['Test'],['Test']
Testability,Test #66: cc48 ............................. Passed 94.02 sec; Start 394: python-cc54; 115/413 Test #247: ocepa3 ........................... Passed 92.69 sec; Start 34: cc18; 116/413 Test #56: cc39 ............................. Passed 86.96 sec; Start 150: dfomp3-grad1; 117/413 Test #69: cc50 ............................. Passed 56.64 sec; Start 275: opt7; 118/413 Test #82: cc9 .............................. Passed 87.12 sec; Start 299: pubchem1; 119/413 Test #391: python-pubchem ................... Passed 62.99 sec; Start 239: nbody-he-cluster; 120/413 Test #144: dfomp2-4 ......................... Passed 72.50 sec; Start 55: cc38; 121/413 Test #128: dfccsd-t-grad1 ................... Passed 74.65 sec; Start 278: opt11; 122/413 Test #22: cc10 ............................. Passed 67.33 sec; Start 57: cc4; 123/413 Test #394: python-cc54 ...................... Passed 62.81 sec; Start 101: ci-property; 124/413 Test #150: dfomp3-grad1 ..................... Passed 60.14 sec; Start 23: cc11; 125/413 Test #81: cc8c ............................. Passed 77.74 sec; Start 196: fd-freq-gradient; 126/413 Test #68: cc4a ............................. Passed 74.31 sec; Start 154: dfomp2p5-grad1; 127/413 Test #275: opt7 ............................. Passed 62.91 sec; Start 148: dfomp3-1; 128/413 Test #34: cc18 ............................. Passed 70.30 sec; Start 50: cc33; 129/413 Test #55: cc38 ............................. Passed 54.69 sec; Start 38: cc22; 130/413 Test #239: nbody-he-cluster ................. Passed 61.77 sec; Start 52: cc35; 131/413 Test #299: pubchem1 ......................... Passed 62.13 sec; Start 172: dft1-alt; 132/413 Test #109: dcft1 ............................ Passed 104.14 sec; Start 164: dft-grad-meta; 133/413 Test #278: opt11 ............................ Passed 53.92 sec; Start 33: cc17; 134/413 Test #23: cc11 ............................. Passed 41.50 sec; Start 85: cdomp2-2; 135/413 Test #148: dfomp3-1 ......................... Passed 34.66 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:11839,Test,Test,11839,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Test #67: cc4a ............................. Passed 47.72 sec; Start 263: omp3-grad2; 99/411 Test #79: cc8b ............................. Passed 50.66 sec; Start 244: ocepa2; 100/411 Test #55: cc39 ............................. Passed 46.75 sec; Start 167: dft-b3lyp; 101/411 Test #256: omp2p5-grad2 ..................... Passed 66.01 sec; Start 204: frac-ip-fitting; 102/411 Test #68: cc50 ............................. Passed 57.81 sec; Start 250: omp2-5; 103/411 Test #260: omp3-4 ........................... Passed 82.25 sec; Start 73: cc55; 104/411 Test #317: sapt3 ............................ Passed 75.27 sec; Start 33: cc18; 105/411 Test #66: cc49 ............................. Passed 50.65 sec; Start 389: python-pubchem; 106/411 Test #64: cc47 ............................. Passed 42.26 sec; Start 71: cc53; 107/411 Test #319: sapt5 ............................ Passed 78.72 sec; Start 82: cc9a; 108/411 Test #33: cc18 ............................. Passed 35.82 sec; Start 297: pubchem1; 109/411 Test #263: omp3-grad2 ....................... Passed 57.05 sec; Start 12: cbs-parser; 110/411 Test #73: cc55 ............................. Passed 42.84 sec; Start 100: ci-property; 111/411 Test #71: cc53 ............................. Passed 36.60 sec; Start 32: cc17; 112/411 Test #244: ocepa2 ........................... Passed 63.39 sec; Start 84: cdomp2-2; 113/411 Test #316: sapt2 ............................ Passed 341.30 sec; Start 80: cc8c; 114/411 Test #167: dft-b3lyp ........................ Passed 65.67 sec; Start 21: cc10; 115/411 Test #204: frac-ip-fitting .................. Passed 75.23 sec; Start 126: dfccsd-t-grad1; 116/411 Test #389: python-pubchem ................... Passed 59.41 sec; Start 148: dfomp3-grad1; 117/411 Test #250: omp2-5 ........................... Passed 68.60 sec; Start 54: cc38; 118/411 Test #82: cc9a ............................. Passed 46.42 sec; Start 125: dfccsd-grad1; 119/411 Test #32: cc17 ............................. Passed 33.17 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383:10336,Test,Test,10336,https://psicode.org,https://github.com/psi4/psi4/pull/1124#issuecomment-411347383,1,['Test'],['Test']
Testability,Test #68: cc4a ............................. Passed 74.31 sec; Start 154: dfomp2p5-grad1; 127/413 Test #275: opt7 ............................. Passed 62.91 sec; Start 148: dfomp3-1; 128/413 Test #34: cc18 ............................. Passed 70.30 sec; Start 50: cc33; 129/413 Test #55: cc38 ............................. Passed 54.69 sec; Start 38: cc22; 130/413 Test #239: nbody-he-cluster ................. Passed 61.77 sec; Start 52: cc35; 131/413 Test #299: pubchem1 ......................... Passed 62.13 sec; Start 172: dft1-alt; 132/413 Test #109: dcft1 ............................ Passed 104.14 sec; Start 164: dft-grad-meta; 133/413 Test #278: opt11 ............................ Passed 53.92 sec; Start 33: cc17; 134/413 Test #23: cc11 ............................. Passed 41.50 sec; Start 85: cdomp2-2; 135/413 Test #148: dfomp3-1 ......................... Passed 34.66 sec; Start 63: cc45; 136/413 Test #57: cc4 .............................. Passed 48.48 sec; Start 254: omp2-grad2; 137/413 Test #154: dfomp2p5-grad1 ................... Passed 43.84 sec; Start 152: dfomp2p5-1; 138/413 Test #50: cc33 ............................. Passed 40.84 sec; Start 127: dfccsd-grad1; 139/413 Test #196: fd-freq-gradient ................. Passed 46.68 sec; Start 108: dcft-grad4; 140/413 Test #101: ci-property ...................... Passed 54.46 sec; Start 350: sapt-compare; 141/413 Test #38: cc22 ............................. Passed 43.86 sec; Start 338: scf5; 142/413 Test #26: cc13a ............................ Passed 552.09 sec; Start 276: opt8; 143/413 Test #52: cc35 ............................. Passed 48.07 sec; Start 24: cc12; 144/413 Test #172: dft1-alt ......................... Passed 51.80 sec; Start 309: pywrap-db1; 145/413 Test #63: cc45 ............................. Passed 26.77 sec; Start 198: fd-gradient; 146/413 Test #164: dft-grad-meta .................... Passed 51.13 sec; Start 221: mints-benchmark; 147/413 Test #33: cc17 ............................. Passed 37.13,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085:12945,Test,Test,12945,https://psicode.org,https://github.com/psi4/psi4/pull/1246#issuecomment-425384085,1,['Test'],['Test']
Testability,Test #69: cc51 ............................. Passed 56.92 sec; Start 292: psimrcc-fd-freq2; 64/411 Test #91: cepa-module ...................... Passed 19.19 sec; Start 115: dcft9; 65/411 Test #75: cc6 .............................. Passed 49.07 sec; Start 259: omp3-3; 66/411 Test #316: sapt2 ............................ Passed 354.02 sec; Start 74: cc5a; 67/411 Test #115: dcft9 ............................ Passed 13.18 sec; Start 317: sapt3; 68/411 Test #319: sapt5 ............................ Passed 67.31 sec; Start 167: dft-b3lyp; 69/411 Test #259: omp3-3 ........................... Passed 18.77 sec; Start 30: cc15; 70/411 Test #279: opt14 ............................ Passed 74.61 sec; Start 153: dfomp2p5-grad2; 71/411 Test #30: cc15 ............................. Passed 12.46 sec; Start 104: dcft-grad2; 72/411 Test #153: dfomp2p5-grad2 ................... Passed 15.20 sec; Start 61: cc44; 73/411 Test #292: psimrcc-fd-freq2 ................. Passed 62.74 sec; Start 204: frac-ip-fitting; 74/411 Test #104: dcft-grad2 ....................... Passed 16.24 sec; Start 144: dfomp2-grad2; 75/411 Test #74: cc5a ............................. Passed 46.64 sec; Start 11: cbs-delta-energy; 76/411 Test #144: dfomp2-grad2 ..................... Passed 11.68 sec; Start 26: cc13b; 77/411 Test #167: dft-b3lyp ........................ Passed 64.40 sec; Start 244: ocepa2; 78/411 Test #26: cc13b ............................ Passed 16.81 sec; Start 250: omp2-5; 79/411 Test #317: sapt3 ............................ Passed 72.42 sec; Start 230: mp2-module; 80/411 Test #61: cc44 ............................. Passed 45.71 sec; Start 151: dfomp2p5-2; 81/411 Test #250: omp2-5 ........................... Passed 18.02 sec; Start 19: cbs-xtpl-wrapper; 82/411 Test #151: dfomp2p5-2 ....................... Passed 12.10 sec; Start 147: dfomp3-2; 83/411 Test #11: cbs-delta-energy ................. Passed 43.01 sec; Start 280: opt-irc-1; 84/411 Test #244: ocepa2 ........................... Passed 23.63 ,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225:7007,Test,Test,7007,https://psicode.org,https://github.com/psi4/psi4/pull/1075#issuecomment-409598225,1,['Test'],['Test']
Testability,Test #73: cc54 ............................. Passed 38.06 sec; Start 135: dfmp2-ecp; 166/413 Test #93: ci-multi ......................... Passed 42.41 sec; Start 53: cc36; 167/413 Test #130: dfccsdat1 ........................ Passed 16.81 sec; Start 376: dft-custom-gga; 168/413 Test #133: dfmp2-3 .......................... Passed 42.48 sec; Start 201: fnocc1; 169/413 Test #26: cc13a ............................ Passed 616.34 sec; Start 362: x2c1; 170/413 Test #266: opt-lindep-change ................ Passed 27.02 sec; Start 256: omp2p5-2; 171/413 Test #325: sapt7 ............................ Passed 36.00 sec; Start 344: soscf-dft; 172/413 Test #339: scf6 ............................. Passed 41.82 sec; Start 208: ghosts; 173/413 Test #53: cc36 ............................. Passed 16.93 sec; Start 204: fnocc4; 174/413 Test #16: cbs-xtpl-gradient ................ Passed 30.22 sec; Start 203: fnocc3; 175/413 Test #279: opt12 ............................ Passed 23.31 sec; Start 328: scf-ecp; 176/413 Test #201: fnocc1 ........................... Passed 18.46 sec; Start 260: omp3-2; 177/413 Test #269: opt2 ............................. Passed 24.31 sec; Start 378: pywrap-align; 178/413 Test #314: rasci-ne ......................... Passed 40.21 sec; Start 274: opt6; 179/413 Test #378: pywrap-align ..................... Passed 3.38 sec; Start 249: omp2-2; 180/413 Test #256: omp2p5-2 ......................... Passed 22.46 sec; Start 175: dft-omega; 181/413 Test #203: fnocc3 ........................... Passed 13.74 sec; Start 165: dft-freq; 182/413 Test #131: dfmp2-1 .......................... Passed 34.38 sec; Start 179: extern2; 183/413 Test #362: x2c1 ............................. Passed 30.47 sec; Start 1: adc1; 184/413 Test #376: dft-custom-gga ................... Passed 33.22 sec; Start 140: dfmp2-grad5; 185/413 Test #135: dfmp2-ecp ........................ Passed 36.53 sec; Start 250: omp2-3; 186/413 Test #260: omp3-2 ........................... Passed 16.56 sec; Start 37,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026:16535,Test,Test,16535,https://psicode.org,https://github.com/psi4/psi4/pull/1239#issuecomment-425082026,1,['Test'],['Test']
Testability,Test #73: cc55 ............................. Passed 57.71 sec; Start 172: dft3; 158/411 Test #245: ocepa3 ........................... Passed 57.53 sec; Start 140: dfomp2-2; 159/411 Test #163: dft-freq ......................... Passed 23.58 sec; Start 322: sapt-dft-lrc; 160/411 Test #55: cc39 ............................. Passed 58.48 sec; Start 277: opt12; 161/411 Test #63: cc46 ............................. Passed 54.24 sec; Start 282: opt-irc-3; 162/411 Test #12: cbs-parser ....................... Passed 83.31 sec; Start 272: opt6; 163/411 Test #64: cc47 ............................. Passed 71.08 sec; Start 315: sapt1; 164/411 Test #358: tu5-sapt ......................... Passed 23.06 sec; Start 267: opt2; 165/411 Test #172: dft3 ............................. Passed 26.14 sec; Start 290: psimrcc-ccsd_t-4; 166/411 Test #151: dfomp2p5-2 ....................... Passed 71.41 sec; Start 176: extern1; 167/411 Test #322: sapt-dft-lrc ..................... Passed 20.32 sec; Start 177: extern2; 168/411 Test #81: cc9 .............................. Passed 69.76 sec; Start 247: omp2-2; 169/411 Test #313: rasscf-sp ........................ Passed 73.93 sec; Start 80: cc8c; 170/411 Test #71: cc53 ............................. Passed 60.75 sec; Start 48: cc32; 171/411 Test #315: sapt1 ............................ Passed 19.99 sec; Start 165: dft-grad2; 172/411 Test #277: opt12 ............................ Passed 26.40 sec; Start 169: dft-vv10; 173/411 Test #290: psimrcc-ccsd_t-4 ................. Passed 19.99 sec; Start 194: fd-freq-gradient; 174/411 Test #79: cc8b ............................. Passed 60.66 sec; Start 321: sapt-dft-api; 175/411 Test #267: opt2 ............................. Passed 25.68 sec; Start 303: pywrap-checkrun-convcrit; 176/411 Test #272: opt6 ............................. Passed 28.86 sec; Start 254: omp2p5-2; 177/411 Test #176: extern1 .......................... Passed 21.76 sec; Start 238: nbody-intermediates; 178/411 Test #282: opt-irc-3 ..............,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307:15817,Test,Test,15817,https://psicode.org,https://github.com/psi4/psi4/pull/1072#issuecomment-406602307,1,['Test'],['Test']
Testability,Test #75: cc6 .............................. Passed 79.07 sec; Start 102: decontract; 99/411 Test #102: decontract ....................... Passed 1.29 sec; Start 103: dcft-grad1; 100/411 Test #99: cisd-sp-2 ........................ Passed 5.99 sec; Start 104: dcft-grad2; 101/411 Test #98: cisd-sp .......................... Passed 9.90 sec; Start 105: dcft-grad3; 102/411 Test #70: cc52 ............................. Passed 106.20 sec; Start 106: dcft-grad4; 103/411 Test #101: cubeprop ......................... Passed 12.03 sec; Start 107: dcft1; 104/411 Test #92: ci-multi ......................... Passed 22.66 sec; Start 108: dcft2; 105/411 Test #108: dcft2 ............................ Passed 3.64 sec; Start 109: dcft3; 106/411 Test #105: dcft-grad3 ....................... Passed 13.24 sec; Start 110: dcft4; 107/411 Test #109: dcft3 ............................ Passed 12.31 sec; Start 111: dcft5; 108/411 Test #107: dcft1 ............................ Passed 24.76 sec; Start 112: dcft6; 109/411 Test #91: cepa-module ...................... Passed 55.38 sec; Start 114: dcft8; 110/411 Test #106: dcft-grad4 ....................... Passed 34.43 sec; Start 115: dcft9; 111/411 Test #104: dcft-grad2 ....................... Passed 44.51 sec; Start 116: ao-dfcasscf-sp; 112/411 Test #116: ao-dfcasscf-sp ................... Passed 2.53 sec; Start 117: dfcasscf-sa-sp; 113/411 Test #100: ci-property ...................... Passed 54.60 sec; Start 118: dfcasscf-fzc-sp; 114/411 Test #117: dfcasscf-sa-sp ................... Passed 4.84 sec; Start 119: dfcasscf-sp; 115/411 Test #118: dfcasscf-fzc-sp .................. Passed 3.68 sec; Start 120: dfccd1; 116/411 Test #120: dfccd1 ........................... Passed 2.40 sec; Start 121: dfccdl1; 117/411 Test #119: dfcasscf-sp ...................... Passed 3.56 sec; Start 122: dfccd-grad1; 118/411 Test #121: dfccdl1 .......................... Passed 2.47 sec; Start 123: dfccsd1; 119/411 Test #123: dfccsd1 .......................... Passed 4.35,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:10038,Test,Test,10038,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Test #7: casscf-sp ........................ Passed 52.30 sec; Start 94: ci-multi; 31/415 Test #16: cbs-xtpl-gradient ................ Passed 43.54 sec; Start 3: casscf-fzc-sp; 32/415 Test #50: cc32 ............................. Passed 47.12 sec; Start 210: gibbs; 33/415 Test #129: dfccsd-t-grad1 ................... Passed 103.60 sec; Start 149: dfomp3-1; 34/415 Test #309: pywrap-alias ..................... Passed 141.43 sec; Start 346: scf5; 35/415 Test #94: ci-multi ......................... Passed 59.86 sec; Start 317: pywrap-db1; 36/415 Test #112: dcft3 ............................ Passed 75.08 sec; Start 136: dfmp2-ecp; 37/415 Test #128: dfccsd-grad1 ..................... Passed 94.95 sec; Start 263: omp2p5-2; 38/415 Test #11: cbs-delta-energy ................. Passed 615.43 sec; Start 102: ci-property; 39/415 Test #3: casscf-fzc-sp .................... Passed 55.64 sec; Start 256: omp2-2; 40/415 Test #210: gibbs ............................ Passed 51.08 sec; Start 403: python-cc54; 41/415 Test #136: dfmp2-ecp ........................ Passed 32.87 sec; Start 323: rasscf-sp; 42/415 Test #149: dfomp3-1 ......................... Passed 52.09 sec; Start 14: cbs-xtpl-energy; 43/415 Test #346: scf5 ............................. Passed 46.11 sec; Start 5: casscf-sa-sp; 44/415 Test #317: pywrap-db1 ....................... Passed 41.80 sec; Start 85: cdomp2-1; 45/415 Test #263: omp2p5-2 ......................... Passed 30.33 sec; Start 179: extern1; 46/415 Test #102: ci-property ...................... Passed 28.56 sec; Start 386: pywrap-bfs; 47/415 Test #256: omp2-2 ........................... Passed 32.02 sec; Start 127: dfccsdl1; 48/415 Test #371: x2c1 ............................. Passed 130.82 sec; Start 4: casscf-semi; 49/415 Test #5: casscf-sa-sp ..................... Passed 14.54 sec; Start 205: fnocc4; 50/415 Test #14: cbs-xtpl-energy .................. Passed 17.93 sec; Start 377: dft-smoke; 51/415 Test #85: cdomp2-1 ......................... Passed 16.80 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:4179,Test,Test,4179,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #80: cc8a ............................. Passed 94.97 sec; Start 89: cepa1; 206/415 Test #88: cepa0-grad2 ...................... Passed 12.74 sec; Start 90: cepa2; 207/415 Test #82: cc8c ............................. Passed 87.81 sec; Start 91: cepa3; 208/415 Test #72: cc52 ............................. Passed 189.42 sec; Start 92: cepa1; 209/415 Test #89: cepa1 ............................ Passed 25.08 sec; Start 93: cepa-module; 210/415 Test #90: cepa2 ............................ Passed 27.41 sec; Start 96: cisd-h2o+-1; 211/415 Test #96: cisd-h2o+-1 ...................... Passed 4.67 sec; Start 97: cisd-h2o+-2; 212/415 Test #97: cisd-h2o+-2 ...................... Passed 5.63 sec; Start 98: cisd-h2o-clpse; 213/415 Test #98: cisd-h2o-clpse ................... Passed 3.62 sec; Start 99: cisd-opt-fd; 214/415 Test #91: cepa3 ............................ Passed 37.20 sec; Start 100: cisd-sp; 215/415 Test #81: cc8b ............................. Passed 129.04 sec; Start 101: cisd-sp-2; 216/415 Test #101: cisd-sp-2 ........................ Passed 3.89 sec; Start 104: cubeprop-frontier; 217/415 Test #100: cisd-sp .......................... Passed 8.57 sec; Start 106: dcft-grad1; 218/415 Test #104: cubeprop-frontier ................ Passed 4.64 sec; Start 108: dcft-grad3; 219/415 Test #92: cepa1 ............................ Passed 38.25 sec; Start 109: dcft-grad4; 220/415 Test #83: cc9 .............................. Passed 109.04 sec; Start 111: dcft2; 221/415 Test #108: dcft-grad3 ....................... Passed 26.75 sec; Start 113: dcft4; 222/415 Test #84: cc9a ............................. Passed 107.29 sec; Start 114: dcft5; 223/415 Test #109: dcft-grad4 ....................... Passed 36.11 sec; Start 115: dcft6; 224/415 Test #111: dcft2 ............................ Passed 28.90 sec; Start 117: dcft8; 225/415 Test #43: cc26 ............................. Passed 867.28 sec; Start 118: dcft9; 226/415 Test #41: cc24 ............................. Passed 919.62 sec; Start,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:20287,Test,Test,20287,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #85: cdomp2-2 ......................... Passed 26.73 sec; Start 52: cc35; 123/413 Test #169: dft-b3lyp ........................ Passed 68.74 sec; Start 38: cc22; 124/413 Test #299: pubchem1 ......................... Passed 59.95 sec; Start 276: opt8; 125/413 Test #278: opt11 ............................ Passed 50.91 sec; Start 152: dfomp2p5-1; 126/413 Test #164: dft-grad-meta .................... Passed 52.34 sec; Start 108: dcft-grad4; 127/413 Test #202: fnocc2 ........................... Passed 58.30 sec; Start 196: fd-freq-gradient; 128/413 Test #154: dfomp2p5-grad1 ................... Passed 45.22 sec; Start 51: cc34; 129/413 Test #55: cc38 ............................. Passed 43.34 sec; Start 254: omp2-grad2; 130/413 Test #239: nbody-he-cluster ................. Passed 61.13 sec; Start 127: dfccsd-grad1; 131/413 Test #276: opt8 ............................. Passed 40.80 sec; Start 53: cc36; 132/413 Test #38: cc22 ............................. Passed 52.17 sec; Start 2: adc2; 133/413 Test #52: cc35 ............................. Passed 54.66 sec; Start 172: dft1-alt; 134/413 Test #51: cc34 ............................. Passed 32.38 sec; Start 301: pywrap-alias; 135/413 Test #108: dcft-grad4 ....................... Passed 43.35 sec; Start 221: mints-benchmark; 136/413 Test #152: dfomp2p5-1 ....................... Passed 45.46 sec; Start 266: opt-lindep-change; 137/413 Test #128: dfccsd-t-grad1 ................... Passed 69.23 sec; Start 22: cc10; 138/413 Test #53: cc36 ............................. Passed 20.23 sec; Start 23: cc11; 139/413 Test #254: omp2-grad2 ....................... Passed 41.63 sec; Start 54: cc37; 140/413 Test #196: fd-freq-gradient ................. Passed 47.07 sec; Start 12: cbs-parser; 141/413 Test #127: dfccsd-grad1 ..................... Passed 37.30 sec; Start 279: opt12; 142/413 Test #2: adc2 ............................. Passed 37.54 sec; Start 111: dcft3; 143/413 Test #266: opt-lindep-change ................ Passed 28.24 sec; Star,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275:12563,Test,Test,12563,https://psicode.org,https://github.com/psi4/psi4/pull/1237#issuecomment-425038275,1,['Test'],['Test']
Testability,Test #85: cepa0-grad2 ...................... Passed 4.19 sec; Start 88: cepa3; 209/401 Test #9: castup2 .......................... Passed 8.52 sec; Start 89: cepa1; 210/401 Test #10: castup3 .......................... Passed 8.84 sec; Start 90: cepa-module; 211/401 Test #86: cepa1 ............................ Passed 9.10 sec; Start 93: cisd-h2o+-1; 212/401 Test #93: cisd-h2o+-1 ...................... Passed 2.99 sec; Start 94: cisd-h2o+-2; 213/401 Test #87: cepa2 ............................ Passed 10.57 sec; Start 95: cisd-h2o-clpse; 214/401 Test #95: cisd-h2o-clpse ................... Passed 1.79 sec; Start 96: cisd-opt-fd; 215/401 Test #94: cisd-h2o+-2 ...................... Passed 2.81 sec; Start 97: cisd-sp; 216/401 Test #88: cepa3 ............................ Passed 11.93 sec; Start 98: cisd-sp-2; 217/401 Test #98: cisd-sp-2 ........................ Passed 2.77 sec; Start 102: dcft-grad1; 218/401 Test #89: cepa1 ............................ Passed 13.19 sec; Start 104: dcft-grad3; 219/401 Test #97: cisd-sp .......................... Passed 5.81 sec; Start 105: dcft-grad4; 220/401 Test #1: adc1 ............................. Passed 23.47 sec; Start 107: dcft2; 221/401 Test #2: adc2 ............................. Passed 29.39 sec; Start 109: dcft4; 222/401 Test #107: dcft2 ............................ Passed 11.23 sec; Start 110: dcft5; 223/401 Test #104: dcft-grad3 ....................... Passed 15.91 sec; Start 111: dcft6; 224/401 Test #12: cbs-parser ....................... Passed 41.34 sec; Start 113: dcft8; 225/401 Test #105: dcft-grad4 ....................... Passed 24.23 sec; Start 114: dcft9; 226/401 Test #19: cbs-xtpl-wrapper ................. Passed 52.98 sec; Start 129: dfmp2-2; 227/401 Test #129: dfmp2-2 .......................... Passed 2.49 sec; Start 130: dfmp2-3; 228/401 Test #130: dfmp2-3 .......................... Passed 16.36 sec; Start 131: dfmp2-4; 229/401 Test #90: cepa-module ...................... Passed 64.78 sec; Start 134: dfmp2-grad2; 2,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637:20487,Test,Test,20487,https://psicode.org,https://github.com/psi4/psi4/pull/1069#issuecomment-402413637,1,['Test'],['Test']
Testability,Test #86: cepa0-grad2 ...................... Passed 4.15 sec; Start 132: dfmp2-4; 260/411 Test #179: fsapt2 ........................... Passed 4.61 sec; Start 22: cc11; 261/411 Test #9: castup2 .......................... Passed 5.91 sec; Start 199: fnocc1; 262/411 Test #341: soscf-ref ........................ Passed 6.75 sec; Start 4: casscf-semi; 263/411 Test #122: dfccd-grad1 ...................... Passed 3.54 sec; Start 94: cisd-h2o+-1; 264/411 Test #90: cepa1 ............................ Passed 5.24 sec; Start 93: cisd-h2o+-0; 265/411 Test #171: dft2 ............................. Passed 4.80 sec; Start 187: fci-h2o-fzcv; 266/411 Test #4: casscf-semi ...................... Passed 3.12 sec; Start 99: cisd-sp-2; 267/411 Test #132: dfmp2-4 .......................... Passed 4.86 sec; Start 266: opt1-fd; 268/411 Test #199: fnocc1 ........................... Passed 3.90 sec; Start 95: cisd-h2o+-2; 269/411 Test #94: cisd-h2o+-1 ...................... Passed 4.92 sec; Start 310: rasci-c2-active; 270/411 Test #22: cc11 ............................. Passed 7.49 sec; Start 124: dfccsdl1; 271/411 Test #93: cisd-h2o+-0 ...................... Passed 4.27 sec; Start 339: scf-property; 272/411 Test #187: fci-h2o-fzcv ..................... Passed 4.52 sec; Start 294: psimrcc-sp1; 273/411 Test #99: cisd-sp-2 ........................ Passed 4.63 sec; Start 329: scf-guess-read2; 274/411 Test #95: cisd-h2o+-2 ...................... Passed 4.38 sec; Start 376: pywrap-align; 275/411 Test #124: dfccsdl1 ......................... Passed 1.60 sec; Start 331: scf1; 276/411 Test #266: opt1-fd .......................... Passed 5.31 sec; Start 83: cdomp2-1; 277/411 Test #310: rasci-c2-active .................. Passed 3.26 sec; Start 385: psi4numpy-fci; 278/411 Test #83: cdomp2-1 ......................... Passed 2.14 sec; Start 295: psithon1; 279/411 Test #294: psimrcc-sp1 ...................... Passed 3.58 sec; Start 370: scf-coverage; 280/411 Test #339: scf-property ..................... Pas,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:25098,Test,Test,25098,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Test #87: cepa1 ............................ Passed 15.27 sec; Start 89: cepa3; 94/411 Test #80: cc8c ............................. Passed 92.20 sec; Start 90: cepa1; 95/411 Test #81: cc9 .............................. Passed 91.83 sec; Start 91: cepa-module; 96/411 Test #88: cepa2 ............................ Passed 21.82 sec; Start 92: ci-multi; 97/411 Test #84: cdomp2-2 ......................... Passed 84.98 sec; Start 93: cisd-h2o+-0; 98/411 Test #82: cc9a ............................. Passed 96.99 sec; Start 94: cisd-h2o+-1; 99/411 Test #89: cepa3 ............................ Passed 23.34 sec; Start 95: cisd-h2o+-2; 100/411 Test #93: cisd-h2o+-0 ...................... Passed 5.06 sec; Start 96: cisd-h2o-clpse; 101/411 Test #90: cepa1 ............................ Passed 19.21 sec; Start 97: cisd-opt-fd; 102/411 Test #96: cisd-h2o-clpse ................... Passed 1.95 sec; Start 98: cisd-sp; 103/411 Test #94: cisd-h2o+-1 ...................... Passed 4.64 sec; Start 99: cisd-sp-2; 104/411 Test #95: cisd-h2o+-2 ...................... Passed 4.42 sec; Start 100: ci-property; 105/411 Test #99: cisd-sp-2 ........................ Passed 8.45 sec; Start 101: cubeprop; 106/411 Test #98: cisd-sp .......................... Passed 13.42 sec; Start 102: decontract; 107/411 Test #102: decontract ....................... Passed 1.79 sec; Start 103: dcft-grad1; 108/411 Test #101: cubeprop ......................... Passed 10.89 sec; Start 104: dcft-grad2; 109/411 Test #92: ci-multi ......................... Passed 44.22 sec; Start 105: dcft-grad3; 110/411 Test #105: dcft-grad3 ....................... Passed 24.77 sec; Start 106: dcft-grad4; 111/411 Test #100: ci-property ...................... Passed 68.01 sec; Start 107: dcft1; 112/411 Test #106: dcft-grad4 ....................... Passed 40.83 sec; Start 108: dcft2; 113/411 Test #91: cepa-module ...................... Passed 131.84 sec; Start 109: dcft3; 114/411 Test #108: dcft2 ............................ Passed 20.56 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828:9450,Test,Test,9450,https://psicode.org,https://github.com/psi4/psi4/pull/1067#issuecomment-409148828,1,['Test'],['Test']
Testability,Test #88: cepa2 ............................ Passed 2.14 sec; Start 89: cepa3; 101/411 Test #89: cepa3 ............................ Passed 5.13 sec; Start 90: cepa1; 102/411 Test #90: cepa1 ............................ Passed 3.27 sec; Start 91: cepa-module; 103/411 Test #91: cepa-module ...................... Passed 13.93 sec; Start 92: ci-multi; 104/411 Test #92: ci-multi ......................... Passed 11.39 sec; Start 93: cisd-h2o+-0; 105/411 Test #93: cisd-h2o+-0 ...................... Passed 3.75 sec; Start 94: cisd-h2o+-1; 106/411 Test #94: cisd-h2o+-1 ...................... Passed 3.80 sec; Start 95: cisd-h2o+-2; 107/411 Test #95: cisd-h2o+-2 ...................... Passed 3.93 sec; Start 96: cisd-h2o-clpse; 108/411 Test #96: cisd-h2o-clpse ................... Passed 1.28 sec; Start 97: cisd-opt-fd; 109/411 Test #97: cisd-opt-fd ...................... Passed 93.35 sec; Start 98: cisd-sp; 110/411 Test #98: cisd-sp .......................... Passed 7.29 sec; Start 99: cisd-sp-2; 111/411 Test #99: cisd-sp-2 ........................ Passed 4.05 sec; Start 100: ci-property; 112/411 Test #100: ci-property ...................... Passed 41.71 sec; Start 101: cubeprop; 113/411 Test #101: cubeprop ......................... Passed 8.48 sec; Start 102: decontract; 114/411 Test #102: decontract ....................... Passed 1.32 sec; Start 103: dcft-grad1; 115/411 Test #103: dcft-grad1 ....................... Passed 73.33 sec; Start 104: dcft-grad2; 116/411 Test #104: dcft-grad2 ....................... Passed 10.18 sec; Start 105: dcft-grad3; 117/411 Test #105: dcft-grad3 ....................... Passed 7.23 sec; Start 106: dcft-grad4; 118/411 Test #106: dcft-grad4 ....................... Passed 25.47 sec; Start 107: dcft1; 119/411 Test #107: dcft1 ............................ Passed 5.06 sec; Start 108: dcft2; 120/411 Test #108: dcft2 ............................ Passed 1.64 sec; Start 109: dcft3; 121/411 Test #109: dcft3 ............................ Passed 2.46 sec; St,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370:9839,Test,Test,9839,https://psicode.org,https://github.com/psi4/psi4/pull/1073#issuecomment-406985370,1,['Test'],['Test']
Testability,Test #90: cepa1 ............................ Passed 9.26 sec; Start 370: scf-coverage; 271/411 Test #385: psi4numpy-fci .................... Passed 5.24 sec; Start 344: dfep2-1; 272/411 Test #235: mp2-property ..................... Passed 3.07 sec; Start 269: opt3; 273/411 Test #351: dft-reference .................... Passed 3.10 sec; Start 48: cc32; 274/411 Test #152: dfomp2p5-grad1 ................... Passed 14.38 sec; Start 143: dfomp2-grad1; 275/411 Test #344: dfep2-1 .......................... Passed 3.33 sec; Start 154: dfrasscf-sp; 276/411 Test #269: opt3 ............................. Passed 3.65 sec; Start 109: dcft3; 277/411 Test #370: scf-coverage ..................... Passed 5.60 sec; Start 201: fnocc3; 278/411 Test #53: cc37 ............................. Passed 11.48 sec; Start 213: mints2; 279/411 Test #146: dfomp3-1 ......................... Passed 11.05 sec; Start 128: dfccsdat1; 280/411 Test #148: dfomp3-grad1 ..................... Passed 15.33 sec; Start 265: opt1; 281/411 Test #154: dfrasscf-sp ...................... Passed 5.23 sec; Start 391: python-mints2; 282/411 Test #213: mints2 ........................... Passed 2.62 sec; Start 226: mp2-1; 283/411 Test #48: cc32 ............................. Passed 9.31 sec; Start 284: props1; 284/411 Test #143: dfomp2-grad1 ..................... Passed 7.13 sec; Start 384: psi4numpy-rhf-hessian; 285/411 Test #201: fnocc3 ........................... Passed 5.73 sec; Start 150: dfomp2p5-1; 286/411 Test #391: python-mints2 .................... Passed 2.40 sec; Start 355: tu3-h2o-opt; 287/411 Test #265: opt1 ............................. Passed 4.62 sec; Start 388: python-curve; 288/411 Test #384: psi4numpy-rhf-hessian ............ Passed 3.67 sec; Start 241: ocepa-grad1; 289/411 Test #109: dcft3 ............................ Passed 11.45 sec; Start 52: cc36; 290/411 Test #284: props1 ........................... Passed 5.60 sec; Start 225: mom; 291/411 Test #355: tu3-h2o-opt ...................... Passed 4.89 sec,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972:26249,Test,Test,26249,https://psicode.org,https://github.com/psi4/psi4/pull/1089#issuecomment-408103972,1,['Test'],['Test']
Testability,Test #90: cepa3 ............................ Passed 15.90 sec; Start 103: decontract; 100/412 Test #103: decontract ....................... Passed 1.91 sec; Start 104: dcft-grad1; 101/412 Test #100: cisd-sp-2 ........................ Passed 6.36 sec; Start 105: dcft-grad2; 102/412 Test #91: cepa1 ............................ Passed 17.25 sec; Start 106: dcft-grad3; 103/412 Test #99: cisd-sp .......................... Passed 12.02 sec; Start 107: dcft-grad4; 104/412 Test #83: cc9a ............................. Passed 77.94 sec; Start 108: dcft1; 105/412 Test #102: cubeprop ......................... Passed 11.79 sec; Start 109: dcft2; 106/412 Test #71: cc52 ............................. Passed 177.16 sec; Start 110: dcft3; 107/412 Test #106: dcft-grad3 ....................... Passed 17.10 sec; Start 111: dcft4; 108/412 Test #109: dcft2 ............................ Passed 10.64 sec; Start 112: dcft5; 109/412 Test #93: ci-multi ......................... Passed 38.21 sec; Start 113: dcft6; 110/412 Test #110: dcft3 ............................ Passed 21.70 sec; Start 115: dcft8; 111/412 Test #107: dcft-grad4 ....................... Passed 38.78 sec; Start 116: dcft9; 112/412 Test #101: ci-property ...................... Passed 58.41 sec; Start 117: ao-dfcasscf-sp; 113/412 Test #117: ao-dfcasscf-sp ................... Passed 6.32 sec; Start 118: dfcasscf-sa-sp; 114/412 Test #118: dfcasscf-sa-sp ................... Passed 6.30 sec; Start 119: dfcasscf-fzc-sp; 115/412 Test #108: dcft1 ............................ Passed 58.96 sec; Start 120: dfcasscf-sp; 116/412 Test #120: dfcasscf-sp ...................... Passed 4.64 sec; Start 121: dfccd1; 117/412 Test #119: dfcasscf-fzc-sp .................. Passed 4.83 sec; Start 122: dfccdl1; 118/412 Test #46: cc3 .............................. Passed 643.72 sec; Start 123: dfccd-grad1; 119/412 Test #18: cbs-xtpl-func .................... Passed 1226.29 sec; Start 124: dfccsd1; 120/412 Test #122: dfccdl1 .......................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031:10158,Test,Test,10158,https://psicode.org,https://github.com/psi4/psi4/pull/1219#issuecomment-419060031,1,['Test'],['Test']
Testability,Test #92: cepa1 ............................ Passed 38.25 sec; Start 109: dcft-grad4; 220/415 Test #83: cc9 .............................. Passed 109.04 sec; Start 111: dcft2; 221/415 Test #108: dcft-grad3 ....................... Passed 26.75 sec; Start 113: dcft4; 222/415 Test #84: cc9a ............................. Passed 107.29 sec; Start 114: dcft5; 223/415 Test #109: dcft-grad4 ....................... Passed 36.11 sec; Start 115: dcft6; 224/415 Test #111: dcft2 ............................ Passed 28.90 sec; Start 117: dcft8; 225/415 Test #43: cc26 ............................. Passed 867.28 sec; Start 118: dcft9; 226/415 Test #41: cc24 ............................. Passed 919.62 sec; Start 124: dfccdl1; 227/415 Test #124: dfccdl1 .......................... Passed 4.85 sec; Start 125: dfccd-grad1; 228/415 Test #125: dfccd-grad1 ...................... Passed 29.83 sec; Start 130: dfccsdt1; 229/415 Test #130: dfccsdt1 ......................... Passed 14.17 sec; Start 131: dfccsdat1; 230/415 Test #99: cisd-opt-fd ...................... Passed 118.26 sec; Start 133: dfmp2-2; 231/415 Test #133: dfmp2-2 .......................... Passed 4.49 sec; Start 134: dfmp2-3; 232/415 Test #44: cc27 ............................. Passed 850.53 sec; Start 135: dfmp2-4; 233/415 Test #134: dfmp2-3 .......................... Passed 17.06 sec; Start 138: dfmp2-grad2; 234/415 Test #135: dfmp2-4 .......................... Passed 16.06 sec; Start 139: dfmp2-grad3; 235/415 Test #131: dfccsdat1 ........................ Passed 43.70 sec; Start 140: dfmp2-grad4; 236/415 Test #139: dfmp2-grad3 ...................... Passed 14.29 sec; Start 141: dfmp2-grad5; 237/415 Test #138: dfmp2-grad2 ...................... Passed 22.26 sec; Start 143: dfomp2-2; 238/415 Test #140: dfmp2-grad4 ...................... Passed 19.10 sec; Start 144: dfomp2-3; 239/415 Test #40: cc23 ............................. Passed 1047.57 sec; Start 145: dfomp2-4; 240/415 Test #38: cc21 ............................. Passed 11,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424:21584,Test,Test,21584,https://psicode.org,https://github.com/psi4/psi4/pull/1384#issuecomment-443227424,1,['Test'],['Test']
Testability,Test #93: cisd-h2o+-0 ...................... Passed 6.79 sec; Start 98: cisd-sp; 95/411 Test #96: cisd-h2o-clpse ................... Passed 1.52 sec; Start 99: cisd-sp-2; 96/411 Test #94: cisd-h2o+-1 ...................... Passed 5.32 sec; Start 100: ci-property; 97/411 Test #95: cisd-h2o+-2 ...................... Passed 4.71 sec; Start 101: cubeprop; 98/411 Test #75: cc6 .............................. Passed 79.07 sec; Start 102: decontract; 99/411 Test #102: decontract ....................... Passed 1.29 sec; Start 103: dcft-grad1; 100/411 Test #99: cisd-sp-2 ........................ Passed 5.99 sec; Start 104: dcft-grad2; 101/411 Test #98: cisd-sp .......................... Passed 9.90 sec; Start 105: dcft-grad3; 102/411 Test #70: cc52 ............................. Passed 106.20 sec; Start 106: dcft-grad4; 103/411 Test #101: cubeprop ......................... Passed 12.03 sec; Start 107: dcft1; 104/411 Test #92: ci-multi ......................... Passed 22.66 sec; Start 108: dcft2; 105/411 Test #108: dcft2 ............................ Passed 3.64 sec; Start 109: dcft3; 106/411 Test #105: dcft-grad3 ....................... Passed 13.24 sec; Start 110: dcft4; 107/411 Test #109: dcft3 ............................ Passed 12.31 sec; Start 111: dcft5; 108/411 Test #107: dcft1 ............................ Passed 24.76 sec; Start 112: dcft6; 109/411 Test #91: cepa-module ...................... Passed 55.38 sec; Start 114: dcft8; 110/411 Test #106: dcft-grad4 ....................... Passed 34.43 sec; Start 115: dcft9; 111/411 Test #104: dcft-grad2 ....................... Passed 44.51 sec; Start 116: ao-dfcasscf-sp; 112/411 Test #116: ao-dfcasscf-sp ................... Passed 2.53 sec; Start 117: dfcasscf-sa-sp; 113/411 Test #100: ci-property ...................... Passed 54.60 sec; Start 118: dfcasscf-fzc-sp; 114/411 Test #117: dfcasscf-sa-sp ................... Passed 4.84 sec; Start 119: dfcasscf-sp; 115/411 Test #118: dfcasscf-fzc-sp .................. Passed 3.68 sec;,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967:9679,Test,Test,9679,https://psicode.org,https://github.com/psi4/psi4/pull/1092#issuecomment-409185967,1,['Test'],['Test']
Testability,Test #96: cisd-h2o+-2 ...................... Passed 5.46 sec; Start 121: dfccd1; 302/412 Test #188: fci-h2o-fzcv ..................... Passed 5.45 sec; Start 232: mp2p5-grad1; 303/412 Test #285: props1 ........................... Passed 3.70 sec; Start 332: scf1; 304/412 Test #117: ao-dfcasscf-sp ................... Passed 2.87 sec; Start 235: mp3-grad2; 305/412 Test #172: dft2 ............................. Passed 5.28 sec; Start 204: frac; 306/412 Test #247: omp2-1 ........................... Passed 3.62 sec; Start 229: mp2-grad1; 307/412 Test #234: mp3-grad1 ........................ Passed 3.09 sec; Start 120: dfcasscf-sp; 308/412 Test #237: mpn-bh ........................... Passed 4.49 sec; Start 266: opt1; 309/412 Test #121: dfccd1 ........................... Passed 2.00 sec; Start 230: mp2-grad2; 310/412 Test #232: mp2p5-grad1 ...................... Passed 1.89 sec; Start 356: tu3-h2o-opt; 311/412 Test #377: pywrap-align ..................... Passed 6.42 sec; Start 226: mom; 312/412 Test #340: scf-property ..................... Passed 4.87 sec; Start 272: opt5; 313/412 Test #235: mp3-grad2 ........................ Passed 2.29 sec; Start 122: dfccdl1; 314/412 Test #94: cisd-h2o+-0 ...................... Passed 4.94 sec; Start 295: psimrcc-sp1; 315/412 Test #180: fsapt2 ........................... Passed 5.12 sec; Start 192: fcidump; 316/412 Test #229: mp2-grad1 ........................ Passed 3.11 sec; Start 400: json-schema-1-energy; 317/412 Test #95: cisd-h2o+-1 ...................... Passed 5.23 sec; Start 378: pywrap-align-chiral; 318/412 Test #204: frac ............................. Passed 3.89 sec; Start 344: stability1; 319/412 Test #332: scf1 ............................. Passed 5.47 sec; Start 345: dfep2-1; 320/412 Test #378: pywrap-align-chiral .............. Passed 3.24 sec; Start 389: python-curve; 321/412 Test #120: dfcasscf-sp ...................... Passed 6.79 sec; Start 236: mp2-property; 322/412 Test #356: tu3-h2o-opt ...................... Pass,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485:29253,Test,Test,29253,https://psicode.org,https://github.com/psi4/psi4/pull/1224#issuecomment-419158485,1,['Test'],['Test']
Testability,Test #96: cisd-h2o-clpse ................... Passed 4.28 sec; Start 101: cubeprop; 98/411 Test #70: cc52 ............................. Passed 202.48 sec; Start 102: decontract; 99/411 Test #102: decontract ....................... Passed 1.53 sec; Start 103: dcft-grad1; 100/411 Test #99: cisd-sp-2 ........................ Passed 6.10 sec; Start 104: dcft-grad2; 101/411 Test #81: cc9 .............................. Passed 138.32 sec; Start 105: dcft-grad3; 102/411 Test #98: cisd-sp .......................... Passed 11.88 sec; Start 106: dcft-grad4; 103/411 Test #101: cubeprop ......................... Passed 11.59 sec; Start 107: dcft1; 104/411 Test #90: cepa1 ............................ Passed 41.40 sec; Start 108: dcft2; 105/411 Test #105: dcft-grad3 ....................... Passed 23.11 sec; Start 109: dcft3; 106/411 Test #92: ci-multi ......................... Passed 47.36 sec; Start 110: dcft4; 107/411 Test #82: cc9a ............................. Passed 123.74 sec; Start 111: dcft5; 108/411 Test #108: dcft2 ............................ Passed 17.41 sec; Start 112: dcft6; 109/411 Test #106: dcft-grad4 ....................... Passed 41.40 sec; Start 114: dcft8; 110/411 Test #100: ci-property ...................... Passed 60.29 sec; Start 115: dcft9; 111/411 Test #109: dcft3 ............................ Passed 36.73 sec; Start 116: ao-dfcasscf-sp; 112/411 Test #116: ao-dfcasscf-sp ................... Passed 6.27 sec; Start 117: dfcasscf-sa-sp; 113/411 Test #117: dfcasscf-sa-sp ................... Passed 6.21 sec; Start 118: dfcasscf-fzc-sp; 114/411 Test #118: dfcasscf-fzc-sp .................. Passed 6.87 sec; Start 119: dfcasscf-sp; 115/411 Test #119: dfcasscf-sp ...................... Passed 6.25 sec; Start 120: dfccd1; 116/411 Test #120: dfccd1 ........................... Passed 3.79 sec; Start 121: dfccdl1; 117/411 Test #121: dfccdl1 .......................... Passed 3.42 sec; Start 122: dfccd-grad1; 118/411 Test #107: dcft1 ............................ Passed 92,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986:9987,Test,Test,9987,https://psicode.org,https://github.com/psi4/psi4/pull/1090#issuecomment-408925986,1,['Test'],['Test']
Testability,Test #97: cisd-opt-fd ...................... Passed 124.14 sec; Start 316: sapt2; 30/411 Test #41: cc26 ............................. Passed 140.34 sec; Start 318: sapt4; 31/411 Test #35: cc2 .............................. Passed 155.79 sec; Start 325: scf-bz2; 32/411 Test #42: cc27 ............................. Passed 87.39 sec; Start 13: cbs-xtpl-alpha; 33/411 Test #13: cbs-xtpl-alpha ................... Passed 90.88 sec; Start 168: dft1; 34/411 Test #325: scf-bz2 .......................... Passed 124.52 sec; Start 161: dft-grad-lr2; 35/411 Test #25: cc13a ............................ Passed 245.69 sec; Start 44: cc29; 36/411 Test #113: dcft7 ............................ Passed 242.17 sec; Start 70: cc52; 37/411 Test #205: frac-traverse .................... Passed 220.26 sec; Start 371: dft-custom-dhdf; 38/411 Test #168: dft1 ............................. Passed 94.58 sec; Start 281: opt-irc-2; 39/411 Test #161: dft-grad-lr2 ..................... Passed 95.52 sec; Start 240: ocepa-freq1; 40/411 Test #44: cc29 ............................. Passed 63.49 sec; Start 317: sapt3; 41/411 Test #70: cc52 ............................. Passed 67.45 sec; Start 47: cc31; 42/411 Test #371: dft-custom-dhdf .................. Passed 87.91 sec; Start 279: opt14; 43/411 Test #240: ocepa-freq1 ...................... Passed 60.77 sec; Start 76: cc7; 44/411 Test #47: cc31 ............................. Passed 43.50 sec; Start 145: dfomp2-grad3; 45/411 Test #281: opt-irc-2 ........................ Passed 97.20 sec; Start 319: sapt5; 46/411 Test #317: sapt3 ............................ Passed 76.93 sec; Start 69: cc51; 47/411 Test #316: sapt2 ............................ Passed 359.14 sec; Start 167: dft-b3lyp; 48/411 Test #279: opt14 ............................ Passed 77.60 sec; Start 292: psimrcc-fd-freq2; 49/411 Test #319: sapt5 ............................ Passed 74.24 sec; Start 29: cc14; 50/411 Test #69: cc51 ............................. Passed 68.34 sec; Start 75: cc6; 51/411 Tes,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195:3932,Test,Test,3932,https://psicode.org,https://github.com/psi4/psi4/pull/1078#issuecomment-408900195,1,['Test'],['Test']
Testability,Test 243 Failed,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2828:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/issues/2828,1,['Test'],['Test']
Testability,Test Directory Cleanup,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2655:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/2655,1,['Test'],['Test']
Testability,Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Pe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131152863:2952,Test,Test,2952,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131152863,1,['Test'],['Test']
Testability,Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-qsmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP C flag = [-mp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [ ]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-fopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [/openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-Qopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-openmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-xopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [+Oopenmp]; -- Performing Test OpenMP_FLAG_DETECTED; -- Performing Test OpenMP_FLAG_DETECTED - Failed; -- Try OpenMP CXX flag = [-qsmp]; -- Pe,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/164#issuecomment-131152863:2911,Test,Test,2911,https://psicode.org,https://github.com/psi4/psi4/pull/164#issuecomment-131152863,1,['Test'],['Test']
Testability,"Test ```tests/cc36``` fails when run with PyTest:. ```; =========================================================================================== ERRORS ===========================================================================================; _________________________________________________________________________ ERROR collecting tests/cc36/test_input.py __________________________________________________________________________; test_input.py:1: in <module>; from addons import *; ../pytests/addons.py:9: in <module>; from qcengine.testing import _programs as _programs_qcng; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:173: in <module>; ""psi4"": is_program_new_enough(""psi4"", ""1.2""),; /usr/local/lib/python3.9/site-packages/qcengine/testing.py:62: in is_program_new_enough; candidate_version = qcng.get_program(program).get_version(); /usr/local/lib/python3.9/site-packages/qcengine/programs/psi4.py:89: in get_version; with popen([which_prog, ""--version""]) as exc:; /usr/local/lib/python3.9/contextlib.py:119: in __enter__; return next(self.gen); /usr/local/lib/python3.9/site-packages/qcengine/util.py:304: in popen; ret = {""proc"": subprocess.Popen(args, **popen_kwargs)}; /usr/local/lib/python3.9/subprocess.py:951: in __init__; self._execute_child(args, executable, preexec_fn, close_fds,; /usr/local/lib/python3.9/subprocess.py:1744: in _execute_child; executable = os.fsencode(executable); /usr/local/lib/python3.9/os.py:810: in fsencode; filename = fspath(filename) # Does type-checking of `filename`.; E TypeError: expected str, bytes or os.PathLike object, not NoneType; ================================================================================== short test summary info ===================================================================================; ERROR test_input.py - TypeError: expected str, bytes or os.PathLike object, not NoneType; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collectio",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2802:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/issues/2802,6,"['Test', 'test']","['Test', 'testing', 'tests']"
Testability,"Test case 32 from the FH51 subset of [GMTKN55](http://www.thch.uni-bonn.de/tc.old/downloads/GMTKN/GMTKN55/FH51ref.html) computes the isomerization energy between H2C-C5-CH2 and heptatriyne. So as to not to bury the lede: very strange energies result when running H2C-C5-CH2 with wB97X-3c, which I suspect are tied to this message:. ```; !!! WARNING: ECP capability is in beta. Please check occupations closely. !!!; ``` . The energy of H2C-C5-CH2 is computed to be -43.4074821405164926 Eh, and the energy of heptatriyne is computed to be -42.0459519798808898, leading to a predicted ∆E of -854 kcal/mol. The ""correct"" high-level value is -14.30 kcal/mol, and the authors of the wB97X-3c paper report an energy of -13.17 kcal/mol for this system. Similar results are seen when using B3LYP-D4/vDZP or r2SCAN-D4/vDZP, suggesting that vDZP is the common factor here. The orbital occupancies for H2C-C5-CH2 do seem a bit odd to me? I'm not used to seeing such low-energy virtual orbitals... ```; Orbital Energies [Eh]; ---------------------. Doubly Occupied: . 1A -1.094498 2A -1.062498 3A -1.041834 ; 4A -1.016695 5A -0.963137 6A -0.898331 ; 7A -0.834072 8A -0.703197 9A -0.700832 ; 10A -0.661618 11A -0.660116 12A -0.605235 ; 13A -0.596357 14A -0.526703 15A -0.507419 ; 16A -0.419207 . Virtual: . 17A -0.218606 18A -0.112811 19A -0.091525 ; 20A 0.037195 21A 0.048637 22A 0.051338 ; 23A 0.054059 24A 0.105612 25A 0.106004 ; 26A 0.174431 27A 0.193680 28A 0.196900 ; ```. Not sure what ECP factors could be driving these issues, or how to fix this, but thought I should raise an issue. Here's all the input and output files:. Input file for H2C-C5-CH2:; ```; molecule {; C -2.556271805455 -0.181690364655 -0.026620796492 ; C -1.282011805455 -0.085620364655 -0.016410796492 ; C -0.000441805455 0.006819635345 -0.003870796492 ; C 1.281348194545 0.095909635345 0.010599203508 ; C 2.556298194545 0.180969635345 0.026599203508 ; C 3.872538194545 0.268679635345 0.044049203508 ; H 4.487898194545 -0.251640364655 -",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3221:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/issues/3221,1,['Test'],['Test']
Testability,"Test case addition looks fine. You can just add new cases to the end of the big list– order doesn't matter. May want to add the SCF in as a compare_values check so that if case should break, it's easier to tell at what stage.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-261061814:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-261061814,1,['Test'],['Test']
Testability,"Test case:; ```; molecule {; 0 3; O; }. set reference rohf; set basis pcseg-1; set guess sad; energy('scf'); ```. Output before changes:; ```. Total Energy Delta E RMS |[F,P]|. @DF-ROHF iter 0: 28.43955367824759 2.84396e+01 0.00000e+00 ; @DF-ROHF iter 1: -74.75118310291205 -1.03191e+02 1.84153e-02 DIIS; @DF-ROHF iter 2: -74.75844495846947 -7.26186e-03 6.55338e-03 DIIS; @DF-ROHF iter 3: -74.75962778267566 -1.18282e-03 8.89743e-04 DIIS; @DF-ROHF iter 4: -74.75966293836538 -3.51557e-05 7.52761e-05 DIIS; @DF-ROHF iter 5: -74.75966326690698 -3.28542e-07 1.44805e-05 DIIS; @DF-ROHF iter 6: -74.75966327706121 -1.01542e-08 4.33092e-07 DIIS; Energy and wave function converged.; ```. Output after changes; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. @DF-ROHF iter SAD: -73.85293189670189 -7.38529e+01 0.00000e+00 ; @DF-ROHF iter 1: -74.75118310291205 -8.98251e-01 1.84153e-02 DIIS; @DF-ROHF iter 2: -74.75844495846947 -7.26186e-03 6.55338e-03 DIIS; @DF-ROHF iter 3: -74.75962778267566 -1.18282e-03 8.89743e-04 DIIS; @DF-ROHF iter 4: -74.75966293836538 -3.51557e-05 7.52761e-05 DIIS; @DF-ROHF iter 5: -74.75966326690698 -3.28542e-07 1.44805e-05 DIIS; @DF-ROHF iter 6: -74.75966327706121 -1.01542e-08 4.33092e-07 DIIS; Energy and wave function converged.; ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1493#issuecomment-457500670:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/1493#issuecomment-457500670,1,['Test'],['Test']
Testability,"Test fails: TypeError: expected str, bytes or os.PathLike object, not NoneType",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2802:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/issues/2802,1,['Test'],['Test']
Testability,Test failure healed after fixing an unrelated bug.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2376#issuecomment-988106570:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/2376#issuecomment-988106570,1,['Test'],['Test']
Testability,"Test failures are everywhere, even on master. I think the MKL constraints of some of the psi packages and adcc are interacting badly.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1799#issuecomment-597927326:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/1799#issuecomment-597927326,1,['Test'],['Test']
Testability,Test failures are expected until #2750 is merged in.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2748#issuecomment-1279252713:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/2748#issuecomment-1279252713,1,['Test'],['Test']
Testability,"Test failures here are some more references to n-pole components that need to be removed. I'll fix it, but it's slow-going as I need to sync up my local repo to L2-oei.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2479#issuecomment-1068050818:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/2479#issuecomment-1068050818,1,['Test'],['Test']
Testability,Test of @psi4/p4pub-rw. Jerome says this is ready to merge when travis is complete.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/248#issuecomment-184408121:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/248#issuecomment-184408121,1,['Test'],['Test']
Testability,"Test subjects:; * `thread.py` from above (uses psi4 and np internally); * PsiAPI – has to import both; * Psithon – comment out both good and bad blocks above; * `tu1.py` below (uses psi4 internally so imports it); * Psi4 1.1 (add49) and current devel head Psi4. Findings:; * The SCF (tu1.py) scales as expected; * Psithon doesn't care if Numpy imported in bin/psi4; * Psithon takes orders from `psi4 -nN`; * Psithon & PsiAPI take orders preferentially from `psi4.set_num_threads(N)`; * Psithon & PsiAPI ignore :envvar:`MKL_NUM_THREADS`; * The DGEMM scaling thest (thread.py) behaves as previously described; * Psithon and PsiAPI thread if through the file itself or through bin/psi4 (if relevant) NumPy is imported before Psi4; * Psithon and PsiAPI _don't_ thread otherwise; * No difference btwn 1.1 and head (bad news for @schiebermc whose tests indicate something happened around June 14-15); * This contradicts @rmcgibbo's findings above, so maybe my MKLs are fighting; * Seem to be ok on most use cases, but not if doing detailed thread setting from input. ```; import psi4; #psi4.set_num_threads(6). def test_psi4_basic():; """"""tu1-h2o-energy""""""; #! Sample HF/cc-pVDZ H2O computation. h2o = psi4.geometry(""""""; O; H 1 0.96; H 1 0.96 2 104.5; """"""). psi4.set_options({'basis': ""aug-cc-pV5Z""}); psi4.energy('scf'). if __name__ == '__main__':; test_psi4_basic(); ```",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/755#issuecomment-312397812:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/issues/755#issuecomment-312397812,2,"['Test', 'test']","['Test', 'tests']"
Testability,Test unprivileged acct,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2148:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/pull/2148,1,['Test'],['Test']
Testability,Test: counterpoise corrected H2+,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2371:0,Test,Test,0,https://psicode.org,https://github.com/psi4/psi4/issues/2371,1,['Test'],['Test']
Testability,Testing confirms this fixes all the p4c4 problems I needed fixed. Check my item off the list.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1122#issuecomment-410825129:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/pull/1122#issuecomment-410825129,1,['Test'],['Testing']
Testability,Testing different methods to see which properties are available.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/40#issuecomment-37977939:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/issues/40#issuecomment-37977939,1,['Test'],['Testing']
Testability,"Testing if I can still send messages. This PR has shiny new features, by the way.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/627#issuecomment-282393960:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/pull/627#issuecomment-282393960,1,['Test'],['Testing']
Testability,"Testing indicates 1483 was not the fix. Whatever the fix was, it was in-between dev359 84ee495 and dev377 6b93fa5. At least it's fixed?",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1474#issuecomment-457968482:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/issues/1474#issuecomment-457968482,1,['Test'],['Testing']
Testability,Testing out GH reviews over LGTM's.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/520#issuecomment-265476336:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/pull/520#issuecomment-265476336,1,['Test'],['Testing']
Testability,"Testing some calculations, I ran into very odd behavior in Psi4 1.3.2. The input; ```; molecule {; 0 2; Y; }. set basis seg-cc-pv5z-pp; set scf_type direct; set df_scf_guess false; set reference uhf; energy('scf'); ```; leads to the output; ```; ==> Iterations <==. Total Energy Delta E RMS |[F,P]|. Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 2, 0, 0, 0, 0, 1, 1, 1 ]; SOCC [ 0, 0, 0, 0, 0, 1, 0, 0 ]. @UHF iter 1: -33.78761858648352 -3.37876e+01 4.53671e-02 DIIS; Occupation by irrep:; Ag B1g B2g B3g Au B1u B2u B3u ; DOCC [ 1, 0, 0, 0, 0, 1, 1, 1 ]; SOCC [ 1, 1, 0, 1, 0, 0, 0, 0 ]. @UHF iter 2: -36.39804695906182 -2.61043e+00 2.16710e-02 DIIS; ```. For some reason, the occupation update changes the spin state from a doublet (one unpaired electron) to hextet (3 unpaired electrons). Basis set is attached. [seg-cc-pv5z-pp.gbs.txt](https://github.com/psi4/psi4/files/8247541/seg-cc-pv5z-pp.gbs.txt)",MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2476:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/issues/2476,1,['Test'],['Testing']
Testability,"Testing the gradients of dlDF/cc-pVDZ, I see similar differences between analytic and numerical gradients with modern Psi4 (1.2a1.dev829):. - Density fitting error <= 10^{-6}; - Differences b/t analytic & numerical as large as ~10^{-4}; - Nearly no difference between analytic gradients computed w/ standard and dense grids; numerical gradients differ by nearly 10^{-4} between dense and standard grids. For anyone interested, I've uploaded a file containing the raw gradients [here](https://github.com/psi4/psi4/files/1919924/dlDF_summary.txt) for perusal. These observations would seemingly point towards libXC kernel instabilities for meta-GGAs, instead of a more targeted problem with our M05-2X gradients in particular, exactly in line with @dgasmith's prediction.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/962#issuecomment-381998886:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/issues/962#issuecomment-381998886,1,['Test'],['Testing']
Testability,Testing with multiple invocations,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/192:0,Test,Testing,0,https://psicode.org,https://github.com/psi4/psi4/pull/192,1,['Test'],['Testing']
Testability,Tests are in the making ☕ ; I also need to finalize the basis set file.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2025#issuecomment-719290805:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/pull/2025#issuecomment-719290805,1,['Test'],['Tests']
Testability,"Tests are now passing, so please review.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2479#issuecomment-1068222616:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/pull/2479#issuecomment-1068222616,1,['Test'],['Tests']
Testability,"Tests are passing, excellent!. Please update `output.ref` for `tdscf-7` and any of the other `tdscf` tests, so we can see how this PR changes the output printing.",MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2605#issuecomment-1154396287:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/pull/2605#issuecomment-1154396287,2,"['Test', 'test']","['Tests', 'tests']"
Testability,Tests confirm that #953 fixes the issue. Many thanks to @loriab.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/1106#issuecomment-410230564:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/issues/1106#issuecomment-410230564,1,['Test'],['Tests']
Testability,Tests expect the 'python' executable despite cmake having correct python executable name,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2688:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/issues/2688,1,['Test'],['Tests']
Testability,Tests fail because of an unrelated error (https://github.com/psi4/psi4/issues/1943).,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/1942#issuecomment-654045869:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/pull/1942#issuecomment-654045869,1,['Test'],['Tests']
Testability,Tests fail on Fedora rawhide,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/13:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/issues/13,1,['Test'],['Tests']
Testability,Tests fail when project is built from from the tarball,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/2687:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/issues/2687,1,['Test'],['Tests']
Testability,Tests failing,MatchSource.ISSUE,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/issues/3028:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/issues/3028,1,['Test'],['Tests']
Testability,Tests failing because a typing Any import missing. I was going to fix when other changes accumulate.,MatchSource.ISSUE_COMMENT,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/pull/2731#issuecomment-1271737513:0,Test,Tests,0,https://psicode.org,https://github.com/psi4/psi4/pull/2731#issuecomment-1271737513,1,['Test'],['Tests']
