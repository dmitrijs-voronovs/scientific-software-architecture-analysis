quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,"ith one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Parameters:; model - . getName; public String getName(); Get a user-readable name for this model, or null if no name is specified. Returns:. getScale; public Double getScale(); Get scale factors to be applied to preprocess input. Returns:; the scale value if specified, or null if default scaling should be used; See Also:. getMean(). getModelType; public OpenCVDnn.ModelType getModelType(); Get the type of the model that would be built with buildModel(). Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3757,extend,extends,3757,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['extend'],['extends']
Modifiability,"ithout firing a remove event. removeOrClipObjectsOutsideImage() - Static method in class qupath.lib.scripting.QP. Remove objects occurring outside the current image bounds, clipping annotations where possible to retain ; the part that is inside the image. removeOrClipObjectsOutsideImage(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Remove objects occurring outside the specified image bounds, clipping annotations where possible to retain ; the part that is inside the image. removeOverlaps(Collection<? extends PathObject>, Comparator<PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlaps, discarding one and keeping the other. removeOverlapsByLocation(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away. removeOverlapsBySize(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. removeParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Remove a parameter from this list. removeParameterChangeListener(ParameterChangeListener) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Remove a ParameterChangeListener. removePathObject(PathObject) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.removeChildObject(PathObject). removePathObjectListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). removePathObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Deprecated.; si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:849652,extend,extends,849652,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class TileClassificationsToAnnotationsPlugin<T>; extends AbstractDetectionPlugin<T>; Plugin to merge classified tiles into annotation objects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileClassificationsToAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:1531,plugin,plugin,1531,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability,"ix (String) to create and return an AffineTransformation. static Geometry; refineAreas(Geometry geometry,; double minSizePixels,; double minHoleSizePixels). Remove small fragments and fill small interior rings within a Geometry. static Geometry; regionToGeometry(ImageRegion region). Convert an ImageRegion to a rectangular Geometry. static Geometry; removeFragments(Geometry geometry,; double minArea). Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. static Geometry; removeInteriorRings(Geometry geometry,; double minRingArea). Fill all interior rings for the specified geometry that have an area < a specified threshold. static Geometry; roiToGeometry(ROI roi). Convert to QuPath ROI to a JTS Geometry. static Geometry; roundCoordinates(Geometry geometry). Round coordinates in a Geometry to integer values. static Geometry; shapeToGeometry(Shape shape). Convert a java.awt.Shape to a JTS Geometry. static List<Geometry>; splitGeometryByLineStrings(Geometry polygon,; Collection<? extends Geometry> splitLines). Split an input polygonal geometry using a collection of split lines. static Geometry; tryToFixPolygon(Polygon polygon). Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. static Geometry; union(Collection<? extends Geometry> geometries). Calculate the union of multiple Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GeometryTools; public GeometryTools(). Method Details. getDefaultFactory; public static GeometryFactory getDefaultFactory(); Get the default GeometryFactory to construct Geometries within QuPath. Returns:. parseTransformMatrix; public static AffineTransformation parseTransformMatrix(String text); throws ParseException; Parse the matrix (String) to create and return an AffineTransformation. ; ; The order of the matrix elements should be the following:. m00 m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:3604,extend,extends,3604,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['extend'],['extends']
Modifiability,"ixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1753,plugin,plugin,1753,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['plugin'],['plugin']
Modifiability,"ixelProcessor. builder() - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Create a new builder to generate a custom dialog. builder() - Static method in class qupath.lib.scripting.ScriptParameters. Create a new builder for ScriptParameters. builder() - Static method in class qupath.opencv.dnn.DnnModelParams. Create a new params builder, with default values. builder() - Static method in class qupath.opencv.ml.FeaturePreprocessor. Create a FeaturePreprocessor.Builder to build a custom FeaturePreprocessor. builder() - Static method in class qupath.opencv.ml.PatchClassifierParams. Create a builder to generate new patch classifier params. builder(int) - Static method in class qupath.lib.objects.utils.Tiler. Create a new builder to generate square tiles. builder(int, int) - Static method in class qupath.lib.objects.utils.Tiler. Create a new builder to generate rectangular tiles. builder(String) - Static method in class qupath.opencv.dnn.DnnTools. Initiative building and configuring an OpenCVDnn. builder(String) - Static method in class qupath.opencv.dnn.OpenCVDnn. Create a new builder. builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage, BufferedImage>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a new builder for a PixelProcessor that can make custom measurements for an image object. builder(DensityMaps.DensityMapBuilder) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. builder(Processor<ImagePlus, ImagePlus, Object>) - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a PixelProcessor.Builder for an ImageJ ImagePlus. builder(Processor<Mat, Mat, Mat>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a PixelProcessor.Builder for an OpenCV Mat. builder(PathObjectPredicates.PathObjectPredicate) - Static m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:73546,config,configuring,73546,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['configuring']
Modifiability,"ixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; ParameterList params); Get an appropriate overlap, in pixels, if analysis of the specified ImageData will",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:3038,plugin,plugins,3038,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability,"ixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.application.Application. qupath.lib.gui.QuPathApp; qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:6982,plugin,plugins,6982,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, eq",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:2115,extend,extends,2115,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['extend'],['extends']
Modifiability,"j.detect.dearray; Class TMADearrayerPluginIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class TMADearrayerPluginIJ; extends AbstractInteractivePlugin<BufferedImage>; Plugin for automatically dearraying tissue microarrays (TMAs). Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMADearrayerPluginIJ(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:1381,plugin,plugin,1381,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugin']
Modifiability,"j.gui; Class ImageJMacroRunner. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.imagej.gui.ImageJMacroRunner. All Implemented Interfaces:; PathPlugin<BufferedImage>. public class ImageJMacroRunner; extends AbstractPlugin<BufferedImage>; QuPath plugin for running ImageJ macros & returning detected regions.; ; TODO: Support script recording. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageJMacroRunner(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:1353,plugin,plugin,1353,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"ject to the hierarchy, firing an event. boolean; addObject(PathObject pathObject,; boolean fireUpdate). Add an object to the hierarchy, optionally firing an event. boolean; addObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate). Add path object as descendant of the requested parent. boolean; addObjects(Collection<? extends PathObject> pathObjects). Add multiple objects to the hierarchy. boolean; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0; use addObject(PathObject) instead (for naming consistency). boolean; addPathObjectBelowParent(PathObject pathObjectParent,; PathObject pathObject,; boolean fireUpdate). Deprecated.; since v0.4.0; use addObjectBelowParent(PathObject, PathObject, boolean). void; addPathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). boolean; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0; use addObjects(Collection) instead. boolean; addPathObjectWithoutUpdate(PathObject pathObject). Deprecated.; since v0.4.0, use addObject(PathObject, boolean) instead (for naming consistency). void; clearAll(). Remove all objects from the hierarchy. void; fireHierarchyChangedEvent(Object source). Fire a hierarchy update indicating the hierarchy structure has changed. void; fireHierarchyChangedEvent(Object source,; PathObject pathObject). Fire a hierarchy update indicating the hierarchy structure has changed, impacting descendants of a specified object. void; fireObjectClassificationsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object classifications have changed. void; fireObjectMeasurementsChangedEvent(Object source,; Collection<? extends PathObject> pathObjects). Fire a hierarchy update indicating object measurements have changed. void; fireObjectMeasurement",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:3089,extend,extends,3089,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability,"ject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2365,inherit,inherited,2365,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['inherit'],['inherited']
Modifiability,"ject; Create and use ImageOp and ImageDataOp objects.; ; The Gson types in v0.2.0 are subject to change in later version.; Specifically, each category will likely have an additional part to the subtype.; This is currently the case with ""core"", but not other subtypes. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageOps.Channels. Channel and color operations. static class ; ImageOps.Core. Core operations. static class ; ImageOps.Filters. Filtering operations. static class ; ImageOps.ML. Machine learning operations. static class ; ImageOps.Normalize. Normalization operations. static class ; ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. static class ; ImageOps.Threshold. Thresholding operations. Constructor Summary; Constructors. Constructor; Description; ImageOps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDataOp; buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform> inputChannels). Create an ImageDataOp, optionally using a specified collection of input channels. static ImageDataOp; buildImageDataOp(ColorTransforms.ColorTransform... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:1479,extend,extends,1479,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,2,['extend'],['extends']
Modifiability,"ject; qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. All Implemented Interfaces:; Serializable, ScriptableWorkflowStep, WorkflowStep. public class RunSavedClassifierWorkflowStep; extends Object; implements ScriptableWorkflowStep; WorkflowStep for running a saved PathObjectClassifier. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; RunSavedClassifierWorkflowStep(String classifierPath). Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String name,; String classifierPath). Create a workflow step to run a classifier. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getScript(). Get one or more script lines that may be used to apply the step. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String name,; String classifierPath); Create a workflow step to run a classifier. Parameters:; name - step name for display, to identify the purpose of the step (not the classifier); classifierPath - path to the serialized classifier. RunSavedClassifierWorkflowStep; public RunSavedClassifierWorkflowStep(String classifierPath); Constructor, taking the path to the serialized classifier. Parameters:; classifierPath - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html:1424,inherit,inherited,1424,javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/RunSavedClassifierWorkflowStep.html,2,['inherit'],['inherited']
Modifiability,"ject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from a labelled image. createObjects(ROI, Function<ROI, PathObject>) - Method in class qupath.lib.objects.utils.Tiler. Create a list of PathObject tiles from the input. createObjectsChangedEvent(Object, PathObjectHierarchy, PathObjectHierarchyEvent.HierarchyEventType, Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. createObjectsFromPixelClassifier(ImageServer<BufferedImage>, Map<Integer, PathClass>, ROI, Function<ROI, ? extends PathObject>, double, double, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects based upon an ImageServer that provides classification or probability output. createObjectsFromPredictions(ImageServer<BufferedImage>, PathObjectHierarchy, Collection<PathObject>, Function<ROI, ? extends PathObject>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. createObjectsFromROIs(ImagePlus, Collection<? extends Roi>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. createObjectTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a TreeTableView showing the names and values of object fields, accessed via reflection. createPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; createPane() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using the default PathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:204821,extend,extends,204821,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"jectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; getDefaultParameterList in class WatershedCellDetection; Parameters:; imageData - ; Returns:. getName; public String getName(); Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2398,inherit,inherited,2398,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['inherit'],['inherited']
Modifiability,"jectExpression<Project<BufferedImage>>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Current project. project(Mat, Mat) - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Apply the projection. Project<T> - Interface in qupath.lib.projects. Data structure to manage images and associated data in QuPath. PROJECT_ADD_IMAGES - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_BASE_DIR - Static variable in class qupath.lib.scripting.QP. Placeholder for the path to the current project. PROJECT_CLOSE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_LOCATION - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Default location to use when storing density maps in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.object.ObjectClassifier. Default location to use when storing object classifiers in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.pixel.PixelClassifier. Default location to use when storing object classifiers in a project. PROJECT_NEW - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_NEW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; projectActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ProjectActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; ProjectBrowser - Class in qupath.lib.gui.panes. Component for previewing and selecting images within a project. ProjectBrowser(QuPathGUI) - Constructor for class qupath.lib.gui.panes.ProjectBrowser. Constructor. ProjectClassifierBindings - Class in qupath.process.gui.commands.ml. Class to help with formatting text fields for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:785406,variab,variable,785406,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"kRunnerUtils. Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createTaskRunner(int) - Static method in class qupath.lib.gui.scripting.QPEx. Create a task runner with the specified number of threads. createTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new TaskRunner instance with the specified number of threads. createThreadFactory(String, boolean) - Static method in class qupath.lib.common.ThreadTools. Create a named thread factory with Thread.NORM_PRIORITY. createThreadFactory(String, boolean, int) - Static method in class qupath.lib.common.ThreadTools. Create a named thread factory with a specified priority. createThresholdClassifier(PixelCalibration, int, double, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a new PixelClassifier that applies a threshold to one channel of an image. createThresholdClassifier(PixelCalibration, Map<Integer, ? extends Number>, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a new PixelClassifier that applies a threshold to one or more channels of an image. createThresholdServer(ImageServer<BufferedImage>, int, double, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create a new ImageServer by applying a threshold to one channel of another server. createThresholdServer(ImageServer<BufferedImage>, Map<Integer, ? extends Number>, PathClass, PathClass) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create a new ImageServer by applying a threshold to one or more channels of another server. createTileObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified tile object. createTileObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a tile object. createTileObject(ROI, PathClass, MeasurementList) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:228203,extend,extends,228203,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"kage qupath.lib.gui.viewer.tools; Class ExtendedPathTool. java.lang.Object; qupath.lib.gui.viewer.tools.ExtendedPathTool. All Implemented Interfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:1326,inherit,inherited,1326,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['inherit'],['inherited']
Modifiability,"kage qupath.lib.objects; Class PathCellObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject; qupath.lib.objects.PathDetectionObject; qupath.lib.objects.PathCellObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathCellObject; extends PathDetectionObject; A subclass of a PathDetectionObject, which also supports storing an (optional) extra ROI to represent ; the cell nucleus.; ; The primary ROI represents the cell boundary. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathCellObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ROI; getNucleusROI(). Get the nucleus ROI for this cell. boolean; hasNucleus(). Returns true if a nucleus ROI is stored for this cell. void; readExternal(ObjectInput in);  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:1323,inherit,inherited,1323,javadoc/docs/qupath/lib/objects/PathCellObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html,1,['inherit'],['inherited']
Modifiability,"keratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.application.Application. qupath.lib.gui.QuPathApp; qupath.lib.gui.tma.QuPathTMAViewer. qupath.lib.roi.AreaROI (implements java.io.Serializable); qupath.lib.analysis.stats.ArrayWrappers; qupath.lib.scripting.languages.AutoCompletions; qupath.lib.gui.actions.AutomateActions; qupath.lib.gui.actions.menus.AutomateMenuActions (implements qupath.lib.gui.ac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:7276,plugin,plugins,7276,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"kes ; would be especially annoying (e.g. laboriously annotating images).; ; The reason is because of the (fairly simple) implementation: every time the hierarchy is changed, ; the entire hierarchy is serialized in case it becomes necessary to revert back.; ; This is a lot easier than trying to figure out how to computationally revert every conceivable change ; that the hierarchy might experience, but it is inevitably quite memory hungry and risks having a substantial ; impact on performance for large object hierarchies. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyBooleanProperty; canRedo(). True if it's possible to call redoOnce for the currently-active viewer in QuPath, false otherwise. ReadOnlyBooleanProperty; canUndo(). True if it's possible to call undoOnce for the currently-active viewer in QuPath, false otherwise. void; changed(ObservableValue<? extends QuPathViewer> observable,; QuPathViewer oldValue,; QuPathViewer newValue);  ; void; clear(). Clear all undo/redo stacks (useful when memory is low). static UndoRedoManager; createForObservableViewer(ObservableValue<? extends QuPathViewer> viewerProperty);  ; void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. boolean; redoOnce(). Request to 'redo' the last 'undone' hierarchy change for the current active viewer. void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. long; totalBytes(). The total number of bytes used for all viewers. boolean; undoOnce(). Request to 'undo' the last observed hierarchy change for the current active viewer. void; viewerClosed(QuPathViewer viewer). Ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html:1890,extend,extends,1890,javadoc/docs/qupath/lib/gui/UndoRedoManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UndoRedoManager.html,1,['extend'],['extends']
Modifiability,"khead. Constructor Summary; Constructors. Constructor; Description; ChartTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:1557,extend,extends,1557,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html,1,['extend'],['extends']
Modifiability,"ks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for multiple objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:29065,extend,extends,29065,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class YamlLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.YamlLanguage. public class YamlLanguage; extends ScriptLanguage; Class for the representation of YAML syntax in QuPath. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's classes). Constructor Summary; Constructors. Constructor; Description; YamlLanguage(). Constructor for YAML language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static YamlLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. YamlLanguage; public YamlLanguage(); Constructor for YAML language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static YamlLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html:1121,inherit,inherited,1121,javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/YamlLanguage.html,2,['inherit'],['inherited']
Modifiability,"l Comparator<Version>; COMPARATOR_MAJOR_MINOR_PATCH. Compare major then minor then patch versions (ignoring suffixes). static final Version; UNKNOWN. Constant representing any unknown version. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(Version o);  ; boolean; equals(Object obj);  ; int; getMajor(). Get the major version number (X.0.0). int; getMinor(). Get the minor version number (0.X.0). int; getPatch(). Get the patch version number (0.0.X). String; getSuffix(). Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). int; hashCode();  ; boolean; hasSuffix(). Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. static Version; parse(String versionString). Parse a Version object representing a semantic version number from a String. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. COMPARATOR_MAJOR; public static final Comparator<Version> COMPARATOR_MAJOR; Compare major versions only. COMPARATOR_MAJOR_MINOR; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR; Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH; public static final Comparator<Version> COMPARATOR_MAJOR_MINOR_PATCH; Compare major then minor then patch versions (ignoring suffixes). COMPARATOR_FULL; public static final Comparator<Version> COMPARATOR_FULL; Compare full version, including any suffixes. UNKNOWN; public static final Version UNKNOWN; Constant representing any unknown version. Method Details. getMajor; public int getMajor(); Get the major version number (X.0.0). Returns:. getMinor; public int getMinor(); Get the minor version number (0.X.0). Returns:. getPatch; public int getPatch(); Get the patch version number (0.0.X). Returns:. getSuffix; public String getS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html:2356,inherit,inherited,2356,javadoc/docs/qupath/lib/common/Version.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Version.html,1,['inherit'],['inherited']
Modifiability,"l Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1430,inherit,inherited,1430,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,1,['inherit'],['inherited']
Modifiability,"l Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class DilateAnnotationPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; DilateAnnotationPlugin.LineCap. Line cap to use for annotation expansion. Constructor Summary; Constructors. Constructor; Description; DilateAnnotationPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:1593,plugin,plugin,1593,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['plugin'],['plugin']
Modifiability,"l be returned!; If it is not, then a default grayscale LUT should be used. getDefaultCreateFunction() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default function used to create TaskRunner instances. getDefaultDragDropListener() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. getDefaultExtension() - Method in interface qupath.lib.images.writers.ImageWriter. Get the default extension. getDefaultFactory() - Static method in class qupath.lib.roi.GeometryTools. Get the default GeometryFactory to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Default method for getting a location string from an ImageServer using cached tiles. getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.PositiveCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:369817,plugin,plugins,369817,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"l boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell nuclei. NUCLEUS - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Nucleus only. NUCLEUS_CELL_RATIO - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Nucleus/cell area ratio (only relevant to cell objects). NULL_CLASS - Static variable in class qupath.lib.objects.classes.PathClass. Default PathClass that represents no classification. numCommandThreadsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying the preferred number of threads QuPath should use for multithreaded commands. numDimensions() - Method in class qupath.opencv.dnn.DnnShape. The total number of dimensions, i.e. NumericParameter<S> - Class in qupath.lib.plugins.parameters. Abstract parameter to represent a numeric value. numNaNs(double[]) - Static method in class qupath.lib.common.GeneralTools. Count the number of NaN values in an array. NumpyTools - Class in qupath.opencv.tools. Read .npy and .npz files from NumPy. NumpyTools() - Constructor for class qupath.opencv.tools.NumpyTools;  ; numThreads - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; nValues() - Method in class qupath.lib.analysis.stats.Histogram. Number of values represented in the histogram (i.e. nVertices() - Method in class qupath.lib.roi.AreaROI. Get the number of vertices used to represent this area. nVertices() - Method in class qupath.lib.roi.PolygonROI. Get the total number of vertices in the polygon. nZSlices() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nZSlices() - Method in interface qupath.lib.images.servers.ImageServer. Number of slices in a z-stack. O. OBJECT_IMPORT - Variable in class qupath.lib.gui.actions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:715324,plugin,plugins,715324,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"l objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. Collection<PathObject>; getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects). Get the objects overlapping or close to a specified region. Collection<PathObject>; getObjectsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; getSelectionModel(). Get the selection model, which handles the selection status of objects. Collection<PathObject>; getTileObjects(). Get all tile objects in the hierarchy. TMAGrid; getTMAGrid(). Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. boolean; hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region). Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. boolean; insertPathObject(PathObject pathObject,; boolean fireChangeEvents). Insert an object into the hierarchy. boolean; insertPathObjects(Collection<? extends PathObject> pathObjects). Insert a collection of objects into the hierarchy, firing a change event on completion. boolean; isEmpty(). Check if the hierarchy is empty (i.e. int; nObjects(). Number of objects in the hierarchy, excluding the root. void; removeListener(PathObjectHierarchyListener listener). Remove a hierarchy change listener. boolean; removeObject(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, firing a remove event. void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove a collection of objects, firing a single 'hierarchy changed' event afterwar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:6313,extend,extends,6313,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability,"l org.controlsfx.control.action.Action; MERGE_SELECTED;  ; final org.controlsfx.control.action.Action; REMOVE_FRAGMENTS;  ; final org.controlsfx.control.action.Action; RESOLVE_HIERARCHY;  ; final org.controlsfx.control.action.Action; RIGID_OBJECT_EDITOR;  ; final org.controlsfx.control.action.Action; SELECT_ALL_ANNOTATION;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final org.controlsfx.control.action.Action; SIMPLIFY_SHAPE;  ; final org.controlsfx.control.action.Action; SPECIFY_ANNOTATION;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SPLIT_ANNOTATIONS_BY_LINES;  ; final org.controlsfx.control.action.Action; TRANSFER_ANNOTATION;  . Constructor Summary; Constructors. Constructor; Description; AnnotationActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SPECIFY_ANNOTATION; @ActionConfig(""Action.Objects.Annotation.specify""); public final org.controlsfx.control.action.Action SPECIFY_ANNOTATION. SELECT_ALL_ANNOTATION; @ActionAccelerator(""shortcut+shift+a""); @ActionConfig(""Action.Objects.Annotation.fullImage""); public final org.controlsfx.control.action.Action SELECT_ALL_ANNOTATION. SEP_5; public final org.controlsfx.control.action.Action SEP_5. INSERT_INTO_HIERARCHY; @ActionAccelerator(""shortcut+shift+i""); @ActionConfig(""Action.Objects.Annotation.hierarchyInsert""); public final org.controlsfx.control.action.Action INSERT_INTO_HIERARCHY. RESOLVE_HIERARCHY; @ActionAccelerator(""shortcut+shift+r""); @ActionConfig(""Action.Objects.Annotation.hierarchyResolve""); public final org.controlsfx.control.action.Action RESOLVE_HIERARCHY. SEP_6; public final org.controlsfx.control.action.Action SEP_6. RIGID_OBJECT_EDITO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html:2080,inherit,inherited,2080,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.AnnotationActions.html,1,['inherit'],['inherited']
Modifiability,"l timepoints of a time series will be written. allZSlices() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Test if two doubles are approximately equal, within a specified tolerance. alpha(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit alpha value from a packed ARGB value. ALWAYS - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gui.actions.menus;  ; AnalyzeMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; and(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Compute the bitwise AND of two arrays. and(PathObjectPredicates.PathObjectPredicate) - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. Combine with another PathObjectPredicates.PathObjectPredicate through AND. andThen(OutputHandler<S, T, U>) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Append a second output handler to this one. annotatedCentroidTilesOnly(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether tiles without any annotations over th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:36952,plugin,plugins,36952,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"l.Builder. Add the full-resolution image as a level of the pyramid. addGridRow(GridPane, int, int, String, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Add a row of nodes. addGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Add a new connections group. addImage(ImageServerBuilder.ServerBuilder<T>) - Method in interface qupath.lib.projects.Project. Add an image for a particular ImageServer. addIntensityMeasurements(ImageServer<BufferedImage>, PathObject, double, Collection<ObjectMeasurements.Measurements>, Collection<ObjectMeasurements.Compartments>) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Measure all channels of an image for one individual object or cell. addIntParameter(String, String, int) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter. addIntParameter(String, String, int, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded int parameter, with optional unit and help text. addIntParameter(String, String, int, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter, with optional unit and help text. addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new DropHandler specifically for JSON elements. addLabel(String, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by classname, where the label represents the integer label used for ; annotations with the given classname. addLabel(String, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by classname, where the label represents the integer label used for ; annotations with the given classname. addLabel(PathClass, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:17638,plugin,plugins,17638,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"l.pixels.PixelProcessor. Process objects using the default TaskRunner. processObjects(TaskRunner, ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.lib.experimental.pixels.PixelProcessor. Process objects using the specified TaskRunner. processor(Processor<S, T, U>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the processor. Processor<S,T,U> - Interface in qupath.lib.experimental.pixels. A generic processor designed to work with Parameters and provide an output. project(ObjectExpression<Project<BufferedImage>>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Current project. project(Mat, Mat) - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Apply the projection. Project<T> - Interface in qupath.lib.projects. Data structure to manage images and associated data in QuPath. PROJECT_ADD_IMAGES - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_BASE_DIR - Static variable in class qupath.lib.scripting.QP. Placeholder for the path to the current project. PROJECT_CLOSE - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_LOCATION - Static variable in class qupath.lib.analysis.heatmaps.DensityMaps. Default location to use when storing density maps in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.object.ObjectClassifier. Default location to use when storing object classifiers in a project. PROJECT_LOCATION - Static variable in interface qupath.lib.classifiers.pixel.PixelClassifier. Default location to use when storing object classifiers in a project. PROJECT_NEW - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_NEW - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.CommonActions;  ; PROJECT_OPEN - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:784874,variab,variable,784874,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"l:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.color; Class ColorTransformer. java.lang.Object; qupath.lib.color.ColorTransformer. public class ColorTransformer; extends Object; Static methods for computing a range of color transforms for packed RGB values.; ; Several straightforward methods of manipulating RGB channels that may be used to enhance (or suppress); primarily DAB staining, or otherwise assist in exploring IHC data.; More details on each method (in particular 'Blue normalized', here 'Blue chromaticity') are provided in:; ; Brey, E. M., Lalani, Z., Johnston, C., Wong, M., McIntire, L. V., Duke, P. J., & Patrick, C. W. (2003).; Automated Selection of DAB-labeled Tissue for Immunohistochemical Quantification.; Journal of Histochemistry & Cytochemistry, 51(5); doi:10.1177/002215540305100503; ; Color deconvolution methods use default stain vectors - qupath.lib.color contains more flexible options for this. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ColorTransformer.ColorTransformMethod. Enum consisting of color transforms that may be applied to RGB images. Constructor Summary; Constructors. Constructor; Description; ColorTransformer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static float; blueChromaticity(int rgb). Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). static float; brightness(int rgb). Extract brightness value from RGB-to-HSB transform. static float; brown(int rgb). Extract brown value, (blue - (red + green)*0.3f). static int[]; colorDeconvolveReconvolveRGBArray(int[] buf,; ColorDeconvolutionStains stainsInput,; ColorDeconvolutionStains stainsOutput,; boolean discardResidual,; int[] bufOutput). Deconvolve RGB array with one set of stain vectors, and reconvolve with another. stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html:1203,flexible,flexible,1203,javadoc/docs/qupath/lib/color/ColorTransformer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.html,1,['flexible'],['flexible']
Modifiability,"l:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1211,extend,extends,1211,javadoc/docs/qupath/lib/io/PointIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html,1,['extend'],['extends']
Modifiability,"l>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCuda(boolean) is used to turn if off. Returns:. setUseCuda; public static void setUseCuda(boolean requestUseCuda); Request that CUDA is used.; This will be ignored if isCudaAvailable()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:5029,extend,extends,5029,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['extend'],['extends']
Modifiability,"lAction(PathTool tool). Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool> selectedToolProperty; Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. See Also:. getSelectedTool(); setSelectedTool(PathTool); selectedToolProperty(). lockSelectedTool; public BooleanProperty lockSelectedToolProperty; Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. See Also:. lockSelectedToolProperty(). previousSelectedTool; public ReadOnlyObjectProperty<PathTool> previousSelectedToolProperty; Property storing the previous tool that was selected.; This is useful for commands that might want to quickly toggle between tools. See Also:. getPreviousSelectedTool(); previousSelectedToolProperty(). F",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:2979,inherit,inherited,2979,javadoc/docs/qupath/lib/gui/ToolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html,1,['inherit'],['inherited']
Modifiability,"lClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create detection objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. static PixelClassificationMeasurementManager; createMeasurementManager(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create a PixelClassificationMeasurementManager that can be used to generate measurements from applying a pixel classifier to an image. static PixelClassificationMeasurementManager; createMeasurementManager(ImageServer<BufferedImage> classifierServer). Create a PixelClassificationMeasurementManager that can be used to generate measurements from an ImageServer where pixels provide ; classification or probability information. static Collection<PathObject>; createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit). Create objects based upon an ImageServer that provides classification or probability output. static boolean; createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options). Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Create an ImageServer that displays the results of applying a PixelClassifier to an image. static ImageServer<BufferedImage>; createPixelClassificationServer(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String id,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:4462,extend,extends,4462,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,2,['extend'],['extends']
Modifiability,"lProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2310,inherit,inherited,2310,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['inherit'],['inherited']
Modifiability,"lVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9633,plugin,plugins,9633,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"label used for ; annotations that have no classification set. addUnclassifiedLabel(int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addValue(double) - Method in class qupath.lib.analysis.stats.RunningStatistics. Add another value; NaN values are counted but do not contribute to the statistics. addViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Add a viewer listener. addWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Add a listener for changes to the workflow. addWorkflowStep(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addWorkflowStep(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Add a workflow step to the ImageData indicating the argument that this plugin was run with. AffineTransformImageServer - Class in qupath.lib.images.servers. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransformImageServer(ImageServer<BufferedImage>, AffineTransform) - Constructor for class qupath.lib.images.servers.AffineTransformImageServer;  ; AffineTransforms - Class in qupath.lib.awt.common. Helper class for working with affine transforms. AffineTransforms() - Constructor for class qupath.lib.awt.common.AffineTransforms;  ; alertType(Alert.AlertType) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a dialog styled as a specified alert type. alignBottomCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the bottom center of the ROI bounding box. alignBottomLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the bottom left of the ROI bounding box. alignBottomRight() - Method in class qupath.lib.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:32977,plugin,plugin,32977,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"labels. List<PathObject>; getObjectsForRegion(ImageRegion region). Get the objects to be painted that fall within a specified region. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. boolean; isEmptyRegion(RegionRequest request). Returns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:3219,inherit,inherited,3219,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['inherit'],['inherited']
Modifiability,"larDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SubcellularDetection; extends AbstractInteractivePlugin<BufferedImage>; Experimental plugin to help with the quantification of subcellular structures. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SubcellularDetection();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:1565,plugin,plugin,1565,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['plugin'],['plugin']
Modifiability,"lass in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; AbstractTileableImageServer - Class in qupath.lib.images.servers. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AbstractTileableImageServer() - Constructor for class qupath.lib.images.servers.Abst",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:3807,plugin,plugin,3807,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"lass in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; put(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Put a measurement value into the list, replacing any previous measurement with the same name. put(String, T) - Method in interface qupath.lib.projects.ResourceManager.Manager. Save a resource within the project. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair without rotation. put135(int, int) - Method in class qupath.lib.analysis.featur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:799538,variab,variable,799538,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"lass qupath.lib.gui.WelcomeStage;  ; getInstance(PathClass, String, Integer) - Static method in class qupath.lib.objects.classes.PathClass. Get a derived PathClass instance with the specified parent. getInstance(LocalNormalization.SmoothingScale, double) - Static method in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Get an object containing the parameters necessary for normalization. getInstance(LocalNormalization.SmoothingScale, LocalNormalization.SmoothingScale) - Static method in class qupath.opencv.tools.LocalNormalization.LocalNormalizationType. Get an object containing the parameters necessary for normalization. getInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get a mapping between objects and instance labels. getInterpolation() - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Get the preferred method of interpolation to use for display. getIntParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a integer parameter value (or its default) for the specified key. getItem() - Method in class qupath.lib.gui.SelectableItem. Get the current item. getItems() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getItems() - Method in interface qupath.lib.gui.measure.PathTableData. Get internal list of the items used to provide measurements. getItems(UriUpdater.UriStatus) - Method in class qupath.lib.io.UriUpdater. Get all items with the specified status, or all items is status is null. getKeyValueParameters(boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameter values. getLabelMap() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get the map of classifications to labels. getLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get an unmodifiable map of classifications and their correspondin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:419025,plugin,plugins,419025,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lass qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - Constructor for class qupath.lib.plugins.AbstractInteractivePlugin;  ; AbstractObjectClassifier<T> - Class in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:3489,plugin,plugins,3489,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lass qupath.lib.images.servers.TileRequest. Get the RegionRequest that this tile represents. getRegions() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Get an unmodifiable collection for all available regions. getRelativePathOrNull(String) - Method in class qupath.lib.gui.UserDirectoryManager;  ; getRenderer() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageRenderer used with this overlay, which may be null. getRenderer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request a renderer that converts image tiles into RGB images. getReplacements() - Method in class qupath.lib.io.UriUpdater. Get a map of all replacements. getRepo() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the repo. getRepository() - Method in interface qupath.lib.gui.extensions.GitHubProject. Get the GitHub repository associated with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getRequestedDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the requested version for .qpdata files. getResolution() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the resolution at which the training should occur. getResources(String, Class<S>, String) - Method in interface qupath.lib.projects.Project. Get a manager for objects of a specified class within this project. getResourcesForProject(Project<?>) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Get the resource manager for image display settings from a project. getResultString() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns a presentable representation of the log-rank test result, i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:498792,extend,extends,498792,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"lass when classifying PathObjects.; ; When applying a classifier to make objects, it's desirable to make updating the classification an atomic ; operation, applied to all objects in one go. Consequently, it the classifier is aborted early ; (e.g. the thread interrupted), then the objects are not partially reclassified. Constructor Summary; Constructors. Constructor; Description; Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass). Helper class to store an object prior to reclassifying it. Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability). Helper class to store an object prior to reclassifying it, including a classification probability. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; apply(). Apply the stored classification. PathObject; getPathObject(). Get the stored PathObject for which the PathClass may be set. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass); Helper class to store an object prior to reclassifying it. Parameters:; pathObject - ; pathClass - ; retainIntensityClass - of we have a single-level or two-level PathClass, with the second element an intensity classification, ; optionally retain this and only update the base class. Reclassifier; public Reclassifier(PathObject pathObject,; PathClass pathClass,; boolean retainIntensityClass,; double probability); Helper class to store an object prior to reclassifying it, including a classification probability. Parameters:; pathObject - an object whose classification may be set by a subsequent call to apply(); pathClass - the classification that may be applied to pathObject; retainIntensityClass - of we have a single-level or two-level Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html:1485,inherit,inherited,1485,javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/Reclassifier.html,2,['inherit'],['inherited']
Modifiability,"lass) - Static method in class qupath.lib.scripting.QP. Apply a new classification to all objects with a specified original classification in an object collection. replaceClassification(PathClass, PathClass) - Static method in class qupath.lib.scripting.QP. Apply a new classification to all objects in the current hierarchy with a specified original classification. replaceClassification(PathObjectHierarchy, PathClass, PathClass) - Static method in class qupath.lib.scripting.QP. Apply a new classification to all objects with a specified original classification in the provided hierarchy. replaceCurlyQuotes(String) - Static method in class qupath.lib.common.GeneralTools. Replace different kinds of 'curly quote' in a String with straight quotes. replaceGremlins(String, CharSequence) - Static method in class qupath.lib.common.GeneralTools. Replace non-printable characters from a String with a specified replacement (may be null). replaceLastStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Replace the most recently added step with this one. replaceNaNs(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that replaces NaNs with a specified value. replaceNaNs(Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Replace NaNs in a floating point array. replaceSelection(String) - Method in interface qupath.lib.gui.scripting.EditableText. Insert the specified text, replacing any existing selection. replaceSelection(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; replaceSelection(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; replaceValues(Mat, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Replace a specific value in an array. requestAutomaticUpdateCheck() - Method in class qupath.lib.gui.QuPathGUI. Request an automated update check in a background thread. requestCancelDirection(boolean) - Method in class qupath.lib.gui.viewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:855557,plugin,plugins,855557,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.DrawingPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.DrawingPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Drawing""); public static class PreferencePane.DrawingPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final IntegerProperty; brushDiameter;  ; final BooleanProperty; brushScaleByMag;  ; final BooleanProperty; clipROIsForHierarchy;  ; final BooleanProperty; pixelSnapping;  ; final IntegerProperty; pointRadius;  ; final BooleanProperty; returnToMove;  ; final BooleanProperty; tileBrush;  ; final BooleanProperty; useMultipoint;  . Constructor Summary; Constructors. Constructor; Description; DrawingPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. returnToMove; @BooleanPref(""Prefs.Drawing.returnToMove""); public final BooleanProperty returnToMove. pixelSnapping; @BooleanPref(""Prefs.Drawing.pixelSnapping""); public final BooleanProperty pixelSnapping. clipROIsForHierarchy; @BooleanPref(""Prefs.Drawing.clipROIsForHierarchy""); public final BooleanProperty clipROIsForHierarchy. brushDiameter; @IntegerPref(""Prefs.Drawing.brushDiameter""); public final IntegerProperty brushDiameter. tileBrush; @BooleanPref(""Prefs.Drawing.tileBrush""); public final BooleanProperty tileBrush. brushScaleByMag; @BooleanPref(""Prefs.Drawing.brushScaleByMag""); public final BooleanProperty brushScaleByMag. useMultipoint; @BooleanPref(""Prefs.Drawing.useMultipoint""); public final BooleanProperty useMultipoint. pointRadius; @IntegerPref(""Prefs.Drawing.pointRadius""); public final IntegerProperty pointRadius. Constructor Details. Draw",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html:1132,inherit,inherited,1132,javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.DrawingPreferences.html,1,['inherit'],['inherited']
Modifiability,"lass; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1143,plugin,pluginCompleted,1143,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['plugin'],['pluginCompleted']
Modifiability,"lassifications for the specified objects. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects,; double buffer). Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> pathObjects). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. static boolean; standardizeClassifications(Collection<PathObject> pathObjects). Standardize the classifications for a collection of objects. static boolean; standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparator). Standardize the classifications for a collection of objects. static void; swapNameAndClass(PathObject pathObject,; boolean includeColor). Swap the name and PathClass of an object. static void; toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Toggle the 'locked' status of specified objects. static void; toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy). Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. static PathObject; transfo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:12453,extend,extends,12453,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability,"lassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassificationServer(ImageData<BufferedImage>, PixelClassifier, String, ColorModel, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<PixelClassifier>, StringExpression) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Create a standard button pane for pixel classifiers, to create, measure and classify objects. createPlugin(Class<? extends PathPlugin>) - Method in class qupath.lib.gui.QuPathGUI. Create a plugin from a specified class. createPluginAction(String, Class<? extends PathPlugin>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an action for a plugin to be run through this QuPath instance. createPluginAction(String, PathPlugin<BufferedImage>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action to call the specified plugin for the current image. createPointsEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPointsROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from an array of x and y coordinates. createPointsROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI containing a single point. createPointsROI(List<? extends Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from a list of points. createPointsROI(ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an empty points ROI. createPolygonEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPolygonROI(double[],",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:209856,plugin,plugin,209856,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"lassifier; public static boolean createAnnotationsFromPixelClassifier(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> classifierServer,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotation objects based upon an ImageServer that provides classification or probability output, ; applied to selected objects. If no objects are selected, objects are created across the entire image. Parameters:; hierarchy - ; classifierServer - ; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPixelClassifier; public static Collection<PathObject> createObjectsFromPixelClassifier(ImageServer<BufferedImage> server,; Map<Integer,PathClass> labels,; ROI roi,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; boolean doSplit); throws IOException; Create objects based upon an ImageServer that provides classification or probability output. Parameters:; server - image server providing pixels from which objects should be created; labels - classification labels; if null, these will be taken from ImageServer#getMetadata() and all non-ignored classifications will be used.; Providing a map makes it possible to explicitly exclude some classifications.; roi - region of interest in which objects should be created (optional; if null, the entire image is used); creator - function to create an object from a ROI (e.g. annotation or detection); minArea - minimum area for an object fragment to retain, in calibrated units based on the pixel calibration; minHoleArea - minimum area for a hole to fill, in calibrated units based on the pixel calibration; doSplit - if true, split connected regions into separate objects; Returns:; the objects crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:11177,extend,extends,11177,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,2,['extend'],['extends']
Modifiability,lassifier<T> (implements qupath.lib.classifiers.object.ObjectClassifier<T>). qupath.opencv.dnn.DnnObjectClassifier (implements qupath.lib.io.UriResource); qupath.opencv.ml.objects.OpenCVMLClassifier<T>; qupath.opencv.dnn.OpenCVModelObjectClassifier (implements qupath.lib.io.UriResource). qupath.lib.gui.viewer.overlays.AbstractOverlay (implements qupath.lib.gui.viewer.overlays.PathOverlay). qupath.lib.gui.viewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBina,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:5894,plugin,plugins,5894,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"lassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1387,variab,variable,1387,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,2,['variab'],['variable']
Modifiability,"lassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getPare",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:473906,plugin,plugins,473906,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lateAnnotationPlugin.LineCap>, Constable. Enclosing class:; DilateAnnotationPlugin<T>. public static enum DilateAnnotationPlugin.LineCap; extends Enum<DilateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.LineCap FLAT; Flat cap. SQUARE; public static final DilateAnnotationPlugin.LineCap SQUARE; Square cap. Method Details. values; public static DilateAnnotationPlugin.LineCap[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static DilateAnnotationPlugin.LineCap valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html:1629,inherit,inherited,1629,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,2,['inherit'],['inherited']
Modifiability,"lateAnnotationPlugin.LineCap>; Line cap to use for annotation expansion.; This can be important when expanding line or polyline annotations to ; determine how the ends are handled. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FLAT. Flat cap. ROUND. Round cap. SQUARE. Square cap. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DilateAnnotationPlugin.LineCap; valueOf(String name). Returns the enum constant of this class with the specified name. static DilateAnnotationPlugin.LineCap[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROUND; public static final DilateAnnotationPlugin.LineCap ROUND; Round cap. FLAT; public static final DilateAnnotationPlugin.LineCap FLAT; Flat cap. SQUARE; public static final DilateAnnotationPlugin.LineCap SQUARE; Square cap. Method Details. values; public static DilateAnnotationPlugin.LineCap[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static DilateAnnotationPlugin.LineCap valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html:1782,inherit,inherited,1782,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.LineCap.html,2,['inherit'],['inherited']
Modifiability,"lated to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageData, or by moving the field of view. QuPathViewerPlus. A whole slide viewer with optional extras... RearrangeRGBImageServer. Simple image server to swap the red and blue channels of an RGB image. Reclassifier. Helper class when classifying PathObjects. RectangleROI. ROI representing a square or rectangle (unrotated). RefineAnnotationsPlugin<T>. Plugin to create new annotations by expanding the size of existing annotations. RegionFilter. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters. Standard classification regions (hopefully all you will ever need). RegionRequest. Class for defining an image region that can also be used to request these region from an ImageServer. RenderedImageServer. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder. Builder to create an ImageServer to display rendered images, with optional overlay layers. ResourceManager. Manage the storage and retrieval of resources with a ResourceManager. ResourceManager.Manager<T>. Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory. RichScriptEditor. Rich script editor for QuPath, which can be used for handling different languages. RichScriptEditorExtension. QuPath extension to add a more attractive script editor with syntax highlighting, ; making use of RichTextFX, Copyright (c) 2013-2014, Tomas Mikula (BSD 2-clause license). ROI. Base interface for defining regions of interest (ROIs) within QuPath. ROI.RoiType. Enum representing the major different types of ROI. RoiEditor. Helper class for interactively modifying existing ROIs. RoiLabeling. Collection of static methods to help work with ROIs, binary & labelled images in ImageJ. ROIs. This class consists exclusively of static methods that operate on or return regions of interest (R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:49227,layers,layers,49227,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['layers'],['layers']
Modifiability,"lay and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:1769,inherit,inherited,1769,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"ld Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2026,Plugin,PluginRunner,2026,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,1,['Plugin'],['PluginRunner']
Modifiability,"lder. Use grayscale LUT, rather than deriving colors from classifications. grayscale(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally use grayscale LUT, rather than deriving colors from classifications. GRAYSCALE - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using a grayscale LUT (black to white). greaterThan(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 > ip2. greaterThanOrEqual(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.SimpleThresholding. Created a binary image by thresholding pixels to find where ip1 >= ip2. green(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit green value from a packed RGB value. Green - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel only. GREEN - Static variable in class qupath.lib.common.ColorTools. Packed int representing green. GREEN - Static variable in class qupath.lib.images.servers.ImageChannel. Default green channel for RGB images. Green_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green chromaticity value, green / max(1, red + green + blue). Green_divided_by_blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green value divided by blue value. Green_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Green channel optical densities. greenChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green chromaticity value from a packed RGB pixel, green / max(1, red + green + blue). greenOverBlue(int) - Static method in class qupath.lib.color.ColorTransformer. Extract green over blue value from a packed RGB pixel, green / max(1, blue). GRID - Enum constant in enum class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:559249,variab,variable,559249,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"lder; measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement). Plot two measurements against one another for the specified objects. Charts.ScatterChartBuilder; parent(Window parent). Set the parent window. Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y). Create a scatterplot using arrays of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; List<T> extra). Create a scatterplot using collections of numeric values, with an associated custom object. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; T[] extra). Create a scatterplot using collections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that applies properties of this builder to the chart. Charts.ScatterChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.ScatterChartBuilder; width(double width). Set the preferred w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:3562,extend,extends,3562,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['extend'],['extends']
Modifiability,"lder<T>, ImageServerBuilder.DefaultImageServerBuilder<T>, ImageServerBuilder.ServerBuilder<T>, ImageServerBuilder.UriImageSupport<T>. Constructor Summary; Constructors. Constructor; Description; OpenslideServerBuilder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Attempt to create ImageServer<T> from the specified path. ImageServerBuilder.UriImageSupport<BufferedImage>; checkImageSupport(URI uri,; String... args). Check whether a URI is supported by this builder. String; getDescription(). Get a short, human-readable description for display in a GUI. Class<BufferedImage>; getImageType(). Returns the base class for the images supported by this server. String; getName(). Get a human-readable name for the kind of ImageServer this builds. boolean; matchClassName(String... classNames). Check if this provider matches one or more specified classnames. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenslideServerBuilder; public OpenslideServerBuilder(). Method Details. buildServer; public ImageServer<BufferedImage> buildServer(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Attempt to create ImageServer<T> from the specified path. Specified by:; buildServer in interface ImageServerBuilder<BufferedImage>; Parameters:; uri - ; args - optional String arguments that may be used by the builder.; Returns:. checkImageSupport; public ImageServerBuilder.UriImageSupport<BufferedImage> checkImageSupport(URI uri,; String... args); Description copied from interface: ImageServerBuilder; Check whether a URI is supported by this builder.; ; This can be used to gain an estimate of how well the format is supported, and the number of images found. Specified by:; checkImageSupport in interface ImageServerBuilder<BufferedImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html:1859,inherit,inherited,1859,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideServerBuilder.html,2,['inherit'],['inherited']
Modifiability,"lds for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:47153,plugin,plugin,47153,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"ld | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.extension.svg; Class SvgExtension. java.lang.Object; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtensi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1246,inherit,inherited,1246,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,1,['inherit'],['inherited']
Modifiability,"le 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for a pen input device. QuPathResources. Load strings from the default resource bundle. QuPathStyleManager. Class to facilitate the use of different styles within QuPath. QuPathStyleManager.Fonts. Available font families. QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. QuPathTMAViewer. Standalone viewer for looking at TMA summary results. QuPathViewer. JavaFX component for viewing a (possibly large) image, along with overlays. QuPathViewerListener. Interface for defining a listener that needs to know whenever the data ; related to a QuPathViewer has changed in some way - such as by changing ; the underlying ImageDat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:47256,plugin,plugin,47256,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"le class to store event time and censored flag. keepDisplaySettings - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; keepDisplaySettingsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). KEY_CASE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measurements.MeasurementList. Get all available names as a set. killRunningScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  . L. LAB_DISTANCE - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image converted to CIELAB, Euclidean distance calculated. label(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. label(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. lab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:642442,variab,variable,642442,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"le existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingExtension. General-purpose processing and machine learning commands. ProcessingExtension.OpenCVCommands. Commands based on OpenCV. Processor<S,T,U>. A generic processor designed to work with Parameters and provide an output. Project<T>. Data structure to manage images and associated data in QuPath. ProjectBrowser. Component for previewing and selecting images within a project. ProjectClassifierBindings. Class to help with formatting text fields for entering pixel and object classifier names. ProjectCommands. Helper class implementing simple 'single-method' commands related to projects. ProjectDialogs. Dialogs specifically related to managing projects. ProjectImageEntry<T>. Class to represent an image entry within a project. ProjectIO. Read QuPath projects. Projects. Static methods to help when working with Projects. PropertiesLanguage. Class for the representation of properties and config files in QuPath. PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonAutoCompletor. Auto completion support for Python. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. QP. Collection of static methods that are useful for scripting. QPEx. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QuPath. Main QuPath launcher. QuPath_Send_Overlay_to_QuPath. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_ROI_to_QuPath. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPathApp. Launcher application to start QuPath. QuPathExtension. Simple interface for QuPath extensions. QuPathGUI. Main GUI for QuPath, written using JavaFX. QuPathPenManager. Helper class for managing pressure-sensitive input. QuPathPenManager.PenInputManager. Interface defining minimal behavior for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:46633,config,config,46633,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['config'],['config']
Modifiability,"le to convert a PointROI to a java.awt.Shape. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3689,inherit,inherited,3689,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['inherit'],['inherited']
Modifiability,"le) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:546947,plugin,plugins,546947,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"le, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an empty, closed polygon ROI consisting of a single point. createPolygonROI(List<Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a closed polygon ROI from a list of points. createPolylineEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPolylineROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a polygon ROI from an array of x and y coordinates. createPolylineROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an empty polyline ROI consisting of a single point. createPolylineROI(List<Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a polyline ROI from a list of points. createPreferencesDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to adjust QuPath preferences. createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S, T>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProcessor(MeasurementProcessor.CustomMeasurement<S, T>...) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located recta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:212017,extend,extends,212017,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"le...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the current hierarchy. setDetectionIntensityClassifications(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for detections in the specified hierarchy. setDisplayMaxValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the last color in the color mapper. setDisplayMinValue(double) - Method in class qupath.lib.gui.tools.MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:924041,plugin,plugins,924041,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"le>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:2557,inherit,inherited,2557,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['inherit'],['inherited']
Modifiability,"leCommand(QuPathGUI qupath). Command to show a summary measurement table, for PathObjects of a specified type (e.g. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static void; copyTableContentsToClipboard(PathTableData<?> model,; Collection<String> excludeColumns). Get a single String representing the data in a table and copy it to the clipboard. static <T> String; getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a single String representing the data in a table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:1769,extend,extends,1769,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,1,['extend'],['extends']
Modifiability,"leObject.Status>; qupath.lib.plugins.ParallelTileObject.Status. All Implemented Interfaces:; Serializable, Comparable<ParallelTileObject.Status>, Constable. Enclosing class:; ParallelTileObject. public static enum ParallelTileObject.Status; extends Enum<ParallelTileObject.Status>; Current processing status for the tile. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DONE. Tile processing complete. PENDING. Tile waiting to be processed. PROCESSING. Tile currently being processed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ParallelTileObject.Status; valueOf(String name). Returns the enum constant of this class with the specified name. static ParallelTileObject.Status[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. PENDING; public static final ParallelTileObject.Status PENDING; Tile waiting to be processed. PROCESSING; public static final ParallelTileObject.Status PROCESSING; Tile currently being processed. DONE; public static final ParallelTileObject.Status DONE; Tile processing complete. Method Details. values; public static ParallelTileObject.Status[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ParallelTileObject.Status valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html:1473,inherit,inherited,1473,javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.Status.html,1,['inherit'],['inherited']
Modifiability,lean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the Laplacian of Gaussian image. LARGE - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; LARGE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; lastChangeTimestamp() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get a property representing the timestamp of the last recorded change for any property. lastValue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify a string representing the axes layout that the model expects as input. lazyInitialize(boolean) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Optionally request lazy initialization. LEGACY_KEY_UNIQUE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Deprecated. legacyPathToURI(Str,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:648041,plugin,plugins,648041,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lean) - Method in interface qupath.lib.projects.Project. Remove an image from the project, optionally including associated data. removeInteriorRings(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Fill all interior rings for the specified geometry that have an area < a specified threshold. removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Remove a JSON DropHandler. removeListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a hierarchy change listener. removeMeasurements(Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the current image data. removeMeasurements(String...) - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements with the specified names. removeMeasurements(PathObjectHierarchy, Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the specified hierarchy. removeMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Remove a metadata value. removeNames(PathClass, String...) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeNames(PathClass, Collection<String>) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a single object from the hierarchy, firing a remove event. removeObject(PathObject, boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified object from the current ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:846102,extend,extends,846102,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"lean; duplicateObjects(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Duplicate the specified objects, assigning new IDs for each object. static boolean; duplicateObjects(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects,; boolean createNewIDs). Duplicate the specified objects, optionally creating new IDs. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotation objects. static boolean; duplicateSelectedObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Duplicate the selected objects. static Map<String,PathObject>; findByStringID(Collection<String> ids,; Collection<? extends PathObject> pathObjects). Find objects based on a String representation of their IDs. static Map<UUID,PathObject>; findByUUID(Collection<UUID> ids,; Collection<? extends PathObject> pathObjects). Find objects based on their IDs. static List<PathObject>; findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting). Get all the objects with ROIs that are outside the bounds of an image. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. static List<PathObject>; getAncestorList(PathObject pathObject). Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). static TMACoreObject; getAncestorTMACore(PathObject pathObject). Get the TMA core object that contains a s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:3942,extend,extends,3942,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"lean constrainToBounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected boolean; preferReturnToMove(). Returns false. protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BrushToolEventHandler; public BrushToolEventHandler(). Method Details. preferReturnToMove; protected boolean preferReturnToMove(); Returns false. Returns:. getRequestedCursor; protected Cursor getRequestedCursor(). mouseExited; public void mouseExited(MouseEvent e). mouseEntered; public void mouseEntered(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). isSubtractMode; protected boolean isSubtractMode(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). getBrushDiameter; protected double getBrushDiameter(). createShape; protected Geometry createShape(MouseEvent e,; double x,; double y,; boolean useTiles,; Geometry addToShape); Create a new Geometry using the specified tool, assuming a user click/drag at the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html:3089,inherit,inherited,3089,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/BrushToolEventHandler.html,1,['inherit'],['inherited']
Modifiability,"lean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection; public static void resetSelection(ImageData<?> imageData); Reset the selection for an image. Parameters:; imageData - . resetClassifications; public static void resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . createWorkflowDisplayDialog; public static Stage createWorkflowDisplayDialog(QuPathGUI qupath); Create a dialog to show the workflow history for the current image data. Parameters:; qupath - the QuPath instance; Returns:; a workflow display dialog. showWorkflowScript; public static void showWorkflowScript(QuPathGUI qupath,; ImageData<?> imageData); Show the QuPath script editor with a script corresponding to the command history of a specified image. Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24980,extend,extends,24980,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['extend'],['extends']
Modifiability,"lection of channels from an image display. BrightnessContrastCommand. Command to show a Brightness/Contrast dialog to adjust the image display. BrightnessContrastHistogramPane. A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. BrightnessContrastSettingsPane. A pane to save and load display settings, using a ResourceManager. BrightnessContrastSliderPane. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrushToolEventHandler. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BufferedImageOverlay. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageTools. Static methods for working with BufferedImages and QuPath objects. BuildInfo. Basic version information about the current QuPath build. CellCountsCV. Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection. CellIntensityClassificationCommand. Command to (sub)classify cells as Negative/Positive or Negative/1+/2+/3+ based on a single (usually intensity-based) measurement. CellTools. Helper class for working with PathObjects that represent cells. ChannelColor. A simple class to store the color of an image channel. ChannelDisplayInfo. Interface used to control the display of single channels of image data, where; 'single channel' means one value per pixel (in Java's parlance, one band for the; SampleModel). ChannelDisplayInfo.ModifiableChannelDisplayInfo. Helper interface to indicate that the display ranges can be modified. ChannelDisplayMode. Display mode for an image channel, used in combination with ImageDisplay and ChannelDisplayInfo. ChannelDisplayTransformServer. ImageServer that applies a color transform to an image. ChannelSettings. A simple class to store the main information needed by QuPath to display an image channel; with a requested co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:5475,plugin,plugin,5475,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"lection(). Get the range of the currently-selected text. default int; getSelectionEnd(). Get the ending position for any selection (exclusive). default int; getSelectionStart(). Get the starting position for any selection (inclusive). boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; redo(). Request redo. default void; requestFocus(). Request that the control is focused. default void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; setContextMenu(ContextMenu menu). Set the context menu for the control. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from interface qupath.lib.gui.scripting.EditableText; appendText, clear, deleteText, deselect, getCaretPosition, getSelectedText, getSelectionLength, getText, insertText, positionCaret, replaceSelection, selectRange, setText. Methods inherited from interface qupath.lib.gui.logging.TextAppendable; appendText. Property Details. text; StringProperty textProperty; Text currently in the editor control. See Also:. textProperty(). selectedText; ObservableValue<String> selectedTextProperty; Text currently selected in the editor control. See Also:. selectedTextProperty(). wrapText; BooleanProperty wrapTextProperty; Request wordwrap. See Also:. wrapTextProperty(). caretPosition; ReadOnlyIntegerProperty caretPositionProperty; Property for the current caret position. See Also:. caretPositionProperty(). Method Details. textProperty; StringProperty textProperty(); Text currently in the editor control. Returns:. getSelection; IndexRange getSelection(); Get the range of the currently-selected text. Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:2880,inherit,inherited,2880,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['inherit'],['inherited']
Modifiability,"left parentheses (. handleLineComment(EditableText) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle line comments. handleNewLine(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle a new line. handleOutput(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler. Optional method to handle the output of a Processor. handleOutput(Parameters<S, T>, U) - Method in class qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler;  ; handleOutputClassification(Parameters<?, ?>, String) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass, given by its name. handleOutputClassification(Parameters<?, ?>, PathClass) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by setting a PathClass. handleOutputMeasurements(Parameters<?, ?>, Map<String, ? extends Number>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Handle the output of a pixel processor by adding measurements to the path object. handleQuotes(EditableText, boolean, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle single/double quotes. handleRightParenthesis(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle right parentheses ). handleTabPress(EditableText, boolean) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Handle tab key. HaralickFeatureComputer - Class in qupath.lib.analysis.features. Static methods for computing Haralick texture features. HaralickFeatureComputer() - Constructor for class qupath.lib.analysis.features.HaralickFeatureComputer;  ; HaralickFeatures - Class in qupath.lib.analysis.features. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin - Class in qupath.lib.algorithms. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:566521,extend,extends,566521,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"lelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:2693,inherit,inherited,2693,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['inherit'],['inherited']
Modifiability,"lements qupath.opencv.tools.MultiscaleFeatures.Hessian); qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.chart.Chart. javafx.scene.chart.XYChart<X,Y>. javafx.scene.chart.AreaChart<X,Y>. qupath.lib.gui.charts.HistogramChart. javafx.scene.layout.Pane. javafx.scene.layout.BorderPane. qupath.lib.gui.commands.display.BrightnessContrastChannelPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane; qupath.lib.gui.charts.ChartThresholdPane. javafx.scene.layout.GridPane. qupath.lib.gui.commands.display.BrightnessContrastSettingsPane; qupath.lib.gui.commands.display.BrightnessContrastSliderPane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.opencv.ml.objects.features.Normalizer; qupath.lib.plugins.parameters.NumericParameter<S>. qupath.lib.plugins.parameters.DoubleParameter; qupath.lib.plugins.parameters.IntParameter. qupath.opencv.tools.NumpyTools; qupath.process.gui.commands.ObjectClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.ObjectClassifierLoadCommand (implements java.lang.Runnable); qupath.lib.classifiers.object.ObjectClassifiers; qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder<T>; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory (implements com.google.gson.TypeAdapterFactory); qupath.lib.gui.panes.ObjectDescriptionPane<T>; qupath.lib.analysis.features.ObjectMeasurements; qupath.lib.objects.utils.ObjectMerger; qupath.lib.gui.actions.menus.ObjectsMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions; qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions; qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions; qupath.lib.gui.actions.menus.Ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:22315,plugin,plugins,22315,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); classificationMap - a map used to convert labels intoo; Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(BiFunction<ROI,Number,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation).; The second argument is the label, which can be used e.g. to set a classification.; Returns:; the converter. builder; public static PixelProcessor.Builder<Mat,Mat,Mat> builder(Processor<Mat,Mat,Mat> processor); Crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6820,extend,extends,6820,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"ler.ViewerMover. Stop moving immediately. stopWaiting(RegionRequest) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; store(DefaultImageRegionStore) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the region store used to paint the underlying image. storeMetadataValue(String, String) - Method in class qupath.lib.objects.PathObject. Store a metadata value. StringParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a String value. stripExtension(String) - Static method in class qupath.lib.common.GeneralTools. Strip the extension from a file name or path, leaving the rest of the string unchanged. stripInvalidFilenameChars(String) - Static method in class qupath.lib.common.GeneralTools. Strip characters that would make a String invalid as a filename. STROMA - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Stroma classification. STROMA - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Stroma classification. STRUCTURE_TENSOR_COHERENCE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Coherence, defined as ((l1 - l2)/(l1 + l2))^2 where l1 and l2 are the largest and second largest ; eigenvalues of the structure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:999408,variab,variable,999408,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"lerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be app",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1812,plugin,plugins,1812,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability,"le r,; double g,; double b). Create a stain vector. static double[]; cross3(double[] u,; double[] v). Compute the cross product of two vectors. double[]; getArray(). Get the stain vector as a 3 element array (red, green, blue). double; getBlue(). Get the blue component of the (normalized) stain vector. int; getColor(). Get a Color that (roughly) corresponds to color represented by this stain vector. double; getGreen(). Get the green component of the (normalized) stain vector. String; getName(). Returns the name of the stain vector. double; getRed(). Get the red component of the (normalized) stain vector. boolean; isResidual(). Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. static StainVector; makeDefaultStainVector(StainVector.DefaultStains stain). Get a default stain vector. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. StainVector; public StainVector(); Default constructor, required for Externalizable interface. Method Details. makeDefaultStainVector; public static StainVector makeDefaultStainVector(StainVector.DefaultStains stain); Get a default stain vector. Parameters:; stain - ; Returns:. createStainVector; public static StainVector createStainVector(String name,; double r,; double g,; double b); Create a stain vector. Parameters:; name - the name of the stain; r - the stain vector red component; g - the stain vector green component; b - the stain vector blue component; Returns:. isResidual; public boolean isResidual(); Returns true if this vector represents the residual (orthogonal) stain, used whenever color deconvolution is required with two stains only. Returns:. getName; public String getName(); Returns the name of the stain vector. Returns:. getRed; public dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html:2407,inherit,inherited,2407,javadoc/docs/qupath/lib/color/StainVector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.html,1,['inherit'],['inherited']
Modifiability,"lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using arrays of String values and associated numeric values. series(String, String[], double[], List<T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections of String values and associated numeric values, with an associated custom object. series(String, String[], double[], T[]) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections String values and associated numeric values, with an associated custom object. series(String, Collection<? extends Number>, Collection<? extends Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot using collections of numeric values. series(String, Collection<? extends String>, Collection<T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections of numeric values. series(String, Collection<? extends T>, Function<T, Number>, Function<T, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<? extends T>, Function<T, PathClass>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<XYChart.Data<Number, Number>>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot from existing data plots. series(String, Collection<XYChart.Data<String, Number>>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart from existing data plots. series(String, Map<String, T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using a map of String values and associated numeric values. SERIF - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Preferred serif font. server(ImageServer<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:910773,extend,extends,910773,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"lib.gui.dialogs.ParameterPanelFX. Add a ParameterChangeListener to be notified as parameters are modified by the user. addPathObject(PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0; use PathObjectHierarchy.addObject(PathObject) instead (for naming consistency). addPathObject(PathObject) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.addChildObject(PathObject). addPathObjectBelowParent(PathObject, PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0; use PathObjectHierarchy.addObjectBelowParent(PathObject, PathObject, boolean). addPathObjectListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). addPathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. addPathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.addChildObjects(Collection). addPathObjectSelectionListener(PathObjectSelectionListener) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Add listener for selection changes. addPathObjectWithoutUpdate(PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). addPixelClassifierMeasurements(String, String) - Static method in class qupath.lib.scripting.QP. Add measurements from pixel classification to the selected objects. addPixelClassifierMeasurements(PixelClassifier, String) - Static method in class qupath.lib.scri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:24200,extend,extends,24200,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"lib.gui.measure, ; qupath.lib.gui.panes, ; qupath.lib.gui.prefs, ; qupath.lib.gui.scripting, ; qupath.lib.gui.scripting.completors, ; qupath.lib.gui.scripting.languages, ; qupath.lib.gui.scripting.richtextfx, ; qupath.lib.gui.scripting.richtextfx.stylers, ; qupath.lib.gui.scripting.syntax, ; qupath.lib.gui.tma, ; qupath.lib.gui.tools, ; qupath.lib.gui.viewer, ; qupath.lib.gui.viewer.overlays, ; qupath.lib.gui.viewer.recording, ; qupath.lib.gui.viewer.tools, ; qupath.lib.gui.viewer.tools.handlers, ; qupath.lib.images, ; qupath.lib.images.servers, ; qupath.lib.images.servers.bioformats, ; qupath.lib.images.servers.openslide, ; qupath.lib.images.servers.openslide.jna, ; qupath.lib.images.writers, ; qupath.lib.images.writers.ome, ; qupath.lib.io, ; qupath.lib.measurements, ; qupath.lib.objects, ; qupath.lib.objects.classes, ; qupath.lib.objects.hierarchy, ; qupath.lib.objects.hierarchy.events, ; qupath.lib.objects.utils, ; qupath.lib.plugins, ; qupath.lib.plugins.objects, ; qupath.lib.plugins.parameters, ; qupath.lib.plugins.workflow, ; qupath.lib.projects, ; qupath.lib.regions, ; qupath.lib.roi, ; qupath.lib.roi.interfaces, ; qupath.lib.scripting, ; qupath.lib.scripting.languages, ; qupath.opencv, ; qupath.opencv.dnn, ; qupath.opencv.features, ; qupath.opencv.io, ; qupath.opencv.ml, ; qupath.opencv.ml.objects, ; qupath.opencv.ml.objects.features, ; qupath.opencv.ml.pixel, ; qupath.opencv.ops, ; qupath.opencv.tools, ; qupath.process.gui, ; qupath.process.gui.commands, ; qupath.process.gui.commands.density, ; qupath.process.gui.commands.ml, ; qupath.process.gui.commands.ui, ; qupathj. Class Hierarchy. java.lang.Object. qupath.opencv.dnn.AbstractDnnModel<T> (implements qupath.opencv.dnn.DnnModel). qupath.opencv.dnn.OpenCVDnn (implements qupath.lib.io.UriResource). qupath.lib.gui.images.stores.AbstractImageRenderer (implements qupath.lib.gui.images.stores.ImageRenderer). qupath.lib.display.ImageDisplay. qupath.lib.images.servers.AbstractImageServer<T> (implements qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:2459,plugin,plugins,2459,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"lib.gui.tools.GuiTools. Prompt the user to set properties for the currently-selected annotation(s). promptToSetFontSize() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Update the font size for the script editor and console. promptToSetGridLineSpacing(OverlayOptions) - Static method in class qupath.lib.gui.commands.Commands. Prompt to input the spacing for the grid lines optionally displayed on viewers. promptToSetImageType(ImageData<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.panes.ImageDetailsPane. Prompt the user to set the ImageData.ImageType for the image. promptToSimplifySelectedAnnotations(ImageData<?>, double) - Static method in class qupath.lib.gui.commands.Commands. Show a prompt to selected annotations in a hierarchy. promptToUpdateUris(Collection<T>, URI, URI, boolean) - Static method in class qupath.lib.gui.commands.UpdateUrisCommand. Show dialog prompting the user to update URIs for missing files. PROP_JAVADOC_PATH - Static variable in class qupath.lib.gui.JavadocViewer. Name of the system property used to set the javadoc path. PROPERTIES - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:797865,variab,variable,797865,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"lib.gui.viewer.OverlayOptions. Set the GridLines object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same as that of another hierarchy. setID(UUID) - Method in class qupath.lib.objects.PathObject. Set the ID for this object. setImageData(ImageData<?>) - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:928056,plugin,plugins,928056,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lib.images.servers.ChannelTransformFeatureServer. All Implemented Interfaces:; AutoCloseable, ImageServer<BufferedImage>. public class ChannelTransformFeatureServer; extends TransformingImageServer<BufferedImage>; A TransformingImageServer that applies color transforms to generate channels. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). protected ColorModel; getColorModel();  ; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:1560,inherit,inherited,1560,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['inherit'],['inherited']
Modifiability,"lib.images.servers.PixelCalibration.Builder. Enclosing class:; PixelCalibration. public static class PixelCalibration.Builder; extends Object; Builder class for PixelCalibration objects. Constructor Summary; Constructors. Constructor; Description; Builder(). Create a new builder with default (uncalibrated) values. Builder(PixelCalibration cal). Create a new builder, initialized values of an existing PixelCalibration. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; build(). Build PixelCalibration object. PixelCalibration.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel width and height in microns (the most common calibration value). PixelCalibration.Builder; timepoints(TimeUnit timeUnit,; double... timepoints). Specify timepoints and units. PixelCalibration.Builder; zSpacingMicrons(Number zSpacingMicrons). Specify spacing between z-slices, in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(); Create a new builder with default (uncalibrated) values. Builder; public Builder(PixelCalibration cal); Create a new builder, initialized values of an existing PixelCalibration. Parameters:; cal - . Method Details. pixelSizeMicrons; public PixelCalibration.Builder pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons); Specify the pixel width and height in microns (the most common calibration value). Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; Returns:. timepoints; public PixelCalibration.Builder timepoints(TimeUnit timeUnit,; double... timepoints); Specify timepoints and units. Parameters:; timeUnit - ; timepoints - ; Returns:. zSpacingMicrons; public PixelCalibration.Builder zSpacingMicrons(Number zSpacingMicrons); Specify spacing between z-slices, in microns. Parameters:; zSpacingMicron",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html:1423,inherit,inherited,1423,javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.Builder.html,1,['inherit'],['inherited']
Modifiability,"lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814187,plugin,plugins,814187,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lib.regions.ImageRegion. Deprecated.; v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). getPlane(int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. getPlane(ImageRegion) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. getPlane(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, and z and t set from an existing ROI. getPlaneWithChannel(int, int, int) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane, where the channel, z-slice and time point can be specified. getPlaneWithChannel(ROI) - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel, z and t set from an existing ROI. getPluginClass() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Get the full name of the plugin class. getPointObjects(Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get objects that contain Point ROIs. getPointObjects(Collection<T>) - Static method in class qupath.lib.objects.PathObjectTools. Get a list of objects with point ROIs from a collection of objects. getPoolSizeProp() - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager;  ; getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.Abstra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:486893,plugin,plugins,486893,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lic static class MeasurementProcessor.Functions; extends Object; Functions for calculating measurements from an array of pixels. Constructor Summary; Constructors. Constructor; Description; Functions();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Function<double[],Double>; max(). Create a function to calculate the maximum value of an array. static Function<double[],Double>; mean(). Create a function to calculate the mean (average) value of an array. static Function<double[],Double>; min(). Create a function to calculate the minimum value of an array. static Function<double[][],Double>; pearsonsCorrelation(). Create a function to calculate Pearson's correlation coefficient. static Function<double[],Double>; percentile(double percentile). Create a function to calculate a percentile. static Function<double[][],Double>; spearmansCorrelation(). Create a function to calculate Spearman's correlation coefficient. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Functions; public Functions(). Method Details. percentile; public static Function<double[],Double> percentile(double percentile); Create a function to calculate a percentile. Parameters:; percentile - ; Returns:. min; public static Function<double[],Double> min(); Create a function to calculate the minimum value of an array. Returns:. max; public static Function<double[],Double> max(); Create a function to calculate the maximum value of an array. Returns:. mean; public static Function<double[],Double> mean(); Create a function to calculate the mean (average) value of an array. Returns:. pearsonsCorrelation; public static Function<double[][],Double> pearsonsCorrelation(); Create a function to calculate Pearson's correlation coefficient.; This requires a double[2][n] input array, where n is the number of pixels. Returns:. spearmansCorrelation; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html:1539,inherit,inherited,1539,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Functions.html,1,['inherit'],['inherited']
Modifiability,"lic static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1716,inherit,inherited,1716,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['inherit'],['inherited']
Modifiability,"lic <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; List<T> extra); Create a bar chart using collections of String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - list of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; Collection<XYChart.Data<String,Number>> data); Create a bar chart from existing data plots. Parameters:; name - ; data - the data points to plot; Returns:; this builder. updateChart; protected void updateChart(BarChart<String,Number> chart); Method that applies properties of this builder to the chart.; Each subclass should call the method in the parent class to ensure its properties ; have been applied. Parameters:; chart - . classifications; public Charts.BarChartBuilder classifications(Collection<? extends PathObject> pathObjects); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; Returns:; this builder. createNewChart; protected BarChart<String,Number> createNewChart(Axis<String> xAxis,; Axis<Number> yAxis). getThis; protected Charts.BarChartBuilder getThis(). yAxisMin; public Charts.BarChartBuilder yAxisMin(double lowerBound); Set the lower bound for the y-axis. Parameters:; lowerBound - ; Returns:; this builder. yAxisMax; public Charts.BarChartBuilder yAxisMax(double upperBound); Set the upper bound for the y-axis. Parameters:; upperBound - ; Returns:; this builder. yAxisRange; public Charts.BarChartBuilder yAxisRange(double lowerBound,; double upperBound); Set the lower and upper bounds for the y-axis. Parameters:; lowerBound - ; upperBound - ; Returns:; this builder. createNewChart; protected BarChart<String,Number> createNewChart(). xLabel; public Charts.BarChartBuilder xLabel(String label); Specify the x-axis label. Parameters:; label ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:7947,extend,extends,7947,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"lidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the number of vertices used to represent this area. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. nVertices; public int nVertices(); Get the number of vertices used to represent this area. There is some 'fuzziness' to the meaning of this, since; curved regions will be flattened and the same complex areas may be represented in different ways - nevertheless; it provides some measure of the 'complexity' of the area. Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getRoiName; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:4364,inherit,inherited,4364,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['inherit'],['inherited']
Modifiability,"list of the source objects. centroidToCentroidDistance2D(Collection<PathObject>, Collection<PathObject>, double, double, String) - Static method in class qupath.lib.analysis.DistanceTools. Calculate the distance between source object centroids and the centroid of specified target objects, adding the result to the measurement list of the source objects. CHANGE_CLASSIFICATION - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more object classifications. CHANGE_MEASUREMENTS - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more object measurements. CHANGE_OTHER - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more objects that is more complex than the other changes allow for. changed(ObservableValue<? extends QuPathViewer>, QuPathViewer, QuPathViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:90224,extend,extends,90224,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"litConnectedRegions(SparseImageServer server,; double distancePixels,; boolean permitBoundsOverlap). Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getDefaultColorModel; protected ColorModel getDefaultColorModel(); Description copied from class: AbstractTileableImageServer; Get an appropriate colormodel that may be used. The default implementation uses ; the default RGB color model for RGB images, or else requests a low-resolution thumbnail ; to extract the color model from it. If neither implementation is sufficient, subclasses ; should override this method. Overrides:; getDefaultColorModel in class AbstractTileableImageServer; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenatin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html:3384,inherit,inherited,3384,javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.html,2,['inherit'],['inherited']
Modifiability,"lizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:1758,plugin,plugin,1758,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,2,['plugin'],['plugin']
Modifiability,"lization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.roi. Class qupath.lib.roi.AreaROI; class AreaROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.EllipseROI; class EllipseROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.GeometryROI; class GeometryROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. writeReplace; private Object writeReplace(). Serialized Fields. checkValid; boolean checkValid. geometry; Geometry geometry. Class qupath.lib.roi.LineROI; class LineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. x; double x. x2; double x2. y; double y. y2; double y2. Class qupath.lib.roi.PointsROI; class PointsROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. points;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:11673,extend,extends,11673,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"ll MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; addObject(PathObject pathObject). Add the specified object to the current PathObjectHierarchy. static void; addObjects(Collection<PathObject> pathObjects). Add the specified collection of objects to the current PathObjectHierarchy. static void; addObjects(PathObject[] pathObjects). Add the specified array of objects to the current PathObjectHierarchy. static void; addPixelClassifierMeasurements(String classifierName,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addShapeMeasurements(String... features). Add the specified shape measurements to the current selected objects of the current image. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures). Add shape measurements to the specified objects. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements to the specified objects. static String; buildFilePath(String first,; String... more). Build a file path from multiple components. static String; buildPathInProject(String... more). Build a file or directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:2968,extend,extends,2968,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ll MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection.; Returns:; a feature collection that can be used with GsonTools. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1678,extend,extends,1678,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,2,['extend'],['extends']
Modifiability,"ll if no project/image is open. getProjectEntryMetadataValue(String) - Static method in class qupath.lib.scripting.QP. Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493506,plugin,plugins,493506,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"llMembraneDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Cell detection that takes into consideration membrane staining.; ; This command only works (somewhat) for hematoxylin and DAB staining.; If membrane quantification is not required, WatershedCellDetection is more robust and versatile. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WatershedCellMembraneDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.Abs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:1853,plugin,plugin,1853,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugin']
Modifiability,"llection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2753,extend,extends,2753,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,4,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"llel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AbstractPlugin();  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected abstract void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<T> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. protected abstract Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:1819,plugin,plugin,1819,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugin']
Modifiability,"llredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. See Also:. annotationStrokeThicknessProperty(). usePixelSnapping; public static BooleanProperty usePixelSnappingProperty; If true, pixels should be snapped to integer coordinates when using the drawing tools. See Also:. usePixelSnappingProperty(). Constructor Details. PathPrefs; public PathPrefs(). Method Details. useSystemMenubarProperty; @Deprecated; public static BooleanProperty useSystemMenubarProperty(); Deprecated.; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Returns:; a bound boolean property, which is ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40989,adapt,adapt,40989,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['adapt'],['adapt']
Modifiability,"loaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. Returns:. annotationStrokeThicknessProperty; public static DoubleProperty annotationStrokeThicknessProperty(); Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to the current viewer magnification. Returns:. usePixelSnappingProperty; public static BooleanProperty usePixelSnappingProperty(); If true, pixels should be snapped to integer coordinates when using the drawing tools. Returns:. getDefaultQuPathUserDirectory; public static Path getDefaultQuPathUserDirectory(); Get the default location for extensions.; ; This is platform and user-specific. It isn't necessarily used (and doesn't necessarily exist). Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:63619,adapt,adapt,63619,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['adapt'],['adapt']
Modifiability,"loaded from the user preferences. createPixelClassificationServer(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassificationServer(ImageData<BufferedImage>, PixelClassifier, String, ColorModel, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<PixelClassifier>, StringExpression) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Create a standard button pane for pixel classifiers, to create, measure and classify objects. createPlugin(Class<? extends PathPlugin>) - Method in class qupath.lib.gui.QuPathGUI. Create a plugin from a specified class. createPluginAction(String, Class<? extends PathPlugin>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an action for a plugin to be run through this QuPath instance. createPluginAction(String, PathPlugin<BufferedImage>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action to call the specified plugin for the current image. createPointsEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPointsROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from an array of x and y coordinates. createPointsROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI containing a single point. createPointsROI(List<? extends Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from a list of points. createPointsROI(ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an empty points ROI. createPolygonEventHandler() - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:209760,extend,extends,209760,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"localization.QuPathResources. public class QuPathResources; extends Object; Load strings from the default resource bundle. Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPathResources();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.fx.localization.LocalizedResourceManager; getLocalizedResourceManager(). Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. static String; getString(String key). Get a string from the main ResourceBundle used for the QuPath user interface. static String; getString(String bundle,; String key);  ; static boolean; hasBundleForLocale(String bundle,; Locale locale);  ; static boolean; hasDefaultBundleForLocale(Locale locale);  ; static boolean; hasString(String key);  ; static boolean; hasString(String bundleName,; String key);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPathResources; public QuPathResources(). Method Details. getLocalizedResourceManager; public static qupath.fx.localization.LocalizedResourceManager getLocalizedResourceManager(); Get a localized resource manager, which can be used to manage localized strings,; and update these whenever the locale preferences are updated. Returns:. getString; public static String getString(String key); Get a string from the main ResourceBundle used for the QuPath user interface.; ; This helps separate user interface strings from the main Java code, so they can be ; maintained more easily - and potentially could be translated into different languages ; if required. Parameters:; key - ; Returns:. getString; public static String getString(String bundle,; String key). hasString; public static boolean hasString(String key). hasString; public static boolean hasString",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html:1415,inherit,inherited,1415,javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/localization/QuPathResources.html,1,['inherit'],['inherited']
Modifiability,"long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. concatChannels(Collection<ImageServer<BufferedImage>>) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate a collection of additional servers along the 'channels' dimension (iteration order is used). concatChannels(ImageServer<BufferedImage>...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate additional servers along the 'channels' dimension. config(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). config(URI) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). confirmation() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an confirmation alert dialog. constrainCellByNucleusDistance(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. constrainCellByScaledNucleus(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:135099,config,config,135099,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['config']
Modifiability,"lope, int, int) - Static method in class qupath.lib.roi.GeometryTools. Convert an Envelope to an ImageRegion. EOSIN - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. Eosin. EOSIN - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for eosin stain. Eosin_H_E - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Eosin after color deconvolution with default H&E stains. Eosin_H_E_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Eosin after color deconvolution with default H&E stains and conversion to 8-bit. eq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Create a binary image showing where an array has a specific value. eq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Create a binary image showing where two arrays have matching values. equalParameters(ParameterList, ParameterList) - Static method in class qupath.lib.plugins.parameters.ParameterList. Check whether two parameter lists contain the same parameters with the same values (or defaults, if no values are set). equals(Object) - Method in class qupath.lib.common.Version;  ; equals(Object) - Method in class qupath.lib.geom.Point2;  ; equals(Object) - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageChannel;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; equals(Object) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; equals(Object) - Method in class qupath.lib.images.servers.PixelCalibration;  ; equals(Object) - Method in class qupath.lib.images.servers.TileRequest;  ; equals(Object) - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; equals(Object) - Method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:281028,plugin,plugins,281028,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lor.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapper - Interface in qupath.lib.analysis.stats. Simple wrapper for an array or list, enabling values to be returned as doubles. ARROW_DOUBLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at both ends. ARROW_DOUBLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_END - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the end. ARROW_END_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ARROW_START - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Arrow drawing tool, with arrowhead at the start. ARROW_START_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; asMap() - Method in interface qupath.lib.measurements.MeasurementList. Get a map view of this measurements list. asType(ImagePlus, Class<T>) - Static method in class qupath.opencv.tools.GroovyCV. Helper method to convert an ImagePlus to a Mat or ImageProcessor; using Groovy's 'as' syntax. asType(ImageProcessor, Class<T>) - Static method in class qupath.opencv.to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:46528,variab,variable,46528,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"lowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Descriptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:1970,inherit,inherited,1970,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,2,['inherit'],['inherited']
Modifiability,"lp""); public class HelpMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; BUGS;  ; final org.controlsfx.control.action.Action; CITE;  ; final org.controlsfx.control.action.Action; DEMOS;  ; final org.controlsfx.control.action.Action; DOCS;  ; final org.controlsfx.control.action.Action; FORUM;  ; final org.controlsfx.control.action.Action; HELP_VIEWER;  ; final org.controlsfx.control.action.Action; INFO;  ; final org.controlsfx.control.action.Action; LICENSE;  ; final org.controlsfx.control.action.Action; QUPATH_STARTUP;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SOURCE;  ; final org.controlsfx.control.action.Action; UPDATE;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. QUPATH_STARTUP; @ActionConfig(""Action.Help.welcome""); public final org.controlsfx.control.action.Action QUPATH_STARTUP. HELP_VIEWER; public final org.controlsfx.control.action.Action HELP_VIEWER. SEP_1; public final org.controlsfx.control.action.Action SEP_1. DOCS; @ActionConfig(""Action.Help.docs""); public final org.controlsfx.control.action.Action DOCS. DEMOS; @ActionConfig(""Action.Help.video""); public final org.controlsfx.control.action.Action DEMOS. UPDATE; @ActionConfig(""Action.Help.updates""); public final org.controlsfx.control.action.Action UPDATE. SEP_2; public final org.controlsfx.control.action.Action SEP_2. CITE; @ActionConfig(""Action.Help.cite""); public final org.controlsfx.control.action.Action CITE. BUGS; @ActionConfig(""Action.Help.issues""); public final org.controlsfx.control.action.Action BUGS. FORUM; @ActionConfig(""Action.Help.forum"");",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html:1526,inherit,inherited,1526,javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/HelpMenuActions.Actions.html,1,['inherit'],['inherited']
Modifiability,"ls as positive or negative along with detection, see PositiveCellDetection.; ; To quantify membranous staining see WatershedCellMembraneDetection. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; parametersInitialized;  . Constructor Summary; Constructors. Constructor; Description; WatershedCellDetection();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. static boolean; getDebugMode(). Get whether debug mode is on or off. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:2080,plugin,plugin,2080,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugin']
Modifiability,"ls. Enclosing class:; ImageOps. public static class ImageOps.Channels; extends Object; Channel and color operations. Constructor Summary; Constructors. Constructor; Description; Channels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageOp; deconvolve(ColorDeconvolutionStains stains). Apply the (fixed) color deconvolution stains to an image. static ImageOp; extract(int... channels). Extract or rearrange channels by index. static ImageOp; maximum(). Calculate the maximum value along all channels, to give a single-channel output. static ImageOp; mean(). Average all channels together using the mean, to give a single-channel output. static ImageOp; minimum(). Calculate the minimum value along all channels, to give a single-channel output. static ImageOp; repeat(int numRepeats). Repeat the channels a specified number of times. static ImageOp; sum(). Add all channels together, to give a single-channel output. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Channels; public Channels(). Method Details. deconvolve; public static ImageOp deconvolve(ColorDeconvolutionStains stains); Apply the (fixed) color deconvolution stains to an image.; The input must be a 3-channel image, with values in the range 0-255. Parameters:; stains - ; Returns:. extract; public static ImageOp extract(int... channels); Extract or rearrange channels by index. Parameters:; channels - ; Returns:. repeat; public static ImageOp repeat(int numRepeats); Repeat the channels a specified number of times.; This is useful when wishing to apply arithmetic between a single channel and a multi-channel image. Parameters:; numRepeats - ; Returns:. sum; public static ImageOp sum(); Add all channels together, to give a single-channel output. Returns:. mean; public static ImageOp mean(); Average all channels together using the mean, to give a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html:1427,inherit,inherited,1427,javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Channels.html,2,['inherit'],['inherited']
Modifiability,"ls. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a slide label, tied to the current viewer. SmoothFeaturesPlugin<T>. Plugin to supplement the measurements for detection objects with the weighted sum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:53290,plugin,plugin,53290,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"ls.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.application.Application. qupath.lib.gui.QuPathApp; qupath.lib.gui.tma.QuPathTMAViewer. qupath.lib.roi.AreaROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:7033,plugin,plugins,7033,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"luding root object) to an output file as GeoJSON. exportImageActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ExportImageActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; exportJson(boolean) - Method in class qupath.lib.images.writers.TileExporter. Optionally export a JSON file that includes label information and image/label pairs, where available. exportMeasurements(File) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportMeasurements(OutputStream) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportObjectsAsGeoJSON(File, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. exportObjectsAsGeoJSON(OutputStream, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. exportObjectsAsGeoJSON(Path, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. ExportObjectsCommand - Class in qupath.lib.gui.commands. Command to export object(s) in GeoJSON format to an output file. exportObjectsToGeoJson(Collection<? extends PathObject>, String, String, String...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportObjectsToGeoJson(Collection<? extends PathObject>, String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportPreferences(OutputStream) - Static method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:289986,extend,extends,289986,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"lue from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String representation of QuPath's version, if known. getVersion() - Method in class qupath.lib.gui.BuildInfo. Get the version, or null if the version is unknown. getVersion() - Method in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548917,plugin,plugins,548917,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"lugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . smoothMeasurements; public static void smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames); Using the centr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:3909,extend,extends,3909,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,4,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"lugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all sele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:1739,inherit,inherited,1739,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"lugin<T>. qupath.lib.plugins.PathInteractivePlugin<T>. qupath.lib.gui.measure.PathTableData<T>; qupath.lib.gui.viewer.tools.PathTool; qupath.lib.classifiers.pixel.PixelClassifier; qupath.lib.geom.Point; java.util.function.Predicate<T>. qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. qupath.opencv.dnn.PredictionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:42352,extend,extends,42352,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['extend'],['extends']
Modifiability,"lugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8928,extend,extends,8928,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"lution using a pixel calibration and a scaling factor. inputs(Map<String, DnnShape>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shapes for one or more inputs. inputShape(int, int) - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Builder. Preferred input image width and height. inputShape(long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single input, with the default input name. INSERT_INTO_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; insertAllDefaultImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertDetectionMeasurementsAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertMuAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertObjectClassifiersAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertObjects(Collection<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Insert objects into the hierarchy, resolving their location and setting parent/child relationships. insertObjects(PathObject) - Static method in class qupath.lib.scripting.QP. Insert object into the hierarchy, resolving its location and setting parent/child relationships. insertPathObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Insert an object into the hierarchy. insertPathObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Insert a collection of objects into the hierarchy, firing a change event on completion. insertPixelClassifiersAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPExImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertQPImportAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; insertSelectedObjectsInHie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:605338,extend,extends,605338,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"lutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBuffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:3454,extend,extends,3454,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['extend'],['extends']
Modifiability,"ly abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:4945,plugin,plugin,4945,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability,"ly abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:5712,plugin,plugin,5712,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugin']
Modifiability,"ly) variance ; estimation. static ImageOp; minMax(). Normalize the minimum and maximum values of the image to fall into the range 0 - 1. static ImageOp; minMax(double outputMin,; double outputMax). Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'. static ImageOp; percentile(double percentileMin,; double percentileMax). Normalize the image, per channel, using low and high percentiles. static ImageOp; percentile(double percentileMin,; double percentileMax,; boolean perChannel,; double eps). Normalize the image using low and high percentiles. static ImageOp; sigmoid(). Replace Mat values by 1.0/(1.0 + Math.exp(-value)). static ImageOp; zeroMeanUnitVariance(boolean perChannel). Normalize a Mat by subtracting the mean value and dividing by the standard deviation. static ImageOp; zeroMeanUnitVariance(boolean perChannel,; double eps). Normalize a Mat by subtracting the mean value and dividing by the standard deviation + eps. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Normalize; public Normalize(). Method Details. minMax; public static ImageOp minMax(double outputMin,; double outputMax); Normalize the minimum and maximum values of the image to fall into the range 'outputMin - outputMax'.; ; This method is applied per-channel. Parameters:; outputMin - ; outputMax - ; Returns:. minMax; public static ImageOp minMax(); Normalize the minimum and maximum values of the image to fall into the range 0 - 1.; ; This method is applied per-channel. Returns:. percentile; public static ImageOp percentile(double percentileMin,; double percentileMax); Normalize the image, per channel, using low and high percentiles.; ; This is similar to minMax(), but using low and high percentiles rather than minimum and ; maximum respectively. Approximately 100-percentileMin-percentileMax % of the values then fall in the range 0-1.; ; This ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html:2085,inherit,inherited,2085,javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Normalize.html,2,['inherit'],['inherited']
Modifiability,"lygon (if valid), an adjusted polygon (if attempted fixes helped),; or an empty polygon if the situation could not be resolved. refineAreas; public static Geometry refineAreas(Geometry geometry,; double minSizePixels,; double minHoleSizePixels); Remove small fragments and fill small interior rings within a Geometry.; ; Note that any modifications to the geometry will result in points and lines being stripped away, ; leaving only polygons. Parameters:; geometry - input geometry to refine; minSizePixels - minimum area of a fragment to keep (the area of interior rings for polygons will be ignored); minHoleSizePixels - minimum size of an interior hole to keep; Returns:; the refined geometry (possibly the original unchanged), or empty geometry if the changes resulted in the Geometry disappearing; See Also:. removeFragments(Geometry, double); removeInteriorRings(Geometry, double). splitGeometryByLineStrings; public static List<Geometry> splitGeometryByLineStrings(Geometry polygon,; Collection<? extends Geometry> splitLines); throws IllegalArgumentException; Split an input polygonal geometry using a collection of split lines.; ; The main input must be polygonal, but the split lines can be any geometry type; their linestrings will be; extracted and used for splitting.; ; Important! This will also split a MultiPolygon into its constituent; Polygon objects as a side effect. This is to ensure consistency and avoid; cases where linestrings may span multiple polygons within the same multipolygon.; The output may be combined to form a new multipolygon later if required. Parameters:; polygon - the polygonal geometry to split; splitLines - a collection of geometries, whose union will be used to split the input geometry; Returns:; a list of polygons formed by the splitting. This may return the original geometry, or geometries within; an original collection, if these do not need to be split.; Throws:; IllegalArgumentException - if the input geometry is not polygonal; Since:; v0.5.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:11110,extend,extends,11110,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['extend'],['extends']
Modifiability,"lysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3591,inherit,inherited,3591,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['inherit'],['inherited']
Modifiability,"m Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:1384,inherit,inherited,1384,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,1,['inherit'],['inherited']
Modifiability,"m ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Measurements valueOf(String name); Returns the enum constant of this class with the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:1735,inherit,inherited,1735,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,1,['inherit'],['inherited']
Modifiability,"m constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRegionStore - Class in qupath.lib.gui.images.stores. An ImageRegionStore suitable for either Swing or JavaFX applications. defaultLocaleDisplayProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:242337,variab,variable,242337,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"m containing JSON data to read; Returns:; a list containing any PathObjects that could be parsed from the stream; Throws:; IOException; JsonSyntaxException; JsonParseException. getObjectFileExtensions; public static List<String> getObjectFileExtensions(boolean includeCompressed); Get a list of known file extensions that may contain objects, optionally including compressed files. Parameters:; includeCompressed - if true, include extensions for any compressed files that might contain objects (e.g. .zip); Returns:; file extensions for files from which objects can be read.; Since:; v0.4.0; See Also:. readObjects(Path). getObjectFileExtensions; @Deprecated; public static List<String> getObjectFileExtensions(); Deprecated.; use getObjectFileExtensions(boolean) instead. Get a list of known file extensions that may contain objects. Returns:; file extensions for files from which objects can be read.; See Also:. readObjects(Path). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. Parameters:; file - ; pathObjects - ; options - ; Throws:; IOException; See Also:. exportObjectsAsGeoJSON(Path, Collection, GeoJsonExportOptions...). exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. Parameters:; path - ; pathObjects - ; options - ; Throws:; IOException. exportObjectsAsGeoJSON; public static void exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options); throws IOException; Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. Parameters:; stream",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:13509,extend,extends,13509,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['extend'],['extends']
Modifiability,"m<PixelClassifierTools.CreateObjectOptions>; Options when creating objects from a pixel classifier.; ; This exists to avoid requiring numerous boolean arguments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DELETE_EXISTING. Delete existing child objects. INCLUDE_IGNORED. Generate objects for ignored classes (default is not to). SELECT_NEW. Set the new objects to be selected. SPLIT. Split connected components. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PixelClassifierTools.CreateObjectOptions; valueOf(String name). Returns the enum constant of this class with the specified name. static PixelClassifierTools.CreateObjectOptions[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DELETE_EXISTING; public static final PixelClassifierTools.CreateObjectOptions DELETE_EXISTING; Delete existing child objects. SPLIT; public static final PixelClassifierTools.CreateObjectOptions SPLIT; Split connected components. INCLUDE_IGNORED; public static final PixelClassifierTools.CreateObjectOptions INCLUDE_IGNORED; Generate objects for ignored classes (default is not to). SELECT_NEW; public static final PixelClassifierTools.CreateObjectOptions SELECT_NEW; Set the new objects to be selected. Method Details. values; public static PixelClassifierTools.CreateObjectOptions[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html:1825,inherit,inherited,1825,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.CreateObjectOptions.html,2,['inherit'],['inherited']
Modifiability,"m<UriUpdater.UriStatus>; Enum representing the status of a URI, i.e. whether it is known to be accessible or not. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXISTS. URI refers to a file that is known to exist. MISSING. URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN. URI status is unclear, e.g. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static UriUpdater.UriStatus; valueOf(String name). Returns the enum constant of this class with the specified name. static UriUpdater.UriStatus[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. EXISTS; public static final UriUpdater.UriStatus EXISTS; URI refers to a file that is known to exist. MISSING; public static final UriUpdater.UriStatus MISSING; URI refers to a file that does not appear to exist or is inaccessible. UNKNOWN; public static final UriUpdater.UriStatus UNKNOWN; URI status is unclear, e.g. because it does not refer to a file. Method Details. values; public static UriUpdater.UriStatus[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static UriUpdater.UriStatus valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html:1700,inherit,inherited,1700,javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.UriStatus.html,1,['inherit'],['inherited']
Modifiability,"mColumns(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static AffineTransform; fromScale(double scaleX,; double scaleY). Create an affine transform representing scaling, optionally using a different scale for x and y. static AffineTransform; identity(). Create an affine transform representing the identity transform. static AffineTransformation; toJTS(AffineTransform transform). Create a Java Topology Suite affine transformation from a Java affine transform. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AffineTransforms; public AffineTransforms(). Method Details. from2D; public static AffineTransform from2D(double[][] mat); throws IllegalArgumentException; Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong shape. fromRows; public static AffineTransform fromRows(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong length. fromColumns; public static AffineTransform fromColumns(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:2404,inherit,inherited,2404,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,1,['inherit'],['inherited']
Modifiability,"mUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:547023,plugin,plugins,547023,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"mage type is set to fluorescence. isGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass represents a built-in intensity class. isH_DAB() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623432,plugin,plugins,623432,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"mage. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.detect.tissue. Very basic global thresholding command to identify tissue regions. SimpleTissueDetection2() - Constructor for class qupath.imagej.detect.tissue.SimpleTissueDetection2. Constructor. SIMPLIFY_SHAPE - Variable in class qupath.lib.gui.actions.menus.ObjectsMenu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976883,plugin,plugin,976883,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"mage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2373,plugin,plugins,2373,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['plugin'],['plugins']
Modifiability,"mageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3370,inherit,inherited,3370,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"mageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3865,inherit,inherited,3865,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"mageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.AbstractOverlay.LocationStringFunction. See PathOverlay.getLocationString(ImageData, double, double, int, int). getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in interface qupath.lib.gui.viewer.overlays.PathOverlay. Get a location string to display when showing a specified image. getLocationString(ImageData<BufferedImage>, double, double, int, int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay;  ; getLocationStringFunction() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:430246,plugin,plugins,430246,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"mageData<BufferedImage>>, PathObjectHierarchyListener, PropertyChangeListener; Component to show measurements for a currently-selected object. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; TableView<String>; getTable(). Get the TableView. void; hierarchyChanged(PathObjectHierarchyEvent event). Notify listeners of a change in the hierarchy or its objects. void; propertyChange(PropertyChangeEvent evt);  ; void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SelectedMeasurementTableView; public SelectedMeasurementTableView(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - the ImageData associated with this table. Method Details. getTable; public TableView<String> getTable(); Get the TableView. Returns:. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html:1753,inherit,inherited,1753,javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SelectedMeasurementTableView.html,1,['inherit'],['inherited']
Modifiability,"mageServerBuilder<T>>, ImageServerMetadata, URI, String...) - Static method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). createInstance(String, double, int, int, int, int) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. createInstance(String, double, int, int, int, int, int, int) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box, z-slice and time point. createInstance(String, double, int, int, int, int, ImagePlane) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box and ImagePlane. createInstance(String, double, Collection<? extends ROI>) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROIs. createInstance(String, double, ImageRegion) - Static method in class qupath.lib.regions.RegionRequest. Create a request corresponding to a specified ImageRegion. createInstance(String, double, ROI) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROI. createInstance(String, int, double, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region, downsample and resolution level. createInstance(String, RegionRequest) - Static method in class qupath.lib.regions.RegionRequest. Create a request that matches another request but with a different path. createInstance(Collection<? extends ROI>) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains the specified ROIs. creat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:189287,extend,extends,189287,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"mageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.SimpleThresholding;  ; SimpleTissueDetection2 - Class in qupath.imagej.d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976611,plugin,plugins,976611,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"malized to OD vector (to reduce intensity information). Optical_density_sum. Sum of red, green and blue optical densities. Original. Original image. Red. Red channel only. Red_chromaticity. Red chromaticity value, red / max(1, red + green + blue). Red_OD. Red channel optical densities. RGB_mean. Mean of red, green and blue channels. Saturation. Saturation value (from RGB-HSB transform). Stain_1. First stain after color deconvolution. Stain_2. Second stain after color deconvolution. Stain_3. Third stain after color deconvolution. White. All pixels white. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorTransformer.ColorTransformMethod; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorTransformer.ColorTransformMethod[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. Original; public static final ColorTransformer.ColorTransformMethod Original; Original image. Red; public static final ColorTransformer.ColorTransformMethod Red; Red channel only. Green; public static final ColorTransformer.ColorTransformMethod Green; Green channel only. Blue; public static final ColorTransformer.ColorTransformMethod Blue; Blue channel only. Red_OD; public static final ColorTransformer.ColorTransformMethod Red_OD; Red channel optical densities. Green_OD; public static final ColorTransformer.ColorTransformMethod Green_OD; Green channel optical densities. Blue_OD; public static final ColorTransformer.ColorTransformMethod Blue_OD; Blue channel optical densities. RGB_mean; public static final ColorTransformer.ColorTransformM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html:3364,inherit,inherited,3364,javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorTransformer.ColorTransformMethod.html,1,['inherit'],['inherited']
Modifiability,"mber, Number) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify the pixel width and height in microns (the most common calibration value). pixelSnapping - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pixelType(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType as a String, e.g. pixelType(PixelType) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; pixelType(PixelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the bit-depth of the image. pixelType(PixelType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType. PixelType - Enum Class in qupath.lib.images.servers. Image bit-depths and types. placeholderTextProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:768723,variab,variable,768723,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"me prompt text that may be displayed to a user. Double; getValue(). Get the current set value (may be null). Double; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:2263,plugin,plugins,2263,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['plugin'],['plugins']
Modifiability,me() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.lang,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453075,plugin,plugins,453075,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,me. getName() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getName() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getName() - Method in interface qupath.lib.images.writers.ImageWriter. Get the name of the image writer. getName() - Method in class qupath.lib.images.writers.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.P,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:452985,plugin,plugins,452985,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"measurements for the current image. static void; saveAnnotationMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save annotation measurements for the specified image. static void; saveDetectionMeasurements(String path,; String... includeColumns). Save detection measurements for the current image. static void; saveDetectionMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save detection measurements for the specified image. static void; saveImageMeasurements(String path,; String... includeColumns). Save whole image measurements for the current image. static void; saveImageMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save whole image measurements for the specified image. static void; saveMeasurements(Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the current image for objects of a fixed type. static void; saveMeasurements(ImageData<?> imageData,; Class<? extends PathObject> type,; String path,; String... includeColumns). Save measurements for the specified image for objects of a fixed type. static void; saveTMAMeasurements(String path,; String... includeColumns). Save TMA measurements for the current image. static void; saveTMAMeasurements(ImageData<?> imageData,; String path,; String... includeColumns). Save TMA measurements for the specified image. static void; setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by number. static void; setChannelDisplayRange(String channelName,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the current ImageData for a channel identified by name. static boolean; setChannelDisplayRange(ImageData<BufferedImage> imageData,; int channel,; double minDisplay,; double maxDisplay). Set the minimum and maximum display range for the specified Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:4079,extend,extends,4079,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['extend'],['extends']
Modifiability,"ments are provided in the order red, green, blue, alpha. qupath.lib.common.GeneralTools.getNameWithoutExtension(String). v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. qupath.lib.display.ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean). use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). qupath.lib.gui.images.servers.RenderedImageServer.Builder.display(ImageDisplay). use RenderedImageServer.Builder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:3064,extend,extends,3064,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,"ments ij.plugin.PlugIn); qupathj.QuPath_Send_ROI_to_QuPath (implements ij.plugin.PlugIn); qupath.lib.gui.QuPathGUI; qupath.lib.gui.viewer.tools.QuPathPenManager; qupath.lib.gui.localization.QuPathResources; qupath.lib.gui.prefs.QuPathStyleManager; qupath.lib.gui.viewer.QuPathViewer (implements qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener, qupath.lib.gui.images.stores.TileListener<T>). qupath.lib.gui.viewer.QuPathViewerPlus. qupath.lib.objects.classes.Reclassifier; qupath.lib.roi.RectangleROI (implements java.io.Serializable); qupath.lib.gui.images.servers.RenderedImageServer.Builder; qupath.lib.projects.ResourceManager; qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.roi.RoiEditor; qupath.imagej.processing.RoiLabeling; qupath.lib.roi.ROIs; qupath.lib.roi.RoiTools; qupath.lib.analysis.stats.RunningStatistics; qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep (implements qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.process.gui.commands.ui.SaveResourcePaneBuilder<T>; qupath.lib.scripting.ScriptAttributes; qupath.lib.scripting.languages.ScriptLanguage. qupath.lib.gui.scripting.languages.CssLanguage; qupath.lib.gui.scripting.languages.DefaultScriptLanguage (implements qupath.lib.scripting.languages.ExecutableLanguage). qupath.lib.gui.scripting.languages.GroovyLanguage (implements qupath.lib.scripting.languages.ExecutableLanguage). qupath.lib.gui.scripting.languages.JsonLanguage; qupath.lib.gui.scripting.languages.MarkdownLanguage (implements qupath.lib.gui.scripting.languages.HtmlRenderer); qupath.lib.gui.scripting.languages.PlainLanguage; qupath.lib.gui.scripting.languages.PropertiesLanguage; qupath.lib.gui.scripting.languages.XmlLanguage; qupath.lib.gui.scripting.languages.YamlLanguage. qupath.lib.gui.scripting.languages.ScriptLanguageProvider; qupath.lib.scripting.ScriptParameters; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:31911,plugin,plugins,31911,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ments java.lang.Runnable); qupath.process.gui.commands.CreateCompositeClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateRegionAnnotationsCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateTrainingImageCommand; qupath.lib.gui.scripting.completors.DefaultAutoCompletor (implements qupath.lib.scripting.languages.ScriptAutoCompletor). qupath.lib.gui.scripting.completors.GroovyAutoCompletor; qupath.lib.gui.scripting.completors.PythonAutoCompletor. qupath.lib.gui.images.stores.DefaultImageRegionStore (implements qupath.lib.gui.images.stores.ImageRegionRenderer); qupath.lib.objects.DefaultPathObjectComparator (implements java.util.Comparator<T>); qupath.lib.objects.DefaultPathObjectConnectionGroup (implements java.io.Externalizable, qupath.lib.objects.PathObjectConnectionGroup); qupath.lib.roi.DefaultROIComparator (implements java.util.Comparator<T>); qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep (implements qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.lib.gui.scripting.DefaultScriptEditor (implements qupath.lib.gui.scripting.ScriptEditor). qupath.lib.gui.scripting.richtextfx.RichScriptEditor. qupath.lib.objects.hierarchy.DefaultTMAGrid (implements qupath.lib.objects.hierarchy.TMAGrid); qupath.lib.analysis.DelaunayTools; qupath.lib.analysis.DelaunayTools.Builder; qupath.lib.analysis.DelaunayTools.Subdivision; qupath.opencv.features.DelaunayTriangulation (implements qupath.lib.objects.PathObjectConnectionGroup); qupath.process.gui.commands.DensityMapCommand (implements java.lang.Runnable); qupath.process.gui.commands.density.DensityMapDialog; qupath.lib.analysis.heatmaps.DensityMaps; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters; qupath.process.gui.commands.density.DensityMapUI; qupath.lib.plugins.DetectionPluginTools; qupath.lib.gui.dialogs.Dialogs; qupath.lib.gui.dialogs.Dialogs.Builder; qupath.lib.display.DirectS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:12691,plugin,plugins,12691,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"menubar should not be used; by any window - no matter what the value of systemMenubarProperty(). static void; manageChildMenuBar(MenuBar menuBar). Request that a menubar is managed as a child menubar. static void; manageMainMenuBar(MenuBar menuBar). Request that a menubar is managed as a main menubar. static BooleanProperty; overrideSystemMenuBarProperty(). Property requesting that the system menubar should never be used for managed menubars. static void; setOverrideSystemMenuBar(boolean doOverride). Set the current value of the override property, which optionally specifies whether the system menubar should not; be used by any window - no matter what the value of systemMenubarProperty(). static ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubarProperty(). Property used to specify whether the system menubar should be used for the main QuPath stage. static void; unmanageMenuBar(MenuBar menuBar). Do not manage the system menubar status for the given menubar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. systemMenubar; public static ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubarProperty; Property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. Since:; v0.5.0; See Also:. systemMenubarProperty(). overrideSystemMenuBar; public static BooleanProperty overrideSystemMenuBarProperty; Property requesting that the system menubar should never be used for managed menubars.; This is useful if another window requires access to the system menubar.; In particular, it helps in a macOS application if a Java AWT window is being used (e.g. ImageJ),; since the conflicting attempts to get the system menubar can cause confusing behavior. See Also:. getOverrideSystemMenuBar(); setOverrideSystemMenuBar(boolean); overrideSystemM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html:2955,inherit,inherited,2955,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.html,1,['inherit'],['inherited']
Modifiability,"method accuracy. Parameters:; parentROI - ; childROI - ; Returns:. findObjectsOutsideImage; public static List<PathObject> findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting); Get all the objects with ROIs that are outside the bounds of an image. Parameters:; pathObjects - the input objects to check; server - the image to check; ignoreIntersecting - if true, consider objects that overlap the image boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the image; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, boolean); findObjectsOutsideRegion(Collection, ImageRegion, int, int, int, int, boolean). findObjectsOutsideRegion; public static List<PathObject> findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting); Get all the objects in a collection that are outside a defined region. Parameters:; pathObjects - input objects to check; region - 2D region; ignoreIntersecting - if true, consider objects that overlap the region boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the region; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, int, int, int, int, boolean). findObjectsOutsideRegion; public static List<PathObject> findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting); Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. Parameters:; pathObjects - input objects to ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:19302,extend,extends,19302,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"method in class qupath.opencv.tools.OpenCVTools. Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. imageTypeSettingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify how setting the image type should be handled for images when they are opened for the first time. imageUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). ImageWriter<T> - Interface in qupath.lib.images.writers. Interface for defining class that can write images. ImageWriterTools - Class in qupath.lib.images.writers. Static methods to access ImageWriter objects and write images. ImageWriterTools() - Constructor for class qupath.lib.images.writers.ImageWriterTools;  ; IMMUNE_CELLS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Immune cell classification. IMMUNE_CELLS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Immune cell classification. ImmutableDimension - Class in qupath.lib.geom. An immutable alternative to Java's AWT Dimension. IMPORT_IMAGES - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; IMPORT_IMAGES_LEGACY - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; importDearrayedTMAData(File) - Static method in class qupath.lib.gui.tma.TMADataIO. Import a TMA grid from an exported TMA analysis file, i.e. importFromCSV(File, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a file into the TMAGrid of an object hierarchy. importFromCSV(String, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a String into the TMAGrid of an object hierarchy. importObjectsFromFile(String) - Static method in class qupath.lib.scripting.QP. Import all PathObjects from the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:597982,variab,variable,597982,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions;  ; AnnotationPane. Component for displaying annotations within the active image. AreaROI. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. AutoCompletions. Class to deal with script auto-completions. AutoCompletions.Completion. A single completion. AutoCompletions.CompletionTokenizer. Functional interface to extract a token from a string needed to determine ; a completion. AutomateActions. Default actions associated with QuPath's 'Automate' (scripting) menu.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:2338,config,configuring,2338,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['config'],['configuring']
Modifiability,"mg - the image to convert - if null this will be requested from server.; request - the region to request, or that was requested to provide img; Returns:; Throws:; IOException. convertToImagePlus; public static PathImage<ImagePlus> convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>.; ; The PathImage element wraps up handy metadata that can be used for translating ROIs. Parameters:; server - ; request - ; Returns:; Throws:; IOException. createPathImage; public static PathImage<ImagePlus> createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request); throws IOException; Create a PathImage from an ImagePlus and region.; If imp is null, it is read from the server. Parameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFactor - ; Returns:; See Also:. convertToIJRoi(ROI, double, double, double). convertToROI; public static ROI convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:23431,extend,extends,23431,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['extend'],['extends']
Modifiability,"milarly to Swing's GridLayout(),; where controls have their widths bound to their parent. Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createColumnGrid; public static GridPane createColumnGrid(int nCols); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(). Parameters:; nCols - ; Returns:. getContents; public static Collection<Node> getContents(Parent parent,; Collection<Node> collection,; boolean doRecursive); Deprecated.; Get the nodes that are included within a Parent, optionally adding other nodes recursively.; Without the recursive search, this is similar to Parent.getChildrenUnmodifiable() in most cases, ; except that a separate collection is used. However in some cases getItems() must be used instead. ; Currently this applies only to SplitPane but this may be used elsewhere if appropriate. Parameters:; parent - ; collection - ; doRecursive - ; Returns:. getContentsOfType; public static <T extends Node> Collection<T> getContentsOfType(Parent parent,; Class<T> cls,; boolean doRecursive); Deprecated.; Get the nodes of type T that are contained within a Parent, optionally adding other nodes ; recursively. This can be helpful, for example, to extract all the Buttons or Regions within a pane ; in order to set some property of all of them. Type Parameters:; T - ; Parameters:; parent - ; cls - ; doRecursive - ; Returns:; See Also:. getContents(Parent, Collection, boolean). simplifyTitledPane; public static void simplifyTitledPane(TitledPane pane,; boolean boldTitle); Deprecated.; Simplify the appearance of a TitledPane using CSS.; This is useful if using a TitledPane to define expanded options, which should be displayed unobtrusively. Parameters:; pane - the pane to simplify; boldTitle - if true, the title should be displayed in bold. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:8976,extend,extends,8976,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['extend'],['extends']
Modifiability,"mitting links above a fixed distance. DELETE_EXISTING - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Delete existing child objects. DELETE_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; deleteActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; DeleteActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; deleteFile(File, boolean) - Static method in class qupath.lib.common.GeneralTools. Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted. deleteText(int, int) - Method in interface qupath.lib.gui.scripting.EditableText. Request deleting the text within the specified range. deleteText(int, int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; deleteText(int, int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; DELIMITER - Static variable in class qupath.lib.objects.classes.PathClass. Get the delimiter to use between names of the PathClass when converting to a string. DEMOS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; DENSITY - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a density value, such as in a density map (e.g. DensityMapCommand - Class in qupath.process.gui.commands. Command for generating density maps from detections on an image. DensityMapCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.DensityMapCommand. Constructor. DensityMapDialog - Class in qupath.process.gui.commands.density. Dialog for interactively generating a custom density map. DensityMapDialog(QuPathGUI) - Constructor for class qupath.process.gui.commands.density.DensityMapDialog. Constructor. DensityMaps - Class in qupath.lib.analysis.heatmaps. Class for constructing and using density maps. DensityMaps() - Constr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:248209,variab,variable,248209,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ml.objects.features.Normalizer. public class Normalizer; extends Object; Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(double[] offsets,; double[] scales,; double missingValue). Create a Normalizer with the specified parameters. double; getMissingValue(). Return the value that will be output after normalization if the computed value is not finite. double; getOffset(int ind). Get the offset for the specified feature. double; getScale(int ind). Get the scale factor for the specified feature. boolean; isIdentity(). Returns true if this normalizer does not actually do anything. int; nFeatures(). The total number of features supported by this Normalizer. double; normalizeFeature(int idx,; double originalValue). Normalize a single feature. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createNormalizer; public static Normalizer createNormalizer(double[] offsets,; double[] scales,; double missingValue); Create a Normalizer with the specified parameters. Parameters:; offsets - value to add to each feature; scales - value to multiply each feature, after applying the offset; missingValue - replacement value for non-finite features; Returns:; a Normalizer initialized accordingly. normalizeFeature; public double normalizeFeature(int idx,; double originalValue); Normalize a single feature. Parameters:; idx - the index of the feature; this is required to identify the corresponding offset and scale; originalValue - the original value of the feature; Returns:; the normalized value of the feature. isIdentity; public boolean isIdentity(); Returns true if this normalizer does not actually do anything.; This is the case if all offsets are zero a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html:1410,inherit,inherited,1410,javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Normalizer.html,2,['inherit'],['inherited']
Modifiability,"mmandBarDisplay>; commandBarDisplayProperty(). Property specifying where the command bar should be displayed relative to the main viewer window. static Stage; createCommandFinderDialog(QuPathGUI qupath). Create a dialog showing a filtered list of menu commands, for fast selection. static org.controlsfx.control.HiddenSidesPane; createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode). Create a component that contains a TextField for entering menu commands to run quickly. static Stage; createRecentCommandsDialog(QuPathGUI qupath). Create a dialog showing a filtered list of recently-used commands, for fast selection. static String; menusToMarkdown(). Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. static void; menusToMarkdown(QuPathGUI qupath,; Writer writer). Write a markdown representation of the menus for inclusion in the documentation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. commandBarDisplay; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty; Property specifying where the command bar should be displayed relative to the main viewer window. See Also:. commandBarDisplayProperty(). Constructor Details. CommandFinderTools; public CommandFinderTools(). Method Details. commandBarDisplayProperty; public static ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplayProperty(); Property specifying where the command bar should be displayed relative to the main viewer window. Returns:. createCommandFinderPane; public static org.controlsfx.control.HiddenSidesPane createCommandFinderPane(QuPathGUI qupath,; Node node,; ObjectProperty<CommandFinderTools.CommandBarDisplay> displayMode); Create a component that contains a TextField for entering menu commands to run quickly.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html:2374,inherit,inherited,2374,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.html,1,['inherit'],['inherited']
Modifiability,"mmary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion.; ; If no Rectangle is provided, a new one will be created. Parameters:; region - ; rect - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi); Create a Rectangle2D corresponding to bounding box of a ROI. Parameters:; roi - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi,; Rectangle2D rect); Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI.; ; If no Rectangle2D is provided, a new one will be created. Parameters:; roi - ; rect - ; Returns:. getBound",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html:1575,inherit,inherited,1575,javadoc/docs/qupath/lib/awt/common/AwtTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html,1,['inherit'],['inherited']
Modifiability,"mmary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TUMOR; public static final PathClassFactory.StandardPathClasses TUMOR; Tumor classification. STROMA; public static final PathClassFactory.StandardPathClasses STROMA; Stroma classification. IMMUNE_CELLS; public static final PathClassFactory.StandardPathClasses IMMUNE_CELLS; Immune cell classification. IGNORE; public static final PathClassFactory.StandardPathClasses IGNORE; Ignore classification, indicating what should not be further measured (e.g. background, whitespace). IMAGE_ROOT; public static final PathClassFactory.StandardPathClasses IMAGE_ROOT; Root object classification. NECROSIS; public static final PathClassFactory.StandardPathClasses NECROSIS; Necrosis classification. OTHER; public static final PathClassFactory.Standa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:1975,inherit,inherited,1975,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,2,['inherit'],['inherited']
Modifiability,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1300,inherit,inherited,1300,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,1,['inherit'],['inherited']
Modifiability,"mmary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class CellCountsCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.CellCountsCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class CellCountsCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Simple plugin to attempt a very fast cell counting based upon (smoothed) peak detection.; ; Currently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the pref",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:1221,inherit,inherited,1221,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['inherit'],['inherited']
Modifiability,"mon interface to define the contents of a menu in terms of actions. menuPathProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getMenuPath(). Menus - Class in qupath.lib.gui.actions.menus. Generate actions for installation in QuPath's main menubar. Menus() - Constructor for class qupath.lib.gui.actions.menus.Menus;  ; menusToMarkdown() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a markdown representation of the menus for inclusion in the documentation, ; using the current QuPath instance. menusToMarkdown(QuPathGUI, Writer) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Write a markdown representation of the menus for inclusion in the documentation. MenuTools - Class in qupath.lib.gui.tools. Static methods to help with creating and populating JavaFX menus. MenuTools() - Constructor for class qupath.lib.gui.tools.MenuTools;  ; merge(Collection<? extends PathObject>) - Method in class qupath.lib.objects.utils.ObjectMerger. Calculate the result of applying the merging strategy to the input objects. MERGE_SELECTED - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; mergeAnnotations(Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Merge annotations for the current hierarchy. mergeAnnotations(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Merge the specified annotations to create a new annotation containing the union of their ROIs. mergeChannels(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Merge channels from a multichannel Mat. mergeClasses(PathClass, PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Merge two classifications together. mergeObjects(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Merge objects ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:687210,extend,extends,687210,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"mon scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. If only a single input and output are required, then only predict(Mat); needs to be implemented.; ; Note: This was originally implemented in QuPath v0.3.0, but simplified for; QuPath v0.5.0. It no longer takes a generic parameter or requires; 'blob' and 'prediction' functions to be defined.; This makes it easier to implement, and also to handle memory management.; If you want the old behavior, see AbstractDnnModel. Since:; 0.5.0; Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_INPUT_NAME. Default input layer name. static final String; DEFAULT_OUTPUT_NAME. Default output layer name. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default List<Mat>; batchPredict(List<? extends Mat> mats). Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. default void; close(). Close this model if it will not be needed again. Map<String,Mat>; predict(Map<String,Mat> blobs). Prediction function that can take multiple inputs. default Mat; predict(Mat mat). Prediction function that takes a single input and gives a single output. Field Details. DEFAULT_INPUT_NAME; static final String DEFAULT_INPUT_NAME; Default input layer name. This should be used when the input layer name is known or ; unimportant (e.g. the common case of a single input). See Also:. Constant Field Values. DEFAULT_OUTPUT_NAME; static final String DEFAULT_OUTPUT_NAME; Default output layer name. This should be used when the output layer name is known or ; unimportant (e.g. the common case of a single output). See Also:. Constant Field Values. Method Details. predict; Map<String,Mat> predict(Map<String,Mat> blobs); Prediction funct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html:1877,extend,extends,1877,javadoc/docs/qupath/opencv/dnn/DnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModel.html,2,['extend'],['extends']
Modifiability,"mory(). Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class. static int; typeToChannels(int type). Determine the number of channels from a specified Mat type (which also encodes depth). static int; typeToDepth(int type). Determine the depth from a specified Mat type (which may also encode the number of channels). static void; varianceFilter(Mat mat,; int radius). Apply a circular 2D local variance filter to all channels of an image, with symmetric boundary padding. static void; varianceFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D local variance filter to all channels of an image. static Mat; vConcat(Collection<? extends Mat> mats,; Mat dest). Vertical concatenation for a Mat. static void; watershedIntensitySplit(Mat matBinary,; Mat matWatershedIntensities,; double threshold,; int maximaRadius). Apply a watershed transform to refine a binary image, guided either by a distance transform or a supplied intensity image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTools; public OpenCVTools(). Method Details. imageToMat; public static Mat imageToMat(BufferedImage img); Convert a BufferedImage to an OpenCV Mat.; ; An effort will be made to do a sensible conversion based on the BufferedImage type, ; returning a Mat with a suitable type.; ; BGR and RGB images will remain with the same channel order, and an alpha channel ; (if present) will be included at the end (i.e. to give BGRA or RGBA).; ; Note: the behavior of this method has changed; in QuPath <= 0.1.2 only; RGB images were really supported, and an RGB conversion was *always* made. Parameters:; img - ; Returns:; See Also:. imageToMatRGB(java.awt.image.BufferedImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:13182,inherit,inherited,13182,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['inherit'],['inherited']
Modifiability,"mparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; Ille",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:1582,inherit,inherited,1582,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,1,['inherit'],['inherited']
Modifiability,"mple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleThresholding() - Constructor for class qupath.imagej.processing.Simp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976528,extend,extends,976528,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"mpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog for rotating the image in the current viewer (for display only). createRowGrid(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). createRowGridControls(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. createRunnableTask(ObjectDetector<T>, ParameterList, ImageData<T>, PathObject) - Static method in class qupath.lib.plugins.DetectionPluginTools. Create a task that applies an object detector to a parent object. createRunningStatisticsList(int) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Create a list of n (empty) RunningStatistics objects. createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringProperty) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>>, ObjectExpression<PixelClassifier>, StringProperty) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. createScaledInstance(double, double) - Method in class qupath.lib.images.servers.PixelCalibration. Get a scaled instance of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:218415,plugin,plugins,218415,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"mplementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Predict",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774279,extend,extends,774279,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"mplemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class RefineAnnotationsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; RefineAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:1598,plugin,plugin,1598,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability,"mportROIs;  ; final org.controlsfx.control.action.Action; actionMacroRunner;  ; final org.controlsfx.control.action.Action; actionPixelCount. Deprecated. final org.controlsfx.control.action.Action; actionPlugins;  ; final org.controlsfx.control.action.Action; actionPositiveCellDetection;  ; final org.controlsfx.control.action.Action; actionSimpleTissueDetection. Deprecated. final org.controlsfx.control.action.Action; actionSLIC;  ; final org.controlsfx.control.action.Action; actionSnapshot;  ; final org.controlsfx.control.action.Action; actionSubcellularDetection. Deprecated. final org.controlsfx.control.action.Action; actionTiles;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_2B;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SEP_0; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_0. actionSLIC; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsSLIC""); public final org.controlsfx.control.action.Action actionSLIC. actionDoG; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.superpixelsDoG""); public final org.controlsfx.control.action.Action actionDoG. SEP_1; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); public final org.controlsfx.control.action.Action SEP_1. actionTiles; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.Tiles""}); @ActionConfig(""Action.ImageJ.tilesToAnnotations""); public final org.controlsfx.control.action.Action actionTiles. actionCellDetection; @ActionMenu({""Menu.Analyze"",""Menu.Analyze.CellDetection""}); @ActionConfig(""Action.Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html:2012,inherit,inherited,2012,javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/IJExtension.IJExtensionCommands.html,1,['inherit'],['inherited']
Modifiability,"mpt user to select a directory. promptForDirectory(String, File) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt user to select a directory. promptForFile(File) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt user to select a file. promptForFile(String...) - Static method in class qupath.lib.gui.scripting.QPEx. Prompt the user to select a file from a file chooser. promptForFile(String, File, String, String...) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt the user for a file with some kind of file dialog. promptForFilePathOrURL(String, String, File, String, String...) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt user to select a file or input a URL. promptForMultipleFiles(String, File, String, String...) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt to open a list of files. promptForParentObjects(String, ImageData<?>, boolean, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.gui.tools.GuiTools. Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. promptForSliderRange(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Prompt the user to input min/max values for a slider. promptToAddColumnAfterSelected(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to add a column to a TMA grid after the column containing the currently-selected object. promptToAddColumnBeforeSelected(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to add a column to a TMA grid before the column containing the currently-selected object. promptToAddNoteToSelectedCores(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to type a node to associate with the selected TMA cores. promptToAddRowAfterSelected(ImageData<?>) - Static method in class qupath.lib.gui.commands",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:788730,extend,extends,788730,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ms). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:3406,plugin,plugins,3406,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"ms). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3901,plugin,plugins,3901,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"n ImageJ Roi. convertToIJRoi(ROI, Calibration, double) - Static method in class qupath.imagej.tools.IJTools. Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. convertToIJRoi(ROI, T) - Static method in class qupath.imagej.tools.IJTools. Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. convertToImagePlus(String, ImageServer<BufferedImage>, BufferedImage, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Convert a BufferedImage into a PathImage<ImagePlus>. convertToImagePlus(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. convertToImageProcessor(BufferedImage, int) - Static method in class qupath.imagej.tools.IJTools. Extract pixels as an an ImageProcessor from a single band of a BufferedImage. convertToJson(Map<String, ?>) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a Map to a one-line JSON representation, omitting hidden parameters. convertToJson(ParameterList) - Static method in class qupath.lib.plugins.parameters.ParameterList. Convert a ParameterList a one-line JSON representation, omitting hidden parameters. convertToObjects(Parameters<S, T>, U) - Method in interface qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter. Convert the output of a pixel processor to a list of PathObjects. convertToOpticalDensitySum(ColorProcessor, double, double, double) - Static method in class qupath.imagej.tools.IJTools. Calculate optical density values for the red, green and blue channels, then add these all together. convertToPathObject(Roi, double, double, double, Function<ROI, PathObject>, ImagePlane) - Static method in class qupath.imagej.tools.IJTools. Create a PathObject for a specific ImageJ Roi. convertToPathObject(Roi, double, Function<ROI, PathObject>, ImagePlus) - Static method in class qupath.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:143838,plugin,plugins,143838,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createGammaFunction(double, PixelType) - Static method in class qupath.lib.color.ColorModelFactory. Create a gamma function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createGeometries(Geometry) - Method in class qupath.lib.objects.utils.Tiler. Create a list of Geometry tiles from the input. createGridView(QuPathGUI, Function<PathObjectHierarchy, Collection<? extends PathObject>>) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for a custom object extractor. createHeadlessTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createHeadlessTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance with the specified number of threads. createHiddenInstance() - Static method in class qupath.lib.gui.QuPathGUI. Create a new QuPath instance that is not visible (i.e. createHistogramData(Histogram, Integer) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createHistogramData(Histogram, Color) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createIconImage(IconFactory.PathIcons, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an image from a default icon glyph. createID() - Method in class qupath.imagej.images.servers.ImageJServer;  ; createID() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Returns a random UUID. createID() - Method in class qupath.lib.gui.images.servers.ChannelDisp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:182275,plugin,plugins,182275,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADDED; public static final PathObjectHierarchyEvent.HierarchyEventType ADDED; An object has been added. REMOVED; public static final PathObjectHierarchyEvent.HierarchyEventType REMOVED; An object has been removed. OTHER_STRUCTURE_CHANGE; public static final PathObjectHierarchyEvent.HierarchyEventType OTHER_STRUCTURE_CHANGE; A more complex structural change was made than simply either adding or removing objects. CHANGE_CLASSIFICATION; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_CLASSIFICATION; A change was made to one or more object classifications. CHANGE_MEASUREMENTS; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_MEASUREMENTS; A change was made to one or more object measurements. CHANGE_OTHER; public static final PathObjectHierarchyEvent.HierarchyEventType CHANGE_OTHER; A change was made to one or more objects that is more complex than",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:2210,inherit,inherited,2210,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,2,['inherit'],['inherited']
Modifiability,"n array of existing pixels (packed RGB) additively using the colors to display a specified image. updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; updateRGBAdditive(BufferedImage, int, int, int, ChannelDisplayMode) - Method in interface qupath.lib.display.ChannelDisplayInfo. Update an existing pixel (packed RGB) additively using the color used to display a specified one. updateRunningStatistics(RunningStatistics, SimpleImage) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Add all pixels from a SimpleImage to an existing RunningStatistics object. updateServerMetadata(ImageServerMetadata) - Method in class qupath.lib.images.ImageData. Update the ImageServer metadata. updateServerURIs(Map<URI, URI>) - Method in interface qupath.lib.projects.ProjectImageEntry. Deprecated.; use instead UriResource.updateURIs(Map). updateStatus(ParallelTileObject.Status) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the object if it is currently being processed. updateT(int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the updated t value. updateTable() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Ensure the table is up-to-date. updateTranslation(double, double, ImageRegion) - Method in class qupath.lib.roi.RoiEditor. Update a ROI by translation, optionally constraining its movement within a specified boundary. updateUris(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource;  ; updateURIs(Map<URI, URI>) - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; updateURIs(Map<URI, URI>) - Method in interface qupath.lib.images.servers.ImageServerBuilder.ServerBuilder. Update the URIs required by this builder. updateURIs(Map<URI, URI>) - Method in interface qupath.lib.io.UriResource. Update the specified URIs. updateURIs(Map<URI, URI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1067249,plugin,plugins,1067249,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n based on its bounding box coordinates, z-slice index and time point index. createInstance(Class<? extends ImageServerBuilder<T>>, float, Collection<ImageServerBuilder.ServerBuilder<T>>) - Static method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. createInstance(Class<? extends ImageServerBuilder<T>>, float, ImageServerBuilder.ServerBuilder<T>) - Static method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. createInstance(Class<? extends ImageServerBuilder<T>>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. createInstance(Class<? extends ImageServerBuilder<T>>, ImageServerMetadata, URI, String...) - Static method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). createInstance(String, double, int, int, int, int) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. createInstance(String, double, int, int, int, int, int, int) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box, z-slice and time point. createInstance(String, double, int, int, int, int, ImagePlane) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box and ImagePlane. createInstance(String, double, Collection<? extends ROI>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:188278,extend,extends,188278,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"n class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for the specified objects. setIntensityClassifications(PathObjectHierarchy, Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the specified hierarchy. setIntensityClassificationsForSelected(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set intensity classifications for all selected (detection) objects in the specified hierarchy. setInterpolation(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; setInterpolation(ImageInterpolation) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Set the preferred method of interpolation to use for display. setIsInteractive(boolean) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Sets the value of ChartThresholdPane.isInteractiveProperty(). setLastSavedPath(String, boolean) - Method in class qupath.lib.images.ImageData. Set the last path used to save this object;. setLineChartLegendLines(Chart, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:931664,extend,extends,931664,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"n class qupath.lib.gui.tools.MeasurementMapper. Query if the mapper is valid. isValid() - Method in class qupath.lib.objects.classes.PathClass. A PathClass is valid if its name is not null. isValidClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Returns true if the PathClass represents a valid (non-null) classification. isValidFilename(String) - Static method in class qupath.lib.common.GeneralTools. Returns true if the output of GeneralTools.stripInvalidFilenameChars(String) matches the provided name, ; and the name is not null or blank. isValidInput(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isValidInput(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter. Always returns false. isValidInput(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isValidInput(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Numbers are considered valid if they are not NaN. isValidInput(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Query if a specified value would be valid for this parameter. isVisible() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Check overlay visibility status. isVisible() - Method in class qupath.lib.gui.viewer.overlays.GridOverlay;  ; isVisible() - Method in class qupath.lib.gui.viewer.overlays.TMAGridOverlay;  ; isWindows() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Windows. J. J2K - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossless JPEG-2000 compression. J2K_LOSSY - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Lossy JPEG-2000 compression. JAVA - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java. JAVA_IMPORTER - Static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:638081,plugin,plugins,638081,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:381394,plugin,plugins,381394,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for multiple objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:28410,plugin,plugins,28410,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n class qupath.lib.roi.RectangleROI;  ; translate(int, int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK - Static variable in class qupath.lib.color.ColorToolsAwt. Black, with 50% opacity. TRANSLUCENT_BLACK_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. Black with opacity at 50%. TRANSLUCENT_WHITE - Static variable in class qupath.lib.color.ColorToolsAwt. White, with 50% opacity. TRANSLUCENT_WHITE_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. White with opacity at 50%. TRANSPARENT - Static variable in class qupath.lib.images.servers.ImageChannel. Special color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<? extends PathObject>, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. tryToInterpretMessage(Throwable, int, boolean) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; tryToLoad(String...) - Static method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1054302,variab,variable,1054302,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"n class qupath.lib.scripting.QP. Apply an object classifier to the specified ImageData. runObjectImport(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to import object(s) from a file. runPlugin(String, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData. runPlugin(String, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, using a map for arguments. runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData. runPlugin(String, ImageData<?>, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:877032,plugin,plugin,877032,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"n could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:3041,plugin,plugin,3041,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability,"n empty overlay without any images to display. BufferedImageOverlay(OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions, ImageRegion, BufferedImage) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer, BufferedImage) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer, Map<ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer, OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to display multiple image regions. bufferedImageProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get a read-only property representing the buffered image. BufferedImageTools - Class in qupath.lib.awt.common. Static methods for working with BufferedImages and QuPath objects. BUGS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; build() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Build the DelaunayTools.Subdivision with the current parameters. build() - Method in interface qupath.lib.analysis.heatmaps.ColorModels.ColorModelBuilder. Build a ColorModel. build() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Build the classifier defined by the parameters of this builder. build() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata.Build",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:67140,extend,extends,67140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"n set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Double lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Double lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Double lastValue. Method Details. setValue; public boolean setValue(Double lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Double>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Double lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Double>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class Numeric",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html:2458,inherit,inherited,2458,javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/DoubleParameter.html,2,['inherit'],['inherited']
Modifiability,"n switch between drawing lines or arrows. static final PathTool; MOVE. Move tool. static final PathTool; POINTS. Points annotation and counting tool. static final PathTool; POLYGON. Polygon drawing tool (closed). static final PathTool; POLYLINE. Polyline drawing tool (open). static final PathTool; RECTANGLE. Rectangle drawing tool. Constructor Summary; Constructors. Constructor; Description; PathTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathTool; createExtendedTool(PathTool... tools);  ; static PathTool; createTool(EventHandler<MouseEvent> handler,; String name,; Node icon). Create a tool from the specified MouseEvent handler. static <T extends Event>PathTool; createTool(EventType<T> type,; EventHandler<T> handler,; String name,; Node icon). Create a tool from the specified event handler. static PathTool; getTool(String pathToolString). Return the PathTool corresponding to the specified String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MOVE; public static final PathTool MOVE; Move tool. RECTANGLE; public static final PathTool RECTANGLE; Rectangle drawing tool. ELLIPSE; public static final PathTool ELLIPSE; Ellipse drawing tool. LINE; public static final PathTool LINE; Line drawing tool. ARROW_START; public static final PathTool ARROW_START; Arrow drawing tool, with arrowhead at the start. ARROW_END; public static final PathTool ARROW_END; Arrow drawing tool, with arrowhead at the end. ARROW_DOUBLE; public static final PathTool ARROW_DOUBLE; Arrow drawing tool, with arrowhead at both ends. LINE_OR_ARROW; public static final PathTool LINE_OR_ARROW; Extended PathTool that can switch between drawing lines or arrows. POLYGON; public static final PathTool POLYGON; Polygon drawing tool (closed). POLYLINE; public static final PathTool POLYLINE; Polyline drawing tool (open). BRUSH; public st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html:2054,inherit,inherited,2054,javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,1,['inherit'],['inherited']
Modifiability,"n the future, it is best not to rely on this class!. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DelaunayClusteringPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:1847,extend,extends,1847,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['extend'],['extends']
Modifiability,"n the image, if present. setSlidersPosition(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Sets the Z and T sliders' position to allow space for command bar. setSpaceDown(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Notify this viewer that the isSpaceDown status should be changed. setSpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the edito",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949331,plugin,plugins,949331,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n update event if the status of any object is changed. Parameters:; hierarchy - . unlockSelectedObjects; public static void unlockSelectedObjects(PathObjectHierarchy hierarchy); Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleSelectedObjectsLocked; public static void toggleSelectedObjectsLocked(PathObjectHierarchy hierarchy); Toggle the 'locked' status of selected objects, firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleObjectsLocked; public static void toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Toggle the 'locked' status of specified objects. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. getAvailableFeatures; public static Set<String> getAvailableFeatures(Collection<? extends PathObject> pathObjects); Get a set containing the names of all measurements found in the measurement lists of a specified object collection. Parameters:; pathObjects - ; Returns:. createClassificationMap; public static Map<PathObject,PathClass> createClassificationMap(Collection<? extends PathObject> pathObjects); Create a mapping between PathObjects and their current PathClasses.; This can be useful to preserve a classification so that it may be reset later.; ; Note: classification probabilities are not retained using this approach. Parameters:; pathObjects - the objects containing classifications; Returns:; a mapping between objects and their current classifications; See Also:. restoreClassificationsFromMap(Map). restoreClassificationsFromMap; public static Collection<PathObject> restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap); Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). Parameters:; classificationMap - the map contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:52682,extend,extends,52682,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"n). ADD_COLUMN_AFTER - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; ADD_COLUMN_BEFORE - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; ADD_ROW_AFTER - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; ADD_ROW_BEFORE - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; addActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; AddActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.AddActions;  ; addAllRegions(ImageServer<BufferedImage>, int) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Add all regions for a specific level of an ImageServer. addBooleanParameter(String, String, boolean) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter. addBooleanParameter(String, String, boolean, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a boolean parameter, with help text. addChartExportMenu(XYChart<Number, Number>, ContextMenu) - Static method in class qupath.lib.gui.charts.ChartTools. Add a menu item to a context menu for displaying a chart for export. addChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Add an object to the child list of this object. addChildObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Add a collection of objects to the child list of this object. addChoiceParameter(String, String, S, List<S>) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices. addChoiceParameter(String, String, S, List<S>, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices and help text. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String) - Method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:12688,plugin,plugins,12688,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjects(Collection<? extends PathObject>). since v0.4.0; use PathObjectHierarchy.addObjects(Collection) instead. qupath.lib.objects.hierarchy.PathObjectHierarchy.addPathObjectWithoutUpdate(PathObject). since v0.4.0, use PathObjectHierarchy.addObject(PathObject, boolean) instead (for naming consistency). qupath.lib.objects.hierarchy.PathObjectHierarchy.removePathObjectListener(PathObjectHierarchyListener). since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). qupath.lib.objects.PathObject.addPathObject(PathObject). since v0.4.0, replaced by PathObject.addChildObject(PathObject). qupath.lib.objects.PathObject.addPathObjects(Collection<? extends PathObject>). since v0.4.0, replaced by PathObject.addChildObjects(Collection). qupath.lib.objects.PathObject.clearPathObjects(). since v0.4.0, replaced by PathObject.clearChildObjects(). qupath.lib.objects.PathObject.getColorRGB(). since v0.4.0, use PathObject.getColor() instead. qupath.lib.objects.PathObject.hasChildren(). since v0.4.0, replaced by PathObject.hasChildObjects(). qupath.lib.objects.PathObject.removePathObject(PathObject). since v0.4.0, replaced by PathObject.removeChildObject(PathObject). qupath.lib.objects.PathObject.removePathObjects(Collection<PathObject>). since v0.4.0, replaced by PathObject.removeChildObjects(Collection). qupath.lib.objects.PathObject.setColorRGB(Integer). since v0.4.0, use PathObject.setColor(Integer) instead. qupath.lib.objects.PathObjectTools.containsObject(PathObject, PathObject). qupath.lib.objects.PathObjectTools.containsROI(ROI, ROI). qupath.lib.objects.PathROIObject.isEditable(). since v0.4.0. qupath.lib.plugins.parameters.Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:10476,extend,extends,10476,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,"n, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ImageDisplay>; imageDisplayObjectProperty(). The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCount, getRowIndex, getRowSpan, getValignment, getVgap, getVgrow, gridLinesVisibleProperty, hgapProperty, isFillHeight, isFillWidth, isGridLinesVisible, layoutChildren, requestLayout, setAlignment, setColumnIndex, setColumnSpan, setConstraints, setConstraints, setConstraints, setConstraints, setConstraints, setFillHeight, setFillWidth, setGridLinesVisible, setHalignment, setHgap, setHgrow, setMargin, setRowIndex, setRowSpan, setValignment, setVgap, setVgrow, toString, vgapProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.lay",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:3445,inherit,inherited,3445,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"n. static PathClass; mergeClasses(PathClass baseClass,; PathClass additionalClass). Merge two classifications together. static PathClass; removeNames(PathClass pathClass,; String... namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; removeNames(PathClass pathClass,; Collection<String> namesToRemove). Create a PathClass with specific name elements removed (if present) from an existing classification. static PathClass; sortNames(PathClass pathClass). Create a PathClass with name elements sorted alphabetically. static PathClass; sortNames(PathClass pathClass,; Comparator<String> comparator). Create a PathClass with name elements sorted using an arbitrary Comparator. static List<String>; splitNames(PathClass pathClass). Get a list containing the names of all constituent parts of a PathClass. static PathClass; uniqueNames(PathClass pathClass). Remove duplicate names from a derived PathClass. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. isGradedIntensityClass; public static boolean isGradedIntensityClass(PathClass pathClass); Return true if the PathClass represents a built-in intensity class.; Here, this means its name is equal to ""1+"", ""2+"" or ""3+"". Parameters:; pathClass - ; Returns:. isIgnoredClass; public static boolean isIgnoredClass(PathClass pathClass); Return true if the PathClass should be ignored from some operations, or is null. ; In practice, this checks if the PathClass is null or if the name is either null or ends with an asterisk.; It is useful to avoid generating objects for certain classes (e.g. Ignore*, Artefact*, Background*) ; where these would not be meaningful.; ; Warning: the 'ignored' status is ambiguous if the PathClass is null. ; In a future version this method may throw an exception rather than accepting null classifications. ; Code that calls this method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html:3303,inherit,inherited,3303,javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassTools.html,2,['inherit'],['inherited']
Modifiability,"n2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2183,plugin,plugin,2183,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['plugin'],['plugin']
Modifiability,"n2;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:476008,plugin,plugins,476008,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"n; Class DnnObjectClassifier. java.lang.Object; qupath.lib.classifiers.object.AbstractObjectClassifier<BufferedImage>; qupath.opencv.dnn.DnnObjectClassifier. All Implemented Interfaces:; ObjectClassifier<BufferedImage>, UriResource. public class DnnObjectClassifier; extends AbstractObjectClassifier<BufferedImage>; implements UriResource; Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN.; ; Warning! This implementation is likely to change in the future. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:1383,extend,extends,1383,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['extend'],['extends']
Modifiability,"n; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. void; setRange(double minValue,; double maxValue). Set the upper and lower bounds. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. abstract boolean; setValueWithBoundsCheck(S lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.parameters.Parameter; duplicate. Field Details. lastValue; protected S extends Number lastValue. Method Details. hasLowerAndUpperBounds; public boolean hasLowerAndUpperBounds(); Returns true if this parameter has both lower and upper bounds constraining valid values. Returns:. isUnbounded; public boolean isUnbounded(); Returns true if this neither a lower nor an upper bound constraining valid values. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might not appear; to make a difference. If shown through a ParameterPan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:3211,inherit,inherited,3211,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,2,['inherit'],['inherited']
Modifiability,"n; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2033,extend,extends,2033,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['extend'],['extends']
Modifiability,"n; static void; addTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static boolean; containsObject(PathObject parentObject,; PathObject childObject). Deprecated. static boolean; containsROI(ROI parentROI,; ROI childROI). Deprecated. static Collection<PathObject>; convertToPoints(Collection<PathObject> pathObjects,; boolean preferNucleus). Convert a collection of PathObjects to Point annotations, based on ROI centroids. static void; convertToPoints(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects,; boolean preferNucleus,; boolean deleteObjects). Convert a collection of PathObjects to Point annotations, based on ROI centroids, and add the points to the hierarchy. static int; countDescendants(PathObject pathObject). Count the descendants of a PathObject recursively. static int; countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass). Count the number of PathObjects in a collection with a specified class or base class. static Map<PathObject,PathClass>; createClassificationMap(Collection<? extends PathObject> pathObjects). Create a mapping between PathObjects and their current PathClasses. static Predicate<PathObject>; createImageRegionPredicate(ImageRegion region). Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. static PathObject; createLike(PathObject pathObject,; ROI roiNew). Create a new object with the same type and classification as the input object, but a new ROI and ID. static PathObject; createLike(PathObject pathObject,; ROI roiNew,; ROI roiNucleus). Create a new object with the same type and classification as the input object, but a new ROI and ID. static TMAGrid; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterPixels,; ImageRegion region). Create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:1749,extend,extends,1749,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"n<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedNucleiCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Alternative (incomplete) attempt at nucleus segmentation.; ; It's reasonably fast... but not particularly good. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; WatershedNucleiCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.Abs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:1719,plugin,plugin,1719,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugin']
Modifiability,"nArea). Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. static Geometry; removeInteriorRings(Geometry geometry,; double minRingArea). Fill all interior rings for the specified geometry that have an area < a specified threshold. static Geometry; roiToGeometry(ROI roi). Convert to QuPath ROI to a JTS Geometry. static Geometry; roundCoordinates(Geometry geometry). Round coordinates in a Geometry to integer values. static Geometry; shapeToGeometry(Shape shape). Convert a java.awt.Shape to a JTS Geometry. static List<Geometry>; splitGeometryByLineStrings(Geometry polygon,; Collection<? extends Geometry> splitLines). Split an input polygonal geometry using a collection of split lines. static Geometry; tryToFixPolygon(Polygon polygon). Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. static Geometry; union(Collection<? extends Geometry> geometries). Calculate the union of multiple Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GeometryTools; public GeometryTools(). Method Details. getDefaultFactory; public static GeometryFactory getDefaultFactory(); Get the default GeometryFactory to construct Geometries within QuPath. Returns:. parseTransformMatrix; public static AffineTransformation parseTransformMatrix(String text); throws ParseException; Parse the matrix (String) to create and return an AffineTransformation. ; ; The order of the matrix elements should be the following:. m00 m01 m02; m10 m11 m12. Parameters:; text - ; Returns:; affineTransformation; Throws:; ParseException. convertTransform; public static AffineTransform convertTransform(AffineTransformation transform); Convert an AffineTransformation to an AffineTransform. Parameters:; transform - ; Returns:. convertTransform; public static AffineTransformation convertTransform(AffineTransform transform); Convert ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:3965,inherit,inherited,3965,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['inherit'],['inherited']
Modifiability,"nCV Mat into an ImageJ ImageProcessor. static SimpleImage; matToSimpleImage(Mat mat,; int channel). Convert a Mat to a SimpleImage. static double; maximum(Mat mat). Get the maximum value in an image, across all pixels (regardless of channels), ignoring NaNs. static void; maximumFilter(Mat mat,; int radius). Apply a 2D maximum filter (dilation) to all channels of an image. static double; mean(Mat mat). Get the mean of an image, across all pixels (regardless of channels), ignoring NaNs. static void; meanFilter(Mat mat,; int radius). Apply a circular 2D mean filter to all channels of an image, with symmetric boundary padding. static void; meanFilter(Mat mat,; int radius,; int borderType). Apply a circular 2D mean filter to all channels of an image. static double; median(Mat mat). Get the median pixel value in a Mat, ignoring NaNs. static String; memoryReport(CharSequence delimiter). Create a brief report on memory use, based on JavaCPP's Pointer class. static Mat; mergeChannels(Collection<? extends Mat> channels,; Mat dest). Merge channels from a multichannel Mat. static double; minimum(Mat mat). Get the minimum value in an image, across all pixels (regardless of channels), ignoring NaNs. static void; minimumFilter(Mat mat,; int radius). Apply a 2D minimum filter (erosion) to all channels of an image. static void; openingFilter(Mat mat,; int radius). Apply a 2D opening filter (erosion followed by dilation) to all channels of an image. static double[]; percentiles(Mat mat,; double... percentiles). Get percentile values for all pixels in a Mat, ignoring NaNs. static String; physicalMemory(). Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class. static void; putPixelsFloat(Mat mat,; float[] pixels). Set pixels from a float array. static void; putPixelsUnsigned(Mat mat,; byte[] pixels). Set pixels from a byte array. static void; replaceNaNs(Mat mat,; double newValue). Replace NaNs in a floating point array. static void; replaceValue",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:9601,extend,extends,9601,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['extend'],['extends']
Modifiability,"nCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:3546,extend,extends,3546,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['extend'],['extends']
Modifiability,"nDragOver, setOnInputMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplayObject; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty; The current image display. See Also:. imageDisplayObjectProperty(). resourceManager; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty; The resource manager used to handle saving/loading. See Also:. resourceManagerProperty(). Constructor Details. BrightnessContrastSettingsPane; public BrightnessContrastSettingsPane(). Method Details. imageDisplayObjectProperty; public ObjectProperty<ImageDisplay> imageDisplayObjectProperty(); The current image display. Returns:. resourceManagerProperty; public ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>> resourceManagerProperty(); The resource manager used to handle saving/loading. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:11817,inherit,inherited,11817,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,2,['inherit'],['inherited']
Modifiability,"nProperty; isInteractiveProperty(). Property indicating whether thresholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4555,inherit,inherited,4555,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability,"nProperty; showLocation. Show the cursor location. BooleanProperty; showOverview. Show the overview image. BooleanProperty; showScalebar. Show the scalebar. Constructor Summary; Constructors. Constructor; Description; ViewerPlusDisplayOptions();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getShowLocation(). Get the value of showLocationProperty(). boolean; getShowOverview(). Get the value of showOverviewProperty(). boolean; getShowScalebar(). Get the value of showScalebarProperty(). void; setShowLocation(boolean show). Set the value of showLocationProperty(). void; setShowOverview(boolean show). Set the value of showOverviewProperty(). void; setShowScalebar(boolean show). Set the value of showScalebarProperty(). BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. getShowOverview(); setShowOverview(boolean); showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. getShowLocation(); setShowLocation(boolean); showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. getShowScalebar(); setShowScalebar(boolean); showScalebarProperty(). Constructor Details. ViewerPlusDisplayOptions; public ViewerPlusDisplayOptions(). Method Details. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:; See Also:. getShowOverview(); setShowOverview(boolean). showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:; See Also:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html:1680,inherit,inherited,1680,javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerPlusDisplayOptions.html,1,['inherit'],['inherited']
Modifiability,"nRequest. Create a request for a region specified in terms of its bounding box and ImagePlane. createInstance(String, double, Collection<? extends ROI>) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROIs. createInstance(String, double, ImageRegion) - Static method in class qupath.lib.regions.RegionRequest. Create a request corresponding to a specified ImageRegion. createInstance(String, double, ROI) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROI. createInstance(String, int, double, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region, downsample and resolution level. createInstance(String, RegionRequest) - Static method in class qupath.lib.regions.RegionRequest. Create a request that matches another request but with a different path. createInstance(Collection<? extends ROI>) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains the specified ROIs. createInstance(Stage) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath on the JavaFX Application thread. createInstance(Stage, HostServices) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from a JavaFX application. createInstance(ImageServer<?>) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). createInstance(ImageServer<?>, double) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). createInstance(ImageServer<?>, int, ImageRegion) - Static method in class qupath.lib.images.s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:190140,extend,extends,190140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"nalysis.images.SimpleImages;  ; SimpleImageViewer - Class in qupath.lib.gui.panes. A simple viewer for a single image, with options to save or copy. SimpleImageViewer() - Constructor for class qupath.lib.gui.panes.SimpleImageViewer. Create a new simple image viewer. SimpleModifiableImage - Interface in qupath.lib.analysis.images. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep - Class in qupath.lib.plugins.workflow. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimplePluginWorkflowStep() - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String, Class<? extends PathPlugin<?>>, String, String, String) - Constructor for class qupath.lib.plugins.workflow.SimplePluginWorkflowStep. Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. SimpleProgressMonitor - Interface in qupath.lib.plugins. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand - Class in qupath.process.gui.commands. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholdCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.SimpleThresholdCommand. Constructor. SimpleThresholding - Class in qupath.imagej.processing. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:976479,plugin,plugin,976479,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"names' option. setGamma(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the gamma value for this viewer. setGridLines(GridLines) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the GridLines object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:927884,plugin,plugins,927884,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"nary image, guided either by a distance transform or a supplied intensity image. WatershedNucleiCV - Class in qupath.opencv. Alternative (incomplete) attempt at nucleus segmentation. WatershedNucleiCV() - Constructor for class qupath.opencv.WatershedNucleiCV;  ; WebViews - Class in qupath.lib.gui.tools. Helper class for creating a WebView in a standardized way. WebViews() - Constructor for class qupath.lib.gui.tools.WebViews;  ; WEIGHTED_STD_DEV - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Weighted standard deviation. weightedStdDev(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate a Gaussian-weighted standard deviation. WelcomeStage - Class in qupath.lib.gui. Welcome page when launching QuPath. WelcomeStage() - Constructor for class qupath.lib.gui.WelcomeStage;  ; White - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. All pixels white. WHITE - Static variable in class qupath.lib.common.ColorTools. Packed int representing white. width - Variable in class qupath.lib.geom.ImmutableDimension. Width of the ImmutableDimension. width - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; width - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; width - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; width(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the preferred width of the chart. width(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the preferred width of the chart. width(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the preferred width of the chart. width(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog width. width(int) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Export image width. width(int) - Method in class qupath.lib.imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1106299,variab,variable,1106299,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.hierarchy.events; Enum Class PathObjectHierarchyEvent.HierarchyEventType. java.lang.Object; java.lang.Enum<PathObjectHierarchyEvent.HierarchyEventType>; qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. All Implemented Interfaces:; Serializable, Comparable<PathObjectHierarchyEvent.HierarchyEventType>, Constable. Enclosing class:; PathObjectHierarchyEvent. public static enum PathObjectHierarchyEvent.HierarchyEventType; extends Enum<PathObjectHierarchyEvent.HierarchyEventType>; Enum representing different ways in which the hierarchy may have been updated. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADDED. An object has been added. CHANGE_CLASSIFICATION. A change was made to one or more object classifications. CHANGE_MEASUREMENTS. A change was made to one or more object measurements. CHANGE_OTHER. A change was made to one or more objects that is more complex than the other changes allow for. OTHER_STRUCTURE_CHANGE. A more complex structural change was made than simply either adding or removing objects. REMOVED. An object has been removed. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathObjectHierarchyEvent.HierarchyEventType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathObjectHierarchyEvent.HierarchyEventType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html:1109,extend,extends,1109,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectHierarchyEvent.HierarchyEventType.html,2,['extend'],['extends']
Modifiability,"navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.workflow; Class SimplePluginWorkflowStep. java.lang.Object; qupath.lib.plugins.workflow.SimplePluginWorkflowStep. All Implemented Interfaces:; Externalizable, Serializable, ScriptableWorkflowStep, WorkflowStep. public class SimplePluginWorkflowStep; extends Object; implements ScriptableWorkflowStep, Externalizable; Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; SimplePluginWorkflowStep(). Default public constructor, required for Externalizable. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg). Constructor for a workflow step that calls a plugin. SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter). Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the name of the workflow step. Map<String,?>; getParameterMap(). Get a map of parameters required for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:1093,extend,extends,1093,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,4,"['extend', 'plugin']","['extends', 'pluginClass']"
Modifiability,"nayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/redo stacks (useful when memory is low). clear() - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements from the list. clear() - Method in class qupath.lib.objects.PathObjectConnections. Clear all existing connections. clear() - Method in class qupath.lib.plugins.workflow.Workflow. Remove all steps, firing an update event if the workflow was not previously empty. CLEAR_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_CORES - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; CLEAR_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; CLEAR_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.DeleteActions;  ; clearAll() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove all objects from the hierarchy. clearAllObjects() - Static method in class qupath.lib.scripting.QP. Remove all the objects in the current PathObjectHierarchy, and clear the selection. clearAllObjects(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Remove all the objects of a specified Java class. clearAnnotationMeasurements() - Static method in class qupath.lib.scripting.QP. Cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:106135,plugin,plugins,106135,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"nces images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will later be customized. Method Details. imageData; public SvgTools.SvgBuilder imageData(ImageData<BufferedImage> imageData); Specify the ImageData. This is required if the underlying raster image will be included in any export. Parameters:; imageData - ; Returns:; this builder. hierarchy; public SvgTools.SvgBuilder hierarchy(PathObjectHierarchy hierarchy); Specify the PathObjectHierarchy. This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; hierarchy - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(Collection<? extends PathObject> pathObjects); Specify a collection of objects to export.; This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; pathObjects - ; Returns:; this builder. pathObjects; public SvgTools.SvgBuilder pathObjects(PathObject... pathObjects); Specify an array of objects to export.; This may be used instead of imageData(ImageData) if the raster image is not required. Parameters:; pathObjects - ; Returns:; this builder. includeOverlays; public SvgTools.SvgBuilder includeOverlays(boolean doInclude); Specify whether overlays should be included.; This only has an effect if images are also included, and a viewer is provided. Parameters:; doInclude - ; Returns:; this builder. options; public SvgTools.SvgBuilder options(OverlayOptions options); Specify the overlay options to control display.; This will override any previous customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnno",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:4229,extend,extends,4229,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['extend'],['extends']
Modifiability,"ncludeHidden). Returns a map of keys and their corresponding parameter values. static String; getParameterListJSON(Map<String,?> map,; String delimiter). Deprecated.; use convertToJson(Map) instead. static String; getParameterListJSON(ParameterList params,; String delimiter). Deprecated.; use convertToJson(ParameterList) instead. Map<String,Parameter<?>>; getParameters(). Returns a map of keys and their corresponding parameters. String; getStringParameterValue(String key). Get a String parameter value (or its default) for the specified key. boolean; removeEmptyParameters(). Remove all empty parameters from this list. Parameter<?>; removeParameter(String key). Remove a parameter from this list. void; setHiddenParameters(boolean hidden,; String... keys). Set the 'hidden' flag for parameters with the specified keys. static void; updateParameterList(ParameterList params,; Map<String,String> mapNew,; Locale locale). Update a ParameterList with the values specified in a map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterList; public ParameterList(). Method Details. setHiddenParameters; public void setHiddenParameters(boolean hidden,; String... keys); Set the 'hidden' flag for parameters with the specified keys.; This can be used to notify any consumer that certain parameters are not required, ; or otherwise should not be presented to the user. Parameters:; hidden - ; keys - . duplicate; public ParameterList duplicate(); Create a deep copy of this parameter list. Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue); Add a double parameter to this list. Parameters:; key - ; prompt - ; defaultValue - ; Returns:. addDoubleParameter; public ParameterList addDoubleParameter(String key,; String prompt,; double defaultValue,; String unit,; String helpText); Add a double parameter to this list, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html:5205,inherit,inherited,5205,javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ParameterList.html,2,['inherit'],['inherited']
Modifiability,"ncrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPaddin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:4188,inherit,inherited,4188,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"ncv.dnn.OpenCVDnn.Builder. Set the layer outputs and shapes. outputShape(long...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the shape for a single output, with the default output name. overlap(int) - Method in class qupath.lib.images.writers.TileExporter. Define tile overlap (both x and y) in pixel units at the export resolution. overlap(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define tile overlap (x and y separately) in pixel units at the export resolution. overlapsRequest(RegionRequest) - Method in class qupath.lib.regions.RegionRequest. Returns true if the region specified by this request overlaps with that of another request. OverlayActions - Class in qupath.lib.gui.actions. Actions that interact with OverlayOptions. OverlayActions(OverlayOptions) - Constructor for class qupath.lib.gui.actions.OverlayActions;  ; overlayOpacity(double) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the opacity for overlay layers. OverlayOptions - Class in qupath.lib.gui.viewer. Default class for storing overlay display options. OverlayOptions() - Constructor for class qupath.lib.gui.viewer.OverlayOptions. Constructor, using default values. OverlayOptions(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.OverlayOptions. Constructor, initializing values based on an existing OverlayOptions object. OverlayOptions.DetectionDisplayMode - Enum Class in qupath.lib.gui.viewer. Display modes for cells and other detections. overrideSystemMenuBarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property requesting that the system menubar should never be used for managed menubars. OVERVIEW - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; owner(Window) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog owner. P. packARGB(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Make a pac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:736100,layers,layers,736100,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"nd ; combines the result by dividing corresponding values. static ImageOp; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Core; public Core(). Method Details. ensureType; public static ImageOp ensureType(PixelType type); Convert the Mat to match a specified pixel type. Parameters:; type - the pixel type that the Mat should be converted to; Returns:. multiply; public static ImageOp multiply(double... values); Multiply all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:3562,inherit,inherited,3562,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,2,['inherit'],['inherited']
Modifiability,"nd Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:1928,plugin,plugin,1928,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"nd Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:2615,extend,extends,2615,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,1,['extend'],['extends']
Modifiability,"nd Type; Method; Description; static void; addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu). Add a menu item to a context menu for displaying a chart for export. static void; expandChartClip(Chart chart,; double pad). Expand the clip region for a chart. static String; getChartDataAsString(XYChart<Number,Number> chart). Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. static void; makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis). Make it possible to select chart regions to zoom in, and scroll to navigate around it. static void; setLineChartLegendLines(Chart chart,; double length). Charts tend to show their legends with circular/square markers... static <T> void; setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips). Set pie chart data from a count map. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ChartTools; public ChartTools(). Method Details. getChartDataAsString; public static String getChartDataAsString(XYChart<Number,Number> chart); Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. Parameters:; chart - ; Returns:. makeChartInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:1744,inherit,inherited,1744,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html,1,['inherit'],['inherited']
Modifiability,"ndSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Collection<? extends String> x,; Collection<T> y); Create a bar chart using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public <T extends Number> Charts.BarChartBuilder series(String name,; Map<String,T> data); Create a bar chart using a map of String values and associated numeric values. Parameters:; name - ; data - a map of String values to associated numeric values; Returns:; this builder. series; public Charts.BarChartBuilder series(String name,; String[] x,; double[] y); Create a bar chart using arrays of String values and associated numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] y,; T[] extra); Create a bar chart using collections String values and associated numeric values, with an associated custom object. Type Parameters:; T - ; Parameters:; name - ; x - x-values; y - y-values; extra - array of values to associate with each data point; should be the same length as x and y; Returns:; this builder. series; public <T> Charts.BarChartBuilder series(String name,; String[] x,; double[] ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:6047,extend,extends,6047,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"ndicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the log file directory. LoggingTools - Class in qupath.lib.scripting;  ; LoggingTools() - Constructor for class qupath.lib.scripting.LoggingTools;  ; logLevel - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; LogManager - Class in qupath.lib.gui.logging. Manage logging levels. LogManager() - Constructor for class qupath.lib.gui.logging.LogManager;  ; LogManager.LogLevel - Enum Class in qupath.lib.gui.logging. Available log levels. logOnce(Logger, String) - Static method in class qupath.lib.common.LogTools. Log a message once at the INFO level. logOnce(Logger, Level, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:658356,variab,variable,658356,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"nding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the tex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:2003,inherit,inherited,2003,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,1,['inherit'],['inherited']
Modifiability,"nds Enum<Normalization>; Methods for normalizing features. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MEAN_VARIANCE. Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX. Normalize into the range 0-1 using min and max values. NONE. Do not normalize features. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static Normalization; valueOf(String name). Returns the enum constant of this class with the specified name. static Normalization[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final Normalization NONE; Do not normalize features. MEAN_VARIANCE; public static final Normalization MEAN_VARIANCE; Normalize by subtracting the mean and dividing by the standard deviation. MIN_MAX; public static final Normalization MIN_MAX; Normalize into the range 0-1 using min and max values. Method Details. values; public static Normalization[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static Normalization valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html:1609,inherit,inherited,1609,javadoc/docs/qupath/lib/classifiers/Normalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/Normalization.html,1,['inherit'],['inherited']
Modifiability,"ne-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a Param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3003,inherit,inherited,3003,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['inherit'],['inherited']
Modifiability,"nectionGroup() - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup) - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Create a connections group, copying the connections from an existing group. DefaultROIComparator - Class in qupath.lib.roi. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultROIComparator() - Constructor for class qupath.lib.roi.DefaultROIComparator;  ; DefaultScriptableWorkflowStep - Class in qupath.lib.plugins.workflow. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptableWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String, Map<String, ?>, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Constructor that takes a parameter map for display. DefaultScriptEditor - Class in qupath.lib.gui.scripting. Default multilingual script editor. DefaultScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.DefaultScriptEditor. Constructor. DefaultScriptLanguage - Class in qupath.lib.gui.scripting.languages. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage(String, Collection<String>, ScriptAutoCompletor) - Constructor for class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Constructor for a ExecutableLanguage. DefaultScriptLanguage(ScriptEngineFactory) - Constructor for class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Constructor for a ExecutableLanguage based on a ScriptEngineFactory. DefaultScriptLanguage.ImportStatementGenerator - Interface in qupath.lib.gui.scripting.languages. Interface defining how the import statements should be generated for the la",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:245066,plugin,plugins,245066,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ner<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms to another (wrapped) ImageServer. TransformingImageServer<T>. An ImageServer implementation used to apply transforms to another ImageServer. UndoRedoManager. Helper class to add undo/redo support to QuPath. UpdateChecker. Helper class to query for updates using GitHub's web API. UpdateChecker.ReleaseVersion. Class to represent a release version. UpdateUrisComma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:58445,plugin,plugin,58445,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"nerate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2202,plugin,plugins,2202,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugins']
Modifiability,"nes(Collection<? extends PathObject> pathObjects,; double buffer); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. Parameters:; pathObjects - an input collection of objects, containing objects with different ROI types; buffer - the distance by which to buffer the lines (can be considered a radius).; If 0, this is equivalent to #splitAreasByLines(Collection); Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection); splitAreasByBufferedLines(Collection, Collection, double). splitAreasByBufferedLines; public static Map<PathObject,List<PathObject>> splitAreasByBufferedLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects,; double buffer); Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. Parameters:; areaObjects - objects with area ROIs; non-area ROIs will be ignored; lineObjects - objects with line ROIs; non-line ROIs will be ignored; buffer - the distance by which to buffer the lines (can be considered a radius).; If 0, this is equivalent to #splitAreasByLines(Collection); Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection); splitAreasByBufferedLines(Collection, Collection, double). mergePointsForSelectedObjectClasses; public static boolean mergePointsForSelectedObjectClasses(PathObjectHierarchy hierarchy); Merge point annotations sharing the same PathClass and ImagePlane as the sele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:34870,extend,extends,34870,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability,"ng ImageJ macros & returning detected regions.; ; TODO: Support script recording. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageJMacroRunner(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:1583,extend,extends,1583,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['extend'],['extends']
Modifiability,"ng a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Add measurements to specified objects. addMeasurements(Collection<? extends PathObject>, PixelClassificationMeasurementManager, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to specified objects from a PixelClassificationMeasurementManager. addMeasurementsToSelectedObjects(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Add measurements to selected objects based upon the output of a PixelClassifier. addMenuItems(List<MenuItem>, Object...) - Static method in class qupath.lib.gui.tools.MenuTools. Add menu items to the specified list. addMenuItems(Menu, Object...) - Static method in class qupath.lib.gui.tools.MenuTools. Add menu items to an existing menu. addNewScript(String, ScriptLanguage, boolean) - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Create a n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:20707,extend,extends,20707,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ng any object serializable as a String, which will be saved to/reloaded from the user preferences. createPixelClassificationServer(ImageData<BufferedImage>, PixelClassifier) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassificationServer(ImageData<BufferedImage>, PixelClassifier, String, ColorModel, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create an ImageServer that displays the results of applying a PixelClassifier to an image. createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<PixelClassifier>, StringExpression) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Create a standard button pane for pixel classifiers, to create, measure and classify objects. createPlugin(Class<? extends PathPlugin>) - Method in class qupath.lib.gui.QuPathGUI. Create a plugin from a specified class. createPluginAction(String, Class<? extends PathPlugin>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an action for a plugin to be run through this QuPath instance. createPluginAction(String, PathPlugin<BufferedImage>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action to call the specified plugin for the current image. createPointsEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createPointsROI(double[], double[], ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from an array of x and y coordinates. createPointsROI(double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI containing a single point. createPointsROI(List<? extends Point2>, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create a points ROI from a list of points. createPointsROI(ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:209694,plugin,plugin,209694,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"ng displayed.; ; This behavior may change in the future, but for now the user must be careful to only interact with the data through; the list returned by getHistogramData() (and not XYChart.getData() directly). Property Summary; Properties. Type; Property; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransform. Property to control how counts should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2191,inherit,inherited,2191,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"ng representation of the preferred pixel width unit. double; getTimepoint(int ind). Get the time for the specified time point, or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. Number; getZSpacing(). Get the numeric value representing the z-spacing, in the stored units. double; getZSpacingMicrons(). Get the z-spacing in microns, or Double.NaN if this is unknown. String; getZSpacingUnit(). Get a String representation of the preferred z-spacing unit. int; hashCode();  ; boolean; hasPixelSizeMicrons(). Returns true if the pixel width and height information in microns is known. boolean; hasZSpacingMicrons(). Returns true if the z-spacing is known in microns. int; nTimepoints(). Get the number of known time points. String; toString();  ; boolean; unitsMatch2D(). Returns true if the units for pixel width and height are the same. boolean; unitsMatch3D(). Returns true if the units for pixel width, height and z-spacing are the same. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. PIXEL; public static final String PIXEL; String to represent 'pixel' units. This is the default when no pixel size calibration is known. See Also:. Constant Field Values. MICROMETER; public static final String MICROMETER; String to represent 'micrometer' units. Z_SLICE; public static final String Z_SLICE; String to represent 'z-slice' units. See Also:. Constant Field Values. Method Details. createScaledInstance; public PixelCalibration createScaledInstance(double scaleX,; double scaleY); Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x and y by the specified scale values.; Units are kept the same. Parameters:; scaleX - ; scaleY - ; Returns:. createScaledInstance; public PixelCalibration createScaledInstance(double scaleX,; double scaleY,; double scaleZ); Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x, y and z by the spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:3430,inherit,inherited,3430,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,1,['inherit'],['inherited']
Modifiability,"ng();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. sup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3171,variab,variable,3171,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,2,['variab'],['variable']
Modifiability,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:3618,plugin,plugin,3618,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugin']
Modifiability,"ng.ScriptParameters. Get the current project that should be used with the script. getProjectEntry() - Static method in class qupath.lib.scripting.QP. Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. getProjectEntryMetadataValue(String) - Static method in class qupath.lib.scripting.QP. Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493270,plugin,plugins,493270,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ng; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at eac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3018,inherit,inherited,3018,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['inherit'],['inherited']
Modifiability,"ng; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by default. Overrides:; postprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . getSupportedParentOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2761,inherit,inherited,2761,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['inherit'],['inherited']
Modifiability,"ng; getPrompt(). Get some prompt text that may be displayed to a user. Integer; getValue(). Get the current set value (may be null). Integer; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:2223,inherit,inherited,2223,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['inherit'],['inherited']
Modifiability,"nge is used. boolean; isMutable(). Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. void; setLUTColor(int r,; int g,; int b). Set the 'maximum' color, which defines the lookup table to use. void; setMaxDisplay(float maxDisplay). Set the max display value for this channel. void; setMinDisplay(float minDisplay). Set the min display value for this channel. void; setMinMaxAllowed(float minAllowed,; float maxAllowed). Set the maximum permissible range for the image display. String; toString();  ; void; updateRGBAdditive(BufferedImage img,; int[] rgb,; ChannelDisplayMode mode). Update an array of existing pixels (packed RGB) additively using the colors to display a specified image. int; updateRGBAdditive(BufferedImage img,; int x,; int y,; int rgb,; ChannelDisplayMode mode). Update an existing pixel (packed RGB) additively using the color used to display a specified one. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, isBrightnessContrastRescaled, updateRGBAdditive. Field Details. df; protected static final DecimalFormat df. CM_GRAYSCALE; protected static final IndexColorModel CM_GRAYSCALE. CM_GRAYSCALE_INVERTED; protected static final IndexColorModel CM_GRAYSCALE_INVERTED. minAllowed; protected float minAllowed. maxAllowed; protected float maxAllowed. minDisplay; protected float minDisplay. maxDisplay; protected float maxDisplay. clipToAllowed; protected boolean clipToAllowed. Constructor Details. DirectServerChannelInfo; public DirectServerChannelInfo(ImageData<BufferedImage> imageData,; int channel); Constructor. Parameters:; imageData - the image; channel - the channel number (0-based index). Method Details. getChannel; public int getChannel(); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html:4904,inherit,inherited,4904,javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/DirectServerChannelInfo.html,1,['inherit'],['inherited']
Modifiability,"nguages.DefaultScriptLanguage. Get the static import statements as a String, to add at the beginning of the executed script. getStaticImportStatments(Collection<Class<?>>) - Method in interface qupath.lib.gui.scripting.languages.DefaultScriptLanguage.ImportStatementGenerator;  ; getStatistic() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Retrieve a sorted array containing the value corresponding to a time from KaplanMeierData.getAllTimes(). getStatus() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI status. getStatus() - Method in class qupath.lib.plugins.ParallelTileObject. Get the current status (pending, processing or done). getStdDev() - Method in class qupath.lib.analysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal pla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:522415,plugin,plugins,522415,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"nherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; mul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3100,plugin,plugin,3100,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"nkhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1759,inherit,inherited,1759,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,1,['inherit'],['inherited']
Modifiability,"nnel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final ImageServerMetadata.ChannelType DEFAULT; Default channel interpretation. This is true for most 'normal' images. FEATURE; public static final ImageServerMetadata.ChannelType FEATURE; Each channel represents a feature for a pixel classifier. PROBABILITY; public static final ImageServerMetadata.ChannelType PROBABILITY; Each channel represents a probability value, where it is assumed that there is only one true class per pixel. MULTICLASS_PROBABILITY; public static final ImageServerMetadata.ChannelType MULTICLASS_PROBABILITY; Each channel represents a probability value, where each pixel is potentially part of multiple classes. CLASSIFICATION; public static final ImageServerMetadata.ChannelType CLASSIFICATION; Each channel represents a classification, such as in a labelled image. DENSITY; public static final ImageServerMetadata.ChannelType DENSITY; Each channel re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html:2300,inherit,inherited,2300,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,1,['inherit'],['inherited']
Modifiability,"nnotationHolesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FillAnnotationHolesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:1667,extend,extends,1667,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['extend'],['extends']
Modifiability,"nnotationObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathAnnotationObject; extends PathROIObject; An annotation PathObject.; ; These tend to be larger and less common than PathDetectionObjects.; ; As such, they can be represented and displayed with more emphasis on flexibility, rather than efficiency. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:1489,inherit,inherited,1489,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,1,['inherit'],['inherited']
Modifiability,"nnotations for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForClass(PathObjectHierarchy hierarchy,; PathClass pathClass). Merge point annotations with the specified PathClass sharing the same ImagePlane, ; creating a single multi-point annotation for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForSelectedObjectClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations,; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static String[]; parseTMALabelString(String labelString). Parse a string input representing potential TMA core labels. static boolean; relabelTMAGrid(TMAGrid grid,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static Collection<PathObject>; removeOverlaps(Collection<? extends PathObject> pathObjects,; Comparator<PathObject> comparator,; double overlapTolerance). Resolve overlaps, discarding one and keeping the other. static Collection<PathObject>; removeOverlapsByLocation(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away. static Collection<PathObject>; removeOverlapsBySize(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. static Collection<PathObject>; restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap). Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). static PathClass; setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds). Assign cell classificat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:10188,extend,extends,10188,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"nnotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. opacity; public FloatProperty opacityProperty; Property representing the global opacity for overlay drawing. See Also:. getOpacity(); setOpacity(float); opacityProperty(). detectionDisplayMode; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty; Property representing the current OverlayOptions.DetectionDisplayMode. See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode); detectionDisplayModeProperty(). showTMACoreLabels; public BooleanProperty showTMACoreLabelsProperty. See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean); showTMACoreLabelsProperty(). showConnections; public BooleanProperty showConnectionsProperty. See Also:. getShowConnections(); setShowConnections(boolean); showConnectionsProperty(). gridLines; public ObjectProperty<GridLines> gridLinesPro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:6193,inherit,inherited,6193,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['inherit'],['inherited']
Modifiability,"nnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathInteractivePlugin<T>; extends PathPlugin<T>; Interface to define a PathPlugin that requires a list of (user-adjustable) parameters.; ; By using this interface, QuPath is able to show a standardized dialog box within which ; the parameters are set. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Method Details. getDefaultParameterList; ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList.; ; Each time the method is invoked, a new ParameterList should be created. Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; boolean alwaysPromptForObjects(); If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html:2036,inherit,inherited,2036,javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathInteractivePlugin.html,4,"['extend', 'inherit', 'plugin']","['extends', 'inherited', 'plugin', 'plugins']"
Modifiability,"ns false (the default value). boolean; supportsProbabilities(). Classifier can output a prediction confidence (expressed between 0 and 1), ; so may be interpreted as a probability... String; toString();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpda",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3006,variab,variable,3006,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,2,['variab'],['variable']
Modifiability,"ns for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status. Current processing status for the tile. PathInteractivePlugin<T>. Interface to define a PathPlugin that requires a list of (user-adjustable) parameters. PathPlugin<T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1578,plugin,plugin,1578,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,1,['plugin'],['plugin']
Modifiability,"ns). AbstractDnnModel<T>. Wrapper for a deep learning model in a pipeline using OpenCV. AbstractImageOverlay. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:1479,plugin,plugin,1479,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"ns.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:431247,plugin,plugins,431247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ns.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anyth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:3444,plugin,plugin,3444,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['plugin'],['plugin']
Modifiability,"ns.objects.DilateAnnotationPlugin.LineCap. Flat cap. flatness(double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the flatness for any operation where a PathIterator is required. flatten(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Flatten a Mat to give a single column. FLOAT - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of floats. FLOAT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit floating point. FLOAT64 - Enum constant in enum class qupath.lib.images.servers.PixelType. 64-bit floating point. floor() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that floors floating point values. floor(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Floor values in a floating point Mat. FLUORESCENCE - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Fluorescence image. FLUORESCENCE - Static variable in class qupath.lib.scripting.QP. Fluorescence image type. fontProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current selected font. fontSizeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; forceOverlayUpdate() - Method in class qupath.lib.gui.viewer.QuPathViewer. Force the overlay displaying detections and annotations to be repainted. formatNumber(double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using the default Locale. formatNumber(Locale, double, int) - Static method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:312030,variab,variable,312030,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ns.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.roi. Class qupath.lib.roi.AreaROI; class AreaROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.EllipseROI; class EllipseROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:10595,extend,extends,10595,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"ns:. singleSelection; public boolean singleSelection(); Returns true if only one object has been selected, accessible by getSelectedObject();. Returns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. Parameters:; pathObject - ; addToSelection - add to the existing selection, rather than allowing only the specified object to be selected; See Also:. setSelectedObject(PathObject). deselectObject; public void deselectObject(PathObject pathObject); Ensure that the specified object is removed from the selection. Parameters:; pathObject - . deselectObjects; public void deselectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are deselected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . selectObjects; public void selectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are selected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . setSelectedObject; public void setSelectedObject(PathObject pathObject); Set the specified object to be selected, deselecting all others. Parameters:; pathObject - . getSelectedObject; public PathObject getSelectedObject(); Get the current primary selected object. Returns:. isSelected; public boolean isSelected(PathObject pathObject); Query whether a specific object is selected. Parameters:; pathObject - ; Returns:. getSelectedROI; public ROI getSelectedROI(); Get the ROI of the selected object, if available, or null. Returns:. clearSelection; public void clearSelection(); Clear selection so that no objects are selected. addPathObjectSelectionListener; public void addPathObjectSelectionListener(PathObjectSelectionListener listener); Add listener for selection changes. Parameters:; listener - . removePathObjectSelectionListener; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:4316,extend,extends,4316,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,2,['extend'],['extends']
Modifiability,"nsform.getName() is 1-based). createChannelExtractor(String) - Static method in class qupath.lib.images.servers.ColorTransforms. Create ColorTransform to extract a channel based on its name. CreateChannelTrainingImagesCommand - Class in qupath.process.gui.commands. Command to create training images based upon channel names, and add these to a project. CreateChannelTrainingImagesCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.CreateChannelTrainingImagesCommand. Constructor. createCheckBox(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a checkbox from an action. createCheckMenuItem(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a menu item from an action that makes use of a selected property. createCheckMenuItem(Action, ToggleGroup) - Static method in class qupath.lib.gui.actions.ActionTools. Create a menu item from an action that makes use of a selected property. createClassificationMap(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Create a mapping between PathObjects and their current PathClasses. createClassifier(OpenCVClassifiers.OpenCVStatModel, ImageDataOp, PixelClassifierMetadata, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Create a PixelClassifier based on an OpenCV StatModel and feature calculator. createClassifier(ImageDataOp, PixelClassifierMetadata) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier. createClassifier(ImageDataOp, PixelCalibration, Map<Integer, PathClass>) - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Convert an ImageDataOp into a simple classifier by adding an interpretation to the output labels. createColorDeconvolvedChannel(ColorDeconvolutionStains, int) - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that applies color deconvolution. createColorMap(String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:167233,extend,extends,167233,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"nside the image. static void; replaceClassification(String originalClassName,; String newClassName). Apply a new classification to all objects in the current hierarchy with a specified classification. static void; replaceClassification(Collection<PathObject> pathObjects,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in an object collection. static void; replaceClassification(PathClass originalClass,; PathClass newClass). Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasureme",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29247,extend,extends,29247,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"nsions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equivalent to this one with the updated t value. RegionRequest; updateZ(int z). Create a RegionRequest equivalent to this one with the updated z value. Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; serv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:4532,inherit,inherited,4532,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['inherit'],['inherited']
Modifiability,"nsions. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; EXTENSIONS_ONLY. Check for extensions on GitHub only (not new QuPath releases). NONE. Don't check for any updates automatically. QUPATH_AND_EXTENSIONS. Check for QuPath and extensions on GitHub. QUPATH_ONLY. Check for QuPath updates only. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.AutoUpdateType; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.AutoUpdateType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. QUPATH_ONLY; public static final PathPrefs.AutoUpdateType QUPATH_ONLY; Check for QuPath updates only. QUPATH_AND_EXTENSIONS; public static final PathPrefs.AutoUpdateType QUPATH_AND_EXTENSIONS; Check for QuPath and extensions on GitHub. EXTENSIONS_ONLY; public static final PathPrefs.AutoUpdateType EXTENSIONS_ONLY; Check for extensions on GitHub only (not new QuPath releases). NONE; public static final PathPrefs.AutoUpdateType NONE; Don't check for any updates automatically. Method Details. values; public static PathPrefs.AutoUpdateType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.AutoUpdateType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must matc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html:1804,inherit,inherited,1804,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.AutoUpdateType.html,1,['inherit'],['inherited']
Modifiability,"nstable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1677,inherit,inherited,1677,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['inherit'],['inherited']
Modifiability,"nstant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  . I. IconFactory - Class in qupath.lib.gui.tools. Factory class for creating icons. IconFactory() - Constructor for class qupath.lib.gui.tools.IconFactory;  ; IconFactory.PathIcons - Enum Class in qupath.lib.gui.tools. Default icons for QuPath commands. iconProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; iconProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the icon that should be used for the tool. identity() - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform representing the identity transform. identity() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns its input unchanged. IGNORE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Ignore classification, indicating what should not be further measured (e.g. IGNORE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Ignore classification, indicating what should not be further measured (e.g. IJExtension - Class in qupath.imagej.gui. QuPath extension & associated static helper methods used to support integration of ImageJ with QuPath. IJExtension() - Constructor for class qupath.imagej.gui.IJExtension;  ; IJExtension.IJExtensionCommands - Class in qupath.imagej.gui. Commands to install with the ImageJ extension. IJTools - Class in qupath.imagej.tools. Collection of static methods to help with using ImageJ with QuPath. IJTools() - Constructor for class qupath.imagej.tools.IJTools;  ; IMAGE - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Accept all requests for the image where the region is non-empty. IMAGE_ROOT - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Root object classification. IMAGE_ROOT - Static variable in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:583929,variab,variable,583929,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"nstructor Summary; Constructors. Constructor; Description; SubcellularDetection();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to updat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:1940,extend,extends,1940,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['extend'],['extends']
Modifiability,"nstructor for class qupath.lib.gui.scripting.languages.MarkdownLanguage. Constructor for JSON language. MarkdownStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Markdown syntax. markerOpacity - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672085,variab,variable,672085,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"nstructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109384,plugin,plugins,1109384,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"nstructors. Constructor; Description; PathToolEventHandlers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowEndEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createArrowStartEventHandler();  ; static EventHandler<MouseEvent>; createBrushEventHandler();  ; static qupath.lib.gui.viewer.tools.handlers.ArrowToolEventHandler; createDoubleArrowEventHandler();  ; static EventHandler<MouseEvent>; createEllipseEventHandler();  ; static EventHandler<MouseEvent>; createLineEventHandler();  ; static EventHandler<MouseEvent>; createMoveEventHandler();  ; static EventHandler<MouseEvent>; createPointsEventHandler();  ; static EventHandler<MouseEvent>; createPolygonEventHandler();  ; static EventHandler<MouseEvent>; createPolylineEventHandler();  ; static EventHandler<MouseEvent>; createRectangleEventHandler();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathToolEventHandlers; public PathToolEventHandlers(). Method Details. createMoveEventHandler; public static EventHandler<MouseEvent> createMoveEventHandler(). createRectangleEventHandler; public static EventHandler<MouseEvent> createRectangleEventHandler(). createEllipseEventHandler; public static EventHandler<MouseEvent> createEllipseEventHandler(). createLineEventHandler; public static EventHandler<MouseEvent> createLineEventHandler(). createPolygonEventHandler; public static EventHandler<MouseEvent> createPolygonEventHandler(). createPolylineEventHandler; public static EventHandler<MouseEvent> createPolylineEventHandler(). createPointsEventHandler; public static EventHandler<MouseEvent> createPointsEventHandler(). createBrushEventHandler; public static EventHandler<MouseEvent> createBrushEventHandler(). createArrowStartEventHandler; public s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html:1556,inherit,inherited,1556,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/PathToolEventHandlers.html,1,['inherit'],['inherited']
Modifiability,"nstructors. Modifier; Constructor; Description; protected ; AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). AffineTransform; getTransform(). Get the affine transform for this server. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransfor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:1967,inherit,inherited,1967,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['inherit'],['inherited']
Modifiability,"nstr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers.bioformats; Class OMEPixelParser.Builder. java.lang.Object; qupath.lib.images.servers.bioformats.OMEPixelParser.Builder. Enclosing class:; OMEPixelParser. public static class OMEPixelParser.Builder; extends Object; Builder for instances of OMEPixelParser. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OMEPixelParser; build(). Creates a new OMEPixelParser instance. OMEPixelParser.Builder; byteOrder(ByteOrder byteOrder);  ; OMEPixelParser.Builder; effectiveNChannels(int effectiveNChannels);  ; OMEPixelParser.Builder; isInterleaved(boolean isInterleaved);  ; OMEPixelParser.Builder; normalizeFloats(boolean normalizeFloats);  ; OMEPixelParser.Builder; pixelType(PixelType pixelType);  ; OMEPixelParser.Builder; samplesPerPixel(int[] samplesPerPixel);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. isInterleaved; public OMEPixelParser.Builder isInterleaved(boolean isInterleaved). Parameters:; isInterleaved - whether pixel values are interleaved; Returns:; the current builder. pixelType; public OMEPixelParser.Builder pixelType(PixelType pixelType). Parameters:; pixelType - the bit-depth of the image pixels; Returns:; the current builder. byteOrder; public OMEPixelParser.Builder byteOrder(ByteOrder byteOrder). Parameters:; byteOrder - the byte order of each pixel; Returns:; the current builder. effectiveNChannels; public OMEPixelParser.Builder effectiveNChannels(int effectiveNChannels). Parameters:; effectiveNChannels - the effective size of the C dimension of the image. This is not always; the number of channels, for example RGB values can be stored in one effective channel; Returns:; the current b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html:1265,inherit,inherited,1265,javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/OMEPixelParser.Builder.html,2,['inherit'],['inherited']
Modifiability,"nstr | ; Method. SEARCH. Package qupath.lib.algorithms; Class IntensityFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.IntensityFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class IntensityFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:1309,plugin,plugins,1309,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugins']
Modifiability,"nstr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ServerSelector. java.lang.Object; qupath.lib.gui.panes.ServerSelector. public class ServerSelector; extends Object; Helper class for selecting one image server out of a collection. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ServerSelector; create(Collection<? extends ImageServer<BufferedImage>> servers);  ; static ServerSelector; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders);  ; ImageServer<BufferedImage>; promptToSelectImage(String prompt,; boolean alwaysShow). Prompt to select a single ImageServer. List<ImageServer<BufferedImage>>; promptToSelectImages(String prompt). Prompt to select multiple ImageServers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createFromBuilders; public static ServerSelector createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>> builders). create; public static ServerSelector create(Collection<? extends ImageServer<BufferedImage>> servers). promptToSelectImage; public ImageServer<BufferedImage> promptToSelectImage(String prompt,; boolean alwaysShow); Prompt to select a single ImageServer. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; alwaysShow - if true, always show the prompt; if false, it won't be shown if it isn't necessary (i.e. there are 0 or 1 servers).; Returns:; the selected server, or null if no server was selected. promptToSelectImages; public List<ImageServer<BufferedImage>> promptToSelectImages(String prompt); Prompt to select multiple ImageServers. Parameters:; prompt - a one-word prompt to use in the title or button; typically ""Open"", ""Import"" or ""Select""; Returns:; the selected servers, or empty list if no servers were selected. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html:1350,extend,extends,1350,javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ServerSelector.html,2,['extend'],['extends']
Modifiability,"nt objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2879,plugin,plugin,2879,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['plugin'],['plugin']
Modifiability,"nt to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. SimplePluginWorkflowStep. Updated version of DefaultPluginWorkflowStep, adapted to use Externalizable and to avoid storing the plugin class as a class object ; (preferring a String instead). SimpleProgressMonitor. Class for monitoring the process of a plugin and displaying feedback to the user. SimpleThresholdCommand. Apply simple thresholding to an image via the pixel classification framework to support ; thresholding at any resolution, optionally with visual feedback via an overlay. SimpleThresholding. Collection of static methods to threshold images, either with single global thresholds or ; using the pixel values of a second image. SimpleTissueDetection2. Very basic global thresholding command to identify tissue regions. SingleChannelDisplayInfo. ChannelDisplayInfo that determines colors based upon a single value for each pixel. SingleMeasurementClassificationCommand. Command to (sub)classify objects based on a single measurement. SLICSuperpixelsPlugin. An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels. SlideLabelView. A simple viewer for a s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:53110,adapt,adapted,53110,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,2,"['adapt', 'plugin']","['adapted', 'plugin']"
Modifiability,"nt workflow steps. protected void; fireWorkflowUpdatedEvent();  ; WorkflowStep; getLastStep(). Get the last WorkflowStep in the workflow, or null if no steps are available. List<WorkflowStep>; getSteps(). Get an unmodifiable list of the steps. boolean; isEmpty(). Returns true if the workflow does not contain any steps. void; readExternal(ObjectInput in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the most recently added step with this one. int; size(). Total number of steps in the workflow. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Workflow; public Workflow(). Method Details. getSteps; public List<WorkflowStep> getSteps(); Get an unmodifiable list of the steps. Returns:. getLastStep; public WorkflowStep getLastStep(); Get the last WorkflowStep in the workflow, or null if no steps are available. Returns:. addStep; public void addStep(WorkflowStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html:2523,inherit,inherited,2523,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,2,['inherit'],['inherited']
Modifiability,"nt) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548391,plugin,plugins,548391,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"nt, int, int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the region to export based on a bounding box. region(ImageRegion) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the region (in terms of the full resolution image space) for export. region(ImageRegion) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the region to export, including the z-slice and time point. region(ImageRegion) - Method in class qupath.lib.images.writers.TileExporter. Define the region to be processed. region(RegionRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the region to use for processing. region(RegionRequest) - Method in class qupath.lib.images.writers.TileExporter. Define the region to be processed, including downsample. REGION - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Region class. REGION - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Region class. RegionFilter - Interface in qupath.lib.gui.viewer. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters - Enum Class in qupath.lib.gui.viewer. Standard classification regions (hopefully all you will ever need). RegionRequest - Class in qupath.lib.regions. Class for defining an image region that can also be used to request these region from an ImageServer. regionToGeometry(ImageRegion) - Static method in class qupath.lib.roi.GeometryTools. Convert an ImageRegion to a rectangular Geometry. registerAlias(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register an alias label for a specified subtype. registerBuilder(DnnModelBuilder) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModelBuilder. registerDataOp(Class<? extends ImageDataOp>, String) - Static method in class qupath.op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:838777,variab,variable,838777,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"nt. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(ImagePlane plane). Copy the selected objects in the current hierarchy to the specified image plane. static List<PathObject>; createAllFullImageAnnotations(boolean setSelected). Create annotation around the full image for the current image, on all z-slices and timepoints. static List<PathObject>; createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected). Create annotation around the full image for the specified image, on all z-slices and timepoints. static void; createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the current image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:9744,extend,extends,9744,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ntIO;  ; pointRadius - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pointRadiusProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Radius of the circle used to draw individual points in a point annotation (in pixels). POINTS - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Points annotation and counting tool. POINTS_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POINTS_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PointsROI - Class in qupath.lib.roi. ROI representing a collection of 2D points (distinct x,y coordinates). POLYGON - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Polygon drawing tool (closed). POLYGON_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYGON_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolygonROI - Class in qupath.lib.roi. ROI representing an arbitrary closed polygon. POLYLINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Polyline drawing tool (open). POLYLINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYLINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolylineROI - Class in qupath.lib.roi. ROI representing an arbitrary open polyline. populateAnnotationsMenu(QuPathGUI, ContextMenu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a ContextMenu with standard options to operate on selected annotation objects. populateAnnotationsMenu(QuPathGUI, Menu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a Menu with standard options to operate on selected annotation objects. positionCaret(int) - Method in interface qupath.lib.gui.scripting.EditableText. Set the caret position to the specified index. positionCaret(int) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; positionCaret(int) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; POSI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:771898,variab,variable,771898,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ntROI if it is larger than sizeMax, with optional overlaps. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. concatChannels(Collection<ImageServer<BufferedImage>>) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate a collection of additional servers along the 'channels' dimension (iteration order is used). concatChannels(ImageServer<BufferedImage>...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate additional servers along the 'channels' dimension. config(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). config(URI) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). confirmation() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an confirmation alert dialog. constrainCellByNucleusDistance(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. constrainCellByScaledNucleus(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:134994,config,config,134994,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['config']
Modifiability,"ntaining any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:2951,plugin,plugins,2951,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugins']
Modifiability,"ntainsKey(String). Query if a value with the specified name is in the list. Parameters:; name - ; Returns:. values; default double[] values(); Get all measurement values as a double array. Returns:; Since:; v0.4.0. getMeasurementValue; @Deprecated; default double getMeasurementValue(String name); Deprecated.; since v0.4.0; use get(String) instead. Get the measurement with the specified name. Parameters:; name - ; Returns:; the value, or Double.NaN if no measurement is available with the specified name. putMeasurement; @Deprecated; default void putMeasurement(String name,; double value); Deprecated.; since v0.4.0; replaced by put(String, double). Alternative method to call putMeasurement(String, double). Parameters:; name - ; value - . remove; default double remove(String name); Remove a named measurement. Parameters:; name - ; Returns:; the value that was removed, or Double.NaN if the value was not in the list; Since:; v0.4.0. putAll; default void putAll(Map<String,? extends Number> map); Put all the values from the specified map into this list. Parameters:; map - ; Since:; v0.4.0. putAll; default void putAll(MeasurementList list); Put all the values from the specified list into this one. Parameters:; list - ; Since:; v0.4.0. keySet; default Set<String> keySet(); Get all available names as a set. Returns:. getMeasurementNames; List<String> getMeasurementNames(); Get the names of all measurements currently in the list. Returns:. getMeasurementName; @Deprecated; String getMeasurementName(int ind); Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. Get name for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. getMeasurementValue; @Deprecated; double getMeasurementValue(int ind); Deprecated.; since v0.4.0; using get(String) is preferred over using an index. Get value for the measurement at the specified index in the list. Parameters:; ind - ; Returns:. get; double get(String nam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:6995,extend,extends,6995,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['extend'],['extends']
Modifiability,"nted Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class TileClassificationsToAnnotationsPlugin<T>; extends AbstractDetectionPlugin<T>; Plugin to merge classified tiles into annotation objects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileClassificationsToAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:1696,plugin,plugin,1696,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability,"nteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FillAnnotationHolesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:1942,plugin,plugin,1942,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['plugin'],['plugin']
Modifiability,"nterface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDescription; public String getDescription(); Description copied from i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:3663,plugin,plugin,3663,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugin']
Modifiability,"nterface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<BufferedImage>; Overrides:; alwaysPromptForObjects in class AbstractInteractivePlugin<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:6248,extend,extends,6248,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"nterfaces:; ScriptAutoCompletor. Direct Known Subclasses:; GroovyAutoCompletor, PythonAutoCompletor. public class DefaultAutoCompletor; extends Object; implements ScriptAutoCompletor; Default auto-completor for JVM-based languages, optionally including QuPath default imports. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DefaultAutoCompletor(boolean addQuPathCompletions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addCompletion(AutoCompletions.Completion completion);  ; protected void; addCompletions(Collection<? extends AutoCompletions.Completion> completions);  ; protected void; addCompletions(AutoCompletions.Completion... completions);  ; List<AutoCompletions.Completion>; getCompletions(String text,; int pos). Get a list of possible auto-completions for the given text ; with the caret at the specified position. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DefaultAutoCompletor; public DefaultAutoCompletor(boolean addQuPathCompletions); Constructor. Parameters:; addQuPathCompletions - if true, add standard Java completions for core QuPath classes. Method Details. addCompletion; protected void addCompletion(AutoCompletions.Completion completion). addCompletions; protected void addCompletions(AutoCompletions.Completion... completions). addCompletions; protected void addCompletions(Collection<? extends AutoCompletions.Completion> completions). getCompletions; public List<AutoCompletions.Completion> getCompletions(String text,; int pos); Description copied from interface: ScriptAutoCompletor; Get a list of possible auto-completions for the given text ; with the caret at the specified position. Specified by:; getCompletions in interface ScriptAutoCompletor; Parameters:; text - the full text; pos - the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html:1493,inherit,inherited,1493,javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/completors/DefaultAutoCompletor.html,1,['inherit'],['inherited']
Modifiability,"nterfaces:; Serializable, Comparable<HistogramChart.DisplayMode>, Constable. Enclosing class:; HistogramChart. public static enum HistogramChart.DisplayMode; extends Enum<HistogramChart.DisplayMode>; Display mode for the histogram. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Show as areas. BAR. Show as bars. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.DisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.DisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BAR; public static final HistogramChart.DisplayMode BAR; Show as bars.; This is the default, and is preferable for histograms with few bins. AREA; public static final HistogramChart.DisplayMode AREA; Show as areas.; This can be preferable for histograms with many bins, where only the overall shape is imporant. Method Details. values; public static HistogramChart.DisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.DisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html:1564,inherit,inherited,1564,javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.DisplayMode.html,1,['inherit'],['inherited']
Modifiability,"ntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1891,extend,extends,1891,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['extend'],['extends']
Modifiability,"ntrol. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. void; requestFollowCaret(). Request that the X and Y scrolls are adjusted to ensure the caret is visible. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.V",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:3385,inherit,inherited,3385,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['inherit'],['inherited']
Modifiability,"nts Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8562,plugin,plugins,8562,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"nts for detection objects with the weighted sum of measurements ; from nearby objects, using weights derived from a 2D Gaussian function.; ; This effectively adds in some contextual information. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SmoothFeaturesPlugin(). Default constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:1764,plugin,plugin,1764,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['plugin'],['plugin']
Modifiability,"nts. static PathObject; updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs). Update the ROI plane for a single object, and any descendant objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectTools; public PathObjectTools(). Method Details. hasPointROI; public static boolean hasPointROI(PathObject pathObject); Returns true if a PathObject has a Point ROI. Parameters:; pathObject - ; Returns:. countObjectsWithClass; public static int countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass); Count the number of PathObjects in a collection with a specified class or base class. Parameters:; pathObjects - ; pathClass - ; useBaseClass - ; Returns:. getObjectsOfClass; public static List<PathObject> getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get the PathObjects in a collection that are instances of a specified class. Parameters:; pathObjects - ; cls - ; Returns:. createImageRegionPredicate; public static Predicate<PathObject> createImageRegionPredicate(ImageRegion region); Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. Parameters:; region - ; Returns:. getLineObjects; public static <T extends PathObject> List<T> getLineObjects(Collection<T> pathObjects); Get a list of objects with line ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getAreaObjects; public static <T extends PathObject> List<T> getAreaObjects(Collection<T> pathObjects); Get a list of objects with area ROIs from a collection of objects. Type Parameters:; T - ; Parameters:; pathObjects - ; Returns:; Since:; v0.5.0. getPointObjects; public static <T extends PathObject> List<T> getPointObjects(Collection<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:16033,extend,extends,16033,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"ntsTransformMode; extends Enum<HistogramChart.CountsTransformMode>; Enum to specify how the counts are displayed. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; LOGARITHM. Natural logarithm of raw bin counts. NORMALIZED. Normalized bin counts, so that the sum of all counts is 1.0. RAW. Raw bin counts. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HistogramChart.CountsTransformMode; valueOf(String name). Returns the enum constant of this class with the specified name. static HistogramChart.CountsTransformMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. RAW; public static final HistogramChart.CountsTransformMode RAW; Raw bin counts. NORMALIZED; public static final HistogramChart.CountsTransformMode NORMALIZED; Normalized bin counts, so that the sum of all counts is 1.0. LOGARITHM; public static final HistogramChart.CountsTransformMode LOGARITHM; Natural logarithm of raw bin counts.; This is useful for displaying histograms with a wide range of counts.; Bins with zero counts are displayed as zero.; ; Important: HistogramChart cannot currently adjust the tick display to indicate a log scale. Method Details. values; public static HistogramChart.CountsTransformMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static HistogramChart.CountsTransformMode valueOf(String name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html:1752,inherit,inherited,1752,javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.CountsTransformMode.html,1,['inherit'],['inherited']
Modifiability,"nuActions.TmaActions;  ; tmaActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; TmaActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMACommands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACommands() - Constructor for class qupath.lib.gui.commands.TMACommands;  ; TMACoreObject - Class in qupath.lib.objects. A special PathObject used exclusively to represent TMA cores. TMACoreObject() - Constructor for class qupath.lib.objects.TMACoreObject. Default constructor. TMADataIO - Class in qupath.lib.gui.tma. Static methods for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAExplorer(QuPathGUI) - Constructor for class qupath.lib.gui.tma.TMAExplorer. Constructor. tmaExportDownsample - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; tmaExportDownsampleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default downsample factor to use when exporting TMA cores. TMAGrid - Interface in qupath.lib.objects.hierarchy. Interface defining a (rectangular) TMA grid. TMAGridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay cap",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1031873,plugin,plugin,1031873,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"num Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:260094,variab,variable,260094,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ny annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.function.BiPredicate; and, negate, or. Enum Constant Details. EVERYWHERE; public static final RegionFilter.StandardRegionFilters EVERYWHERE; Accept all requests. ANY_OBJECTS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS; Regions overlapping the ROIs of any objects. ANY_ANNOTATIONS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS; Regions overlapping the ROIs of any annotations. ANY_OBJECTS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_OBJECTS_BOUNDS; Regions overlapping the bounding box of any objects. ANY_ANNOTATIONS_BOUNDS; public static final RegionFilter.StandardRegionFilters ANY_ANNOTATIONS_BOUNDS; Regions overlapping the bounding box of any annotations. IMAGE; public static final RegionFilter.StandardRegionFilters IMAGE; Accept all requests for the image where the region is non-empty. Method Details. values; public static RegionFilter.StandardRegionFilters[] values(); Returns an array contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:2408,inherit,inherited,2408,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['inherit'],['inherited']
Modifiability,"n ignoreIntersecting). Get all the objects in a collection that are outside a defined region. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. static List<PathObject>; getAncestorList(PathObject pathObject). Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). static TMACoreObject; getAncestorTMACore(PathObject pathObject). Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core. static <T extends PathObject>List<T>; getAreaObjects(Collection<T> pathObjects). Get a list of objects with area ROIs from a collection of objects. static Set<String>; getAvailableFeatures(Collection<? extends PathObject> pathObjects). Get a set containing the names of all measurements found in the measurement lists of a specified object collection. static Collection<PathObject>; getDescendantObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get all descendant objects with a specified type. static List<PathObject>; getFlattenedObjectList(PathObject parentObject,; List<PathObject> list,; boolean includeParent). Get all descendant objects as a flattened list. static <T extends PathObject>List<T>; getLineObjects(Collection<T> pathObjects). Get a list of objects with line ROIs from a collection of objects. static ROI; getNucleusOrMainROI(PathObject pathObject). Get the nucleus ROI for a cell, or the main ROI if no nucleus is found. static ROI; getNucleusROI(PathObject pathObject). Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. static Collection<PathObject>; getObjectsForLocation(Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:5235,extend,extends,5235,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"o another item then it will be ; removed from that item. Parameters:; item - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(Action, KeyCombination). setAccelerator; public boolean setAccelerator(org.controlsfx.control.action.Action action,; KeyCombination combo); Set the accelerator for the specified action.; If the combo is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if ru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26491,plugin,plugin,26491,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,4,['plugin'],"['plugin', 'pluginClass', 'plugins']"
Modifiability,"o be selected, including a specified main selected object. selectObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the specified hierarchy. selectObjects(PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClass(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. selectObjectsByClass(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set objects that are a subclass of a specified class. selectObjectsByClassification(String...) - Static method in class qupath.lib.scripting.QP. Select objects for the current hierarchy that have one of the specified classifications. selectObjectsByClassification(ImageData<?>, PathClass...) - Static method in class qupath.lib.gui.commands.Commands. Select objects by classification, logging the step (if performed) in the history workflow. selectObjectsByClassification(PathObjectHierarchy, String...) - Static method in class qupath.lib.scripting.QP. Select objects for the specified hierarchy that have one of the specified classifications. selectObjectsByMeasurement(ImageData<?>, String) - Stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:899722,extend,extends,899722,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"o classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:3081,layers,layers,3081,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['layers'],['layers']
Modifiability,"o is null, any existing accelerator will be removed.; Additionally, if the accelerator is already assigned to another action then it will be ; removed from that item. Parameters:; action - ; combo - ; Returns:; true if changes were made, false otherwise; See Also:. setAccelerator(String, String); setAccelerator(MenuItem, KeyCombination). createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg); Create an action for a plugin to be run through this QuPath instance. Parameters:; name - name of the plugin; pluginClass - class of the plugin; arg - optional argument (may be required by some plugins); Returns:. createPluginAction; public org.controlsfx.control.action.Action createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg); Create an Action to call the specified plugin for the current image. Parameters:; name - plugin name; plugin - the plugin to call; arg - any argument required by the plugin; Returns:; an action that may be called to run the plugin. sendQuitRequest; public void sendQuitRequest(); Request to quit QuPath. runPlugin; public boolean runPlugin(PathPlugin<BufferedImage> plugin,; String arg,; boolean doInteractive); throws Exception; Run a plugin, interactively (i.e. launching a dialog) if necessary.; ; Note that this does not in itself perform any exception handling. Parameters:; plugin - the plugin to run; arg - optional string argument (usually JSON); doInteractive - if true, show an interactive dialog if the plugin is an instance of PathInteractivePlugin; Returns:; true if running the plugin was successful and was not cancelled.; Note that if doInteractive == true and the dialog was launched ; but not run, this will also return true.; Throws:; Exception. createPlugin; public PathPlugin<BufferedImage> createPlugin(Class<? extends PathPlugin> pluginClass); Create a plugin from a specified class. Parameters:; pluginClass - ; Returns:. getT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:26837,plugin,plugin,26837,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,5,['plugin'],['plugin']
Modifiability,"o long). paintRegionCompletely(ImageServer<BufferedImage>, Graphics, Shape, int, int, double, ImageObserver, ImageRenderer, long) - Method in interface qupath.lib.gui.images.stores.ImageRegionRenderer. Similar to ImageRegionRenderer.paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). paintSelectedBoundsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether the bounding box of selected objects should be painted. paintShape(Shape, Graphics2D, Color, Stroke, Color) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified shape with specified stroke and fill colors. paintSpecifiedObjects(Graphics2D, Collection<? extends PathObject>, OverlayOptions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified objects. paintTileBorders - Static variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; paintTMAGrid(Graphics2D, TMAGrid, OverlayOptions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified tissue microarray grid. paintViewer(Graphics, int, int) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; PaneTools - Class in qupath.lib.gui.tools. Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PaneTools() - Constructor for class qupath.lib.gui.tools.PaneTools. Deprecated.;  ; parallelize() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Parallelize tile export, if possible. parallelize(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:742962,variab,variable,742962,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"o repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2834,inherit,inherited,2834,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['inherit'],['inherited']
Modifiability,"o use, with a specified tile size. tile(TileRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the tile relevant for processing. tileAvailable(String, ImageRegion, BufferedImage) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; tileAvailable(String, ImageRegion, T) - Method in interface qupath.lib.gui.images.stores.TileListener. Notify a listener that an image tile has been received read & is available. tileBrush - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; tileCache - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the height of output tiles. TileListener<T> - Interface in qupath.lib.gui.images.stores. Interface for anything that needs to know when image tiles become available. tileListeners - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; tiler(Tiler) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a tiler to use. Tiler - Class in qupath.lib.objects.utils. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder - Class in qupath.lib.objects.utils;  ; Tiler.TileAlignment - Enum Cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1025405,plugin,plugins,1025405,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"o:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibrat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:61401,extend,extends,61401,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"oImage(MouseEvent, boolean, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mouseLocationToImage(MouseEvent, boolean, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; mouseLocationToImage(MouseEvent, boolean, boolean) - Method in class qupath.process.gui.WandToolEventHandler;  ; mouseMoved(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mouseMoved(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; mousePressed(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mousePressed(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; mouseReleased(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mouseReleased(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; MOVE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Move tool. MOVE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; MOVE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; MoveToolEventHandler - Class in qupath.lib.gui.viewer.tools.handlers. The MoveTool is used for quite a lot of things, movement-related:; movement around an image (panning), moving ROIs (translating) and moving individual; 'handles' of ROIs (resizing/reshaping). MoveToolEventHandler() - Constructor for class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; MoveToolEventHandler.ViewerMover - Class in qupath.lib.gui.viewer.tools.handlers. Helper class for panning a QuPathViewer (reasonably) smoothly. multiChannel(String, List<ColorTransforms.ColorTransform>, Function<double[][], Double>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Measurements. Create a new object measurement that requires multiple channels as input, using t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:699573,variab,variable,699573,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"oJSON ""FeatureCollection"". Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; getIncludeChildren(). If true, include child objects nested within the output. Collection<? extends PathObject>; getPathObjects(). Get the objects being wrapped. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects). Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. static FeatureCollection; wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects). Wrap a collection of PathObjects as a FeatureCollection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getIncludeChildren; public boolean getIncludeChildren(); If true, include child objects nested within the output. Returns:. getPathObjects; public Collection<? extends PathObject> getPathObjects(); Get the objects being wrapped. Returns:. wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects); Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects.; The purpose of this is to enable exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; Returns:; a feature collection that can be used with GsonTools; See Also:. wrap(Collection, boolean). wrap; public static FeatureCollection wrap(Collection<? extends PathObject> pathObjects,; boolean includeChildObjects); Wrap a collection of PathObjects as a FeatureCollection. The purpose of this is to enable ; exporting a GeoJSON FeatureCollection that may be reused in other software. Parameters:; pathObjects - a collection of path objects to store in a feature collection; includeChildObjects - if true, include child object in the feature collection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html:1543,extend,extends,1543,javadoc/docs/qupath/lib/io/FeatureCollection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/FeatureCollection.html,1,['extend'],['extends']
Modifiability,"object with the same type and classification as the input object, but a new ROI and ID.; ; Note that TMA core objects are not supported. Parameters:; pathObject - the template object; roiNew - the new ROI; Returns:; a new object with the same type and classification as the input object, but different ROI and ID.; Since:; v0.5.0. createLike; public static PathObject createLike(PathObject pathObject,; ROI roiNew,; ROI roiNucleus); Create a new object with the same type and classification as the input object, but a new ROI and ID.; This version of the method supports cell objects with a nucleus ROI.; ; Note that TMA core objects are not supported. Parameters:; pathObject - the template object; roiNew - the new ROI; roiNucleus - nucleus ROI; only relevant if the template object is a cell; Returns:; a new object with the same type and classification as the input object, but different ROI and ID.; Since:; v0.5.0. lockObjects; public static void lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Set specified objects to be 'locked'. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. unlockObjects; public static void unlockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Set specified objects to be 'unlocked'. Parameters:; hierarchy - if not null, fire an update event if the locked status for any object is changed; pathObjects - the objects to update. lockSelectedObjects; public static void lockSelectedObjects(PathObjectHierarchy hierarchy); Set selected objects to be 'locked', firing an update event if the status of any object is changed. Parameters:; hierarchy - . unlockSelectedObjects; public static void unlockSelectedObjects(PathObjectHierarchy hierarchy); Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. Parameters:; hierarchy - . toggleSelectedObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:51051,extend,extends,51051,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"objects. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileClassificationsToAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:1877,extend,extends,1877,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['extend'],['extends']
Modifiability,"objects. static BooleanProperty; createPersistentPreference(String name,; boolean defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static DoubleProperty; createPersistentPreference(String name,; double defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static IntegerProperty; createPersistentPreference(String name,; int defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static LongProperty; createPersistentPreference(String name,; long defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static StringProperty; createPersistentPreference(String name,; String defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T extends Enum<T>>ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Class<T> enumType). Create a persistent property, which is one that will be saved to/reloaded from the user preferences. static <T> ObjectProperty<T>; createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer). Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences. static ObjectProperty<Locale>; defaultLocaleDisplayProperty(). Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormatProperty(). Get a property for setting the default Locale for Locale.Category.FORMAT. static ObjectProperty<Locale>; defaultLocaleProperty(). Get a property for setting the default Locale. static DoubleProperty; detectionStrokeThicknessProperty(). Preferred stroke thickness to use when drawing detections ROIs. static ObjectProperty<PathPrefs.DetectionTree",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:13467,extend,extends,13467,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['extend'],['extends']
Modifiability,"objects.; ; Important! This class is intended to simplify making measurements where all pixel values can fit into a; single double array. It is not suitable for large images or tiling.; ; It is also not very efficient if the same channel is used multiple times, since the channel will be extracted each; time. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Measurement",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:1576,extend,extends,1576,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,2,['extend'],['extends']
Modifiability,objects.utils (QuPath 0.5.0); qupath.lib.objects.utils Class Hierarchy (QuPath 0.5.0); Tiler.Builder (QuPath 0.5.0); Tiler (QuPath 0.5.0); Tiler.TileAlignment (QuPath 0.5.0). CellTools (QuPath 0.5.0); DefaultPathObjectComparator (QuPath 0.5.0); DefaultPathObjectConnectionGroup (QuPath 0.5.0); MetadataStore (QuPath 0.5.0); qupath.lib.objects (QuPath 0.5.0); qupath.lib.objects Class Hierarchy (QuPath 0.5.0); PathAnnotationObject (QuPath 0.5.0); PathCellObject (QuPath 0.5.0); PathDetectionObject (QuPath 0.5.0); PathObject (QuPath 0.5.0); PathObjectConnectionGroup (QuPath 0.5.0); PathObjectConnections (QuPath 0.5.0); PathObjectFilter (QuPath 0.5.0); PathObjectPredicates (QuPath 0.5.0); PathObjectPredicates.PathObjectPredicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScri,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:27919,plugin,plugins,27919,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"ocal intensity values must be for the wand region growing. setWandSigmaPixels(double) - Static method in class qupath.process.gui.WandToolEventHandler. Set the Gaussian sigma value used to smooth the image when applying the wand. setWandUseOverlays(boolean) - Static method in class qupath.process.gui.WandToolEventHandler. Set whether the wand tool should be influenced by pixel values painted on image overlays. setWarn() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.WARN. setWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main output writer. setZPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested z-slice to be visible. shape(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Get the shape of a multidimensional Mat. SHAPE_FEATURES - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ShapeFeaturesPlugin<T> - Class in qupath.lib.plugins.objects. Add shape measurements. ShapeFeaturesPlugin() - Constructor for class qupath.lib.plugins.objects.ShapeFeaturesPlugin. Constructor. ShapeSimplifier - Class in qupath.lib.roi. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. ShapeSimplifier() - Constructor for class qupath.lib.roi.ShapeSimplifier;  ; shapeToGeometry(Shape) - Static method in class qupath.lib.roi.GeometryTools. Convert a java.awt.Shape to a JTS Geometry. SharedThreadPoolManager - Class in qupath.lib.gui. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. show() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add the chart to a stage, and show it in the Application thread. show() - Method in class qupath.lib.gui.charts.Charts.Scatte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:957177,plugin,plugins,957177,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ocess.gui - package qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands - package qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density - package qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml - package qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui - package qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. QuPathApp - Class in qupath.lib.gui. Launcher application to start QuPath. QuPathApp() - Constructor for class qupath.lib.gui.QuPathApp;  ; QuPathExtension - Interface in qupath.lib.gui.extensions. Simple interface for QuPath extensions. QuPathGUI - Class in qupath.lib.gui. Main GUI for QuPath, written using JavaFX. qupathj - package qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. QuPathPenManager - Class in qupath.lib.gui.viewer.tools. Helper class for managing pressure-sensitive input. QuPathPenManager() - Constructor for class qupath.lib.gui.viewer.tools.QuPathPenManager;  ; QuPathPenManager.PenInputManager - Interface in qupath.lib.gui.viewer.tools. Interface defining minimal behavior for a pen input device. QuPathResources - Class in qupath.lib.gui.localization. Load strings from the default resource bundle. QuPathResources() - Constructor for class qupath.lib.gui.localization.QuPathResources;  ; QuPathStyleManager - Class in qupath.lib.gui.prefs. Class to facilitate the use of different styles within QuPath. QuPathStyleManager() - Constructor for class qupath.lib.gui.prefs.QuPathStyleManager;  ; QuPathStyleManager.Fonts - Enum Class in qupath.lib.gui.prefs. Available font families. QuPathStyleManager.StyleOption - Interface in qupath.lib.gui.prefs. Interface defining a style that may be applied to QuPat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:817235,plugin,plugins,817235,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,od in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:400976,plugin,plugins,400976,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"od. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class IntensityFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.IntensityFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class IntensityFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:1277,inherit,inherited,1277,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"od; Description; MeasurementExporter; excludeColumns(String... excludeColumns). Specify the columns that will be excluded during the export. void; exportMeasurements(File file). Exports the measurements of one or more entries in the project. void; exportMeasurements(OutputStream stream). Exports the measurements of one or more entries in the project. MeasurementExporter; exportType(Class<? extends PathObject> type). Specify what type of object should be exported. MeasurementExporter; filter(Predicate<PathObject> filter). Filter the PathObjects before export (objects returning true for the predicate will be exported). List<String>; getExcludeColumns(). Returns the list of columns to exclude from export. List<ProjectImageEntry<BufferedImage>>; getImageList(). Returns the list of images (ProjectImageEntry). List<String>; getIncludeColumns(). Returns the list of columns to include in the export. String; getSeparator(). Returns the separator used in between measurements. Class<? extends PathObject>; getType(). Returns the type of path objects used in the export. MeasurementExporter; imageList(List<ProjectImageEntry<BufferedImage>> imageList). Specify the list of images (ProjectImageEntry) to export. MeasurementExporter; includeOnlyColumns(String... includeOnlyColumns). Specify the columns that will be included in the export. MeasurementExporter; separator(String sep). Specify the separator used between measurement values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementExporter; public MeasurementExporter(). Method Details. exportType; public MeasurementExporter exportType(Class<? extends PathObject> type); Specify what type of object should be exported. ; Default: image (root object). Parameters:; type - ; Returns:; this exporter. includeOnlyColumns; public MeasurementExporter includeOnlyColumns(String... includeOnlyColumns); Specify the columns tha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html:1767,extend,extends,1767,javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MeasurementExporter.html,1,['extend'],['extends']
Modifiability,"odel,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:3379,layers,layers,3379,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['layers'],['layers']
Modifiability,"odifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2242,plugin,plugins,2242,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['plugin'],['plugins']
Modifiability,"odsConcrete Methods. Modifier and Type; Method; Description; static DataFormat; getGeoJsonDataFormat(). Get a DataFormat suitable for storing GeoJSON data on a clipboard. static boolean; promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. static boolean; promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file). Prompt to import objects read from a file. static boolean; promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry). Prompt to import objects from a project entry. static boolean; promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData). Prompt to paste objects from the system clipboard, if possible. static List<PathObject>; readObjectsFromClipboard(ImageData<BufferedImage> imageData). Try to read objects from the system clipboard. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MIME_TYPE_GEOJSON; public static final String MIME_TYPE_GEOJSON; Mime type for GeoJson. See Also:. Constant Field Values. Method Details. getGeoJsonDataFormat; public static DataFormat getGeoJsonDataFormat(); Get a DataFormat suitable for storing GeoJSON data on a clipboard. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read ob",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:1791,inherit,inherited,1791,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,1,['inherit'],['inherited']
Modifiability,"odsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:1880,extend,extends,1880,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['extend'],['extends']
Modifiability,"of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:2849,inherit,inherited,2849,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['inherit'],['inherited']
Modifiability,"of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2911,inherit,inherited,2911,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['inherit'],['inherited']
Modifiability,"oi.PolygonROI;  ; getT() - Method in class qupath.lib.roi.PolylineROI;  ; getT() - Method in class qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the na",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:529742,plugin,plugins,529742,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"oid; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Show the cursor location. BooleanProperty; showOverviewProperty(). Show the overview image. BooleanProperty; showScalebarProperty(). Show the scalebar. void; splitViewer(QuPathViewer viewer,; boolean splitVertical);  ; ReadOnlyBooleanProperty; synchronizeViewersProperty();  ; void; viewerClosed(QuPathViewer viewer). Called when a viewer is closed. void; visibleRegionChanged(QuPathViewer viewer,; Shape shape). Called when the visible region has changed in a viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showOverview; public BooleanProperty showOverviewProperty; Show the overview image. See Also:. showOverviewProperty(). showLocation; public BooleanProperty showLocationProperty; Show the cursor location. See Also:. showLocationProperty(). showScalebar; public BooleanProperty showScalebarProperty; Show the scalebar. See Also:. showScalebarProperty(). imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. See Also:. imageDataProperty(). activeViewer; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:4580,inherit,inherited,4580,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['inherit'],['inherited']
Modifiability,"oid; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice currently visible in the viewer. See Also:. getZPosition(); setZPosition(int); zPositionProperty(). tPosition; public IntegerProperty tPositionProperty; Current t-position for the ti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13623,inherit,inherited,13623,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['inherit'],['inherited']
Modifiability,"oject, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixel sizes. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. static bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:39144,extend,extends,39144,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"oject. put0(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair without rotation. put135(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 135 degree rotation. put45(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 45 degree rotation. put90(int, int) - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Record coocurrence for a (binned) value pair with 90 degree rotation. putActionProperty(MenuItem, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a MenuItem, so that it may be retrieved later. putActionProperty(Node, Action) - Static method in class qupath.lib.gui.actions.ActionTools. Add an Action to the properties of a Node, so that it may be retrieved later. putAll(Map<String, ? extends Number>) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified map into this list. putAll(MeasurementList) - Method in interface qupath.lib.measurements.MeasurementList. Put all the values from the specified list into this one. putMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.put(String, double). putMeasurement(Measurement) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:801298,extend,extends,801298,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,ojects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionIcon (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMenu (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMethod (implements java.lang.annotation.Annotation). Enum Class Hierarchy. java.lang.Object.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:42743,plugin,plugins,42743,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"olation. java.lang.Object; java.lang.Enum<ImageInterpolation>; qupath.lib.gui.viewer.ImageInterpolation. All Implemented Interfaces:; Serializable, Comparable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:1410,inherit,inherited,1410,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,1,['inherit'],['inherited']
Modifiability,"olean keepChildren). Remove a collection of objects, firing a single 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. boolean; removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, without firing a remove event. void; removePathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wasn't intended primarily to listen to changes within individual PathObjects). void; resolveHierarchy(). Attempt to resolve the parent-child relationships between all objects within the hierarchy. void; setHierarchy(PathObjectHierarchy hierarchy). Set the contents of this hierarchy to be the same as that of another hierarchy. void; setTMAGrid(TMAGrid tmaGrid). Set the tma grid for this hierarchy. String; toString();  ; void; updateObject(PathObject pathObject,; boolean isChanging). Update an object that is already in the hierarchy (e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. HIERARCHY_COMPARATOR; public static final Comparator<PathObject> HIERARCHY_COMPARATOR; Comparator to use when looking for a parent annotation in the hierarchy.; The logic is:; ; Sort by area (smallest first); Sort by hierarchy level (deepest first); Sort by DefaultPathObjectComparator. In practice, one expects an object to be placed inside the smallest containing annotation - ; identical areas are likely to be rare, unless obtained by duplication. Constructor Details. PathObjectHierarchy; public PathObjectHierarchy(); Default constructor, creates an empty hierarchy. Method Details. isEmpty; public boolean isEmpty(); Check if the hierarchy is empty (i.e. no objects apart from the root object, no feature maps). Returns:. addListener; public void addListener(PathObjectHierarchyListener listener); Add a hierarchy change listener. Parameters:; listener - ; Since:; v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:8206,inherit,inherited,8206,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['inherit'],['inherited']
Modifiability,"ollection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; parentObject - ; tasks - . runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:5379,plugin,plugin,5379,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugin']
Modifiability,"olorMap. createIndexedColorModel8bit(ColorMaps.ColorMap, int) - Static method in class qupath.lib.color.ColorModelFactory. Create an 8-bit IndexColorModel from a ColorMaps.ColorMap, allowing for a transparent pixel to be set (e.g. createInstance() - Static method in class qupath.lib.gui.ExtensionControlPane. Create an instance of the ExtensionControlPane UI pane. createInstance() - Static method in class qupath.lib.roi.RoiEditor. Create a new RoiEditor. createInstance(int, int, int, int, int, int) - Static method in class qupath.lib.regions.ImageRegion. Create a region based on its bounding box coordinates, z-slice index and time point index. createInstance(Class<? extends ImageServerBuilder<T>>, float, Collection<ImageServerBuilder.ServerBuilder<T>>) - Static method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. createInstance(Class<? extends ImageServerBuilder<T>>, float, ImageServerBuilder.ServerBuilder<T>) - Static method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. createInstance(Class<? extends ImageServerBuilder<T>>, URI, String...) - Static method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. createInstance(Class<? extends ImageServerBuilder<T>>, ImageServerMetadata, URI, String...) - Static method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). createInstance(String, double, int, int, int, int) - Static method in class qupath.lib.regions.RegionRequest. Create a req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:187707,extend,extends,187707,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"olorWithOpacity(Color color,; double opacity). Get a color with a specified opacity, setting the alpha channel accordingly. static Color; getColorWithOpacity(Integer rgb,; double opacity). Get a color with a specified opacity, based on the packed RGB values in an Integer. static IndexColorModel; getIndexColorModel(StainVector stain). Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). static IndexColorModel; getIndexColorModel(StainVector stain,; boolean whiteBackground). Get an IndexColorModel representing a color deconvolution stain. static Color; getMoreTranslucentColor(Color color). Get a (slightly more) translucent version of the specified color. static Color; getTranslucentColor(Color color). Get a (slightly) translucent version of the specified color. static Color; scaleColor(Color color,; double factor). Get a scaled version of the specified color, where the RGB values are independently scaled by a specified factor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRANSLUCENT_WHITE; public static final Color TRANSLUCENT_WHITE; White, with 50% opacity. TRANSLUCENT_BLACK; public static final Color TRANSLUCENT_BLACK; Black, with 50% opacity. Constructor Details. ColorToolsAwt; public ColorToolsAwt(). Method Details. getCachedColor; public static Color getCachedColor(int r,; int g,; int b,; int a); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; a - ; Returns:. getCachedColor; public static Color getCachedColor(int r,; int g,; int b); Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). Parameters:; r - ; g - ; b - ; Returns:. getCachedColor; public static Color getCachedColor(Integer rgb); Get cached color. Assumed not to have alpha set, unless the relevant bits are non-zero. Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html:2810,inherit,inherited,2810,javadoc/docs/qupath/lib/color/ColorToolsAwt.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorToolsAwt.html,1,['inherit'],['inherited']
Modifiability,"ols.PathTools;  ; createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Deprecated.; Use PixelClassificationOverlay.create(OverlayOptions, Function, ImageRenderer) instead. createFloatImage(float[], int, int) - Static method in class qupath.lib.analysis.images.SimpleImages. Create a SimpleImage backed by an existing float array of pixels. createFloatImage(int, int) - Static method in class qupath.lib.analysis.images.SimpleImages. Create a SimpleImage backed by a float array of pixels. createFormatter(int) - Static method in class qupath.lib.common.GeneralTools. Create a new DecimalFormat that may be used to convert a number to have a maximum of nDecimalPlaces; (trailing zeros are not shown). createForObservableViewer(ObservableValue<? extends QuPathViewer>) - Static method in class qupath.lib.gui.UndoRedoManager;  ; createFromBuilders(Collection<? extends ImageServerBuilder.ServerBuilder<BufferedImage>>) - Static method in class qupath.lib.gui.panes.ServerSelector;  ; createFromCentroids(Collection<PathObject>, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs. createFromGeometryCoordinates(Collection<PathObject>, boolean, double) - Static method in class qupath.lib.analysis.DelaunayTools. Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. createFullImageAnnotation(boolean) - Static method in class qupath.lib.scripting.QP. Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. createFullImageAnnotation(boolean, int, int) - Static method in class qupath.lib.scripting.QP. Create an annotation around the full image for the current image, on the specified z-slice and timepoint. createFullImageAnnotation(QuPathViewer) - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:179630,extend,extends,179630,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"olylineROI;  ; contains(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; contains(int, int, int, int) - Method in class qupath.lib.regions.ImageRegion. Check if this region contains a specified coordinate. contains(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Returns true if the manager knows a resource with the specified name exists. containsCentroid(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Check whether a child object's centroid is contained within a ROI. containsClassification(String...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if any component of its classification has any of the specified names. containsImageJRois(File) - Static method in class qupath.imagej.tools.IJTools. Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. containsKey(Object) - Method in class qupath.lib.plugins.parameters.ParameterList. Returns true if a parameter exists in this list with a specified key. containsKey(String) - Method in interface qupath.lib.measurements.MeasurementList. Returns true if this list contains a measurement with the specified name. containsMetadata(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Check if a metadata value is present for a specified key. containsName(PathClass, String) - Static method in class qupath.lib.objects.classes.PathClassTools. Query whether a PathClass or any of its ancestor classes contains a specified name. containsNamedMeasurement(String) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; since v0.4.0; replaced by MeasurementList.containsKey(String). containsObject(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; containsObject(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Returns true if the specified PathObject is con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:138038,plugin,plugins,138038,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"om class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, setLocked, setPathClass, setROI. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathCellObject; public PathCellObject(); Default constructor. Should not be used directly, instead use PathObjects.createCellObject(ROI, ROI, PathClass, MeasurementList). Method Details. hasNucleus; public boolean hasNucleus(); Returns true if a nucleus ROI is stored for this cell. Returns:. getNucleusROI; public ROI getNucleusROI(); Get the nucleus ROI for this cell. This may be null, or may be a ROI stored in addition to PathROIObject.getROI(), ; which returns the overall cell boundary. Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathROIObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externaliza",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html:2449,inherit,inherited,2449,javadoc/docs/qupath/lib/objects/PathCellObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathCellObject.html,1,['inherit'],['inherited']
Modifiability,"om class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2128,inherit,inherited,2128,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['inherit'],['inherited']
Modifiability,"om objects of a specific class for the specified hierarchy. removeMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Remove a metadata value. removeNames(PathClass, String...) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeNames(PathClass, Collection<String>) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a single object from the hierarchy, firing a remove event. removeObject(PathObject, boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. removeObjects(Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a collection of objects, firing a single 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. removeObjects(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. removeObjects(PathObject[], boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. removeObjectsOutsideImage() - Static method in class qupath.lib.scripting.QP. Remove objects that are entirely outside the current image. removeObjectsOutsideImage(boolean) - Static method in class qupath.lib.scripting.QP. Remove objects that are entirely or partially outside the current image. removeObjectsOutsideImage(Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:847193,extend,extends,847193,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ommands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; resolveHierarchy() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Attempt to resolve the parent-child relationships between all objects within the hierarchy. resolveHierarchy() - Static method in class qupath.lib.scripting.QP. Resolve the location of annotations in the current hierarchy by s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864994,plugin,plugins,864994,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ommon.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. concatChannels(Collection<ImageServer<BufferedImage>>) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate a collection of additional servers along the 'channels' dimension (iteration order is used). concatChannels(ImageServer<BufferedImage>...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Concatenate additional servers along the 'channels' dimension. config(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). config(URI) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Path to config file (if required). confirmation() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an confirmation alert dialog. constrainCellByNucleusDistance(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. constrainCellByScaledNucleus(PathCellObject, double, boolean) - Static method in class qupath.lib.objects.CellTools. Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. constrainCellOverlaps(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.CellTools. Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. constrainToBounds(Geometry, double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Comput",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:135174,config,config,135174,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['config']
Modifiability,"omparable<ROI.RoiType>, Constable. Enclosing interface:; ROI. public static enum ROI.RoiType; extends Enum<ROI.RoiType>; Enum representing the major different types of ROI. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. ROI represents a closed area (possibly with holes). LINE. ROI represents a line or polyline. POINT. ROI represents points. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI.RoiType; valueOf(String name). Returns the enum constant of this class with the specified name. static ROI.RoiType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ROI.RoiType AREA; ROI represents a closed area (possibly with holes). LINE; public static final ROI.RoiType LINE; ROI represents a line or polyline. POINT; public static final ROI.RoiType POINT; ROI represents points. Method Details. values; public static ROI.RoiType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ROI.RoiType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html:1539,inherit,inherited,1539,javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.RoiType.html,2,['inherit'],['inherited']
Modifiability,"on - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; runTasks(Collection<? extends Runnable>) - Method in interface qupath.lib.plugins.TaskRunner. Pass a collection of parallelizable tasks to run. S. sameClassificationPredicate() - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects that share the same classification. samplesPerPixel(int[]) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; SANS_SERIF - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Preferred sans-serif font. saturation(int) - Static method in class qupath.lib.color.ColorTransformer. Extract saturation value from RGB-to-HSB transform. Saturation - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Saturation value (from RGB-HSB transform). saturationPercentProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the percentage of any non-8-bit image that should be saturated when applying aut",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:879403,plugin,plugins,879403,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"on Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.geom. Class qupath.lib.geom.Point2; class Point2 extends qupath.lib.geom.AbstractPoint implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.images.servers.openslide.jna. Exception Class qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException; class OpenSlideDisposedException extends RuntimeException implements Serializable. Package qupath.lib.measurements. Class qupath.lib.measurements.NumericMeasurementList.DoubleList; class DoubleList extends qupath.lib.measurements.NumericMeasurementList.AbstractNumericMeasurementList implements Serializable. serialVersionUID:; 1L. Serialized Fields. values; double[] values. Class qupath.lib.measurements.NumericMeasurementList.FloatList; class FloatList extends qupath.lib.measurements.NumericMeasurementList.AbstractNumericMeasurementList implements Serializable. serialVersionUID:; 1L. Serialized Fields. values; float[] values. Package qupath.lib.objects. Class qupath.lib.objects.DefaultPathObjectConnectionGroup; class DefaultPathObjectConnectionGroup extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathAnnotationObject; class PathAnnotationObject extends PathROIObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:1764,extend,extends,1764,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"on(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Overrides:; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2258,inherit,inherited,2258,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['inherit'],['inherited']
Modifiability,"on, AnnotatedElement) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action. parseAnnotations(Action, AnnotatedElement, String) - Static method in class qupath.lib.gui.actions.ActionTools. Parse annotations relating to an action, updating the properties of the action with an optional base menu. parseArgStringValues(String) - Static method in class qupath.lib.common.GeneralTools. Parse the contents of a JSON String. parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; parseArgument(ImageData<BufferedImage>, String) - Method in class qupath.opencv.CellCountsCV;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. parseColorDeconvolutionStainsArg(String) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. parseDisplaySettings(JsonElement) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object, if possible. parseDisplaySettings(Path) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object. parseLayers(Net, int, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Parse the layers for a Net, which allows inspection of names and sizes. parseNumeric(List<String>, boolean) - Static method in class qupath.lib.io.TMAScoreImporter. Parse numeric values from a list of str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:748117,plugin,plugins,748117,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"on, boolean); findObjectsOutsideRegion(Collection, ImageRegion, int, int, int, int, boolean). findObjectsOutsideRegion; public static List<PathObject> findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting); Get all the objects in a collection that are outside a defined region. Parameters:; pathObjects - input objects to check; region - 2D region; ignoreIntersecting - if true, consider objects that overlap the region boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the region; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, int, int, int, int, boolean). findObjectsOutsideRegion; public static List<PathObject> findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting); Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. Parameters:; pathObjects - input objects to check; region - 2D region; minZ - minimum z for the region (inclusive); maxZ - maximum z for the region (exclusive); minT - minimum t for the region (inclusive); maxT - maximum t for the region (exclusive); ignoreIntersecting - if true, consider objects that overlap the region boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the region; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, boolean). updatePlaneRecursive; public static PathObject updatePlaneRecursive(PathObject pathObject,; ImagePlane plane,; boolean copyMeasurements,; boolean createNewIDs); Update the ROI plane ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:20039,extend,extends,20039,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"on.IJExtensionCommands. Commands to install with the ImageJ extension. IJTools. Collection of static methods to help with using ImageJ with QuPath. ImageChannel. The name and display color for a single image channel. ImageData<T>. Class that brings together the main data in connection with the analysis of a single image. ImageData.ImageType. Enum representing possible image types. ImageDataOp. Request pixels from an image, potentially applying further transforms. ImageDataServer<T>. An ImageServer that wraps an ImageData. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. ImageDisplay. Class used to look after the color transforms that may be applied to an image,; including brightness/contrast settings. ImageDisplaySettings. A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. ImageInterpolation. Supported interpolation methods when displaying images. ImageJMacroRunner. QuPath plugin for running ImageJ macros & returning detected regions. ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageJServer. ImageServer that uses ImageJ's image-reading capabilities. ImageJServerBuilder. Builder for ImageServers that use ImageJ to read images. ImageOp. An operation that may be applied to a Mat. ImageOps. Create and use ImageOp and ImageDataOp objects. ImageOps.Channels. Channel and color operations. ImageOps.Core. Core operations. ImageOps.Filters. Filtering operations. ImageOps.ML. Machine learning operations. ImageOps.Normalize. Normalization operations. ImageOps.PaddedOp. Abstract ImageOp to simplify the process of handling padding. ImageOps.Threshold. Thresholding operations. ImagePlane. Helper class to store z-slice and time point indices, optionally along with a channel index as well. ImageRegion. Class for defining an image region. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:22379,plugin,plugin,22379,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,on.svg.SvgTools.SvgBuilder. Specify an array of objects to export. PathObjects - Class in qupath.lib.objects. Helper class to create PathObject. PathObjects() - Constructor for class qupath.lib.objects.PathObjects;  ; PathObjectSelectionListener - Interface in qupath.lib.objects.hierarchy.events. A listener to selection changes within a PathObjectSelectionModel. PathObjectSelectionModel - Class in qupath.lib.objects.hierarchy.events. Model for handling selection of single and multiple PathObjects. PathObjectSelectionModel() - Constructor for class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel;  ; PathObjectTools - Class in qupath.lib.objects. A collection of static methods to help work with PathObjects. PathObjectTools() - Constructor for class qupath.lib.objects.PathObjectTools;  ; PathOverlay - Interface in qupath.lib.gui.viewer.overlays. Interface defining an overlay to paint on top of a viewer. PathPlugin<T> - Interface in qupath.lib.plugins. Primary interface for defining a 'plugin' command. PathPrefs - Class in qupath.lib.gui.prefs. Central storage of QuPath preferences. PathPrefs() - Constructor for class qupath.lib.gui.prefs.PathPrefs;  ; PathPrefs.AutoUpdateType - Enum Class in qupath.lib.gui.prefs. Options for automatic updating checking of QuPath and/or extensions. PathPrefs.DetectionTreeDisplayModes - Enum Class in qupath.lib.gui.prefs. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize - Enum Class in qupath.lib.gui.prefs. Enum to control font size. PathPrefs.ImageTypeSetting - Enum Class in qupath.lib.gui.prefs. Enum defining how setting the image type should be handled for new images. PathROIObject - Class in qupath.lib.objects. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject - Class in qupath.lib.objects. The root object used at the base of a PathObjectHierarchy. PathRootObject() - Constructor for class qupath.lib.objects.PathRootObject;  ; paths(Path..,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:758693,plugin,plugin,758693,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"on; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageDat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:1944,inherit,inherited,1944,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['inherit'],['inherited']
Modifiability,"on; static class ; OpenCVClassifiers.BoostClassifier. Classifier based on Boost. static class ; OpenCVClassifiers.DTreesClassifier. Classifier based on DTrees. static class ; OpenCVClassifiers.EMClusterer. Clusterer based on EM. static class ; OpenCVClassifiers.LogisticRegressionClassifier. Classifier based on LogisticRegression. static class ; OpenCVClassifiers.NormalBayesClassifierCV. Classifier based on NormalBayesClassifier. static class ; OpenCVClassifiers.OpenCVStatModel. Wrapper class for a StatModel, which standardizes how training may be performed and ; parameters can be set. static class ; OpenCVClassifiers.RTreesClassifier. Classifier based on RTrees. static class ; OpenCVClassifiers.SVMClassifierCV. Classifier based on SVM. static class ; OpenCVClassifiers.SVMSGDClassifierCV. Classifier based on SVMSGD. Constructor Summary; Constructors. Constructor; Description; OpenCVClassifiers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVClassifiers.OpenCVStatModel; createStatModel(Class<? extends StatModel> cls). Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. static OpenCVClassifiers.OpenCVStatModel; wrapStatModel(StatModel statModel). Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVClassifiers; public OpenCVClassifiers(). Method Details. createStatModel; public static OpenCVClassifiers.OpenCVStatModel createStatModel(Class<? extends StatModel> cls); Create an OpenCVClassifiers.OpenCVStatModel for a specific class of StatModel. Parameters:; cls - ; Returns:. wrapStatModel; public static OpenCVClassifiers.OpenCVStatModel wrapStatModel(StatModel statModel); Create an OpenCVClassifiers.OpenCVStatModel by wrapping an existing StatModel. Parameters:; statModel - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html:2055,extend,extends,2055,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.html,6,"['extend', 'inherit']","['extends', 'inherited']"
Modifiability,"on<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. exportObjectsAsGeoJSON(OutputStream, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. exportObjectsAsGeoJSON(Path, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. ExportObjectsCommand - Class in qupath.lib.gui.commands. Command to export object(s) in GeoJSON format to an output file. exportObjectsToGeoJson(Collection<? extends PathObject>, String, String, String...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportObjectsToGeoJson(Collection<? extends PathObject>, String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportPreferences(OutputStream) - Static method in class qupath.lib.gui.prefs.PathPrefs. Export preferences to a stream. exportSelectedObjectsToGeoJson(String, String, String...) - Static method in class qupath.lib.scripting.QP. Export the selected objects to an output file as GeoJSON. exportSelectedObjectsToGeoJson(String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export the selected objects to an output file as GeoJSON. exportSnapshotActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ExportSnapshotActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; exportTMAData(String, double) - Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the current image. exportTMAData(Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:290757,extend,extends,290757,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"on<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,; Collection<? extends PathObject> targetObjects). Match objects according to their IDs. static PathObject; mergeObjects(Collection<? extends PathObject> pathObjects). Merge objects by calculating the union of their ROIs. static <K> List<PathObject>; mergeObjects(Collection<? extends PathObject> pathObjects,; Function<? super PathObject,? extends K> classifier). Merge objects that share a property in common. static boolean; mergePointsForAllClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane, ; creating multi-point annotations for all matching points and removing the (previously-separated) a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:8300,extend,extends,8300,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"on<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2947,plugin,plugins,2947,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['plugin'],['plugins']
Modifiability,"on<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1994,extend,extend,1994,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['extend'],['extend']
Modifiability,"onBuilder for a specific supported OpenCV class, ; i.e. getUndoRedoManager() - Method in class qupath.lib.gui.QuPathGUI. Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getURIs() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; getURIs() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; getURIs() - Method in class qupath.lib.images.servers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:543242,plugin,plugins,543242,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"onObject; qupath.lib.objects.PathTileObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; ParallelTileObject. public class PathTileObject; extends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathTileObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html:1483,inherit,inherited,1483,javadoc/docs/qupath/lib/objects/PathTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html,1,['inherit'],['inherited']
Modifiability,"onal; includeParent - if true, parentObject will be included in the output list; Returns:; either list, or a new list created if necessary. countDescendants; public static int countDescendants(PathObject pathObject); Count the descendants of a PathObject recursively. Parameters:; pathObject - ; Returns:. containsROI; @Deprecated; public static boolean containsROI(ROI parentROI,; ROI childROI); Deprecated.; Test whether one ROI is can completely contain a second ROI.; Returns false if either ROI is null.; ; Note: This is not a perfect test, since it really only checks if the vertices of the child ROI fall within the parent - it is possible; that connecting lines stray outside the parent, yet it still returns true. This behavior may change in later versions.; ; TODO: Consider improving 'containsROI' method accuracy. Parameters:; parentROI - ; childROI - ; Returns:. findObjectsOutsideImage; public static List<PathObject> findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting); Get all the objects with ROIs that are outside the bounds of an image. Parameters:; pathObjects - the input objects to check; server - the image to check; ignoreIntersecting - if true, consider objects that overlap the image boundary to be inside (and therefore don't include them in the output); ; if false, consider them to be outside and include them in the output; Returns:; a filtered list of the input object containing those considered outside the image; Since:; v0.4.0; See Also:. findObjectsOutsideRegion(Collection, ImageRegion, boolean); findObjectsOutsideRegion(Collection, ImageRegion, int, int, int, int, boolean). findObjectsOutsideRegion; public static List<PathObject> findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting); Get all the objects in a collection that are outside a defined region. Parameters:; pathObjects - input objects to check; region - 2D reg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:18491,extend,extends,18491,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"ons with the specified PathClass sharing the same ImagePlane, ; creating a single multi-point annotation for all matching points and removing the (previously-separated) annotations. static boolean; mergePointsForSelectedObjectClasses(PathObjectHierarchy hierarchy). Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations,; creating multi-point annotations for all matching points and removing the (previously-separated) annotations. static String[]; parseTMALabelString(String labelString). Parse a string input representing potential TMA core labels. static boolean; relabelTMAGrid(TMAGrid grid,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static Collection<PathObject>; removeOverlaps(Collection<? extends PathObject> pathObjects,; Comparator<PathObject> comparator,; double overlapTolerance). Resolve overlaps, discarding one and keeping the other. static Collection<PathObject>; removeOverlapsByLocation(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away. static Collection<PathObject>; removeOverlapsBySize(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. static Collection<PathObject>; restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap). Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). static PathClass; setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds). Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:10409,extend,extends,10409,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"ons.menus.ViewMenuActions.Actions;  ; commandBarDisplay - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; commandBarDisplayProperty() - Static method in class qupath.lib.gui.tools.CommandFinderTools. Property specifying where the command bar should be displayed relative to the main viewer window. CommandFinderTools - Class in qupath.lib.gui.tools. Helper tools for creating components that enable fast access to menu commands via a filtered list. CommandFinderTools() - Constructor for class qupath.lib.gui.tools.CommandFinderTools;  ; CommandFinderTools.CommandBarDisplay - Enum Class in qupath.lib.gui.tools. Available modes for displaying the command bar. CommandFinderTools.CommandEntry - Class in qupath.lib.gui.tools. Helper class to wrap summary data for a command to display in the list. CommandLineProgressMonitor() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; CommandLineTaskRunner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:125953,plugin,plugins,125953,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"onsFromMap(Map<PathObject,PathClass> classificationMap). Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). static PathClass; setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds). Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects,; double buffer). Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> pathObjects). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. static boolean; standardizeClassifications(Collection<PathObject> pathObjects). Standardize the classifications for a collection of objects. static boolean; standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparato",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:11894,extend,extends,11894,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability,"onsFromPixelClassifier; public static boolean createDetectionsFromPixelClassifier(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; imageData - the original image data, which will be the input to the pixel classifier; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Returns:; true if changes were made to the hierarchy, false otherwise; Throws:; IOException. createObjectsFromPredictions; public static boolean createObjectsFromPredictions(ImageServer<BufferedImage> server,; PathObjectHierarchy hierarchy,; Collection<PathObject> selectedObjects,; Function<ROI,? extends PathObject> creator,; double minArea,; double minHoleArea,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. Parameters:; server - the image to threshold; hierarchy - the hierarchy to which the objects should be added; selectedObjects - the selected objects, if the classification should be constrained to these; creator - function to create an object of the required type; minArea - the minimum size of a connected region to retain, in calibrated units; minHoleArea - the minimum size of a hole to retain, in calibrated units; options - additional options to control how objects are created; Returns:; true if the command ran successfully to completion, false otherwise.; Throws:; IOException; See Also:. GeometryTools.refineAreas(Geometry, double, double). createAnnotationsFromPix",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:8362,extend,extends,8362,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,2,['extend'],['extends']
Modifiability,"onstructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:1948,plugin,plugin,1948,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['plugin'],['plugin']
Modifiability,"onstructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2337,plugin,plugin,2337,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"onstructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2028,plugin,plugin,2028,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['plugin'],['plugin']
Modifiability,"onstructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). Deprecated.; use PropertyItemBuilder instead. Pane; getPane(). Get a pane to display. org.controlsfx.control.PropertySheet; getPropertySheet(). Get the property sheet for this PreferencePane. void; refreshAllEditors(). Request that all the property editors are regenerated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PreferencePane; public PreferencePane(). Method Details. getPropertySheet; public org.controlsfx.control.PropertySheet getPropertySheet(); Get the property sheet for this PreferencePane.; This is a Node that may be added to a scene for display. Returns:. getPane; public Pane getPane(); Get a pane to display. This includes the p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:2302,extend,extends,2302,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['extend'],['extends']
Modifiability,"onstructors. Constructor; Description; CoherenceFeaturePlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to ru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:1838,extend,extends,1838,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['extend'],['extends']
Modifiability,"onstructors. Constructor; Description; HaralickFeaturesPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to ru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2227,extend,extends,2227,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['extend'],['extends']
Modifiability,"ools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassifierTools. java.lang.Object; qupath.opencv.ml.pixel.PixelClassifierTools. public class PixelClassifierTools; extends Object; Helper methods for working with pixel classification. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PixelClassifierTools.CreateObjectOptions. Options when creating objects from a pixel classifier. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; PixelClassificationMeasurementManager manager,; String measurementID). Add measurements to specified objects from a PixelClassificationMeasurementManager. static boolean; addMeasurementsToSelectedObjects(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String measurementID). Add measurements to selected objects based upon the output of a PixelClassifier. static void; classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI). Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyObjectsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; Collection<Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:1007,extend,extends,1007,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,2,['extend'],['extends']
Modifiability,"ools. Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. splitAreaToPolygons(Area, int, int, int) - Static method in class qupath.lib.roi.RoiTools. Split Area into PolygonROIs for the exterior and the holes. splitChannels(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Split channels of an array. splitChannels(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Split channels from a Mat. splitConnectedRegions(SparseImageServer, double, boolean) - Static method in class qupath.lib.images.servers.SparseImageServer. Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. splitDivide(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by dividing corresponding values. splitGeometryByLineStrings(Geometry, Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Split an input polygonal geometry using a collection of split lines. splitLines(String) - Static method in class qupath.lib.common.GeneralTools. Split new lines (in a cross-platform way... splitMerge(Collection<? extends ImageOp>) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMerge(ImageOp...) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. splitMultiply(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. splitNames(PathClass) - Static method in class qupath.lib.objects.classes.Pat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:990650,extend,extends,990650,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ools. public static enum GuiTools.SnapshotType; extends Enum<GuiTools.SnapshotType>; Kinds of snapshot image that can be created for QuPath. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; FULL_SCREENSHOT. Full screenshot, including items outside of QuPath. MAIN_SCENE. Snapshot of the full Scene of the main QuPath Window. MAIN_WINDOW_SCREENSHOT. Screenshot of the full QuPath window as it currently appears, including any overlapping windows. VIEWER. Snapshot of the current viewer content. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static GuiTools.SnapshotType; valueOf(String name). Returns the enum constant of this class with the specified name. static GuiTools.SnapshotType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. VIEWER; public static final GuiTools.SnapshotType VIEWER; Snapshot of the current viewer content. MAIN_SCENE; public static final GuiTools.SnapshotType MAIN_SCENE; Snapshot of the full Scene of the main QuPath Window.; This excludes the titlebar and any overlapping windows. MAIN_WINDOW_SCREENSHOT; public static final GuiTools.SnapshotType MAIN_WINDOW_SCREENSHOT; Screenshot of the full QuPath window as it currently appears, including any overlapping windows. FULL_SCREENSHOT; public static final GuiTools.SnapshotType FULL_SCREENSHOT; Full screenshot, including items outside of QuPath. Method Details. values; public static GuiTools.SnapshotType[] values(); Returns an array containing the constants of this enum class, in; the order",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html:1636,inherit,inherited,1636,javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.SnapshotType.html,1,['inherit'],['inherited']
Modifiability,"opImportListener. Add a new File DropHandler. addFullResolutionLevel() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add the full-resolution image as a level of the pyramid. addGridRow(GridPane, int, int, String, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Add a row of nodes. addGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Add a new connections group. addImage(ImageServerBuilder.ServerBuilder<T>) - Method in interface qupath.lib.projects.Project. Add an image for a particular ImageServer. addIntensityMeasurements(ImageServer<BufferedImage>, PathObject, double, Collection<ObjectMeasurements.Measurements>, Collection<ObjectMeasurements.Compartments>) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Measure all channels of an image for one individual object or cell. addIntParameter(String, String, int) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter. addIntParameter(String, String, int, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded int parameter, with optional unit and help text. addIntParameter(String, String, int, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an int parameter, with optional unit and help text. addJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Add a new DropHandler specifically for JSON elements. addLabel(String, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by classname, where the label represents the integer label used for ; annotations with the given classname. addLabel(String, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by classname, where the label represents the integer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:17484,plugin,plugins,17484,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; OpenCVDnn();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.Builder; builder(String pathModel). Create a new builder. <T extends Model>T; buildModel(). Build a model. <T extends Model>T; buildModel(OpenCVDnn.ModelType type). Build a model, specifying the OpenCVDnn.ModelType. Net; buildNet(). Build the OpenCV Net. void; close(). Close this model if it will not be needed again. BlobFunction<Mat>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. BlobFunction<Mat>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. URI; getConfigUri(). Get the path to the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:2244,config,configuration,2244,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['config'],['configuration']
Modifiability,"operties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is inc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:6544,inherit,inherited,6544,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['inherit'],['inherited']
Modifiability,"operty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a number. plus(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Add two arrays. plus(Mat, Scalar) - Static method in class qupath.opencv.tools.GroovyCV. Add an array and a scalar. PngWriter - Class in qupath.lib.images.writers. ImageWriter implementation to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:769565,plugin,pluginCompleted,769565,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['pluginCompleted']
Modifiability,"operty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDisplayedYValue, setData, setHorizontalGridLinesVisible, setHorizontalZeroLineVisible, setVerticalGridLinesVisible, setVerticalZeroLineVisible, updateLegend, verticalGridLinesVisibleProperty, verticalZeroLineVisibleProperty. Methods inherited from class javafx.scene.chart.Chart; animate, animatedProperty, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAnimated, getChartChildren, getLegend, getLegendSide, getTitle, getTitleSide, isLegendVisible, layoutChildren, legendProperty, legendSideProperty, legendVisibleProperty, requestChartLayout, setAnimated, setLegend, setLegendSide, setLegendVisible, setTitle, setTitleSide, shouldAnimate, titleProperty, titleSideProperty. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:7753,inherit,inherited,7753,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"optionally add new menu items with addMenuItems(List, Object...). Parameters:; name - ; items - ; Returns:; the newly-created and populated menu. addMenuItems; public static Menu addMenuItems(Menu menu,; Object... items); Add menu items to an existing menu.; Items may be; ; a MenuItem; an Action; null (indicating that a separator should be added). Parameters:; menu - ; items - ; Returns:; the provided menu, so that this method can be nested inside other calls. addMenuItems; public static List<MenuItem> addMenuItems(List<MenuItem> menuItems,; Object... items); Add menu items to the specified list. This is similar to addMenuItems(Menu, Object...) but makes it; possible to work also with a ContextMenu in addition to a standard Menu. Parameters:; menuItems - existing list to which items should be added, or null if a new list should be created; items - the items that should be provided (MenuItems or Actions); Returns:; the list containing the adding items (same as the original if provided). getMenu; public static Menu getMenu(List<Menu> menus,; String name,; boolean createMenu); Get a reference to an existing menu, optionally creating a new menu if it is not present. Parameters:; menus - ; name - ; createMenu - ; Returns:. getFlattenedMenuItems; public static List<MenuItem> getFlattenedMenuItems(List<? extends MenuItem> menuItems,; boolean excludeMenusAndSeparators); Get a flattened list of all menu items recursively. Parameters:; menuItems - initial list of items (some may themselves be menus); excludeMenusAndSeparators - if true, exclude all items that are themselves either menus or separators; Returns:. getFlattenedMenuItems; public static List<MenuItem> getFlattenedMenuItems(boolean excludeMenusAndSeparators,; MenuItem... items); Get a flattened list of all menu items recursively. Parameters:; excludeMenusAndSeparators - if true, exclude all items that are themselves either menus or separators; items - initial array of items (some may themselves be menus); Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html:3178,extend,extends,3178,javadoc/docs/qupath/lib/gui/tools/MenuTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/MenuTools.html,1,['extend'],['extends']
Modifiability,"or an image. static boolean; containsObject(PathObject parentObject,; PathObject childObject). Deprecated. static boolean; containsROI(ROI parentROI,; ROI childROI). Deprecated. static Collection<PathObject>; convertToPoints(Collection<PathObject> pathObjects,; boolean preferNucleus). Convert a collection of PathObjects to Point annotations, based on ROI centroids. static void; convertToPoints(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects,; boolean preferNucleus,; boolean deleteObjects). Convert a collection of PathObjects to Point annotations, based on ROI centroids, and add the points to the hierarchy. static int; countDescendants(PathObject pathObject). Count the descendants of a PathObject recursively. static int; countObjectsWithClass(Collection<? extends PathObject> pathObjects,; PathClass pathClass,; boolean useBaseClass). Count the number of PathObjects in a collection with a specified class or base class. static Map<PathObject,PathClass>; createClassificationMap(Collection<? extends PathObject> pathObjects). Create a mapping between PathObjects and their current PathClasses. static Predicate<PathObject>; createImageRegionPredicate(ImageRegion region). Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. static PathObject; createLike(PathObject pathObject,; ROI roiNew). Create a new object with the same type and classification as the input object, but a new ROI and ID. static PathObject; createLike(PathObject pathObject,; ROI roiNew,; ROI roiNucleus). Create a new object with the same type and classification as the input object, but a new ROI and ID. static TMAGrid; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterPixels,; ImageRegion region). Create a new regular TMAGrid, fit within a specified region. static boolean; duplicateAllSelectedObjects(PathObjectHierarchy hierarchy). Duplicate all the selected objects in a hierarchy. static boolean; duplica",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:1985,extend,extends,1985,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"or class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatch3D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width, height and z-spacing are the same. UNKNOWN - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI status is unclear, e.g. UNKNOWN - Static variable in class qupath.lib.common.Version. Constant representing any unknown version. UNKNOWN_LENGTH - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown dimension length. UNKNOWN_SHAPE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown shape. UNKNOWN_SIZE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown size (i.e. unlimitedDatapoints() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Show all datapoints, without subsampling, even when this may cause performance issues. UNLOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unloc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1058919,variab,variable,1058919,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"or deconvolution stains to an image. deconvolveStains(ColorDeconvolutionStains, int...) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Apply color deconvolution to the brightfield image, so that deconvolved stains behave as separate channels/. DEFAULT - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. JavaFX default. DEFAULT - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Default channel interpretation. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Leave it up to the writer to choose the appropriate method. DEFAULT - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. Default (QuPath will select compression option based on image size and type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:241675,variab,variable,241675,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"or display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is ne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:3964,plugin,plugin,3964,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['plugin'],['plugin']
Modifiability,"or for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComparator;  ; compare(ROI, ROI) - Method in class qupath.lib.roi.DefaultROIComparator;  ; compareTo(KaplanMeierData.KaplanMeierEvent) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent;  ; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePlane) - Method in class qupath.lib.regions.ImagePlane. Compare with another ImagePlane, in the order t, z, c. completionCodeCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:127051,variab,variable,127051,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"or for class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; splitAreasByBufferedLines(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. splitAreasByBufferedLines(Collection<? extends PathObject>, Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. splitAreasByLines(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. splitAreasByLines(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. splitAreaToPolygons(Area, int, int, int) - Static method in class qupath.lib.roi.RoiTools. Split Area into PolygonROIs for the exterior and the holes. splitChannels(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Split channels of an array. splitChannels(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Split channels from a Mat. splitConnectedRegions(SparseImageServer, double, boolean) - Static method in class qupath.lib.images.servers.SparseImageServer. Split a SparseImageServer into multiple servers, whereby each split server represents one connected region. splitDivide(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:989540,extend,extends,989540,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['extend'],['extends']
Modifiability,"or the specified image, on the specified z-slice and timepoint. createGammaFunction(double, double, double) - Static method in class qupath.lib.color.ColorModelFactory. Create a gamma function between a given range, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createGammaFunction(double, PixelType) - Static method in class qupath.lib.color.ColorModelFactory. Create a gamma function for a specific pixel type, which can be used to determine a suitable alpha value for an image ; that should have opacity based upon pixel values. createGeometries(Geometry) - Method in class qupath.lib.objects.utils.Tiler. Create a list of Geometry tiles from the input. createGridView(QuPathGUI, Function<PathObjectHierarchy, Collection<? extends PathObject>>) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for a custom object extractor. createHeadlessTaskRunner() - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). createHeadlessTaskRunner(int) - Method in class qupath.lib.plugins.TaskRunnerUtils. Create a new headless TaskRunner instance with the specified number of threads. createHiddenInstance() - Static method in class qupath.lib.gui.QuPathGUI. Create a new QuPath instance that is not visible (i.e. createHistogramData(Histogram, Integer) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createHistogramData(Histogram, Color) - Static method in class qupath.lib.gui.charts.HistogramChart. Create a HistogramData object to wrap a histogram & some info about its display. createIconImage(IconFactory.PathIcons, int) - Static method in class qupath.lib.gui.tools.IconFactory. Create an image from a default icon glyph. createID() - Method in class qupath.imagej.images.servers.I",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:182076,plugin,plugins,182076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"or.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or til",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2254,inherit,inherited,2254,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,1,['inherit'],['inherited']
Modifiability,"orDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2310,inherit,inherited,2310,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,1,['inherit'],['inherited']
Modifiability,"orPropertyPreference(IntegerProperty prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new color preference based on a specified IntegerProperty (storing a packed RGBA value). Parameters:; prop - ; name - ; category - ; description - . addDirectoryPropertyPreference; @Deprecated; public void addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new directory preference based on a specified StringProperty. Parameters:; prop - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from a list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - . addChoicePropertyPreference; @Deprecated; public <T> void addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable); Deprecated.; use PropertyItemBuilder instead. Add a new choice preference, to select from an optionally searchable list of possibilities. Parameters:; prop - ; choices - ; cls - ; name - ; category - ; description - ; makeSearchable - make the choice item's editor searchable (useful for long lists). createPropertySheetItem; @Deprecated; public static <T>; org.controlsfx.control.PropertySheet.Item createPropertySheetItem(Property<T> property,; Class<? extends T> cls); Deprecated.; use PropertyItemBuilder instead. Create a default PropertySheet.Item for a generic property. Type Parameters:; T - type of the property; Parameters:; property - the property; cls - the property type; Returns:; a new PropertySheet.Item. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:5185,extend,extends,5185,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,2,['extend'],['extends']
Modifiability,orded change for any property. lastValue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify a string representing the axes layout that the model expects as input. lazyInitialize(boolean) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Optionally request lazy initialization. LEGACY_KEY_UNIQUE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Deprecated. legacyPathToURI(String) - Static method in class qupath.lib.images.servers.ImageServerProvider. Method to help with converting legacy image paths to URIs. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify whether the legend should be shown or not. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify whether the legend should be shown or not. legend(boolean) - Method in class qupath.lib.gui,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:648494,layers,layers,648494,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"ores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it on the full class name, a counter for instances ; of this class, and a timestamp derived from the last change. Specified by:; getUniqueID in in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html:1357,inherit,inherited,1357,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,1,['inherit'],['inherited']
Modifiability,"orithms.TilerPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractPlugin. For a specified parent object, generate a task to run. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:28150,plugin,plugins,28150,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"orkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Called whenever a Workflow has been updated in some way, such as a new step added. wrap(URI...) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrap(Collection<? extends PathObject>) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection, ignoring nested (child) objects. wrap(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.io.FeatureCollection. Wrap a collection of PathObjects as a FeatureCollection. wrap(Collection<URI>) - Static method in class qupath.lib.io.UriUpdater. Wrap one or more URIs in a UriResource so they can be updated together. wrapInPointerScope(Processor<S, T, U>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Wrap a processor in a second processor that uses a PointerScope to ensure that pointers are released; (except for any output). WrappedBufferedImageServer - Class in qupath.lib.images.servers. Implementation of an ImageServer that simply wraps an existing BufferedImage. WrappedBufferedImageServer(String, BufferedImage) - Constructor for class qupath.lib.images.servers.WrappedBufferedImageServer. Create an ImageServer<BufferedImage> using an image that has been provided directly. WrappedBufferedImageServer(String, BufferedImage, List<ImageChannel>) - Constructor for class qupath.lib.images.servers.WrappedBufferedIm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1109843,extend,extends,1109843,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"orm... inputChannels). Create an ImageDataOp, optionally using a specified array of input channels. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2679,extend,extends,2679,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,2,['extend'],['extends']
Modifiability,"ormation message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(String text,; int count). Create a warning message with static text and a count. static InfoMessage; warning(ObservableNumberValue count). Create a warning message to show a count of warnings. static InfoMessage; warning(ObservableValue<String> text). Create a warning message. static InfoMessage; warning(ObservableValue<String> text,; ObservableNumberValue count). Create a warning message with a count. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. text; public ReadOnlyStringProperty textProperty; Read only property containing the message text. See Also:. getText(); textProperty(). count; public ReadOnlyObjectProperty<Number> countProperty; Read only property containing any count associated with the text (may be null). See Also:. getCount(); countProperty(). Method Details. info; public static InfoMessage info(ObservableValue<String> text); Create an information message. Parameters:; text - ; Returns:. info; public static InfoMessage info(String text); Create an information message with static text. Parameters:; text - ; Returns:. info; public static InfoMessage info(ObservableValue<String> text,; ObservableNumberValue count); Create an information message with a count. Parameters:; text - ; count - ; Returns:. info; public static InfoMessage info(String text,; int count); Create an informati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:3027,inherit,inherited,3027,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['inherit'],['inherited']
Modifiability,"ors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing detections ROIs. detectionToAnnotationDistances() - Static method in class qupath.lib.scripting.QP. Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). detectionToAnnotationDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionToAnnotationDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:255243,extend,extends,255243,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ortLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders). Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. static <T> ImageServerBuilder.UriImageSupport<T>; createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder). Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. List<ImageServerBuilder.ServerBuilder<T>>; getBuilders(). Get a list of ServerBuilders, one for each image that can be read based on the specified URI. Class<? extends ImageServerBuilder<T>>; getProviderClass(). Get the class of the associated ImageServerBuilder. float; getSupportLevel(). Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; Collection<ImageServerBuilder.ServerBuilder<T>> builders); Create a ImageServerBuilder.UriImageSupport for (possibly multiple) images that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; supportLevel - ; builders - ; Returns:. createInstance; public static <T>; ImageServerBuilder.UriImageSupport<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; float supportLevel,; ImageServerBuilder.ServerBuilder<T> builder); Create a ImageServerBuilder.UriImageSupport for a single image that can be read from a single URI. Type Parameters:; T - ; Parameters:; providerClass - ; suppo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html:2115,inherit,inherited,2115,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.UriImageSupport.html,1,['inherit'],['inherited']
Modifiability,"ory.StandardPathClasses (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.objects.classes; Enum Class PathClassFactory.StandardPathClasses. java.lang.Object; java.lang.Enum<PathClassFactory.StandardPathClasses>; qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. All Implemented Interfaces:; Serializable, Comparable<PathClassFactory.StandardPathClasses>, Constable. Enclosing class:; PathClassFactory. public static enum PathClassFactory.StandardPathClasses; extends Enum<PathClassFactory.StandardPathClasses>; Enum representing standard classifications. Exists mostly to ensure consisting naming (including capitalization). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; IGNORE. Ignore classification, indicating what should not be further measured (e.g. IMAGE_ROOT. Root object classification. IMMUNE_CELLS. Immune cell classification. NECROSIS. Necrosis classification. NEGATIVE. General class to represent something 'negative'. OTHER. Other classification. POSITIVE. General class to represent something 'positive'. REGION. Region class. STROMA. Stroma classification. TUMOR. Tumor classification. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PathClassFactory.StandardPathClasses; valueOf(String name). Returns the enum constant of this class with the specified name. static PathClassFactory.StandardPathClasses[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html:1016,inherit,inherited,1016,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.StandardPathClasses.html,2,['inherit'],['inherited']
Modifiability,"ose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DelaunayClusteringPlugin; public DelaunayClusteringPlugin(); Constructor. Method Details. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Overrides:; preprocess in class AbstractPlugin<T>; Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Description copied from class: AbstractPlugin; Called immediately after running any generated tasks.; ; Does nothing by defau",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:2648,plugin,plugins,2648,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['plugin'],['plugins']
Modifiability,"ossible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcessor. Parameters.Builder<S,T> - Class in qupath.lib.experimental.pixels. Builder class for Parameters. parametersInitialized - Variable in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744786,plugin,plugins,744786,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"otFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObjectConnections; class PathObjectConnections extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathROIObject; class PathROIObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathRootObject; class PathRootObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathTileObject; class PathTileObject extends PathDetectionObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.TMACoreObject; class TMACoreObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundExcept",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:5175,extend,extends,5175,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"otatedImageServer.Rotation. No rotation. RotatedImageServer - Class in qupath.lib.images.servers. ImageServer that wraps another ImageServer, but intercepts region requests to ; effectively rotate the image by 90, 180 or 270 degrees. RotatedImageServer(ImageServer<BufferedImage>, RotatedImageServer.Rotation) - Constructor for class qupath.lib.images.servers.RotatedImageServer. Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. RotatedImageServer.Rotation - Enum Class in qupath.lib.images.servers. Enum for rotations in increments of 90 degrees. rotationProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Return the rotation property of this viewer. round() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that rounds floating point values. round(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Round values in a floating point Mat. ROUND - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Round cap. roundCoordinates(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Round coordinates in a Geometry to integer values. run() - Method in class qupath.lib.gui.commands.BrightnessContrastCommand;  ; run() - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; run() - Method in class qupath.lib.gui.commands.MeasurementExportCommand;  ; run() - Method in class qupath.lib.gui.tma.TMAExplorer;  ; run() - Method in class qupath.lib.gui.tools.DocGenerator;  ; run() - Method in class qupath.lib.gui.viewer.recording.ViewTrackerControlPane;  ; run() - Method in class qupath.lib.images.writers.ome.ConvertCommand;  ; run() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand;  ; run() - Method in class qupath.process.gui.commands.CellIntensityClassificationCommand;  ; run() - Method in class qupath.process.gui.commands.CreateChannelTrainingImagesCommand;  ; run() - Method in class qupath.process.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:873022,plugin,plugins,873022,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"otationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; String getDescription(); Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Parameters:; taskRunner - ; arg - ; Returns:. getLastResultsDescription; String getLastResultsDescription(); (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:2106,plugin,plugin,2106,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,1,['plugin'],['plugin']
Modifiability,"ote that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefau",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3627,adapt,adapt,3627,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['adapt'],['adapt']
Modifiability,"otected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. protected abstract boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:2541,plugin,plugin,2541,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugin']
Modifiability,"otected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getParameterList(ImageData<T> im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2870,plugin,plugins,2870,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['plugin'],['plugins']
Modifiability,"otected Point2D; mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel);  ; void; mouseMoved(MouseEvent e);  ; void; mousePressed(MouseEvent e);  ; void; mouseReleased(MouseEvent e);  ; protected Geometry; refineGeometryByParent(Geometry geometry);  ; protected ROI; refineROIByParent(ROI currentROI). Apply clipping based on the current parent object. protected boolean; requestParentClipping(MouseEvent e). Query whether parent clipping should be applied. protected boolean; requestPixelSnapping(). Returns true if the tool requests that pixel coordinates be snapped to integer values. protected void; resetConstrainingObjects(). Reset the constraining objects. protected void; updatingConstrainingObjects(QuPathViewer viewer,; double xx,; double yy,; Collection<PathObject> exclusions). New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MoveToolEventHandler; public MoveToolEventHandler(). Method Details. mousePressed; public void mousePressed(MouseEvent e). mouseDragged; public void mouseDragged(MouseEvent e). mouseReleased; public void mouseReleased(MouseEvent e). mouseMoved; public void mouseMoved(MouseEvent e). ensureCursorType; protected void ensureCursorType(Cursor cursor); Ensure that the specified cursor is set in the current viewer. Parameters:; cursor - . requestPixelSnapping; protected boolean requestPixelSnapping(); Returns true if the tool requests that pixel coordinates be snapped to integer values.; Default returns true. Returns:. getViewer; protected QuPathViewer getViewer(). mouseLocationToImage; protected Point2D mouseLocationToImage(MouseEvent e,; boolean constrainToBounds,; boolean snapToPixel). requestParentClipping; protected boolean requestParentClipping(M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html:2574,inherit,inherited,2574,javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/handlers/MoveToolEventHandler.html,1,['inherit'],['inherited']
Modifiability,"oth x and y axis. setShowTMACoreLabels(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show TMA core names on top of the image. setShowTMAGrid(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the TMA grid on the image, if present. setSlidersPosition(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Sets the Z and T sliders' position to allow space for command bar. setSpaceDown(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Notify this viewer that the isSpaceDown status should be changed. setSpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWrit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949087,plugin,plugins,949087,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ouble, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. tryToInterpretMessage(Throwable, int, boolean) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; tryToLoad(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide. tryToLoadQuietly(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide, but don't throw an exception if it fails. tryToParseMicrons(double, String) - Static method in class qupath.imagej.tools.IJTools. Based on a value and its units, try to get something suitable in microns. TUMOR - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Tumor classification. TUMOR - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Tumor classification. type(DensityMaps.DensityMapType) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. The type of the density map, which determines any associated normalization. typeToChannels(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the number of channels from a specified Mat type (which also encodes depth). typeToDepth(int) - Static method in class qupath.opencv.tools.OpenCVTools. Determine the depth from a specified Mat type (which may also encode the number of channels). U. uiBlocked() - Method in class qupath.lib.gui.QuPathGUI. Observable value indicating that the user interface is/should be blocked. UINT16 - Enum constant in enum class qupath.lib.images.servers.PixelType. 16-bit unsigned integer. UINT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit unsigned integer (not supported by BufferedImage). UINT8 - Enum constant ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1055866,variab,variable,1055866,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ouble w2,; double h2). Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. boolean; intersects(ImageRegion request). Returns true if the region specified by this region overlaps with another. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static ImageRegion createInstance(int x,; int y,; int width,; int height,; int z,; int t); Create a region based on its bounding box coordinates, z-slice index and time point index. Parameters:; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static ImageRegion createInstance(ROI pathROI); Create the smallest region that completely contains a specified ROI. Parameters:; pathROI - ; Returns:. createInstance; public static ImageRegion createInstance(Collection<? extends ROI> rois); Create the smallest region that completely contains the specified ROIs. Parameters:; rois - ; Returns:. intersects; public boolean intersects(ImageRegion request); Returns true if the region specified by this region overlaps with another.; ; If either z or t is < 0 then that value will be ignored. Parameters:; request - ; Returns:. intersects; public boolean intersects(double x2,; double y2,; double w2,; double h2); Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. Parameters:; x2 - ; y2 - ; w2 - ; h2 - ; Returns:. contains; public boolean contains(int x,; int y,; int z,; int t); Check if this region contains a specified coordinate. Parameters:; x - ; y - ; z - ; t - ; Returns:. getX; public int getX(); Get the x coordinate of the region bounding box (top left). Returns:. getY; public int getY(); Get the y coordinate of the region bounding box (top left). Returns:. getWidth; public int getWidth(); Get the width of the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html:3343,extend,extends,3343,javadoc/docs/qupath/lib/regions/ImageRegion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html,1,['extend'],['extends']
Modifiability,"ould return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2686,plugin,plugins,2686,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugins']
Modifiability,"ould return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class Abstr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:2552,plugin,plugins,2552,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugins']
Modifiability,"ould return a default ParameterList containing any information that is needed to repeat the task exactly. protected ParameterList; getLoggableParameters(ImageData<T> imageData). Get a copy of the current parameter list (with empty parameters removed) suitable for logging. protected ParameterList; getParameterList(ImageData<T> imageData). Get a reference to a ParameterList stored internally, and which will be used for analysis. protected boolean; parseArgument(ImageData<T> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getParentObjects, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathInteractivePlugin; getSupportedParentObjectClasses. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Field Details. params; protected transient ParameterList params. Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:2762,plugin,plugins,2762,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['plugin'],['plugins']
Modifiability,"ources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathClasses - ; Returns:; true if the stored values changed, false otherwise. getURI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:3279,extend,extends,3279,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['extend'],['extends']
Modifiability,"overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to deter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2495,extend,extends,2495,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['extend'],['extends']
Modifiability,"ovides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv - package qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn - package qupath.opencv.dnn. QuPath classes to use OpenCV's DNN m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814421,plugin,plugins,814421,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"p navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class PixelClassificationOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. All Implemented Interfaces:; PathOverlay. public class PixelClassificationOverlay; extends AbstractImageOverlay; PathOverlay that gives the results of pixel classification. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageRenderer>; renderer. Get the ImageRenderer property used with this overlay. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; clearCache(). Clear any cached tiles. static PixelClassificationOverlay; create(OverlayOptions options,; Function<ImageData<BufferedImage>,ImageServer<BufferedImage>> fun,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; Map<ImageData<BufferedImage>,ImageServer<BufferedImage>> map,; ImageRenderer renderer). Create an overlay to display a live image that can be created from an existing ImageData. static PixelClassificationOverlay; create(OverlayOptions options,; PixelClassifier classifier). Create an overlay to display the live application of a PixelClassifier to an image, using the default number of parallel ; t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:1093,inherit,inherited,1093,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['inherit'],['inherited']
Modifiability,"p types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percentage of the corresponding total object count.; ; This is useful, for example, to identify the Positive % cells. Method Details. values; public static Densi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:1785,inherit,inherited,1785,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,1,['inherit'],['inherited']
Modifiability,"p3D(Indexer, double, double, double) - Static method in class qupath.opencv.tools.Interpolation. Request a value from an Indexer using trilinear interpolation. interpolateBilinear - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; Interpolation - Class in qupath.opencv.tools. Methods to help with requesting interpolated values. Interpolation() - Constructor for class qupath.opencv.tools.Interpolation;  ; interpolationProperty() - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. The preferred method of interpolation to use for display. INTERSECT - Enum constant in enum class qupath.lib.roi.RoiTools.CombineOp. Calculate intersection (overlap) between ROIs. intersect2D(int, int, int, int) - Method in class qupath.lib.regions.RegionRequest. Intersect to the specified 2D region. intersect2D(ImageRegion) - Method in class qupath.lib.regions.RegionRequest. Intersect to the specified 2D region, ignoring z and t. intersection(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create intersection of multiple ROIs from a collection. intersection(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create intersection of multiple ROIs. intersects(double, double, double, double) - Method in class qupath.lib.regions.ImageRegion. Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. intersects(ImageRegion) - Method in class qupath.lib.regions.ImageRegion. Returns true if the region specified by this region overlaps with another. intersectsRegion(ROI, ImageRegion) - Static method in class qupath.lib.roi.RoiTools. Test whether a ROI and an ImageRegion intersect. IntParameter - Class in qupath.lib.plugins.parameters. Parameter to represent an integer numeric value. inverse() - Method in class qupath.lib.color.ColorDeconvMatrix3x3. Calculate the 3x3 matrix inverse. invertBackground() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:611589,extend,extends,611589,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"pText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getValue(). Get the current set value (may be null). String; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(String value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(String value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:2041,inherit,inherited,2041,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,2,['inherit'],['inherited']
Modifiability,"pable of creating a server like this one. String; dumpMetadata(). Retrieve a string representation of the metadata OME-XML. BufferedImage; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. File; getFile(). Get the underlying file. String; getFormat(). Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). OMEPyramidStore; getMetadataStore(). Get the MetadataStore, as used by Bio-Formats. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. int; getSeries(). Get the series index, as used by Bio-Formats. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOExcep",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:2538,inherit,inherited,2538,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['inherit'],['inherited']
Modifiability,"parable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:1547,inherit,inherited,1547,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,1,['inherit'],['inherited']
Modifiability,"parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>; createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object. boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. static boolean; handleOutputClassification(Parameters<?,?> params,; String output). Handle the output of a pixel processor by setting a PathClass, given by its name. static boolean; handleOutputClassification(Parameters<?,?> params,; PathClass output). Handle the output of a pixel processor by setting a PathClass. static boolean; handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output). Handle the output of a pixel processor by adding measurements to the path object. default OutputHandler<S,T,U>; orElse(OutputHandler<S,T,U> after). Append a second output handler to this one, but only call it if this one returns false. Method Details. handleOutput; boolean handleOutput(Parameters<S,T> params,; U output); Optional method to handle the output of a Processor.; For example, this might assign classifications, add measurements, or add child objects. Parameters:; params - the processing parameters; output - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:2762,extend,extends,2762,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['extend'],['extends']
Modifiability,"path.lib.classifiers.pixel.PixelClassifier; qupath.lib.geom.Point; java.util.function.Predicate<T>. qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. qupath.opencv.dnn.PredictionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManager.StyleOption; qupath.lib.projects.ResourceManager.Manager<T>; qupath.lib.roi.interfaces.ROI; java.lang.Runnable. qupath.lib.plugins.PathTask. qupath.lib.scripting.languages.ScriptAutoCompletor; qupath.lib.gui.scripting.ScriptEditor; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; qupath.lib.gui.scripting.syntax.ScriptSyntax; java.io.Serializable. qupath.lib.measurements.Measurement; qupath.lib.measurements.MeasurementList (also extends java.lang.AutoCloseable); qupath.lib.plugins.parameters.Parameter<S>; qupath.lib.objects.hierarchy.TMAGrid; qupath.lib.plugins.workflow.WorkflowStep. qupath.lib.plugins.workflow.ScriptableWorkflowStep. qupath.lib.analysis.images.SimpleImage. qupath.lib.analysis.images.SimpleModifiableImage. qupath.lib.plugins.SimpleProgressMonitor; qupath.lib.gui.extensions.Subcommand; qupath.lib.plugins.TaskRunner; qupath.lib.objects.TemporaryObject; qupath.lib.gui.logging.TextAppendable. qupath.lib.gui.scripting.ScriptEditorControl<T> (also extends qupath.lib.gui.scripting.EditableText). qupath.lib.gui.images.stores.TileListener<T>; qupath.lib.images.servers.TileRequestManager; qupath.lib.io.UriResource. qupath.opencv.ops.ImageDataOp; qupath.opencv.ops.ImageOp; qupath.lib.projects.ProjectImageEntry<T>. qupath.lib.plugins.workflow.WorkflowListener. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionIcon (implem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:42479,plugin,plugins,42479,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"path.lib.color.StainVector.DefaultStains. All Implemented Interfaces:; Serializable, Comparable<StainVector.DefaultStains>, Constable. Enclosing class:; StainVector. public static enum StainVector.DefaultStains; extends Enum<StainVector.DefaultStains>; Enum representing default stains.; ; TODO: Replace with interface, add stain vectors directly. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DAB. DAB. EOSIN. Eosin. HEMATOXYLIN. Hematoxylin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static StainVector.DefaultStains; valueOf(String name). Returns the enum constant of this class with the specified name. static StainVector.DefaultStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. HEMATOXYLIN; public static final StainVector.DefaultStains HEMATOXYLIN; Hematoxylin. EOSIN; public static final StainVector.DefaultStains EOSIN; Eosin. DAB; public static final StainVector.DefaultStains DAB; DAB. Method Details. values; public static StainVector.DefaultStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static StainVector.DefaultStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html:1491,inherit,inherited,1491,javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/StainVector.DefaultStains.html,1,['inherit'],['inherited']
Modifiability,"path.lib.extension.svg. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType - Enum Class in qupath.lib.extension.svg. Enum defining ways in which raster images may be included in the SVG file. swapNameAndClass(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Swap the name and PathClass of an object. swapRGBOrder(BufferedImage, String) - Static method in class qupath.lib.awt.common.BufferedImageTools. Swap the order of pixels in an RGB image. switchToGrayscaleChannelProperty() - Method in class qupath.lib.display.ImageDisplay. Property indicating which channel should be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1015930,variab,variable,1015930,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"path.lib.gui.commands.Commands. Show a dialog to import object(s) from a file. runPlugin(String, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData. runPlugin(String, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, using a map for arguments. runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData. runPlugin(String, ImageData<?>, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:877196,plugin,plugin,877196,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,path.lib.images.servers.bioformats.BioFormatsServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.images.servers.bioformats.BioFormatsServerOptions; qupath.opencv.ml.BioimageIoTools; qupath.lib.plugins.parameters.BooleanParameter; qupath.process.gui.commands.ml.BoundaryStrategy; qupath.lib.gui.commands.BrightnessContrastCommand (implements java.lang.Runnable); qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. qupath.process.gui.WandToolEventHandler. qupath.lib.awt.common.BufferedImageTools; qupath.lib.gui.BuildInfo; qupath.process.gui.commands.CellIntensityClassificationCommand (implements java.lang.Runnable); qupath.lib.objects.CellTools; qupath.lib.display.settings.ChannelColor; qupath.lib.display.settings.ChannelSettings; qupath.lib.gui.charts.Charts; qupath.lib.gui.charts.Charts.BarChartBuilder; qupath.lib.gui.charts.Charts.PieChartBuilder; qupath.lib.gui.charts.Charts.ScatterChartBuilder; qupath.lib.gui.charts.ChartTools; qupath.lib.plugins.parameters.ChoiceParameter<S>; qupath.process.gui.commands.ml.ClassificationResolution; qupath.lib.gui.actions.menus.ClassifyMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions; java.lang.ClassLoader. java.security.SecureClassLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.scripting.richtextfx.CodeAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.lib.color.ColorDeconvMatrix3x3; qupath.lib.color.ColorDeconvolutionHelper; qupath.lib.color.ColorDeconvolutionStains (implements java.io.Externalizable); qupath.lib.color.ColorMaps; qupath.lib.color.ColorModelFactory; qupath.lib.gui.images.stores.ColorModelRenderer (implements qupath.lib.gui.images.stores.ImageRenderer); qupath.lib.analysis.heatmaps.ColorModels; qupath.lib.color.ColorModels; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; qupath.lib.color.ColorModel,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:9686,plugin,plugins,9686,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"path.lib.objects.hierarchy.events.PathObjectSelectionListener; qupath.lib.gui.viewer.QuPathViewerListener. qupath.lib.scripting.languages.ExecutableLanguage. qupath.lib.gui.scripting.languages.HtmlRenderer. qupath.opencv.ml.objects.features.FeatureExtractor<T>; qupath.lib.images.servers.FileFormatInfo.ImageCheckType; qupath.lib.gui.extensions.GitHubProject; qupath.lib.gui.images.stores.ImageRegionRenderer; qupath.lib.gui.images.stores.ImageRenderer; qupath.lib.images.servers.ImageServerBuilder<T>; qupath.lib.images.servers.ImageServerBuilder.ServerBuilder<T>; qupath.lib.experimental.pixels.ImageSupplier<S>; qupath.lib.images.writers.ImageWriter<T>; com.sun.jna.Library. qupath.lib.images.servers.openslide.jna.OpenSlideJNA. qupath.lib.experimental.pixels.MaskSupplier<S,T>; qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement<S,T>; qupath.lib.gui.actions.menus.MenuActions; qupath.lib.objects.MetadataStore; qupath.lib.classifiers.object.ObjectClassifier<T>; qupath.lib.plugins.ObjectDetector<T>; qupath.lib.experimental.pixels.OutputHandler<S,T,U>; qupath.lib.experimental.pixels.OutputHandler.OutputToObjectConverter<S,T,U>; qupath.lib.plugins.parameters.ParameterChangeListener; qupath.lib.plugins.parameters.Parameterizable; qupath.lib.images.PathImage<T>; qupath.lib.objects.PathObjectConnectionGroup; qupath.lib.objects.PathObjectReader; qupath.lib.gui.viewer.overlays.PathOverlay; qupath.lib.plugins.PathPlugin<T>. qupath.lib.plugins.PathInteractivePlugin<T>. qupath.lib.gui.measure.PathTableData<T>; qupath.lib.gui.viewer.tools.PathTool; qupath.lib.classifiers.pixel.PixelClassifier; qupath.lib.geom.Point; java.util.function.Predicate<T>. qupath.lib.objects.PathObjectPredicates.PathObjectPredicate. qupath.opencv.dnn.PredictionFunction<T>; qupath.lib.experimental.pixels.Processor<S,T,U>; qupath.lib.projects.Project<T>; qupath.lib.gui.extensions.QuPathExtension; qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager; qupath.lib.gui.prefs.QuPathStyleManage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:40905,plugin,plugins,40905,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,path.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers. layout(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify a string representing the axes layout that the model expects as input. lazyInitialize(boolean) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Optionally request lazy initialization. LEGACY_KEY_UNIQUE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Deprecated. legacyPathToURI(String) - Static method in class qupath.lib.images.servers.ImageServerProvider. Method to help with converting legacy image paths to URIs. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify whether the legend should be shown or not. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify whether the legend should be shown or not. legend(boolean) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify whether the legend should be shown or not. legend(String) - Method in class qupath.lib.gui.charts.Ch,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:648646,layers,layers,648646,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"path.lib.scripting.QP. Remove objects that are entirely or partially outside the specified image. removeObjectWithoutUpdate(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a single object from the hierarchy, without firing a remove event. removeOrClipObjectsOutsideImage() - Static method in class qupath.lib.scripting.QP. Remove objects occurring outside the current image bounds, clipping annotations where possible to retain ; the part that is inside the image. removeOrClipObjectsOutsideImage(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Remove objects occurring outside the specified image bounds, clipping annotations where possible to retain ; the part that is inside the image. removeOverlaps(Collection<? extends PathObject>, Comparator<PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlaps, discarding one and keeping the other. removeOverlapsByLocation(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away. removeOverlapsBySize(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. removeParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Remove a parameter from this list. removeParameterChangeListener(ParameterChangeListener) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Remove a ParameterChangeListener. removePathObject(PathObject) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.removeChildObject(PathObject). removePathObjectListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:849397,extend,extends,849397,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"path.opencv.ml.objects.features.Preprocessing. public class Preprocessing; extends Object; Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Preprocessing.PCAProjector. Helper class to apply PCA projection. Constructor Summary; Constructors. Constructor; Description; Preprocessing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Normalizer; createNormalizer(Normalization normalization,; Mat samples,; double missingValue). Create a simple normalizer to rescale input data. static Preprocessing.PCAProjector; createPCAProjector(Mat data,; double retainedVariance,; boolean normalize). Create a principle components analysis projection to reduce features. static void; normalize(Mat samples,; Normalizer normalizer). Apply a Normalizer to new training data samples. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Preprocessing; public Preprocessing(). Method Details. createPCAProjector; public static Preprocessing.PCAProjector createPCAProjector(Mat data,; double retainedVariance,; boolean normalize); Create a principle components analysis projection to reduce features. Parameters:; data - input data used to create the projector; retainedVariance - variance to retain (determines the number of output features); normalize - if true, normalize the output features; Returns:; a Preprocessing.PCAProjector that can be applied to new data. createNormalizer; public static Normalizer createNormalizer(Normalization normalization,; Mat samples,; double missingValue); Create a simple normalizer to rescale input data. Parameters:; normalization - the method of normalization to apply; samples - the input samples used to determine the normalization parameter; missingVal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html:1404,inherit,inherited,1404,javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/features/Preprocessing.html,2,['inherit'],['inherited']
Modifiability,"path.opencv.tools.MultiscaleFeatures.Hessian3D (implements qupath.opencv.tools.MultiscaleFeatures.Hessian); qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder; javafx.scene.Node (implements javafx.event.EventTarget, javafx.css.Styleable). javafx.scene.canvas.Canvas. qupath.lib.gui.ColorMapCanvas. javafx.scene.Parent. javafx.scene.layout.Region. javafx.scene.chart.Chart. javafx.scene.chart.XYChart<X,Y>. javafx.scene.chart.AreaChart<X,Y>. qupath.lib.gui.charts.HistogramChart. javafx.scene.layout.Pane. javafx.scene.layout.BorderPane. qupath.lib.gui.commands.display.BrightnessContrastChannelPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane; qupath.lib.gui.charts.ChartThresholdPane. javafx.scene.layout.GridPane. qupath.lib.gui.commands.display.BrightnessContrastSettingsPane; qupath.lib.gui.commands.display.BrightnessContrastSliderPane. javafx.scene.layout.VBox. qupath.lib.gui.ExtensionControlPane. qupath.opencv.ml.objects.features.Normalizer; qupath.lib.plugins.parameters.NumericParameter<S>. qupath.lib.plugins.parameters.DoubleParameter; qupath.lib.plugins.parameters.IntParameter. qupath.opencv.tools.NumpyTools; qupath.process.gui.commands.ObjectClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.ObjectClassifierLoadCommand (implements java.lang.Runnable); qupath.lib.classifiers.object.ObjectClassifiers; qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder<T>; qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory (implements com.google.gson.TypeAdapterFactory); qupath.lib.gui.panes.ObjectDescriptionPane<T>; qupath.lib.analysis.features.ObjectMeasurements; qupath.lib.objects.utils.ObjectMerger; qupath.lib.gui.actions.menus.ObjectsMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions; qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions; qupath.lib.gui.actions.menus.ObjectsMenuAct",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:22264,plugin,plugins,22264,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"pdater<T>; relative(URI uriOriginal,; URI uriCurrent). Identify replacements for missing URIs by relativizing URI. UriUpdater<T>; relative(Path pathOriginal,; Path pathCurrent). Identify replacements for missing URIs by relativizing paths. UriUpdater<T>; searchDepth(int maxDepth). Maximum search depth when using searchDepth(int) to match filenames in directories and subdirectories. UriUpdater<T>; searchPath(Path path). Search for filenames that match missing URIs, recursively up to the depth specified by searchDepth(int). static UriResource; wrap(URI... uris). Wrap one or more URIs in a UriResource so they can be updated together. static UriResource; wrap(Collection<URI> uris). Wrap one or more URIs in a UriResource so they can be updated together. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static <T extends UriResource> UriUpdater<T> create(T resource); throws IOException; Create a new UriUpdater to support updating URIs for a single UriResource. Parameters:; resource - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources); throws IOException; Create a new UriUpdater to support updating URIs for one or more UriResource objects. Parameters:; resources - ; Returns:; Throws:; IOException. create; public static <T extends UriResource> UriUpdater<T> create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements); throws IOException; Create a new UriUpdater using the specified collections.; The main use of this is as a convenience to build a UI using observable collections. Parameters:; resources - collection of resources that may include URIs; items - collection containing all the distinct URIs from resources, each as a UriUpdater.SingleUriItem. ; Note that this collection will be regenerated, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:3637,extend,extends,3637,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['extend'],['extends']
Modifiability,"peFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(String...) - Static method in class qupath.lib.scripting.QP. Add the specified shape measurements to the current selected objects of the current image. addShapeMeasurements(Collection<? extends PathObject>, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for multiple objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, String, String...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(ImageData<?>, Collection<? extends PathObject>, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.scripting.QP. Add shape measurements to the specified objects. addShapeMeasurements(PathObject, PixelCalibration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:29308,extend,extends,29308,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"pecified channel, for use when no channel colors are already known. getDefaultChannelList(int) - Static method in class qupath.lib.images.servers.ImageChannel. Get default channel list for an image with a specified number of channels. getDefaultColorMap() - Static method in class qupath.lib.color.ColorMaps. Get a default, general-purpose ColorMaps.ColorMap. getDefaultColorModel() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getDefaultColorModel() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Get an appropriate colormodel that may be used. getDefaultColorModel() - Method in class qupath.lib.images.servers.SparseImageServer;  ; getDefaultColorModel(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. This does not guarantee a ColorModel will be returned!; If it is not, then a default grayscale LUT should be used. getDefaultCreateFunction() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default function used to create TaskRunner instances. getDefaultDragDropListener() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. getDefaultExtension() - Method in interface qupath.lib.images.writers.ImageWriter. Get the default extension. getDefaultFactory() - Static method in class qupath.lib.roi.GeometryTools. Get the default GeometryFactory to construct Geometries within QuPath. getDefaultImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default imports that should be included with the script, where possible. getDefaultInstance() - Static method in class qupath.lib.images.servers.PixelCalibration. Get the default PixelCalibration. getDefaultInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Get the default instance. getDefaultLocationString(ImageServer<BufferedImage>, double, double, int, int) - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:368959,plugin,plugins,368959,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"penCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. createAnnotationObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified annotation object. createAnnotationObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified annotation object. createAnnotationObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified annotation object with a specified measurement list. createAnnotationOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into annotation objects. createAnnotationOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into annotation objects. createAnnotationOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into annotation objects. createAnnotations(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create annotation objects by tracing contours in a labelled image. createAnnotations(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create annotation objects from a labelled image. createAnnotations(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of PathAnnotationObject tiles from the input. createAnnotationsFromDensityMap(String, Map<Integer, ? extends Number>, String, String...) - Static method in class qupath.lib.scripting.QP. Create annotations from a density map for the current image. createAnnotationsFromDensityMap(ImageData<BufferedImage>, String, Map<Integer, ? extends Number>, String, String...) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:159198,extend,extends,159198,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"pencv.dnn.OpenCVDnnModelBuilder (implements qupath.opencv.dnn.DnnModelBuilder); qupath.lib.experimental.pixels.OpenCVProcessor; qupath.opencv.tools.OpenCVTools; qupath.opencv.tools.OpenCVTools.IndexedPixel; qupath.opencv.io.OpenCVTypeAdapters; qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory (implements com.google.gson.TypeAdapterFactory); qupath.lib.images.servers.openslide.jna.OpenSlide (implements java.io.Closeable); qupath.ext.openslide.OpenSlideExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.images.servers.openslide.jna.OpenSlideLoader; qupath.lib.images.servers.openslide.OpenslideServerBuilder (implements qupath.lib.images.servers.ImageServerBuilder<T>); qupath.lib.experimental.pixels.OutputHandler.ObjectOutputHandler<S,T,U> (implements qupath.lib.experimental.pixels.OutputHandler<S,T,U>); qupath.lib.gui.actions.OverlayActions; qupath.lib.gui.viewer.OverlayOptions; qupath.lib.regions.Padding; qupath.lib.gui.tools.PaneTools; qupath.lib.plugins.parameters.ParameterList (implements java.io.Serializable); qupath.lib.gui.dialogs.ParameterPanelFX; qupath.lib.experimental.pixels.Parameters<S,T>; qupath.lib.experimental.pixels.Parameters.Builder<S,T>; qupath.opencv.ml.PatchClassifierParams; qupath.opencv.ml.PatchClassifierParams.Builder; qupath.lib.objects.classes.PathClass (implements java.lang.Comparable<T>, java.io.Serializable); qupath.lib.objects.classes.PathClass.StandardPathClasses; qupath.lib.objects.classes.PathClassFactory; qupath.lib.objects.classes.PathClassTools; qupath.lib.io.PathIO; qupath.lib.objects.PathObject (implements java.io.Externalizable). qupath.lib.objects.PathROIObject. qupath.lib.objects.PathAnnotationObject; qupath.lib.objects.PathDetectionObject. qupath.lib.objects.PathCellObject; qupath.lib.objects.PathTileObject. qupath.lib.plugins.ParallelTileObject (implements qupath.lib.objects.TemporaryObject). qupath.lib.objects.TMACoreObject (implements qupath.lib.objects.MetadataStore). qupath.lib.objects.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:25596,plugin,plugins,25596,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"penslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getDescription() - Method in class qupath.process.gui.ProcessingExtension;  ; getDetails() - Method in class qupath.imagej.images.writers.TiffWriterIJ;  ; getDetails() - Method in class qupath.imagej.images.writers.ZipWriterIJ;  ; getDetails() - Method in interface qupath.lib.images.writers.ImageWriter. Get further details of the writer, which may be displayed to a user. getDetails() - Method in class qupath.lib.images.writers.JpegWriter;  ; getDetails() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getDetails",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:381445,plugin,plugin,381445,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Parameters:; imageData - ; params - ; Returns:. createDetector; protected abstract ObjectDetector<T> createDetector(ImageData<T> imageData,; ParameterList params); Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Parameters:; imageData - ; params - ; Returns:. getTileOverlap; protected abstract int getTileOverlap(ImageData<T> imageData,; ParameterList params); Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled.; ; If the overlap is 0, then tile boundaries are likely to be visible in the results.; ; If the overlap is > 0, then the overlap should also be > the expected largest size of a detected object -; otherwise objects may be lost of trimmed when overlaps are resolved. This is because (currently) ; the resolution of overlapping detections involves taking the largest one, rather than (for example) merging them.; ; (Merging may be permitted in later versions, but only where measurements are not made by the plugin -; since merged objects may require different measurements, e.g. for area or mean than can be easily computed; in a general way from the individual objects being merged). Parameters:; imageData - ; params - ; Returns:; The overlap size in pixels, or 0 if overlapped tiles are not supported. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces.; ; TODO: Avoid hard-coding what is considered a 'manageable size' or a preferred size for parallel tiles. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:4558,plugin,plugin,4558,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['plugin'],['plugin']
Modifiability,"pixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). doWatershed(ImageProcessor, ImageProcessor, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply a watershed transform. doWatershed(ImageProcessor, ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:269362,plugin,plugins,269362,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"planMeierData.KaplanMeierEvent>) - Constructor for class qupath.lib.analysis.stats.survival.KaplanMeierData. Create a new KaplanMeierData object with the specified display name and events. KaplanMeierData.KaplanMeierEvent - Class in qupath.lib.analysis.stats.survival. Simple class to store event time and censored flag. keepDisplaySettings - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; keepDisplaySettingsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). KEY_CASE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measurements.MeasurementList. Get all available names as a set. killRunningScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  . L. LAB_DISTANCE - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image converted to CIELAB, Euclidean distance calculated. labe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:642163,variab,variable,642163,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"play is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double opacity); Specify the opacity for overlay layers.; This will be clipped to the range 0 (transparent) and 1 (opaque). Parameters:; opacity - ; Returns:. layers; public RenderedImageServer.Builder layers(PathOverlay... layers); Specify one or more overlay layers. Parameters:; layers - ; Returns:. layers; public RenderedImageServer.Builder layers(Collection<PathOverlay> layers); Specify one or more overlay layers as a collection. Parameters:; layers - ; Returns:. store; public RenderedImageServer.Builder store(DefaultImageRegionStore store); Specify the region store used to paint the underlying image. Parameters:; store - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(Color color); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; color - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(int rgb,; boolean keepAlpha); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; rgb - packed (A)RGB version of the color; keepAlpha - true if the packed color contains an alpha value; Returns:. build; public ImageServer<BufferedImage> build(); throws IOException; Create the rendered image server. Returns:; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:4465,layers,layers,4465,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,5,['layers'],['layers']
Modifiability,"played, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current counts transform. HistogramChart.DisplayMode; getDisplayMode(). Get the histogram display mode. boolean; getHideIfEmpty(). Query whether the chart is automatically hidden (visibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when there is no data. void; setShowTickLabels(boolean showTickLabels). Request that tick labels are visible or not for both x and y axis. Methods inherited from class javafx.scene.chart.AreaChart; createSymbolsProperty, dataItemAdded, dataItemChanged, dataItemRemoved, getClassCssMetaData, getCreateSymbols, getCssMetaData, layoutPlotChildren, seriesAdded, seriesChanged, seriesRemoved, setCreateSymbols, updateAxisRange. Methods inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisibleProperty, alternativeRowFillVisibleProperty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:6364,inherit,inherited,6364,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"ple image regions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addAllRegions(ImageServer<BufferedImage> server,; int level). Add all regions for a specific level of an ImageServer. void; changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; img - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map); Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. Parameters:; viewer - ; map - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options); Create an empt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:3216,inherit,inherited,3216,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['inherit'],['inherited']
Modifiability,"ple), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, noti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2139,plugin,plugin,2139,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['plugin'],['plugin']
Modifiability,"pleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424269,plugin,plugins,424269,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"plementations should try to set these where possible using ScriptParameters.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current batch processing batch.; Running a single script in isolation should be seen as batch processing ; with a batch size of 1. See Also:. Constant Field Values. BATCH_INDEX; public static final String BATCH_INDEX; Index of the current run when batch processing (starting at 0). See Also:. Constant Field Values. BATCH_LAST; public static final String BATCH_LAST; Boolean flag to indicate if the current script is the last in a batch. See Also:. Constant Field Values. BATCH_SAVE; public static final String BATCH_SAVE; Boolean flag to indicate whether changes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:1548,inherit,inherited,1548,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,1,['inherit'],['inherited']
Modifiability,"plication thread. static LogManager.LogLevel; getRootLogLevel(). Set the root log level, as set by this manager. static void; logToFile(File file). Request logging to the specified file. static void; removeTextAppendableFX(TextAppendable component). Deregister a TextAppendable so that it will no longer be informed of logging events. static ObjectProperty<LogManager.LogLevel>; rootLogLevelProperty(). Property representing the current requested root log level. static void; setAll(). Set the root log level to LogLevel.ALL. static void; setDebug(). Set the root log level to DEBUG. static void; setError(). Set the root log level to LogLevel.ERROR. static void; setInfo(). Set the root log level to DEBUG. static void; setOff(). Set the root log level to LogLevel.OFF. static void; setRootLogLevel(LogManager.LogLevel level). Set the root log level. static void; setTrace(). Set the root log level to LogLevel.TRACE. static void; setWarn(). Set the root log level to LogLevel.WARN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. rootLogLevel; public static ObjectProperty<LogManager.LogLevel> rootLogLevelProperty; Property representing the current requested root log level. See Also:. getRootLogLevel(); setRootLogLevel(LogManager.LogLevel); rootLogLevelProperty(). Constructor Details. LogManager; public LogManager(). Method Details. logToFile; public static void logToFile(File file); Request logging to the specified file. Parameters:; file - . setRootLogLevel; public static void setRootLogLevel(LogManager.LogLevel level); Set the root log level. Parameters:; level - . getRootLogLevel; public static LogManager.LogLevel getRootLogLevel(); Set the root log level, as set by this manager.; This is not guaranteed to match the actual root log level, in case it has been set elsewhere. Returns:. rootLogLevelProperty; public static ObjectProperty<LogManager.LogLevel> rootLogLevelPrope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html:2148,inherit,inherited,2148,javadoc/docs/qupath/lib/gui/logging/LogManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.html,1,['inherit'],['inherited']
Modifiability,"plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden inste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:3218,plugin,plugin,3218,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['plugin'],['plugin']
Modifiability,"plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; AbstractTileableImageServer - Class in qupath.lib.images.servers. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AbstractTileableImageServer() - Constructor for class qupath.lib.images.servers.AbstractTileableImageServer;  ; accelerator(ObservableValue<KeyCombination>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the accelerator property of the action to an ObservableValue, bidirectionally if possible. accelerator(KeyCombination) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the accelerator property of the action. acceleratorTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Property corresponding to CommandFinderTools.CommandEntry.getAcceleratorText(). ActionAccelerator - Annotation Interface in qupath.lib.gui.actions.annotations. Annotation used to specify a preferred accelerator for an an action. actionB",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:4511,plugin,plugins,4511,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:4636,extend,extends,4636,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['extend'],['extends']
Modifiability,"ported datapoints.; Scattercharts are rather 'heavyweight', and including many thousands of datapoints can cause ; severe performance issues due to high processing and memory requirements.; ; By default, datapoints will be randomly subsampled to a 'manageable number' where necessary, ; which can be customized with this setting. Parameters:; max - the maximum number of data points to show; Returns:; this builder; See Also:. unlimitedDatapoints(). unlimitedDatapoints; public Charts.ScatterChartBuilder unlimitedDatapoints(); Show all datapoints, without subsampling, even when this may cause performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilde",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:7089,extend,extends,7089,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['extend'],['extends']
Modifiability,"pose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2602,inherit,inherited,2602,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['inherit'],['inherited']
Modifiability,pper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathVie,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401059,plugin,plugins,401059,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"pplied to each element. static <T> void; smartStringSort(Collection<T> collection,; Function<T,String> extractor). Smart-sort a collection after extracting a String representation of each element. static String[]; splitLines(String s). Split new lines (in a cross-platform way... static String; stripExtension(String path). Strip the extension from a file name or path, leaving the rest of the string unchanged. static String; stripInvalidFilenameChars(String name). Strip characters that would make a String invalid as a filename. static long; sum(long[] values). Compute the sum of elements in a long array (possibly representing a histogram). static URI; toEncodedURI(String path). Try to convert a path to an encoded URI. static Path; toPath(URI uri). Try to identify a Path from a URI, dropping any query or fragment elements. static URI; toURI(String path). Try to convert a path to a URI. static String; zapGremlins(String text). Remove non-printable characters from a String. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SYMBOL_MU; public static final char SYMBOL_MU; Small Greek mu (useful for micrometers). See Also:. Constant Field Values. SYMBOL_SIGMA; public static final char SYMBOL_SIGMA; Small Greek sigma (useful for Gaussian filter sizes, standard deviations). See Also:. Constant Field Values. SYMBOL_MICROMETER; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:6760,inherit,inherited,6760,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['inherit'],['inherited']
Modifiability,"pplying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:2124,inherit,inherited,2124,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['inherit'],['inherited']
Modifiability,"pportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.AbstractDetectionPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:526850,plugin,plugins,526850,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"precated.; Region class. REGION - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Region class. RegionFilter - Interface in qupath.lib.gui.viewer. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters - Enum Class in qupath.lib.gui.viewer. Standard classification regions (hopefully all you will ever need). RegionRequest - Class in qupath.lib.regions. Class for defining an image region that can also be used to request these region from an ImageServer. regionToGeometry(ImageRegion) - Static method in class qupath.lib.roi.GeometryTools. Convert an ImageRegion to a rectangular Geometry. registerAlias(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register an alias label for a specified subtype. registerBuilder(DnnModelBuilder) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModelBuilder. registerDataOp(Class<? extends ImageDataOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageDataOp class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModel class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnTools. Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. registerOp(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:839717,extend,extends,839717,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"prediction image op, to be applied after preprocessing ; and before postprocessing. PatchClassifierParams.Builder; preprocessing(Collection<? extends ImageOp> preprocessingOps). Define the preprocessing steps from a collection. PatchClassifierParams.Builder; preprocessing(ImageOp... preprocessingOps). Define the preprocessing steps from an array. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4166,extend,extends,4166,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,2,['extend'],['extends']
Modifiability,"presentation of the value. String; getStringValue(PathObject pathObject,; String column,; int decimalPlaces). Get a string value, converting to a fixed number of decimal places if the column is numeric. boolean; isNumericMeasurement(String name). Query whether a named measurement returns a numeric value only. boolean; isStringMeasurement(String name). Query whether a named measurement returns a String value only. void; refreshEntries(). Refresh the measurement values. void; setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects). Set the ImageData and a collection of objects to measure. static void; setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer). Set an ImageServer as a property in the ImageData. void; setPredicate(Predicate<? super PathObject> predicate). Set a predicate used to filter the rows of the table. void; updateMeasurementList(). Update the entire measurement list for the current objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. NAME_OBJECT_ID; public static final String NAME_OBJECT_ID; The name used for the Object ID column. See Also:. Constant Field Values. Constructor Details. ObservableMeasurementTableData; public ObservableMeasurementTableData(). Method Details. setImageData; public void setImageData(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects); Set the ImageData and a collection of objects to measure. Parameters:; imageData - the ImageData, required to determine many dynamic measurements; pathObjects - the objects to measure ('rows' in the table). setPixelLayer; public static void setPixelLayer(ImageData<BufferedImage> imageData,; ImageServer<BufferedImage> layerServer); Set an ImageServer as a property in the ImageData.; This is intended for use as a temporary (non-persistent) property, used by ObservableMeasurementTableData to create live mea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html:3310,inherit,inherited,3310,javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/measure/ObservableMeasurementTableData.html,1,['inherit'],['inherited']
Modifiability,"protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. protected abstract ObjectDetector<T>; createDetector(ImageData<T> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. protected abstract double; getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected abstract int; getTileOverlap(ImageData<T> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractTileableDetectionPlugin; public AbstractTileableDetectionPlugin(). Method Details. getPreferredPixelSizeMicrons; protected abstract double getPreferredPixelSizeMicrons(ImageData<T> imageData,; ParameterList params); Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html:2513,inherit,inherited,2513,javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTileableDetectionPlugin.html,1,['inherit'],['inherited']
Modifiability,"pt for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:1657,inherit,inherited,1657,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['inherit'],['inherited']
Modifiability,"pt is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv; Class WatershedNucleiCV. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.opencv.WatershedNucleiCV. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedNucleiCV; extends AbstractTileableDetectionPlugin<BufferedImage>; Alternative (incomplete) attempt at nucleus segmentation.; ; It's reasonably fast... but not particularly good. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; WatershedNucleiCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:1040,plugin,plugins,1040,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugins']
Modifiability,"pt user to select a directory. promptForFile(File) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt user to select a file. promptForFile(String...) - Static method in class qupath.lib.gui.scripting.QPEx. Prompt the user to select a file from a file chooser. promptForFile(String, File, String, String...) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt the user for a file with some kind of file dialog. promptForFilePathOrURL(String, String, File, String, String...) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt user to select a file or input a URL. promptForMultipleFiles(String, File, String, String...) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Prompt to open a list of files. promptForParentObjects(String, ImageData<?>, boolean, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.gui.tools.GuiTools. Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. promptForSliderRange(Slider) - Static method in class qupath.lib.gui.tools.GuiTools. Prompt the user to input min/max values for a slider. promptToAddColumnAfterSelected(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to add a column to a TMA grid after the column containing the currently-selected object. promptToAddColumnBeforeSelected(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to add a column to a TMA grid before the column containing the currently-selected object. promptToAddNoteToSelectedCores(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to type a node to associate with the selected TMA cores. promptToAddRowAfterSelected(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to add a row to a TMA grid after the row containing the currently-selected object. promptToAddRowBeforeSelected(ImageD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:788855,plugin,plugin,788855,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2439,inherit,inherited,2439,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['inherit'],['inherited']
Modifiability,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<Buffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2828,inherit,inherited,2828,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2519,inherit,inherited,2519,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['inherit'],['inherited']
Modifiability,"ption of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2514,plugin,plugins,2514,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['plugin'],['plugins']
Modifiability,"public OpenCVDnn.Builder target(int target); Specify the target, e.g. opencv_dnn.DNN_TARGET_CUDA. Parameters:; target - ; Returns:; See Also:. cuda(); opencl(). backend; public OpenCVDnn.Builder backend(int backend); Specify the backend, e.g. opencv_dnn.DNN_BACKEND_CUDA. Parameters:; backend - ; Returns:; See Also:. cuda(); opencl(). mean; public OpenCVDnn.Builder mean(Scalar mean); Mean values which should be subtracted from the image channels before input to the Net. Parameters:; mean - ; Returns:. scale; public OpenCVDnn.Builder scale(double scale); Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. Parameters:; scale - ; Returns:. size; public OpenCVDnn.Builder size(int width,; int height); Input width and height. Parameters:; width - ; height - ; Returns:. size; public OpenCVDnn.Builder size(Size size); Input width and height. Parameters:; size - ; Returns:. modelType; public OpenCVDnn.Builder modelType(OpenCVDnn.ModelType type); Set the model type, used by OpenCVDnn.buildModel(). Parameters:; type - ; Returns:. classification; public OpenCVDnn.Builder classification(); Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. Returns:. segmentation; public OpenCVDnn.Builder segmentation(); Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. Returns:. detection; public OpenCVDnn.Builder detection(); Set the model type to be OpenCVDnn.ModelType.DETECTION. Returns:. outputs; public OpenCVDnn.Builder outputs(String... layers); Set the layer outputs. Usually this isn't necessary, but it provides a means to output features ; prior to any final classification. Parameters:; layers - ; Returns:. outputs; public OpenCVDnn.Builder outputs(Map<String,DnnShape> outputs); Set the layer outputs and shapes. Usually this isn't necessary, but it provides a means to output features ; prior to any final classification. Parameters:; outputs - ; Returns:. build; public OpenCVDnn build(); Build a new OpenCVDnn. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:5358,layers,layers,5358,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,4,['layers'],['layers']
Modifiability,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<Buffe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2653,plugin,plugins,2653,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugins']
Modifiability,"purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2710,plugin,plugins,2710,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['plugin'],['plugins']
Modifiability,"put; default is null indicating the pixel type is unknown. getOutputs() - Method in class qupath.opencv.dnn.DnnModelParams. Get the expected outputs and their shapes. getOutputs(DnnShape...) - Method in interface qupath.opencv.dnn.PredictionFunction. Get the output names mapped to the output shapes. getOutputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer output shape. getOutputType() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Channel type of output; default is ImageServerMetadata.ChannelType.CLASSIFICATION. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageDataOp. Get the output pixel type. getOutputType(PixelType) - Method in interface qupath.opencv.ops.ImageOp. Get the output pixel type. getOverlayActions() - Method in class qupath.lib.gui.QuPathGUI. Get the actions associated with the viewer overlay options. getOverlayLayers() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an unmodifiable list containing the overlay layers, in order. getOverlayOptions() - Method in class qupath.lib.gui.actions.OverlayActions. Get the overlay options controlled by these actions. getOverlayOptions() - Method in class qupath.lib.gui.QuPathGUI. Return the global OverlayOptions instance, used to control display within viewers by default. getOverlayOptions() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Get the overlay options, which may influence the display of this overlay. getOverlayOptions() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the overlay options that control the viewer display. getOverlayOptions() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the overlay options shared by all viewers created by this manager. getOverrideSystemMenuBar() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Get the current value of the override property, which specifies whether the system menubar should not be used; by any window - no matter what the value o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:468435,layers,layers,468435,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"putHandler<S,T,Mat>; createAnnotationOutputHandler(). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler<S,T,Mat>; createAnnotationOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into annotation objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createDetectionConverter(Map<? extends Number,String> classificationMap). Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(). Create an OutputHandler that attempts to convert the output into detection objects. static <S,; T> OutputHandler<S,T,Mat>; createDetectionOutputHandler(Map<? extends Number,String> classificationMap). Create an OutputHandler that attempts to convert the output into detection objects. static ImageSupplier<Mat>; createMatImageSupplier(). Create an ImageSupplier that returns an OpenCV Mat. static MaskSupplier<Mat,Mat>; createMatMaskSupplier(). Create a MaskSupplier that returns an OpenCV Mat. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(BiFunction<ROI,Number,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects, optionally using the label number. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator). Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. static <S,; T> OutputHandler.OutputToObjectConverter<S,T,Mat>; createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:2401,extend,extends,2401,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"py a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. promptToCreateObjects(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.process.gui.commands.ml.PixelClassifierUI. Prompt the user to create objects directly from the pixels of an ImageServer. promptToCreateProject(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Prompt the user to select an empty directory, and use this to create a new project and set it as active. promptToCreateTMAGrid(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt the user to manually create a new TMA grid. promptToCreateTrainingImage(Project<BufferedImage>, List<PathClass>) - Static method in class qupath.process.gui.commands.CreateTrainingImageCommand. Prompt to create a training image, based upon annotations throughout a project. promptToDeleteObjects(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Prompt to delete objects of a specified type, or all objects. promptToDeleteTMAGridColumn(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to delete a column from a TMA grid. promptToDeleteTMAGridRow(ImageData<?>) - Static method in class qupath.lib.gui.commands.TMACommands. Prompt to delete a row from a TMA grid. promptToEditClass(PathClass) - Static method in class qupath.lib.gui.commands.Commands. Prompt to edit the name/color of a class. promptToEstimateStainVectors(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Prompt to estimate stain vectors for the specified image, using any current region of interest. promptToExportImageList(Project<?>) - Static method in class qupath.lib.gui.commands.ProjectCommands. Prompt to export a text file containing a list of image paths for a project. promptToExportImageRegion(QuPathViewer, boolean) - Stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:791652,extend,extends,791652,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"quals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an assoc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:4212,adapt,adapt,4212,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['adapt'],['adapt']
Modifiability,"quest inserting the specified text. boolean; isRedoable(). Returns true if 'redo' can be applied to the control. boolean; isUndoable(). Returns true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3415,inherit,inherited,3415,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['inherit'],['inherited']
Modifiability,"quests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSettingsPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ImageDisplay>; imageDisplayObjectProperty(). The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManagerProperty(). The resource manager used to handle saving/loading. Methods inherited from class javafx.scene.layout.GridPane; add, add, addColumn, addRow, alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getCellBounds, getClassCssMetaData, getColumnConstraints, getColumnCount, getColumnIndex, getColumnSpan, getContentBias, getCssMetaData, getHalignment, getHgap, getHgrow, getMargin, getRowConstraints, getRowCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:2847,inherit,inherited,2847,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"quests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.GridPane; REMAINING. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastSliderPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; disableGammaAdjustmentProperty(). Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustmentProperty(). Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValueProperty(). Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplayProperty(). The image display to which the sliders are applied. DoubleProperty; maxValueProperty(). Value of the maximum slider. DoubleProperty; minValueProperty(). Value of the minimum slider. void; refreshSliders(). Refresh the sliders, to ensure they match with the current channel. void; resetAllSliders(). Reset all sliders to their default values.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:3210,inherit,inherited,3210,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"quired for this step. String; getPluginClass(). Get the full name of the plugin class. String; getScript(). Get one or more script lines that may be used to apply the step. void; readExternal(ObjectInput in);  ; String; toString();  ; void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. SimplePluginWorkflowStep; public SimplePluginWorkflowStep(); Default public constructor, required for Externalizable.; Shouldn't be used directly! Doing so would give an ineffective script... SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg); Constructor for a workflow step that calls a plugin. Parameters:; name - ; pluginClass - ; arg - . SimplePluginWorkflowStep; public SimplePluginWorkflowStep(String name,; Class<? extends PathPlugin<?>> pluginClass,; String arg,; String scriptBefore,; String scriptAfter); Constructor for a workflow step that calls a plugin, which optionally should include additional scripting lines before or afterwards. Parameters:; name - ; pluginClass - ; arg - ; scriptBefore - ; scriptAfter - . Method Details. getName; public String getName(); Description copied from interface: WorkflowStep; Get the name of the workflow step. Specified by:; getName in interface WorkflowStep; Returns:. getPluginClass; public String getPluginClass(); Get the full name of the plugin class. Returns:. getParameterMap; public Map<String,?> getParameterMap(); Description copied from interface: WorkflowStep; Get a map of parameters required for this step. Specified by:; getParameterMap in interface WorkflowStep; Returns:. toString; public String toString(). Overrides:; toString in class Object. getScript; public String getScript(); Description copied from interface: ScriptableWorkflowStep; Get one or more script lines that may be used to apply the step. Specified by:; get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html:2613,extend,extends,2613,javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/SimplePluginWorkflowStep.html,6,"['extend', 'plugin']","['extends', 'plugin', 'pluginClass']"
Modifiability,"qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401141,plugin,plugins,401141,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"qupath.lib.classifiers.object.ObjectClassifier. Classify all compatible objects from an ImageData. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Classify the objects in the specified collection. classifyObjects(ImageData<T>, Collection<? extends PathObject>, boolean) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; classifyObjectsByCentroid(ImageData<BufferedImage>, PixelClassifier, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Classify objects according to the prediction of the pixel corresponding to the object's ROI centroid using a PixelClassifier. classifyObjectsByCentroid(ImageServer<BufferedImage>, Collection<PathObject>, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Apply classification from a server to a collection of objects. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifyObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. classifySelected(String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects in the current hierarchy. classifySelected(PathObjectHierarchy, String) - Static method in class qupath.lib.scripting.QP. Set the classification of the selected objects. clear() - Method in interface qupath.lib.gui.scripting.EditableText. Request clear the contents of the control. clear() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; clear() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; clear() - Method in class qupath.lib.gui.UndoRedoManager. Clear all undo/r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:104842,extend,extends,104842,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"qupath.lib.experimental.pixels.Processor. Processing method. PROCESSING - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile currently being processed. ProcessingCV - Class in qupath.opencv.tools. Static methods to enable existing code for watershed transforms and morphological reconstruction; to be applied to OpenCV images. ProcessingCV() - Constructor for class qupath.opencv.tools.ProcessingCV;  ; ProcessingExtension - Class in qupath.process.gui. General-purpose processing and machine learning commands. ProcessingExtension() - Constructor for class qupath.process.gui.ProcessingExtension;  ; ProcessingExtension.ObjectClassificationCommands - Class in qupath.process.gui;  ; ProcessingExtension.OpenCVCommands - Class in qupath.process.gui. Commands based on OpenCV. ProcessingExtension.OtherCommands - Class in qupath.process.gui;  ; ProcessingExtension.PixelClassificationCommands - Class in qupath.process.gui;  ; processObjects(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.lib.experimental.pixels.PixelProcessor. Process objects using the default TaskRunner. processObjects(TaskRunner, ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.lib.experimental.pixels.PixelProcessor. Process objects using the specified TaskRunner. processor(Processor<S, T, U>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the processor. Processor<S,T,U> - Interface in qupath.lib.experimental.pixels. A generic processor designed to work with Parameters and provide an output. project(ObjectExpression<Project<BufferedImage>>) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Current project. project(Mat, Mat) - Method in class qupath.opencv.ml.objects.features.Preprocessing.PCAProjector. Apply the projection. Project<T> - Interface in qupath.lib.projects. Data structure to manage images and associated data in QuPath. PROJECT_ADD_IMAGES - Variab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:783803,extend,extends,783803,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401304,plugin,plugins,401304,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"qupath.lib.gui.charts.Charts.BarChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Title to use for the window, if the chart is shown. windowTitle(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Title to use for the window, if the chart is shown. WITH_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections with ROI icons. WITHOUT_ICONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. Show detections without ROI icons. workerComplete(TileWorker<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Every TileWorker should call this when the task is done!. Workflow - Class in qupath.lib.plugins.workflow. A collection of steps that relate to how an image has been - or should be - processed. Workflow() - Constructor for class qupath.lib.plugins.workflow.Workflow;  ; WorkflowCommandLogView - Class in qupath.lib.gui.panes. Show logged commands, and optionally generate a script. WorkflowCommandLogView(QuPathGUI) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view to display the workflow for the currently-active ImageData within a running QuPath instance. WorkflowCommandLogView(QuPathGUI, Workflow) - Constructor for class qupath.lib.gui.panes.WorkflowCommandLogView. Construct a view displaying a static workflow (i.e. WorkflowListener - Interface in qupath.lib.plugins.workflow. Interface for listening to changes in Workflows, e.g. WorkflowStep - Interface in qupath.lib.plugins.workflow. Basic interface for a loggable workflow step. workflowUpdated(Workflow) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; workflowUpdated(Workflow) - Method in class qupath.lib.images.ImageData;  ; workflowUpdated(Workflow) - Method in interface qupath.lib.plugins.workflow.WorkflowListener. Call",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1108419,plugin,plugins,1108419,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"qupath.lib.io.PathIO. Get a list of known file extensions that may contain objects, optionally including compressed files. getObjects(Collection<PathObject>, Class<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class. getObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the current hierarchy according to a specified predicate. getObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Get a list of all objects in the specified hierarchy according to a specified predicate. getObjectsForLocation(PathObjectHierarchy, double, double, int, int, double) - Static method in class qupath.lib.objects.PathObjectTools. Get a collection of objects that overlap a specified pixel location. getObjectsForRegion(Class<? extends PathObject>, ImageRegion, Collection<PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the objects overlapping or close to a specified region. getObjectsForRegion(ImageRegion) - Method in class qupath.lib.images.servers.LabeledImageServer. Get the objects to be painted that fall within a specified region. getObjectsForROI(Class<? extends PathObject>, ROI) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. getObjectsOfClass(Collection<PathObject>, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get the PathObjects in a collection that are instances of a specified class. getODNormalizedColor(int, double, float, float) - Static method in class qupath.lib.color.ColorTransformer. Create a 'normalized' color for visualization. getOffset(int) - Method in class qupath.opencv.ml.objects.features.Normalizer. Get the offset",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:462392,extend,extends,462392,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages - package qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814258,plugin,plugins,814258,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComparator;  ; compare(ROI, ROI) - Method in class qupath.lib.roi.DefaultROIComparator;  ; compareTo(KaplanMeierData.KaplanMeierEvent) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent;  ; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePlane) - Method in class qupath.lib.regions.ImagePlane. Compare with another ImagePlane, in the order t, z, c. completionCodeCombination - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; componentContains(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; componentPointToImagePoint(double, double, Point",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:127275,variab,variable,127275,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"qupath.lib.roi.LineROI;  ; isArea() - Method in class qupath.lib.roi.PointsROI;  ; isArea() - Method in class qupath.lib.roi.PolygonROI;  ; isArea() - Method in class qupath.lib.roi.PolylineROI;  ; isArea() - Method in class qupath.lib.roi.RectangleROI;  ; isArea() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI encloses an area. isBigTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a BigTIFF image. isBrightfield() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to brightfield. isBrightnessContrastRescaled() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isBrightnessContrastRescaled() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if rescaling according to min & max display levels is applied, false if the full display range is used. isCancelled() - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; isCancelled() - Method in interface qupath.lib.plugins.TaskRunner. Query if the plugin can be cancelled while running. isCell() - Method in class qupath.lib.objects.PathObject. Returns true if the object is a cell object (a special type of detection, which can contain second ROI for the nucleus). isCensored() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Returns true if the event should be considered right-censored. isChanged() - Method in class qupath.lib.images.ImageData. Returns true if changes have been recorded since the last time this object was notified that it was saved. isChanging() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if changes are still being made, so more events will be fired. isCircle() - Method in class qupath.lib.roi.EllipseROI. Query if the width and height of the ellipse bounding box are the same, assuming 'square' pixels. isCircle(double, double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:615869,plugin,plugins,615869,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap (implements java.util.Map<K,V>). qupath.lib.classifiers.object.AbstractObjectClassifier<T> (implements qupath.lib.classifiers.object.ObjectClassifier<T>). qupath.opencv.dnn.DnnObjectClassifier (implements qupath.lib.io.UriResource); qupath.opencv.ml.objects.OpenCVMLClassifier<T>; qupath.opencv.dnn.OpenCVModelObjectClassifier (implements qupath.lib.io.UriResource). qupath.lib.gui.viewer.overlays.AbstractOverlay (implements qupath.lib.gui.viewer.overlays.PathOverlay). qupath.lib.gui.viewer.overlays.AbstractImageOverlay. qupath.lib.gui.viewer.overlays.BufferedImageOverlay (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. qupath.lib.gui.viewer.overlays.GridOverlay; qupath.lib.gui.viewer.overlays.HierarchyOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. qupath.lib.plugins.AbstractPlugin<T> (implements qupath.lib.plugins.PathPlugin<T>). qupath.lib.plugins.AbstractInteractivePlugin<T> (implements qupath.lib.plugins.PathInteractivePlugin<T>). qupath.lib.plugins.AbstractDetectionPlugin<T>. qupath.lib.plugins.AbstractTileableDetectionPlugin<T>. qupath.opencv.CellCountsCV; qupath.imagej.superpixels.DoGSuperpixelsPlugin; qupath.imagej.superpixels.SLICSuperpixelsPlugin; qupath.imagej.detect.cells.WatershedCellDetection. qupath.imagej.detect.cells.PositiveCellDetection. qupath.imagej.detect.cells.WatershedCellMembraneDetection; qupath.opencv.WatershedNucleiCV. qupath.opencv.DetectCytokeratinCV; qupath.imagej.detect.tissue.PositivePixelCounterIJ; qupath.imagej.detect.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindCo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:5741,plugin,plugins,5741,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class RegionFilter.StandardRegionFilters. java.lang.Object; java.lang.Enum<RegionFilter.StandardRegionFilters>; qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. All Implemented Interfaces:; Serializable, Comparable<RegionFilter.StandardRegionFilters>, Constable, BiPredicate<ImageData<?>,RegionRequest>, RegionFilter. Enclosing interface:; RegionFilter. public static enum RegionFilter.StandardRegionFilters; extends Enum<RegionFilter.StandardRegionFilters>; implements RegionFilter; Standard classification regions (hopefully all you will ever need). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Nested classes/interfaces inherited from interface qupath.lib.gui.viewer.RegionFilter; RegionFilter.StandardRegionFilters. Enum Constant Summary; Enum Constants. Enum Constant; Description; ANY_ANNOTATIONS. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS. Regions overlapping the bounding box of any annotations. ANY_OBJECTS. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS. Regions overlapping the bounding box of any objects. EVERYWHERE. Accept all requests. IMAGE. Accept all requests for the image where the region is non-empty. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; test(ImageData<?> imageData,; RegionRequest region);  ; String; toString();  ; static RegionFilter.StandardRegionFilters; valueOf(String name). Returns the enum constant of this class with the specified name. static RegionFilter.StandardRegionFilters[]; values(). Returns an array contain",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html:1079,extend,extends,1079,javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/RegionFilter.StandardRegionFilters.html,1,['extend'],['extends']
Modifiability,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting; Class ScriptTab. java.lang.Object; qupath.lib.gui.scripting.ScriptTab. public class ScriptTab; extends Object; Class representing a script tab (e.g. on the right side of the script editor).; ; A ScriptTab object has:; ; A main editor; A console; A language. And is displayed on the right side of the ScriptEditor. Since:; v0.4.0; Author:; Pete Bankhead, Melvin Gelbard. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isModified(). Return. BooleanProperty; isModifiedProperty(). Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. protected void; readFile(File file). Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). protected void; refreshFileContents();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. readFile; protected void readFile(File file); throws IOException; Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). Parameters:; file - the file to read; Throws:; IOException. refreshFileContents; protected void refreshFileContents(). isModified; public boolean isModified(); Return. Returns:. isModifiedProperty; public BooleanProperty isModifiedProperty(); Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. it isn't the same as the last saved version). Returns:; isModifiedProperty. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html:1235,inherit,inherited,1235,javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptTab.html,1,['inherit'],['inherited']
Modifiability,"r class for working with Bioimage Model Zoo model specs, and attempting to ; replicating the processing within QuPath. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; BioimageIoTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildDnnModel(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel spec). Attempt to build a DnnModel that follows this spec as closely as possible. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static PatchClassifierParams; buildPatchClassifierParams(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel model,; ImageOp... inputOps). Create an instance of PatchClassifierParams from a model spec. static ImageOp; transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms). Create an ImageOp that applies the specified transforms sequentially. static ImageOp; transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform). Create an ImageOp that applies the specified transforms, if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BioimageIoTools; public BioimageIoTools(). Method Details. buildDnnModel; public static DnnModel buildDnnModel(qupath.bioimageio.spec.BioimageIoSpec.BioimageIoModel spec); Attempt to build a DnnModel that follows this spec as closely as possible.; ; In some instances, the processing steps requires by the spec might not currently be ; supported by QuPath - see transformToOp(Processing) for more information. Parameters:; spec - ; Returns:. buildPatchClassifierParams; public static PatchClassifierParams buildPatchClassif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html:1497,extend,extends,1497,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,2,['extend'],['extends']
Modifiability,"r class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pairs by OpenSlide. duplicate() - Method in class qupath.lib.images.servers.ImageServerMetadata. Duplicate this metatadata. duplicate() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; duplicate() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; duplicate() - Method in interface qupath.lib.plugins.parameters.Parameter. Create a new Parameter with the same text and value. duplicate() - Method in class qupath.lib.plugins.parameters.ParameterList. Create a deep copy of this parameter list. duplicate() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; duplicate() - Method in class qupath.lib.roi.AreaROI. Deprecated. duplicate() - Method in class qupath.lib.roi.EllipseROI. Deprecated. duplicate() - Method in class qupath.lib.roi.GeometryROI;  ; duplicate() - Method in interface qupath.lib.roi.interfaces.ROI. Deprecated. duplicate() - Method in class qupath.lib.roi.LineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PointsROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolygonROI. Deprecated. duplicate() - Method in class qupath.lib.roi.PolylineROI. Deprecated. duplicate() - Method in class qupath.lib.roi.RectangleROI. Deprecated. duplicate(BufferedImage) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:273488,plugin,plugins,273488,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"r for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointIO - Class in qupath.lib.io. Helper class for reading/writing point objects in terms of their x,y coordinates. PointIO() - Constructor for class qupath.lib.io.PointIO;  ; pointRadius - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pointRadiusProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Radius of the circle used to draw individual points in a point annotation (in pixels). POINTS - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Points annotation and counting tool. POINTS_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POINTS_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PointsROI - Class in qupath.lib.roi. ROI representing a collection of 2D points (distinct x,y coordinates). POLYGON - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Polygon drawing tool (closed). POLYGON_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYGON_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolygonROI - Class in qupath.lib.roi. ROI representing an arbitrary closed polygon. POLYLINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Polyline drawing tool (open). POLYLINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYLINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolylineROI - Class in qupath.lib.roi. ROI representing an arbitrary open polyline. populateAnnotationsMenu(QuPathGUI, ContextMenu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a ContextMenu with standard options to operate on selected annotation objects. populateAnnotationsMenu(QuPathGUI, Menu) - Static method in class qupath.lib.gui.tools.GuiTools. Populate a Menu with standard options to ope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:771554,variab,variable,771554,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"r for class qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand;  ; SplitAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. SplitAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; splitAreasByBufferedLines(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. splitAreasByBufferedLines(Collection<? extends PathObject>, Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. splitAreasByLines(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. splitAreasByLines(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. splitAreaToPolygons(Area, int, int, int) - Static method in class qupath.lib.roi.RoiTools. Split Area into PolygonROIs for the exterior and the holes. splitChannels(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Split channels of an array. splitChannels(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Split channels from a Mat. splitConnectedRegions(SparseImageServer, double, boolean) - Static method in class qupath.lib.images.servers.SparseImageServer. Split a SparseImageServer into multiple servers, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:989298,extend,extends,989298,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"r of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public double[] getPreferredDownsamplesArray(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy, and so should not be called often; it is generally preferably ; to request downsample values individually. Returns:. getLevels; public List<ImageServerMetadata.ImageResolutionLevel> getLevels(); Get an unmodifiable list containing the resolution levels. Returns:. getWidth; public int getWidth(); Get the full-resolution image width. Returns:. getHeight; public int getHeight(); Get the full-resolution image height. Returns:. nLevels; public int nLevels(); Get the number of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:4566,inherit,inherited,4566,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['inherit'],['inherited']
Modifiability,"r, OpenCVModelObjectClassifier. public abstract class AbstractObjectClassifier<T>; extends Object; implements ObjectClassifier<T>; Abstract class to help with the creation of object classifiers. Author:; Pete Bankhead. Field Summary. Fields inherited from interface qupath.lib.classifiers.object.ObjectClassifier; PROJECT_LOCATION. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractObjectClassifier(PathObjectFilter filter);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<T> imageData,; boolean resetExistingClass). Classify all compatible objects from an ImageData. Collection<PathObject>; getCompatibleObjects(ImageData<T> imageData). Get the objects from an ImageData that are compatible with this classifier. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.classifiers.object.ObjectClassifier; classifyObjects, getMissingFeatures, getPathClasses. Constructor Details. AbstractObjectClassifier; protected AbstractObjectClassifier(PathObjectFilter filter). Method Details. classifyObjects; public int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<T>; Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.getCompatibleObjects(ImageData). getCompatibleObjects; public Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Description copied from inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html:1617,inherit,inherited,1617,javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/AbstractObjectClassifier.html,1,['inherit'],['inherited']
Modifiability,"r, with an list of choices and help text. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addClusterMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Compute mean measurements from clustering all connected objects. addColorPropertyPreference(IntegerProperty, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addCompletion(AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(Collection<? extends AutoCompletions.Completion>) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(AutoCompletions.Completion...) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addDensities(String, PathObjectPredicates.PathObjectPredicate) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Add a filter for computing densities. addDirectoryPropertyPreference(Property<String>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addDoubleParameter(String, String, double) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list. addDoubleParameter(String, String, double, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded double parameter to this list. addDoubleParameter(String, String, double, String, String) - Metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:14546,extend,extends,14546,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"r. Annotation Interface Hierarchy. qupath.lib.gui.actions.annotations.ActionAccelerator (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionConfig (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionIcon (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMenu (implements java.lang.annotation.Annotation); qupath.lib.gui.actions.annotations.ActionMethod (implements java.lang.annotation.Annotation). Enum Class Hierarchy. java.lang.Object. java.lang.Enum<E> (implements java.lang.Comparable<T>, java.lang.constant.Constable, java.io.Serializable). qupath.lib.display.ChannelDisplayMode; qupath.lib.color.ColorDeconvolutionStains.DefaultColorDeconvolutionStains; qupath.lib.color.ColorTransformer.ColorTransformMethod; qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType; qupath.lib.gui.dialogs.Dialogs.DialogButton; qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap; qupath.lib.gui.tools.GuiTools.SnapshotType; qupath.lib.gui.charts.HistogramChart.CountsTransformMode; qupath.lib.gui.charts.HistogramChart.DisplayMode; qupath.lib.gui.tools.IconFactory.PathIcons; qupath.lib.images.ImageData.ImageType; qupath.lib.gui.viewer.ImageInterpolation; qupath.lib.images.servers.ImageServerMetadata.ChannelType; qupath.lib.gui.actions.InfoMessage.MessageType; qupath.opencv.tools.LocalNormalization.NormalizationType; qupath.lib.gui.logging.LogManager.LogLevel; qupath.lib.measurements.MeasurementList.MeasurementListType; qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature; qupath.lib.classifiers.Normalization; qupath.lib.analysis.features.ObjectMeasurements.Compartments; qupath.lib.analysis.features.ObjectMeasurements.Measurements; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures; qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType; qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionTy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:44198,plugin,plugins,44198,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"r. Create a new script in the specified language. addNodeMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Add Delaunay measurements to each pathObject. addNoise(Mat, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Add Gaussian noise with specified mean and standard deviation to all channels of a Mat. addObject(PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add an object to the hierarchy, firing an event. addObject(PathObject) - Static method in class qupath.lib.scripting.QP. Add the specified object to the current PathObjectHierarchy. addObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add an object to the hierarchy, optionally firing an event. addObjectBelowParent(PathObject, PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add path object as descendant of the requested parent. addObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add multiple objects to the hierarchy. addObjects(Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Add the specified collection of objects to the current PathObjectHierarchy. addObjects(PathObject[]) - Static method in class qupath.lib.scripting.QP. Add the specified array of objects to the current PathObjectHierarchy. addParameterChangeListener(ParameterChangeListener) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Add a ParameterChangeListener to be notified as parameters are modified by the user. addPathObject(PathObject) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Deprecated.; since v0.4.0; use PathObjectHierarchy.addObject(PathObject) instead (for naming consistency). addPathObject(PathObject) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.addChildObject(PathObject). addPathObjectBelowParent(P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:22696,extend,extends,22696,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"r. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTools. Request that CUDA is used. setUseGrayscaleLuts(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useGrayscaleLutProperty(). setUseInvertedBackground(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoublePara",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:954387,plugin,plugins,954387,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"r. Specify the image name. name(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a series name. name(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. User-friendly name to use with this model. NAME_NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Negative"" staining intensity. NAME_OBJECT_ID - Static variable in class qupath.lib.gui.measure.ObservableMeasurementTableData. The name used for the Object ID column. NAME_ONE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""1+"" staining intensity (i.e. NAME_POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Positive"" staining intensity. NAME_THREE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""3+"" staining intensity (i.e. NAME_TWO_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""2+"" staining intensity (i.e. nameObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object names based upon pre-computed clusters. nameObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. nameProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the String property of this ViewTracker. nameProperty() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; nameProperty() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Property giving the name of the tool. nanoseconds() - Method in class qupath.lib.common.Timeit. Report timings in nanoseconds. navigationAcceleration - Variable in class qupath.lib.gui.panes.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:706375,variab,variable,706375,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"r. removeFragments(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Remove fragments smaller than the specified area from a Geometry, ignoring internal rings. removeGroup(PathObjectConnectionGroup) - Method in class qupath.lib.objects.PathObjectConnections. Remove a connections group. removeImage(ProjectImageEntry<?>, boolean) - Method in interface qupath.lib.projects.Project. Remove an image from the project, optionally including associated data. removeInteriorRings(Geometry, double) - Static method in class qupath.lib.roi.GeometryTools. Fill all interior rings for the specified geometry that have an area < a specified threshold. removeJsonDropHandler(DragDropImportListener.DropHandler<JsonElement>) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Remove a JSON DropHandler. removeListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a hierarchy change listener. removeMeasurements(Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the current image data. removeMeasurements(String...) - Method in interface qupath.lib.measurements.MeasurementList. Remove all the measurements with the specified names. removeMeasurements(PathObjectHierarchy, Class<? extends PathObject>, String...) - Static method in class qupath.lib.scripting.QP. Remove measurements from objects of a specific class for the specified hierarchy. removeMetadataValue(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Remove a metadata value. removeNames(PathClass, String...) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeNames(PathClass, Collection<String>) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements rem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:845744,extend,extends,845744,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class GitHubProject.GitHubRepo. java.lang.Object; qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Enclosing interface:; GitHubProject. public static class GitHubProject.GitHubRepo; extends Object; Helper class to represent a GitHub repository. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static GitHubProject.GitHubRepo; create(String name,; String owner,; String repo). Create a new GitHubProject. boolean; equals(Object obj);  ; String; getName(). Get the name. String; getOwner(). Get the owner. String; getRepo(). Get the repo. String; getUrlString(). Get the URL for the main repo. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getOwner; public String getOwner(); Get the owner. Returns:. getRepo; public String getRepo(); Get the repo. Returns:. getName; public String getName(); Get the name. This can be used to identify the overall project, but is not part of the source code URL. Returns:. getUrlString; public String getUrlString(); Get the URL for the main repo. Returns:. toString; public String toString(). Overrides:; toString in class Object. create; public static GitHubProject.GitHubRepo create(String name,; String owner,; String repo); Create a new GitHubProject. Parameters:; name - a user-friendly name; owner - the owner, used as the first part in the GitHub URL; repo - the repo, used as the second part in the GitHub URL; Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html:1087,inherit,inherited,1087,javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/GitHubProject.GitHubRepo.html,1,['inherit'],['inherited']
Modifiability,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class YamlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.YamlStyler. All Implemented Interfaces:; ScriptStyler. public class YamlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on YAML syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; computeConsoleStyles, getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html:1058,inherit,inherited,1058,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/YamlStyler.html,1,['inherit'],['inherited']
Modifiability,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1072,extend,extends,1072,javadoc/docs/qupath/lib/io/PointIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html,1,['extend'],['extends']
Modifiability,"r.Builder; tileSize(int tileWidth,; int tileHeight). Set tile width and height. LabeledImageServer.Builder; useAnnotations(). Use annotations for labels. LabeledImageServer.Builder; useCellNuclei(). Use cells rather than annotations for labels, requesting the nucleus ROI where available. LabeledImageServer.Builder; useCells(). Use cells rather than annotations for labels. LabeledImageServer.Builder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCells; public LabeledImageServer.Builder useCells(); Use cells rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCellNuclei; public LabeledImageServer.Builder useCellNuclei(); Use cells rather than annotations for labels, requesting the nucleus ROI where available.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useAnnotations; public LabeledImageServer.Builder useAnnotations(); Use annotation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:5829,inherit,inherited,5829,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['inherit'],['inherited']
Modifiability,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ImageDetailsPane. java.lang.Object; qupath.lib.gui.panes.ImageDetailsPane. All Implemented Interfaces:; PropertyChangeListener, EventListener, ChangeListener<ImageData<BufferedImage>>. public class ImageDetailsPane; extends Object; implements ChangeListener<ImageData<BufferedImage>>, PropertyChangeListener; A panel used for displaying basic info about an image, e.g. its path, width, height, pixel size etc.; ; It also includes displaying color deconvolution vectors for RGB brightfield images. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. static boolean; promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType). Prompt the user to set the ImageData.ImageType for the image. void; propertyChange(PropertyChangeEvent evt);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDetailsPane; public ImageDetailsPane(ObservableValue<ImageData<BufferedImage>> imageDataProperty); Constructor. Parameters:; imageDataProperty - . Method Details. promptToSetImageType; public static boolean promptToSetImageType(ImageData<BufferedImage> imageData,; ImageData.ImageType defaultType); Prompt the user to set the ImageData.ImageType for the image. Parameters:; imageData - the image data for which the type should be set; defaultType - the defaul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html:1188,extend,extends,1188,javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ImageDetailsPane.html,1,['extend'],['extends']
Modifiability,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class PlainLanguage. java.lang.Object; qupath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.PlainLanguage. public class PlainLanguage; extends ScriptLanguage; Class for the representation of plain text in QuPath.; ; This class stores the QuPath implementation of Plain syntaxing and plain auto-completion (both do nothing, as it's plain text). Since:; v0.4.0; Author:; Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PlainLanguage(). Constructor for a simple Plain Language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static PlainLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PlainLanguage; public PlainLanguage(); Constructor for a simple Plain Language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static PlainLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html:1232,inherit,inherited,1232,javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/PlainLanguage.html,2,['inherit'],['inherited']
Modifiability,"r; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:1926,extend,extends,1926,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['extend'],['extends']
Modifiability,"r; limitDatapoints(int max). Choose the maximum number of supported datapoints. Charts.ScatterChartBuilder; markerOpacity(double opacity). Specify the marker opacity. Charts.ScatterChartBuilder; measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement). Plot two measurements against one another for the specified objects. Charts.ScatterChartBuilder; parent(Window parent). Set the parent window. Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y). Create a scatterplot using arrays of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; List<T> extra). Create a scatterplot using collections of numeric values, with an associated custom object. <T> Charts.ScatterChartBuilder; series(String name,; double[] x,; double[] y,; T[] extra). Create a scatterplot using collections of numeric values, with an associated custom object. Charts.ScatterChartBuilder; series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y). Create a scatterplot using collections of numeric values. <T> Charts.ScatterChartBuilder; series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun). Plot values extracted from objects within a specified collection. Charts.ScatterChartBuilder; series(String name,; Collection<XYChart.Data<Number,Number>> data). Create a scatterplot from existing data plots. Stage; show(). Add the chart to a stage, and show it in the Application thread. Charts.ScatterChartBuilder; size(double width,; double height). Set the preferred size of the chart. Charts.ScatterChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. Charts.ScatterChartBuilder; unlimitedDatapoints(). Show all datapoints, without subsampling, even when this may cause performance issues. protected void; updateChart(ScatterChart<Number,Number> chart). Method that appl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:3385,extend,extends,3385,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,2,['extend'],['extends']
Modifiability,"r;  ; addCompletion(AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(Collection<? extends AutoCompletions.Completion>) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(AutoCompletions.Completion...) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addDensities(String, PathObjectPredicates.PathObjectPredicate) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Add a filter for computing densities. addDirectoryPropertyPreference(Property<String>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addDoubleParameter(String, String, double) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list. addDoubleParameter(String, String, double, String, double, double, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a bounded double parameter to this list. addDoubleParameter(String, String, double, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a double parameter to this list, optionally including a unit and help text. addDuplicate(ProjectImageEntry<T>, boolean) - Method in interface qupath.lib.projects.Project. Add an image by duplicating an existing entry. ADDED - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. An object has been added. addEmptyParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add an 'empty' parameter, that is one that does not take any values. addEvent(double, boolean) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Insert a new event. addEvents(Collection<KaplanMeierData.KaplanMeierEvent>) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Add a collection of events. addFileDro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:15387,plugin,plugins,15387,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"r<BufferedImage> server,; List<ChannelDisplayInfo> channels). Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:2252,inherit,inherited,2252,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['inherit'],['inherited']
Modifiability,"rData object with the specified display name and events. KaplanMeierData.KaplanMeierEvent - Class in qupath.lib.analysis.stats.survival. Simple class to store event time and censored flag. keepDisplaySettings - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; keepDisplaySettingsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). KEY_CASE_ID - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measurements.MeasurementList. Get all available names as a set. killRunningScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  . L. LAB_DISTANCE - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image converted to CIELAB, Euclidean distance calculated. label(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:642297,variab,variable,642297,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"rEnabled(Parameter<?> param). Returns true if a parameter is enabled (and is therefore editable). ParameterList; getParameters(). Get the ParameterList displayed in this panel. protected TextField; getTextField(Parameter<?> param,; int cols);  ; void; removeParameterChangeListener(ParameterChangeListener listener). Remove a ParameterChangeListener. boolean; setNumericParameterValue(String key,; Number value). Set a numeric parameter value (either int or double). boolean; setNumericParameterValueRange(String key,; double minValue,; double maxValue). Set the minimum and maximum value for a numeric parameter. void; setParameterEnabled(String key,; boolean enabled). Set the enabled status of a parameter by key, to determine if it can be edited. void; setParameterEnabled(Parameter<?> param,; boolean enabled). Set the enabled status of a parameter, to determine if it can be edited. protected static void; setTextFieldFromNumber(TextField text,; Number value,; String unit);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ParameterPanelFX; public ParameterPanelFX(ParameterList params); Create a ParameterPanelFX. Parameters:; params - . Method Details. getParameters; public ParameterList getParameters(); Get the ParameterList displayed in this panel. Returns:. getPane; public Pane getPane(); Get the Pane that can be displayed. Returns:. addParameterChangeListener; public void addParameterChangeListener(ParameterChangeListener listener); Add a ParameterChangeListener to be notified as parameters are modified by the user. Parameters:; listener - ; See Also:. removeParameterChangeListener(ParameterChangeListener). removeParameterChangeListener; public void removeParameterChangeListener(ParameterChangeListener listener); Remove a ParameterChangeListener. Parameters:; listener - ; See Also:. addParameterChangeListener(ParameterChangeListener). setTextFieldFromNumber; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html:2205,inherit,inherited,2205,javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ParameterPanelFX.html,1,['inherit'],['inherited']
Modifiability,"rList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3452,inherit,inherited,3452,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['inherit'],['inherited']
Modifiability,"rList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:2624,plugin,plugin,2624,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability,"rTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:1758,inherit,inherited,1758,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,1,['inherit'],['inherited']
Modifiability,"rable<ImageInterpolation>, Constable. public enum ImageInterpolation; extends Enum<ImageInterpolation>; Supported interpolation methods when displaying images. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BILINEAR. Bilinear interpolation. NEAREST. Nearest neighbor interpolation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageInterpolation; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageInterpolation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NEAREST; public static final ImageInterpolation NEAREST; Nearest neighbor interpolation. BILINEAR; public static final ImageInterpolation BILINEAR; Bilinear interpolation. Method Details. values; public static ImageInterpolation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ImageInterpolation valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no consta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html:1563,inherit,inherited,1563,javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ImageInterpolation.html,1,['inherit'],['inherited']
Modifiability,"ractDnnModel() - Constructor for class qupath.opencv.dnn.AbstractDnnModel;  ; AbstractImageOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract PathOverlay with additional properties relevant when drawing BufferedImages. AbstractImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; AbstractImageRenderer - Class in qupath.lib.gui.images.stores. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageRenderer() - Constructor for class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; AbstractImageServer<T> - Class in qupath.lib.images.servers. Abstract implementation of ImageServer providing some common functionality. AbstractImageServer(Class<T>) - Constructor for class qupath.lib.images.servers.AbstractImageServer;  ; AbstractInteractivePlugin<T> - Class in qupath.lib.plugins. Abstract class to help with implementing an interactive plugin. AbstractInteractivePlugin() - Constructor for class qupath.lib.plugins.AbstractInteractivePlugin;  ; AbstractObjectClassifier<T> - Class in qupath.lib.classifiers.object. Abstract class to help with the creation of object classifiers. AbstractObjectClassifier(PathObjectFilter) - Constructor for class qupath.lib.classifiers.object.AbstractObjectClassifier;  ; AbstractOverlay - Class in qupath.lib.gui.viewer.overlays. Abstract class to help with implementing PathOverlays. AbstractOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.AbstractOverlay;  ; AbstractOverlay.LocationStringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:2735,plugin,plugins,2735,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositiveCellDetection; extends WatershedCellDetection; Alternative implementation of WatershedCellDetection that automatically applies 1 or 3 intensity thresholds to classify cells. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.imagej.detect.cells.WatershedCellDetection; parametersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:1795,plugin,plugin,1795,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['plugin'],['plugin']
Modifiability,"ragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ExtensionControlPane; createInstance(). Create an instance of the ExtensionControlPane UI pane. static void; handleGitHubURL(String url). Handle a URL that might be an extension hosted on GitHub. Methods inherited from class javafx.scene.layout.VBox; alignmentProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, fillWidthProperty, getAlignment, getClassCssMetaData, getContentBias, getCssMetaData, getMargin, getSpacing, getVgrow, isFillWidth, layoutChildren, requestLayout, setAlignment, setFillWidth, setMargin, setSpacing, setVgrow, spacingProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html:2947,inherit,inherited,2947,javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionControlPane.html,1,['inherit'],['inherited']
Modifiability,"rainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its boundary falls within the specified limit or it lacks both boundary and nucleus ROIs. constrainCellOverlaps; public static List<PathObject> constrainCellOverlaps(Collection<? extends PathObject> cells); Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus.; Results are returned as a new list of cells. Parameters:; cells - input cells; Returns:; a new list of cells, potentially containing some of the original cells and other adjusted cells. detectionsToCells; public static List<PathObject> detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale); Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. Parameters:; detections - the detection objects from which to create the cells; these define the nuclei; distance - the maximum distance (in pixels) to expand each nucleus; nucleusScale - the maximum size of the cell relative to the nucleus (ignored if ≤ 1).; Returns:; cell objects derived from the supplied detections. This may have fewer entries if not all detections could be used successfully. estimateCellBoundary; public s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:3034,extend,extends,3034,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['extend'],['extends']
Modifiability,"rained() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier has already been trained and is ready to predict. isTranslating() - Method in class qupath.lib.roi.RoiEditor. Query if a ROI is currently being translated through this editor. isTransparent() - Method in class qupath.lib.images.servers.ImageChannel. Check if the color is 'transparent'; this is used for background/ignored channels. isTwoPlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""2+"", indicating a moderately-positive staining. isUnbounded() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this neither a lower nor an upper bound constraining valid values. isUndoable() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; isUndoable() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Returns true if 'undo' can be applied to the control. isUndoable() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; isUnknown() - Method in class qupath.opencv.dnn.DnnShape. Returns true if the shape is unknown. isUnsignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is an unsigned integer representation. isURL() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Return true if URI has a scheme beginning with http. isValid() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Returns true if the p-value is not NaN. isValid() - Method in class qupath.lib.gui.tools.MeasurementMapper. Query if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:636137,plugin,plugins,636137,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"rainingCommand. All Implemented Interfaces:; Runnable. public class SplitProjectTrainingCommand; extends Object; implements Runnable; Divide a project into training, validation and test sets but flagging individual image entries. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TRAIN_VALIDATION_TEST_METADATA_KEY. Metadata key for the flag indicating the image type (Train, Validation, Test or None). static final String; VALUE_NONE. Metadata value for unassigned images. static final String; VALUE_TEST. Metadata value for test images. static final String; VALUE_TRAINING. Metadata value for training images. static final String; VALUE_VALIDATION. Metadata value for validation images. Constructor Summary; Constructors. Constructor; Description; SplitProjectTrainingCommand(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; run();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TRAIN_VALIDATION_TEST_METADATA_KEY; public static final String TRAIN_VALIDATION_TEST_METADATA_KEY; Metadata key for the flag indicating the image type (Train, Validation, Test or None). See Also:. Constant Field Values. VALUE_TRAINING; public static final String VALUE_TRAINING; Metadata value for training images. See Also:. Constant Field Values. VALUE_VALIDATION; public static final String VALUE_VALIDATION; Metadata value for validation images. See Also:. Constant Field Values. VALUE_TEST; public static final String VALUE_TEST; Metadata value for test images. See Also:. Constant Field Values. VALUE_NONE; public static final String VALUE_NONE; Metadata value for unassigned images. See Also:. Constant Field Values. Constructor Details. SplitProjectTrainingCommand; public SplitProjectTrainingCommand(QuPathGUI qupath); Constructor. Parameters:; qupath - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html:1465,inherit,inherited,1465,javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/SplitProjectTrainingCommand.html,2,['inherit'],['inherited']
Modifiability,"ramidWriter.Builder. Request no compression. UNCOMPRESSED - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.CompressionType. No compression (faster to write, no loss of information, but large file sizes). undo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; undo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request undo. undo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; UNDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; undoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; undoOnce() - Method in class qupath.lib.gui.UndoRedoManager. Request to 'undo' the last observed hierarchy change for the current active viewer. UndoRedoManager - Class in qupath.lib.gui. Helper class to add undo/redo support to QuPath. UndoRedoPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences;  ; union(Collection<? extends Geometry>) - Static method in class qupath.lib.roi.GeometryTools. Calculate the union of multiple Geometry objects. union(Collection<? extends ROI>) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs from a collection. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatch3D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width, height and z-spacing are the same. UNKNOWN - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI status is unclear, e.g. UNKNOWN - Static variable in class qupath.lib.common.Version. Constant representing any unknown version. UNKNOWN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1058010,extend,extends,1058010,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"rangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public Strin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:4082,plugin,plugins,4082,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugins']
Modifiability,"ransform(). Create a ColorTransform that calculates the maximum of all channels. static ColorTransforms.ColorTransform; createMeanChannelTransform(). Create a ColorTransform that calculates the mean of all channels. static ColorTransforms.ColorTransform; createMinimumChannelTransform(). Create a ColorTransform that calculates the minimum of all channels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorTransforms; public ColorTransforms(). Method Details. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(int channel); Create ColorTransform to extract a channel based on its number (0-based index, although result of ColorTransforms.ColorTransform.getName() is 1-based). Parameters:; channel - ; Returns:. createChannelExtractor; public static ColorTransforms.ColorTransform createChannelExtractor(String channelName); Create ColorTransform to extract a channel based on its name. Parameters:; channelName - ; Returns:. createMeanChannelTransform; public static ColorTransforms.ColorTransform createMeanChannelTransform(); Create a ColorTransform that calculates the mean of all channels. Returns:. createColorDeconvolvedChannel; public static ColorTransforms.ColorTransform createColorDeconvolvedChannel(ColorDeconvolutionStains stains,; int stainNumber); Create a ColorTransform that applies color deconvolution. Parameters:; stains - the stains (this will be 'fixed', and not adapted for each image); stainNumber - number of the stain (1, 2 or 3); Returns:. createMaximumChannelTransform; public static ColorTransforms.ColorTransform createMaximumChannelTransform(); Create a ColorTransform that calculates the maximum of all channels. Returns:. createMinimumChannelTransform; public static ColorTransforms.ColorTransform createMinimumChannelTransform(); Create a ColorTransform that calculates the minimum of all channels. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html:3369,adapt,adapted,3369,javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ColorTransforms.html,1,['adapt'],['adapted']
Modifiability,"raphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2254,inherit,inherited,2254,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['inherit'],['inherited']
Modifiability,"raster containing integer labels. createObjects(Mat, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.opencv.tools.OpenCVTools. Create objects by tracing contours in a labelled image. createObjects(SimpleImage, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from a labelled image. createObjects(ROI, Function<ROI, PathObject>) - Method in class qupath.lib.objects.utils.Tiler. Create a list of PathObject tiles from the input. createObjectsChangedEvent(Object, PathObjectHierarchy, PathObjectHierarchyEvent.HierarchyEventType, Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. createObjectsFromPixelClassifier(ImageServer<BufferedImage>, Map<Integer, PathClass>, ROI, Function<ROI, ? extends PathObject>, double, double, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects based upon an ImageServer that provides classification or probability output. createObjectsFromPredictions(ImageServer<BufferedImage>, PathObjectHierarchy, Collection<PathObject>, Function<ROI, ? extends PathObject>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. createObjectsFromROIs(ImagePlus, Collection<? extends Roi>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. createObjectTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:204494,extend,extends,204494,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"rate a customized density map. static void; findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.Densi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:3107,inherit,inherited,3107,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,1,['inherit'],['inherited']
Modifiability,"rate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:2103,inherit,inherited,2103,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['inherit'],['inherited']
Modifiability,"rate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1525,extend,extends,1525,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['extend'],['extends']
Modifiability,"ration, ObjectMeasurements.ShapeFeatures...) - Static method in class qupath.lib.analysis.features.ObjectMeasurements. Add shape measurements for one object. addSingleImageToProject(Project<BufferedImage>, ImageServer<BufferedImage>, ImageData.ImageType) - Static method in class qupath.lib.gui.commands.ProjectCommands. Add a single image to a project. addSlice(Object, Number) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Add a slice to the pie. addStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Append a new step to the end of the workflow, firing an update event. addSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Append multiple steps to the end of the workflow, firing a single update event. addStringParameter(String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter. addStringParameter(String, String, String, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a String parameter, with help text. addTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Register a TextAppendable that will be accept logging events and be updated on the JavaFX Application thread. addThreshold(double) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addThreshold(double, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value with its display color. addThreshold(ObservableNumberValue) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Add a threshold value. addTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; addTitleParameter(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a title parameter. addTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.objects.PathObjectTools. Create a new reg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:30691,plugin,plugins,30691,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; yFun - function capable of extracting a numeric value for the y location from each object in the collection; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<? extends Number> x,; Collection<? extends Number> y); Create a scatterplot using collections of numeric values. Parameters:; name - ; x - ; y - ; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y); Create a scatterplot using arrays of numeric values. Parameters:; name - ; x - x-values; y - y-values; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; double[] x,; double[] y,; T[] extra); Create a scatt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:8169,extend,extends,8169,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['extend'],['extends']
Modifiability,"rce>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<UriUpdater.SingleUriItem>; getItems(UriUpdater.UriStatus status). Get all items with the specified status, or all items is status is null. Collection<UriUpdater.SingleUriItem>; getMissingItems(). Get all missing items. Map<URI,URI>; getReplacements(). Get a map of all replacements. static String; locateFile(String path,; int searchDepth,; Path... searchPaths). Attempt to update a file using the specified search paths. static URI; locateFile(URI uri,; int searchDepth,; Path... searchPaths). Attempt t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:1463,extend,extends,1463,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['extend'],['extends']
Modifiability,"rd. Returns:. promptToImportObjectsProjectEntry; public static boolean promptToImportObjectsProjectEntry(ImageData<BufferedImage> imageData,; ProjectImageEntry<?> entry); Prompt to import objects from a project entry. Parameters:; imageData - the image to which the objects should be added; entry - the entry containing the objects to add; Returns:; true if objects were added, false otherwise. readObjectsFromClipboard; public static List<PathObject> readObjectsFromClipboard(ImageData<BufferedImage> imageData); throws IOException,; JsonSyntaxException,; JsonParseException; Try to read objects from the system clipboard. Parameters:; imageData - the image to which the objects should be added; Returns:; true a list of objects read from the system clipboard, or empty list if none could be found; Throws:; IOException; JsonSyntaxException; JsonParseException. promptToPasteObjectsFromClipboard; public static boolean promptToPasteObjectsFromClipboard(ImageData<BufferedImage> imageData); Prompt to paste objects from the system clipboard, if possible. Parameters:; imageData - the image to which the objects should be added; Returns:; true if objects were added, false otherwise. promptToImportObjectsFromFile; public static boolean promptToImportObjectsFromFile(ImageData<BufferedImage> imageData,; File file); Prompt to import objects read from a file. Parameters:; imageData - the image to add the objects to; file - the file to read objects from; if null, a chooser will be shown; Returns:; true if objects were added, false otherwise. promptToImportObjects; public static boolean promptToImportObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects); Import a collection of objects to an object hierarchy, prompting to confirm and asking whether to update IDs. Parameters:; hierarchy - the object hierarchy; pathObjects - the new objects to add; Returns:; true if objects were added to the hierarchy, false otherwise (including if the pathobject list is empty). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html:3864,extend,extends,3864,javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/InteractiveObjectImporter.html,1,['extend'],['extends']
Modifiability,"reasByLines(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. splitAllAnnotationAreasByLines(PathObjectHierarchy, double, boolean) - Static method in class qupath.lib.scripting.QP. Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. SplitAnnotationsByLineCommand - Class in qupath.lib.gui.commands.objects. Command to split annotations using lines. SplitAnnotationsByLineCommand() - Constructor for class qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand;  ; SplitAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. SplitAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; splitAreasByBufferedLines(Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. splitAreasByBufferedLines(Collection<? extends PathObject>, Collection<? extends PathObject>, double) - Static method in class qupath.lib.objects.PathObjectTools. Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. splitAreasByLines(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. splitAreasByLines(Collection<? extends PathObject>, Collection<? extends PathObject>) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:988591,plugin,plugins,988591,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"reate a polygon ROI from an array of x and y coordinates. static PolygonROI; createPolygonROI(double x,; double y,; ImagePlane plane). Create an empty, closed polygon ROI consisting of a single point. static PolygonROI; createPolygonROI(List<Point2> points,; ImagePlane plane). Create a closed polygon ROI from a list of points. static ROI; createPolylineROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolylineROI; createPolylineROI(double x,; double y,; ImagePlane plane). Create an empty polyline ROI consisting of a single point. static PolylineROI; createPolylineROI(List<Point2> points,; ImagePlane plane). Create a polyline ROI from a list of points. static ROI; createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create a rectangle ROI defined by its bounding box. static ROI; createRectangleROI(ImageRegion region). Create a rectangle ROI that matches an ImageRegion. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ROIs; public ROIs(). Method Details. createEmptyROI; public static ROI createEmptyROI(); Create an 'empty' ROI with no length or area.; ; The only guarantee is that it will return isEmpty() == true. Returns:. createRectangleROI; public static ROI createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create a rectangle ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createRectangleROI; public static ROI createRectangleROI(ImageRegion region); Create a rectangle ROI that matches an ImageRegion. Parameters:; region - ; Returns:. createEllipseROI; public static ROI createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create an ellipse ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:2912,inherit,inherited,2912,javadoc/docs/qupath/lib/roi/ROIs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html,1,['inherit'],['inherited']
Modifiability,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2099,inherit,inherited,2099,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['inherit'],['inherited']
Modifiability,redicate (QuPath 0.5.0); PathObjectReader (QuPath 0.5.0); PathObjects (QuPath 0.5.0); PathObjectTools (QuPath 0.5.0); PathROIObject (QuPath 0.5.0); PathRootObject (QuPath 0.5.0); PathTileObject (QuPath 0.5.0); TemporaryObject (QuPath 0.5.0); TMACoreObject (QuPath 0.5.0). /plugins; . /objects; ; DilateAnnotationPlugin (QuPath 0.5.0); DilateAnnotationPlugin.LineCap (QuPath 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qup,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:28642,plugin,plugins,28642,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"referred size of the chart. Charts.BarChartBuilder; title(String title). Specify the chart title. Stage; toStage(). Add the chart to a stage, but do not show it. protected void; updateChart(BarChart<String,Number> chart). Method that applies properties of this builder to the chart. Charts.BarChartBuilder; viewer(QuPathViewer viewer). Specify a viewer. Charts.BarChartBuilder; width(double width). Set the preferred width of the chart. Charts.BarChartBuilder; windowTitle(String title). Title to use for the window, if the chart is shown. Charts.BarChartBuilder; xLabel(String label). Specify the x-axis label. Charts.BarChartBuilder; yAxisMax(double upperBound). Set the upper bound for the y-axis. Charts.BarChartBuilder; yAxisMin(double lowerBound). Set the lower bound for the y-axis. Charts.BarChartBuilder; yAxisRange(double lowerBound,; double upperBound). Set the lower and upper bounds for the y-axis. Charts.BarChartBuilder; yLabel(String label). Specify the y-axis label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. xLabel; protected String xLabel. yLabel; protected String yLabel. viewer; protected QuPathViewer viewer. imageData; protected ImageData<?> imageData. title; protected String title. legendVisible; protected boolean legendVisible. legendSide; protected Side legendSide. markerOpacity; protected double markerOpacity. width; protected double width. height; protected double height. Method Details. getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. series; public <T> Charts.BarChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,PathClass> xFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:4643,inherit,inherited,4643,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['inherit'],['inherited']
Modifiability,"rements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:1572,inherit,inherited,1572,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,1,['inherit'],['inherited']
Modifiability,"remove detections from the convex hull of all detections. GeneralTools. Collection of generally useful static methods. GeneratingImageServer<T>. Marker interface to indicate that this ImageServer generates tiles on request. GeometryROI. ROI based on Java Topology Suite Geometry objects. GeometryTools. Convert between QuPath ROI objects and Java Topology Suite Geometry objects. GeometryTools.GeometryConverter. Converter to help switch from a ROI to a Geometry. GeometryTools.GeometryConverter.Builder. Builder to help define how ROIs and Geometry objects should be converted. GitHubProject. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo. Helper class to represent a GitHub repository. GridLines. Simple class used for storing information related to GridLines that may be painted over an image. GridOverlay. An overlay used to show a (counting) grid on top of an image. GroovyAutoCompletor. Auto completion support for Groovy. GroovyCV. Category class for enhanced Groovy scripting with OpenCV. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. GuiTools. Assorted static methods to help with JavaFX and QuPath GUI-related tasks. GuiTools.SnapshotType. Kinds of snapshot image that can be created for QuPath. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. HaralickFeaturesPlugin. Plugin for calculating Haralick texture features, within or around detections or tiles. HelpMenuActions;  ; HierarchyOverlay. An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is hand",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:19578,enhance,enhanced,19578,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['enhance'],['enhanced']
Modifiability,"removeAllData); Remove multiple images from the project, optionally including associated data. Parameters:; entries - ; removeAllData - . syncChanges; void syncChanges(); throws IOException; Save the project. Throws:; IOException. getImageList; List<ProjectImageEntry<T>> getImageList(); Get a list of image entries for the project. Returns:. getName; String getName(); Get the name of the project. Returns:. getCreationTimestamp; long getCreationTimestamp(); Request a timestamp from when the project was created. Returns:. getModificationTimestamp; long getModificationTimestamp(); Request a timestamp from when the project was last synchronized. Returns:; See Also:. syncChanges(). getScripts; default ResourceManager.Manager<String> getScripts(); Get a manager for scripts saved within this project. Returns:; See Also:. getResources(String, Class, String). getObjectClassifiers; default ResourceManager.Manager<ObjectClassifier<T>> getObjectClassifiers(); Get a manager for object classifiers saved within this project. Returns:; See Also:. getResources(String, Class, String). getPixelClassifiers; default ResourceManager.Manager<PixelClassifier> getPixelClassifiers(); Get a manager for pixel classifiers saved within this project. Returns:; See Also:. getResources(String, Class, String). getResources; default <S,; R extends S> ResourceManager.Manager<R> getResources(String location,; Class<S> cls,; String ext); Get a manager for objects of a specified class within this project. Type Parameters:; S - ; Parameters:; location - a location relative to the project where the resources should be stored, e.g. ""classifiers/pixel classifiers"".; Projects may use this location in an implementation-dependent way.; cls - class of the resource to return; ext - extension to use with the resource. This is used for determining the type. Usually it should be ""json"".; Returns:; a ResourceManager.Manager for the specified resource, or null if the project does not support the resource or extension. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:8265,extend,extends,8265,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['extend'],['extends']
Modifiability,"removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageRenderer that controls conversion to RGB. rendererProperty() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageRenderer property used with this overlay. reorderRGB(String) - Method in class qupath.lib.images.servers.TransformedServerBuilder. Rearrange the channel order of an RGB image. repaint() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer is repainted. repaintAllViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Request that all viewers are repainted as soon as possible. repaintEntireImage() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the entire image is repainted, including the thumbnail. repaintEntireImage() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; repaintTimestamp() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:852976,layers,layers,852976,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"rent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; BrightnessContrastHistogramPane();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BooleanProperty; doLogCountsProperty(). Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValueProperty(). The maximum value displayed on the histogram. DoubleProperty; minValueProperty(). The minimum value displayed on the histogram. void; updateHistogram(ImageDisplay imageDisplay,; ChannelDisplayInfo channelSelected). Update the histogram to show the data for the given channel. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:3715,inherit,inherited,3715,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"rently an ImageServer being displayed in this viewer. hasString(String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasSuffix() - Method in class qupath.lib.common.Version. Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. hasUnseenErrors() - Method in class qupath.lib.gui.commands.LogViewerCommand. Boolean binding indicating whether there are any unseen errors. hasUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid upper bound. hasZAndT() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker has Z and T information. hasZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the z-spacing is known in microns. hConcat(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Horizontal concatenation for a Mat. headerText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog header text. height - Variable in class qupath.lib.geom.ImmutableDimension. Height of the ImmutableDimension. height - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; height(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the preferred height of the chart. height(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the preferred height of the chart. height(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the preferred height of the chart. height(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:573974,extend,extends,573974,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"rently use dynamic measurements. putMetadataValue(String, String) - Method in interface qupath.lib.objects.MetadataStore. Store a new metadata value. putMetadataValue(String, String) - Method in class qupath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid. pyramidalizeTiled(ImageServer<BufferedImage>, int, int, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Python. PYTHON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PYTHON_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Pythonic import statements. PythonAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Python. PythonAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.PythonAutoCompletor. Constructor. PythonStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Python syntax. Q. QP - Class in qupath.lib.scripting. Collection of static methods that are useful for scripting. QP() - Constructor for class qupath.lib.scripting.QP;  ; QPEx - Class in qupath.lib.gui.scripting. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:802942,variab,variable,802942,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"rently, only H&E or hematoxylin and DAB are supported.; ; An improved plugin would be desirable to perform the task in a more general way, and without ; requesting the 'magnification' by default (which is less meaningful than resolution/pixel size). Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; CellCountsCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:1927,plugin,plugin,1927,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability,"resPlugin(). Default constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2072,plugin,plugin,2072,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['plugin'],['plugin']
Modifiability,"rescence() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to fluorescence. isGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass represents a built-in intensity class. isH_DAB() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been call",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623353,plugin,plugins,623353,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,resholding; qupath.process.gui.commands.SingleMeasurementClassificationCommand (implements java.lang.Runnable); qupath.lib.gui.panes.SlideLabelView (implements javafx.beans.value.ChangeListener<T>); qupath.lib.images.servers.SparseImageServer.Builder; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager (implements java.lang.AutoCloseable); qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand; qupath.process.gui.commands.SplitProjectTrainingCommand (implements java.lang.Runnable); qupath.lib.color.StainVector (implements java.io.Externalizable); qupath.lib.analysis.stats.StatisticsHelper; qupath.lib.plugins.parameters.StringParameter; qupath.lib.gui.commands.SummaryMeasurementTableCommand; qupath.lib.extension.svg.SvgExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.extension.svg.SvgExtension.SvgActions; qupath.lib.extension.svg.SvgTools; qupath.lib.extension.svg.SvgTools.SvgBuilder; qupath.lib.gui.prefs.SystemMenuBar; qupath.lib.plugins.TaskRunnerUtils; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.opencv.tools.Thinning; qupath.lib.common.ThreadTools; java.lang.Throwable (implements java.io.Serializable). java.lang.Exception. java.lang.RuntimeException. qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException. qupath.imagej.images.writers.TiffWriterIJ; qupath.lib.images.writers.TileExporter; qupath.lib.objects.utils.Tiler; qupath.lib.objects.utils.Tiler.Builder; qupath.lib.images.servers.TileRequest; qupath.lib.common.Timeit; qupath.lib.common.Timeit.Checkpoint; qupath.lib.gui.commands.TMACommands; qupath.lib.gui.tma.TMADataIO; qupath.imagej.detect.dearray.TMADearrayer; qupath.lib.gui.tma.TMAExplorer (implements java.lang.Runnable); qupath.lib.gui.actions.menus.TMAMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.TMAMenuActions.Actions; qupath.lib.gui.actions.menus.TMAMenuActions.Action,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:34939,plugin,plugins,34939,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3035,plugin,plugins,3035,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugins']
Modifiability,"rface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). getCircularStructuringElement(int) - Static method in class qupath.opencv.tools.OpenCVTools. Deprecated.; OpenCVTools.createDisk(int, boolean) gives more reliable shapes. getCitationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:352160,plugin,plugins,352160,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"rfaces:; AutoCloseable, DnnModel. Direct Known Subclasses:; OpenCVDnn. public abstract class AbstractDnnModel<T>; extends Object; implements DnnModel; Wrapper for a deep learning model in a pipeline using OpenCV.; It can encapsulate a custom method needed to convert the input Mat(s) into the appropriate format,; and the output back into one or more Mats.; ; This provides convenience methods to both convert and predict for three common scenarios:; ; Single input, single output; batch size 1; Single or multiple inputs, single or multiple outputs; batch size 1; Single input, single output; batch size > 1. Author:; Pete Bankhead; See Also:. BlobFunction; PredictionFunction. Field Summary. Fields inherited from interface qupath.opencv.dnn.DnnModel; DEFAULT_INPUT_NAME, DEFAULT_OUTPUT_NAME. Constructor Summary; Constructors. Constructor; Description; AbstractDnnModel();  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; List<Mat>; batchPredict(List<? extends Mat> mats). Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. abstract BlobFunction<T>; getBlobFunction(). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:1513,extend,extends,1513,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['extend'],['extends']
Modifiability,"rfaces:; PathTool. public class ExtendedPathTool; extends Object; implements PathTool. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Node>; icon. Property giving the icon that should be used for the tool. ReadOnlyStringProperty; name. Property giving the name of the tool. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; deregisterTool(QuPathViewer viewer). Deregister the tool from the viewer. ObservableList<PathTool>; getAvailableTools();  ; ReadOnlyObjectProperty<Node>; iconProperty(). Property giving the icon that should be used for the tool. ReadOnlyStringProperty; nameProperty(). Property giving the name of the tool. void; registerTool(QuPathViewer viewer). Register the tool on the viewer. ObjectProperty<PathTool>; selectedTool();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.viewer.tools.PathTool; getIcon, getName. Property Details. name; public ReadOnlyStringProperty nameProperty. Specified by:; nameProperty in interface PathTool; Returns:; See Also:. nameProperty(). icon; public ReadOnlyObjectProperty<Node> iconProperty. Specified by:; iconProperty in interface PathTool; Returns:; See Also:. iconProperty(). Method Details. getAvailableTools; public ObservableList<PathTool> getAvailableTools(). selectedTool; public ObjectProperty<PathTool> selectedTool(). registerTool; public void registerTool(QuPathViewer viewer); Description copied from interface: PathTool; Register the tool on the viewer. This typically means adding a mouse listener.; A tool should only be registered on one viewer at a time, and only one tool should ; be registered per viewer. Specified by:; registerTool in interface PathTool; Parameters:; viewer - the viewer for which this tool should be registered. deregisterTool; public void deregisterTool(QuPathViewer vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html:1465,inherit,inherited,1465,javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/ExtendedPathTool.html,1,['inherit'],['inherited']
Modifiability,"rfaces:; Serializable, Comparable<CommandFinderTools.CommandBarDisplay>, Constable. Enclosing class:; CommandFinderTools. public static enum CommandFinderTools.CommandBarDisplay; extends Enum<CommandFinderTools.CommandBarDisplay>; Available modes for displaying the command bar. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALWAYS. Always display. HOVER. Display only when the cursor hovers nearby. NEVER. Never display. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static CommandFinderTools.CommandBarDisplay; valueOf(String name). Returns the enum constant of this class with the specified name. static CommandFinderTools.CommandBarDisplay[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALWAYS; public static final CommandFinderTools.CommandBarDisplay ALWAYS; Always display. NEVER; public static final CommandFinderTools.CommandBarDisplay NEVER; Never display. HOVER; public static final CommandFinderTools.CommandBarDisplay HOVER; Display only when the cursor hovers nearby. Method Details. values; public static CommandFinderTools.CommandBarDisplay[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static CommandFinderTools.CommandBarDisplay valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html:1605,inherit,inherited,1605,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandBarDisplay.html,1,['inherit'],['inherited']
Modifiability,"rializable, Comparable<PathPrefs.ImageTypeSetting>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.ImageTypeSetting; extends Enum<PathPrefs.ImageTypeSetting>; Enum defining how setting the image type should be handled for new images. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AUTO_ESTIMATE. Automatically estimate the image type. NONE. Do not set the image type. PROMPT. Prompt the user to specified the image type. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.ImageTypeSetting; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.ImageTypeSetting[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AUTO_ESTIMATE; public static final PathPrefs.ImageTypeSetting AUTO_ESTIMATE; Automatically estimate the image type. PROMPT; public static final PathPrefs.ImageTypeSetting PROMPT; Prompt the user to specified the image type. NONE; public static final PathPrefs.ImageTypeSetting NONE; Do not set the image type. Method Details. values; public static PathPrefs.ImageTypeSetting[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.ImageTypeSetting valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html:1576,inherit,inherited,1576,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.ImageTypeSetting.html,1,['inherit'],['inherited']
Modifiability,"rializable. public class PathObjectConnections; extends Object; implements Externalizable; Data structure for storing multiple PathObjectConnectionGroups. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObjectConnections(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addGroup(PathObjectConnectionGroup group). Add a new connections group. void; clear(). Clear all existing connections. List<PathObjectConnectionGroup>; getConnectionGroups(). Get an unmodifiable list containing all connections groups. List<PathObject>; getConnections(PathObject pathObject). Get all the connections to a specified PathObject. boolean; isEmpty(). Returns true if the group is empty. void; readExternal(ObjectInput in);  ; boolean; removeGroup(PathObjectConnectionGroup group). Remove a connections group. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PathObjectConnections; public PathObjectConnections(); Default constructor. Method Details. getConnections; public List<PathObject> getConnections(PathObject pathObject); Get all the connections to a specified PathObject.; ; This will iterate through all the groups and return the connections from the first group ; containing this object.; ; If the object may be contained in multiple groups, then the groups will need to be requested ; instead with getConnectionGroups(), and searched elsewhere. Parameters:; pathObject - ; Returns:. getConnectionGroups; public List<PathObjectConnectionGroup> getConnectionGroups(); Get an unmodifiable list containing all connections groups. Returns:. addGroup; public void addGroup(PathObjectConnectionGroup group); Add a new connections group. Parameters:; group - . removeGroup; public boolean removeGroup(PathObjectC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html:1492,inherit,inherited,1492,javadoc/docs/qupath/lib/objects/PathObjectConnections.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectConnections.html,1,['inherit'],['inherited']
Modifiability,"rializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.roi. Class qupath.lib.roi.AreaROI; class AreaROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.EllipseROI; class EllipseROI extends qupath.lib.roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.GeometryROI; class GeometryROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. writeReplace; private Object writeReplace(). Serialized Fields. checkValid; boolean checkValid. geometry; Geometry geometry. Class qupath.lib.roi.LineROI; class LineROI extends qupath.lib.roi.AbstractPathROI imple",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:11000,extend,extends,11000,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"rialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8104,plugin,plugins,8104,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"ridSpacingY - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; gridSpacingYProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Vertical spacing between lines for any counting grid. gridStartXProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Starting x coordinate for any counting grid (usually 0). gridStartYProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Starting y coordinate for any counting grid (usually 0). GROOVY - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Groovy. GROOVY - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; GroovyAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Groovy. GroovyAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.GroovyAutoCompletor. Constructor. GroovyCV - Class in qupath.opencv.tools. Category class for enhanced Groovy scripting with OpenCV. GroovyCV() - Constructor for class qupath.opencv.tools.GroovyCV;  ; GroovyLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of the Groovy programming language in QuPath. GroovyLanguage() - Constructor for class qupath.lib.gui.scripting.languages.GroovyLanguage. Constructor for Groovy Language. GroovyStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Groovy or Java syntax. GsonTools - Class in qupath.lib.io. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools() - Constructor for class qupath.lib.io.GsonTools;  ; GsonTools.SubTypeAdapterFactory<T> - Class in qupath.lib.io. A TypeAdapterFactory that is suitable for handling class hierarchies. gt(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a greater than threshold. gt(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:562661,enhance,enhanced,562661,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['enhance'],['enhanced']
Modifiability,"ring). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:4074,plugin,plugins,4074,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugins']
Modifiability,"ring; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Returns zero - indicating no overlap... protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'fa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:2863,inherit,inherited,2863,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['inherit'],['inherited']
Modifiability,"ringFunction - Interface in qupath.lib.gui.viewer.overlays. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T> - Class in qupath.lib.plugins. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractPlugin() - Constructor for class qupath.lib.plugins.AbstractPlugin;  ; AbstractTaskRunner - Class in qupath.lib.plugins. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTaskRunner() - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner(int) - Constructor for class qupath.lib.plugins.AbstractTaskRunner. Constructor for a PluginRunner that optionally uses a fixed number of threads. AbstractTileableDetectionPlugin<T> - Class in qupath.lib.plugins. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableDetectionPlugin() - Constructor for class qupath.lib.plugins.AbstractTileableDetectionPlugin;  ; AbstractTileableImageServer - Class in qupath.lib.images.servers. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. AbstractTileableImageServer() - Constructor for class qupath.lib.images.servers.AbstractTileableImageServer;  ; accelerator(ObservableValue<KeyCombination>) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Bind the accelerator property of the action to an ObservableValue, bidirectionally if possible. accelerator(KeyCombination) - Method in class qupath.lib.gui.actions.ActionTools.ActionBuilder. Set the accelerator property of the action. acceleratorTextProperty() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:4276,plugin,plugins,4276,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ripting.QP. Find hotspots in a density map. findDirectionalMaxima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a higher value than their neighbors. findDirectionalMinima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a lower value than their neighbors. findHotspots(PathObjectHierarchy, ImageServer<BufferedImage>, int, int, double, double, PathClass, boolean, boolean) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Find hotspots in a density map. findMaxima(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Find maxima within an image. findObjectsOutsideImage(Collection<? extends PathObject>, ImageServer<?>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects with ROIs that are outside the bounds of an image. findObjectsOutsideRegion(Collection<? extends PathObject>, ImageRegion, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects in a collection that are outside a defined region. findObjectsOutsideRegion(Collection<? extends PathObject>, ImageRegion, int, int, int, int, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. findRegionalMaxima(ImageProcessor, float, boolean) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Find regional maxima using morphological reconstruction. findRegionalMaxima(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the regional maxima within a Mat, providing the output as a labeled image. finishTranslation() - Method in class qupath.lib.roi.RoiEditor. Notify the editor that translation should end. fireHierarchyChangedEvent(Object) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:307647,extend,extends,307647,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that are instances of a supported class. Overrides:; getParentObjects in class AbstractDetectionPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:4008,plugin,plugin,4008,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['plugin'],['plugin']
Modifiability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. addWorkflowStep; protected void addWorkflowStep(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Add a workflow step to th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:4882,plugin,plugin,4882,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['plugin'],['plugin']
Modifiability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getParentObjects; protected Collection<PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:4862,plugin,plugin,4862,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,5,['plugin'],['plugin']
Modifiability,"ription copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; protected ObjectDetector<BufferedImage> createDetector(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. Specified by:; createDetector i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:4295,plugin,plugin,4295,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,3,['plugin'],['plugin']
Modifiability,"ription of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2341,inherit,inherited,2341,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['inherit'],['inherited']
Modifiability,"ription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424976,plugin,plugins,424976,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<?",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2478,inherit,inherited,2478,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['inherit'],['inherited']
Modifiability,"ription; DilateAnnotationPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin cou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2076,plugin,plugin,2076,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['plugin'],['plugin']
Modifiability,"ription; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely);",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:1951,inherit,inherited,1951,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['inherit'],['inherited']
Modifiability,"rities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GENERAL; public static final MeasurementList.MeasurementListType GENERAL; A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. DOUBLE; public static final MeasurementList.MeasurementListType DOUBLE; A list backed by an array of doubles. FLOAT; public static final MeasurementList.MeasurementListType FLOAT; A list backed by an array of floats. Method Details. values; public static MeasurementList.MeasurementListType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static MeasurementList.MeasurementListType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1910,inherit,inherited,1910,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,1,['inherit'],['inherited']
Modifiability,"rived from another PathClass.; ; An example would be a 'positive' class derived from a 'Tumor' class, e.g.; getDerivedPathClass(getPathClass(""Tumor""), ""Positive""). Parameters:; baseClass - ; name - ; Returns:. getDerivedPathClass; public static PathClass getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb); Get a PathClass with the specified name, derived from another PathClass.; ; An example would be a 'positive' class derived from a 'Tumor' class, e.g.; getDerivedPathClass(getPathClass(""Tumor""), ""Positive"", getColorRGB(255, 0, 0)); ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned instead of creating a new one.; In this case, the color attribute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96047,extend,extends,96047,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"rivedPathClass(PathClass baseClass,; String name,; Integer rgb); Get a PathClass with the specified name, derived from another PathClass.; ; An example would be a 'positive' class derived from a 'Tumor' class, e.g.; getDerivedPathClass(getPathClass(""Tumor""), ""Positive"", getColorRGB(255, 0, 0)); ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned instead of creating a new one.; In this case, the color attribute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96323,extend,extends,96323,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"rkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3912,plugin,plugin,3912,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugin']
Modifiability,"rkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any infor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:4461,plugin,plugin,4461,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['plugin'],['plugin']
Modifiability,roi.AbstractPathBoundedROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Class qupath.lib.roi.GeometryROI; class GeometryROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. writeReplace; private Object writeReplace(). Serialized Fields. checkValid; boolean checkValid. geometry; Geometry geometry. Class qupath.lib.roi.LineROI; class LineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. x; double x. x2; double x2. y; double y. y2; double y2. Class qupath.lib.roi.PointsROI; class PointsROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. points; List<Point2> points. Class qupath.lib.roi.PolygonROI; class PolygonROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; InvalidObjectException. writeReplace; private Object writeReplace(). Serialized Fields. vertices; qupath.lib.roi.Vertices vertices. Class qupath.lib.roi.PolylineROI; class PolylineROI extends qupath.lib.roi.AbstractPathROI implements Serializable. serialVersionUID:; 1L. Serialization Methods. readObject; private void readObject(ObjectInputStream stream); throws InvalidObjectException. Throws:; Inva,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:12357,extend,extends,12357,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"roject entry for the currently-open image within the current project, ; or null if no project/image is open. getProjectEntryMetadataValue(String) - Static method in class qupath.lib.scripting.QP. Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493429,plugin,plugins,493429,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"rom interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:3771,plugin,plugin,3771,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"rom the ScriptParameters. Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. protected ScriptAutoCompletor; getDefaultAutoCompletor(String languageName). Default method to get a suitable auto completor for the given language name. protected String; getDefaultScriptName();  ; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. String; getImportStatements(Collection<Class<?>> classes). Get the import statements as a String, to add at the beginning of the executed script. String; getStaticImportStatements(Collection<Class<?>> classes). Get the static import statements as a String, to add at the beginning of the executed script. protected String; tryToInterpretMessage(Throwable cause,; int line,; boolean defaultImportsAvailable);  . Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. JAVA_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator JAVA_IMPORTER; Java-like import statements. PYTHON_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator PYTHON_IMPORTER; Pythonic import statements. Constructor Details. DefaultScriptLanguage; public DefaultScriptLanguage(ScriptEngineFactory factory); Constructor for a ExecutableLanguage based on a ScriptEngineFactory.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; factory - . DefaultScriptLanguage; public DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor); Constructor for a ExecutableLanguage.; ; Note: the scriptEngine is not sto",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html:2888,inherit,inherited,2888,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,1,['inherit'],['inherited']
Modifiability,"rom the regular JavaFX behavior of adding a menubar to the; top of every window, e.g. on macOS where the menubar is generally at the top of the screen. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL_WINDOWS. Use the system menubar for all windows. NEVER. Don't use the system menubar for any windows. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SystemMenuBar.SystemMenuBarOption; valueOf(String name). Returns the enum constant of this class with the specified name. static SystemMenuBar.SystemMenuBarOption[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ALL_WINDOWS; public static final SystemMenuBar.SystemMenuBarOption ALL_WINDOWS; Use the system menubar for all windows. NEVER; public static final SystemMenuBar.SystemMenuBarOption NEVER; Don't use the system menubar for any windows. Method Details. values; public static SystemMenuBar.SystemMenuBarOption[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static SystemMenuBar.SystemMenuBarOption valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html:1927,inherit,inherited,1927,javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/SystemMenuBar.SystemMenuBarOption.html,1,['inherit'],['inherited']
Modifiability,"rompt text that may be displayed to a user. Integer; getValue(). Get the current set value (may be null). Integer; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:2255,plugin,plugins,2255,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['plugin'],['plugins']
Modifiability,"roperties within PathPrefs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PreferencePane.AppearancePreferences;  ; static class ; PreferencePane.DrawingPreferences;  ; static class ; PreferencePane.ExtensionPreferences;  ; static class ; PreferencePane.GeneralPreferences;  ; static class ; PreferencePane.InputOutputPreferences;  ; static class ; PreferencePane.LocalePreferences;  ; static class ; PreferencePane.MeasurementPreferences;  ; static class ; PreferencePane.ObjectPreferences;  ; static class ; PreferencePane.ScriptingPreferences;  ; static class ; PreferencePane.UndoRedoPreferences;  ; static class ; PreferencePane.ViewerPreferences;  . Constructor Summary; Constructors. Constructor; Description; PreferencePane();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addChoicePropertyPreference(Property<T> prop,; ObservableList<T> choices,; Class<? extends T> cls,; String name,; String category,; String description,; boolean makeSearchable). Deprecated.; use PropertyItemBuilder instead. void; addColorPropertyPreference(IntegerProperty prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. void; addDirectoryPropertyPreference(Property<String> prop,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. <T> void; addPropertyPreference(Property<T> prop,; Class<? extends T> cls,; String name,; String category,; String description). Deprecated.; use PropertyItemBuilder instead. static <T> org.controlsfx.control.PropertySheet.Item; createPropertySheetItem(Property<T> property,; Class<? extends T> cls). De",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html:1578,extend,extends,1578,javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.html,1,['extend'],['extends']
Modifiability,"rowser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class LogTools. java.lang.Object; qupath.lib.common.LogTools. public class LogTools; extends Object; Helper class for logging. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; logOnce(org.slf4j.Logger logger,; String message). Log a message once at the INFO level. static boolean; logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message). Log a message once at the specified level. static boolean; warnOnce(org.slf4j.Logger logger,; String message). Log a message once at the WARN level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogTools; public LogTools(). Method Details. logOnce; public static boolean logOnce(org.slf4j.Logger logger,; org.slf4j.event.Level level,; String message); Log a message once at the specified level.; ; This is intended primarily to give a way to warn the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; level - ; message - ; Returns:; true if the message was logged, false otherwise (i.e. it has already been logged). logOnce; public static boolean logOnce(org.slf4j.Logger logger,; String message); Log a message once at the INFO level.; ; This is intended primarily to give a way to notify the user if methods are deprecated, ; but avoid emitting large numbers of identical messages if the method is called many times. Parameters:; logger - ; message - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html:1051,inherit,inherited,1051,javadoc/docs/qupath/lib/common/LogTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/LogTools.html,1,['inherit'],['inherited']
Modifiability,"rred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedCellMembraneDetection; public WatershedCellMembraneDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:3154,plugin,plugins,3154,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugins']
Modifiability,"rred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. WatershedNucleiCV; public WatershedNucleiCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line descrip",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html:3020,plugin,plugins,3020,javadoc/docs/qupath/opencv/WatershedNucleiCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/WatershedNucleiCV.html,1,['plugin'],['plugins']
Modifiability,"rredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. static void; setDebugMode(boolean debug). Set whether to use debug mode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Field Details. parametersInitialized; protected boolean parametersInitialized. Constructor Details. WatershedCellDetection; public WatershedCellDetection(). Method Details. setDebugMode; public static void setDebugMode(boolean debug); Set whether to use debug mode. If this is on, images will be shown during processing ; to visualize how the algorithm is working at each stage. Parameters:; debug - ; See Also:. getDebugMode(). getDebugMode; public static boolean getDebugMode(); Get whether debug mode is on or off. Returns:; See Also:. setDebugMode(boolean). parseArgument; protected boolean parseArgument(ImageData<BufferedImage> ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html:3282,inherit,inherited,3282,javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellDetection.html,1,['inherit'],['inherited']
Modifiability,"rrentChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the currently-selected channel. currentChannelVisible() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Read-only property indicating whether the currently-selected channel is visible,; i.e. currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current selection. cut() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; cutAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; CYAN - Static variable in class qupath.lib.common.ColorTools. Packed int representing cyan. CYTOPLASM - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Full cell region, with nucleus removed. D. DAB - Enum constant in enum class qupath.lib.color.StainVector.DefaultStains. DAB. DAB - Static variable in class qupath.lib.color.ColorDeconvolutionStains. Default name for DAB stain. DAB_H_DAB - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains. DAB_H_DAB_8_bit - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. DAB after color deconvolution with default H-DAB stains and conversion to 8-bit. darkenColor(Color) - Static method in class qupath.lib.color.ColorToolsAwt. Get a (slightly) darker version of the specified color. data(Map<?, ? extends Number>) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify data for the pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:239275,variab,variable,239275,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"rresponding to the region of the image currently visible in this viewer. getDisplayMaxValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the last color in the color mapper. getDisplayMinValue() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the measurement value that maps to the first color in the color mapper. getDisplayMode() - Method in class qupath.lib.gui.charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:385206,plugin,plugins,385206,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,rs.JpegWriter;  ; getName() - Method in class qupath.lib.images.writers.ome.OMETiffWriter;  ; getName() - Method in class qupath.lib.images.writers.PngWriter;  ; getName() - Method in interface qupath.lib.measurements.Measurement. Get the name of the measurement. getName() - Method in class qupath.lib.objects.classes.PathClass. Get the name of this classification. getName() - Method in class qupath.lib.objects.PathObject. Request the stored object name. getName() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getName() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getName() - Method in interface qupath.lib.plugins.PathPlugin. Get the name of the plugin for display. getName() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getName() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getName() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get the name of the workflow step. getName() - Method in interface qupath.lib.projects.Project. Get the name of the project. getName() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the name of this language. getName() - Method in class qupath.opencv.CellCountsCV;  ; getName() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getName() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:453317,plugin,plugins,453317,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"rs.RenderedImageServer.Builder. Create a rendered image server for the specified ImageData;. Builder(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.servers.LabeledImageServer.Builder. Create a Builder for a LabeledImageServer for the specified ImageData. Builder(ImageServer<BufferedImage>) - Constructor for class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Constructor. Builder(ImageServerMetadata) - Constructor for class qupath.lib.images.servers.ImageServerMetadata.Builder. Builder for a new ImageServerMetadata object that takes an existing metadata object as a starting point, ; but allows individual properties to be overridden. Builder(PixelCalibration) - Constructor for class qupath.lib.images.servers.PixelCalibration.Builder. Create a new builder, initialized values of an existing PixelCalibration. buildFilePath(String, String...) - Static method in class qupath.lib.scripting.QP. Build a file path from multiple components. buildImageDataOp(Collection<? extends ColorTransforms.ColorTransform>) - Static method in class qupath.opencv.ops.ImageOps. Create an ImageDataOp, optionally using a specified collection of input channels. buildImageDataOp(ColorTransforms.ColorTransform...) - Static method in class qupath.opencv.ops.ImageOps. Create an ImageDataOp, optionally using a specified array of input channels. BuildInfo - Class in qupath.lib.gui. Basic version information about the current QuPath build. buildModel() - Method in class qupath.opencv.dnn.OpenCVDnn. Build a model. buildModel(DnnModelParams) - Method in interface qupath.opencv.dnn.DnnModelBuilder. Build a DnnModel if possible, or return null otherwise. buildModel(DnnModelParams) - Static method in class qupath.opencv.dnn.DnnModels. Build a DnnModel from the given parameters. buildModel(DnnModelParams) - Method in class qupath.opencv.dnn.OpenCVDnnModelBuilder;  ; buildModel(OpenCVDnn.ModelType) - Method in class qupath.opencv.dnn.OpenCVDnn. Build a model, specifying the OpenCV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:77957,extend,extends,77957,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"rs:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:5414,extend,extends,5414,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"rsionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9467,extend,extends,9467,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"rst resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:5949,extend,extends,5949,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['extend'],['extends']
Modifiability,"rtInteractive; public static void makeChartInteractive(Chart chart,; NumberAxis xAxis,; NumberAxis yAxis); Make it possible to select chart regions to zoom in, and scroll to navigate around it.; ; Also double-click to stop zooming. Parameters:; chart - ; xAxis - ; yAxis - . addChartExportMenu; public static void addChartExportMenu(XYChart<Number,Number> chart,; ContextMenu menu); Add a menu item to a context menu for displaying a chart for export. Parameters:; chart - ; menu - . setLineChartLegendLines; public static void setLineChartLegendLines(Chart chart,; double length); Charts tend to show their legends with circular/square markers... which isn't much use ; when line strokes distinguish between different Series.; ; This method addresses this by setting the graphics for legend labels to be lines with the appropriate strokes. Parameters:; chart - ; length - . expandChartClip; public static void expandChartClip(Chart chart,; double pad); Expand the clip region for a chart.; ; This helps to avoid clipping off markers at the chart boundaries. Parameters:; chart - ; pad - The amount by which to expand the clip rectangle in each direction; if < 0, the clip will be completely removed. setPieChartData; public static <T> void setPieChartData(PieChart chart,; Map<T,? extends Number> counts,; Function<T,String> stringFun,; Function<T,Color> colorFun,; boolean convertToPercentages,; boolean includeTooltips); Set pie chart data from a count map. Type Parameters:; T - the type of the data being counted; Parameters:; chart - the pie chart to update; counts - mapping between items and their counts; stringFun - function to extract a string from each item (may be null to use default toString() method); colorFun - function to extract a color from each item (may be null to use default colors); convertToPercentages - if true, convert counts to percentages; if false, use original values; includeTooltips - if true, install tooltips for each 'slice' to display the numeric information. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html:3463,extend,extends,3463,javadoc/docs/qupath/lib/gui/charts/ChartTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartTools.html,1,['extend'],['extends']
Modifiability,"rtPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewConsole();  ; protected ScriptEditorControl<? extends Region>; getNewEditor();  . Methods inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; addNewScript, currentLanguageProperty, currentSyntaxProperty, getClipboardText, getCurrentConsoleControl, getCurrentEditorControl, getCurrentLanguage, getCurrentScriptTab, getCurrentSyntax, getCurrentText, getSelectedText, getStage, pasteFromClipboard, promptToSetFontSize, scriptRunning, sendLogToConsoleProperty, showEditor, showScript, showScript, supportsFile. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RichScriptEditor; public RichScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getNewEditor; protected ScriptEditorControl<? extends Region> getNewEditor(). Overrides:; getNewEditor in class DefaultScriptEditor. applyCompletion; protected void applyCompletion(EditableText control,; AutoCompletions.Completion completion); Insert the text from the completion to the editable text. Parameters:; control - ; completion - . getNewConsole; protected ScriptEditorControl<? extends Region> getNewConsole(). Overrides:; getNewConsole in class DefaultScriptEditor. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html:2539,inherit,inherited,2539,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,3,"['extend', 'inherit']","['extends', 'inherited']"
Modifiability,"rty(). setParallelism(int) - Static method in class qupath.lib.common.ThreadTools. Set the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter by key, to determine if it can be edited. setParameterEnabled(Parameter<?>, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter, to determine if it can be edited. setPathClass(PathClass) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, without specifying any classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, specifying a classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathROIObject;  ; setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathRootObject;  ; setPathClasses(Collection<? extends PathClass>) - Method in interface qupath.lib.projects.Project. Update the available PathClasses. setPathClassHidden(PathClass, boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Request that objects with a particular PathClass not be displayed. setPathMemoization(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the directory where memoization files should be written. setPathObject(PathObject) - Method in class qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Set the PathObject to display (may be null). setPenManager(QuPathPenManager.PenInputManager) - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Set the PenInputManager. setPieChartData(PieChart, Map<T, ? extends Number>, Function<T, String>, Function<T, Color>, boolean, boolean) - Static method in class qupath.lib.gui.charts.ChartTools. Set pie chart data from a count map. setPixelClassificationRegionFilter(RegionFilter) - Method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:939943,extend,extends,939943,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"rty. removePropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Remove a property change listener. removeRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Try to remove the row containing the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedImageServer - Class in qupath.lib.gui.images.servers. An ImageServer that can display a rendered image, with optional overlays. RenderedImageServer.Builder - Class in qupath.lib.gui.images.servers. Builder to create an ImageServer to display rendered images, with optional overlay layers. renderer(ImageRenderer) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:852004,plugin,plugins,852004,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"rty<ChannelDisplayInfo>; currentChannelProperty(). Get the currently-selected channel. ReadOnlyBooleanProperty; currentChannelVisible(). Read-only property indicating whether the currently-selected channel is visible,; i.e. BooleanProperty; disableToggleMenuItemsProperty(). Property to disable options to toggle the visibility of channels. MultipleSelectionModel<ChannelDisplayInfo>; getSelectionModel(). Get the selection model for the channels. ObjectProperty<ImageDisplay>; imageDisplayProperty(). Property for the image display that should be shown and managed by this pane. boolean; isEmpty(). Query if the table is empty, i.e. void; setHideChannel(ChannelDisplayInfo channel). Request that the specified channel is hidden. void; setShowChannel(ChannelDisplayInfo channel). Request that the specified channel is shown. void; toggleShowHideChannel(ChannelDisplayInfo channel). Toggle the visibility of the specified channel. void; updateTable(). Ensure the table is up-to-date. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:4408,inherit,inherited,4408,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"rver for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:2057,layers,layers,2057,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['layers'],['layers']
Modifiability,"rver,; ImageRegion region). Create an ImageServer that represents a cropped region of another (larger) server. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageRegion; getCropRegion(). Get the region being cropped, in terms of the bounding box within the base ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:2044,inherit,inherited,2044,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['inherit'],['inherited']
Modifiability,"rver<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static ImageDataServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData,; ImageDataOp dataOp,; PixelCalibration resolution,; int tileWidth,; int tileHeight). Build an ImageServer that generates pixels on demand from an ImageData by applying an ImageDataOp. static Mat; padAndApply(ImageOp op,; Mat mat). Apply an op after adding symmetric (reflection) padding. static Mat; padAndApply(ImageOp op,; Mat mat,; int padType). Apply an op after adding specified padding. static void; registerDataOp(Class<? extends ImageDataOp> cls,; String label). Register an ImageDataOp class for JSON serialization/deserialization. static void; registerOp(Class<? extends ImageOp> cls,; String label). Register an ImageOp class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageOps; public ImageOps(). Method Details. registerOp; public static void registerOp(Class<? extends ImageOp> cls,; String label); Register an ImageOp class for JSON serialization/deserialization.; ; Labels should typically be all lowercase and begin with ""op."" and include ""ext"" if the op is added via an extension.; ; For example, an ""op.threshold.ext.triangle"" would be a suitable label for an op added via an extension to apply a threshold ; using the triangle method. Parameters:; cls - the op to register; this must be compatible with JSON serialization.; label - an identifying label; that this must be unique. If it does not start with ""op."" a warning will be logged. registerDataOp; public static void registerDataOp(Class<? extends ImageDataOp> cls,; String label); Register an ImageDataOp class for JSON serialization/deserialization.; ; Labels",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html:2791,inherit,inherited,2791,javadoc/docs/qupath/opencv/ops/ImageOps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.html,2,['inherit'],['inherited']
Modifiability,"ry; Required Element Summary; Optional Element Summary. Enum Constant Details; Field Details; Property Details; Constructor Details; Method Details; Element Details. Note: Annotation interfaces have required and optional elements, but not methods. Only enum classes have enum constants. The components of a record class are displayed as part of the declaration of the record class. Properties are a feature of JavaFX.; The summary entries are alphabetical, while the detailed descriptions are in the order they appear in the source code. This preserves the logical groupings established by the programmer. Other Files; Packages and modules may contain pages with additional information related to the declarations nearby. Tree (Class Hierarchy); There is a Class Hierarchy page for all packages, plus a hierarchy for each package. Each hierarchy page contains a list of classes and a list of interfaces. Classes are organized by inheritance structure starting with java.lang.Object. Interfaces do not inherit from java.lang.Object. When viewing the Overview page, clicking on TREE displays the hierarchy for all packages.; When viewing a particular package, class or interface page, clicking on TREE displays the hierarchy for only that package. Deprecated API; The Deprecated API page lists all of the API that have been deprecated. A deprecated API is not recommended for use, generally due to shortcomings, and a replacement API is usually given. Deprecated APIs may be removed in future implementations. Constant Field Values; The Constant Field Values page lists the static final fields and their values. Serialized Form; Each serializable or externalizable class has a description of its serialization fields and methods. This information is of interest to those who implement rather than use the API. While there is no link in the navigation bar, you can get to this information by going to any serialized class and clicking ""Serialized Form"" in the ""See Also"" section of the class description.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/help-doc.html:3428,inherit,inherit,3428,javadoc/docs/help-doc.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/help-doc.html,1,['inherit'],['inherit']
Modifiability,"s (somewhat) for hematoxylin and DAB staining.; If membrane quantification is not required, WatershedCellDetection is more robust and versatile. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WatershedCellMembraneDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:2018,plugin,plugin,2018,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['plugin'],['plugin']
Modifiability,"s AbstractDetectionPlugin<BufferedImage>; Simple command to detect tumor regions stained with cytokeratin. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any infor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:1742,plugin,plugin,1742,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugin']
Modifiability,"s Object; implements Serializable; Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions.; ; It may be decomposed into one or more polygons (vertices), in which case the sign of the area is important ; in indicating whether the region should be considered 'positive' or a hole.; ; The underlying idea is based on java.awt.Area, but implemented so as to avoid a dependency on AWT.; ; However, because this implementation is relatively simple, it doesn't do the complicated checking and ; computations of AWT Areas - and so ought not be used directly. Rather, AWTAreaROI is strongly to be preferred.; ; The real usefulness of this class is in enabling Serialization of all ROIs to avoid a dependency on AWT,; since potentially a deserialized version of this could then be used to create different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:1477,inherit,inherited,1477,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['inherit'],['inherited']
Modifiability,"s Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ALL. All log messages. DEBUG. Debug logging (a lot of messages). ERROR. Error logging (only if something goes recognizably wrong). INFO. Info logging (default). OFF. Turn off logging. TRACE. Trace logging (an awful lot of messages). WARN. Warn logging (only if something is moderately important). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogManager.LogLevel; valueOf(String name). Returns the enum constant of this class with the specified name. static LogManager.LogLevel[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. TRACE; public static final LogManager.LogLevel TRACE; Trace logging (an awful lot of messages). DEBUG; public static final LogManager.LogLevel DEBUG; Debug logging (a lot of messages). INFO; public static final LogManager.LogLevel INFO; Info logging (default). WARN; public static final LogManager.LogLevel WARN; Warn logging (only if something is moderately important). ERROR; public static final LogManager.LogLevel ERROR; Error logging (only if something goes recognizably wrong). ALL; public static final LogManager.LogLevel ALL; All log messages. OFF; public static final LogManager.LogLevel OFF; Turn off logging. Method Details. values; public static LogManager.LogLevel[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html:1746,inherit,inherited,1746,javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/logging/LogManager.LogLevel.html,1,['inherit'],['inherited']
Modifiability,"s a result of this call, false otherwise. resolveHierarchy; public void resolveHierarchy(); Attempt to resolve the parent-child relationships between all objects within the hierarchy. removeObject; public boolean removeObject(PathObject pathObject,; boolean keepChildren); Remove a single object from the hierarchy, firing a remove event. Parameters:; pathObject - the object to remove; keepChildren - if true, retain all children and descendants of the object being removed; if false, remove these also; Returns:. removeObjectWithoutUpdate; public boolean removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren); Remove a single object from the hierarchy, without firing a remove event. Parameters:; pathObject - the object to remove; keepChildren - if true, retain all children and descendants of the object being removed; if false, remove these also; Returns:. removeObjects; public void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove a collection of objects, firing a single 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. if any of the objects really were found within the hierarchy) & removed. Parameters:; pathObjects - the objects to remove; keepChildren - if true, retain children and descendants of the objects being removed. addObject; public boolean addObject(PathObject pathObject); Add an object to the hierarchy, firing an event. Parameters:; pathObject - ; Returns:. addObject; public boolean addObject(PathObject pathObject,; boolean fireUpdate); Add an object to the hierarchy, optionally firing an event. Parameters:; pathObject - ; fireUpdate - ; Returns:; Since:; v0.4.0; replaces addPathObjectWithoutUpdate(PathObject). addPathObject; @Deprecated; public boolean addPathObject(PathObject pathObject); Deprecated.; since v0.4.0; use addObject(PathObject) instead (for naming consistency). Legacy method to add an object to the hierarchy, firing an event. Parameters:; pathObject - ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:12950,extend,extends,12950,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability,"s accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing them with a single new annotation. static void; pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane). Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. static void; promptToAddShapeFeatures(QuPathGUI qupath). Prompt to add shape features for selected objects. static boolean; promptToCreateProject(QuPathGUI qupath). Prompt the user to select an empty directory, and use this to create a new project and set it as active. static void; promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls). Prompt to delete objects of a specified type, or all objects. static boolean; promptToEditClass(PathClass pathClass). Prompt to edit the name/color of a class. static void; promptToEstimateStainVectors(ImageData<BufferedImage> imageData). Prompt to estimate stain vectors for the specified image, using any current region of interest. static void; promptToExportImageRegion(QuPathViewer viewer,; boolean renderedImage). Prompt to export the current image region selected in the viewer. static boolean; promptToOpenProject(QuPathGUI qupath). Prompt the user to open an existing project and set it as active. static boolean; promptToResetPreferences(). Reset QuPath's preferences, after confirming with the user. static void; promptToResolveHierarchy(ImageData<?> imageData). Resolve parent-child relationships within the object hierarchy. static boolean; promptToSaveImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData,; boolean overwriteExi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:5085,extend,extends,5085,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['extend'],['extends']
Modifiability,"s around the properties in PathPrefs. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; GridLines();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getSpaceX(). Horizontal spacing between lines for any counting grid. double; getSpaceY(). Vertical spacing between lines for any counting grid. double; getStartX(). Starting x coordinate for any counting grid (usually 0). double; getStartY(). Starting y coordinate for any counting grid (usually 0). void; setSpaceX(double spaceX). Set the horizontal spacing between lines for any counting grid. void; setSpaceY(double spaceY). Set the vertical spacing between lines for any counting grid. void; setUseMicrons(boolean useMicrons). Specify whether to use calibrated units when calculating coordinates for any counting grid. boolean; useMicrons(). Query whether to use calibrated units when calculating coordinates for any counting grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridLines; public GridLines(). Method Details. getStartX; public double getStartX(); Starting x coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartXProperty(). getStartY; public double getStartY(); Starting y coordinate for any counting grid (usually 0). Returns:; See Also:. PathPrefs.gridStartYProperty(). getSpaceX; public double getSpaceX(); Horizontal spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingXProperty(). getSpaceY; public double getSpaceY(); Vertical spacing between lines for any counting grid. Returns:; See Also:. PathPrefs.gridSpacingYProperty(). setSpaceX; public void setSpaceX(double spaceX); Set the horizontal spacing between lines for any counting grid. Parameters:; spaceX - ; See Also:. PathPrefs.gridSpacingXProperty(). setSpaceY; public void setSpaceY(dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html:1587,inherit,inherited,1587,javadoc/docs/qupath/lib/gui/viewer/GridLines.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/GridLines.html,1,['inherit'],['inherited']
Modifiability,"s as a stack). quickShowImage(String, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of similar ImageProcessors as a stack). QUIT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; qupath - package qupath. Package containing the main QuPath launcher. QuPath - Class in qupath. Main QuPath launcher. QuPath() - Constructor for class qupath.QuPath;  ; QUPATH_AND_EXTENSIONS - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath and extensions on GitHub. QUPATH_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for QuPath updates only. QuPath_Send_Overlay_to_QuPath - Class in qupathj. ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath. QuPath_Send_Overlay_to_QuPath() - Constructor for class qupathj.QuPath_Send_Overlay_to_QuPath;  ; QuPath_Send_ROI_to_QuPath - Class in qupathj. ImageJ plugin for sending back the active ROI from ImageJ to QuPath. QuPath_Send_ROI_to_QuPath() - Constructor for class qupathj.QuPath_Send_ROI_to_QuPath;  ; QUPATH_STARTUP - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; qupath.ext.openslide - package qupath.ext.openslide;  ; qupath.imagej.detect.cells - package qupath.imagej.detect.cells. Classes to enable cell detection, implemented with the help of ImageJ as an image processing library. qupath.imagej.detect.dearray - package qupath.imagej.detect.dearray. Classes to help with Tissue Microarray dearraying. qupath.imagej.detect.tissue - package qupath.imagej.detect.tissue. Classes to enable tissue detection by thresholding. qupath.imagej.gui - package qupath.imagej.gui. User interface commands and extensions linking ImageJ and QuPath. qupath.imagej.images.servers - package qupath.imagej.images.servers. ImageServer implementation using ImageJ as the image reading library. qupath.imagej.images.writers - package qupath.imagej.images.writers. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:805146,plugin,plugin,805146,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"s disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.images.servers; Enum Class ImageServerMetadata.ChannelType. java.lang.Object; java.lang.Enum<ImageServerMetadata.ChannelType>; qupath.lib.images.servers.ImageServerMetadata.ChannelType. All Implemented Interfaces:; Serializable, Comparable<ImageServerMetadata.ChannelType>, Constable. Enclosing class:; ImageServerMetadata. public static enum ImageServerMetadata.ChannelType; extends Enum<ImageServerMetadata.ChannelType>; Enum representing possible channel (band) types for an image.; The purpose of this is to support images where channels have different interpretations, ; such as probabilities or classifications. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Each channel represents a classification, such as in a labelled image. DEFAULT. Default channel interpretation. DENSITY. Each channel represents a density value, such as in a density map (e.g. FEATURE. Each channel represents a feature for a pixel classifier. MULTICLASS_PROBABILITY. Each channel represents a probability value, where each pixel is potentially part of multiple classes. PROBABILITY. Each channel represents a probability value, where it is assumed that there is only one true class per pixel. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ImageServerMetadata.ChannelType; valueOf(String name). Returns the enum constant of this class with the specified name. static ImageServerMetadata.ChannelType[]; values(). Returns an array co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html:1063,inherit,inherited,1063,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ChannelType.html,1,['inherit'],['inherited']
Modifiability,"s disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Interface MultiscaleFeatures.Hessian. All Superinterfaces:; AutoCloseable. All Known Implementing Classes:; MultiscaleFeatures.Hessian2D, MultiscaleFeatures.Hessian3D. Enclosing class:; MultiscaleFeatures. public static interface MultiscaleFeatures.Hessian; extends AutoCloseable; Helper class for storing and computing pixel features from Hessian matrices. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getLaplacian; Mat getLaplacian(); Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Returns:. getDeterminant; Mat getDeterminant(); Get the determinant for each pixel. Returns:. getEigenvalues; List<Mat> getEigenvalues(boolean sortByAbs); Get the eigenvalues, ranked from highest to lowest. Parameters:; sortByAbs - if true, return eigenvalues sorted by absolute value; otherwise return sorted by value; Returns:. getEigenvectors; List<Mat> getEigenvectors(boolean sortByAbs); Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html:1220,inherit,inherited,1220,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian.html,2,['inherit'],['inherited']
Modifiability,"s for which Bio-Formats should always be used. getUsefulValue(PathObject, double) - Method in class qupath.lib.gui.tools.MeasurementMapper;  ; getUserForumUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to the main QuPath user forum. getUserPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the user path where additional files may be stored. getUserPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). getValue() - Method in interface qupath.lib.measurements.Measurement. Get the numeric value of the measurement. getValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value (may be null). getValue() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value stored internally for this pixel. getValue(int, int) - Method in class qupath.imagej.tools.PixelImageIJ;  ; getValue(int, int) - Method in interface qupath.lib.analysis.images.SimpleImage. Get the value of a single pixel as a float. getValue(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValue(BufferedImage, int, int) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:546869,plugin,plugins,546869,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:1746,extend,extends,1746,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['extend'],['extends']
Modifiability,"s into blobs (tensors) for use with a deep learning framework. blue(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit blue value from a packed RGB value. Blue - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel only. BLUE - Static variable in class qupath.lib.common.ColorTools. Packed int representing blue. BLUE - Static variable in class qupath.lib.images.servers.ImageChannel. Default blue channel for RGB images. Blue_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue chromaticity value, blue / max(1, red + green + blue). Blue_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Blue channel optical densities. blueChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract blue chromaticity value from a packed RGB pixel, blue / max(1, red + green + blue). BooleanParameter - Class in qupath.lib.plugins.parameters. Parameter that can take on true of false value - or null. BOTTOM_CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOUNDARIES_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell boundaries. boundaryDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI boundaries within a specified distance. BoundaryStrategy - Class in qupath.process.gui.commands.ml. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BRIGHTFIELD_H_DAB - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_DAB - Static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:60586,plugin,plugins,60586,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype,; String label). Register a subtype using a custom label. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public <R> TypeAdapter<R> create(Gson gson,; TypeToken<R> type). Specified by:; create in interface TypeAdapterFactory. registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype,; String label); Register a subtype using a custom label.; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; label - the label used to identify objects of this subtype; this must be unique; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerAlias; public GsonTools.SubTypeAdapterFactory<T> registerAlias(Class<? extends T> subtype,; String alias); Register an alias label for a specified subtype.; This can be used during deserialization for backwards compatibility, but will not be used ; for serializing new objects. Parameters:; subtype - the subtype to register; alias - the alias used as an alternative label to identify objects of this subtype; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). registerSubtype; public GsonTools.SubTypeAdapterFactory<T> registerSubtype(Class<? extends T> subtype); Register a subtype using the default label (the simple name of the class).; This allows objects to serialized to JSON and deserialized while retaining the same class. Parameters:; subtype - the subtype to register; Returns:; this GsonTools.SubTypeAdapterFactory; See Also:. registerSubtype(Class, String). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:2958,extend,extends,2958,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,2,['extend'],['extends']
Modifiability,"s of the bounding box within the base ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. CroppedImageServer; public CroppedImageServer(ImageServer<BufferedImage> server,; ImageRegion region); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class Abstrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:2629,inherit,inherited,2629,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['inherit'],['inherited']
Modifiability,"s parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects.hierarchy.DefaultTMAGrid; class DefaultTMAGrid extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. cores; List<TMACoreObject> cores. gridHeight; int gridHeight. gridWidth; int gridWidth. Class qupath.lib.objects.hierarchy.PathObjectHierarchy; class PathObjectHierarchy extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class Numeric",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:7914,plugin,plugins,7914,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"s qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:476175,plugin,plugins,476175,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,s qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.CellCountsCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDefaultParameterList(ImageData<BufferedImage>) - Method in class qupath.opencv.WatershedNucleiCV;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterLi,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:372158,plugin,plugins,372158,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s qupath.lib.color.ColorDeconvMatrix3x3. Calculate the determinant of the matrix. df - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; df - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; Dialogs - Class in qupath.lib.gui.dialogs. Deprecated.; since v0.5.0. Dialogs() - Constructor for class qupath.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:259614,plugin,plugins,259614,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; annotationStrokeThicknessProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred stroke thickness to use when drawing annotation ROIs. ANY_ANNOTATIONS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any annotations. ANY_ANNOTATIONS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any annotations. ANY_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Ignore classification (accept all objects). ANY_OBJECTS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the ROIs of any objects. ANY_OBJECTS_BOUNDS - Enum constant in enum class qupath.lib.gui.viewer.RegionFilter.StandardRegionFilters. Regions overlapping the bounding box of any objects. ANY_POSITIVE_CLASS - Static variable in class qupath.process.gui.commands.density.DensityMapUI. Accept any positive classification, including 1+, 2+, 3+. AppearancePreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; appendFrame(ViewRecordingFrame) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Append frame to the collection of frames. appendOps(ImageOp...) - Method in interface qupath.opencv.ops.ImageDataOp. Append one or more additional ImageOps sequentially. appendText(String) - Method in interface qupath.lib.gui.logging.TextAppendable. Append the specified text to the appendable. appendText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Append the specified text. appendText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; appendText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; apply() - Method in class qupath.lib.objects.classes.Reclassifier. Apply the stored classi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:40379,variab,variable,40379,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"s qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Java properties files. PROPERTIES - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PropertiesLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of properties and config files in QuPath. PropertiesLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PropertiesLanguage. Constructor for a Java properties as a script editor language. PropertiesStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PROPERTY_NAME_BACKGROUND_COLOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_HEIGHT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_WIDTH - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_BOUNDS_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_COMMENT - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_X - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_MPP_Y - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_OBJECTIVE_POWER - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_QUICKHASH1 - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; PROPERTY_NAME_VENDOR - Static variable in class qupath.lib.images.servers.openslide.jna.OpenSlide;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; propertyChange(PropertyChangeEvent) - Method in class qupath.lib.gui.panes.SelectedMeasurement",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:799018,variab,variable,799018,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"s qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, using a map for arguments. runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.gui.scripting.QPEx;  ; runPlugin(String, ImageData<?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData. runPlugin(String, ImageData<?>, Map<String, ?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, using a map for arguments. runPlugin(Map<String, ?>, String) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the current ImageData, with Groovy keyword argument support. runPlugin(Map<String, ?>, String, ImageData<?>) - Static method in class qupath.lib.scripting.QP. Run the specified plugin on the specified ImageData, with Groovy keyword argument support. runPlugin(PathPlugin<BufferedImage>, String, boolean) - Method in class qupath.lib.gui.QuPathGUI. Run a plugin, interactively (i.e. runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; runPlugin(TaskRunner, ImageData<BufferedImage>, String) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; runPlugin(TaskRunner, ImageData<T>, String) - Method in interface qupath.lib.plugins.PathPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for ru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:877560,plugin,plugin,877560,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"s server. boolean; isEmptyRegion(RegionRequest request). Returns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:3058,inherit,inherited,3058,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['inherit'],['inherited']
Modifiability,"s server. boolean; isEmptyRegion(RegionRequest request). Returns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:3662,inherit,inherited,3662,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['inherit'],['inherited']
Modifiability,"s should be transformed before being; shown in the histogram. ObjectProperty<HistogramChart.DisplayMode>; displayMode. Property to control how the histogram is displayed, either using areas or bars. BooleanProperty; hideIfEmpty. Property controlling whether the chart should be hidden if there is no data. Properties inherited from class javafx.scene.chart.AreaChart; createSymbols. Properties inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisible, alternativeRowFillVisible, data, horizontalGridLinesVisible, horizontalZeroLineVisible, verticalGridLinesVisible, verticalZeroLineVisible. Properties inherited from class javafx.scene.chart.Chart; animated, legend, legendSide, legendVisible, title, titleSide. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:2560,inherit,inherited,2560,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"s to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComparator;  ; compare(ROI, ROI) - Method in class qupath.lib.roi.DefaultROIComparator;  ; compareTo(KaplanMeierData.KaplanMeierEvent) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent;  ; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePlane) - Method in class qupath.lib.regions.ImagePlane. Compare with another ImagePlane, in the order t, z, c. completionCodeCombination - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; componentContains(double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:127157,variab,variable,127157,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"s to the display, if they are compatible. applyTiled(Function<Mat, Mat>, Mat, int, int, Padding, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a function to a Mat that strictly requires a specific input size. applyToChannels(Mat, Consumer<Mat>) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a method that modifies a Mat in-place to all ; channels of the Mat, merging the result and storing the result in-place. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.display.ImageDisplay. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage) - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; applyTransforms(BufferedImage, BufferedImage) - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Apply the required transforms to a BufferedImage to get the appropriate display. applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, boolean) - Static method in class qupath.lib.display.ImageDisplay. Deprecated.; use instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, ChannelDisplayMode) - Static method in class qupath.lib.display.ImageDisplay. Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. AREA - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Area of the shape. AREA - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as areas. AREA - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a closed area (possibly with holes). areaContains(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Returns true if pathROI is an area that contains x & y somewhere within it. AreaROI - Class in qupath.lib.roi. Implement",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:44271,extend,extends,44271,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"s true if 'undo' can be applied to the control. void; paste(). Request paste from the system clipboard. void; positionCaret(int index). Set the caret position to the specified index. void; redo(). Request redo. void; replaceSelection(String text). Insert the specified text, replacing any existing selection. void; requestFocus(). Request that the control is focused. ObservableValue<String>; selectedTextProperty(). Text currently selected in the editor control. void; selectRange(int startIdx,; int endIdx). Set the range of the selected text. void; setContextMenu(ContextMenu menu). Set the context menu for the control. void; setText(String text). Sets the value of the text property. StringProperty; textProperty(). Text currently in the editor control. void; undo(). Request undo. BooleanProperty; wrapTextProperty(). Request wordwrap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.EditableText; getSelectionLength. Methods inherited from interface qupath.lib.gui.scripting.ScriptEditorControl; getSelectionEnd, getSelectionStart, requestFollowCaret. Property Details. text; public StringProperty textProperty. Specified by:; textProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getText(); setText(String); textProperty(). selectedText; public ObservableValue<String> selectedTextProperty. Specified by:; selectedTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getSelectedText(); selectedTextProperty(). wrapText; public BooleanProperty wrapTextProperty. Specified by:; wrapTextProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. wrapTextProperty(). caretPosition; public ReadOnlyIntegerProperty caretPositionProperty. Specified by:; caretPositionProperty in interface ScriptEditorControl<TextArea>; Returns:; See Also:. getCaretPosition(); caretPositionProperty(). C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html:3554,inherit,inherited,3554,javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/TextAreaControl.html,1,['inherit'],['inherited']
Modifiability,"s using Bio-Formats (https://www.openmicroscopy.org/bio-formats/). qupath.lib.images.servers.openslide. Read images using OpenSlide (https://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6255,plugin,plugins,6255,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['plugin'],['plugins']
Modifiability,"s were made, false otherwise. promptToSelectObjectsByClassification; public static void promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData); Prompt to select objects according to their classifications. Parameters:; qupath - ; imageData - . promptToEditClass; public static boolean promptToEditClass(PathClass pathClass); Prompt to edit the name/color of a class. Parameters:; pathClass - ; Returns:. selectObjectsByClassification; public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public static void closeProject(QuPathGUI qupath); Close the current project open in the QuPathGUI. Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:20766,extend,extends,20766,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['extend'],['extends']
Modifiability,"s() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; MultiviewGridActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions;  . N. name(String) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the image name. name(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a series name. name(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. User-friendly name to use with this model. NAME_NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Negative"" staining intensity. NAME_OBJECT_ID - Static variable in class qupath.lib.gui.measure.ObservableMeasurementTableData. The name used for the Object ID column. NAME_ONE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""1+"" staining intensity (i.e. NAME_POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Positive"" staining intensity. NAME_THREE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""3+"" staining intensity (i.e. NAME_TWO_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""2+"" staining intensity (i.e. nameObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object names based upon pre-computed clusters. nameObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object classifications based upon pre-computed clusters. nameProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the String property of this ViewTracker. nameProperty() - Method in class qupath.lib.gui.view",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:706078,variab,variable,706078,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"s() - Method in class qupath.lib.objects.PathObject. Reset the classification (i.e. resetPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Reset the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864592,plugin,plugins,864592,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:476800,plugin,plugins,476800,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s. Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. filterZ(List<Mat>, Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Filter filter along entries in the input list. finalize() - Method in class qupath.lib.images.servers.AbstractImageServer. Attempt to close the server. findAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; findByStringID(Collection<String>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on a String representation of their IDs. findByUUID(Collection<UUID>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Find objects based on their IDs. FindConvexHullDetectionsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to identify/remove detections from the convex hull of all detections. FindConvexHullDetectionsPlugin() - Constructor for class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; findDensityMapHotspots(String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map for the current image. findDensityMapHotspots(ImageData<BufferedImage>, String, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDensityMapHotspots(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDirectionalMaxima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a higher value than their neighbors. findDirectionalMinima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a lower value than their neighbors. findHotspots(PathObjectHierarchy, ImageServer<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:306114,plugin,plugins,306114,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s. Constructor; Description; ImageJMacroRunner(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief des",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:1823,plugin,plugin,1823,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"s. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements.ShapeFeatures NUCLEUS_CELL_RATIO; Nucleus/cell area ratio (only relevant ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:2035,inherit,inherited,2035,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,1,['inherit'],['inherited']
Modifiability,"s. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request CUDA backend and target, if available, with 16-bit floating point. Returns:. target; public OpenCVDnn.Builder target(int target); Specify the target, e.g. opencv_dnn.DNN_TARGET_CUDA. Parameters:; target - ; Returns:; See Also:. cuda()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:2989,config,config,2989,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,2,['config'],['config']
Modifiability,"s. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<BufferedImage> imageData); Description copied from class: AbstractDetectionPlugin; Get all selected objects that are instances of a supported class. Overrides:; getParentObjects in class AbstractDetectionPlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<BufferedImage>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:4617,extend,extends,4617,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,3,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"s. Sets the Z and T sliders' position to allow space for command bar. setSpaceDown(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Notify this viewer that the isSpaceDown status should be changed. setSpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949439,plugin,plugins,949439,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBuffer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:3955,extend,extends,3955,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,2,['extend'],['extends']
Modifiability,"s. getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList disp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:473179,plugin,plugins,473179,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same as that of another hierarchy. setID(UUID) - Method in class qupath.lib.objects.PathObject. Set the ID for this object. setImageData(ImageData<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image data for the script. setImageData(ImageData<?>, Collection<? extends PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set the ImageData and a collec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:928303,plugin,plugins,928303,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s.; ; Warning! Because the implementation will have to change in the future, it is best not to rely on this class!. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DelaunayClusteringPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:1804,plugin,plugin,1804,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,2,['plugin'],['plugin']
Modifiability,"s.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.panes.ImageDetailsPane (implements javafx.beans.value.ChangeListener<T>, java.beans.PropertyChangeListener); qupath.lib.gui.panes.MeasurementMapPane; qupath.lib.gui.panes.ObjectDescriptionPane<T>; qupath.lib.gui.panes.ObjectTreeBrowser; qupath.lib.gui.panes.PathObjectHierarchyView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.panes.PreferencePane; qupath.lib.gui.panes.PreferencePane.AppearancePreferences; qupath.lib.gui.panes.PreferencePane.DrawingPreferences; qupath.lib.gui.panes.PreferencePane.ExtensionPreferences; qupath.lib.gui.panes.PreferencePane.GeneralPreferences; qupath.lib.gui.panes.PreferencePane.InputOutputPreferences; qupath.lib.gui.panes.PreferencePane.LocalePreferences; qupath.lib.gui.panes.PreferencePane.MeasurementPreferences; qupath.lib.gui.panes.PreferencePane.ObjectPreferences; qupath.lib.gui.panes.PreferencePane.ScriptingPreferences; qupath.lib.gui.panes.PreferencePane.UndoRedoPreferences; qupath.lib.gui.panes.PreferencePane.ViewerPreferences; qupath.lib.gui.panes.ProjectBrowser (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.panes.SelectedMeasurementTableView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener, java.beans.PropertyChangeListener); qupath.lib.gui.panes.ServerSelector; qupath.lib.gui.panes.SimpleImageViewer; qupath.lib.gui.panes.SlideLabelView (implements javafx.beans.value.ChangeListener<T>); qupath.lib.gui.panes.WorkflowCommandLogView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.plugins.workflow.WorkflowListener). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-tree.html:2286,plugin,plugins,2286,javadoc/docs/qupath/lib/gui/panes/package-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-tree.html,1,['plugin'],['plugins']
Modifiability,"s.ColorMap colorMap,; Function<Double,String> fun). Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<ColorMaps.ColorMap>; colorMapProperty(). Return the ColorMap property of this canvas. ColorMaps.ColorMap; getColorMap(). Return the currently displayed ColorMaps.ColorMap. boolean; isResizable();  ; double; maxHeight(double width);  ; double; maxWidth(double width);  ; double; minHeight(double width);  ; double; minWidth(double width);  ; double; prefHeight(double width);  ; void; resize(double width,; double height);  ; void; setColorMap(ColorMaps.ColorMap ColorMap). Set the ColorMaps.ColorMap to display to the one with the specified list index. void; setTooltipFunction(Function<Double,String> fun). Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. Methods inherited from class javafx.scene.canvas.Canvas; getGraphicsContext2D, getHeight, getWidth, heightProperty, setHeight, setWidth, widthProperty. Methods inherited from class javafx.scene.Node; accessibleHelpProperty, accessibleRoleDescriptionProperty, accessibleRoleProperty, accessibleTextProperty, addEventFilter, addEventHandler, applyCss, autosize, blendModeProperty, boundsInLocalProperty, boundsInParentProperty, buildEventDispatchChain, cacheHintProperty, cacheProperty, clipProperty, computeAreaInScreen, contains, contains, cursorProperty, depthTestProperty, disabledProperty, disableProperty, effectiveNodeOrientationProperty, effectProperty, eventDispatcherProperty, executeAccessibleAction, fireEvent, focusedProperty, focusTraversableProperty, focusVisibleProperty, focusWithinProperty, getAccessibleHelp, getAccessibleRole, getAccessibleRoleDescription, getAccessibleText, getBaselineOffset, getBlendMode, getBoundsInLocal, getBoundsInParent, getCacheHint, getClassCssMetaData, getClip, getContent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:3362,inherit,inherited,3362,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['inherit'],['inherited']
Modifiability,"s.MeasurementMapPane. Get the pane, which can be added to a scene for display. getPane() - Method in class qupath.lib.gui.panes.PathObjectHierarchyView. Get the pane for display. getPane() - Method in class qupath.lib.gui.panes.PreferencePane. Get a pane to display. getPane() - Method in class qupath.lib.gui.panes.ProjectBrowser. Get the Pane component for addition to a scene. getPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView. Get the pane to add to a scene. getParallelism() - Static method in class qupath.lib.common.ThreadTools. Get the requested level of parallelism. getParameterEnabled(String) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter exists with the given key and is enabled (and is therefore editable). getParameterEnabled(Parameter<?>) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Returns true if a parameter is enabled (and is therefore editable). getParameterList() - Method in interface qupath.lib.plugins.parameters.Parameterizable. Get the parameter list associated with the class. getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:472100,plugin,plugins,472100,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s.PixelType. Returns true if the type is a floating point representation. isFluorescence() - Method in class qupath.lib.images.ImageData. Returns true if the image type is set to fluorescence. isGradedIntensityClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass represents a built-in intensity class. isH_DAB() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623273,plugin,plugins,623273,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default compression type when writing OME-TIFF images. getDefaultQuPathUserDirectory() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDefaultResolutions(ImageData<?>, ClassificationResolution) - Static method in class qupath.process.gui.commands",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:373069,plugin,plugins,373069,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s.hierarchy.DefaultTMAGrid;  ; nCores() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Total number of cores in the TMA grid. nDescendants() - Method in class qupath.lib.objects.PathObject. Total number of descendant objects. NEAREST - Enum constant in enum class qupath.lib.gui.viewer.ImageInterpolation. Nearest neighbor interpolation. NECROSIS - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Necrosis classification. NECROSIS - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Necrosis classification. negate() - Method in interface qupath.lib.objects.PathObjectPredicates.PathObjectPredicate;  ; negative(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Multiply elements of an array by -1. NEGATIVE - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; General class to represent something 'negative'. NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. General class to represent something 'negative'. nEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events, either observed or censored. NEVER - Enum constant in enum class qupath.lib.gui.prefs.SystemMenuBar.SystemMenuBarOption. Don't use the system menubar for any windows. NEVER - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Never display. newBuilder(Collection<PathObject>) - Static method in class qupath.lib.analysis.DelaunayTools. Create a new DelaunayTools.Builder to compute a triangulation using the specified objects. newInstance() - Static method in class qupath.lib.plugins.TaskRunnerUtils. Create a new instance. nFeatures() - Method in class qupath.lib.analysis.features.HaralickFeatures. Total number of Haralick features. nFeatures() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; nFeatures(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:709457,variab,variable,709457,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"s.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the black is used.; Otherwise, a scaled version of the color is used; ; ; The end result is like having a lookup table (LUT) that stretches from black to the 'pure' color specified,; but without actually generating the LUT. DirectServerChannelInfo(ImageData<BufferedImage>, int) - Constructor for class qupath.lib.display.DirectServerChannelInfo. Constructor. disabled(boolean) - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:260359,variab,variable,260359,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"s.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.ro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9968,extend,extends,9968,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"s.stores.ColorModelRenderer. Set the color model to use. setColorModel(ColorModel) - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Optionally set a custom ColorModel. setColorRGB(Integer) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, use PathObject.setColor(Integer) instead. setComplete(boolean) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the tile that its processing is done. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; setContextMenu(ContextMenu) - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setDebugMode(boolean) - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:921052,plugin,plugins,921052,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"s://openslide.org/). qupath.lib.images.servers.openslide.jna;  ; qupath.lib.images.writers. Supports for writing images of various kinds in various ways. qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:6392,plugin,plugins,6392,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['plugin'],['plugins']
Modifiability,"s:; ChannelDisplayInfo. All Known Implementing Classes:; DirectServerChannelInfo. public interface SingleChannelDisplayInfo; extends ChannelDisplayInfo; ChannelDisplayInfo that determines colors based upon a single value for each pixel.; This is able to supply the underlying values as a float array. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.display.ChannelDisplayInfo; ChannelDisplayInfo.ModifiableChannelDisplayInfo. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float; getValue(BufferedImage img,; int x,; int y). Extract the value for a single pixel of an image. float[]; getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array). Extract values for a square of pixels from an image. boolean; isMutable(). Check if getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. Methods inherited from interface qupath.lib.display.ChannelDisplayInfo; doesSomething, getColor, getMaxAllowed, getMaxDisplay, getMethod, getMinAllowed, getMinDisplay, getName, getRGB, getRGB, getValueAsString, isAdditive, isBrightnessContrastRescaled, updateRGBAdditive, updateRGBAdditive. Method Details. getValue; float getValue(BufferedImage img,; int x,; int y); Extract the value for a single pixel of an image. Parameters:; img - the image; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:; the value of the pixel. getValues; float[] getValues(BufferedImage img,; int x,; int y,; int w,; int h,; float[] array); Extract values for a square of pixels from an image. Parameters:; img - the image; x - x-coordinate of the top left corner of the region to extract; y - y-coordinate of the top left corner of the region to extract; w - width of the region to extract; h - height of the region to extract; array - optional array that may be used to store the output values; Returns:; array of valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html:1410,inherit,inherited,1410,javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/SingleChannelDisplayInfo.html,1,['inherit'],['inherited']
Modifiability,"s:; PathInteractivePlugin<T>, PathPlugin<T>. public class FillAnnotationHolesPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to create new annotations by expanding the size of existing annotations. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FillAnnotationHolesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). Returns an empty ParameterList. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnno",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:1624,plugin,plugin,1624,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['plugin'],['plugin']
Modifiability,"s:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are found. getMissingFeatures; Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:3759,extend,extends,3759,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,1,['extend'],['extends']
Modifiability,"sConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; add",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:1975,inherit,inherited,1975,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['inherit'],['inherited']
Modifiability,"sConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; add",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2364,inherit,inherited,2364,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"sConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2055,inherit,inherited,2055,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['inherit'],['inherited']
Modifiability,"sNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathDetectionObject; class PathDetectionObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObject; class PathObject extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathObjectConnections; class PathObjectConnections extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathROIObject; class PathROIObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathRootObject; class PathRootObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:4375,extend,extends,4375,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"sPlugin; extends AbstractInteractivePlugin<BufferedImage>; Calculate local binary pattern features.; ; TODO: This plugin has not been extensively tested and may be of limited use. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatternsPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:1708,plugin,plugin,1708,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['plugin'],['plugin']
Modifiability,"sToGeoJson(String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export the selected objects to an output file as GeoJSON. exportSnapshotActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ExportSnapshotActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ExportSnapshotActions;  ; exportTMAData(String, double) - Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the current image. exportTMAData(ImageData<BufferedImage>, String, double) - Static method in class qupath.lib.gui.scripting.QPEx. Export TMA summary data for the specified image. ExportTrainingRegionsCommand - Class in qupath.process.gui.commands. Command to help export training regions as labelled images to train AI algorithms elsewhere. ExportTrainingRegionsCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ExportTrainingRegionsCommand. Constructor. exportType(Class<? extends PathObject>) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify what type of object should be exported. ExtendedPathTool - Class in qupath.lib.gui.viewer.tools;  ; ExtensionClassLoader - Class in qupath.lib.gui. ClassLoader for loading QuPath extensions and other jars from the user directory. ExtensionControlPane - Class in qupath.lib.gui. Borderpane that displays extensions, with options to remove,; open containing folder, update, where possible. ExtensionManager - Class in qupath.lib.gui. Manage loading extensions for a QuPathGUI instance. ExtensionPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; EXTENSIONS - Variable in class qupath.lib.gui.actions.menus.ExtensionsMenuActions.Actions;  ; EXTENSIONS_ONLY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.AutoUpdateType. Check for extensions on GitHub only (not new QuPath releases). extensionsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:292217,extend,extends,292217,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"save and load display settings, using a ResourceManager. BrightnessContrastSettingsPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSettingsPane;  ; BrightnessContrastSliderPane - Class in qupath.lib.gui.commands.display. A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. BrightnessContrastSliderPane() - Constructor for class qupath.lib.gui.commands.display.BrightnessContrastSliderPane;  ; brown(int) - Static method in class qupath.lib.color.ColorTransformer. Extract brown value, (blue - (red + green)*0.3f). Brown - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Brown value, (blue - (red + green)*0.3f). browseDirectory(File) - Static method in class qupath.lib.gui.tools.GuiTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in pixels. brushScaleByMag - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushScaleByMagProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). BrushToolEventHandler - Class in qupath.lib.gui.viewer.tools.handlers. Tool for drawing (and subtract from) freehand regions, optionally",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:64553,variab,variable,64553,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1509,inherit,inherited,1509,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"scripting.QP. Clear the measurement lists for all cells in the current hierarchy. clearCellMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all cells in a hierarchy. clearChildObjects() - Method in class qupath.lib.objects.PathObject. Remove all child objects. clearDetectionMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearDetectionMeasurements(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). clearDetections() - Static method in class qupath.lib.scripting.QP. Remove all the detection objects from the current PathObjectHierarchy. clearMeasurements() - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for all detections in the current hierarchy. clearMeasurements(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). clearMeasurements(PathObjectHierarchy, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMeasurements(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Clear the measurement lists for specified objects within a hierarchy. clearMetadata() - Method in class qupath.lib.objects.TMACoreObject. Clear all associated metadata. clearMetadata() - Method in interface qupath.lib.projects.ProjectImageEntry. Remove all metadata. clearMetadataMap() - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:109773,extend,extends,109773,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"scription copied from interface: EditableText; Set the range of the selected text. Specified by:; selectRange in interface EditableText; Parameters:; startIdx - ; endIdx - . wrapTextProperty; public BooleanProperty wrapTextProperty(); Description copied from interface: ScriptEditorControl; Request wordwrap. Specified by:; wrapTextProperty in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Returns:; the wrapText property. positionCaret; public void positionCaret(int index); Description copied from interface: EditableText; Set the caret position to the specified index. Specified by:; positionCaret in interface EditableText; Parameters:; index - . requestFollowCaret; public void requestFollowCaret(); Description copied from interface: ScriptEditorControl; Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. Specified by:; requestFollowCaret in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>. replaceSelection; public void replaceSelection(String text); Description copied from interface: EditableText; Insert the specified text, replacing any existing selection. Specified by:; replaceSelection in interface EditableText; Parameters:; text - the text to insert. setContextMenu; public void setContextMenu(ContextMenu menu); Description copied from interface: ScriptEditorControl; Set the context menu for the control. Specified by:; setContextMenu in interface ScriptEditorControl<org.fxmisc.flowless.VirtualizedScrollPane<org.fxmisc.richtext.CodeArea>>; Parameters:; menu - . getContextMenu; public ContextMenu getContextMenu(); Description copied from interface: ScriptEditorControl; Get the context menu for the control. Specified by:; getContextMenu in interface ScriptEditorControl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html:11161,extend,extending,11161,javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/CodeAreaControl.html,1,['extend'],['extending']
Modifiability,"scription of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2938,plugin,plugins,2938,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"scription of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3433,plugin,plugins,3433,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"scription() - Method in class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; getLastResultsDescription() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getLastResultsDescription() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424107,plugin,plugins,424107,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"scription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowSte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424876,plugin,plugins,424876,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"scription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2906,inherit,inherited,2906,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"scription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3401,inherit,inherited,3401,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"scription; protected String; createID(). Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath(). protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. static ImageServerBuilder.ServerBuilder<BufferedImage>; getRotatedBuilder(ImageServerBuilder.ServerBuilder<BufferedImage> builder,; RotatedImageServer.Rotation rotation). Get a ServerBuilder that applies a rotation to another server. RotatedImageServer.Rotation; getRotation(). Get the rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:2428,inherit,inherited,2428,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['inherit'],['inherited']
Modifiability,"se & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2377,plugin,plugins,2377,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['plugin'],['plugins']
Modifiability,"se color. backgroundColor(Color) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundLabel(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify the background label (0 by default). backgroundLabel(int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify the background label (0 by default) and color. badges - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; BAR - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as bars. barChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.ScatterChartBuilder for generating a custom scatter plot. baseClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:53217,variab,variable,53217,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"se instead ImageDisplay.applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). applyTransforms(BufferedImage, BufferedImage, List<? extends ChannelDisplayInfo>, ChannelDisplayMode) - Static method in class qupath.lib.display.ImageDisplay. Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. AREA - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Area of the shape. AREA - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.DisplayMode. Show as areas. AREA - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a closed area (possibly with holes). areaContains(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Returns true if pathROI is an area that contains x & y somewhere within it. AreaROI - Class in qupath.lib.roi. Implementation of an arbitrary area ROI - which could contain disjointed or hollow regions. ARGS - Static variable in class qupath.lib.scripting.ScriptAttributes. Optional string args passed to the script. arrayAsString(Locale) - Method in class qupath.lib.color.StainVector. Get a String representation of the stain vector array, formatting according to the specified Locale. arrayToString(Object[], String) - Static method in class qupath.lib.common.GeneralTools. Convert a String array to a single string, with a specified delimiter string. arrayToString(Locale, double[], int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to a String using a space as a delimiter. arrayToString(Locale, double[], String, int) - Static method in class qupath.lib.common.GeneralTools. Convert a double array to string, with a specified number of decimal places. ArrayWrappers - Class in qupath.lib.analysis.stats. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers() - Constructor for class qupath.lib.analysis.stats.ArrayWrappers;  ; ArrayWrappers.ArrayWrapp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:45376,variab,variable,45376,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"se performance issues.; Use with caution. Returns:; this builder; See Also:. limitDatapoints(int). getDefaultWindowTitle; protected String getDefaultWindowTitle(); Get a window title to use for charts of this kind, assuming the user has not ; specified one. Returns:; a suitable title to use. centroids; public <T> Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects,; PixelCalibration cal); Plot centroids for the specified objects using a fixed pixel calibration. Parameters:; pathObjects - the objects to plot; cal - the pixel calibration used to convert the centroids into other units; Returns:; this builder. centroids; public Charts.ScatterChartBuilder centroids(Collection<? extends PathObject> pathObjects); Plot centroids for the specified objects in pixel units. Parameters:; pathObjects - the objects to plot.; Returns:; this builder. measurements; public Charts.ScatterChartBuilder measurements(Collection<? extends PathObject> pathObjects,; String xMeasurement,; String yMeasurement); Plot two measurements against one another for the specified objects. Parameters:; pathObjects - the objects to plot; xMeasurement - the measurement to extract from each object's measurement list for the x location; yMeasurement - the measurement to extract from each object's measurement list for the y location; Returns:; this builder. series; public <T> Charts.ScatterChartBuilder series(String name,; Collection<? extends T> collection,; Function<T,Number> xFun,; Function<T,Number> yFun); Plot values extracted from objects within a specified collection. Type Parameters:; T - ; Parameters:; name - ; collection - the objects to plot; xFun - function capable of extracting a numeric value for the x location from each object in the collection; yFun - function capable of extracting a numeric value for the y location from each object in the collection; Returns:; this builder. series; public Charts.ScatterChartBuilder series(String name,; Collection<? extends Number>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html:7674,extend,extends,7674,javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.ScatterChartBuilder.html,1,['extend'],['extends']
Modifiability,"se renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double opacity); Specify the opacity for overlay layers.; This will be clipped to the range 0 (transparent) and 1 (opaque). Parameters:; opacity - ; Returns:. layers; public RenderedImageServer.Builder layers(PathOverlay... layers); Specify one or more overlay layers. Parameters:; layers - ; Returns:. layers; public RenderedImageServer.Builder layers(Collection<PathOverlay> layers); Specify one or more overlay layers as a collection. Parameters:; layers - ; Returns:. store; public RenderedImageServer.Builder store(DefaultImageRegionStore store); Specify the region store used to paint the underlying image. Parameters:; store - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(Color color); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; color - ; Returns:. backgroundColor; public RenderedImageServer.Builder backgroundColor(int rgb,; boolean keepAlpha); Specify a base color. This is useful if transparent overlays or renderers will be used. Parameters:; rgb - packed (A)RGB version of the color; keepAlpha - true if the packed color contains an alpha value; Returns:. build; public ImageServer<BufferedImage> build(); throws IOException; Create the ren",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:4386,layers,layers,4386,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,2,['layers'],['layers']
Modifiability,"seArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parseArgument(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. parseColorDeconvolutionStainsArg(String) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Parse color deconvolution stains from a JSON String, with keys 'Stain 1', 'Stain 2', (optionally) 'Stain 3' and 'Background'. parseDisplaySettings(JsonElement) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object, if possible. parseDisplaySettings(Path) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Parse the JSON element into an image display settings object. parseLayers(Net, int, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Parse the layers for a Net, which allows inspection of names and sizes. parseNumeric(List<String>, boolean) - Static method in class qupath.lib.io.TMAScoreImporter. Parse numeric values from a list of strings. parseObjectsFromGeoJSON(JsonElement) - Static method in class qupath.lib.io.GsonTools. Attempt to read PathObjects from a JsonElement, interpreting it as GeoJSON. parseRegion(String, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Attempt to parse a RegionRequest corresponding to an image region from the file name. parseShape(MatShapeVector) - Static method in class qupath.opencv.dnn.DnnTools. Extract Mat dimensions from a MatShapeVector. parseStainValues(Locale, String) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Parses 3 values, suitable for use as a stain vector. parseStrings(StringVector) - Static method in class qupath.opencv.dnn.DnnTools. Extract Strings from a StringVector. parseTMALabelString(String) - Static method in class qupath.lib.objects.PathObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:748927,layers,layers,748927,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['layers'],['layers']
Modifiability,"seArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:3250,plugin,plugin,3250,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['plugin'],['plugin']
Modifiability,"ser preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static DoubleProperty createPersistentPreference(String name,; double defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static LongProperty createPersistentPreference(String name,; long defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static StringProperty createPersistentPreference(String name,; String defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static <T extends Enum<T>> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Class<T> enumType); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; enumType - ; Returns:. createPersistentPreference; public static <T> ObjectProperty<T> createPersistentPreference(String name,; T defaultValue,; Function<T,String> serializer,; Function<String,T> deserializer); Create a persistent property representing any object serializable as a String, which will be saved to/reloaded from the user preferences.; Note that it is important that the serialization is short, i.e. fewer than Preferences.MAX_VALUE_LENGTH characters. Parameters:; name - ; defaultValue - ; serializer - function to generate a string representation of the object; deserializer - function to get an object from a string representation; Returns:; Since:; v0.4.0. detectionStrokeThicknessProperty; public static DoubleProperty detectionStrokeThicknessProperty(); Preferred stroke thickness to use when drawing detections",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:62458,extend,extends,62458,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['extend'],['extends']
Modifiability,"serialVersionUID:; 1L. Serialized Fields. rootObject; PathObject rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8331,plugin,plugins,8331,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['plugin'],['plugins']
Modifiability,"serialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnModels. Register a new DnnModel class for JSON serialization/deserialization. registerDnnModel(Class<T>, String) - Static method in class qupath.opencv.dnn.DnnTools. Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. registerOp(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register the tool on the viewer. RELABEL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; relabelTMAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, Strin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:840852,extend,extends,840852,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"servableValue, bidirectionally if possible. ActionTools.ActionBuilder; graphic(Node value). Set the graphic property of the action. ActionTools.ActionBuilder; longText(String value). Set the long text property of the action. ActionTools.ActionBuilder; longText(ObservableValue<String> value). Bind the long text property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; selectable(boolean isSelectable). Sets the selectable property of the action. ActionTools.ActionBuilder; selected(boolean value). Set the selected property of the action. ActionTools.ActionBuilder; selected(ObservableValue<Boolean> value). Bind the selected property of the action to an ObservableValue, bidirectionally if possible. ActionTools.ActionBuilder; text(String value). Set the text property of the action. ActionTools.ActionBuilder; text(ObservableValue<String> value). Bind the text property of the action to an ObservableValue, bidirectionally if possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. text; public ActionTools.ActionBuilder text(String value); Set the text property of the action. Parameters:; value - ; Returns:; this builder. selectable; public ActionTools.ActionBuilder selectable(boolean isSelectable); Sets the selectable property of the action. Parameters:; isSelectable - ; Returns:; this builder. longText; public ActionTools.ActionBuilder longText(String value); Set the long text property of the action. Parameters:; value - ; Returns:; this builder. graphic; public ActionTools.ActionBuilder graphic(Node value); Set the graphic property of the action. Parameters:; value - ; Returns:; this builder. accelerator; public ActionTools.ActionBuilder accelerator(KeyCombination value); Set the accelerator property of the action. Parameters:; value - ; Returns:; this builder. selected; public ActionTools.ActionBuilder selected(boolean valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html:2505,inherit,inherited,2505,javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.ActionBuilder.html,1,['inherit'],['inherited']
Modifiability,"server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. BioFormatsImageServer; public BioFormatsImageServer(URI uri,; String... args); throws FormatException,; IOException,; loci.common.services.DependencyException,; loci.common.services.ServiceException,; URISyntaxException; Create an ImageServer using the Bio-Formats library.; ; This requires an absolute URI, where an integer fragment can be used to define the series number. Parameters:; uri - for the image that should be opened; this might include a sub-image as a query or fragment.; args - optional arguments; Throws:; FormatException; IOException; loci.common.services.DependencyException; loci.common.services.ServiceException; URISyntaxException. Method Details. getFormat; public String getFormat(); Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). Returns:. getURIs; public Collection<URI> getURIs(); Description copied from i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html:3288,inherit,inherited,3288,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsImageServer.html,2,['inherit'],['inherited']
Modifiability,"server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. OpenslideImageServer; public OpenslideImageServer(URI uri,; String... args); throws IOException; Create an ImageServer using OpenSlide for the specified file.; ; The only supported arg is --no-crop, to specify that any bounding box should not be ; applied (which was the default in QuPath <= v0.1.2). Parameters:; uri - ; args - ; Throws:; IOException. Method Details. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html:2861,inherit,inherited,2861,javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/OpenslideImageServer.html,2,['inherit'],['inherited']
Modifiability,"ses/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. Leave it up to the writer to choose the appropriate method. IMAGES. Channels are stored as separate images (this is not yet supported!). INTERLEAVED. Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OMEPyramidWriter.ChannelExportType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.ChannelExportType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OMEPyramidWriter.ChannelExportType DEFAULT; Leave it up to the writer to choose the appropriate method. INTERLEAVED; public static final OMEPyramidWriter.ChannelExportType INTERLEAVED; Channels are interleaved ('PLANARCONFIG_CONTIG'). PLANAR; public static final OMEPyramidWriter.ChannelExportType PLANAR; Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). IMAGES; public static final OMEPyramidWriter.ChannelExportType IMAGES; Channels are stored as separate images (this is not yet supported!). Method Details. values; public static OMEPyramidWriter.ChannelExportType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OMEPyramidWriter.ChannelExportType valueOf(String name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html:1948,inherit,inherited,1948,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.ChannelExportType.html,2,['inherit'],['inherited']
Modifiability,"set the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; resolveHierarchy() - Method in class qupath.lib.objects.hierarchy.PathObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864754,plugin,plugins,864754,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. void; resetValue(). Set last value to null (so default can be used). boolean; setDoubleLastValue(double val). A class for setting the numeric value as a double (subclasses should convert this as needed). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setValue(Integer lastValue). Set the last value; this will apply a range check using clipping. boolean; setValueWithBoundsCheck(Integer lastValue). Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. String; toString();  . Methods inherited from class qupath.lib.plugins.parameters.NumericParameter; getLowerBound, getUnit, getUpperBound, hasLowerAndUpperBounds, hasLowerBound, hasUpperBound, isUnbounded, isValidInput, setRange, setStringLastValue. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Integer lastValue. Method Details. setValue; public boolean setValue(Integer lastValue); Set the last value; this will apply a range check using clipping. Specified by:; setValue in interface Parameter<Integer>; Parameters:; lastValue - ; Returns:. setValueWithBoundsCheck; public boolean setValueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class Nu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:2450,inherit,inherited,2450,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,2,['inherit'],['inherited']
Modifiability,"setExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classify",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2448,inherit,inherited,2448,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,2,['inherit'],['inherited']
Modifiability,"setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathROIObject;  ; setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathRootObject;  ; setPathClasses(Collection<? extends PathClass>) - Method in interface qupath.lib.projects.Project. Update the available PathClasses. setPathClassHidden(PathClass, boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Request that objects with a particular PathClass not be displayed. setPathMemoization(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the directory where memoization files should be written. setPathObject(PathObject) - Method in class qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Set the PathObject to display (may be null). setPenManager(QuPathPenManager.PenInputManager) - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Set the PenInputManager. setPieChartData(PieChart, Map<T, ? extends Number>, Function<T, String>, Function<T, Color>, boolean, boolean) - Static method in class qupath.lib.gui.charts.ChartTools. Set pie chart data from a count map. setPixelClassificationRegionFilter(RegionFilter) - Method in class qupath.lib.gui.viewer.OverlayOptions. Control where pixel classifications should be calculated during live prediction. setPixelLayer(ImageData<BufferedImage>, ImageServer<BufferedImage>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set an ImageServer as a property in the ImageData. setPixelSizeMicrons(Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes. setPixelSizeMicrons(Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. setPixelSizeMicrons(ImageData<?>, Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for an",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:940704,extend,extends,940704,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"setROI(ROI roi). Set the ROI for this object. void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. setROI; public void setROI(ROI roi); Set the ROI for this object. If this is called, one should remember to update any associated ; hierarchy to notify it of the change. Parameters:; roi - . setLocked; public void setLocked(boolean locked); Set locked flag, indicating that the object ROI should not be modified.; It directly impacts on isEditable(). Note that this is only a hint that other code should pay attention to - it is not; enforced locally.; ; TODO: Consider shifting this method into PathObject rather than PathROIObject (even; if it doesn't really do anything there). Overrides:; setLocked in class PathObject; Parameters:; locked - . isLocked; public boolean isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEdit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:2694,inherit,inherited,2694,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,1,['inherit'],['inherited']
Modifiability,"setUseInvertedBackground(boolean) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.useInvertedBackgroundProperty(). setUseMicrons(boolean) - Method in class qupath.lib.gui.viewer.GridLines. Specify whether to use calibrated units when calculating coordinates for any counting grid. setUserPath(Path) - Method in class qupath.lib.gui.UserDirectoryManager. Set the user path where additional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if ne",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:954682,plugin,plugins,954682,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"sfx.control.action.Action; SHOW_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SHOW_CONNECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_DETECTIONS;  ; final org.controlsfx.control.action.Action; SHOW_GRID;  ; final org.controlsfx.control.action.Action; SHOW_LOCATION;  ; final org.controlsfx.control.action.Action; SHOW_LOG;  ; final org.controlsfx.control.action.Action; SHOW_NAMES;  ; final org.controlsfx.control.action.Action; SHOW_OVERVIEW;  ; final org.controlsfx.control.action.Action; SHOW_PIXEL_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SHOW_SCALEBAR;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID;  ; final org.controlsfx.control.action.Action; SHOW_TMA_GRID_LABELS;  ; final org.controlsfx.control.action.Action; SLIDE_LABEL;  ; final org.controlsfx.control.action.Action; VIEW_TRACKER;  ; final Object; zoomActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. SHOW_ANALYSIS_PANEL; public final org.controlsfx.control.action.Action SHOW_ANALYSIS_PANEL. COMMAND_LIST; @ActionConfig(""Action.View.commandList""); @ActionAccelerator(""shortcut+l""); public final org.controlsfx.control.action.Action COMMAND_LIST. RECENT_COMMAND_LIST; @ActionConfig(""Action.View.recentCommands""); @ActionAccelerator(""shortcut+p""); public final org.controlsfx.control.action.Action RECENT_COMMAND_LIST. SEP_0; public final org.controlsfx.control.action.Action SEP_0. BRIGHTNESS_CONTRAST; public final org.controlsfx.control.action.Action BRIGHTNESS_CONTRAST. SEP_1; public final org.controlsfx.control.action.Action SEP_1. multiviewActions; @ActionMenu(""Menu.View.Multiview""); public final ViewMenuActions.MultiviewActions multiviewActions. CHANNEL_VIEWER; @ActionConfig(""Action.View.channelViewer""); public final org.controlsfx.control.action.Actio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html:3051,inherit,inherited,3051,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.Actions.html,1,['inherit'],['inherited']
Modifiability,"sfx.control.action.Action action). Specify that an Action has a meaningful 'selected' status. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element). Parse annotations relating to an action, updating the properties of the action. static void; parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMenu). Parse annotations relating to an action, updating the properties of the action with an optional base menu. static void; putActionProperty(MenuItem node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a MenuItem, so that it may be retrieved later. static void; putActionProperty(Node node,; org.controlsfx.control.action.Action action). Add an Action to the properties of a Node, so that it may be retrieved later. static void; setSelectable(org.controlsfx.control.action.Action action,; boolean selectable). Set the selectable property for an action. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ActionTools; public ActionTools(). Method Details. getAnnotatedActions; public static List<org.controlsfx.control.action.Action> getAnnotatedActions(Object obj); Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod.; Any annotations associated with the actions will be parsed. Parameters:; obj - the object containing the action fields or methods; Returns:; a list of parsed and configured actions. parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element); Parse annotations relating to an action, updating the properties of the action. Parameters:; action - ; element - . parseAnnotations; public static void parseAnnotations(org.controlsfx.control.action.Action action,; AnnotatedElement element,; String baseMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:6339,inherit,inherited,6339,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['inherit'],['inherited']
Modifiability,"shCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:3647,plugin,plugin,3647,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['plugin'],['plugin']
Modifiability,"shCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:3498,plugin,plugin,3498,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability,"sholds can be adjusted interactively. DoubleProperty; lineWidthProperty(). Line width property used for displaying threshold lines. void; setIsInteractive(boolean isInteractive). Sets the value of isInteractiveProperty(). void; setLineWidth(double width). Set the threshold line width. void; setThresholdColor(ObservableNumberValue val,; Color color). Set the color of a specified threshold line. void; setThresholds(Color color,; double... thresholds). Set thresholds, which are visualized as vertical lines. Methods inherited from class javafx.scene.layout.BorderPane; bottomProperty, centerProperty, clearConstraints, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAlignment, getBottom, getCenter, getContentBias, getLeft, getMargin, getRight, getTop, layoutChildren, leftProperty, rightProperty, setAlignment, setBottom, setCenter, setLeft, setMargin, setRight, setTop, topProperty. Methods inherited from class javafx.scene.layout.Pane; getChildren. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getClassCssMetaData, getCssMetaData, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPaddin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:4623,inherit,inherited,4623,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability,"sibility set to false) when there is no data. ObservableList<HistogramChart.HistogramData>; getHistogramData(). Get all histogram data objects. BooleanProperty; hideIfEmptyProperty(). Property controlling whether the chart should be hidden if there is no data. void; setCountsTransform(HistogramChart.CountsTransformMode mode). Set the current counts transform. void; setDisplayMode(HistogramChart.DisplayMode mode). Set the histogram display mode. void; setHideIfEmpty(boolean doHide). Request that the chart is automatically hidden (visibility set to false) when there is no data. void; setShowTickLabels(boolean showTickLabels). Request that tick labels are visible or not for both x and y axis. Methods inherited from class javafx.scene.chart.AreaChart; createSymbolsProperty, dataItemAdded, dataItemChanged, dataItemRemoved, getClassCssMetaData, getCreateSymbols, getCssMetaData, layoutPlotChildren, seriesAdded, seriesChanged, seriesRemoved, setCreateSymbols, updateAxisRange. Methods inherited from class javafx.scene.chart.XYChart; alternativeColumnFillVisibleProperty, alternativeRowFillVisibleProperty, currentDisplayedExtraValueProperty, currentDisplayedXValueProperty, currentDisplayedYValueProperty, dataProperty, getCurrentDisplayedExtraValue, getCurrentDisplayedXValue, getCurrentDisplayedYValue, getData, getDisplayedDataIterator, getDisplayedSeriesIterator, getPlotChildren, getVerticalGridLinesVisible, getXAxis, getYAxis, horizontalGridLinesVisibleProperty, horizontalZeroLineVisibleProperty, isAlternativeColumnFillVisible, isAlternativeRowFillVisible, isHorizontalGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDisplayedYValue, setData, setHorizontalGridLinesVisible, setHorizontalZeroLineVisible, setVerticalGridLinesVisible, setVerticalZeroLineVis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:6648,inherit,inherited,6648,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"sified. qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:7160,plugin,plugins,7160,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['plugin'],['plugins']
Modifiability,"sing a segmentation, to help resolve tile boundaries. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMerger; createSharedClassificationMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold). Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance). Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. static ObjectMerger; createTouchingMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. List<PathObject>; merge(Collection<? extends PathObject> pathObjects). Calculate the result of applying the merging strategy to the input objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will be replaced by a new; objects with a new ROI.; ; New objects will be assigned new IDs.; Classifications will be preserved, but other measurements and properties will not be.; ; No guarantees are made about the mutability or ordering of the returned list. Parameters:; pathObjects - the input objects for which merges should be calculated; Returns:; a list of objects, with the same number or fewer than the input. createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold); Crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:1578,inherit,inherited,1578,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,2,['inherit'],['inherited']
Modifiability,"skRunnerFX. java.lang.Object; qupath.lib.plugins.AbstractTaskRunner; qupath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1355,plugin,plugins,1355,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['plugin'],['plugins']
Modifiability,"so:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same preprocessing defined here (i.e. input size, mean, scale, crop, swapRB). Parameters:; model - . getName; public String getName(); Get a user-readable name for this model, or null if no name is specified. Returns:. getScale; public Double getScale(); Get scale factors to be applied to preprocess input. Returns:; the scale value if specified, or null if default scaling should be used; See Also:. getMean(). getModelType; public OpenCVDnn.ModelType getModelType(); Get the type of the model that would be built with buildModel(). Returns:. getMean; public Scalar getMean(); Get means which should be subtracted for preprocessing. Returns:; the mean value if specified, or null if OpenCV's default should be used (likely to be zero); See Also:. getScale(). getModelUri; public URI getModelUri(); Get the path to the model. Returns:. getConfigUri; public URI getConfigUri(); Get the path to the model configuration, if required. Returns:. getFramework; public String getFramework(); Get the framework used to create the model. Returns:. builder; public static OpenCVDnn.Builder builder(String pathModel); Create a new builder. Parameters:; pathModel - ; Returns:. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:5131,config,configuration,5131,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['config'],['configuration']
Modifiability,"sor, int) - Static method in class qupath.imagej.processing.RoiLabeling. Get filled Polygon ROIs using distinct labels, creating a map between labels and ROIs. getFilterByCentroid() - Method in class qupath.lib.objects.utils.Tiler. Check if the tiler will filter the output based on whether the centroid; of tiles lies within the parent. getFilteredNeighbors(BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a list of neighbors for all objects, filtering out objects that do not meet specified criteria. getFilteredNeighbors(PathObject, BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a list of neighbors for a specified object, filtering out objects that do not meet specified criteria. getFlattenedMenuItems(boolean, MenuItem...) - Static method in class qupath.lib.gui.tools.MenuTools. Get a flattened list of all menu items recursively. getFlattenedMenuItems(List<? extends MenuItem>, boolean) - Static method in class qupath.lib.gui.tools.MenuTools. Get a flattened list of all menu items recursively. getFlattenedObjectList(List<PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get a flattened list containing all PathObjects in the hierarchy (including from the root object). getFlattenedObjectList(PathObject, List<PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all descendant objects as a flattened list. getFontSize() - Method in enum class qupath.lib.gui.prefs.PathPrefs.FontSize. Get the font size as a CSS-compatible string. getFontSize() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getFormat() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the format String, as returned by Bio-Formats IFormatReader.getFormat(). getFrame(int) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the frame at the specified index. getFrameForTime(l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:394615,extend,extends,394615,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"sor; labelROIs(ImageProcessor ipLabels,; List<? extends Roi> rois). Label ROIs by filling each pixel with an integer value corresponding to the index of the Roi ; in the list + 1. static Roi[]; labelsToConnectedROIs(ImageProcessor ipLabels,; int n). Create ROIs from labels in an image. static List<PolygonRoi>; labelsToFilledRoiList(ImageProcessor ipLabels,; boolean conn8). Convert a labelled image into a list of PolygonRois by tracing. static PolygonRoi[]; labelsToFilledROIs(ImageProcessor ipLabels,; int n). Convert a labelled image into a list of PolygonRois by tracing. static int; removeByAreas(ByteProcessor bp,; double minPixels,; double maxPixels,; boolean conn8). Remove objects containing < minPixels or > maxPixels. static void; removeSmallAreas(ByteProcessor bp,; double minPixels,; boolean conn8). Remove objects having small areas, defined in terms of pixels. static PolygonRoi; wandToRoi(Wand wand). Convert a traced outline from the ImageJ Wand into a PolygonRoi. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiLabeling; public RoiLabeling(). Method Details. findDirectionalMaxima; public static ByteProcessor findDirectionalMaxima(ImageProcessor ip); Create a binary image for pixels that have a higher value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. findDirectionalMinima; public static ByteProcessor findDirectionalMinima(ImageProcessor ip); Create a binary image for pixels that have a lower value than their neighbors.; Comparisons are made horizontally, vertically and diagonally. Pixels meeting the criterion ; have the value 255, all others are 0. Parameters:; ip - ; Returns:. getFilledPolygonROIsExperimental; public static List<PolygonRoi> getFilledPolygonROIsExperimental(ImageProcessor ip); Experimental 8-conn",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html:3232,inherit,inherited,3232,javadoc/docs/qupath/imagej/processing/RoiLabeling.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/RoiLabeling.html,1,['inherit'],['inherited']
Modifiability,"specified maximum value. static final double; makeOD(double val,; double max). Convert a single pixel value to an optical density as max(0, -log10(val/max). static final double; makeODByLUT(float val,; double[] OD_LUT). Convert a float pixel to an optical density value using a pre-computed lookup table. static final double; makeODByLUT(int val,; double[] OD_LUT). Convert an int pixel to an optical density value using a pre-computed lookup table. static double[]; makeODLUT(double maxValue). Create an optical density lookup table with 256 entries, normalizing to the specified background value. static double[]; makeODLUT(double maxValue,; int nValues). Create an optical density lookup table, normalizing to the specified background value. static ColorDeconvolutionStains; refineColorDeconvolutionStains(int[] rgb,; ColorDeconvolutionStains stains,; double minStain,; double percentageClipped). Attempt to automatically refine color deconvolution stains based upon pixel values. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorDeconvolutionHelper; public ColorDeconvolutionHelper(). Method Details. makeOD; public static final double makeOD(double val,; double max); Convert a single pixel value to an optical density as max(0, -log10(val/max). where val is clipped to be >= 1. Parameters:; val - ; max - ; Returns:. makeODByLUT; public static final double makeODByLUT(int val,; double[] OD_LUT); Convert an int pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double). Parameters:; val - ; OD_LUT - ; Returns:; See Also:. makeOD(double, double). makeODByLUT; public static final double makeODByLUT(float val,; double[] OD_LUT); Convert a float pixel to an optical density value using a pre-computed lookup table. ; This is likely to be much faster than calling makeOD(double, double), but involv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html:2974,inherit,inherited,2974,javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionHelper.html,1,['inherit'],['inherited']
Modifiability,"specified parent object, generate a task to run. protected void; addWorkflowStep(ImageData<BufferedImage> imageData,; String arg). Add a workflow step to the ImageData indicating the argument that this plugin was run with. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2170,inherit,inherited,2170,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['inherit'],['inherited']
Modifiability,"splay.SingleChannelDisplayInfo. Extract the value for a single pixel of an image. getValue(Indexer) - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the value from another image via its Indexer. getValue(Parameters<S, T>) - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getValueAsString(BufferedImage, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValueAsString(BufferedImage, int, int) - Method in interface qupath.lib.display.ChannelDisplayInfo. Get a string representation of a pixel's value. getValueOrDefault() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getValueOrDefault() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getValueOrDefault() - Method in interface qupath.lib.plugins.parameters.Parameter. Get the current set value, or any default if no value has been set. getValues(BufferedImage, int, int, int, int, float[]) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getValues(BufferedImage, int, int, int, int, float[]) - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Extract values for a square of pixels from an image. getVariance() - Method in class qupath.lib.analysis.stats.Histogram. Get the variance of all the values being histogrammed. getVariance() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the variance of all non-NaN values that were added. getVersion() - Static method in class qupath.lib.common.GeneralTools. Get a String represe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:548743,plugin,plugins,548743,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"splayableImageName(ImageServer<?> server). Get an ImageServer name suitable for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; public static String getDefaultShortServerName(URI uri); Get the default shortened server name given the server's path. Parameters:; uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:2200,inherit,inherited,2200,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,2,['inherit'],['inherited']
Modifiability,"splayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITHOUT_ICONS; Show detections without ROI icons. WITH_ICONS; public static final PathPrefs.DetectionTreeDisplayModes WITH_ICONS; Show detections with ROI icons. Method Details. values; public static PathPrefs.DetectionTreeDisplayModes[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static PathPrefs.DetectionTreeDisplayModes valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1869,inherit,inherited,1869,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['inherit'],['inherited']
Modifiability,"ss qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractPlugin. For a specified parent object, generate a task to run. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; addShapeMeasurements(St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:27877,plugin,plugins,27877,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ss qupath.lib.scripting.QP. Find hotspots in a density map. findDensityMapHotspots(ImageData<BufferedImage>, DensityMaps.DensityMapBuilder, int, int, double, boolean, boolean) - Static method in class qupath.lib.scripting.QP. Find hotspots in a density map. findDirectionalMaxima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a higher value than their neighbors. findDirectionalMinima(ImageProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Create a binary image for pixels that have a lower value than their neighbors. findHotspots(PathObjectHierarchy, ImageServer<BufferedImage>, int, int, double, double, PathClass, boolean, boolean) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Find hotspots in a density map. findMaxima(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Find maxima within an image. findObjectsOutsideImage(Collection<? extends PathObject>, ImageServer<?>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects with ROIs that are outside the bounds of an image. findObjectsOutsideRegion(Collection<? extends PathObject>, ImageRegion, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects in a collection that are outside a defined region. findObjectsOutsideRegion(Collection<? extends PathObject>, ImageRegion, int, int, int, int, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. findRegionalMaxima(ImageProcessor, float, boolean) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Find regional maxima using morphological reconstruction. findRegionalMaxima(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the regional maxima within a Mat, providing the output as a labeled image. f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:307431,extend,extends,307431,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ss. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRegionStore - Class in qupath.lib.gui.images.stores. An ImageRegionStore suitable for either Swing or JavaFX applications. defaultLocaleDisplayProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for setting the default Locale for Locale.Category.DISPLAY. defaultLocaleFormatProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for setting the default Locale for Locale.Category.FORMAT. defaultLocaleProperty() - Static method in class qupath.lib.gui.prefs.P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:242627,variab,variable,242627,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ss> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Returns:. classifyObjects; public int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). toString; public String toString(). Overrides:; toString in class Object. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html:4005,extend,extends,4005,javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/objects/OpenCVMLClassifier.html,2,['extend'],['extends']
Modifiability,"ssLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.JsonLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.MarkdownLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PlainLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PropertiesLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.XmlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.YamlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the ScriptAutoCompletor object that takes care of this language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the automated actions associated with this QuPath instance. getAvailableFeatures(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set containing the names of all measurements found in the measurement lists of a specified object collection. getAvailableLanguages() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:332790,extend,extends,332790,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ssLoader. java.net.URLClassLoader (implements java.io.Closeable). qupath.lib.gui.ExtensionClassLoader. qupath.lib.gui.scripting.richtextfx.CodeAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.lib.color.ColorDeconvMatrix3x3; qupath.lib.color.ColorDeconvolutionHelper; qupath.lib.color.ColorDeconvolutionStains (implements java.io.Externalizable); qupath.lib.color.ColorMaps; qupath.lib.color.ColorModelFactory; qupath.lib.gui.images.stores.ColorModelRenderer (implements qupath.lib.gui.images.stores.ImageRenderer); qupath.lib.analysis.heatmaps.ColorModels; qupath.lib.color.ColorModels; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand; qupath.lib.color.ColorModels.DisplayBand; qupath.lib.common.ColorTools; qupath.lib.color.ColorToolsAwt; qupath.lib.gui.tools.ColorToolsFX; qupath.lib.color.ColorTransformer; qupath.lib.images.servers.ColorTransforms; qupath.lib.gui.tools.CommandFinderTools; qupath.lib.gui.tools.CommandFinderTools.CommandEntry; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor (implements qupath.lib.plugins.SimpleProgressMonitor); qupath.lib.gui.commands.Commands; qupath.lib.gui.actions.CommonActions; qupath.lib.gui.commands.ContextHelpViewer; qupath.lib.analysis.images.ContourTracing; qupath.lib.analysis.images.ContourTracing.ChannelThreshold; qupath.lib.images.writers.ome.ConvertCommand (implements java.lang.Runnable, qupath.lib.gui.extensions.Subcommand); qupath.lib.roi.ConvexHull; qupath.lib.analysis.features.CoocurranceMatrices; qupath.lib.gui.commands.CountingDialogCommand (implements javafx.beans.value.ChangeListener<T>, java.lang.Runnable); qupath.process.gui.commands.CreateChannelTrainingImagesCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateCompositeClassifierCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateRegionAnnotationsCommand (implements java.lang.Runnable); qupath.process.gui.commands.CreateTrainingImageCommand; qupath.lib.gui.scripting.c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:10986,plugin,plugins,10986,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"ssageType. java.lang.Object; java.lang.Enum<InfoMessage.MessageType>; qupath.lib.gui.actions.InfoMessage.MessageType. All Implemented Interfaces:; Serializable, Comparable<InfoMessage.MessageType>, Constable. Enclosing class:; InfoMessage. public static enum InfoMessage.MessageType; extends Enum<InfoMessage.MessageType>; The type of message, which can be used for styling. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ERROR. Error or exception. INFO. Information only. WARN. Warning. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static InfoMessage.MessageType; valueOf(String name). Returns the enum constant of this class with the specified name. static InfoMessage.MessageType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. INFO; public static final InfoMessage.MessageType INFO; Information only. WARN; public static final InfoMessage.MessageType WARN; Warning. ERROR; public static final InfoMessage.MessageType ERROR; Error or exception. Method Details. values; public static InfoMessage.MessageType[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static InfoMessage.MessageType valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace char",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html:1419,inherit,inherited,1419,javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.MessageType.html,1,['inherit'],['inherited']
Modifiability,"sses.Reclassifier. Helper class to store an object prior to reclassifying it, including a classification probability. recomputeBounds() - Method in class qupath.lib.roi.PointsROI;  ; recordingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the recording property of this ViewTracker. RECTANGLE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Rectangle drawing tool. RECTANGLE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; RECTANGLE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; RectangleROI - Class in qupath.lib.roi. ROI representing a square or rectangle (unrotated). red(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit red value from a packed RGB value. Red - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel only. RED - Static variable in class qupath.lib.common.ColorTools. Packed int representing red. RED - Static variable in class qupath.lib.images.servers.ImageChannel. Default red channel for RGB images. Red_chromaticity - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red chromaticity value, red / max(1, red + green + blue). Red_OD - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Red channel optical densities. redChromaticity(int) - Static method in class qupath.lib.color.ColorTransformer. Extract red chromaticity value from a packed RGB pixel, red / max(1, red + green + blue). redo() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; redo() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request redo. redo() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; REDO - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; redoAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; redoOnce() - Method in class qupath.lib.gui.UndoRedoMa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:831988,variab,variable,831988,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ssifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects,; double buffer). Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> pathObjects). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects). Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. static boolean; standardizeClassifications(Collection<PathObject> pathObjects). Standardize the classifications for a collection of objects. static boolean; standardizeClassifications(Collection<PathObject> pathObjects,; Comparator<String> comparator). Standardize the classifications for a collection of objects. static void; swapNameAndClass(PathObject pathObject,; boolean includeColor). Swap the name and PathClass of an object. static void; toggleObjectsLocked(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:12218,extend,extends,12218,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"ssifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixel sizes. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. static boolean; setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for an ImageServer to have the required pixel sizes and z",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:39368,extend,extends,39368,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ssifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:474003,plugin,plugins,474003,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ss ; LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. static enum ; LocalNormalization.NormalizationType. Local normalization type. static class ; LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. Constructor Summary; Constructors. Constructor; Description; LocalNormalization();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border). Apply local normalization to a stack of Mats representing a z-stack. static void; gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border). Apply local normalization to a 2D Mat. static void; gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border). Apply 3D normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalNormalization; public LocalNormalization(). Method Details. gaussianNormalize; public static void gaussianNormalize(List<Mat> stack,; LocalNormalization.LocalNormalizationType type,; PixelCalibration cal,; int border); Apply local normalization to a stack of Mats representing a z-stack. Parameters:; stack - ; type - ; cal - ; border - . gaussianNormalize2D; public static void gaussianNormalize2D(Mat mat,; double sigma,; double sigmaVariance,; int border); Apply local normalization to a 2D Mat. Parameters:; mat - ; sigma - ; sigmaVariance - ; border - . gaussianNormalize3D; public static void gaussianNormalize3D(List<Mat> stack,; double sigmaX,; double sigmaY,; double sigmaZ,; double varianceSigmaX,; double varianceSigmaY,; double varianceSigmaZ,; int border); Apply 3D normalization.; ; The algorithm works as follows:; ; A Gaussian filter is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html:1786,inherit,inherited,1786,javadoc/docs/qupath/opencv/tools/LocalNormalization.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/LocalNormalization.html,2,['inherit'],['inherited']
Modifiability,"ss java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CLASSIFICATION. Refers to ClassificationModel. DEFAULT. Default Model class. DETECTION. Refers to DetectionModel. KEYPOINTS. Refers to KeypointsModel. SEGMENTATION. Refers to SegmentationModel. TEXT_DETECTION_DB. Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST. Refers to TextDetectionModel_EAST. TEXT_RECOGNITION. Refers to TextRecognitionModel. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OpenCVDnn.ModelType; valueOf(String name). Returns the enum constant of this class with the specified name. static OpenCVDnn.ModelType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final OpenCVDnn.ModelType DEFAULT; Default Model class. DETECTION; public static final OpenCVDnn.ModelType DETECTION; Refers to DetectionModel. SEGMENTATION; public static final OpenCVDnn.ModelType SEGMENTATION; Refers to SegmentationModel. CLASSIFICATION; public static final OpenCVDnn.ModelType CLASSIFICATION; Refers to ClassificationModel. KEYPOINTS; public static final OpenCVDnn.ModelType KEYPOINTS; Refers to KeypointsModel. TEXT_RECOGNITION; public static final OpenCVDnn.ModelType TEXT_RECOGNITION; Refers to TextRecognitionModel. TEXT_DETECTION_DB; public static final OpenCVDnn.ModelType TEXT_DETECTION_DB; Refers to TextDetectionModel_DB. TEXT_DETECTION_EAST; public static final OpenCVDnn.ModelType TEXT_DETECTION_EAST; Refers to TextDetectionModel_EAST. Method Details. values; public static OpenCVDnn.ModelType[] values(); Returns an array containing the constan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html:1898,inherit,inherited,1898,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.ModelType.html,2,['inherit'],['inherited']
Modifiability,"ss qupath.lib.gui.scripting.DefaultScriptEditor; beautifySourceAction, comboPasteEscape, completionCodeCombination, compressSourceAction, copyAction, cutAction, findAction, insertAllDefaultImportAction, insertDetectionMeasurementsAction, insertMuAction, insertObjectClassifiersAction, insertPixelClassifiersAction, insertQPExImportAction, insertQPImportAction, killRunningScriptAction, pasteAction, pasteAndEscapeAction, redoAction, runProjectScriptAction, runProjectScriptNoSaveAction, runScriptAction, runSelectedAction, smartEditing, smartEditingAction, undoAction. Constructor Summary; Constructors. Constructor; Description; RichScriptEditor(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; applyCompletion(EditableText control,; AutoCompletions.Completion completion). Insert the text from the completion to the editable text. protected ScriptEditorControl<? extends Region>; getNewConsole();  ; protected ScriptEditorControl<? extends Region>; getNewEditor();  . Methods inherited from class qupath.lib.gui.scripting.DefaultScriptEditor; addNewScript, currentLanguageProperty, currentSyntaxProperty, getClipboardText, getCurrentConsoleControl, getCurrentEditorControl, getCurrentLanguage, getCurrentScriptTab, getCurrentSyntax, getCurrentText, getSelectedText, getStage, pasteFromClipboard, promptToSetFontSize, scriptRunning, sendLogToConsoleProperty, showEditor, showScript, showScript, supportsFile. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RichScriptEditor; public RichScriptEditor(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. getNewEditor; protected ScriptEditorControl<? extends Region> getNewEditor(). Overrides:; getNewEditor in class DefaultScriptEditor. applyCompletion; protected void applyCompletion(EditableT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html:1986,extend,extends,1986,javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/RichScriptEditor.html,2,['extend'],['extends']
Modifiability,"ss qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get all selected objects that are instances of a supported class. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:2287,inherit,inherited,2287,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,5,"['extend', 'inherit', 'plugin']","['extends', 'inherited', 'plugin', 'plugins']"
Modifiability,"ss qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anyth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:3109,plugin,plugin,3109,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugin']
Modifiability,"ss qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class qupath.lib.plugins.parameters.StringParameter; class StringParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Package qupath.lib.plugins.workflow. Class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep; class DefaultScriptableWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. map; Map<String,?> map. name; String name. script; String script. Class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep; class RunSavedClassifierWorkflowStep extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. classifierPath; String classifierPath. name; String name. Class qupath.lib.plugins.workflow.SimplePluginWorkflowStep; class SimplePluginWorkflowStep extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.plugins.workflow.Workflow; class Workflow extends Object implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:9717,extend,extends,9717,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"st annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames,; boolean signedDistances). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DistanceTools; public DistanceTools(). Method Details. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - if true, split the classification name. For example, if an image contains classifications for both ""CD3: CD4"" and ""CD3: CD8"",; distances will be calculated for all components (e.g. ""CD3"", ""CD4"" and ""CD8"").; See Also:. detectionToAnnotationDistances(ImageData, boolean, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html:3904,inherit,inherited,3904,javadoc/docs/qupath/lib/analysis/DistanceTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DistanceTools.html,1,['inherit'],['inherited']
Modifiability,"st) - Method in class qupath.lib.gui.images.servers.PathHierarchyImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Read a single image tile. readTile(TileRequest) - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.LabeledImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.SparseImageServer;  ; readTile(TileRequest) - Method in class qupath.lib.images.servers.WrappedBufferedImageServer;  ; readURLAsString(URL, int) - Static method in class qupath.lib.common.GeneralTools. Read URL as String, with specified timeout in milliseconds. rearrangeByStride(Collection<T>, T[], int) - Static method in class qupath.lib.plugins.AbstractPlugin. Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. RearrangeRGBImageServer - Class in qupath.lib.images.servers. Simple image server to swap the red and blue channels of an RGB image. RearrangeRGBImageServer(ImageServer<BufferedImage>, String) - Constructor for class qupath.lib.images.servers.RearrangeRGBImageServer;  ; RECENT_COMMAND_LIST - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; Reclassifier - Class in qupath.lib.objects.classes. Helper class when classifying PathObjects. Reclassifier(PathObject, PathClass, boolean) - Constructor for class qupath.lib.objects.classes.Reclassifier. Helper class to store an object prior to reclassifying it. Reclassifier(PathObject, PathClass, boolean, double) - Constructor for class qupath.lib.objects.classes.Reclassifier. Helper class to store an object prior to reclassifying it, including a classification probability. recomputeBounds() - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:830130,plugin,plugins,830130,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"st<Runnable>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; addRunnableTasks(ImageData<BufferedImage>, PathObject, List<Runnable>) - Method in class qupath.opencv.DetectCytokeratinCV;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractPlugin. For a specified parent object, generate a task to run. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Intercepts the 'standard' addRunnableTasks to (if necessary) insert ParallelTileObjects along the way,; thereby breaking an excessively-large parentObject into more manageable pieces. addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; addRunnableTasks(ImageData<T>, PathObject, List<Runnable>) - Method in class qupath.lib.plugins.objects.SmoothFeatu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:27433,plugin,plugins,27433,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"stChannelPane; extends BorderPane; A pane responsible for the display and selection of channels from an image display.; This uses a table to display the channels, and allows the user to adjust the selection of channels - as well as names; and colors. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<ChannelDisplayInfo>; currentChannel. Get the currently-selected channel. BooleanProperty; disableToggleMenuItems. Property to disable options to toggle the visibility of channels. ObjectProperty<ImageDisplay>; imageDisplay. Property for the image display that should be shown and managed by this pane. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMouseDragExited, onMouseDragged, onMouseDragOver, onMouseDragReleased, onMouseEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:1703,inherit,inherited,1703,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"stance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2081,plugin,plugins,2081,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugins']
Modifiability,"stance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2315,plugin,plugins,2315,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['plugin'],['plugins']
Modifiability,"static final PathTool RECTANGLE; Rectangle drawing tool. ELLIPSE; public static final PathTool ELLIPSE; Ellipse drawing tool. LINE; public static final PathTool LINE; Line drawing tool. ARROW_START; public static final PathTool ARROW_START; Arrow drawing tool, with arrowhead at the start. ARROW_END; public static final PathTool ARROW_END; Arrow drawing tool, with arrowhead at the end. ARROW_DOUBLE; public static final PathTool ARROW_DOUBLE; Arrow drawing tool, with arrowhead at both ends. LINE_OR_ARROW; public static final PathTool LINE_OR_ARROW; Extended PathTool that can switch between drawing lines or arrows. POLYGON; public static final PathTool POLYGON; Polygon drawing tool (closed). POLYLINE; public static final PathTool POLYLINE; Polyline drawing tool (open). BRUSH; public static final PathTool BRUSH; Brush drawing tool. POINTS; public static final PathTool POINTS; Points annotation and counting tool. Constructor Details. PathTools; public PathTools(). Method Details. createTool; public static PathTool createTool(EventHandler<MouseEvent> handler,; String name,; Node icon); Create a tool from the specified MouseEvent handler.; When the tool is registered, the handler will be called for any mouse event. Parameters:; handler - the mouse event handler; name - the name of the tool; icon - the (toolbar) icon of the tool; Returns:; a new PathTool. createExtendedTool; public static PathTool createExtendedTool(PathTool... tools). createTool; public static <T extends Event> PathTool createTool(EventType<T> type,; EventHandler<T> handler,; String name,; Node icon); Create a tool from the specified event handler. Parameters:; type - the type of the event that should be handled; handler - the event handler; name - the name of the tool; icon - the (toolbar) icon of the tool; Returns:; a new PathTool. getTool; public static PathTool getTool(String pathToolString); Return the PathTool corresponding to the specified String. Parameters:; pathToolString - ; Returns:; pathTool. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html:3751,extend,extends,3751,javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/tools/PathTools.html,1,['extend'],['extends']
Modifiability,"sted Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:1882,inherit,inherited,1882,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,1,['inherit'],['inherited']
Modifiability,"sted classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; BufferedImageOverlay(OverlayOptions options). Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addAllRegions(ImageServer<BufferedImage> server,; int level). Add all regions for a specific level of an ImageServer. void; changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:2146,extend,extends,2146,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['extend'],['extends']
Modifiability,"sted; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class CommandLineTaskRunner.CommandLineProgressMonitor. java.lang.Object; qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor. All Implemented Interfaces:; SimpleProgressMonitor. Enclosing class:; CommandLineTaskRunner. public static class CommandLineTaskRunner.CommandLineProgressMonitor; extends Object; implements SimpleProgressMonitor; A SimpleProgressMonitor that sends progress to a log. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CommandLineProgressMonitor();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CommandLineProgressMonitor; public CommandLineProgressMonitor(). Method Details. startMonitoring; public void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Description copied from interface: SimpleProgressMonitor; Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Specified by:; startMonitoring in interface SimpleProgressMonitor; Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html:1204,plugin,plugin,1204,javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/CommandLineTaskRunner.CommandLineProgressMonitor.html,1,['plugin'],['plugin']
Modifiability,"sted | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathObject. java.lang.Object; qupath.lib.objects.PathObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathROIObject, PathRootObject. public abstract class PathObject; extends Object; implements Externalizable; Fundamental object of interest in QuPath.; ; Used as a base class for annotations, detections, cells, TMA cores, tiles... Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathObject(). Default constructor. PathObject(MeasurementList measurements). Create a PathObject with a specific measurement list. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; void; addChildObject(PathObject pathObject). Add an object to the child list of this object. void; addChildObjects(Collection<? extends PathObject> pathObjects). Add a collection of objects to the child list of this object. void; addPathObject(PathObject pathObject). Deprecated.; since v0.4.0, replaced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:1242,extend,extends,1242,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['extend'],['extends']
Modifiability,"sting objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName, runPlugin. Constructor Details. AbstractDetectionPlugin; public AbstractDetectionPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getParentObjects; protected Collection<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1992,plugin,plugins,1992,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability,"st params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:4125,plugin,plugin,4125,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugin']
Modifiability,surementListType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.PathObjectFilter. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.objects.utils.Tiler.TileAlignment. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.plugins.ParallelTileObject.Status. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.roi.interfaces.ROI.RoiType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.roi.RoiTools.CombineOp. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.tools.LocalNormalization.NormalizationType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns t,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1084441,plugin,plugins,1084441,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"surementManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml.pixel; Class PixelClassificationMeasurementManager. java.lang.Object; qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. public class PixelClassificationMeasurementManager; extends Object; Helper class to compute area-based measurements for regions of interest based on pixel classification. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassificationMeasurementManager(ImageServer<BufferedImage> classifierServer). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; addMeasurements(Collection<? extends PathObject> objectsToMeasure,; String measurementID). Add measurements to specified objects. protected int; calculatePreferredParallelism(). Make a semi-educated guess as to an appropriate number of threads to use. Number; getCachedMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject if all tiles are cached,; otherwise return null. Number; getCachedMeasurementValue(ROI roi,; String name). Get the value of a single measurement for a specified ROI if all tiles are cached,; otherwise return null. List<String>; getMeasurementNames(). Get the names of all measurements that may be returned. Number; getMeasurementValue(PathObject pathObject,; String name). Get the value of a single measurement for a specified PathObject, computing it if it is unavailable. Number; getMeasurementValue(PathObject pathObject,; String name,; boolean cachedOnly). Deprecated.; use getMeasurementValue(PathObject, String) or getCachedM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html:1033,extend,extends,1033,javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassificationMeasurementManager.html,2,['extend'],['extends']
Modifiability,"surements(OutputStream) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportObjectsAsGeoJSON(File, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. exportObjectsAsGeoJSON(OutputStream, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. exportObjectsAsGeoJSON(Path, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. ExportObjectsCommand - Class in qupath.lib.gui.commands. Command to export object(s) in GeoJSON format to an output file. exportObjectsToGeoJson(Collection<? extends PathObject>, String, String, String...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportObjectsToGeoJson(Collection<? extends PathObject>, String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportPreferences(OutputStream) - Static method in class qupath.lib.gui.prefs.PathPrefs. Export preferences to a stream. exportSelectedObjectsToGeoJson(String, String, String...) - Static method in class qupath.lib.scripting.QP. Export the selected objects to an output file as GeoJSON. exportSelectedObjectsToGeoJson(String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export the selected objects to an output file as GeoJSON. exportSnapshotActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ExportSnapshotActions() - Constructor for class qupath.lib.gui.actions.menus.FileMen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:290568,extend,extends,290568,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"surements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:1557,inherit,inherited,1557,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,1,['inherit'],['inherited']
Modifiability,"t IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static boolean; refreshDuplicateIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static void; refreshIDs(). Refresh all object IDs for the current hierarchy. static void; refreshIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy. static boolean; relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel the current TMA grid. static boolean; relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static void; removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the current image data. static void; removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the specified hierarchy. static void; removeObject(PathObject pathObject,; boolean keepChildren). Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(PathObject[] pathObjects,; boolean keepChildren). Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static boolean; removeObjectsOutsideImage(). Remove objects that are entirely outside the current image. static boolean; removeObjectsOutsideImage(boolean ignoreIntersecting). Remove objects that are entirely or pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:26527,extend,extends,26527,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"t ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. static void; smoothMeasurements(List<PathObject> pathObjects,; List<String> measurements,; double fwhmPixels,; String fwhmString,; boolean withinClass,; boolean useLegacyNames). Using the centroids of the ROIs within PathObjects, 'smooth' measurements by summing up the corresponding measurements of; nearby objects, weighted by centroid distance. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SmoothFeaturesPlugin; public SmoothFeaturesPlugin(); Default constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html:2447,inherit,inherited,2447,javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SmoothFeaturesPlugin.html,2,['inherit'],['inherited']
Modifiability,"t a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChann",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8008,extend,extends,8008,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['extend'],['extends']
Modifiability,"t a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OMEPyramidWriter.Builder. Builder class to define parameters when exporting an image region as OME-TIFF,; possibly as an image pyra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:32260,plugin,plugins,32260,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugins']
Modifiability,"t a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) when there is no data. setHierarchy(PathObjectHierarchy) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the contents of this hierarchy to be the same as that of another hierarchy. setID(UUID) - Method in class qupath.lib.objects.PathObject. Set the ID for this object. setImageData(ImageData<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current image data for the script. setImageData(ImageData<?>, Collection<? extends PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set the ImageData and a collection of objects to measure. setImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the current image for this viewer. setImageData(ImageData<BufferedImage>, boolean) - Method in class qupath.lib.display.ImageDisplay. Set the ImageData to a new value. setImageJPath(String) - Static method in class qupath.imagej.gui.IJExtension. Set the path for a local ImageJ installation, if required. setImageName(String) - Method in interface qupath.lib.projects.ProjectImageEntry. Set the image name for this project entry. setImageName(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Set the name property of the metadata for an ImageServer. setImageType - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; setImageType(String) - Static method in class qupath.lib.scripting.QP. Se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:929183,extend,extends,929183,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"t argument, returning 'true' if the argument is valid and it's possible to run the plugin. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. protected static <T> boolean; rearrangeByStride(Collection<T> input,; T[] output,; int stride). Test method for rearranging a collection so that entries are interleaved with a regularity given by stride. protected boolean; requestHierarchyUpdate(). Optionally request a hierarchy update after the tasks have run. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:2732,plugin,plugins,2732,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugins']
Modifiability,"t entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). getProjectExtension() - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file, without the 'dot'. getProjectExtension(boolean) - Static method in class qupath.lib.projects.ProjectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:493671,plugin,plugins,493671,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"t from an image, using Parameters. static class ; MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. static class ; MeasurementProcessor.Measurements. Methods to create custom measurements. Constructor Summary; Constructors. Constructor; Description; MeasurementProcessor();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static PixelProcessor.Builder<BufferedImage,BufferedImage,Map<String,? extends Number>>; builder(Collection<? extends MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>> measurements). Create a new builder for a PixelProcessor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements). Create a processor that can make custom measurements for an image object. static <S,; T> Processor<S,T,Map<String,? extends Number>>; createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement). Create a processor that can make custom measurements for an image object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MeasurementProcessor; public MeasurementProcessor(). Method Details. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(MeasurementProcessor.CustomMeasurement<S,T>... measurement); Create a processor that can make custom measurements for an image object.; ; Note that it assumes that all pixels can fit in memory, therefore it is not suitable for large images; or tiling. Type Parameters:; S - ; T - ; Parameters:; measurement - ; Returns:. createProcessor; public static <S,; T>; Processor<S,T,Map<String,? extends Number>> createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S,T>> measurements); Create",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html:2077,extend,extends,2077,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.html,1,['extend'],['extends']
Modifiability,"t of file extensions for which Bio-Formats should always be used. boolean; requestParallelization(). Returns true if multiple readers may be created for different threads, to enable parallel image reading. void; setBioformatsEnabled(boolean bioformatsEnabled). Set whether Bio-Formats should be enabled or disabled (in favor of other readers). void; setFilesOnly(boolean filesOnly). Set whether Bio-Formats should support only local files (rather than any URL). void; setMemoizationTimeMillis(int memoizationTimeMillis). Set the number of milliseconds that must elapse when opening an image before a memoization file is generated. void; setPathMemoization(String pathMemoization). Set the directory where memoization files should be written. void; setReaderOptions(Map<String,String> options). Set additional arguments that should be passed to readers. void; setRequestParallelization(boolean requestParallelization). Optionally enable or disable parallelization when reading images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ALLOW_MEMOIZATION_PROPERTY; public static String ALLOW_MEMOIZATION_PROPERTY; System property controlling whether memoization is allowed or not.; If set to false, this is a hint that memoization should not be supported - but it is up to consumers to enforce that.; ; Default is to set status based upon Java version, with 17+ turning memoization off.; ; See https://github.com/qupath/qupath/issues/957. Method Details. getPathMemoization; public String getPathMemoization(); Get the path to the directory where memoization files should be written, or null if no path is set. Returns:. setPathMemoization; public void setPathMemoization(String pathMemoization); Set the directory where memoization files should be written.; This can be null, in which case memoization files may be written in the same directory as the original image. Parameters:; pathMemoization - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:3034,inherit,inherited,3034,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,2,['inherit'],['inherited']
Modifiability,"t rootObject. tmaGrid; TMAGrid tmaGrid. Package qupath.lib.plugins. Class qupath.lib.plugins.ParallelTileObject; class ParallelTileObject extends PathTileObject implements Externalizable. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.plugins.parameters. Class qupath.lib.plugins.parameters.BooleanParameter; class BooleanParameter extends qupath.lib.plugins.parameters.AbstractParameter<Boolean> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.ChoiceParameter; class ChoiceParameter extends qupath.lib.plugins.parameters.AbstractParameter<S> implements Serializable. serialVersionUID:; 1L. Serialized Fields. choices; List<S> choices. Class qupath.lib.plugins.parameters.DoubleParameter; class DoubleParameter extends NumericParameter<Double> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.EmptyParameter; class EmptyParameter extends qupath.lib.plugins.parameters.AbstractParameter<String> implements Serializable. serialVersionUID:; 1L. Serialized Fields. isTitle; boolean isTitle. Class qupath.lib.plugins.parameters.IntParameter; class IntParameter extends NumericParameter<Integer> implements Serializable. serialVersionUID:; 1L. Class qupath.lib.plugins.parameters.NumericParameter; class NumericParameter extends qupath.lib.plugins.parameters.AbstractParameter<S extends Number> implements Serializable. serialVersionUID:; 1L. Serialized Fields. maxValue; double maxValue. minValue; double minValue. unit; String unit. Class qupath.lib.plugins.parameters.ParameterList; class ParameterList extends Object implements Serializable. serialVersionUID:; 1L. Serialized Fields. emptyCount; int emptyCount. params; Map<String,Parameter<?>> params. titleCount; int titleCount. Class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:8389,extend,extends,8389,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"t the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. static void; launchInstanceFromSwing(). Static method to launch QuPath from within a Swing/AWT application. Object; lookupAccelerator(String combo). Get the action or menu item associated with an accelerator. Object; lookupAccele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6372,extend,extends,6372,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['extend'],['extends']
Modifiability,"t time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the name of the command. getTextField(Parameter<?>, int) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; getThickStrokeWidth(double) - Method in class qupath.lib.gui.viewer.OverlayOptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:529935,plugin,plugins,529935,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"t to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options). Export specified objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export the selected objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export the selected objects to an output file as GeoJSON. static boolean; fileExists(String path). Query if a file exists. static void; findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map for the current image. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:15679,extend,extends,15679,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"t tumor regions stained with cytokeratin. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DetectCytokeratinCV();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:1802,plugin,plugins,1802,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['plugin'],['plugins']
Modifiability,"t when drawing BufferedImages. AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. AbstractImageServer<T>. Abstract implementation of ImageServer providing some common functionality. AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractObjectClassifier<T>. Abstract class to help with the creation of object classifiers. AbstractOverlay. Abstract class to help with implementing PathOverlays. AbstractOverlay.LocationStringFunction. Define a function to perform the task of PathOverlay.getLocationString(ImageData, double, double, int, int). AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. AbstractTileableImageServer. Abstract ImageServer for BufferedImages that internally breaks up requests into constituent tiles. ActionAccelerator. Annotation used to specify a preferred accelerator for an an action. ActionConfig. Annotation indicating the a key in the external resources file containing ; the menu, text and (optional) description. ActionIcon. Default icon for an action. ActionMenu. Annotation indicating the menu path where an action should be installed. ActionMethod. Annotation indicating that a method should be converted to an Action if possible. ActionTools. Helper methods for generating and configuring Actions and UI elements. ActionTools.ActionBuilder. Builder class for custom Action objects. AffineTransformImageServer. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransforms. Helper class for working with affine transforms. AnalyzeMenuActions; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:1573,plugin,plugin,1573,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['plugin'],['plugin']
Modifiability,"t() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401383,plugin,plugins,401383,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"t(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. Boolean; getValue(). Get the current set value (may be null). Boolean; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(Boolean value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). Set last value using a string; implementing classes may need to parse this. boolean; setValue(Boolean value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; Thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:2107,inherit,inherited,2107,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,2,['inherit'],['inherited']
Modifiability,"t(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current project. FLAT - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Flat cap. flatness(double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the flatness for any operation where a PathIterator is required. flatten(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Flatten a Mat to give a single column. FLOAT - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of floats. FLOAT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit floating point. FLOAT64 - Enum constant in enum class qupath.lib.images.servers.PixelType. 64-bit floating point. floor() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that floors floating point values. floor(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Floor values in a floating point Mat. FLUORESCENCE - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Fluorescence image. FLUORESCENCE - Static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:311026,plugin,plugins,311026,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"t, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParamete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:3378,plugin,plugin,3378,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['plugin'],['plugin']
Modifiability,"t, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Returns an empty ParameterList. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:3229,plugin,plugin,3229,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability,"t. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2701,inherit,inherited,2701,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"t. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3196,inherit,inherited,3196,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['inherit'],['inherited']
Modifiability,"t. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; supportsImage(PixelType pixelType,; int nChannels,; boolean isRGB). Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. String; toFriendlyString(). Get a friendlier string representation. static OMEPyramidWriter.CompressionType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.CompressionType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UNCOMPRESSED; public static final OMEPyramidWriter.CompressionType UNCOMPRESSED; No compression (faster to write, no loss of information, but large file sizes). DEFAULT; public static final OMEPyramidWriter.CompressionType DEFAULT; Default (QuPath will select compression option based on image size and type, may be lossless or lossy). JPEG; public static final OMEPyramidWriter.CompressionType JPEG; JPEG compression (only for single channel or RGB 8-bit images). J2K; public static final OMEPyramidWriter.CompressionType J2K; Lossless JPEG-2000 compression. J2K_LOSSY; public static final OMEPyramidWriter.CompressionType J2K_LOSSY; Lossy JPEG-2000 compression. LZW; public static final OMEPyramidWriter.CompressionType LZW; LZW compression. ZLIB; public static final OMEPyramidWriter.CompressionType ZLIB; ZLIB compression. Method Details. values; public static OMEPyramidWriter.CompressionType[] ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html:2720,inherit,inherited,2720,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,2,['inherit'],['inherited']
Modifiability,"t.DisplayMode. Show as bars. barChart() - Static method in class qupath.lib.gui.charts.Charts. Create a Charts.ScatterChartBuilder for generating a custom scatter plot. baseClassification(PathClass...) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:53794,extend,extends,53794,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"t.removeChildObjects(Collection). removePathObjectSelectionListener(PathObjectSelectionListener) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Remove listener for selection changes. removeProperty(String) - Method in class qupath.lib.images.ImageData. Remove a specified property. removePropertyChangeListener(PropertyChangeListener) - Method in class qupath.lib.images.ImageData. Remove a property change listener. removeRow(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager. Try to remove the row containing the specified viewer, notifying the user if this isn't possible. removeSmallAreas(ByteProcessor, double, boolean) - Static method in class qupath.imagej.processing.RoiLabeling. Remove objects having small areas, defined in terms of pixels. removeSmallPieces(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Remove small fragments and fill small holes of an area ROI. removeStep(int) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, identified by its list index. removeStep(WorkflowStep) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a single step, firing an update event if the step was successfully removed. removeSteps(Collection<WorkflowStep>) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a collection of steps, firing an update event if the workflow was changed. removeTextAppendableFX(TextAppendable) - Static method in class qupath.lib.gui.logging.LogManager. Deregister a TextAppendable so that it will no longer be informed of logging events. removeTileListener(TileListener<BufferedImage>) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; removeViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Remove a viewer listener. removeWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Remove a listener for changes to the workflow. RenderedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:851694,plugin,plugins,851694,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"t.tissue.SimpleTissueDetection2; qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. qupath.lib.algorithms.CoherenceFeaturePlugin; qupath.opencv.features.DelaunayClusteringPlugin<T>; qupath.lib.plugins.objects.DilateAnnotationPlugin<T>; qupath.lib.plugins.objects.FillAnnotationHolesPlugin<T>; qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin<T>; qupath.lib.algorithms.HaralickFeaturesPlugin; qupath.lib.algorithms.IntensityFeaturesPlugin; qupath.lib.algorithms.LocalBinaryPatternsPlugin; qupath.lib.plugins.objects.RefineAnnotationsPlugin<T>; qupath.lib.plugins.objects.ShapeFeaturesPlugin<T>; qupath.lib.plugins.objects.SmoothFeaturesPlugin<T>; qupath.lib.plugins.objects.SplitAnnotationsPlugin<T>; qupath.imagej.detect.cells.SubcellularDetection; qupath.imagej.detect.dearray.TMADearrayerPluginIJ. qupath.imagej.gui.ImageJMacroRunner. qupath.lib.plugins.AbstractTaskRunner (implements qupath.lib.plugins.TaskRunner). qupath.lib.plugins.CommandLineTaskRunner; qupath.lib.gui.TaskRunnerFX. qupath.lib.gui.actions.ActionTools; qupath.lib.gui.actions.ActionTools.ActionBuilder; qupath.lib.awt.common.AffineTransforms; qupath.lib.gui.actions.menus.AnalyzeMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions; qupath.lib.gui.panes.AnnotationPane (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); javafx.application.Application. qupath.lib.gui.QuPathApp; qupath.lib.gui.tma.QuPathTMAViewer. qupath.lib.roi.AreaROI (implements java.io.Serializable); qupath.lib.analysis.stats.ArrayWrappers; qupath.lib.scripting.languages.AutoCompletions; qupath.lib.gui.actions.AutomateActions; qupath.lib.gui.actions.menus.AutomateMenuActions (implements qupath.lib.gui.actions.menus.MenuActions); qupath.lib.gui.actions.menus.AutomateMenuActions.Actions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:7358,plugin,plugins,7358,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"t; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; getDescription, getLastResultsDescription, getName. Constructor Details. AbstractPlugin; public AbstractPlugin(). Method Details. getTasks; protected Collection<Runnable> getTasks(ImageData<T> imageData); Get a collection of tasks to perform.; ; This will be called from runPlugin(TaskRunner, ImageData, String) after a call to parseArgument(ImageData, String). The default implementation simply calls getParentObjects(ImageData), then addRunnableTasks(ImageData, PathObject, List); for every parent object that was returned. Parameters:; imageData - ; Returns:. requestHierarchyUpdate; protected boolean requestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:3686,plugin,plugin,3686,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugin']
Modifiability,"t; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2362,inherit,inherited,2362,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['inherit'],['inherited']
Modifiability,"t; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2202,inherit,inherited,2202,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,2,['inherit'],['inherited']
Modifiability,"t; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Enclosing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); Get the requested pixel size for the density map. This may be null if an appropriate resolution can be generated automatically. Returns:. getDensityType; public DensityMaps.DensityMapType getDensityType(); Get the normalization type of the density map. Returns:. getMainObjectFilter; public PathObjectPredicates.PathObjectPredicate getMainObjectFilter(); Get the primary object filter. Returns:. getSecondaryObjectFilters; public Map<String",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html:1432,inherit,inherited,1432,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,1,['inherit'],['inherited']
Modifiability,"t; qupath.lib.extension.svg.SvgExtension. All Implemented Interfaces:; QuPathExtension. public class SvgExtension; extends Object; implements QuPathExtension; Extension for SVG image export. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; class ; SvgExtension.SvgActions;  . Constructor Summary; Constructors. Constructor; Description; SvgExtension();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). A short description of the extension for displaying in the main GUI. String; getName(). A readable name for the extension. Version; getQuPathVersion(). Returns the version stored within this jar, because it is matched to the QuPath version. void; installExtension(QuPathGUI qupath). Install the extension for a QuPathGUI instance. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.extensions.QuPathExtension; getVersion. Constructor Details. SvgExtension; public SvgExtension(). Method Details. installExtension; public void installExtension(QuPathGUI qupath); Description copied from interface: QuPathExtension; Install the extension for a QuPathGUI instance.; ; This generally involves adding new commands to appropriate menus.; ; Note that if an extension is only expected to be compatible with a specific QuPath version, ; this method provides an opportunity to test version compatibility before making any changes. Specified by:; installExtension in interface QuPathExtension; Parameters:; qupath - ; See Also:. QuPathGUI.getVersion(). getName; public String getName(); Description copied from interface: QuPathExtension; A readable name for the extension. Specified by:; getName in interface QuPathExtension; Returns:. getDescription; public String getDescription(); Description copied from interface: QuPathExtension; A short description of the e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html:1385,inherit,inherited,1385,javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgExtension.html,1,['inherit'],['inherited']
Modifiability,"tActions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions. Enclosing class:; ObjectsMenuActions. public class ObjectsMenuActions.SelectActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; RESET_SELECTION;  ; final org.controlsfx.control.action.Action; SELECT_ALL_DETECTIONS;  ; final org.controlsfx.control.action.Action; SELECT_ANNOTATIONS;  ; final org.controlsfx.control.action.Action; SELECT_BY_CLASSIFICATION;  ; final org.controlsfx.control.action.Action; SELECT_BY_PLANE;  ; final org.controlsfx.control.action.Action; SELECT_CELLS;  ; final org.controlsfx.control.action.Action; SELECT_TILES;  ; final org.controlsfx.control.action.Action; SELECT_TMA_CORES;  ; final org.controlsfx.control.action.Action; SEP_2;  ; final org.controlsfx.control.action.Action; SEP_3;  . Constructor Summary; Constructors. Constructor; Description; SelectActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. RESET_SELECTION; @ActionConfig(""Action.Objects.Select.reset""); @ActionAccelerator(""shortcut+alt+r""); public final org.controlsfx.control.action.Action RESET_SELECTION. SEP_2; public final org.controlsfx.control.action.Action SEP_2. SELECT_TMA_CORES; @ActionConfig(""Action.Objects.Select.tmaCores""); @ActionAccelerator(""shortcut+alt+t""); public final org.controlsfx.control.action.Action SELECT_TMA_CORES. SELECT_ANNOTATIONS; @ActionConfig(""Action.Objects.Select.annotations""); @ActionAccelerator(""shortcut+alt+a""); public final org.controlsfx.control.action.Action SELECT_ANNOTATIONS. SELECT_ALL_DETECTIONS; @ActionMenu(""Menu.Objects.Select.Detections""); @ActionConfig(""Action.Objects.Select.detections""); @ActionAccelerator(""shortcut+alt+d""); public final org.controlsfx.control.action.Action SELECT_ALL_DETECTIONS. SELECT_CELLS; @ActionMenu(""Menu.Objects.Select",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html:1407,inherit,inherited,1407,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.SelectActions.html,1,['inherit'],['inherited']
Modifiability,"tBuilder<T>; cells(). Set the filter to accept cell objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; detections(). Set the filter to accept all detection objects only. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(String pathClassName). Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; equalTo(PathClass pathClass). Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; filter(PathObjectFilter filter). Define the filter used to identify objects compatible with this classifier. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; threshold(double threshold). Set the threshold value used for the classification. ObjectClassifiers.ClassifyByMeasurementBuilder<T>; tiles(). Set the filter to accept tile objects only. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ClassifyByMeasurementBuilder; public ClassifyByMeasurementBuilder(String measurementName); Constructor. Parameters:; measurementName - name of the measurement used for classification (should be present within the object's MeasurementList). Method Details. filter; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> filter(PathObjectFilter filter); Define the filter used to identify objects compatible with this classifier. Parameters:; filter - ; Returns:; this builder. cells; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> cells(); Set the filter to accept cell objects only. Returns:; this builder. tiles; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> tiles(); Set the filter to accept tile objects only. Returns:; this builder. detections; public ObjectClassifiers.ClassifyByMeasurementBuilder<T> detections(); Set the filter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html:3812,inherit,inherited,3812,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifiers.ClassifyByMeasurementBuilder.html,1,['inherit'],['inherited']
Modifiability,"tClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVProcessor; public OpenCVProcessor(). Method Details. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(); Create an OutputHandler that attempts to convert the output into detection objects. Returns:. createDetectionOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createDetectionOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(); Create an OutputHandler that attempts to convert the output into annotation objects. Returns:. createAnnotationOutputHandler; public static <S,; T> OutputHandler<S,T,Mat> createAnnotationOutputHandler(Map<? extends Number,String> classificationMap); Create an OutputHandler that attempts to convert the output into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:4817,extend,extends,4817,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"tClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:4673,extend,extends,4673,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,5,"['Plugin', 'extend', 'plugin']","['PluginRunner', 'extends', 'plugin']"
Modifiability,"tColorDeconvolutionStains>; Enum for common stain defaults.; ; TODO: Switch to using an interface and permitting alternatives. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; H_DAB. Hematoxylin and DAB. H_E. Hematoxylin and eosin. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ColorDeconvolutionStains.DefaultColorDeconvolutionStains; valueOf(String name). Returns the enum constant of this class with the specified name. static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. H_E; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_E; Hematoxylin and eosin. H_DAB; public static final ColorDeconvolutionStains.DefaultColorDeconvolutionStains H_DAB; Hematoxylin and DAB. Method Details. values; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ColorDeconvolutionStains.DefaultColorDeconvolutionStains valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html:1946,inherit,inherited,1946,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.DefaultColorDeconvolutionStains.html,1,['inherit'],['inherited']
Modifiability,"tFillWidth(Node, Boolean) property for specified nodes. setFontSize(float) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the requested font size for the 'Show names' option. setGamma(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the gamma value for this viewer. setGridLines(GridLines) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the GridLines object that defines how a counting grid may be show in viewers. setGridSize(int, int) - Method in class qupath.lib.gui.viewer.ViewerManager. Set the grid to have a specific number of rows and columns. setHGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. setHidden(boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setHidden(boolean) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setHidden(boolean) - Method in interface qupath.lib.plugins.parameters.Parameter. Mark that a parameter should not be displayed to a user. setHiddenParameters(boolean, String...) - Method in class qupath.lib.plugins.parameters.ParameterList. Set the 'hidden' flag for parameters with the specified keys. setHideChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is hidden. setHideIfEmpty(boolean) - Method in class qupath.lib.gui.charts.HistogramChart. Request that the chart is automatically hidden (visibility set to false) w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:927711,plugin,plugins,927711,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathRootObject; class PathRootObject extends PathObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.PathTileObject; class PathTileObject extends PathDetectionObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Class qupath.lib.objects.TMACoreObject; class TMACoreObject extends PathROIObject implements Externalizable. serialVersionUID:; 1L. Serialization Methods. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Throws:; IOException; ClassNotFoundException. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Throws:; IOException. Package qupath.lib.objects.classes. Class qupath.lib.objects.classes.PathClass; class PathClass extends Object implements Serializable. serialVersionUID:; 1L. Serialization Methods. readResolve; protected Object readResolve(); throws ObjectStreamException; Called during deserialization to ensure that only a single instance of each PathClass exists.; Partly addresses https://github.com/qupath/qupath/issues/1306 (during standard deserialation,; but not from JSON). Throws:; ObjectStreamException. Serialized Fields. colorRGB; Integer colorRGB. name; String name. parentClass; PathClass parentClass. Package qupath.lib.objects.hierarchy. Class qupath.lib.objects",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/serialized-form.html:5988,extend,extends,5988,javadoc/docs/serialized-form.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/serialized-form.html,1,['extend'],['extends']
Modifiability,"tHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it is not). resize(double, double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; resize(BufferedImage, int, int, boolean) - Static method in class qupath.lib.awt.common.BufferedImageTools. Resize the image to have the requested width/height, using area averaging and bilinear interpolation. RESOLVE_HIERARCHY - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; resolveHierarchy() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Attempt to resolve the parent-child relationships between all objects within the hierarchy. resolveHierarchy() - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864912,plugin,plugins,864912,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tList.MeasurementListType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.measurements; Enum Class MeasurementList.MeasurementListType. java.lang.Object; java.lang.Enum<MeasurementList.MeasurementListType>; qupath.lib.measurements.MeasurementList.MeasurementListType. All Implemented Interfaces:; Serializable, Comparable<MeasurementList.MeasurementListType>, Constable. Enclosing interface:; MeasurementList. public static enum MeasurementList.MeasurementListType; extends Enum<MeasurementList.MeasurementListType>; Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DOUBLE. A list backed by an array of doubles. FLOAT. A list backed by an array of floats. GENERAL. A general list, which can contain any kind of measurement - at the expense of ; being rather memory-hungry. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementList.MeasurementListType; valueOf(String name). Returns the enum constant of this class with the specified name. static MeasurementList.MeasurementListType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Det",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html:1013,inherit,inherited,1013,javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.MeasurementListType.html,1,['inherit'],['inherited']
Modifiability,"tMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current project. FLAT - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Flat cap. flatness(double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the flatness for any operation where a PathIterator is required. flatten(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Flatten a Mat to give a single column. FLOAT - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of floats. FLOAT32 - Enum constant in enum class qupath.lib.images.servers.PixelType. 32-bit floating ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:310576,plugin,plugins,310576,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tObjects(PathObject pathObject,; Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all descendant objects with a specified type. Parameters:; pathObject - ; pathObjects - ; cls - ; Returns:. splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> pathObjects); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs. Parameters:; pathObjects - an input collection of objects, containing objects with different ROI types; Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection, Collection). splitAreasByLines; public static Map<PathObject,List<PathObject>> splitAreasByLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects); Given a collection of objects with area ROIs, split these using dividing lines extracted from objects; with line ROIs. Parameters:; areaObjects - objects with area ROIs; non-area ROIs will be ignored; lineObjects - objects with line ROIs; area ROIs can still be used, but will be treated as lines; Returns:; a map containing the original area objects as keys, and the split objects as values.; This only contains entries for objects that are split; if no objects are split, an empty map is returned.; Since:; v0.5.0; See Also:. splitAreasByLines(Collection). splitAreasByBufferedLines; public static Map<PathObject,List<PathObject>> splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer); Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. Parameters:; pathObjects - an input collection of objects, con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:33202,extend,extends,33202,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability,"tParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DoGSuperpixelsPlugin; public DoGSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item nam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html:2733,plugin,plugins,2733,javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/DoGSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"tParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params). Get the preferred pixel size that would be used for the specified ImageData and ParameterList. protected int; getTileOverlap(ImageData<BufferedImage> imageData,; ParameterList params). Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SLICSuperpixelsPlugin; public SLICSuperpixelsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:3228,plugin,plugins,3228,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['plugin'],['plugins']
Modifiability,"tPathClasses(). Get the classifications set by this classifier. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. getPathClasses; Collection<PathClass> getPathClasses(); Get the classifications set by this classifier. Returns:. classifyObjects; int classifyObjects(ImageData<T> imageData,; boolean resetExistingClass); Classify all compatible objects from an ImageData.; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data containing the object hierarchy; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. getCompatibleObjects(ImageData). classifyObjects; int classifyObjects(ImageData<T> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. classifyObjects(ImageData, boolean); getCompatibleObjects(ImageData). getCompatibleObjects; Collection<PathObject> getCompatibleObjects(ImageData<T> imageData); Get the objects from an ImageData that are compatible with this classifier. Parameters:; imageData - ; Returns:; a collection of compatible objects, or empty list if no compatible objects are fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html:2639,extend,extends,2639,javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/object/ObjectClassifier.html,1,['extend'],['extends']
Modifiability,"tPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>; qupath.lib.algorithms.TilerPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. public class TilerPlugin<T>; extends AbstractDetectionPlugin<T>; Simple plugin to create square tiles, which may later have measurements added. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TilerPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TilerPlugin; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:1425,plugin,plugin,1425,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugin']
Modifiability,"tProperty() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; selectedTool() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; selectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property containing the currently-selected PathTool. SELECTION_MODE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; SELECTION_MODE - Variable in class qupath.lib.gui.ToolManager;  ; selectionModeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Convert drawing tools to select objects, rather than creating new objects. selectObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Ensure the specified objects are selected. selectObjects(Collection<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set all objects in a collection to be selected, without any being chosen as the main object. selectObjects(Collection<? extends PathObject>, PathObject) - Static method in class qupath.lib.scripting.QP. Set all objects in a collection to be selected, including a specified main selected object. selectObjects(Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, Predicate<PathObject>) - Static method in class qupath.lib.scripting.QP. Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. selectObjects(PathObjectHierarchy, PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the specified hierarchy. selectObjects(PathObject...) - Static method in class qupath.lib.scripting.QP. Set one or more objects to be selected within the current hierarchy. selectObjectsByClass(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Set ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:898610,extend,extends,898610,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"tResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424580,plugin,plugins,424580,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tScriptLanguage;  ; getDefaultShortServerName(URI) - Static method in class qupath.lib.images.servers.ServerTools. Get the default shortened server name given the server's path. getDefaultStaticImports() - Method in class qupath.lib.scripting.ScriptParameters. Get default static imports that should be included with the script, where possible. getDefaultThumbnail(int, int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDefaultThumbnail(int, int) - Method in interface qupath.lib.images.servers.ImageServer. Get the default thumbnail for a specified z-slice and timepoint. getDefaultTileSize() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default tile size when writing OME-TIFF images. getDefaultTransformedMax(ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get default maximum value to use with a specific transform method. getDefaultValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:375393,plugin,plugins,375393,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tSnapshotActions; exportSnapshotActions;  ; final org.controlsfx.control.action.Action; OBJECT_IMPORT;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE;  ; final org.controlsfx.control.action.Action; OPEN_IMAGE_OR_URL;  ; final FileMenuActions.ProjectActions; projectActions;  ; final org.controlsfx.control.action.Action; QUIT;  ; final org.controlsfx.control.action.Action; RELOAD_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA;  ; final org.controlsfx.control.action.Action; SAVE_DATA_AS;  ; final org.controlsfx.control.action.Action; SEP_3;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SEP_5;  ; final org.controlsfx.control.action.Action; SEP_6;  ; final org.controlsfx.control.action.Action; SEP_7;  ; final org.controlsfx.control.action.Action; SEP_8;  ; final FileMenuActions.TmaActions; tmaActions;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. projectActions; @ActionMenu(""Menu.File.Project""); public final FileMenuActions.ProjectActions projectActions. SEP_3; public final org.controlsfx.control.action.Action SEP_3. OPEN_IMAGE; @ActionConfig(""Action.File.open""); @ActionAccelerator(""shortcut+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE. OPEN_IMAGE_OR_URL; @ActionConfig(""Action.File.openUri""); @ActionAccelerator(""shortcut+shift+o""); public final org.controlsfx.control.action.Action OPEN_IMAGE_OR_URL. RELOAD_DATA; @ActionConfig(""Action.File.reloadData""); @ActionAccelerator(""shortcut+r""); public final org.controlsfx.control.action.Action RELOAD_DATA. SEP_4; public final org.controlsfx.control.action.Action SEP_4. SAVE_DATA_AS; @ActionConfig(""Action.File.saveAs""); @ActionAccelerator(""shortcut+shift+s""); public final org.controlsfx.control.action.Action SAVE_DATA_AS. SAVE_DATA;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html:1803,inherit,inherited,1803,javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/FileMenuActions.Actions.html,1,['inherit'],['inherited']
Modifiability,"tType. A change was made to one or more object measurements. CHANGE_OTHER - Enum constant in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. A change was made to one or more objects that is more complex than the other changes allow for. changed(ObservableValue<? extends QuPathViewer>, QuPathViewer, QuPathViewer) - Method in class qupath.lib.gui.UndoRedoManager;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.CountingDialogCommand;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.commands.PathObjectGridView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.AnnotationPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ImageDetailsPane;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.PathObjectHierarchyView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.SlideLabelView;  ; changed(ObservableValue<? extends ImageData<BufferedImage>>, ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:90884,extend,extends,90884,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ta(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. createColorTransformServer; public static ImageServer<BufferedImage> createColorTransformServer(ImageServer<BufferedImage> server,; List<ChannelDisplayInfo> channels); Create an ImageServer for which the channels are created dynamically from a list of ChannelDisplayInfos. Parameters:; server - the server providing the underlying data; channels - ChannelDisplayInfo objects defining how the pixels from the wrapped server should be converted to channels in the new server; Returns:. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:2730,inherit,inherited,2730,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['inherit'],['inherited']
Modifiability,ta.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class qupath.lib.regions.ImageRegion;  ; hashCode() - Method in class qupath.lib.regions.RegionRequest;  ; hashCode() - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; hashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraini,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:570550,plugin,plugins,570550,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ta.KaplanMeierEvent> events). Add a collection of events. double[]; getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object with the specified display name. Parameters:; name - . KaplanMeierData; public KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events); Create a new KaplanMeierData object with the specified display name and events. Parameters:; name - ; events - . Method Details. addEvents; public KaplanMeierData addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events); Add a collection of events. Parameters:; events - ; Returns:. addEvent; public KaplanMeierData addEvent(double time,; boolean censored); Insert a new event. Parameters:; time - the time of the event (units are not specified, but should be consistent for all events added); censored - if true the event is censored, if false the event is observed.; Returns:. getName; public String getNam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:2343,inherit,inherited,2343,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,1,['inherit'],['inherited']
Modifiability,"table. static <T> List<String>; getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns). Get a list of Strings representing table data. static boolean; saveTableModel(PathTableData<?> tableModel,; File fileOutput,; Collection<String> excludeColumns). Save the data from a table to a text file, using the default delimiter from PathPrefs. void; showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type). Show a measurement table for the specified image data. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SummaryMeasurementTableCommand; public SummaryMeasurementTableCommand(QuPathGUI qupath); Command to show a summary measurement table, for PathObjects of a specified type (e.g. annotation, detection). Parameters:; qupath - . Method Details. showTable; public void showTable(ImageData<BufferedImage> imageData,; Class<? extends PathObject> type); Show a measurement table for the specified image data. Parameters:; imageData - the image data; type - the object type to show. getTableModelStrings; public static <T> List<String> getTableModelStrings(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); Get a list of Strings representing table data.; ; Each entry in the list corresponds to a row. Type Parameters:; T - the data type for the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:. getTableModelString; public static <T> String getTableModelString(PathTableData<T> model,; String delim,; Collection<String> excludeColumns); throws IllegalArgumentException; Get a single String representing the data in a table.; ; Note: if the required String is too long (approximately Integer.MAX_VALUE characters), this will throw an IllegalArgumentException. Type Parameters:; T - the data type for the items in the table; Parameters:; model - ; delim - ; excludeColumns - ; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html:2329,extend,extends,2329,javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/SummaryMeasurementTableCommand.html,1,['extend'],['extends']
Modifiability,"tail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastHistogramPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.BorderPane; qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastHistogramPane; extends BorderPane; A pane to display a histogram for brightness/contrast adjustment, allowing the user to select min/max values. Property Summary; Properties. Type; Property; Description; BooleanProperty; doLogCounts. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DoubleProperty; maxValue. The maximum value displayed on the histogram. DoubleProperty; minValue. The minimum value displayed on the histogram. Properties inherited from class javafx.scene.layout.BorderPane; bottom, center, left, right, top. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:1210,inherit,inherited,1210,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"tail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class GroovyStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler. All Implemented Interfaces:; ScriptStyler. public class GroovyStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Groovy or Java syntax. Since:; v0.4.1; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html:1274,inherit,inherited,1274,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/GroovyStyler.html,1,['inherit'],['inherited']
Modifiability,"taining the value corresponding to a time from KaplanMeierData.getAllTimes(). getStatus() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI status. getStatus() - Method in class qupath.lib.plugins.ParallelTileObject. Get the current status (pending, processing or done). getStdDev() - Method in class qupath.lib.analysis.stats.Histogram. Get the standard deviation of all the values being histogrammed. getStdDev() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the standard deviation of all non-NaN values that were added. getSteps() - Method in class qupath.lib.plugins.workflow.Workflow. Get an unmodifiable list of the steps. getString(String) - Static method in class qupath.lib.gui.localization.QuPathResources. Get a string from the main ResourceBundle used for the QuPath user interface. getString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; getStringParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a String parameter value (or its default) for the specified key. getStringValue(PathObject, String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(PathObject, String, int) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getStringValue(T, String) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string representation of the value. getStringValue(T, String, int) - Method in interface qupath.lib.gui.measure.PathTableData. Get a string value, converting to a fixed number of decimal places if the column is numeric. getStroke() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram stroke color. getStructureChangeBase() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. If this is a structure change event, return the base object, i.e. getStylerFromLanguage(ScriptLanguage) - Static method in class qupath.lib.gui",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:522807,plugin,plugins,522807,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tal.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. createDetectionObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified detection object. createDetectionObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object. createDetectionObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified detection object with a specified measurement list. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetectionOutputHandler(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output into detection objects. createDetections(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create detection objects by tracing contours in a labelled image. createDetections(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create detection objects from a labelled image. createDetectionsFromPixelClassifier(String, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(PixelClassifier, double, double, String...) - Static method in class qupath.lib.scripting.QP. Create detection objects based upon the output of a pixel classifier, applied to selected objects. createDetectionsFromPixelClassifier(Im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:174576,extend,extends,174576,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"talGridLinesVisible, isHorizontalZeroLineVisible, isVerticalZeroLineVisible, layoutChartChildren, removeDataItemFromDisplay, removeSeriesFromDisplay, setAlternativeColumnFillVisible, setAlternativeRowFillVisible, setCurrentDisplayedExtraValue, setCurrentDisplayedXValue, setCurrentDisplayedYValue, setData, setHorizontalGridLinesVisible, setHorizontalZeroLineVisible, setVerticalGridLinesVisible, setVerticalZeroLineVisible, updateLegend, verticalGridLinesVisibleProperty, verticalZeroLineVisibleProperty. Methods inherited from class javafx.scene.chart.Chart; animate, animatedProperty, computeMinHeight, computeMinWidth, computePrefHeight, computePrefWidth, getAnimated, getChartChildren, getLegend, getLegendSide, getTitle, getTitleSide, isLegendVisible, layoutChildren, legendProperty, legendSideProperty, legendVisibleProperty, requestChartLayout, setAnimated, setLegend, setLegendSide, setLegendVisible, setTitle, setTitleSide, shouldAnimate, titleProperty, titleSideProperty. Methods inherited from class javafx.scene.layout.Region; backgroundProperty, borderProperty, cacheShapeProperty, centerShapeProperty, computeMaxHeight, computeMaxWidth, getBackground, getBorder, getHeight, getInsets, getMaxHeight, getMaxWidth, getMinHeight, getMinWidth, getOpaqueInsets, getPadding, getPrefHeight, getPrefWidth, getShape, getUserAgentStylesheet, getWidth, heightProperty, insetsProperty, isCacheShape, isCenterShape, isResizable, isScaleShape, isSnapToPixel, layoutInArea, layoutInArea, layoutInArea, layoutInArea, maxHeight, maxHeightProperty, maxWidth, maxWidthProperty, minHeight, minHeightProperty, minWidth, minWidthProperty, opaqueInsetsProperty, paddingProperty, positionInArea, positionInArea, prefHeight, prefHeightProperty, prefWidth, prefWidthProperty, resize, scaleShapeProperty, setBackground, setBorder, setCacheShape, setCenterShape, setHeight, setMaxHeight, setMaxSize, setMaxWidth, setMinHeight, setMinSize, setMinWidth, setOpaqueInsets, setPadding, setPrefHeight, setPrefSize, setPre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:8230,inherit,inherited,8230,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"tart; default int getSelectionStart(); Description copied from interface: EditableText; Get the starting position for any selection (inclusive). Specified by:; getSelectionStart in interface EditableText; Returns:. getSelectionEnd; default int getSelectionEnd(); Description copied from interface: EditableText; Get the ending position for any selection (exclusive).; If this is equal to or less than EditableText.getSelectionStart() this means there is ; no selection. Specified by:; getSelectionEnd in interface EditableText; Returns:. paste; void paste(); Request paste from the system clipboard. selectedTextProperty; ObservableValue<String> selectedTextProperty(); Text currently selected in the editor control. Returns:. isUndoable; boolean isUndoable(); Returns true if 'undo' can be applied to the control. Returns:. isRedoable; boolean isRedoable(); Returns true if 'redo' can be applied to the control. Returns:. getRegion; T getRegion(); Get the region representing this control, so it may be added to a scene. Returns:. undo; void undo(); Request undo. redo; void redo(); Request redo. copy; void copy(); Request copy the current selection. cut; void cut(); Request cut the current selection. wrapTextProperty; BooleanProperty wrapTextProperty(); Request wordwrap. Returns:. requestFollowCaret; default void requestFollowCaret(); Request that the X and Y scrolls are adjusted to ensure the caret is visible.; ; This method does nothing by default. ; This means that a class extending this interface must specifically implement this method if a different behavior is expected. caretPositionProperty; ReadOnlyIntegerProperty caretPositionProperty(); Property for the current caret position. Returns:. setContextMenu; void setContextMenu(ContextMenu menu); Set the context menu for the control. Parameters:; menu - . getContextMenu; ContextMenu getContextMenu(); Get the context menu for the control. Returns:. requestFocus; default void requestFocus(); Request that the control is focused. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html:5397,extend,extending,5397,javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/ScriptEditorControl.html,1,['extend'],['extending']
Modifiability,"task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPare",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2607,inherit,inherited,2607,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['inherit'],['inherited']
Modifiability,"tatic ContourTracing.ChannelThreshold; create(int channel). Create a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:1810,inherit,inherited,1810,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,1,['inherit'],['inherited']
Modifiability,"tatic ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(ImageServerBuilder<BufferedImage> builder,; URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. static TypeAdapterFactory; getServerBuilderFactory(). Get a TypeAdapterFactory to handle ServerBuilders. static ImageServer<BufferedImage>; pyramidalize(ImageServer<BufferedImage> server,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid. static ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:2538,inherit,inherited,2538,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['inherit'],['inherited']
Modifiability,"tatic List<ROI>; makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI). Make fixed-size rectangular tile ROIs for a specified area. static ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5562,extend,extends,5562,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability,"tatic method in class qupath.lib.common.GeneralTools. Format a value with a maximum number of decimal places, using a specified Locale. FORUM - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; framework(String) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the deep learning framework that can use the model. framework(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the framework (used to identify the appropriate loader for the model). FRAMEWORK_MXNET - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify MXNet. FRAMEWORK_ONNX_RUNTIME - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify ONNX Runtime. FRAMEWORK_OPENCV_DNN - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify OpenCV DNN. FRAMEWORK_PYTORCH - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify PyTorch. FRAMEWORK_TENSORFLOW - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow. FRAMEWORK_TF_LITE - Static variable in class qupath.opencv.dnn.DnnModelParams. Default name to identify TensorFlow Lite. from2D(double[][]) - Static method in class qupath.lib.awt.common.AffineTransforms. Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. fromArray(String...) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass from an array of individual names. fromBlob(T) - Method in interface qupath.opencv.dnn.BlobFunction. Convert a blob (generally the result of a prediction) to a list of mats. fromCollection(Collection<String>) - Static method in class qupath.lib.objects.classes.PathClass. Get a PathClass using all the name elements specified in the collection, ; without providing a default color. fromCollection(Collection<String>, Integer) - Static method in class qupath.lib.objects.classes.PathClass. Get a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:313641,variab,variable,313641,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"tatic method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the current image. saveImageMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save whole image measurements for the specified image. saveMeasurements(Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the current image for objects of a fixed type. saveMeasurements(ImageData<?>, Class<? extends PathObject>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save measurements for the specified image for objects of a fixed type. savePreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Save the preferences. SaveResourcePaneBuilder<T> - Class in qupath.process.gui.commands.ui. Small JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. SaveResourcePaneBuilder(Class<T>, ObjectExpression<? extends T>) - Constructor for class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Constructor. saveSnapshot(QuPathGUI, GuiTools.SnapshotType) - Static method in class qupath.lib.gui.commands.Commands. Save an image snapshot, prompting the user to select the output file. saveTableModel(PathTableData<?>, File, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Save the data from a table to a text file, using the default delimiter from PathPrefs. saveTMAMeasurements(String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save TMA measurements for the current image. saveTMAMeasurements(ImageData<?>, String, String...) - Static method in class qupath.lib.gui.scripting.QPEx. Save TMA measurements for the specified image. scalarMat(double, int) - Static method in class qupath.opencv.tools.OpenCVTools. Create a 1x1 single-channel Mat with a specific value. scalarMatWithType(double, int) - Static method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:882788,extend,extends,882788,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"tatic void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137876,extend,extends,137876,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"tatic void refreshIDs(); Refresh all object IDs for the current hierarchy. Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. refreshIDs; public static void refreshIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy. Parameters:; hierarchy - the object hierarchy; Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Parameters:; hierarchy - the object hierarchy; Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. resetClassifications; public static void resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current h",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:82469,extend,extends,82469,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"tatic void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102220,extend,extends,102220,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"tation). Get a ServerBuilder that applies a rotation to another server. RotatedImageServer.Rotation; getRotation(). Get the rotation applied by this server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All chan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:3013,inherit,inherited,3013,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['inherit'],['inherited']
Modifiability,"tats.ArrayWrappers. Create a wrapper for a byte array, returning values as doubles. makeUnsignedShortArrayWrapper(short[]) - Static method in class qupath.lib.analysis.stats.ArrayWrappers. Create a wrapper for a short array, returning values as doubles. makeViewerSnapshot() - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the current viewer. makeViewerSnapshot(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Make a BufferedImage snapshot of the specified viewer. manageChildMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Request that a menubar is managed as a child menubar. manageMainMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Request that a menubar is managed as a main menubar. MANAGER - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; MAPS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; MARKDOWN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for markdown. MarkdownLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of JSON syntax in QuPath. MarkdownLanguage() - Constructor for class qupath.lib.gui.scripting.languages.MarkdownLanguage. Constructor for JSON language. MarkdownStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Markdown syntax. markerOpacity - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; markerOpacity - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:670840,variab,variable,670840,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"te Bankhead; See Also:. Serialized Form. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ParallelTileObject.Status. Current processing status for the tile. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ParallelTileObject.Status; getStatus(). Get the current status (pending, processing or done). boolean; isComplete(). Returns true if setComplete() has been called. boolean; isProcessing(). Returns true if setIsProcessing(true) has recently been called. void; resolveOverlaps(). Request that the tile object attempts to resolve overlaps with its neighboring tiles. void; setComplete(boolean wasCancelled). Notify the tile that its processing is done. boolean; suggestNeighbor(ParallelTileObject pto). Register a neighboring tile, if it intersects with the bounds of this one. void; updateStatus(ParallelTileObject.Status status). Notify the object if it is currently being processed. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html:2052,inherit,inherited,2052,javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/ParallelTileObject.html,1,['inherit'],['inherited']
Modifiability,"te for the current hierarchy. fireHierarchyUpdate(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Trigger an update for the specified hierarchy. fireImageDataChanged(ImageData<BufferedImage>, ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireObjectClassificationsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object classifications have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectMeasurementsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating object measurements have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed. fireObjectsChangedEvent(Object, Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Fire a hierarchy update indicating objects have changed, and may still be changing. fireVisibleRegionChangedEvent(Shape) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; fireWorkflowUpdatedEvent() - Method in class qupath.lib.plugins.workflow.Workflow;  ; fitCorePolygonToGrid(Polygon, double, int, int) - Static method in class qupath.imagej.detect.dearray.TMADearrayer. Given a polygon representing TMA core centroids in any order, fit this to a coordinate grid. fixUris(UriResource, Project<?>) - Static method in class qupath.lib.io.UriUpdater. Attempt to fix any broken paths by updating URIs based upon the current project. FLAT - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:310053,extend,extends,310053,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"te of the bottom right of the region bounding box. int; getMinX(). Get the x coordinate of the top left of the region bounding box. int; getMinY(). Get the y coordinate of the top left of the region bounding box. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). int; getT(). Get the time point index for the region. int; getWidth(). Get the width of the region bounding box. int; getX(). Get the x coordinate of the region bounding box (top left). int; getY(). Get the y coordinate of the region bounding box (top left). int; getZ(). Get the z-slice index for the region. int; hashCode();  ; boolean; intersects(double x2,; double y2,; double w2,; double h2). Query if this region intersects with a specified bounding box, ignoring z-slice and time point information. boolean; intersects(ImageRegion request). Returns true if the region specified by this region overlaps with another. String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. createInstance; public static ImageRegion createInstance(int x,; int y,; int width,; int height,; int z,; int t); Create a region based on its bounding box coordinates, z-slice index and time point index. Parameters:; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static ImageRegion createInstance(ROI pathROI); Create the smallest region that completely contains a specified ROI. Parameters:; pathROI - ; Returns:. createInstance; public static ImageRegion createInstance(Collection<? extends ROI> rois); Create the smallest region that completely contains the specified ROIs. Parameters:; rois - ; Returns:. intersects; public boolean intersects(ImageRegion request); Returns true if the region specified by this region overlaps with another.; ; If either z or t is < 0 then that va",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html:2632,inherit,inherited,2632,javadoc/docs/qupath/lib/regions/ImageRegion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImageRegion.html,1,['inherit'],['inherited']
Modifiability,"te(Gson, TypeToken<R>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory;  ; create(String, double, boolean, List<ChannelSettings>) - Static method in class qupath.lib.display.settings.ImageDisplaySettings. Create a new image display settings object. create(String, float, float, ChannelColor, boolean) - Static method in class qupath.lib.display.settings.ChannelSettings. Create a new channel settings object. create(String, String, String) - Static method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Create a new GitHubProject. create(String, Version, URI) - Static method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Create a new UpdateChecker.ReleaseVersion. create(Collection<? extends ImageServer<BufferedImage>>) - Static method in class qupath.lib.gui.panes.ServerSelector;  ; create(Collection<T>) - Static method in class qupath.lib.io.UriUpdater. Create a new UriUpdater to support updating URIs for one or more UriResource objects. create(Collection<T>, Collection<UriUpdater.SingleUriItem>, Map<UriUpdater.SingleUriItem, UriUpdater.SingleUriItem>) - Static method in class qupath.lib.io.UriUpdater. Create a new UriUpdater using the specified collections. create(List<TMACoreObject>, int) - Static method in class qupath.lib.objects.hierarchy.DefaultTMAGrid. Create a new TMAGrid based on a list of cores and grid width. create(QuPathGUI) - Static method in class qupath.lib.gui.viewer.ViewerManager. Create a new instance. create(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer) - Static method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Create an overlay to display a live image that can be created from an existing Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:153867,extend,extends,153867,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"teInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args). Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). boolean; equals(Object obj);  ; String[]; getArgs(). Get the args array. URI; getURI(). Get the URI used by this builder. Collection<URI>; getURIs(). Get a list of URIs required by this builder. int; hashCode();  ; String; toString();  ; ImageServerBuilder.ServerBuilder<T>; updateURIs(Map<URI,URI> updateMap). Update the URIs required by this builder. Methods inherited from class qupath.lib.images.servers.ImageServerBuilder.AbstractServerBuilder; build, getMetadata. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; ImageServerMetadata metadata,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, and uses the specified metadata (possibly replacing the default metadata). Type Parameters:; T - ; Parameters:; providerClass - ; metadata - ; uri - ; args - ; Returns:. createInstance; public static <T>; ImageServerBuilder.ServerBuilder<T> createInstance(Class<? extends ImageServerBuilder<T>> providerClass,; URI uri,; String... args); Create a ImageServerBuilder.ServerBuilder that reads an image from a URI and args, using the default server metadata. Type Parameters:; T - ; Parameters:; providerClass - ; uri - ; args - ; Returns:. getURI; public URI getURI(); Get the URI used by this builder. Returns:. getArgs; public String[] getArgs(); Get the args array. This returns a clone of any original array. Returns:. buildOriginal; protected ImageServer<T> buildOriginal(); throws Exception. Specified by:; buildOriginal in class ImageS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html:2487,extend,extends,2487,javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerBuilder.DefaultImageServerBuilder.html,1,['extend'],['extends']
Modifiability,"ted intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1849,inherit,inherited,1849,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['inherit'],['inherited']
Modifiability,"ted objects. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.PositiveCellDetection. Wrap the detector to apply any required classification. createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; createDetector(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; createDetector(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. createDisk(int, boolean) - Static method in class qupath.opencv.tools.OpenCVTools. Create a disk filter. createDocument() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Create a String representation of the SVG document. createDoubleArrowEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createEllipseEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createEllipseROI(double, double, double, double, ImagePlane) - Static method in class qupath.lib.roi.ROIs. Create an ellipse ROI defined by its bounding box. createEmptyMeasurementList() - Method in class qupath.lib.objects.PathDetectionObject. Default to a simple, float measurement list. createEmptyMeasurementList() - Method in class qupath.lib.objects.PathObject. Create a new MeasurementList of t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:177191,plugin,plugins,177191,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ted per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). WEIGHTED_STD_DEV. Weighted standard deviation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; supports2D(). Returns true if the feature can be computed for 2D images. boolean; supports3D(). Returns true if the feature can be computed for 3D images (z-stacks). String; toString();  ; static MultiscaleFeatures.MultiscaleFeature; valueOf(String name). Returns the enum constant of this class with the specified name. static MultiscaleFeatures.MultiscaleFeature[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. GAUSSIAN; public static final MultiscaleFeatures.MultiscaleFeature GAUSSIAN; Gaussian filter. LAPLACIAN; public static final MultiscaleFeatures.MultiscaleFeature LAPLACIAN; Laplacian of Gaussian filter. WEIGHTED_STD_DEV; public static final MultiscaleFeatures.MultiscaleFeature WEIGHTED_STD_DEV; Weighted standard deviation; TODO: Document calculation. GRADIENT_MAGNITUDE; public static final MultiscaleFeatures.MultiscaleFeature GRADIENT_MAGNITUDE; Gradient magnitude. STRUCTURE_TENSOR_EIGENVALUE_MAX; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MAX; Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; public static final MultiscaleFeatures.MultiscaleFeature STRUCTURE_TENSOR_EIGENVALUE_MIDDLE; Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html:3044,inherit,inherited,3044,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleFeature.html,2,['inherit'],['inherited']
Modifiability,"ted; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.ObjectPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.ObjectPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Objects""); public static class PreferencePane.ObjectPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final DoubleProperty; annotationStrokeThickness;  ; final IntegerProperty; defaultColor;  ; final DoubleProperty; detectonStrokeThickness;  ; final IntegerProperty; maxClipboardObjects;  ; final IntegerProperty; selectedColor;  ; final IntegerProperty; tmaColor;  ; final IntegerProperty; tmaMissingColor;  ; final BooleanProperty; useSelectedColor;  . Constructor Summary; Constructors. Constructor; Description; ObjectPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. maxClipboardObjects; @IntegerPref(""Prefs.Objects.clipboard""); public final IntegerProperty maxClipboardObjects. annotationStrokeThickness; @DoublePref(""Prefs.Objects.annotationLineThickness""); public final DoubleProperty annotationStrokeThickness. detectonStrokeThickness; @DoublePref(""Prefs.Objects.detectionLineThickness""); public final DoubleProperty detectonStrokeThickness. useSelectedColor; @BooleanPref(""Prefs.Objects.useSelectedColor""); public final BooleanProperty useSelectedColor. selectedColor; @ColorPref(""Prefs.Objects.selectedColor""); public final IntegerProperty selectedColor. defaultColor; @ColorPref(""Prefs.Objects.defaultColor""); public final IntegerProperty defaultColor. tmaColor; @ColorPref(""Prefs.Objects.tmaCoreColor""); public final IntegerProperty tmaColor. tmaMissingColor; @ColorPref(""Prefs.Objects.tmaCoreMissingColor""); public final ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html:1150,inherit,inherited,1150,javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.ObjectPreferences.html,1,['inherit'],['inherited']
Modifiability,"tedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66754,plugin,plugin,66754,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"tends PathDetectionObject; A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. ; Examples include square tiles or irregularly-shaped 'superpixels'. Author:; Pete Bankhead; See Also:. PathDetectionObject; Serialized Form. Constructor Summary; Constructors. Modifier; Constructor; Description;  ; PathTileObject(). Default constructor. protected ; PathTileObject(ROI pathROI);  . Method Summary. Methods inherited from class qupath.lib.objects.PathDetectionObject; createEmptyMeasurementList, getMetadata, isEditable. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathTileObject; public PathTileObject(); Default constructor. Should not be used directly, instead use PathObjects.createTileObject(ROI). PathTileObject; protected PathTileObject(ROI pathROI). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html:2338,inherit,inherited,2338,javadoc/docs/qupath/lib/objects/PathTileObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathTileObject.html,1,['inherit'],['inherited']
Modifiability,"tends PathObject>, boolean) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects have changed in a way consistent with the specified event type. createObjectsFromPixelClassifier(ImageServer<BufferedImage>, Map<Integer, PathClass>, ROI, Function<ROI, ? extends PathObject>, double, double, boolean) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects based upon an ImageServer that provides classification or probability output. createObjectsFromPredictions(ImageServer<BufferedImage>, PathObjectHierarchy, Collection<PathObject>, Function<ROI, ? extends PathObject>, double, double, PixelClassifierTools.CreateObjectOptions...) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Create objects from an image (usually created with a pixel classifier) where values represent classifications or predictions. createObjectsFromROIs(ImagePlus, Collection<? extends Roi>, double, boolean, boolean, ImagePlane) - Static method in class qupathj.QuPath_Send_Overlay_to_QuPath. Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. createObjectTreeBrowser(String, Object) - Static method in class qupath.lib.gui.panes.ObjectTreeBrowser. Create a TreeTableView showing the names and values of object fields, accessed via reflection. createPane() - Method in class qupath.lib.gui.panes.WorkflowCommandLogView;  ; createPane() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using the default PathObject.toString() method. createPane(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a PathObjectLabels.PathObjectMiniPane using a custom method to create a string representation of the object. createPane(ObservableValue<ImageData<T>>) - Static method in class qupath.lib.gui.panes.ObjectDescriptionPane;  ; createPane(Obse",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:205145,extend,extends,205145,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"tension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDescription() - Method in interface qupath.lib.plugins.PathPlugin. Get a brief description of the plugin's purpose & operation. getDescription() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a description; this is free text describing the image. getDescription() - Method in class qupath.opencv.CellCountsCV;  ; getDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:380836,plugin,plugins,380836,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ter a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be can",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:2627,extend,extends,2627,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['extend'],['extends']
Modifiability,"terList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; arg - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Run",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:2341,inherit,inherited,2341,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['inherit'],['inherited']
Modifiability,"terfaces:; Serializable, Comparable<RotatedImageServer.Rotation>, Constable. Enclosing class:; RotatedImageServer. public static enum RotatedImageServer.Rotation; extends Enum<RotatedImageServer.Rotation>; Enum for rotations in increments of 90 degrees. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ROTATE_180. Rotate 180 degrees. ROTATE_270. Rotate 270 degrees clockwise. ROTATE_90. Rotate 90 degrees clockwise. ROTATE_NONE. No rotation. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static RotatedImageServer.Rotation; valueOf(String name). Returns the enum constant of this class with the specified name. static RotatedImageServer.Rotation[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ROTATE_NONE; public static final RotatedImageServer.Rotation ROTATE_NONE; No rotation. ROTATE_90; public static final RotatedImageServer.Rotation ROTATE_90; Rotate 90 degrees clockwise. ROTATE_180; public static final RotatedImageServer.Rotation ROTATE_180; Rotate 180 degrees. ROTATE_270; public static final RotatedImageServer.Rotation ROTATE_270; Rotate 270 degrees clockwise. Method Details. values; public static RotatedImageServer.Rotation[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RotatedImageServer.Rotation valueOf(String name); Returns the enum constant",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html:1577,inherit,inherited,1577,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.Rotation.html,1,['inherit'],['inherited']
Modifiability,"ters:; extensions - valid file extensions, or null if any file may be chosen.; Returns:; the file chosen by the user, or null if the dialog was cancelled. writeRenderedImage; public static void writeRenderedImage(ImageData<BufferedImage> imageData,; String path); throws IOException; Write a rendered image to the specified path. No overlay layers will be included. Parameters:; imageData - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(QuPathViewer, String). writeRenderedImage; public static void writeRenderedImage(QuPathViewer viewer,; String path); throws IOException; Write a rendered image for the current viewer to the specified path. Parameters:; viewer - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). writeRenderedImageRegion; public static void writeRenderedImageRegion(ImageData<BufferedImage> imageData,; RegionRequest request,; String path); throws IOException; Write a rendered image region to the specified path. No overlay layers will be included. Parameters:; imageData - ; request - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(QuPathViewer, String). writeRenderedImageRegion; public static void writeRenderedImageRegion(QuPathViewer viewer,; RegionRequest request,; String path); throws IOException; Write a rendered image region for the current viewer to the specified path. Parameters:; viewer - ; request - ; path - ; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). writeImage; public static void writeImage(Image image,; String path); throws IOException; Write a JavaFX image to the specified path. Parameters:; image - the image to write; path - the path to write the image; Throws:; IOException; See Also:. writeRenderedImage(ImageData, String). setChannelDisplayRange; public static void setChannelDisplayRange(int channel,; double minDisplay,; double maxDisplay); Set the minimum and maximum display range for the current ImageData for a channel identified by number. Paramete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:16764,layers,layers,16764,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['layers'],['layers']
Modifiability,"tersInitialized. Constructor Summary; Constructors. Constructor; Description; PositiveCellDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Wrap the detector to apply any required classification. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.imagej.detect.cells.WatershedCellDetection; getDebugMode, getDescription, getLastResultsDescription, getPreferredPixelSizeMicrons, getTileOverlap, parseArgument, setDebugMode. Methods inherited from class qupath.lib.plugins.AbstractTileableDetectionPlugin; addRunnableTasks. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositiveCellDetection; public PositiveCellDetection(); Default constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Speci",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html:2166,plugin,plugins,2166,javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/PositiveCellDetection.html,1,['plugin'],['plugins']
Modifiability,th 0.5.0); FillAnnotationHolesPlugin (QuPath 0.5.0); FindConvexHullDetectionsPlugin (QuPath 0.5.0); qupath.lib.plugins.objects (QuPath 0.5.0); qupath.lib.plugins.objects Class Hierarchy (QuPath 0.5.0); RefineAnnotationsPlugin (QuPath 0.5.0); ShapeFeaturesPlugin (QuPath 0.5.0); SmoothFeaturesPlugin (QuPath 0.5.0); SplitAnnotationsPlugin (QuPath 0.5.0); TileClassificationsToAnnotationsPlugin (QuPath 0.5.0). /parameters; ; BooleanParameter (QuPath 0.5.0); ChoiceParameter (QuPath 0.5.0); DoubleParameter (QuPath 0.5.0); EmptyParameter (QuPath 0.5.0); IntParameter (QuPath 0.5.0); NumericParameter (QuPath 0.5.0); qupath.lib.plugins.parameters (QuPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:29013,plugin,plugins,29013,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"th property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static void setHGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. Parameters:; priority - ; nodes - . setVGrowPriority; public static void setVGrowPriority(Priority priority,; Node... nodes); Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. Parameters:; priorit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3937,inherit,inherited,3937,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['inherit'],['inherited']
Modifiability,"th where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGesturesProperty(). Support zoom gestures for touchscreens and trackpads. static IntegerProperty; viewerBackgroundColorProperty(). Color to paint behind any image. static DoubleProperty; viewerGammaProperty(). Requested gamma value applied to the image in each viewer (for display only). static BooleanProperty; viewerInterpolateBilinearProperty(). Request that images are displayed in viewers using bilinear interpolation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. useSystemMenubar; @Deprecated; public static BooleanProperty useSystemMenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:23678,inherit,inherited,23678,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['inherit'],['inherited']
Modifiability,"th.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getParentObjects(ImageData<BufferedImage>) - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractDetectionPlugin. Get all selected objects that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:475849,plugin,plugins,475849,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"th.imagej.images.writers.TiffWriterIJ;  ; tile(int, int) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a default tiler to use, with a specified tile size. tile(TileRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the tile relevant for processing. tileAvailable(String, ImageRegion, BufferedImage) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; tileAvailable(String, ImageRegion, T) - Method in interface qupath.lib.gui.images.stores.TileListener. Notify a listener that an image tile has been received read & is available. tileBrush - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; tileCache - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the height of output tiles. TileListener<T> - Interface in qupath.lib.gui.images.stores. Interface for anything that needs to know when image tiles become available. tileListeners - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; tiler(Tiler) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a tiler to use. Tiler - Class in qupath.lib.objects.utils. A ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1025254,plugin,plugins,1025254,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"th.lib.gui.commands.display.BrightnessContrastSliderPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSliderPane; extends GridPane; A pane containing sliders for adjusting the min/max display range and gamma value; associated with an ImageDisplay. Property Summary; Properties. Type; Property; Description; BooleanProperty; disableGammaAdjustment. Prevent gamma from being adjusted. BooleanProperty; disableMinMaxAdjustment. Prevent the min and max sliders from being adjusted. DoubleProperty; gammaValue. Value of the gamma slider. ObjectProperty<ImageDisplay>; imageDisplay. The image display to which the sliders are applied. DoubleProperty; maxValue. Value of the maximum slider. DoubleProperty; minValue. Value of the minimum slider. ObjectProperty<ChannelDisplayInfo>; selectedChannel. The channel to which the sliders are applied. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:1558,inherit,inherited,1558,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"th.lib.gui.dialogs.Dialogs. Deprecated.;  ; Dialogs.Builder - Class in qupath.lib.gui.dialogs. Deprecated. Dialogs.DialogButton - Enum Class in qupath.lib.gui.dialogs. Deprecated.; Possible buttons pressed in a yes/no/cancel dialog. difference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the difference between two ROIs. DilateAnnotationPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. DilateAnnotationPlugin() - Constructor for class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; DilateAnnotationPlugin.LineCap - Enum Class in qupath.lib.plugins.objects. Line cap to use for annotation expansion. dim() - Method in interface qupath.lib.geom.Point. Number of values used to represent this point. dim() - Method in class qupath.lib.geom.Point2;  ; DIR_COLORMAPS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing colormaps. DIR_CSS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing css files for styling. DIR_EXTENSIONS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing extensions. DIR_LOCALIZATION - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing properties files for localization. DIR_LOGS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing log files. DIR_SCRIPTS - Static variable in class qupath.lib.gui.UserDirectoryManager. Name of subdirectory containing shared scripts. DirectServerChannelInfo - Class in qupath.lib.display. ChannelInfo intended for use with a single or multichannel image (possibly fluorescence); where the pixel's value is used to scale a single color according to a specified display range according to the following rules:; ; If the pixel's value is >= maxDisplay, the pure color is used.; If the pixel's value is <= minDisplay, the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:259960,variab,variable,259960,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"th.lib.gui.prefs. Enum for different ways that detections can be displayed in lists and trees. PathPrefs.FontSize - Enum Class in qupath.lib.gui.prefs. Enum to control font size. PathPrefs.ImageTypeSetting - Enum Class in qupath.lib.gui.prefs. Enum defining how setting the image type should be handled for new images. PathROIObject - Class in qupath.lib.objects. Abstract class used for PathObjects that have ROIs associated with them. PathRootObject - Class in qupath.lib.objects. The root object used at the base of a PathObjectHierarchy. PathRootObject() - Constructor for class qupath.lib.objects.PathRootObject;  ; paths(Path...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as path objects. PathTableData<T> - Interface in qupath.lib.gui.measure. Interface defining a table model that enables measurement names to be mapped to string or numeric values (as appropriate). PathTask - Interface in qupath.lib.plugins. Helper interface to define plugin tasks that require post-processing on a specific thread ; (i.e. PathTileObject - Class in qupath.lib.objects. A subclass of PathDetectionObject, generally used to represent an image region that doesn't ; (in itself) correspond to any particularly interesting structure. PathTileObject() - Constructor for class qupath.lib.objects.PathTileObject. Default constructor. PathTileObject(ROI) - Constructor for class qupath.lib.objects.PathTileObject;  ; PathTool - Interface in qupath.lib.gui.viewer.tools. Interface defining how a toolbar tool interacts with a viewer. PathToolEventHandlers - Class in qupath.lib.gui.viewer.tools.handlers;  ; PathToolEventHandlers() - Constructor for class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; PathTools - Class in qupath.lib.gui.viewer.tools. Default PathTool implementations. PathTools() - Constructor for class qupath.lib.gui.viewer.tools.PathTools;  ; pca(double, boolean) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder. Perform PCA to r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:760031,plugin,plugin,760031,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"th.lib.images.servers.ImageServerMetadata.Builder. Specify the preferred tile height and width. preferReturnToMove() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Returns false. prefHeight(double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; prefHeight(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the preferred height of the dialog pane. Prefs - Class in qupath.lib.common. Core QuPath preferences. Prefs() - Constructor for class qupath.lib.common.Prefs;  ; prefWidth(double) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the preferred width of the dialog pane. preprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called after parsing the argument String, and immediately before creating & running any generated tasks. preprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; preprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the preprocessing steps from a collection. preprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the preprocessing steps from an array. Preprocessing - Class in qupath.opencv.ml.objects.features. Helper class for preprocessing input for machine learning algorithms using OpenCV Mats. Preprocessing() - Constructor for class qupath.opencv.ml.objects.features.Preprocessing;  ; Preprocessing.PCAProjector - Class in qupath.opencv.ml.objects.features. Helper class to apply PCA projection. preprocessor(FeaturePreprocessor) - Static method in class qupath.opencv.ops.ImageOps.ML. Apply a FeaturePreprocessor to pixels, considering each channel as features. PRETTY_JSON - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request pretty-printing for the JSON. previousSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:781492,extend,extends,781492,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"th.lib.images.servers; Class SparseImageServer.SparseImageServerManager. java.lang.Object; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server should correspond (must be found within getRegions()); downsample - specified downsample for the server (must be found within getDownsamples()); Returns:; Throws:; IOExcepti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html:1361,inherit,inherited,1361,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,2,['inherit'],['inherited']
Modifiability,"th.lib.plugins. Classes to support general analysis commands.; ; The purpose of this is to help abstract away some of the more challenging things ; around running the command, handling parallelization and monitoring progress. Related Packages. Package; Description; qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; AbstractDetectionPlugin<T>. Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations). AbstractInteractivePlugin<T>. Abstract class to help with implementing an interactive plugin. AbstractPlugin<T>. General abstract plugin implementation, which defines some methods to facilitate ; creating plugins that do parallel processing. AbstractTaskRunner. Abstract PluginRunner to help with the creation of plugin runners for specific circumstances,; e.g. AbstractTileableDetectionPlugin<T>. Abstract plugin used for detection tasks that support breaking large regions into smaller ones,; and analyzing these in parallel - optionally with overlaps. CommandLineTaskRunner. A PluginRunner that simply logs progress and output. CommandLineTaskRunner.CommandLineProgressMonitor. A SimpleProgressMonitor that sends progress to a log. DetectionPluginTools. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ParallelTileObject. A tempora",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html:1301,plugin,plugin,1301,javadoc/docs/qupath/lib/plugins/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/package-summary.html,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"th.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:425096,plugin,plugins,425096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"th.lib.roi.LineROI;  ; getT() - Method in class qupath.lib.roi.PointsROI;  ; getT() - Method in class qupath.lib.roi.PolygonROI;  ; getT() - Method in class qupath.lib.roi.PolylineROI;  ; getT() - Method in class qupath.lib.roi.RectangleROI;  ; getT() - Method in interface qupath.lib.roi.interfaces.ROI. Get time point index. getTable() - Method in class qupath.lib.gui.panes.SelectedMeasurementTableView. Get the TableView. getTableModelString(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table. getTableModelStrings(PathTableData<T>, String, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a list of Strings representing table data. getTabString() - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. String to insert when tab key pressed. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of tasks to perform. getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getTasks(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getTertiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into tertiles. getText() - Method in class qupath.lib.gui.actions.InfoMessage. Text of the message. getText() - Method in interface qupath.lib.gui.scripting.EditableText. Get all the text in the editor;. getText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the text property. getText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:529628,plugin,plugins,529628,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"th.lib.scripting.QP. Set the image type for the current image data. setInfo() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setInputFile(File) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the input file for the summary viewer. setIntensityClassification(PathObject, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. setIntensityClassifications(Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the current hierarchy. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.objects.PathObjectTools. Set the intensity classifications for the specified objects. setIntensityClassifications(Collection<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for the specified objects. setIntensityClassifications(PathObjectHierarchy, Class<? extends PathObject>, String, double...) - Static method in class qupath.lib.scripting.QP. Set the intensity classifications for objects of the specified class in the specified hierarchy. setIntensityClassificationsForSelected(PathObjectHierarchy, String, double...) - Static method in class qupath.lib.scripting.QP. Set intensity classifications for all selected (detection) objects in the specified hierarchy. setInterpolation(Graphics2D) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay;  ; setInterpolation(ImageInterpolation) - Method in class qupath.lib.gui.viewer.overlays.AbstractImageOverlay. Set the preferred method of interpolation to use for display. setIsInteractive(boolean) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Sets the value of C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:931456,extend,extends,931456,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"th.opencv.WatershedNucleiCV;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. This should return a default ParameterList containing any information that is needed to repeat the task exactly. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin. Returns an empty ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getDefaultParameterList(ImageData<T>) - Method in interface qupath.lib.plugins.PathInteractivePlugin. This should return a default ParameterList. getDefaultParameterList(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getDefaultPlane() - Static method in class qupath.lib.regions.ImagePlane. Returns an ImagePlane with channel -1, z of 0 and t of 0. getDefaultPyramidCompression() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default compression type when writing OME-TIFF images. getDefaultQuPathUserDirectory() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get the default location for extensions. getDef",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:372961,plugin,plugins,372961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"thClass represents a built-in intensity class. isH_DAB() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623589,plugin,plugins,623589,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"thClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeNames(PathClass, Collection<String>) - Static method in class qupath.lib.objects.classes.PathClassTools. Create a PathClass with specific name elements removed (if present) from an existing classification. removeObject(PathObject, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a single object from the hierarchy, firing a remove event. removeObject(PathObject, boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. removeObjects(Collection<? extends PathObject>, boolean) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Remove a collection of objects, firing a single 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. removeObjects(Collection<? extends PathObject>, boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. removeObjects(PathObject[], boolean) - Static method in class qupath.lib.scripting.QP. Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. removeObjectsOutsideImage() - Static method in class qupath.lib.scripting.QP. Remove objects that are entirely outside the current image. removeObjectsOutsideImage(boolean) - Static method in class qupath.lib.scripting.QP. Remove objects that are entirely or partially outside the current image. removeObjectsOutsideImage(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Remove objects that are entirely or outside the specified image. removeObjectsOutsideImage(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Remove objects that are entirely or p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:847451,extend,extends,847451,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"thObject>; removeOverlapsByLocation(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping object by location, retaining the object closest to the image 'origin' and discarding the object further away. static Collection<PathObject>; removeOverlapsBySize(Collection<? extends PathObject> pathObjects,; double overlapTolerance). Resolve overlapping objects by size, retaining the object with the larger ROI and discarding the object with the smaller ROI. static Collection<PathObject>; restoreClassificationsFromMap(Map<PathObject,PathClass> classificationMap). Reassign classifications to objects, as were previously obtained using createClassificationMap(Collection). static PathClass; setIntensityClassification(PathObject pathObject,; String measurementName,; double... thresholds). Assign cell classifications as positive or negative based upon a specified measurement, using up to 3 intensity bins. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> pathObjects,; double buffer). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objects; with line ROIs, after 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByBufferedLines(Collection<? extends PathObject> areaObjects,; Collection<? extends PathObject> lineObjects,; double buffer). Split the objects with area ROIs using dividing lines extracted from the objects with line ROIs, after; 'buffering' the lines to increase their thickness. static Map<PathObject,List<PathObject>>; splitAreasByLines(Collection<? extends PathObject> pathObjects). Given a collection of objects, split the objects with area ROIs using dividing lines extracted from the objec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:11355,extend,extends,11355,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"thObject transformObjectRecursive(PathObject pathObject,; AffineTransform transform,; boolean copyMeasurements,; boolean createNewIDs); Create (optionally) transformed versions of the PathObject and all its descendants, recursively, optionally assigning; new IDs to the created objects. ; This method can be applied to all objects in a hierarchy by supplying its root object. The parent-children ; relationships are kept after transformation. Parameters:; pathObject - the object to transform; this will be unchanged; transform - optional affine transform; if null, this effectively acts to duplicate the object; copyMeasurements - if true, the measurement list of the new object will be populated with the measurements of pathObject; createNewIDs - if true, create new IDs for each copied object; otherwise, retain the same ID.; Returns:; the new object, including all child objects; Since:; v0.4.0. findByStringID; public static Map<String,PathObject> findByStringID(Collection<String> ids,; Collection<? extends PathObject> pathObjects); Find objects based on a String representation of their IDs. Parameters:; ids - IDs to match; each will correspond to a key in the output map; pathObjects - the objects that may contain corresponding IDs; Returns:; a map between ids and any matched objects (or null if no matched object was found); Since:; v0.4.0; See Also:. findByUUID(Collection, Collection); matchByID(Collection, Collection). findByUUID; public static Map<UUID,PathObject> findByUUID(Collection<UUID> ids,; Collection<? extends PathObject> pathObjects); Find objects based on their IDs. Parameters:; ids - IDs to match; each will correspond to a key in the output map; pathObjects - the objects that may contain corresponding IDs; Returns:; a map between ids and any matched objects (or null if no matched object was found); Since:; v0.4.0; See Also:. findByStringID(Collection, Collection); matchByID(Collection, Collection). matchByID; public static Map<PathObject,PathObject> matchByID(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:42329,extend,extends,42329,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"thPlugin. Run the plugin. runProjectScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runProjectScriptNoSaveAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; RunSavedClassifierWorkflowStep - Class in qupath.lib.plugins.workflow. WorkflowStep for running a saved PathObjectClassifier. RunSavedClassifierWorkflowStep(String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Constructor, taking the path to the serialized classifier. RunSavedClassifierWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep. Create a workflow step to run a classifier. runScript(File, String) - Method in class qupath.lib.gui.QuPathGUI. Convenience method to execute a script. runScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runSelectedAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; runTasks(Collection<? extends Runnable>) - Method in class qupath.lib.plugins.AbstractTaskRunner;  ; runTasks(Collection<? extends Runnable>) - Method in interface qupath.lib.plugins.TaskRunner. Pass a collection of parallelizable tasks to run. S. sameClassificationPredicate() - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects that share the same classification. samplesPerPixel(int[]) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; SANS_SERIF - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Preferred sans-serif font. saturation(int) - Static method in class qupath.lib.color.ColorTransformer. Extract saturation value from RGB-to-HSB transform. Saturation - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Saturation value (from RGB-HSB transform). saturationPercentProperty(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:879264,extend,extends,879264,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"thPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:5466,extend,extends,5466,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,5,"['Plugin', 'extend', 'plugin']","['PluginRunner', 'extends', 'plugin']"
Modifiability,"that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html:4675,plugin,plugin,4675,javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/TilerPlugin.html,1,['plugin'],['plugin']
Modifiability,"that are instances of a supported class. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Get a collection of objects to process, based on the contents of the PluginRunner. getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getParentObjects(ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getParentOrProxy() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent, or a proxy parent if one has been specified. getPatch() - Method in class qupath.lib.common.Version. Get the patch version number (0.0.X). getPatchHeight() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the height of a patch, in pixels. getPatchWidth() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the width of a patch, in pixels. getPath() - Method in class qupath.lib.images.servers.AbstractImageServer. Default implementation lazily calls AbstractImageServer.createID() on demand. getPath() - Method in interface qupath.lib.images.servers.ImageServer. Get a String path that can uniquely identify this image. getPath() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the Path corresponding to the UR",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:476903,plugin,plugins,476903,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. abstract BlobFunction<T>; getBlobFunction(String name). Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. abstract PredictionFunction<T>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Map<String,Mat>; predict(Map<String,Mat> blobs). Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. Mat; predict(Mat mat). Convenience method to convert a single image patch to a blob, apply the PredictionFunction, and convert the output to a standard Mat. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.opencv.dnn.DnnModel; close. Constructor Details. AbstractDnnModel; public AbstractDnnModel(). Method Details. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function; for the first (or only) input. Returns:. getBlobFunction; public abstract BlobFunction<T> getBlobFunction(String name); Get the function that can convert one or more OpenCV Mats into a blob supported by the prediction function for; a specified input layer. Parameters:; name - ; Returns:. getPredictionFunction; public abstract PredictionFunction<T> getPredictionFunction(); Get the prediction function that can apply a prediction with one or more blobs as input. Returns:. predict; public Map<String,Mat> predict(Map<String,Mat> blobs); Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html:2722,inherit,inherited,2722,javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/AbstractDnnModel.html,2,['inherit'],['inherited']
Modifiability,"that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; group - a toggle group to associate with the action; if present, a radio menu item will be returned; Returns:; a new MenuItem configured according to the action. createCheckMenuItem; public static MenuItem createCheckMenuItem(org.controlsfx.control.action.Action action); Create a menu item from an action that makes use of a selected property.; This stores a reference to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:11774,config,configured,11774,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['config'],['configured']
Modifiability,"the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:254208,plugin,plugins,254208,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"the default number of threads from; ThreadTools.getParallelism(). TaskRunner; createHeadlessTaskRunner(int nThreads). Create a new headless TaskRunner instance with the specified number of threads. TaskRunner; createTaskRunner(). Create a new TaskRunner instance, using the default number of threads from; ThreadTools.getParallelism(). TaskRunner; createTaskRunner(int nThreads). Create a new TaskRunner instance with the specified number of threads. static IntFunction<TaskRunner>; getDefaultCreateFunction(). Get the default function used to create TaskRunner instances. static TaskRunnerUtils; getDefaultInstance(). Get the default instance. static TaskRunnerUtils; newInstance(). Create a new instance. TaskRunnerUtils; setCreateFunction(IntFunction<TaskRunner> function). Set the function used to generate new headless TaskRunner instances. TaskRunnerUtils; setCreateHeadlessFunction(IntFunction<TaskRunner> function). Set the function used to generate new TaskRunner instances. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getDefaultInstance; public static TaskRunnerUtils getDefaultInstance(); Get the default instance. This is a singleton, shared across an application. Returns:. newInstance; public static TaskRunnerUtils newInstance(); Create a new instance. This may be used if part of an application requires its TaskRunner instances; to differ from those used elsewhere. Returns:. getDefaultCreateFunction; public static IntFunction<TaskRunner> getDefaultCreateFunction(); Get the default function used to create TaskRunner instances.; This is suitable for use in a headless environment. Returns:. setCreateHeadlessFunction; public TaskRunnerUtils setCreateHeadlessFunction(IntFunction<TaskRunner> function); Set the function used to generate new TaskRunner instances. Parameters:; function - a creator function that takes a requested number of threads as input; Returns:; this ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html:1912,inherit,inherited,1912,javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/TaskRunnerUtils.html,1,['inherit'],['inherited']
Modifiability,"the height of output tiles. TileListener<T> - Interface in qupath.lib.gui.images.stores. Interface for anything that needs to know when image tiles become available. tileListeners - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; tiler(Tiler) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a tiler to use. Tiler - Class in qupath.lib.objects.utils. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder - Class in qupath.lib.objects.utils;  ; Tiler.TileAlignment - Enum Class in qupath.lib.objects.utils. Enum representing the possible alignments for tiles. TileRequest - Class in qupath.lib.images.servers. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager - Interface in qupath.lib.images.servers. Helper class to manage tile requests from an ImageServer. TilerPlugin<T> - Class in qupath.lib.algorithms. Simple plugin to create square tiles, which may later have measurements added. TilerPlugin() - Constructor for class qupath.lib.algorithms.TilerPlugin. Default constructor. tiles() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept tile objects only. TILES - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept tiles. tileSize(int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set tile width and height (square tiles). tileSize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the requested tile size (width == height). tileSize(int) - Method in class qupath.lib.images.writers.TileExporter. Define the tile size in pixel units at the export resolution. tileSize(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set tile width and height. tileSize(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the requested",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1026819,plugin,plugin,1026819,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"the isSpaceDown status should be changed. setSpaceX(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the horizontal spacing between lines for any counting grid. setSpaceY(double) - Method in class qupath.lib.gui.viewer.GridLines. Set the vertical spacing between lines for any counting grid. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.ChoiceParameter. This will only work for string choices... setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Numb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:949609,plugin,plugins,949609,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"the model configuration, if required. String; getFramework(). Get the framework used to create the model. Scalar; getMean(). Get means which should be subtracted for preprocessing. OpenCVDnn.ModelType; getModelType(). Get the type of the model that would be built with buildModel(). URI; getModelUri(). Get the path to the model. String; getName(). Get a user-readable name for this model, or null if no name is specified. PredictionFunction<Mat>; getPredictionFunction(). Get the prediction function that can apply a prediction with one or more blobs as input. Double; getScale(). Get scale factors to be applied to preprocess input. Collection<URI>; getURIs(). Get all the URIs required for this resource. void; initializeModel(Model model). Initialize the model with the same preprocessing defined here (i.e. boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.opencv.dnn.AbstractDnnModel; batchPredict, predict, predict. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVDnn; public OpenCVDnn(). Method Details. buildNet; public Net buildNet(); Build the OpenCV Net. This is a lower-level function than buildModel(), which provides ; more options to query the network architecture but does not incorporate any preprocessing steps. Returns:. buildModel; public <T extends Model> T buildModel(OpenCVDnn.ModelType type); Build a model, specifying the OpenCVDnn.ModelType. Type Parameters:; T - ; Parameters:; type - ; Returns:; See Also:. buildModel(). buildModel; public <T extends Model> T buildModel(); Build a model. The return type is determined by the OpenCVDnn.ModelType. Type Parameters:; T - ; Returns:; See Also:. buildModel(ModelType). initializeModel; public void initializeModel(Model model); Initialize the model with the same pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html:3226,inherit,inherited,3226,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.html,2,['inherit'],['inherited']
Modifiability,"the most common calibration value). pixelSnapping - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pixelType(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType as a String, e.g. pixelType(PixelType) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; pixelType(PixelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the bit-depth of the image. pixelType(PixelType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType. PixelType - Enum Class in qupath.lib.images.servers. Image bit-depths and types. placeholderTextProperty() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. PLAIN - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Plain styler (no highlighting). PLAIN - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PlainLanguage - Class in qupath.lib.gui.scripting.languages. Class for the representation of plain text in QuPath. PlainLanguage() - Constructor for class qupath.lib.gui.scripting.languages.PlainLanguage. Constructor for a simple Plain Language. PlainStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling for plain text (which really means no styling). PLANAR - Enum constant in enum class qupath.lib.images.writers.ome.OMEPyramidWriter.ChannelExportType. Channels are stored as separate image planes ('PLANARCONFIG_SEPARATE'). PLAYBACK_PLAY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; pluginCompleted(String) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; pluginCompleted(String) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Notify the monitor that the plugin has completed its work. plus(Mat, Number) - Static method",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:768854,variab,variable,768854,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"the most recent change. ObjectProperty<ChannelDisplayInfo>; switchToGrayscaleChannel. Property indicating which channel should be used if useGrayscaleLutProperty() is turned on. BooleanProperty; useGrayscaleLut. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. BooleanProperty; useInvertedBackground. Property that specifies whether the background should be inverted (i.e. Field Summary. Fields inherited from class qupath.lib.gui.images.stores.AbstractImageRenderer; timestamp. Constructor Summary; Constructors. Constructor; Description; ImageDisplay(). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDispla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:1913,extend,extends,1913,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['extend'],['extends']
Modifiability,"the objects from an ImageData that are compatible with this classifier. getCompatibleWriters(Class<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters for a specific image class. getCompatibleWriters(ImageServer<T>, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Get a list of compatible ImageWriters compatible with a specific server. getCompletions(String, int) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; getCompletions(String, int) - Method in interface qupath.lib.scripting.languages.ScriptAutoCompletor. Get a list of possible auto-completions for the given text ; with the caret at the specified position. getCompletionText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be inserted for the full completion. getConfigPath() - Static method in class qupath.lib.gui.prefs.PathPrefs. Try to get the path to the config file. getConfigUri() - Method in class qupath.opencv.dnn.OpenCVDnn. Get the path to the model configuration, if required. getConnectedClusters() - Method in class qupath.opencv.features.DelaunayTriangulation. Get a list of PathObjects that are connected to each other in this triangulation. getConnectedNodes(Collection<PathObject>, Collection<double[]>) - Method in class qupath.opencv.features.DelaunayTriangulation. Deprecated. getConnectedNodes(PathObject, Collection<PathObject>) - Method in class qupath.opencv.features.DelaunayTriangulation. Get all the PathObjects immediately connected to the specified object, adding the points into a collection (or creating a new one). getConnectedObjects(PathObject) - Method in class qupath.lib.objects.DefaultPathObjectConnectionGroup;  ; getConnectedObjects(PathObject) - Method in interface qupath.lib.objects.PathObjectConnectionGroup. Get all the connections to a specified PathObject stored in this group. getConnectedObjects(PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:360249,config,config,360249,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['config'],['config']
Modifiability,"the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classific",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2447,inherit,inherited,2447,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['inherit'],['inherited']
Modifiability,"the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DilateAnnotationPlugin; public DilateAnnotationPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html:2697,plugin,plugins,2697,javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/DilateAnnotationPlugin.html,2,['plugin'],['plugins']
Modifiability,"the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. FillAnnotationHolesPlugin; public FillAnnotationHolesPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no descripti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html:2563,plugin,plugins,2563,javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FillAnnotationHolesPlugin.html,2,['plugin'],['plugins']
Modifiability,"the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. RefineAnnotationsPlugin; public RefineAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html:2537,plugin,plugins,2537,javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/RefineAnnotationsPlugin.html,2,['plugin'],['plugins']
Modifiability,"the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected Collection<Runnable>; getTasks(ImageData<T> imageData). Get a collection of tasks to perform. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SplitAnnotationsPlugin; public SplitAnnotationsPlugin(). Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html:2548,plugin,plugins,2548,javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/SplitAnnotationsPlugin.html,2,['plugin'],['plugins']
Modifiability,"the root object).; ; To get a flattened list containing all PathObjects without the root object, one can run the following:; getFlattenedObjectList(null).stream().filter(p -> !p.isRootObject()).toList(). Or, since v0.4.0, just use getAllObjects(boolean) instead. Parameters:; list - ; Returns:; Since:; getAllObjects(boolean). getAllObjects; public Collection<PathObject> getAllObjects(boolean includeRoot); Get all the objects in the hierarchy, optionally including the root object. Parameters:; includeRoot - ; Returns:; Since:; v0.4.0. nObjects; public int nObjects(); Number of objects in the hierarchy, excluding the root. Returns:. setHierarchy; public void setHierarchy(PathObjectHierarchy hierarchy); Set the contents of this hierarchy to be the same as that of another hierarchy.; In practice, this means copying the root and TMA grid of the second hierarchy. Parameters:; hierarchy - . getObjectsForROI; public Collection<PathObject> getObjectsForROI(Class<? extends PathObject> cls,; ROI roi); Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. ; This relies on centroids for detections, and a 'covers' rule for others. Parameters:; cls - class of PathObjects (e.g. PathDetectionObject), or null to accept all; roi - ; Returns:. getObjectsForRegion; public Collection<PathObject> getObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region,; Collection<PathObject> pathObjects); Get the objects overlapping or close to a specified region.; Note that this performs a quick check; the results typically should be filtered if a more strict test for overlapping is applied. Parameters:; cls - class of object to return (subclasses are included); region - requested region overlapping the objects ROI; pathObjects - optionally collection to which objects will be added; Returns:; collection containing identified objects (same as the input collection, if provided). hasObjectsForRegion; public boolean hasObjectsForRegion(Class<? e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:18213,extend,extends,18213,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability,"the singleton instance of the UserDirectoryManager. Path; getLocalizationDirectoryPath(). Get the path to where localization property files should be written. Path; getLogDirectoryPath(). Get the path to where log files should be written. Path; getRelativePathOrNull(String other);  ; Path; getScriptsDirectoryPath(). Get the path to where shared script files should be written. Path; getUserPath(). Get the user path where additional files may be stored. ReadOnlyObjectProperty<Path>; localizationDirectoryProperty(). Read only property representing the localization directory. ReadOnlyObjectProperty<Path>; logDirectoryProperty(). Read only property representing the log file directory. ReadOnlyObjectProperty<Path>; scriptsDirectoryProperty(). Read only property representing the shared scripts directory. void; setUserPath(Path path). Set the user path where additional files may be stored. ObjectProperty<Path>; userDirectoryProperty(). Property representing the user directory. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. userDirectory; public ObjectProperty<Path> userDirectoryProperty; Property representing the user directory.; This may be null if the directory has not been set. See Also:. userDirectoryProperty(). extensionsDirectory; public ReadOnlyObjectProperty<Path> extensionsDirectoryProperty; Read only property representing the extensions directory.; This is based upon userDirectoryProperty and DIR_EXTENSIONS. See Also:. extensionsDirectoryProperty(). cssDirectory; public ReadOnlyObjectProperty<Path> cssDirectoryProperty; Read only property representing the css directory.; This is based upon userDirectoryProperty and DIR_CSS. See Also:. cssDirectoryProperty(). localizationDirectory; public ReadOnlyObjectProperty<Path> localizationDirectoryProperty; Read only property representing the localization directory.; This is based upon userDirectoryProperty and DIR_LO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:3968,inherit,inherited,3968,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['inherit'],['inherited']
Modifiability,"the specified search paths. locateFile(URI, int, Path...) - Static method in class qupath.lib.io.UriUpdater. Attempt to update a URI to find an existing file using the specified search paths. LOCATION - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; locationFontSize - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; locationFontSizeProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Preferred font size for the location text in the viewer. locationUpdated - Variable in class qupath.lib.gui.viewer.QuPathViewer. Flag used to indicate that the visible region in the viewer has changed. LOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockActions - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; LockActions() - Constructor for class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; lockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'locked'. lockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'locked', firing an update event if the status of any object is changed. lockSelectedToolProperty() - Method in class qupath.lib.gui.ToolManager. Property to request that the selected tool be locked. log() - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that returns the natural logarithm of values. LOG_DELIMITER - Static variable in class qupath.lib.gui.viewer.recording.ViewTracker;  ; LOG_VIEWER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LOGARITHM - Enum constant in enum class qupath.lib.gui.charts.HistogramChart.CountsTransformMode. Natural logarithm of raw bin counts. logDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:657761,extend,extends,657761,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"thin a specified region. static boolean; duplicateAllSelectedObjects(PathObjectHierarchy hierarchy). Duplicate all the selected objects in a hierarchy. static boolean; duplicateObjects(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Duplicate the specified objects, assigning new IDs for each object. static boolean; duplicateObjects(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects,; boolean createNewIDs). Duplicate the specified objects, optionally creating new IDs. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotation objects. static boolean; duplicateSelectedObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Duplicate the selected objects. static Map<String,PathObject>; findByStringID(Collection<String> ids,; Collection<? extends PathObject> pathObjects). Find objects based on a String representation of their IDs. static Map<UUID,PathObject>; findByUUID(Collection<UUID> ids,; Collection<? extends PathObject> pathObjects). Find objects based on their IDs. static List<PathObject>; findObjectsOutsideImage(Collection<? extends PathObject> pathObjects,; ImageServer<?> server,; boolean ignoreIntersecting). Get all the objects with ROIs that are outside the bounds of an image. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region. static List<PathObject>; findObjectsOutsideRegion(Collection<? extends PathObject> pathObjects,; ImageRegion region,; int minZ,; int maxZ,; int minT,; int maxT,; boolean ignoreIntersecting). Get all the objects in a collection that are outside a defined region, expanded for multiple z-slices and timepoints. static List<PathObject>; getAncestorList(PathObject pathObject). Return a list of object ancestors, starting from the root object and ending with PathObject; (assum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:3813,extend,extends,3813,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['extend'],['extends']
Modifiability,"this enum class, in; the order they are declared. values() - Method in interface qupath.lib.measurements.MeasurementList. Get all measurement values as a double array. values() - Static method in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent.HierarchyEventType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.PathObjectFilter. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.objects.utils.Tiler.TileAlignment. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.plugins.ParallelTileObject.Status. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.roi.interfaces.ROI.RoiType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.lib.roi.RoiTools.CombineOp. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Returns an array containing the constants of this enum class, in; the order they are declared. values() - Static method in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Returns an array containing the constants of this enum class, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1093507,plugin,plugins,1093507,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"thod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. DetectCytokeratinCV; public DetectCytokeratinCV(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html:2049,inherit,inherited,2049,javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/DetectCytokeratinCV.html,1,['inherit'],['inherited']
Modifiability,"thod Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Methods inherited from class qupath.lib.plugins.AbstractDetectionPlugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. PositivePixelCounterIJ; public PositivePixelCounterIJ(). Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:2283,inherit,inherited,2283,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['inherit'],['inherited']
Modifiability,"thod in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass represents a built-in intensity class. isH_DAB() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been genera",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623511,plugin,plugins,623511,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"thod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts.BarChartBuilder. java.lang.Object; qupath.lib.gui.charts.Charts.BarChartBuilder. Enclosing class:; Charts. public static class Charts.BarChartBuilder; extends Object; Builder for creating scatter charts. Field Summary; Fields. Modifier and Type; Field; Description; protected double; height;  ; protected ImageData<?>; imageData;  ; protected Side; legendSide;  ; protected boolean; legendVisible;  ; protected double; markerOpacity;  ; protected String; title;  ; protected QuPathViewer; viewer;  ; protected double; width;  ; protected String; xLabel;  ; protected String; yLabel;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; BarChart<String,Number>; build(). Build a chart according to the specified parameters. Charts.BarChartBuilder; classifications(Collection<? extends PathObject> pathObjects). Plot two measurements against one another for the specified objects. protected BarChart<String,Number>; createNewChart();  ; protected BarChart<String,Number>; createNewChart(Axis<String> xAxis,; Axis<Number> yAxis);  ; protected String; getDefaultWindowTitle(). Get a window title to use for charts of this kind, assuming the user has not ; specified one. protected Charts.BarChartBuilder; getThis();  ; Charts.BarChartBuilder; height(double height). Set the preferred height of the chart. Charts.BarChartBuilder; imageData(ImageData<?> imageData). Specify an ImageData object. Charts.BarChartBuilder; legend(boolean show). Specify whether the legend should be shown or not. Charts.BarChartBuilder; legend(String side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; legend(Side side). Specify the side of the chart where the legend should be shown. Charts.BarChartBuilder; markerOpacity(double opacity). Specify the m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html:1208,extend,extends,1208,javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.BarChartBuilder.html,1,['extend'],['extends']
Modifiability,"thod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class ObjectsMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions. Enclosing class:; ObjectsMenuActions. @ActionMenu(""Menu.Objects""); public class ObjectsMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectsMenuActions.AnnotationActions; annotationActions;  ; final ObjectsMenuActions.DeleteActions; deleteActions;  ; final ObjectsMenuActions.LockActions; lockActions;  ; final org.controlsfx.control.action.Action; REFRESH_DUPLICATE_OBJECT_IDS;  ; final org.controlsfx.control.action.Action; REFRESH_OBJECT_IDS;  ; final ObjectsMenuActions.SelectActions; selectActions;  ; final org.controlsfx.control.action.Action; SEP_4;  ; final org.controlsfx.control.action.Action; SHOW_OBJECT_DESCRIPTIONS;  . Constructor Summary; Constructors. Constructor; Description; Actions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. deleteActions; @ActionMenu(""Menu.Objects.Delete""); public final ObjectsMenuActions.DeleteActions deleteActions. selectActions; @ActionMenu(""Menu.Objects.Select""); public final ObjectsMenuActions.SelectActions selectActions. lockActions; @ActionMenu(""Menu.Objects.Lock""); public final ObjectsMenuActions.LockActions lockActions. SHOW_OBJECT_DESCRIPTIONS; public final org.controlsfx.control.action.Action SHOW_OBJECT_DESCRIPTIONS. SEP_4; public final org.controlsfx.control.action.Action SEP_4. annotationActions; @ActionMenu(""Menu.Objects.Annotations""); public final ObjectsMenuActions.AnnotationActions annotationActions. REFRESH_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshIds""); public final org.controlsfx.control.action.Action REFRESH_OBJECT_IDS. REFRESH_DUPLICATE_OBJECT_IDS; @ActionConfig(""Action.Objects.refreshDuplicateIds""); public final org.contro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html:1280,inherit,inherited,1280,javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ObjectsMenuActions.Actions.html,1,['inherit'],['inherited']
Modifiability,"thod. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class PythonStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.PythonStyler. All Implemented Interfaces:; ScriptStyler. public class PythonStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea, based on Python syntax. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeConsoleStyles(String text,; boolean logConsole). Compute styling for the specified text, considering it will be used in the console. org.fxmisc.richtext.model.StyleSpans<Collection<String>>; computeEditorStyles(String text). Compute styling for the specified text, considering it will be used in the main editor. Set<String>; getLanguageNames(). Get a set of the scripting languages supported by this styler. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler; getBaseStyle. Method Details. getLanguageNames; public Set<String> getLanguageNames(); Description copied from interface: ScriptStyler; Get a set of the scripting languages supported by this styler.; ; Note: One of the names returned by this method must match exactly (but case-insensitive) ; that of the corresponding ScriptLanguage for QuPath to automatically apply it to the script editor ; when needed. Specified by:; getLanguageNames in interface ScriptStyler; Returns:. computeEditorStyles; public org.fxmisc.richtext.model.StyleSpans<Collection<String>> computeEditorStyles(String text); Description copied from interface: ScriptStyler; Compute styling for the specified text, considering it will be used in the main editor. Specified by:; computeEditorStyles in interface ScriptS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html:1266,inherit,inherited,1266,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/PythonStyler.html,1,['inherit'],['inherited']
Modifiability,"thod. SEARCH. Package qupath.lib.io; Class PointIO. java.lang.Object; qupath.lib.io.PointIO. public class PointIO; extends Object; Helper class for reading/writing point objects in terms of their x,y coordinates. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; PointIO();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; readPoints(File file). Read a list of point annotations from a file. static List<PathObject>; readPoints(InputStream stream). Read a list of point annotations from a stream. static List<PathObject>; readPointsObjectList(File file). Deprecated. static void; writePoints(File file,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a file. static void; writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects). Write a list of point annotations to a stream. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PointIO; public PointIO(). Method Details. readPoints; public static List<PathObject> readPoints(InputStream stream); throws IOException; Read a list of point annotations from a stream. Parameters:; stream - ; Returns:; list of PathObjects; Throws:; IOException. readPoints; public static List<PathObject> readPoints(File file); throws IOException; Read a list of point annotations from a file. Parameters:; file - ; Returns:; list of PathObjects; Throws:; IOException. writePoints; public static void writePoints(OutputStream stream,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point annotations to a stream. Parameters:; stream - ; pathObjects - ; Throws:; IOException. writePoints; public static void writePoints(File file,; Collection<? extends PathObject> pathObjects); throws IOException; Write a list of point ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html:1300,inherit,inherited,1300,javadoc/docs/qupath/lib/io/PointIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PointIO.html,1,['inherit'],['inherited']
Modifiability,"thod; Description; static OMEPyramidWriter.CompressionType; fromFriendlyString(String friendlyCompression). Get the CompressionType corresponding to the given input. String; getOMEString(ImageServer<?> server). Get the String representation understood by OMETiffWriter. boolean; supportsImage(ImageServer<?> server). Returns true if the compression type supports a specific image server, or false ; if it is incompatible. boolean; supportsImage(PixelType pixelType,; int nChannels,; boolean isRGB). Returns true if the compression type supports a specific PixelType output ; with the given number of channels - and (optionally) RGB status. String; toFriendlyString(). Get a friendlier string representation. static OMEPyramidWriter.CompressionType; valueOf(String name). Returns the enum constant of this class with the specified name. static OMEPyramidWriter.CompressionType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. UNCOMPRESSED; public static final OMEPyramidWriter.CompressionType UNCOMPRESSED; No compression (faster to write, no loss of information, but large file sizes). DEFAULT; public static final OMEPyramidWriter.CompressionType DEFAULT; Default (QuPath will select compression option based on image size and type, may be lossless or lossy). JPEG; public static final OMEPyramidWriter.CompressionType JPEG; JPEG compression (only for single channel or RGB 8-bit images). J2K; public static final OMEPyramidWriter.CompressionType J2K; Lossless JPEG-2000 compression. J2K_LOSSY; public static final OMEPyramidWriter.CompressionType J2K_LOSSY; Lossy JPEG-2000 compression. LZW; public static final OMEPyramidWriter.CompressionType LZW; LZW compre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html:2557,inherit,inherited,2557,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.CompressionType.html,2,['inherit'],['inherited']
Modifiability,"thods. Modifier and Type; Method; Description; protected boolean; allowSmoothInterpolation(). Returns true if this server is permitted to use smooth interpolation when resizing. protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. protected BufferedImage; getEmptyTile(int width,; int height);  ; protected BufferedImage; getEmptyTile(int width,; int height,; boolean doCache). Create an empty tile for this server, using the default color model. protected BufferedImage; getTile(TileRequest tileRequest). Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. protected abstract BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, createID, createServerBuilder, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion. Constructor Details. AbstractTileableImageServer; protected AbstractTileableImageServer(). Method Details. getEmptyTile; protected BufferedImage getEmptyTile(int width,; int height); throws IOException. Throws",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:2454,inherit,inherited,2454,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['inherit'],['inherited']
Modifiability,"thodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings). Apply the settings to the display, if they are compatible. static ImageDisplaySettings; displayToSettings(ImageDisplay display,; String name). Create a new image display settings object from the image display. static ResourceManager.Manager<ImageDisplaySettings>; getResourcesForProject(Project<?> project). Get the resource manager for image display settings from a project. static Optional<ImageDisplaySettings>; parseDisplaySettings(JsonElement element). Parse the JSON element into an image display settings object, if possible. static ImageDisplaySettings; parseDisplaySettings(Path path). Parse the JSON element into an image display settings object. static boolean; settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings). Check if the settings are compatible with the display. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DisplaySettingUtils; public DisplaySettingUtils(). Method Details. displayToSettings; public static ImageDisplaySettings displayToSettings(ImageDisplay display,; String name); Create a new image display settings object from the image display.; This is typically used to save the settings to a file. Parameters:; display - ; name - ; Returns:. settingsCompatibleWithDisplay; public static boolean settingsCompatibleWithDisplay(ImageDisplay display,; ImageDisplaySettings settings); Check if the settings are compatible with the display.; This is true if the number and names of the channels match. Parameters:; display - ; settings - ; Returns:. applySettingsToDisplay; public static boolean applySettingsToDisplay(ImageDisplay display,; ImageDisplaySettings settings); Apply the settings to the display, if they are compatible. Parameters:; display - ; sett",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html:1819,inherit,inherited,1819,javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/DisplaySettingUtils.html,1,['inherit'],['inherited']
Modifiability,tic method in class qupath.lib.analysis.images.ContourTracing. Convert a labeled image to objects. labelText(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Prompt to include beside the resource name text field. LAPLACIAN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Laplacian of Gaussian filter. laplacianOfGaussian(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the Laplacian of Gaussian image. LARGE - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; LARGE - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; lastChangeTimestamp() - Method in class qupath.lib.gui.viewer.OverlayOptions. Get a property representing the timestamp of the last recorded change for any property. lastValue - Variable in class qupath.lib.plugins.parameters.BooleanParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.DoubleParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.IntParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.NumericParameter;  ; lastValue - Variable in class qupath.lib.plugins.parameters.StringParameter;  ; launchInstanceFromSwing() - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from within a Swing/AWT application. launchTMADataViewer(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Open new window with the TMA data viewer. layers(Collection<PathOverlay>) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay layers as a collection. layers(PathOverlay...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify one or more overlay la,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:647644,plugin,plugins,647644,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tic method in class qupath.lib.roi.ROIs. Create a polyline ROI from a list of points. createPreferencesDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Show a dialog to adjust QuPath preferences. createProcessor(Collection<? extends MeasurementProcessor.CustomMeasurement<S, T>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProcessor(MeasurementProcessor.CustomMeasurement<S, T>...) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and heigh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:212765,extend,extends,212765,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"tic method in class qupath.lib.scripting.QP. Create annotation around the full image for the specified image, on all z-slices and timepoints. createAllMenuActions(QuPathGUI) - Static method in class qupath.lib.gui.actions.menus.Menus. Create a collection of all the actions that should be installed in QuPath's main menubar. createAllRequests(ImageServer<?>, double) - Static method in class qupath.lib.regions.RegionRequest. Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). createAnnotationConverter() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. createAnnotationConverter() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. createAnnotationConverter(Map<? extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. createAnnotationObject(ROI) - Static method in class qupath.lib.objects.PathObjects. Create an unclassified annotation object. createAnnotationObject(ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a classified annotation object. createAnnotationObject(ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a classified annotation object with a specified measurement list. createAnnotationOutputHandler() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an OutputHandler that attempts to convert the output into annotation objects. createAnnotationOutputHandler() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler that attempts to convert the output i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:158126,extend,extends,158126,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"tic void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6351,extend,extends,6351,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"tically applies 1 or 3 intensity thresholds to classify cells. PositiveCellDetection() - Constructor for class qupath.imagej.detect.cells.PositiveCellDetection. Default constructor. positiveClassification(boolean) - Static method in class qupath.lib.objects.PathObjectPredicates. Predicate that returns true of an object has a positive classification. PositivePixelCounterIJ - Class in qupath.imagej.detect.tissue. Simple command to detect regions with positive staining. PositivePixelCounterIJ() - Constructor for class qupath.imagej.detect.tissue.PositivePixelCounterIJ;  ; postprocess(TaskRunner, ImageData<T>) - Method in class qupath.lib.plugins.AbstractPlugin. Called immediately after running any generated tasks. postprocess(TaskRunner, ImageData<T>) - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.gui.TaskRunnerFX;  ; postProcess(Collection<? extends PathTask>) - Method in class qupath.lib.plugins.AbstractTaskRunner. Perform post-processing after a task has complete. postprocessing(Collection<? extends ImageOp>) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from a collection. postprocessing(ImageOp...) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the postprocessing steps from an array. power(double) - Static method in class qupath.opencv.ops.ImageOps.Core. Raise every pixel element to a power. power(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Raise elements of an array to a specified power. predict(Map<String, Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert input image patches to a blobs, apply a PredictionFunction (optionally with multiple inputs/outputs),; and convert the output to a standard Mat. predict(Map<String, Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take multiple inputs. predict",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:774327,plugin,plugins,774327,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tify tissue regions.; ; Uses fixed approach to downsampling images & global threshold applied to RGB images only.; ; TODO: Provide choice of channels to threshold; TODO: Support 16-bit data. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterLi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:1870,plugin,plugin,1870,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['plugin'],['plugin']
Modifiability,"ting objects and ROIs. qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting. Defines helper class for running scripts. qupath.lib.scripting.languages. Base classes for defining scripting languages that QuPath can support. qupath.opencv. Detection plugins using OpenCV. qupath.opencv.dnn. QuPath classes to use OpenCV's DNN module. qupath.opencv.features. Classes for feature calculation using OpenCV. qupath.opencv.io. Support for serializing and deserializing OpenCV objects. qupath.opencv.ml. QuPath classes to apply machine learning to pixels and objects using OpenCV. qupath.opencv.ml.objects. QuPath object classifiers using OpenCV. qupath.opencv.ml.objects.features. Extract object features using OpenCV. qupath.opencv.ml.pixel. QuPath pixel classifiers using OpenCV. qupath.opencv.ops. Image operations, implemented with OpenCV. qupath.opencv.tools. Additional processing methods for use with OpenCV Mats. qupath.process.gui. General-purpose image processing and machine learning commands. qupath.process.gui.commands. QuPath commands relevant for machine learning. qupath.process.gui.commands.density. UI classes to support density maps. qupath.process.gui.commands.ml. Interfaces and helper classes for using machine learning in QuPath. qupath.process.gui.commands.ui. Reusable UI classes to support processing commands. qupathj. ImageJ plugins to install within QuPath's embedded ImageJ instance to enable exchanging ROIs and objects. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allpackages-index.html:8259,plugin,plugins,8259,javadoc/docs/allpackages-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allpackages-index.html,2,['plugin'],['plugins']
Modifiability,"ting.QP. Export all objects (excluding root object) to an output file as GeoJSON. exportAllObjectsToGeoJson(String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export all objects (excluding root object) to an output file as GeoJSON. exportImageActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ExportImageActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; exportJson(boolean) - Method in class qupath.lib.images.writers.TileExporter. Optionally export a JSON file that includes label information and image/label pairs, where available. exportMeasurements(File) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportMeasurements(OutputStream) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportObjectsAsGeoJSON(File, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. exportObjectsAsGeoJSON(OutputStream, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. exportObjectsAsGeoJSON(Path, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. ExportObjectsCommand - Class in qupath.lib.gui.commands. Command to export object(s) in GeoJSON format to an output file. exportObjectsToGeoJson(Collection<? extends PathObject>, String, String, String...) - Static method in class qupath.lib.scripting.QP. Export specified objects to an output file as GeoJSON. exportObjectsToGeoJson(Collection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:289761,extend,extends,289761,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ting.languages.YamlLanguage. qupath.lib.gui.scripting.languages.ScriptLanguageProvider; qupath.lib.scripting.ScriptParameters; qupath.lib.scripting.ScriptParameters.Builder; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider; qupath.lib.gui.scripting.ScriptTab; qupath.lib.gui.SelectableItem<T>; qupath.lib.gui.panes.SelectedMeasurementTableView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener, java.beans.PropertyChangeListener); qupath.lib.gui.panes.ServerSelector; qupath.lib.images.servers.ServerTools; qupath.lib.roi.ShapeSimplifier; qupath.lib.gui.SharedThreadPoolManager (implements java.lang.AutoCloseable); qupath.lib.analysis.images.SimpleImages; qupath.lib.gui.panes.SimpleImageViewer; qupath.lib.plugins.workflow.SimplePluginWorkflowStep (implements java.io.Externalizable, qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.process.gui.commands.SimpleThresholdCommand (implements java.lang.Runnable); qupath.imagej.processing.SimpleThresholding; qupath.process.gui.commands.SingleMeasurementClassificationCommand (implements java.lang.Runnable); qupath.lib.gui.panes.SlideLabelView (implements javafx.beans.value.ChangeListener<T>); qupath.lib.images.servers.SparseImageServer.Builder; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager (implements java.lang.AutoCloseable); qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand; qupath.process.gui.commands.SplitProjectTrainingCommand (implements java.lang.Runnable); qupath.lib.color.StainVector (implements java.io.Externalizable); qupath.lib.analysis.stats.StatisticsHelper; qupath.lib.plugins.parameters.StringParameter; qupath.lib.gui.commands.SummaryMeasurementTableCommand; qupath.lib.extension.svg.SvgExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.extension.svg.Sv",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:33784,plugin,plugins,33784,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"tion copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getParentObjects; protected Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Description copied from class: AbstractPlugin; Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; getParentObjects in class AbstractPlugin<T>; Parameters:; imageData - ; Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<T>; Parameters:; imageData - ; Returns:. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:4329,extend,extends,4329,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,4,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"tion measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; DETECTIONS_ALL - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (all subtypes). DETECTIONS_FILL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; detectionsToCells(Collection<? extends PathObject>, double, double) - Static method in class qupath.lib.objects.CellTools. Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. detectionStrokeThicknessProperty() - Static method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:254500,plugin,plugins,254500,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tion of objects to process, based on the contents of the PluginRunner. protected Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses();  ; protected boolean; parseArgument(ImageData<BufferedImage> imageData,; String arg). Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:2525,plugin,plugin,2525,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"tion. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK - Static variable in class qupath.lib.color.ColorToolsAwt. Black, with 50% opacity. TRANSLUCENT_BLACK_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. Black with opacity at 50%. TRANSLUCENT_WHITE - Static variable in class qupath.lib.color.ColorToolsAwt. White, with 50% opacity. TRANSLUCENT_WHITE_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. White with opacity at 50%. TRANSPARENT - Static variable in class qupath.lib.images.servers.ImageChannel. Special color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<? extends PathObject>, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) - Static method in class qupath.lib.roi.GeometryTools. Test a polygon for validity, attempting to fix TopologyValidationErrors if possible. tryToInterpretMessage(Throwable, int, boolean) - Method in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage;  ; tryToLoad(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlide. tryToLoadQuietly(String...) - Static method in class qupath.lib.images.servers.openslide.jna.OpenSlideLoader. Try to load OpenSlid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1054466,extend,extends,1054466,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"tion. union(ROI...) - Static method in class qupath.lib.roi.RoiTools. Create union of multiple ROIs. uniqueNames(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Remove duplicate names from a derived PathClass. unitsMatch2D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width and height are the same. unitsMatch3D() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the units for pixel width, height and z-spacing are the same. UNKNOWN - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI status is unclear, e.g. UNKNOWN - Static variable in class qupath.lib.common.Version. Constant representing any unknown version. UNKNOWN_LENGTH - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown dimension length. UNKNOWN_SHAPE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown shape. UNKNOWN_SIZE - Static variable in class qupath.opencv.dnn.DnnShape. Constant to represent an unknown size (i.e. unlimitedDatapoints() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Show all datapoints, without subsampling, even when this may cause performance issues. UNLOCK_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.LockActions;  ; UNLOCKED - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept any object that is 'unlocked'. unlockObjects(PathObjectHierarchy, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Set specified objects to be 'unlocked'. unlockSelectedObjects(PathObjectHierarchy) - Static method in class qupath.lib.objects.PathObjectTools. Set selected objects to be 'unlocked', firing an update event if the status of any object is changed. unmanageMenuBar(MenuBar) - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Do not manage the system menubar status for the gi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1059259,variab,variable,1059259,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"tion; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate conto",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1708,inherit,inherited,1708,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,1,['inherit'],['inherited']
Modifiability,"tion<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that anal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:2610,plugin,plugin,2610,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,2,['plugin'],['plugin']
Modifiability,"tionFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using areas or bars. HistogramChart.CountsTransformMode; getCountsTransform(). Get the current ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4473,inherit,inherited,4473,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"tional files may be stored. setValue(int, int, float) - Method in class qupath.imagej.tools.PixelImageIJ;  ; setValue(int, int, float) - Method in interface qupath.lib.analysis.images.SimpleModifiableImage. Set the value of a single pixel. setValue(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter. Set the last value; this will apply a range check using clipping. setValue(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter. Set the last value; this will apply a range check using clipping. setValue(Boolean) - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setValue(S) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setValue(String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setValue(S) - Method in interface qupath.lib.plugins.parameters.Parameter. Set the Parameter to have a specified value. setValues(DataBuffer, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Set all values in a DataBuffer. setValueWithBoundsCheck(Double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setValueWithBoundsCheck(Integer) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setValueWithBoundsCheck(S) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. setVGrowPriority(Priority, Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. setViewerDownsample(QuPathViewer, double) - Static method in class qupath.lib.gui.commands.Commands. Set the downsample factor for the specified viewer. setWandSensitivity(double) - Static method in class qupath.process.gui.Wand",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:955097,plugin,plugins,955097,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tions based upon existing detections. Parameters:; subdivision - subdivision representing object relationships; bounds - if provided, clip the annotations to fit within the ROI; Returns:; a list of annotations, one for each classification represented by objects within the subdivision within the bounds. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; However rather than set this as the object classification, it will be used to set the name and color of the object ; (so as to avoid overriding an existing classification).; Returns:; a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:7752,extend,extends,7752,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"tions, PathObjectSelectionModel, double) - Static method in class qupath.lib.gui.viewer.PathObjectPainter. Paint the specified tissue microarray grid. paintViewer(Graphics, int, int) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; PaneTools - Class in qupath.lib.gui.tools. Deprecated.; since v0.5.0; GridPaneUtils contains many of the features. PaneTools() - Constructor for class qupath.lib.gui.tools.PaneTools. Deprecated.;  ; parallelize() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Parallelize tile export, if possible. parallelize(boolean) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the default number of threads (current 4). parallelize(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify if tile export should be parallelized if possible, with the requested number of threads. ParallelTileObject - Class in qupath.lib.plugins. A temporary object, used during parallel processing to represent a tile currently being used for object; detection. ParallelTileObject.Status - Enum Class in qupath.lib.plugins. Current processing status for the tile. Parameter<S> - Interface in qupath.lib.plugins.parameters. Interface defining algorithm parameters, which need to be displayed to users somehow. parameterChanged(ParameterList, String, boolean) - Method in class qupath.lib.gui.charts.HistogramDisplay;  ; parameterChanged(ParameterList, String, boolean) - Method in interface qupath.lib.plugins.parameters.ParameterChangeListener. Notify listener that a parameter value has changed. ParameterChangeListener - Interface in qupath.lib.plugins.parameters. Interface for objects that need to be notified when parameters have their values changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plug",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:744076,plugin,plugins,744076,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tiscaleResultsBuilder.FeatureMap. All Implemented Interfaces:; Map<MultiscaleFeatures.MultiscaleFeature,Mat>. Enclosing class:; MultiscaleFeatures.MultiscaleResultsBuilder. public static class MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeatu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1577,inherit,inherited,1577,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,2,['inherit'],['inherited']
Modifiability,"tivePlugin<BufferedImage>; Experimental plugin to help with the quantification of subcellular structures. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SubcellularDetection();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SubcellularDetection; public SubcellularDetection(). Method Details. runPlugi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html:1730,plugin,plugin,1730,javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/SubcellularDetection.html,1,['plugin'],['plugin']
Modifiability,"to an image (e.g. color transforms, channel extraction, filtering, normalization), ; which may impact the number and type of image channels - but not other aspects of the image, with the exception of removing any padding.; ; Operations may be chained. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; Mat; apply(Mat input). Apply operation to the image. default List<ImageChannel>; getChannels(List<ImageChannel> channels). Get appropriate channels to reflect the output of this transform. default PixelType; getOutputType(PixelType inputType). Get the output pixel type. default Padding; getPadding(). Get the padding requested for this operation. default Collection<URI>; getURIs(). Default implementation returns an empty list; classes should override this if necessary. default boolean; updateURIs(Map<URI,URI> replacements). Default implementation makes no changes; classes should override this if necessary. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Method Details. apply; Mat apply(Mat input); Apply operation to the image. The input may be modified (and the operation applied in-place), ; therefore should be duplicated if a copy is required to be kept.; ; Note that any non-empty padding will be removed, potentially giving an output image smaller than ; the input. If this is not desirable use ImageOps.padAndApply(ImageOp, Mat). Parameters:; input - input image; Returns:; output image, which may be the same as the input image; See Also:. getPadding(); ImageOps.padAndApply(ImageOp, Mat, int); ImageOps.padAndApply(ImageOp, Mat). getPadding; default Padding getPadding(); Get the padding requested for this operation.; ; The default is to return Padding.empty().; ; Subclasses that perform neighborhood operations should override this.; If the padding is non-empty, it will be removed when apply(Mat) is called - ; and so the Mat that is output will be smaller than the Mat that was ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html:1581,inherit,inherited,1581,javadoc/docs/qupath/opencv/ops/ImageOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOp.html,2,['inherit'],['inherited']
Modifiability,"to apply to all channels, or an array of Mat.channels() values.; Returns:. divide; public static ImageOp divide(double... values); Divide all pixels by a constant. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. add; public static ImageOp add(double... values); Add a constant to all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. subtract; public static ImageOp subtract(double... values); Subtract a constant from all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. power; public static ImageOp power(double value); Raise every pixel element to a power. Parameters:; value - ; Returns:. sqrt; public static ImageOp sqrt(); Calculate the square root of all pixel values. Returns:. sequential; public static ImageOp sequential(Collection<? extends ImageOp> ops); Apply a collection of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:5053,extend,extends,5053,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,2,['extend'],['extends']
Modifiability,"to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel); Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Parameters:; mainChannel - the main channel to display (colormap will be used); alphaChannel - an optional alpha channel (colormap will be ignored); Returns:; the ColorModels.ColorModelBuilder. createBand; public static ColorModels.DisplayBand createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay); Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). Parameters:; colorMapName - name of the ColorMaps.ColorMap; band - image band (the BufferedImage term - QuPath often refe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html:1695,inherit,inherited,1695,javadoc/docs/qupath/lib/color/ColorModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorModels.html,2,['inherit'],['inherited']
Modifiability,"to pass names for all channels: ; by passing n values, the first n channel names will be set.; Any name that is null will be left unchanged. Parameters:; imageData - ; colors - ; See Also:. setChannelNames(ImageData, String...). setChannels; public static void setChannels(ImageChannel... channels); Set the channels for the current ImageData. Parameters:; channels - ; See Also:. setChannels(ImageData, ImageChannel...). setChannels; public static void setChannels(ImageData<?> imageData,; ImageChannel... channels); Set the channels for the specified ImageData.; Note that number of channels provided must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:64574,plugin,plugin,64574,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['plugin'],['plugin']
Modifiability,"to write PNG images using ImageIO. PngWriter() - Constructor for class qupath.lib.images.writers.PngWriter;  ; Point - Interface in qupath.lib.geom. Simple interface defining a point. POINT - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents points. Point2 - Class in qupath.lib.geom. A 2D point (x & y coordinates). Point2() - Constructor for class qupath.lib.geom.Point2. Default constructor for a point at location (0,0). Point2(double, double) - Constructor for class qupath.lib.geom.Point2. Point constructor. PointIO - Class in qupath.lib.io. Helper class for reading/writing point objects in terms of their x,y coordinates. PointIO() - Constructor for class qupath.lib.io.PointIO;  ; pointRadius - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pointRadiusProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Radius of the circle used to draw individual points in a point annotation (in pixels). POINTS - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Points annotation and counting tool. POINTS_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POINTS_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PointsROI - Class in qupath.lib.roi. ROI representing a collection of 2D points (distinct x,y coordinates). POLYGON - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Polygon drawing tool (closed). POLYGON_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYGON_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolygonROI - Class in qupath.lib.roi. ROI representing an arbitrary closed polygon. POLYLINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Polyline drawing tool (open). POLYLINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; POLYLINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; PolylineROI - Class in qupath.lib.roi. ROI rep",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:771183,variab,variable,771183,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"toCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. protected ScriptAutoCompletor; getDefaultAutoCompletor(String languageName). Default method to get a suitable auto completor for the given language name. protected String; getDefaultScriptName();  ; protected DefaultScriptLanguage.ImportStatementGenerator; getImportStatementGenerator(). Get an DefaultScriptLanguage.ImportStatementGenerator. String; getImportStatements(Collection<Class<?>> classes). Get the import statements as a String, to add at the beginning of the executed script. String; getStaticImportStatements(Collection<Class<?>> classes). Get the static import statements as a String, to add at the beginning of the executed script. protected String; tryToInterpretMessage(Throwable cause,; int line,; boolean defaultImportsAvailable);  . Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. JAVA_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator JAVA_IMPORTER; Java-like import statements. PYTHON_IMPORTER; protected static final DefaultScriptLanguage.ImportStatementGenerator PYTHON_IMPORTER; Pythonic import statements. Constructor Details. DefaultScriptLanguage; public DefaultScriptLanguage(ScriptEngineFactory factory); Constructor for a ExecutableLanguage based on a ScriptEngineFactory.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; factory - . DefaultScriptLanguage; public DefaultScriptLanguage(String name,; Collection<String> exts,; ScriptAutoCompletor completor); Constructor for a ExecutableLanguage.; ; Note: the scriptEngine is not stored within this class. It is always fetched via ScriptLanguageProvider. Parameters:; name - the language name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html:2998,inherit,inherited,2998,javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/DefaultScriptLanguage.html,1,['inherit'],['inherited']
Modifiability,"tom ColorModel. setColorRGB(Integer) - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, use PathObject.setColor(Integer) instead. setComplete(boolean) - Method in class qupath.lib.plugins.ParallelTileObject. Notify the tile that its processing is done. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; setContextMenu(ContextMenu) - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Set the context menu for the control. setContextMenu(ContextMenu) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; setCountsTransform(HistogramChart.CountsTransformMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the current counts transform. setCreateFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new headless TaskRunner instances. setCreateHeadlessFunction(IntFunction<TaskRunner>) - Method in class qupath.lib.plugins.TaskRunnerUtils. Set the function used to generate new TaskRunner instances. setCursor(Cursor) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested cursor to display in this viewer. setCustomPixelLayerOverlay(PathOverlay) - Method in class qupath.lib.gui.viewer.QuPathViewer. Optionally set a custom overlay to use for the pixel layer. setDebug() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to DEBUG. setDebugMode(boolean) - Static method in class qupath.imagej.detect.cells.WatershedCellDetection. Set whether to use debug mode. setDefaultColorMap(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorMaps. Set the default ColorMaps.ColorMap. setDefaultImageData(ImageData<BufferedImage>) - Static method in class qupath.lib.scripting.QP. Set the default image data, which will be returned by QP.getCurrentImageData() if it would otherwise return null ; (i.e. setDefaultImports(Collection<Class<?>>) - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:921226,plugin,plugins,921226,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Specified by:; getSupportedParentObjectClasses in interface PathInteractivePlugin<T>; Overrides:; getSupportedParentObjectClasses in class AbstractDetectionPlugin<T>; Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDef",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:3491,extend,extends,3491,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,4,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"tor() - Constructor for class qupath.lib.objects.DefaultPathObjectComparator;  ; DefaultPathObjectConnectionGroup - Class in qupath.lib.objects. Simple, default implementation of PathObjectConnectionGroup. DefaultPathObjectConnectionGroup() - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Default constructor. DefaultPathObjectConnectionGroup(PathObjectConnectionGroup) - Constructor for class qupath.lib.objects.DefaultPathObjectConnectionGroup. Create a connections group, copying the connections from an existing group. DefaultROIComparator - Class in qupath.lib.roi. Default comparator to enable ROIs to be sorted in a more predictable manner. DefaultROIComparator() - Constructor for class qupath.lib.roi.DefaultROIComparator;  ; DefaultScriptableWorkflowStep - Class in qupath.lib.plugins.workflow. A scriptable workflow step where the script is provided directly as an argument. DefaultScriptableWorkflowStep(String, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Create a workflow step using a provided script string that will be called as-is. DefaultScriptableWorkflowStep(String, Map<String, ?>, String) - Constructor for class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep. Constructor that takes a parameter map for display. DefaultScriptEditor - Class in qupath.lib.gui.scripting. Default multilingual script editor. DefaultScriptEditor(QuPathGUI) - Constructor for class qupath.lib.gui.scripting.DefaultScriptEditor. Constructor. DefaultScriptLanguage - Class in qupath.lib.gui.scripting.languages. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage(String, Collection<String>, ScriptAutoCompletor) - Constructor for class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Constructor for a ExecutableLanguage. DefaultScriptLanguage(ScriptEngineFactory) - Constructor for class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Constructor for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:244840,plugin,plugins,244840,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tor.DefaultStains - Enum Class in qupath.lib.color. Enum representing default stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a startup script that should be run immediately after QuPath's launch. StatisticsHelper - Class in qupath.lib.analysis.stats. Static metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:995861,plugin,plugins,995861,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not, the request will be passed to the application thread ; (and therefore not processed immediately). changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:2537,extend,extends,2537,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,1,['extend'],['extends']
Modifiability,"tors. Modifier; Constructor; Description; protected ; AbstractTaskRunner(). Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). protected ; AbstractTaskRunner(int numThreads). Constructor for a PluginRunner that optionally uses a fixed number of threads. Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; awaitCompletion(). Await the completion of currently-running tasks, notifying any listener if necessary. boolean; isCancelled(). Query if the plugin can be cancelled while running. protected abstract SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:1802,inherit,inherited,1802,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,1,['inherit'],['inherited']
Modifiability,"tr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions.menus; Class EditMenuActions.Actions. java.lang.Object; qupath.lib.gui.actions.menus.EditMenuActions.Actions. Enclosing class:; EditMenuActions. @ActionMenu(""Menu.Edit""); public class EditMenuActions.Actions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final EditMenuActions.CopyActions; copyActions;  ; final org.controlsfx.control.action.Action; PASTE;  ; final org.controlsfx.control.action.Action; PASTE_TO_PLANE;  ; final org.controlsfx.control.action.Action; PREFERENCES;  ; final org.controlsfx.control.action.Action; REDO;  ; final org.controlsfx.control.action.Action; RESET_PREFERENCES;  ; final org.controlsfx.control.action.Action; SEP_0;  ; final org.controlsfx.control.action.Action; SEP_1;  ; final org.controlsfx.control.action.Action; UNDO;  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. UNDO; @ActionAccelerator(""shortcut+z""); @ActionConfig(""Action.Edit.undo""); public final org.controlsfx.control.action.Action UNDO. REDO; @ActionAccelerator(""shortcut+shift+z""); @ActionConfig(""Action.Edit.redo""); public final org.controlsfx.control.action.Action REDO. SEP_0; public final org.controlsfx.control.action.Action SEP_0. copyActions; @ActionMenu(""Menu.Edit.Copy""); public final EditMenuActions.CopyActions copyActions. PASTE; @ActionConfig(""Action.Edit.paste""); public final org.controlsfx.control.action.Action PASTE. PASTE_TO_PLANE; @ActionConfig(""Action.Edit.pasteToCurrentPlane""); public final org.controlsfx.control.action.Action PASTE_TO_PLANE. SEP_1; public final org.controlsfx.control.action.Action SEP_1. PREFERENCES; public final org.controlsfx.control.action.Action PREFERENCES. RESET_PREFERENCES; @ActionConfig(""Action.Edit.resetPreference",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html:1188,inherit,inherited,1188,javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/EditMenuActions.Actions.html,1,['inherit'],['inherited']
Modifiability,"tr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands.display; Class BrightnessContrastSettingsPane. java.lang.Object; javafx.scene.Node; javafx.scene.Parent; javafx.scene.layout.Region; javafx.scene.layout.Pane; javafx.scene.layout.GridPane; qupath.lib.gui.commands.display.BrightnessContrastSettingsPane. All Implemented Interfaces:; Styleable, EventTarget. public class BrightnessContrastSettingsPane; extends GridPane; A pane to save and load display settings, using a ResourceManager. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageDisplay>; imageDisplayObject. The current image display. ObjectProperty<ResourceManager.Manager<ImageDisplaySettings>>; resourceManager. The resource manager used to handle saving/loading. Properties inherited from class javafx.scene.layout.GridPane; alignment, gridLinesVisible, hgap, vgap. Properties inherited from class javafx.scene.layout.Region; background, border, cacheShape, centerShape, height, insets, maxHeight, maxWidth, minHeight, minWidth, opaqueInsets, padding, prefHeight, prefWidth, scaleShape, shape, snapToPixel, width. Properties inherited from class javafx.scene.Parent; needsLayout. Properties inherited from class javafx.scene.Node; accessibleHelp, accessibleRoleDescription, accessibleRole, accessibleText, blendMode, boundsInLocal, boundsInParent, cacheHint, cache, clip, cursor, depthTest, disabled, disable, effectiveNodeOrientation, effect, eventDispatcher, focused, focusTraversable, focusVisible, focusWithin, hover, id, inputMethodRequests, layoutBounds, layoutX, layoutY, localToParentTransform, localToSceneTransform, managed, mouseTransparent, nodeOrientation, onContextMenuRequested, onDragDetected, onDragDone, onDragDropped, onDragEntered, onDragExited, onDragOver, onInputMethodTextChanged, onKeyPressed, onKeyReleased, onKeyTyped, onMouseClicked, onMouseDragEntered, onMo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html:1195,inherit,inherited,1195,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSettingsPane.html,1,['inherit'],['inherited']
Modifiability,"tr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class AbstractImageRenderer. java.lang.Object; qupath.lib.gui.images.stores.AbstractImageRenderer. All Implemented Interfaces:; ImageRenderer. Direct Known Subclasses:; ImageDisplay. public abstract class AbstractImageRenderer; extends Object; implements ImageRenderer; Abstract ImageRenderer, which adds a timestamp variable. Field Summary; Fields. Modifier and Type; Field; Description; protected long; timestamp. Timestamp variable; this should be updated by implementing classes. Constructor Summary; Constructors. Constructor; Description; AbstractImageRenderer();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; long; getLastChangeTimestamp(). Timestamp of the last change (probably in milliseconds). String; getUniqueID(). Get a unique key, which will be used for caching. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.gui.images.stores.ImageRenderer; applyTransforms. Field Details. timestamp; protected long timestamp; Timestamp variable; this should be updated by implementing classes. Constructor Details. AbstractImageRenderer; public AbstractImageRenderer(). Method Details. getLastChangeTimestamp; public long getLastChangeTimestamp(); Description copied from interface: ImageRenderer; Timestamp of the last change (probably in milliseconds).; ; This can be used to identify when the status has changed. Specified by:; getLastChangeTimestamp in interface ImageRenderer; Returns:. getUniqueID; public String getUniqueID(); Description copied from interface: ImageRenderer; Get a unique key, which will be used for caching.; ; The only requirement is that the key is unique for the ImageRenderer in its ; current state. It is suggested to base it o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html:1218,inherit,inherited,1218,javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/AbstractImageRenderer.html,1,['inherit'],['inherited']
Modifiability,"tracks the active tool. hasAlpha() - Method in class qupath.lib.gui.images.servers.RenderedImageServer;  ; hasBundleForLocale(String, Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasChildObjects() - Method in class qupath.lib.objects.PathObject. Check if this object has children, or if its child object list is empty. hasChildren() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, replaced by PathObject.hasChildObjects(). hasCursorTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the cursor. hasDefaultBundleForLocale(Locale) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasEyeTrackingData() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker tracks the eye. hasFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Check if the last time train was called, variable (feature) importance was calculated. hashCode() - Method in class qupath.lib.common.Version;  ; hashCode() - Method in class qupath.lib.geom.Point2;  ; hashCode() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo;  ; hashCode() - Method in class qupath.lib.images.servers.ImageChannel;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata;  ; hashCode() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel;  ; hashCode() - Method in class qupath.lib.images.servers.PixelCalibration;  ; hashCode() - Method in class qupath.lib.images.servers.TileRequest;  ; hashCode() - Method in class qupath.lib.io.UriUpdater.SingleUriItem;  ; hashCode() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; hashCode() - Method in class qupath.lib.regions.ImagePlane;  ; hashCode() - Method in class ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:568982,variab,variable,568982,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"tract a constant from all pixels. Parameters:; values - either a single value to apply to all channels, or an array of Mat.channels() values.; Returns:. power; public static ImageOp power(double value); Raise every pixel element to a power. Parameters:; value - ; Returns:. sqrt; public static ImageOp sqrt(); Calculate the square root of all pixel values. Returns:. sequential; public static ImageOp sequential(Collection<? extends ImageOp> ops); Apply a collection of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. sequential; public static ImageOp sequential(ImageOp... ops); Apply an array of ops sequentially, chaining the output of one op as the input for the next. Parameters:; ops - ; Returns:; an op that represents the result of chaining the other ops together. splitMerge; public static ImageOp splitMerge(Collection<? extends ImageOp> ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. splitMerge; public static ImageOp splitMerge(ImageOp... ops); Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. Parameters:; ops - ; Returns:; a single op that combines all other ops by split and merge. identity; public static ImageOp identity(); Create an op that returns its input unchanged.; This is useful where an op is required, but no processing should be performed (e.g. with splitSubtract(ImageOp, ImageOp)). Returns:. exp; public static ImageOp exp(); Create an op that returns Euler's number e raise to the power of the Mat values. Returns:. log; public static ImageOp log(); Create an op that returns the natural logarithm of values. Returns:. round; public static ImageOp round(); Create an op that rounds floating point va",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:5586,extend,extends,5586,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,2,['extend'],['extends']
Modifiability,"trices. Compute minimum features from all four rotations. getMinor() - Method in class qupath.lib.common.Version. Get the minor version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y coordinate of the top left of the region bounding box. getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; getMissingFeatures(ImageData<BufferedImage>, Collection<? extends PathObject>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in interface qupath.lib.classifiers.object.ObjectClassifier. Check for missing features, returning the names and number of input objects missing the specified features. getMissingFeatures(ImageData<T>, Collection<? extends PathObject>) - Method in class qupath.opencv.ml.objects.OpenCVMLClassifier;  ; getMissingFeatures(ImageData<T>, PathObject) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Check for missing features, returning the names. getMissingItems() - Method in class qupath.lib.io.UriUpdater. Get all missing items. getMissingValue() - Method in class qupath.opencv.ml.objects.features.Normalizer. Return the value that will be output after normalizat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:444940,extend,extends,444940,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"tring baseName,; String... names). Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). static PathClass; getPathClass(List<String> names). Deprecated.; since v0.4.0 in favor of PathClass.fromCollection(java.util.Collection). static PathClass; getPathClass(PathClassFactory.StandardPathClasses pathClass). Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. static PathClass; getPathClassUnclassified(). Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. static PathClass; getPositive(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). static PathClass; getSingletonPathClass(PathClass pathClass). Deprecated.; since v0.4.0 in favor of PathClass.getSingleton(PathClass). static PathClass; getThreePlus(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getThreePlus(PathClass). static PathClass; getTwoPlus(PathClass parentClass). Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getPathClass; public static PathClass getPathClass(String name); Deprecated.; Get a PathClass, without specifying any color. Parameters:; name - ; Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(String name,; Integer rgb); Deprecated.; since v0.4.0 in favor of PathClass.getInstance(String, Integer) or ; PathClass.fromString(String, Integer). Get the PathClass object associated with a specific name. Note that this name must not contain newline; ; doing so will result in an IllegalArgumentException being thrown. If the name contains colon characters, ; it will be treated as a derived class. Parameters:; name - ; rgb - ; Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(String baseName,; String... names); Deprecated.; since v0.4.0 in favor of PathClass.fromArray(String...). Get a derived PathClass object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html:2851,inherit,inherited,2851,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,2,['inherit'],['inherited']
Modifiability,"tructor; Description; PathAnnotationObject(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getDescription(). Get a free text description previously set for this annotation. void; setDescription(String text). Set a free text description for this annotation. Methods inherited from class qupath.lib.objects.PathROIObject; getClassProbability, getPathClass, getROI, isEditable, isLocked, readExternal, setLocked, setPathClass, setROI, writeExternal. Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell, isDetection, isRootObject, isTile, isTMACore, nChildObjects, nDescendants, objectCountPostfix, refreshID, removeChildObject, removeChildObjects, removePathObject, removePathObjects, resetPathClass, retrieveMetadataKeys, retrieveMetadataValue, setClassifications, setColor, setColor, setColorRGB, setID, setName, setPathClass, storeMetadataValue, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. PathAnnotationObject; public PathAnnotationObject(); Default constructor. Should not be used directly, instead use PathObjects.createAnnotationObject(ROI). Method Details. setDescription; public void setDescription(String text); Set a free text description for this annotation. Parameters:; text - . getDescription; public String getDescription(); Get a free text description previously set for this annotation. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html:2385,inherit,inherited,2385,javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathAnnotationObject.html,1,['inherit'],['inherited']
Modifiability,"tructors. Constructor; Description; LocalBinaryPatternsPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:1918,extend,extends,1918,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['extend'],['extends']
Modifiability,"tructure tensor respectively. STRUCTURE_TENSOR_EIGENVALUE_MAX - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Maximum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIDDLE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Middle eigenvalue of the 3x3 structure tensor, calculated per pixel (by value, not absolute value). STRUCTURE_TENSOR_EIGENVALUE_MIN - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Minimum eigenvalue of the 2x2 or 3x3 structure tensor, calculated per pixel (by value, not absolute value). structureTensorEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the eigenvalues of the structure tensor (not yet implemented!). SubcellularDetection - Class in qupath.imagej.detect.cells. Experimental plugin to help with the quantification of subcellular structures. SubcellularDetection() - Constructor for class qupath.imagej.detect.cells.SubcellularDetection;  ; Subcommand - Interface in qupath.lib.gui.extensions. A subcommand for the command line interface. submitShortTask(Runnable) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). submitShortTask(Runnable) - Method in class qupath.lib.gui.SharedThreadPoolManager. Submit a short task to a shared thread pool. subsample(int[], int) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Subsample an array so that it contains no more than maxEntries. SUBSTRING_TOKENIZER - Static variable in class qupath.lib.scripting.languages.AutoCompletions. A completion tokenizer that simply takes the first part of the text up to the caret position. subtract(double...) - Static method in class qupath.opencv.ops.ImageOps.Core. Subtract a constant from all pixels. subtract(Padding) - Method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1000716,plugin,plugin,1000716,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IntensityFeaturesPlugin; public IntensityFeaturesPlugin(). Method Details. runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; taskRunner - ; ar",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:2760,inherit,inherited,2760,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"ts from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6565,extend,extends,6565,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ts stored positions. static boolean; isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData). Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. static void; quickShowImage(String name,; Roi roi,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static void; quickShowImage(String name,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static List<Roi>; readImageJRois(File file). Read ImageJ Rois from a .roi or a RoiSet.zip file. static void; setMemoryThreshold(double threshold);  ; static void; setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject). Set the name of an image based on a PathObject. static double; tryToParseMicrons(double value,; String unit). Based on a value and its units, try to get something suitable in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IJTools; public IJTools(). Method Details. setMemoryThreshold; public static void setMemoryThreshold(double threshold). Parameters:; threshold - - value in the interval ]0;1] defining the maximum remaining memory fraction an image can have ; when importing an image to ImageJ. isMemorySufficient; public static boolean isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData); throws Exception; Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. Parameters:; region - the requested region coming from; imageData - this BufferedImage; Returns:; true if the memory is sufficient; Throws:; Exception - either the fact that ImageJ cannot handle the image size or that the memory is insufficient. extractHyperstack; public static Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:8037,inherit,inherited,8037,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['inherit'],['inherited']
Modifiability,"ts that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addUnclassifiedLabel(int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. addValue(double) - Method in class qupath.lib.analysis.stats.RunningStatistics. Add another value; NaN values are counted but do not contribute to the statistics. addViewerListener(QuPathViewerListener) - Method in class qupath.lib.gui.viewer.QuPathViewer. Add a viewer listener. addWorkflowListener(WorkflowListener) - Method in class qupath.lib.plugins.workflow.Workflow. Add a listener for changes to the workflow. addWorkflowStep(ImageData<BufferedImage>, String) - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; addWorkflowStep(ImageData<T>, String) - Method in class qupath.lib.plugins.AbstractPlugin. Add a workflow step to the ImageData indicating the argument that this plugin was run with. AffineTransformImageServer - Class in qupath.lib.images.servers. ImageServer that dynamically applies an AffineTransform to an existing ImageServer. AffineTransformImageServer(ImageServer<BufferedImage>, AffineTransform) - Constructor for class qupath.lib.images.servers.AffineTransformImageServer;  ; AffineTransforms - Class in qupath.lib.awt.common. Helper class for working with affine transforms. AffineTransforms() - Constructor for class qupath.lib.awt.common.AffineTransforms;  ; alertType(Alert.AlertType) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create a dialog styled as a specified alert type. alignBottomCenter() - Method in class qupath.lib.objects.utils.Tiler.Builder. Start tiles at the bottom center of the ROI bounding box. alignBottomLeft() - Method in class qupath.lib.objects.utils.Tiler.Builder. Match tiles to the bottom left of the RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:32882,plugin,plugins,32882,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ts will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:136226,extend,extends,136226,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['extend'],['extends']
Modifiability,"ts with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSpecifiedAreasByLines(PathObjectHierarchy, Collection<? extends PathObject>, double, boolean) - Static method in class qupath.lib.scripting.QP. Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. splitSubtract(ImageOp, ImageOp) - Static method in class qupath.opencv.ops.ImageOps.Core. Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. splitViewer(QuPathViewer, boolean) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; sqrt() - Static method in class qupath.opencv.ops.ImageOps.Core. Calculate the square root of all pixel values. SQUARE - Enum constant in enum class qupath.lib.plugins.objects.DilateAnnotationPlugin.LineCap. Square cap. Stain_1 - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. First stain after color deconvolution. Stain_2 - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Second stain after color deconvolution. Stain_3 - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Third stain after color deconvolution. StainVector - Class in qupath.lib.color. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector() - Constructor for class qupath.lib.color.StainVector. Default constructor, required for Externalizable interface. StainVector.DefaultStains - Enum Class in qupath.lib.color. Enum representing default stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardize",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:994131,plugin,plugins,994131,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ts(Collection) instead. Legacy method to add multiple objects to the hierarchy. Parameters:; pathObjects - ; Returns:. clearAll; public void clearAll(); Remove all objects from the hierarchy. getPointObjects; public Collection<PathObject> getPointObjects(Class<? extends PathObject> cls); Get objects that contain Point ROIs. Parameters:; cls - ; Returns:. getCellObjects; public Collection<PathObject> getCellObjects(); Get all cell objects in the hierarchy. Returns:. getTileObjects; public Collection<PathObject> getTileObjects(); Get all tile objects in the hierarchy. Returns:. getDetectionObjects; public Collection<PathObject> getDetectionObjects(); Get all detection objects in the hierarchy (including sub-classes of detections). Returns:. getAnnotationObjects; public Collection<PathObject> getAnnotationObjects(); Get all annotation objects in the hierarchy. Returns:. getObjects; public Collection<PathObject> getObjects(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls); Get all objects in the hierarchy, optionally filtering to return only objects that are instances of a specific class.; Note that this method returns the root object, unless it has been filtered out. Parameters:; pathObjects - ; cls - ; Returns:. updateObject; public void updateObject(PathObject pathObject,; boolean isChanging); Update an object that is already in the hierarchy (e.g. because its ROI has changed). Parameters:; pathObject - the object to update; isChanging - if true, indicate that the object is still being changed.; Some listeners may delay processing in expectation of an update event where isChanging is false. getFlattenedObjectList; public List<PathObject> getFlattenedObjectList(List<PathObject> list); Get a flattened list containing all PathObjects in the hierarchy (including from the root object).; ; To get a flattened list containing all PathObjects without the root object, one can run the following:; getFlattenedObjectList(null).stream().filter(p -> !p.isRootObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:16409,extend,extends,16409,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability,"ts); Find objects based on a String representation of their IDs. Parameters:; ids - IDs to match; each will correspond to a key in the output map; pathObjects - the objects that may contain corresponding IDs; Returns:; a map between ids and any matched objects (or null if no matched object was found); Since:; v0.4.0; See Also:. findByUUID(Collection, Collection); matchByID(Collection, Collection). findByUUID; public static Map<UUID,PathObject> findByUUID(Collection<UUID> ids,; Collection<? extends PathObject> pathObjects); Find objects based on their IDs. Parameters:; ids - IDs to match; each will correspond to a key in the output map; pathObjects - the objects that may contain corresponding IDs; Returns:; a map between ids and any matched objects (or null if no matched object was found); Since:; v0.4.0; See Also:. findByStringID(Collection, Collection); matchByID(Collection, Collection). matchByID; public static Map<PathObject,PathObject> matchByID(Collection<? extends PathObject> sourceObjects,; Collection<? extends PathObject> targetObjects); Match objects according to their IDs. Parameters:; sourceObjects - source objects; each will correspond to a key in the output map; targetObjects - target objects; each will correspond to a value in the output map provided it has a match in sourceObjects; Returns:; a map between sourceObjects and any matched target objects (or null if no matched object was found); Since:; v0.4.0; See Also:. findByUUID(Collection, Collection); findByStringID(Collection, Collection). duplicateAllSelectedObjects; public static boolean duplicateAllSelectedObjects(PathObjectHierarchy hierarchy); Duplicate all the selected objects in a hierarchy. Parameters:; hierarchy - the hierarchy containing the objects to duplicate; Returns:; true if the hierarchy is changed, false otherwise. duplicateSelectedAnnotations; public static boolean duplicateSelectedAnnotations(PathObjectHierarchy hierarchy); Duplicate the selected annotation objects. Selected obje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:43335,extend,extends,43335,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['extend'],['extends']
Modifiability,"ts.BarChartBuilder. Create a bar chart using collections of String values and associated numeric values, with an associated custom object. series(String, String[], double[], T[]) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections String values and associated numeric values, with an associated custom object. series(String, Collection<? extends Number>, Collection<? extends Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot using collections of numeric values. series(String, Collection<? extends String>, Collection<T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using collections of numeric values. series(String, Collection<? extends T>, Function<T, Number>, Function<T, Number>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<? extends T>, Function<T, PathClass>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Plot values extracted from objects within a specified collection. series(String, Collection<XYChart.Data<Number, Number>>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Create a scatterplot from existing data plots. series(String, Collection<XYChart.Data<String, Number>>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart from existing data plots. series(String, Map<String, T>) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Create a bar chart using a map of String values and associated numeric values. SERIF - Enum constant in enum class qupath.lib.gui.prefs.QuPathStyleManager.Fonts. Preferred serif font. server(ImageServer<BufferedImage>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Set the server. serverRegion(ImageRegion, double, ImageServer<BufferedImage>) - Method in class qupath.lib.images.servers.SparseI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:910989,extend,extends,910989,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ts.BioFormatsOptionsExtension.BioFormatsPreferences;  ; fill(Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Fill the pixels of an image with a specific value. fill(Mat, Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Fill the pixels of an image with a specific value, corresponding to a mask. FILL_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; FILL_ANNOTATIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_HOLES - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; FillAnnotationHolesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. FillAnnotationHolesPlugin() - Constructor for class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; fillAnnotations(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether annotations are drawn as 'filled' shapes. fillAnnotationsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; fillDetections(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether detections are drawn as 'filled' shapes. fillDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; fillHoles(ByteProcessor) - Static method in class qupath.imagej.processing.RoiLabeling. Fill holes in a binary image. fillHoles(Geometry) - Static method in class qupath.lib.roi.GeometryTools. Fill all interior rings for the specified geometry. fillHoles(ROI) - Static method in class qupath.lib.roi.RoiTools. Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. fillOutside(ImageProcessor, Roi, double) - Static method in class qupath.imagej.processing.RoiLabeling.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:302526,plugin,plugins,302526,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ts.ProjectIO. public class ProjectIO; extends Object; Read QuPath projects.; ; Projects should now be written with Project.syncChanges(). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; DEFAULT_PROJECT_EXTENSION. Default file extension for a QuPath project. static final String; DEFAULT_PROJECT_NAME. Default file name for a QuPath project. Constructor Summary; Constructors. Constructor; Description; ProjectIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static String; getProjectExtension(). Get the default extension for a QuPath project file, without the 'dot'. static String; getProjectExtension(boolean includePeriod). Get the default extension for a QuPath project file. static <T> Project<T>; loadProject(File fileProject,; Class<T> cls). Load a project from a local file. static <T> Project<T>; loadProject(URI uri,; Class<T> cls). Read project from URI. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. DEFAULT_PROJECT_NAME; public static final String DEFAULT_PROJECT_NAME; Default file name for a QuPath project. See Also:. Constant Field Values. DEFAULT_PROJECT_EXTENSION; public static final String DEFAULT_PROJECT_EXTENSION; Default file extension for a QuPath project. See Also:. Constant Field Values. Constructor Details. ProjectIO; public ProjectIO(). Method Details. loadProject; public static <T> Project<T> loadProject(URI uri,; Class<T> cls); throws IOException; Read project from URI. Currently, this assumes that the URI refers to a local file. Parameters:; uri - ; cls - ; Returns:; Throws:; IOException. loadProject; public static <T> Project<T> loadProject(File fileProject,; Class<T> cls); throws IOException; Load a project from a local file. Parameters:; fileProject - ; cls - ; Returns:; Throws:; IOException. getProjectExtension; public static ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html:1397,inherit,inherited,1397,javadoc/docs/qupath/lib/projects/ProjectIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectIO.html,1,['inherit'],['inherited']
Modifiability,"tsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSav",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424681,plugin,plugins,424681,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"tsForROI(Class<? extends PathObject> cls,; ROI roi). Get the objects within a specified ROI, as defined by the general rules for resolving the hierarchy. Collection<PathObject>; getPointObjects(Class<? extends PathObject> cls). Get objects that contain Point ROIs. PathObject; getRootObject(). Get the root object. PathObjectSelectionModel; getSelectionModel(). Get the selection model, which handles the selection status of objects. Collection<PathObject>; getTileObjects(). Get all tile objects in the hierarchy. TMAGrid; getTMAGrid(). Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. boolean; hasObjectsForRegion(Class<? extends PathObject> cls,; ImageRegion region). Returns true if the hierarchy contains objects overlapping a specific region, optionally filtering to identify only ; objects of a specific class. boolean; insertPathObject(PathObject pathObject,; boolean fireChangeEvents). Insert an object into the hierarchy. boolean; insertPathObjects(Collection<? extends PathObject> pathObjects). Insert a collection of objects into the hierarchy, firing a change event on completion. boolean; isEmpty(). Check if the hierarchy is empty (i.e. int; nObjects(). Number of objects in the hierarchy, excluding the root. void; removeListener(PathObjectHierarchyListener listener). Remove a hierarchy change listener. boolean; removeObject(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, firing a remove event. void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove a collection of objects, firing a single 'hierarchy changed' event afterwards to notify listeners if anything happened; (i.e. boolean; removeObjectWithoutUpdate(PathObject pathObject,; boolean keepChildren). Remove a single object from the hierarchy, without firing a remove event. void; removePathObjectListener(PathObjectHierarchyListener listener). Deprecated.; since v0.4.0 (the name was confusing because it wa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html:6661,extend,extends,6661,javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/PathObjectHierarchy.html,2,['extend'],['extends']
Modifiability,"turns null (does not support ServerBuilders). BufferedImage; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. PixelClassifier; getClassifier(). Get the PixelClassifier performing the classification. protected ColorModel; getDefaultColorModel(). Get an appropriate colormodel that may be used. ImageData<BufferedImage>; getImageData(). Get the underlying ImageData used for classification. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. void; readAllTiles(). Read all the tiles. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Not allowed - throws an UnsupportedOperationException. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, createDefaultRGBImage, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. PixelClassificationImageServer; public PixelClassificationImageServer(ImageData<BufferedImage> imageData,; Pix",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:2444,inherit,inherited,2444,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['inherit'],['inherited']
Modifiability,"turns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; parentObject - ; tasks - . runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:5330,plugin,plugin,5330,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['plugin'],['plugin']
Modifiability,"two ROIs using specified pixel sizes. static double; getCentroidDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the centroids of two ROIs. static double; getCentroidDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. static double; getCircularity(ROI roi). Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). static double; getCircularity(ROI roi,; double pixelWidth,; double pixelHeight). Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). static Shape; getShape(ROI roi). Get a Shape object representing a ROI. static ROI; getShapeROI(Area area,; ImagePlane plane). Create a ROI from an Shape. static ROI; getShapeROI(Shape shape,; ImagePlane plane,; double flatness). Create a ROI from an Shape with a specified 'flatness'. static ROI; intersection(Collection<? extends ROI> rois). Create intersection of multiple ROIs from a collection. static ROI; intersection(ROI... rois). Create intersection of multiple ROIs. static boolean; intersectsRegion(ROI roi,; ImageRegion region). Test whether a ROI and an ImageRegion intersect. static boolean; isShapeROI(ROI roi). Returns true if the ROI is not null and is not a point ROI. static List<ROI>; makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI). Make fixed-size rectangular tile ROIs for a specified area. static ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of RO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:4191,extend,extends,4191,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['extend'],['extends']
Modifiability,"tyMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percenta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:1632,inherit,inherited,1632,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,1,['inherit'],['inherited']
Modifiability,"tyleManager.Fonts>; qupath.lib.gui.prefs.QuPathStyleManager.Fonts. All Implemented Interfaces:; Serializable, Comparable<QuPathStyleManager.Fonts>, Constable. Enclosing class:; QuPathStyleManager. public static enum QuPathStyleManager.Fonts; extends Enum<QuPathStyleManager.Fonts>; Available font families. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; DEFAULT. JavaFX default. SANS_SERIF. Preferred sans-serif font. SERIF. Preferred serif font. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static QuPathStyleManager.Fonts; valueOf(String name). Returns the enum constant of this class with the specified name. static QuPathStyleManager.Fonts[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. DEFAULT; public static final QuPathStyleManager.Fonts DEFAULT; JavaFX default. May not look great on macOS, which lacks support for bold font weight by default. SANS_SERIF; public static final QuPathStyleManager.Fonts SANS_SERIF; Preferred sans-serif font. SERIF; public static final QuPathStyleManager.Fonts SERIF; Preferred serif font. Method Details. values; public static QuPathStyleManager.Fonts[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static QuPathStyleManager.Fonts valueOf(String name); Returns the enum constant of this class with the specified name.; The str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html:1470,inherit,inherited,1470,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.Fonts.html,1,['inherit'],['inherited']
Modifiability,"tylers.ScriptStylerProvider. Get the ScriptStyler object corresponding to the specified ScriptLanguage. getStyles() - Method in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:524804,extend,extends,524804,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['extend'],['extends']
Modifiability,"type, may be lossless or lossy). DEFAULT - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Default Model class. DEFAULT_CLASSIFICATION_LABELS_CHANNEL - Static variable in class qupath.lib.images.servers.ImageServerMetadata. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default input layer name. DEFAULT_INPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single input. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.DnnModel. Default output layer name. DEFAULT_OUTPUT_NAME - Static variable in interface qupath.opencv.dnn.PredictionFunction. Default name to use for single output. DEFAULT_PREFIX - Static variable in class qupath.lib.gui.images.servers.PathHierarchyImageServer. Prefix used for the path of all instances of this class. DEFAULT_PROJECT_EXTENSION - Static variable in class qupath.lib.projects.ProjectIO. Default file extension for a QuPath project. DEFAULT_PROJECT_NAME - Static variable in class qupath.lib.projects.ProjectIO. Default file name for a QuPath project. DefaultAutoCompletor - Class in qupath.lib.gui.scripting.completors. Default auto-completor for JVM-based languages, optionally including QuPath default imports. DefaultAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.DefaultAutoCompletor. Constructor. defaultColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; DefaultImageRegionStore - Class in qupath.lib.gui.images.stores. An ImageRegionStore suitable for either Swing or JavaFX applications. defaultLocaleDisplayProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for setting the default Locale for Locale.Category.DISPLAY. defaultLocaleFormatProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get a property for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:242503,variab,variable,242503,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"t threshold). Created a binary image by thresholding pixels to find where ip1 < threshold. static ByteProcessor; thresholdBelowEquals(ImageProcessor ip,; float threshold). Created a binary image by thresholding pixels to find where ip1 <= threshold. static ByteProcessor; thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold). Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. static ROI; thresholdToROI(ImageProcessor ip,; RegionRequest request). Generate a QuPath ROI from an ImageProcessor. static ROI; thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request). Generate a QuPath ROI by thresholding an image channel image. static ROI; thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request). Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleThresholding; public SimpleThresholding(). Method Details. greaterThanOrEqual; public static ByteProcessor greaterThanOrEqual(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 >= ip2. Parameters:; ip1 - ; ip2 - ; Returns:. greaterThan; public static ByteProcessor greaterThan(ImageProcessor ip1,; ImageProcessor ip2); Created a binary image by thresholding pixels to find where ip1 > ip2. Parameters:; ip1 - ; ip2 - ; Returns:. thresholdBelow; public static ByteProcessor thresholdBelow(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 < threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBelowEquals; public static ByteProcessor thresholdBelowEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html:2758,inherit,inherited,2758,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,1,['inherit'],['inherited']
Modifiability,"uPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class BufferedImageOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.AbstractImageOverlay; qupath.lib.gui.viewer.overlays.BufferedImageOverlay. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>, PathOverlay. public class BufferedImageOverlay; extends AbstractImageOverlay; implements ChangeListener<ImageData<BufferedImage>>; An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer.; ; The scaling for the BufferedImage is determined by an associated ImageRegion. Author:; Pete Bankhead. Property Summary. Properties inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; interpolation. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; BufferedImageOverlay(OverlayOptions options). Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. BufferedImageOverlay(OverlayOptions options,; ImageRegion region,; BufferedImage img). Create an overlay to display one specified image region. BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:1017,inherit,inherited,1017,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['inherit'],['inherited']
Modifiability,uPath 0.5.0); qupath.lib.plugins.parameters Class Hierarchy (QuPath 0.5.0); Parameter (QuPath 0.5.0); ParameterChangeListener (QuPath 0.5.0); Parameterizable (QuPath 0.5.0); ParameterList (QuPath 0.5.0); StringParameter (QuPath 0.5.0). /workflow; ; DefaultScriptableWorkflowStep (QuPath 0.5.0); qupath.lib.plugins.workflow (QuPath 0.5.0); qupath.lib.plugins.workflow Class Hierarchy (QuPath 0.5.0); RunSavedClassifierWorkflowStep (QuPath 0.5.0); ScriptableWorkflowStep (QuPath 0.5.0); SimplePluginWorkflowStep (QuPath 0.5.0); Workflow (QuPath 0.5.0); WorkflowListener (QuPath 0.5.0); WorkflowStep (QuPath 0.5.0). AbstractDetectionPlugin (QuPath 0.5.0); AbstractInteractivePlugin (QuPath 0.5.0); AbstractPlugin (QuPath 0.5.0); AbstractTaskRunner (QuPath 0.5.0); AbstractTileableDetectionPlugin (QuPath 0.5.0); CommandLineTaskRunner.CommandLineProgressMonitor (QuPath 0.5.0); CommandLineTaskRunner (QuPath 0.5.0); DetectionPluginTools (QuPath 0.5.0); ObjectDetector (QuPath 0.5.0); qupath.lib.plugins (QuPath 0.5.0); qupath.lib.plugins Class Hierarchy (QuPath 0.5.0); ParallelTileObject (QuPath 0.5.0); ParallelTileObject.Status (QuPath 0.5.0); PathInteractivePlugin (QuPath 0.5.0); PathPlugin (QuPath 0.5.0); PathTask (QuPath 0.5.0); SimpleProgressMonitor (QuPath 0.5.0); TaskRunner (QuPath 0.5.0); TaskRunnerUtils (QuPath 0.5.0). /projects; ; qupath.lib.projects (QuPath 0.5.0); qupath.lib.projects Class Hierarchy (QuPath 0.5.0); Project (QuPath 0.5.0); ProjectImageEntry (QuPath 0.5.0); ProjectIO (QuPath 0.5.0); Projects (QuPath 0.5.0); ResourceManager (QuPath 0.5.0); ResourceManager.Manager (QuPath 0.5.0). /regions; ; ImagePlane (QuPath 0.5.0); ImageRegion (QuPath 0.5.0); qupath.lib.regions (QuPath 0.5.0); qupath.lib.regions Class Hierarchy (QuPath 0.5.0); Padding (QuPath 0.5.0); RegionRequest (QuPath 0.5.0). /roi; . /interfaces; ; qupath.lib.roi.interfaces (QuPath 0.5.0); qupath.lib.roi.interfaces Class Hierarchy (QuPath 0.5.0); ROI (QuPath 0.5.0); ROI.RoiType (QuPath 0.5.0). AreaROI (Q,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/index-wcopy.html:29654,plugin,plugins,29654,index-wcopy.html,https://qupath.github.io,https://qupath.github.io/index-wcopy.html,1,['plugin'],['plugins']
Modifiability,"uPath instance that is not visible (i.e. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command). Create an Action that depends upon an ImageData. org.controlsfx.control.action.Action; createImageDataAction(Consumer<ImageData<BufferedImage>> command,; String name). Create an Action that depends upon an ImageData. static QuPathGUI; createInstance(Stage stage). Static method to launch QuPath on the JavaFX Application thread. static QuPathGUI; createInstance(Stage stage,; HostServices hostServices). Static method to launch QuPath from a JavaFX application. PathPlugin<BufferedImage>; createPlugin(Class<? extends PathPlugin> pluginClass). Create a plugin from a specified class. org.controlsfx.control.action.Action; createPluginAction(String name,; Class<? extends PathPlugin> pluginClass,; String arg). Create an action for a plugin to be run through this QuPath instance. org.controlsfx.control.action.Action; createPluginAction(String name,; PathPlugin<BufferedImage> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:2639,plugin,plugin,2639,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['plugin'],['plugin']
Modifiability,"uPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Close the current project open in the QuPathGUI. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that this viewer is closed. closeViewer() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus;  ; closeViewer(QuPathViewer) - Method in class qupath.lib.gui.QuPathGUI. Close the image within a viewer, prompting to save changes if necessary. closing(int) - Static method in class qupath.opencv.ops.ImageOps.Filters. Apply a 2D morphological closing filter. closingByReconstruction(ImageProcessor, double) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply a morphological closing by reconstruction. closingFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. CM_GRAYSCALE - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; CM_GRAYSCALE_INVERTED - Static variable in class qupath.lib.display.DirectServerChannelInfo;  ; CodeAreaControl - Class in qupath.lib.gui.scripting.richtextfx. Code area control using RichTextFX. COG - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; CoherenceFeaturePlugin - Class in qupath.lib.algorithms. Plugin to calculate coherence features for image tiles. CoherenceFeaturePlugin() - Constructor for class qupath.lib.algorithms.CoherenceFeaturePlugin. Default constructor. COLOR - Enum constant in enum class qupath.lib.display.ChannelDisplayMode. Show using default color LUT (may be composite). COLOR_DECONVOLUTION_REFINE - Variable in class qupath.lib.gui.actions.menus.AnalyzeMenuActions.Actions;  ; ColorDeconvMatrix3x3 - Class in qupath.lib.color. Simple class for representing - and inverting a 3x3 matrix. ColorDeconvMatrix3x3(double[][]) - Constructor for class qupath.lib.color.ColorDeconvMatrix3x3. Constructor for a 3x3 matrix. ColorDeconvolutionHelper - Class in qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:116706,variab,variable,116706,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"uble, double) - Method in class qupath.lib.roi.LineROI;  ; translate(double, double) - Method in class qupath.lib.roi.PointsROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; translate(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; translate(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; translate(int, int) - Method in class qupath.lib.regions.RegionRequest. Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. translateAllObjects(double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the current object hierarchy. translateAllObjects(PathObjectHierarchy, double, double) - Static method in class qupath.lib.scripting.QP. Translate (move) the ROIs of all objects in the specified object hierarchy. TRANSLUCENT_BLACK - Static variable in class qupath.lib.color.ColorToolsAwt. Black, with 50% opacity. TRANSLUCENT_BLACK_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. Black with opacity at 50%. TRANSLUCENT_WHITE - Static variable in class qupath.lib.color.ColorToolsAwt. White, with 50% opacity. TRANSLUCENT_WHITE_FX - Static variable in class qupath.lib.gui.tools.ColorToolsFX. White with opacity at 50%. TRANSPARENT - Static variable in class qupath.lib.images.servers.ImageChannel. Special color indicating pixel values for a channel indicate levels of transparency. tryToClassify(List<? extends PathObject>, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier. Try to classify a batch of objects. tryToClassify(ClassificationModel, PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.OpenCVModelObjectClassifier;  ; tryToClassify(PathObject, ImageServer<BufferedImage>, double, IntFunction<PathClass>) - Method in class qupath.opencv.dnn.DnnObjectClassifier;  ; tryToFixPolygon(Polygon) ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1053989,variab,variable,1053989,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"uble newValue). Create an op that replaces one pixel value in an image with another. static ImageOp; replaceNaNs(double replaceValue). Create an op that replaces NaNs with a specified value. static ImageOp; round(). Create an op that rounds floating point values. static ImageOp; sequential(Collection<? extends ImageOp> ops). Apply a collection of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; sequential(ImageOp... ops). Apply an array of ops sequentially, chaining the output of one op as the input for the next. static ImageOp; splitAdd(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by adding corresponding values. static ImageOp; splitDivide(ImageOp opTop,; ImageOp opBottom). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by dividing corresponding values. static ImageOp; splitMerge(Collection<? extends ImageOp> ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMerge(ImageOp... ops). Create an op that applies all the specified ops to the input Mat, concatenating the results as channels ; of the output. static ImageOp; splitMultiply(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by multiplying corresponding values. static ImageOp; splitSubtract(ImageOp opLeft,; ImageOp opRight). Create an op that duplicates a Mat, applies different operations to each duplicate, and ; combines the result by subtracting corresponding values. static ImageOp; sqrt(). Calculate the square root of all pixel values. static ImageOp; subtract(double... values). Subtract a constant from all pixels. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notify",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html:2669,extend,extends,2669,javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageOps.Core.html,2,['extend'],['extends']
Modifiability,"ublic class FindConvexHullDetectionsPlugin<T>; extends AbstractInteractivePlugin<T>; Plugin to identify/remove detections from the convex hull of all detections.; ; Currently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hash",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:1686,plugin,plugin,1686,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['plugin'],['plugin']
Modifiability,"ublic interface SimpleProgressMonitor; Class for monitoring the process of a plugin and displaying feedback to the user.; ; Implementing classes receive notifications from the plugin as it executes, and should display these in an appropriate way -; such as with a dialog box and progress bar, or logging the progress to the system output.; Classes may also choose to send cancel requests to the plugin, e.g. if the user presses a 'cancel' button.; ; SimpleProgressMonitor are not intended for reuse, i.e. the startMonitoring method should only be called once. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; cancelled(). Returns true if cancel has been requested, for example by the user pressing a 'cancel' button. void; pluginCompleted(String message). Notify the monitor that the plugin has completed its work. void; startMonitoring(String message,; int maxProgress,; boolean mayCancel). Set the plugin to monitor, and begin monitoring. void; updateProgress(int increment,; String message,; ImageRegion region). Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated. Method Details. startMonitoring; void startMonitoring(String message,; int maxProgress,; boolean mayCancel); Set the plugin to monitor, and begin monitoring. Note that since SimpleProgressMonitor are not intended for reuse,; this method should only be called once. Parameters:; message - The message to display; maxProgress - The progress value considered complete.; mayCancel - . updateProgress; void updateProgress(int increment,; String message,; ImageRegion region); Update the displayed progress, and optionally inform the PluginRunner that data related to a specified image region has been updated.; If progress >= 1 this indicates that the task is finished, and the monitor may stop. Parameters:; increment - update progress by the specified increment; messag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html:1466,plugin,plugin,1466,javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/SimpleProgressMonitor.html,1,['plugin'],['plugin']
Modifiability,"ublic DnnModelParams.Builder files(File... files); Specify the URIs as files. These will be appended to any existing URIs. Parameters:; files - ; Returns:. paths; public DnnModelParams.Builder paths(Path... paths); Specify the URIs as path objects. These will be appended to any existing URIs. Parameters:; paths - ; Returns:. URIs; public DnnModelParams.Builder URIs(URI... uris); Specify the URIs. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. URIs; public DnnModelParams.Builder URIs(Collection<URI> uris); Specify the URIs as a collection. These will be appended to any existing URIs. Parameters:; uris - ; Returns:. lazyInitialize; public DnnModelParams.Builder lazyInitialize(boolean lazyInitialize); Optionally request lazy initialization. Parameters:; lazyInitialize - ; Returns:. framework; public DnnModelParams.Builder framework(String framework); Specify the deep learning framework that can use the model.; ; It is recommended to use one of the default names available as static variables; in DnnModelParams.; However, an extension might use some other unique identifier to ensure that it is ; used in preference to some other implementation. Parameters:; framework - ; Returns:. layout; public DnnModelParams.Builder layout(String layout); Specify a string representing the axes layout that the model expects as input.; This should follow the Bioimage Model Zoo spec, and include only the characters ""bixyczt"". Parameters:; layout - ; Returns:. inputShape; public DnnModelParams.Builder inputShape(long... shape); Specify the shape for a single input, with the default input name. Parameters:; shape - ; Returns:. input; public DnnModelParams.Builder input(String name,; long... shape); Specify the shape as a long array for a single input with a specified name. Parameters:; name - ; shape - ; Returns:. input; public DnnModelParams.Builder input(String name,; DnnShape shape); Specify the shape for a single input with a specified name. Parameters:; name",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html:3485,variab,variables,3485,javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.Builder.html,2,['variab'],['variables']
Modifiability,"ublic DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsam",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:3667,extend,extends,3667,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,2,['extend'],['extends']
Modifiability,"uctor; Description; TileClassificationsToAnnotationsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Descri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:1987,plugin,plugin,1987,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['plugin'],['plugin']
Modifiability,"ue if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; doesSomething() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor has any effect. DoGSuperpixelsPlugin - Class in qupath.imagej.superpixels. A simple superpixel-generating command based upon applying ImageJ's watershed transform to the; absolute values of a Difference-of-Gaussians filtered image. DoGSuperpixelsPlugin() - Constructor for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). doWatershed(ImageProcessor, ImageProcessor, bool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:268882,plugin,plugins,268882,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"ue() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for training images. VALUE_VALIDATION - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for validation images. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qupath.lib.classifiers.Normalization. Returns the enum constant of this class with the specified name. valueOf(String) - Static method in enum class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1077367,variab,variable,1077367,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ues changed. Parameterizable - Interface in qupath.lib.plugins.parameters. Interface for indicating that the implementing class takes adjustable parameters. ParameterList - Class in qupath.lib.plugins.parameters. A collection of Parameters, which can be used for analysis & queried to construct appropriate GUIs. ParameterList() - Constructor for class qupath.lib.plugins.parameters.ParameterList;  ; ParameterPanelFX - Class in qupath.lib.gui.dialogs. A panel for displaying a list of parameters suitably to aid with creating JavaFX GUIs. ParameterPanelFX(ParameterList) - Constructor for class qupath.lib.gui.dialogs.ParameterPanelFX. Create a ParameterPanelFX. Parameters<S,T> - Class in qupath.lib.experimental.pixels. Parameters for use with a PixelProcessor. Parameters.Builder<S,T> - Class in qupath.lib.experimental.pixels. Builder class for Parameters. parametersInitialized - Variable in class qupath.imagej.detect.cells.WatershedCellDetection;  ; params - Variable in class qupath.lib.plugins.AbstractInteractivePlugin;  ; parent(Window) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Set the parent window. parent(Window) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Set the parent window. parent(PathObject) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Set the parent object. parentObjects(Collection<? extends PathObject>) - Method in class qupath.lib.images.writers.TileExporter. Specify parent objects to define tiles. parentObjects(Predicate<PathObject>) - Method in class qupath.lib.images.writers.TileExporter. Specify a filter to extract parent objects to define tiles. parentProxy(PathObject) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Optionally set a temporary object to use as a parent. parse(byte[][], int, int, int, ColorModel) - Method in class qupath.lib.images.servers.bioformats",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:745879,plugin,plugins,745879,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"uestHierarchyUpdate(); Optionally request a hierarchy update after the tasks have run.; Default implementation returns true. Returns:. parseArgument; protected abstract boolean parseArgument(ImageData<T> imageData,; String arg); Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Parameters:; imageData - ; arg - ; Returns:. getParentObjects; protected abstract Collection<? extends PathObject> getParentObjects(ImageData<T> imageData); Get a collection of objects to process, based on the contents of the PluginRunner.; ; This could (for example) return the selected object, the root object, all detection objects... depending upon what the plugin does.; ; Each object this returns will be passed to addRunnableTasks to create a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; Returns:. addRunnableTasks; protected abstract void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Parameters:; imageData - ; parentObject - ; tasks - . runPlugin; public boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:4314,extend,extends,4314,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,1,['extend'],['extends']
Modifiability,"uested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Field Details. DEFAULT_PREFIX; public static String DEFAULT_PREFIX; Prefix used for the path of all instances of this class.; This can be used to help with caching (and in particular with clearing caches selectively). Constructor Details. PathHierarchyImageServer; public PathHierarchyImageServer(ImageData<BufferedImage> imageData,; OverlayOptions options); Constructor. Parameters:; imageData - the image data; options - options defining how objects will be painted. Method Details. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html:3177,inherit,inherited,3177,javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/PathHierarchyImageServer.html,1,['inherit'],['inherited']
Modifiability,"uested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata should not be set for a hierarchy image server directly. Methods inherited from class qupath.lib.images.servers.AbstractTileableImageServer; allowSmoothInterpolation, getDefaultColorModel, getEmptyTile, getEmptyTile, getTile, readRegion. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:3781,inherit,inherited,3781,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['inherit'],['inherited']
Modifiability,"ufferedImage>. public class ChannelTransformFeatureServer; extends TransformingImageServer<BufferedImage>; A TransformingImageServer that applies color transforms to generate channels. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). protected ColorModel; getColorModel();  ; ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). BufferedImage; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. Methods inherited from class qupath.lib.images.servers.TransformingImageServer; getURIs, getWrappedServer. Methods inherited from class qupath.lib.images.servers.AbstractImageServer; close, finalize, getAssociatedImage, getAssociatedImageList, getBuilder, getCache, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<Bu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:1667,inherit,inherited,1667,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['inherit'],['inherited']
Modifiability,"ugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TileClassificationsToAnnotationsPlugin; public TileClassificationsToAnnotationsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html:2014,inherit,inherited,2014,javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/TileClassificationsToAnnotationsPlugin.html,2,['inherit'],['inherited']
Modifiability,"ugin, ShapeFeaturesPlugin, SimpleTissueDetection2, SLICSuperpixelsPlugin, SmoothFeaturesPlugin, SplitAnnotationsPlugin, SubcellularDetection, TileClassificationsToAnnotationsPlugin, TilerPlugin, TMADearrayerPluginIJ, WatershedCellDetection, WatershedCellMembraneDetection, WatershedNucleiCV. public interface PathPlugin<T>; Primary interface for defining a 'plugin' command.; ; Although the interface is very basic, developers wanting to create new plugins should general start ; by modifying an existing plugin that does something similar.; ; By paying attention to the type hierarchy and making use of the most appropriate interfaces/abstract classes, ; it is possible to get quite a bit of functionality 'for free', including scriptability and parallelization ; with appropriate calls to update the object hierarchy. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Method Details. getName; String getName(); Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; String getDescription(); Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; boolean runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg); Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Parameters:; taskRunner - ; arg - ; Returns:. getLastResultsDescription; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html:1941,plugin,plugin,1941,javadoc/docs/qupath/lib/plugins/PathPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/PathPlugin.html,1,['plugin'],['plugin']
Modifiability,"ugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Specified by:; parseArgument in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; protected Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(). addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:4020,plugin,plugins,4020,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugins']
Modifiability,"ugin; getParentObjects, getSupportedParentObjectClasses. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CellCountsCV; public CellCountsCV(). Method Details. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a ParameterList), implementing classes can't; be assumed to be thread-safe; plugins should be created and called from a single thread, although they may use; multiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:3833,plugin,plugin,3833,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability,"ugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box tit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:2059,extend,extends,2059,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['extend'],['extends']
Modifiability,"ugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<T>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<T> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any informat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:3329,extend,extends,3329,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,4,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"ugin<T>; extends AbstractInteractivePlugin<T>; Add shape measurements. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeFeaturesPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. ShapeFeaturesPlugin; public ShapeFeaturesPlugin(); Constructor. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, sho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html:1707,Plugin,PluginRunner,1707,javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/ShapeFeaturesPlugin.html,1,['Plugin'],['PluginRunner']
Modifiability,"ugins.parameters. Parameter that can take on true of false value - or null. BOTTOM_CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOTTOM_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; BOUNDARIES_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell boundaries. boundaryDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI boundaries within a specified distance. BoundaryStrategy - Class in qupath.process.gui.commands.ml. Helper class for handling the boundaries of training annotations when creating a pixel classifier. BRIGHTFIELD_H_DAB - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Brightfield image with hematoxylin and DAB stains. BRIGHTFIELD_H_DAB - Static variable in class qupath.lib.scripting.QP. Brightfield image type with hematoxylin and DAB staining. BRIGHTFIELD_H_E - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Brightfield image with hematoxylin and eosin stains. BRIGHTFIELD_H_E - Static variable in class qupath.lib.scripting.QP. Brightfield image type with hematoxylin and eosin staining. BRIGHTFIELD_OTHER - Enum constant in enum class qupath.lib.images.ImageData.ImageType. Brightfield image with any stains. BRIGHTFIELD_OTHER - Static variable in class qupath.lib.scripting.QP. Brightfield image type. brightness(int) - Static method in class qupath.lib.color.ColorTransformer. Extract brightness value from RGB-to-HSB transform. Brightness - Enum constant in enum class qupath.lib.color.ColorTransformer.ColorTransformMethod. Brightness value (from RGB-HSB transform). BRIGHTNESS_CONTRAST - Variable in class qupath.lib.gui.actions.CommonActions;  ; BRIGHTNESS_CONTRAST - Variable in class qupath.lib.gui.actions.menu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:61590,variab,variable,61590,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ui.actions.menus.ViewMenuActions.MultiviewGridActions;  ; MULTIVIEW_SYNCHRONIZE_VIEWERS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; multiviewActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; MultiviewActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions;  ; MultiviewGridActions() - Constructor for class qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewGridActions;  . N. name(String) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the image name. name(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a series name. name(String) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. User-friendly name to use with this model. NAME_NEGATIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Negative"" staining intensity. NAME_OBJECT_ID - Static variable in class qupath.lib.gui.measure.ObservableMeasurementTableData. The name used for the Object ID column. NAME_ONE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""1+"" staining intensity (i.e. NAME_POSITIVE - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""Positive"" staining intensity. NAME_THREE_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""3+"" staining intensity (i.e. NAME_TWO_PLUS - Static variable in class qupath.lib.objects.classes.PathClass. Default name for a class representing ""2+"" staining intensity (i.e. nameObjectsByCluster(Collection<Collection<? extends PathObject>>) - Static method in class qupath.lib.analysis.DelaunayTools. Assign object names based upon pre-computed clusters. nameObjectsByCluster(Collection<Collection<? extends PathObject>>, Function<Integer, PathClass>) - Static method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:705795,variab,variable,705795,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"ui.actions.menus; Class ViewMenuActions.MultiviewActions. java.lang.Object; qupath.lib.gui.actions.menus.ViewMenuActions.MultiviewActions. Enclosing class:; ViewMenuActions. public class ViewMenuActions.MultiviewActions; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final org.controlsfx.control.action.Action; ATTACH_VIEWER;  ; final org.controlsfx.control.action.Action; DETACH_VIEWER;  ; final org.controlsfx.control.action.Action; MULTIVIEW_CLOSE_VIEWER;  ; final ViewMenuActions.MultiviewGridActions; MULTIVIEW_GRID_ACTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_MATCH_RESOLUTIONS;  ; final org.controlsfx.control.action.Action; MULTIVIEW_SYNCHRONIZE_VIEWERS;  ; final org.controlsfx.control.action.Action; SEP_00;  ; final org.controlsfx.control.action.Action; SEP_01;  ; final org.controlsfx.control.action.Action; SEP_02;  . Constructor Summary; Constructors. Constructor; Description; MultiviewActions();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. MULTIVIEW_GRID_ACTIONS; @ActionMenu(""Action.View.Multiview.gridMenu""); public final ViewMenuActions.MultiviewGridActions MULTIVIEW_GRID_ACTIONS. SEP_00; public final org.controlsfx.control.action.Action SEP_00. MULTIVIEW_SYNCHRONIZE_VIEWERS; public final org.controlsfx.control.action.Action MULTIVIEW_SYNCHRONIZE_VIEWERS. MULTIVIEW_MATCH_RESOLUTIONS; public final org.controlsfx.control.action.Action MULTIVIEW_MATCH_RESOLUTIONS. SEP_01; public final org.controlsfx.control.action.Action SEP_01. MULTIVIEW_CLOSE_VIEWER; @ActionConfig(""Action.View.Multiview.closeViewer""); public final org.controlsfx.control.action.Action MULTIVIEW_CLOSE_VIEWER. SEP_02; public final org.controlsfx.control.action.Action SEP_02. DETACH_VIEWER; @ActionConfig(""ViewerActions.detachViewer""); public final org.controlsfx.control.action.Action DETACH_VIEWER. ATTACH_VIEWER; @ActionCon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html:1359,inherit,inherited,1359,javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/menus/ViewMenuActions.MultiviewActions.html,1,['inherit'],['inherited']
Modifiability,"ui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1436,inherit,inherited,1436,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['inherit'],['inherited']
Modifiability,"uilder.renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. qupath.lib.gui.measure.ObservableMeasurementTableData.createNumericMeasurement(PathObject, String). qupath.lib.gui.measure.ObservableMeasurementTableData.createStringMeasurement(PathObject, String). qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addColorPropertyPreference(IntegerProperty, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addDirectoryPropertyPreference(Property<String>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.addPropertyPreference(Property<T>, Class<? extends T>, String, String, String). use PropertyItemBuilder instead. qupath.lib.gui.panes.PreferencePane.createPropertySheetItem(Property<T>, Class<? extends T>). use PropertyItemBuilder instead. qupath.lib.gui.prefs.PathPrefs.getUserPreferences(). since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to PathPrefs.resetPreferences(). qupath.lib.gui.prefs.PathPrefs.useSystemMenubarProperty(). qupath.lib.gui.QuPathGUI.createSharedPoolCompletionService(Class<V>). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.createSingleThreadExecutor(Object). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.QuPathGUI.submitShortTask(Runnable). since v0.5.0; use QuPathGUI.getThreadPoolManager(). qupath.lib.gui.viewer.overlays.PixelClassificationOverlay.createFeatureDisplayOverlay(OverlayOptions, Function<ImageData<BufferedImage>, ImageServer<BufferedImage>>, ImageRenderer). Use PixelClassificationOverlay.cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:3677,extend,extends,3677,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,uilder;  ; title - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; title(String) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the chart title. title(String) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the chart title. title(String) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the chart title. title(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog title. title(String) - Method in class qupath.lib.gui.FileCopier. Title for any dialog. title(String) - Method in class qupath.process.gui.commands.ui.SaveResourcePaneBuilder. Title to display in any dialogs. TMA - Variable in class qupath.lib.gui.actions.menus.MeasureMenuActions.Actions;  ; TMA_ADD_NOTE - Variable in class qupath.lib.gui.actions.CommonActions;  ; TMA_CORES - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept TMA cores. TMA_DEARRAYING_DATA_EXTENSION - Static variable in class qupath.lib.gui.tma.TMADataIO;  ; TMA_EXPORT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; TMA_GRID - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; TMA_IMPORT - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; TMA_VIEWER - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; TmaActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.TmaActions;  ; tmaColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMACommands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACommands() - Constructor for class qupath.lib.gui.commands.TMACommands;  ; TMACoreObject - Class in qupath.lib.objects. A special PathObject ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1030470,variab,variable,1030470,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"uld be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder; options(OverlayOptions options). Specify the overlay options to control display. SvgTools.SvgBuilder; pathObjects(Collection<? extends PathObject> pathObjects). Specify a collection of objects to export. SvgTools.SvgBuilder; pathObjects(PathObject... pathObjects). Specify an array of objects to export. SvgTools.SvgBuilder; region(ImageRegion region). Specify the region (in terms of the full resolution image space) for export. SvgTools.SvgBuilder; showSelection(boolean doShow). Request whether selected objects are displayed. SvgTools.SvgBuilder; size(int width,; int height). Export image size. SvgTools.SvgBuilder; width(int width). Export image width. void; writeSVG(File file). Write the SVG image to a file, including any references images if required. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SvgBuilder; public SvgBuilder(QuPathViewer viewer); Create a builder initialized according to the current viewer. Parameters:; viewer - . SvgBuilder; public SvgBuilder(); Create a new builder, which will",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:2639,extend,extends,2639,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['extend'],['extends']
Modifiability,"uld be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. OpenCVDnn.Builder; segmentation(). Set the model type to be OpenCVDnn.ModelType.SEGMENTATION. OpenCVDnn.Builder; size(int width,; int height). Input width and height. OpenCVDnn.Builder; size(Size size). Input width and height. OpenCVDnn.Builder; target(int target). Specify the target, e.g. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:2538,inherit,inherited,2538,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,2,['inherit'],['inherited']
Modifiability,"uld return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. TMADearrayerPluginIJ; public TMADearrayerPluginIJ(); Default constructor. Method Details. getSupportedParentObjectClasses; public Collection<Class<? extends PathObject>> getSupportedParentObjectClasses(); Description copied from interface: PathInteractivePlugin; Get a collection of possible parent objects that the plugin could have.; This may be used, for example, to specified that analysis may be applied to any/all TMA cores or annotations.; If no parent objects are required, PathRootObject.class should be returned in the list. Returns:. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html:2478,inherit,inherited,2478,javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/dearray/TMADearrayerPluginIJ.html,1,['inherit'],['inherited']
Modifiability,"uld return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. SimpleTissueDetection2; public SimpleTissueDetection2(); Constructor. Method Details. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:2535,inherit,inherited,2535,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['inherit'],['inherited']
Modifiability,"ull image to a specified output stream. writeImage(T, String) - Method in interface qupath.lib.images.writers.ImageWriter. Write a full image to a specified path. writeImageData(File, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageData(OutputStream, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Serialize an ImageData object to an output stream. writeImageData(Path, ImageData<?>) - Static method in class qupath.lib.io.PathIO. Write (binary) file containing ImageData for later use. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.images.writers.ImageWriterTools. Write a 2D image region using the default writer based on the file path. writeImageRegion(ImageServer<BufferedImage>, RegionRequest, String) - Static method in class qupath.lib.scripting.QP. Write an image region image to the specified path. writePoints(File, Collection<? extends PathObject>) - Static method in class qupath.lib.io.PointIO. Write a list of point annotations to a file. writePoints(OutputStream, Collection<? extends PathObject>) - Static method in class qupath.lib.io.PointIO. Write a list of point annotations to a stream. writePredictionImage(String, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a pixel classifier to the current image image. writePredictionImage(ImageData<BufferedImage>, PixelClassifier, String) - Static method in class qupath.lib.scripting.QP. Write the output of applying a pixel classifier to an image. writePyramid(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Deprecated.; use OMEPyramidWriter.OMEPyramidSeries.writeSeries(String) instead. writePyramid(PyramidOMETiffWriter, IMetadata, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.OMEPyramidSeries. Deprecated.; use OMEPyramidWriter.OMEPyramidSeries.writeSeries(IFormatWriter, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1120738,extend,extends,1120738,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"ultiple threads (via a PluginRunner) to complete their tasks. Overrides:; parseArgument in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; arg - ; Returns:. getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<BufferedImage>; Specified by:; getDefaultParameterList in class AbstractInteractivePlugin<BufferedImage>; Parameters:; imageData - ; Returns:. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. getLastResultsDescription; public String getLastResultsDescription(); Description copied from interface: PathPlugin; (Optional) short one-line description of the results, e.g. to say how many objects detected.; GUIs may choose to display this on a label during interactive processing. Returns:. getPreferredPixelSizeMicrons; protected double getPreferredPixelSizeMicrons(ImageData<BufferedImage> imageData,; ParameterList params); Description copied from class: AbstractTileableDetectionPlugin; Get the preferred pixel size that would be used for the specified ImageData and ParameterList.; ; This is useful in deciding whether to break large regions into smaller, parallelizable tiles. Specified by:; getPreferredPixelSizeMicrons in class AbstractTileableDetectionPlugin<BufferedImage>; Parameters:; imageData - ; params - ; Returns:. createDetector; pro",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html:5214,plugin,plugin,5214,javadoc/docs/qupath/opencv/CellCountsCV.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/CellCountsCV.html,1,['plugin'],['plugin']
Modifiability,"ultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap; extends AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>; implements Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Helper map implementation that provides access to MultiscaleFeatures.Hessian if needed. Nested Class Summary. Nested classes/interfaces inherited from class java.util.AbstractMap; AbstractMap.SimpleEntry<K,V>, AbstractMap.SimpleImmutableEntry<K,V>. Nested classes/interfaces inherited from interface java.util.Map; Map.Entry<K,V>. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>>; entrySet();  ; MultiscaleFeatures.Hessian; getHessian(). Get the MultiscaleFeatures.Hessian associated with these features. Methods inherited from class java.util.AbstractMap; clear, clone, containsKey, containsValue, equals, get, hashCode, isEmpty, keySet, put, putAll, remove, size, toString, values. Methods inherited from class java.lang.Object; finalize, getClass, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.util.Map; clear, compute, computeIfAbsent, computeIfPresent, containsKey, containsValue, equals, forEach, get, getOrDefault, hashCode, isEmpty, keySet, merge, put, putAll, putIfAbsent, remove, remove, replace, replace, replaceAll, size, values. Method Details. getHessian; public MultiscaleFeatures.Hessian getHessian(); Get the MultiscaleFeatures.Hessian associated with these features.; This may be used to request eigenvectors and eigenvalues.; ; Note: this will only be available if MultiscaleFeatures.MultiscaleResultsBuilder.retainHessian(boolean) has been set to true. Returns:; the Hessian if available, or null otherwise. entrySet; public Set<Map.Entry<MultiscaleFeatures.MultiscaleFeature,Mat>> entrySet(). Specified by:; entrySet in interface Map<MultiscaleFeatures.MultiscaleFeature,Mat>; Specified by:; entrySet in class AbstractMap<MultiscaleFeatures.MultiscaleFeature,Mat>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html:1860,inherit,inherited,1860,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap.html,2,['inherit'],['inherited']
Modifiability,"ument, returning 'true' if the argument is valid and it's possible to run the plugin. boolean; runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageJMacroRunner; public ImageJMacroRunner(QuPathGUI qupath); Constructor. Parameters:; qupath - QuPath instance where the command should be installed. Method Details. getName; public String getName(); Description copied from interface: PathPlugin; Get the name of the plugin for display.; ; This should be descriptive and, above all, short - as it may be used for menu item names & dialog box titles. Returns:. getDescription; public String getDescription(); Description copied from interface: PathPlugin; Get a brief description of the plugin's purpose & operation.; ; If no description is provided, this may return null. Returns:. runPlugin; public boolean runPlugin(TaskRunner runner,; ImageData<BufferedImage> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<BufferedImage>; Overrides:; runPlugin in class AbstractPlugin<BufferedImage>; Parameters:; runner - ; arg - ; Returns:. parseArgument; protected boolean parseArgument(ImageData<BufferedImage> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html:2794,plugin,plugin,2794,javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/gui/ImageJMacroRunner.html,1,['plugin'],['plugin']
Modifiability,"ummary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; DelaunayClusteringPlugin(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. protected void; postprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called immediately after running any generated tasks. protected void; preprocess(TaskRunner taskRunner,; ImageData<T> imageData). Called after parsing the argument String, and immediately before creating & running any generated tasks. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html:1979,Plugin,PluginRunner,1979,javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/features/DelaunayClusteringPlugin.html,1,['Plugin'],['PluginRunner']
Modifiability,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectTreeBrowser. java.lang.Object; qupath.lib.gui.panes.ObjectTreeBrowser. public class ObjectTreeBrowser; extends Object; Simple browser for exploring fields (including private fields) within an object by reflection. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ObjectTreeBrowser();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TreeTableView<JsonElement>; createJsonTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of fields within a JsonElement. static TreeTableView<Object>; createObjectTreeBrowser(String name,; Object object). Create a TreeTableView showing the names and values of object fields, accessed via reflection. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectTreeBrowser; public ObjectTreeBrowser(). Method Details. createObjectTreeBrowser; public static TreeTableView<Object> createObjectTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of object fields, accessed via reflection. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected; Returns:; a view depicting object fields. createJsonTreeBrowser; public static TreeTableView<JsonElement> createJsonTreeBrowser(String name,; Object object); Create a TreeTableView showing the names and values of fields within a JsonElement. Parameters:; name - root name used to identify the provided object; object - the object whose fields should be inspected. If this is not already a JsonElement, ; an attempt will be made to convert it using GsonTools.; Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html:1154,inherit,inherited,1154,javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectTreeBrowser.html,1,['inherit'],['inherited']
Modifiability,"ummary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class SlideLabelView. java.lang.Object; qupath.lib.gui.panes.SlideLabelView. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class SlideLabelView; extends Object; implements ChangeListener<ImageData<BufferedImage>>; A simple viewer for a slide label, tied to the current viewer. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; BooleanProperty; showing. Property indicating whether the label is showing on screen or not. Constructor Summary; Constructors. Constructor; Description; SlideLabelView(QuPathGUI qupath). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; BooleanProperty; showingProperty(). Property indicating whether the label is showing on screen or not. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. showing; public BooleanProperty showingProperty; Property indicating whether the label is showing on screen or not. See Also:. showingProperty(). Constructor Details. SlideLabelView; public SlideLabelView(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. showingProperty; public BooleanProperty showingProperty(); Property indicating whether the label is showing on screen or not. Returns:. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html:1322,inherit,inherited,1322,javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SlideLabelView.html,2,"['extend', 'inherit']","['extends', 'inherited']"
Modifiability,"ummary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins; Class AbstractDetectionPlugin<T>. java.lang.Object; qupath.lib.plugins.AbstractPlugin<T>; qupath.lib.plugins.AbstractInteractivePlugin<T>; qupath.lib.plugins.AbstractDetectionPlugin<T>. Type Parameters:; T - . All Implemented Interfaces:; PathInteractivePlugin<T>, PathPlugin<T>. Direct Known Subclasses:; AbstractTileableDetectionPlugin, DetectCytokeratinCV, PositivePixelCounterIJ, SimpleTissueDetection2, TileClassificationsToAnnotationsPlugin, TilerPlugin. public abstract class AbstractDetectionPlugin<T>; extends AbstractInteractivePlugin<T>; Abstract plugin aimed towards cases where new objects will be detected inside existing objects (normally TMA cores or annotations).; ; TODO: Note this isn't a very stable API (because it's quite awkward), and it's therefore liable to change... Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; AbstractDetectionPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get all selected objects that are instances of a supported class. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getDefaultParameterList, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addRunnableTasks, addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html:1237,plugin,plugins,1237,javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractDetectionPlugin.html,1,['plugin'],['plugins']
Modifiability,"ummary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.tools; Class MultiscaleFeatures.Hessian2D. java.lang.Object; qupath.opencv.tools.MultiscaleFeatures.Hessian2D. All Implemented Interfaces:; AutoCloseable, MultiscaleFeatures.Hessian. Enclosing class:; MultiscaleFeatures. public static class MultiscaleFeatures.Hessian2D; extends Object; implements MultiscaleFeatures.Hessian; Hessian matrix values for 2D images. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Mat; getDeterminant(). Get the determinant for each pixel. List<Mat>; getEigenvalues(boolean sortByAbs). Get the eigenvalues, ranked from highest to lowest. List<Mat>; getEigenvectors(boolean sortByAbs). Get the eigenvectors, returned in the same order as the eigenvalues. Mat; getLaplacian(). Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLaplacian; public Mat getLaplacian(); Description copied from interface: MultiscaleFeatures.Hessian; Get Laplacian of Gaussian image (calculated by summation without requiring eigenvalues). Specified by:; getLaplacian in interface MultiscaleFeatures.Hessian; Returns:. getEigenvectors; public List<Mat> getEigenvectors(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get the eigenvectors, returned in the same order as the eigenvalues.; Vector elements are stored along the 'channels' dimension. Specified by:; getEigenvectors in interface MultiscaleFeatures.Hessian; Parameters:; sortByAbs - if true, return eigenvectors corresponding to eigenvalues sorted by absolute value; Returns:. getEigenvalues; public List<Mat> getEigenvalues(boolean sortByAbs); Description copied from interface: MultiscaleFeatures.Hessian; Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html:1238,inherit,inherited,1238,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.Hessian2D.html,2,['inherit'],['inherited']
Modifiability,"unay triangulation. static class ; DelaunayTools.Subdivision. Helper class for extracting information from a Delaunay triangulation computed from PathObjects. Constructor Summary; Constructors. Constructor; Description; DelaunayTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static BiPredicate<PathObject,PathObject>; boundaryDistancePredicate(double maxDistance,; boolean preferNucleus). BiPredicate that returns true for objects with ROI boundaries within a specified distance. static BiPredicate<PathObject,PathObject>; centroidDistancePredicate(double maxDistance,; boolean preferNucleus). BiPredicate that returns true for objects with ROI centroids within a specified distance. static Collection<PathObject>; classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object classifications based upon pre-computed clusters. static Collection<PathObject>; classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun). Assign object classifications based upon pre-computed clusters. static List<PathObject>; createAnnotationsFromSubdivision(DelaunayTools.Subdivision subdivision,; ROI bounds). Create annotations surrounding objects within a specified subdivision based on Voronoi faces. static DelaunayTools.Subdivision; createFromCentroids(Collection<PathObject> pathObjects,; boolean preferNucleusROI). Create a DelaunayTools.Subdivision using the centroid coordinates of ROIs. static DelaunayTools.Subdivision; createFromGeometryCoordinates(Collection<PathObject> pathObjects,; boolean preferNucleusROI,; double densifyFactor). Create a DelaunayTools.Subdivision using the boundary coordinates of ROIs. static Collection<PathObject>; nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters). Assign object names based upon pre-computed clusters. static Collection<PathObject>; nameObjectsByCluster(Collection<Collectio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:1761,extend,extends,1761,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"undary to fall within a maximum region, determined by buffering the convex hull of the nucleus ROI by a fixed distance. static PathCellObject; constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements). Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid. static List<PathObject>; constrainCellOverlaps(Collection<? extends PathObject> cells). Adjust cell boundary ROIs to be non-overlapping, by assigning overlaps to the cell with the closest nucleus. static List<PathObject>; detectionsToCells(Collection<? extends PathObject> detections,; double distance,; double nucleusScale). Create cell objects by expanding the (nucleus) ROIs from existing detections to approximate the full cell boundary. static Geometry; estimateCellBoundary(Geometry geomNucleus,; double distance,; double nucleusScale). Estimate a cell boundary using Geometry objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CellTools; public CellTools(). Method Details. constrainCellByScaledNucleus; public static PathCellObject constrainCellByScaledNucleus(PathCellObject cell,; double nucleusScaleFactor,; boolean keepMeasurements); Constrain a cell boundary to fall within a maximum region, determined by scaling the nucleus ROI by a fixed scale factor ; about its centroid.; This can be used to create more biologically plausible cell boundaries in cases where the initial boundary estimates may be ; too large. Parameters:; cell - original cell object; nucleusScaleFactor - scale factor by which the nucleus should be expanded to defined maximum cell size; keepMeasurements - if true, retain the measurements of the original cell if creating a new cell; if false, discard existing measurements; Returns:; the updated cell object, or the original cell object either if its bou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html:1853,inherit,inherited,1853,javadoc/docs/qupath/lib/objects/CellTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/CellTools.html,1,['inherit'],['inherited']
Modifiability,"unner - Class in qupath.lib.plugins. A PluginRunner that simply logs progress and output. CommandLineTaskRunner() - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log, and runs tasks using the default number of threads. CommandLineTaskRunner(int) - Constructor for class qupath.lib.plugins.CommandLineTaskRunner. Constructor for a PluginRunner that send progress to a log. CommandLineTaskRunner.CommandLineProgressMonitor - Class in qupath.lib.plugins. A SimpleProgressMonitor that sends progress to a log. Commands - Class in qupath.lib.gui.commands. Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Commands() - Constructor for class qupath.lib.gui.commands.Commands;  ; CommonActions - Class in qupath.lib.gui.actions. Default actions associated with a specific QuPath instance. CommonActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.CommonActions;  ; COMPARATOR_FULL - Static variable in class qupath.lib.common.Version. Compare full version, including any suffixes. COMPARATOR_MAJOR - Static variable in class qupath.lib.common.Version. Compare major versions only. COMPARATOR_MAJOR_MINOR - Static variable in class qupath.lib.common.Version. Compare major then minor versions. COMPARATOR_MAJOR_MINOR_PATCH - Static variable in class qupath.lib.common.Version. Compare major then minor then patch versions (ignoring suffixes). compare(PathObject, PathObject) - Method in class qupath.lib.objects.DefaultPathObjectComparator;  ; compare(ROI, ROI) - Method in class qupath.lib.roi.DefaultROIComparator;  ; compareTo(KaplanMeierData.KaplanMeierEvent) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent;  ; compareTo(Version) - Method in class qupath.lib.common.Version;  ; compareTo(PathClass) - Method in class qupath.lib.objects.classes.PathClass. This is now equivalent to this.toString().compareTo(o.toString()). compareTo(ImagePl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:126934,variab,variable,126934,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"unner;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.ObjectDetector. Get a String summarizing the result, which may be displayed to a user or logged. getLastResultsDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:424369,plugin,plugins,424369,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"unningStatistics(double[] values). Create a RunningStatistics object using all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:1832,inherit,inherited,1832,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,1,['inherit'],['inherited']
Modifiability,"up table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 entries, normalizing to the specified background value. makeODLUT(double, int) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table, normalizing to the specified background value. makePathInProject(String...) - Static method in class qupath.lib.scripting.QP. Build a file or directory path relative to the current project, and ensure that it exists. makeProgressMonitor() - Method in class qupath.lib.gui.TaskRunnerFX;  ; makeProgressMonitor() - Method in class qupath.lib.plugins.AbstractTaskRunner. Create a progress monitor to update the user on what is happening. makeProgressMonitor() - Method in class qupath.lib.plugins.CommandLineTaskRunner;  ; makeReplacement(URI, URI) - Method in class qupath.lib.io.UriUpdater. Add a single replacement to the replacement map. makeRGB(int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; Use ColorTools.packRGB(int, int, int) or ColorTools.packClippedRGB(int, int, int) instead. makeRGB(int, int, int) - Static method in class qupath.lib.scripting.QP. Make a packed int representation of an RGB color. makeRGBA(int, int, int, int) - Static method in class qupath.lib.common.ColorTools. Deprecated.; The naming and order of arguments is misleading. The output is a packed ARGB value, ; but arguments are provided in the order red, green, blue, alpha. makeScaledRGB(int, double) - Static method in class qupath.lib.common.ColorTools. Scale the RGB channels for a color by a fixed amount. makeScaledRGBwithRangeCheck(float, float, float, ColorModel) - Static method in class qupath.lib.color.ColorTransformer. Create a packed RGB pixel value by applyi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:667558,plugin,plugins,667558,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"upath.lib.color.ColorDeconvolutionStains. Check if we have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual. isH_E() - Method in class qupath.lib.color.ColorDeconvolutionStains. Check if we have H&E staining, by checking the names of the first two stains and confirming that the third stain is a residual. isHematoxylin(StainVector) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Check if the name of a StainVector is ""haematoxylin"", ""hematoxylin"", ""haem"" or ""h"" (ignoring case). isHidden() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; isHidden() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; isHidden() - Method in interface qupath.lib.plugins.parameters.Parameter. Test is the 'hidden' flag is set for the parameter. isIdentity() - Method in class qupath.opencv.ml.objects.features.Normalizer. Returns true if this normalizer does not actually do anything. isIgnoredClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the PathClass should be ignored from some operations, or is null. isImageDataChanging() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true between the time setImageData has been called, and before the first repaint has been completed. isInteger() - Method in class qupath.lib.analysis.stats.Histogram. Check if the histogram has been generated from integer values only. isIntegerWrapper() - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Returns true if the array wra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:623665,plugin,plugins,623665,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"upath.lib.gui.TaskRunnerFX. All Implemented Interfaces:; TaskRunner. public class TaskRunnerFX; extends AbstractTaskRunner; Plugin runner that takes care of showing progress (in the appropriate thread) using JavaFX components. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TaskRunnerFX(QuPathGUI qupath). Constructor. TaskRunnerFX(QuPathGUI qupath,; int nThreads). Constructor specifying the number of threads. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SimpleProgressMonitor; makeProgressMonitor(). Create a progress monitor to update the user on what is happening. protected void; postProcess(Collection<? extends PathTask> tasks). Perform post-processing after a task has complete. void; runTasks(Collection<? extends Runnable> tasks). Pass a collection of parallelizable tasks to run. Methods inherited from class qupath.lib.plugins.AbstractTaskRunner; awaitCompletion, isCancelled. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath); Constructor. Parameters:; qupath - the QuPath instance. TaskRunnerFX; public TaskRunnerFX(QuPathGUI qupath,; int nThreads); Constructor specifying the number of threads. Parameters:; qupath - the QuPath instance; nThreads - the number of threads to use. Method Details. makeProgressMonitor; public SimpleProgressMonitor makeProgressMonitor(); Description copied from class: AbstractTaskRunner; Create a progress monitor to update the user on what is happening. Specified by:; makeProgressMonitor in class AbstractTaskRunner; Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Overrides:; runTasks in class AbstractTaskRunner; Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html:1421,inherit,inherited,1421,javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/TaskRunnerFX.html,1,['inherit'],['inherited']
Modifiability,"upath.lib.gui.charts.ChartTools. Add a menu item to a context menu for displaying a chart for export. addChildObject(PathObject) - Method in class qupath.lib.objects.PathObject. Add an object to the child list of this object. addChildObjects(Collection<? extends PathObject>) - Method in class qupath.lib.objects.PathObject. Add a collection of objects to the child list of this object. addChoiceParameter(String, String, S, List<S>) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices. addChoiceParameter(String, String, S, List<S>, String) - Method in class qupath.lib.plugins.parameters.ParameterList. Add a choice parameter, with an list of choices and help text. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addChoicePropertyPreference(Property<T>, ObservableList<T>, Class<? extends T>, String, String, String, boolean) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addClusterMeasurements() - Method in class qupath.opencv.features.DelaunayTriangulation. Compute mean measurements from clustering all connected objects. addColorPropertyPreference(IntegerProperty, String, String, String) - Method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. addColumn(QuPathViewer) - Method in class qupath.lib.gui.viewer.ViewerManager;  ; addCompletion(AutoCompletions.Completion) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(Collection<? extends AutoCompletions.Completion>) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addCompletions(AutoCompletions.Completion...) - Method in class qupath.lib.gui.scripting.completors.DefaultAutoCompletor;  ; addDensities(String, PathObjectPredicates.PathObjectPredicat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:13846,extend,extends,13846,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"upath.lib.gui; Class ExtensionManager. java.lang.Object; qupath.lib.gui.ExtensionManager. public class ExtensionManager; extends Object; Manage loading extensions for a QuPathGUI instance. Since:; v0.5.0; Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getFailedExtensions();  ; ObservableMap<Class<? extends QuPathExtension>,QuPathExtension>; getLoadedExtensions();  ; void; promptToCopyFilesToExtensionsDirectory(Collection<File> files). Copy a collection of files to QuPath's extensions directory, notifying the user about; what is done and prompting to create a user directory if needed. void; refreshExtensions(boolean showNotification). Check the extensions directory, loading any new extensions found there. ReadOnlyBooleanProperty; refreshingExtensions(). Property indicating whether extensions are in the process of being refreshed. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getLoadedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getLoadedExtensions(). Returns:; a collection of extensions that are currently loaded. getFailedExtensions; public ObservableMap<Class<? extends QuPathExtension>,QuPathExtension> getFailedExtensions(). Returns:; a collection of extensions that could not be loaded. refreshingExtensions; public ReadOnlyBooleanProperty refreshingExtensions(); Property indicating whether extensions are in the process of being refreshed. refreshExtensions; public void refreshExtensions(boolean showNotification); Check the extensions directory, loading any new extensions found there. Parameters:; showNotification - if true, display a notification if a new extension has been loaded. promptToCopyFilesToExtensionsDirectory; public void promptToCopyFilesToExtensionsDirectory(Collection<",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html:1332,inherit,inherited,1332,javadoc/docs/qupath/lib/gui/ExtensionManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionManager.html,1,['inherit'],['inherited']
Modifiability,"upath.lib.images.writers.ome - package qupath.lib.images.writers.ome. Write OME-TIFF images. qupath.lib.io - package qupath.lib.io. Supports reading and writing some core QuPath data structures. qupath.lib.measurements - package qupath.lib.measurements. Provides measurement lists for use with PathObjects. qupath.lib.objects - package qupath.lib.objects. Provides PathObjects, used to represent annotations and other image structures within QuPath. qupath.lib.objects.classes - package qupath.lib.objects.classes. Defines classes to represent classifications for PathObjects. qupath.lib.objects.hierarchy - package qupath.lib.objects.hierarchy. Classes to represent the object hierarchy. qupath.lib.objects.hierarchy.events - package qupath.lib.objects.hierarchy.events. Events triggered when the hierarchy changes, such as objects being added, removed or reclassified. qupath.lib.objects.utils - package qupath.lib.objects.utils. Helper classes for working with PathObjects. qupath.lib.plugins - package qupath.lib.plugins. Classes to support general analysis commands. qupath.lib.plugins.objects - package qupath.lib.plugins.objects. Plugins for manipulating objects and ROIs. qupath.lib.plugins.parameters - package qupath.lib.plugins.parameters. Defines classes for handling parameters used in interactive dialogs or as method arguments. qupath.lib.plugins.workflow - package qupath.lib.plugins.workflow. Classes and interfaces related to logging analysis steps to assist scripting and reproducibility. qupath.lib.projects - package qupath.lib.projects. Classes and interfaces related to projects, which are used to manage multiple images. qupath.lib.regions - package qupath.lib.regions. Defines immutable classes for representing image planes and regions. qupath.lib.roi - package qupath.lib.roi. Classes that define regions of interest (ROIs). qupath.lib.roi.interfaces - package qupath.lib.roi.interfaces. Interface that define regions of interest (ROIs). qupath.lib.scripting - package qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:814055,plugin,plugins,814055,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"upath.lib.objects.PathObjectPredicates. Predicate that returns true if an object has any of the specified base classifications, regardless of any subclassification. BATCH_INDEX - Static variable in class qupath.lib.scripting.ScriptAttributes. Index of the current run when batch processing (starting at 0). BATCH_LAST - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate if the current script is the last in a batch. BATCH_SAVE - Static variable in class qupath.lib.scripting.ScriptAttributes. Boolean flag to indicate whether changes to the image data should automatically be saved. BATCH_SIZE - Static variable in class qupath.lib.scripting.ScriptAttributes. Size of the current batch processing batch. batchPredict(List<? extends Mat>) - Method in class qupath.opencv.dnn.AbstractDnnModel. Convenience method to convert one or more image patches to a blob, apply the PredictionFunction, and convert the output to standard Mats. batchPredict(List<? extends Mat>) - Method in interface qupath.opencv.dnn.DnnModel. Prediction function that can take a batch of inputs and gives a corresponding; batch of outputs. beautify(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Beautifies the specified text, according to the syntax. beautifySourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; below(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value below the threshold. below(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value below the threshold. belowEquals(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the spe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:54020,extend,extends,54020,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"upath.lib.objects.TMACoreObject;  ; putMetadataValue(String, String) - Method in interface qupath.lib.projects.ProjectImageEntry. Store a metadata value. putPixelsFloat(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a float array. putPixelsUnsigned(Mat, byte[]) - Static method in class qupath.opencv.tools.OpenCVTools. Set pixels from a byte array. pyramidalize(ImageServer<BufferedImage>, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid. pyramidalizeTiled(ImageServer<BufferedImage>, int, int, double...) - Static method in class qupath.lib.images.servers.ImageServers. Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. PYTHON - Static variable in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Styler for Python. PYTHON - Static variable in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; PYTHON_IMPORTER - Static variable in class qupath.lib.gui.scripting.languages.DefaultScriptLanguage. Pythonic import statements. PythonAutoCompletor - Class in qupath.lib.gui.scripting.completors. Auto completion support for Python. PythonAutoCompletor(boolean) - Constructor for class qupath.lib.gui.scripting.completors.PythonAutoCompletor. Constructor. PythonStyler - Class in qupath.lib.gui.scripting.richtextfx.stylers. Styling to apply to a CodeArea, based on Python syntax. Q. QP - Class in qupath.lib.scripting. Collection of static methods that are useful for scripting. QP() - Constructor for class qupath.lib.scripting.QP;  ; QPEx - Class in qupath.lib.gui.scripting. Alternative to QP offering static methods of use for scripting, ; along with some extra methods that require access of GUI features. QPEx() - Constructor for class qupath.lib.gui.scripting.QPEx;  ; quickShowImage(String, Roi, ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Show an ImageProcessor (or array of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:803161,variab,variable,803161,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"upath.lib.scripting.QP. Merge the currently-selected annotations of the current hierarchy to create a new annotation containing the union of their ROIs. mergeSelectedAnnotations(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Merge the currently-selected annotations for an image, replacing them with a single new annotation. mergeSelectedAnnotations(PathObjectHierarchy) - Static method in class qupath.lib.scripting.QP. Merge the currently-selected annotations to create a new annotation containing the union of their ROIs. mergeSharedBoundaries(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Convenience method to set a merger that merges objects based on their shared boundary. METADATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; MetadataStore - Interface in qupath.lib.objects. Interface that may be used to indicate that a PathObject (or other object) can store metadata. MICROMETER - Static variable in class qupath.lib.images.servers.PixelCalibration. String to represent 'micrometer' units. micrometerSymbol() - Static method in class qupath.lib.common.GeneralTools. Get a string to represent um (but with the proper 'mu' symbol). microseconds() - Method in class qupath.lib.common.Timeit. Report timings in microseconds. milliseconds() - Method in class qupath.lib.common.Timeit. Report timings in milliseconds. MIME_TYPE_GEOJSON - Static variable in class qupath.lib.gui.commands.InteractiveObjectImporter. Mime type for GeoJson. min() - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate the minimum value of an array. min(Mat) - Static method in class qupath.opencv.tools.GroovyCV. Find the minimum of all elements in a Mat, ignoring NaNs. MIN - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Measurements. Minimum value. MIN_DIAMETER - Enum constant in enum class qupath.lib.analysis.feature",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:691147,variab,variable,691147,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"upath.lib.scripting.languages.ScriptLanguage; qupath.lib.gui.scripting.languages.MarkdownLanguage. All Implemented Interfaces:; HtmlRenderer, ExecutableLanguage. public class MarkdownLanguage; extends ScriptLanguage; implements HtmlRenderer; Class for the representation of JSON syntax in QuPath.; ; This class stores the QuPath implementation of Markdown syntaxing and a dummy plain auto-completion. Since:; v0.4.0; Author:; Pete Bankhead (based on Melvin Gelbard's code). Constructor Summary; Constructors. Constructor; Description; MarkdownLanguage(). Constructor for JSON language. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Object; execute(ScriptParameters params). Execute the given script String. ScriptAutoCompletor; getAutoCompletor(). Get the ScriptAutoCompletor object that takes care of this language's auto-completion. static MarkdownLanguage; getInstance(). Get the static instance of this class. Methods inherited from class qupath.lib.scripting.languages.ScriptLanguage; getExtensions, getName, toString. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. MarkdownLanguage; public MarkdownLanguage(); Constructor for JSON language. This constructor should never be ; called. Instead, use the static getInstance() method.; ; Note: this has to be public for the ServiceLoader to work. Method Details. getInstance; public static MarkdownLanguage getInstance(); Get the static instance of this class. Returns:; instance. getAutoCompletor; public ScriptAutoCompletor getAutoCompletor(); Description copied from class: ScriptLanguage; Get the ScriptAutoCompletor object that takes care of this language's auto-completion. ; ; Can return null if the script editor should not handle auto-completion for this language. Overrides:; getAutoCompletor in class ScriptLanguage; Returns:; auto-completor. execute; public Object e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html:1409,inherit,inherited,1409,javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/MarkdownLanguage.html,1,['inherit'],['inherited']
Modifiability,"upportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SmoothFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.SplitAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getSupportedParentObjectClasses() - Method in interface qupath.lib.plugins.PathInteractivePlugin. Get a collection of possible parent objects that the plugin could have. getSupportedParentObjectClasses() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getSupportLevel() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Estimated 'support level' for a given file path, where support level is a summary of the likelihood that; pixel values and metadata will be returned correctly and in a way that achieves good performance. getSwapRedBlueBuilder(ImageServerBuilder.ServerBuilder<BufferedImage>, String) - Static method in class qupath.lib.images.servers.RearrangeRGBImageServer. Get a ServerBuilder that swaps red and blue channels for another (RGB) server. getSwitchToGrayscaleChannel() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.switchToGrayscaleChannelProperty(). getSynchronizeViewers() - Method in class qupath.lib.gui.viewer.ViewerManager. Gets the value of the synchronizeViewers property. getSyntaxFromName(String) - Static method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:527060,plugin,plugin,527060,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugin']
Modifiability,"upportsT(). Check if writer can handle multiple timepoints. boolean; supportsZ(). Check if writer can handle multiple z-slices. void; writeImage(BufferedImage img,; OutputStream stream). Write a full image to a specified output stream. void; writeImage(BufferedImage img,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; String pathOutput). Write a full image to a specified path. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; OutputStream stream). Write OME-TIFF image to an output stream. void; writeImage(ImageServer<BufferedImage> server,; RegionRequest region,; String pathOutput). Write an image region to a specified path. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.images.writers.ImageWriter; getDefaultExtension. Constructor Details. OMETiffWriter; public OMETiffWriter(). Method Details. getName; public String getName(); Description copied from interface: ImageWriter; Get the name of the image writer. Specified by:; getName in interface ImageWriter<BufferedImage>; Returns:. getExtensions; public Collection<String> getExtensions(); Description copied from interface: ImageWriter; Get the file extensions used by the image writer.; These are returned without the leading 'dot'.; In the case where multiple extensions are associated with a file type ; (e.g. ""jpg"", ""jpeg"", ""tif"", ""tiff"") the preferred should be returned first;. Specified by:; getExtensions in interface ImageWriter<BufferedImage>; Returns:. supportsT; public boolean supportsT(); Description copied from interface: ImageWriter; Check if writer can handle multiple timepoints. Specified by:; supportsT in interface ImageWriter<BufferedImage>; Returns:. supportsZ; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html:2610,inherit,inherited,2610,javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMETiffWriter.html,2,['inherit'],['inherited']
Modifiability,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.prefs; Enum Class PathPrefs.DetectionTreeDisplayModes. java.lang.Object; java.lang.Enum<PathPrefs.DetectionTreeDisplayModes>; qupath.lib.gui.prefs.PathPrefs.DetectionTreeDisplayModes. All Implemented Interfaces:; Serializable, Comparable<PathPrefs.DetectionTreeDisplayModes>, Constable. Enclosing class:; PathPrefs. public static enum PathPrefs.DetectionTreeDisplayModes; extends Enum<PathPrefs.DetectionTreeDisplayModes>; Enum for different ways that detections can be displayed in lists and trees. Since:; v0.4.0; See Also:. PathPrefs.detectionTreeDisplayModeProperty(). Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; NONE. Do not show detections. WITH_ICONS. Show detections with ROI icons. WITHOUT_ICONS. Show detections without ROI icons. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static PathPrefs.DetectionTreeDisplayModes; valueOf(String name). Returns the enum constant of this class with the specified name. static PathPrefs.DetectionTreeDisplayModes[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NONE; public static final PathPrefs.DetectionTreeDisplayModes NONE; Do not show detections. WITHOUT_ICON",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html:1079,extend,extends,1079,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.DetectionTreeDisplayModes.html,1,['extend'],['extends']
Modifiability,"ur browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class PathIO. java.lang.Object; qupath.lib.io.PathIO. public class PathIO; extends Object; Primary class for loading/saving ImageData objects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static final ObjectInputStream; createObjectInputStream(InputStream stream). Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. static void; exportObjectsAsGeoJSON(File file,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. static void; exportObjectsAsGeoJSON(OutputStream stream,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. static void; exportObjectsAsGeoJSON(Path path,; Collection<? extends PathObject> pathObjects,; PathIO.GeoJsonExportOptions... options). Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file specified by its path. static <T> ImageServerBuilder.ServerBuilder<T>; extractServerBuilder(Path file). Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. static int; getCurrentDataFileVersion(). Get the current preferred data file version. static List<String>; getObjectFileExtensions(). Deprecated.; use getObjectFileExtensions(boolean) instead. static List<String>; getObj",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html:1064,extend,extends,1064,javadoc/docs/qupath/lib/io/PathIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/PathIO.html,1,['extend'],['extends']
Modifiability,"ures. SvgTools() - Constructor for class qupath.lib.extension.svg.SvgTools;  ; SvgTools.SvgBuilder - Class in qupath.lib.extension.svg. Builder class to enable the export of rendered QuPath objects as SVG images. SvgTools.SvgBuilder.ImageIncludeType - Enum Class in qupath.lib.extension.svg. Enum defining ways in which raster images may be included in the SVG file. swapNameAndClass(PathObject, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Swap the name and PathClass of an object. swapRGBOrder(BufferedImage, String) - Static method in class qupath.lib.awt.common.BufferedImageTools. Swap the order of pixels in an RGB image. switchToGrayscaleChannelProperty() - Method in class qupath.lib.display.ImageDisplay. Property indicating which channel should be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1015817,variab,variable,1015817,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['variab'],['variable']
Modifiability,"urity.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtension",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1428,inherit,inherited,1428,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,1,['inherit'],['inherited']
Modifiability,"urn a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. CoherenceFeaturePlugin; public CoherenceFeaturePlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html:2300,inherit,inherited,2300,javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/CoherenceFeaturePlugin.html,1,['inherit'],['inherited']
Modifiability,"urn a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. HaralickFeaturesPlugin; public HaralickFeaturesPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList containi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:2689,inherit,inherited,2689,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['inherit'],['inherited']
Modifiability,"urn a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate, runPlugin. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.plugins.PathPlugin; runPlugin. Constructor Details. LocalBinaryPatternsPlugin; public LocalBinaryPatternsPlugin(); Default constructor. Method Details. addRunnableTasks; protected void addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks); Description copied from class: AbstractPlugin; For a specified parent object, generate a task to run.; ; In practice, this method can be overridden to return anything/nothing if getTasks is overridden instead. Specified by:; addRunnableTasks in class AbstractPlugin<BufferedImage>; Parameters:; imageData - ; parentObject - ; tasks - . getDefaultParameterList; public ParameterList getDefaultParameterList(ImageData<BufferedImage> imageData); Description copied from class: AbstractInteractivePlugin; This should return a default ParameterList co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html:2380,inherit,inherited,2380,javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/LocalBinaryPatternsPlugin.html,1,['inherit'],['inherited']
Modifiability,"urns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Returns:. createAnnotationConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createAnnotationConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into annotation objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Returns:. createDetectionConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createDetectionConverter(Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter that attempts to convert the output; into detection objects. Parameters:; classificationMap - a map used to convert labels into classifications; Returns:. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator); Create an OutputHandler.OutputToObjectConverter to convert Mat binary or labeled images; to path objects. Parameters:; creator - the creator function to determine the type of object (e.g. detection, annotation); Returns:; the converter. createObjectConverter; public static <S,; T>; OutputHandler.OutputToObjectConverter<S,T,Mat> createObjectConverter(Function<ROI,PathObject> creator,; Map<? extends Number,String> classificationMap); Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. Parameters:; creator - the creator ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html:6031,extend,extends,6031,javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OpenCVProcessor.html,1,['extend'],['extends']
Modifiability,"urrently works only for TMA cores.; ; Purpose is to remove edge detections, where the tissue quality tends to be lower. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; FindConvexHullDetectionsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<T> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<T> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<T> imageData). Get a collection of objects to process, based on the contents of the PluginRunner. Collection<Class<? extends PathObject>>; getSupportedParentObjectClasses(). Get a collection of possible parent objects that the plugin could have. boolean; runPlugin(TaskRunner taskRunner,; ImageData<T> imageData,; String arg). Run the plugin. Methods inherited from class qupath.lib.plugins.AbstractInteractivePlugin; alwaysPromptForObjects, getLoggableParameters, getParameterList, parseArgument. Methods inherited from class qupath.lib.plugins.AbstractPlugin; addWorkflowStep, getTasks, postprocess, preprocess, rearrangeByStride, requestHierarchyUpdate. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FindConvexHullDetectionsPlugin; public FindConvexHullDetectionsPlugin(). Method Details. ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html:1851,plugin,plugin,1851,javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/objects/FindConvexHullDetectionsPlugin.html,2,['plugin'],['plugin']
Modifiability,"use instead #detectionCentroidDistances(boolean). qupath.lib.scripting.QP.detectionToAnnotationDistances(). retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). qupath.lib.scripting.QP.getColorRGB(int...). Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). qupath.lib.scripting.QP.loadImageData(String, boolean). qupath.lib.scripting.QP.selectObjectsByMeasurement(ImageData<?>, String). qupath.opencv.dnn.DnnTools.registerDnnModel(Class<T>, String). since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. qupath.opencv.features.DelaunayTriangulation.getConnectedNodes(Collection<PathObject>, Collection<double[]>). qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(PathObject, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(PathObject, String) instead. qupath.opencv.ml.pixel.PixelClassificationMeasurementManager.getMeasurementValue(ROI, String, boolean). use PixelClassificationMeasurementManager.getMeasurementValue(ROI, String) or PixelClassificationMeasurementManager.getCachedMeasurementValue(ROI, String) instead. qupath.opencv.tools.OpenCVTools.getCircularStructuringElement(int). OpenCVTools.createDisk(int, boolean) gives more reliable shapes. qupath.opencv.tools.OpenCVTools.labelImage(Mat, Mat, int). Use OpenCVTools.label(Mat, Mat, int) instead. qupathj.QuPath_Send_Overlay_to_QuPath.createPathObjectsFromROIs(ImagePlus, Roi[], ImageServer<?>, double, boolean, boolean, ImagePlane). use instead QuPath_Send_Overlay_to_QuPath.createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Deprecated Constructors. Constructor; Description; qupath.lib.gui.commands.MiniViewers.MiniViewerManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>). use MiniViewers.createManager(QuPathViewer, Collection) instead. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/deprecated-list.html:14845,extend,extends,14845,javadoc/docs/deprecated-list.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/deprecated-list.html,1,['extend'],['extends']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. colorMap; public ObjectProperty<ColorMaps.ColorMap> colorMapProperty; Return the ColorMap property of this canvas. See Also:. getColorMap(); setColorMap(ColorMaps.ColorMap); colorMapProperty(). Constructor Details. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap,; Function<Double,String> fun); Create a canvas that displays the range of the specified ColorMaps.ColorMap with key tooltips. Parameters:; height - ; colorMap - ; fun - function to map the 256 values of the color map to a displayable string. ColorMapCanvas; public ColorMapCanvas(double height,; ColorMaps.ColorMap colorMap). Parameters:; height - ; colorMap - . Method Details. minHeight; public double minHeight(double width). Overrides:; minHeight in class Node. maxHeight; public double maxHeight(double width). Overrides:; maxHeight in class Node. prefHeight; public double prefHeight(double width). Overrides:; prefHeight in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html:9597,inherit,inherited,9597,javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ColorMapCanvas.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. disableToggleMenuItems; public BooleanProperty disableToggleMenuItemsProperty; Property to disable options to toggle the visibility of channels. See Also:. disableToggleMenuItemsProperty(). currentChannel; public ReadOnlyObjectProperty<ChannelDisplayInfo> currentChannelProperty; Get the currently-selected channel.; This is not necessarily showing in the image; see #currentChannelVisible() for that. See Also:. currentChannelProperty(). imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; Property for the image display that should be shown and managed by this pane. See Also:. imageDisplayProperty(). Constructor Details. BrightnessContrastChannelPane; public BrightnessContrastChannelPane(). Method Details. disableToggleMenuItemsProperty; public BooleanProperty disableToggleMenuItemsProperty(); Property to disable options to toggle the visibility of channels. Returns:. currentChannelVisible; public Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html:12471,inherit,inherited,12471,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastChannelPane.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. doLogCounts; public BooleanProperty doLogCountsProperty; Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. See Also:. doLogCountsProperty(). minValue; public DoubleProperty minValueProperty; The minimum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. minValueProperty(). maxValue; public DoubleProperty maxValueProperty; The maximum value displayed on the histogram.; This can be used to interactively control min/max display values from the histogram directly. See Also:. maxValueProperty(). Constructor Details. BrightnessContrastHistogramPane; public BrightnessContrastHistogramPane(). Method Details. doLogCountsProperty; public BooleanProperty doLogCountsProperty(); Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. Returns:. m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html:11778,inherit,inherited,11778,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastHistogramPane.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. hideIfEmpty; public BooleanProperty hideIfEmptyProperty; Property controlling whether the chart should be hidden if there is no data. See Also:. getHideIfEmpty(); setHideIfEmpty(boolean); hideIfEmptyProperty(). countsTransform; public ObjectProperty<HistogramChart.CountsTransformMode> countsTransformProperty; Property to control how counts should be transformed before being; shown in the histogram. See Also:. getCountsTransform(); setCountsTransform(HistogramChart.CountsTransformMode); countsTransformProperty(). displayMode; public ObjectProperty<HistogramChart.DisplayMode> displayModeProperty; Property to control how the histogram is displayed, either using areas or bars. See Also:. getDisplayMode(); setDisplayMode(HistogramChart.DisplayMode); displayModeProperty(). Constructor Details. HistogramChart; public HistogramChart(). Method Details. hideIfEmptyProperty; public BooleanProperty hideIfEmptyProperty(); Proper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:15812,inherit,inherited,15812,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"useDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, toString, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. lineWidth; public DoubleProperty lineWidthProperty; Line width property used for displaying threshold lines. See Also:. getLineWidth(); setLineWidth(double); lineWidthProperty(). Constructor Details. ChartThresholdPane; public ChartThresholdPane(XYChart<Number,Number> chart); Note: xAxis and yAxis must be instances of NumberAxis. Parameters:; chart - . Method Details. setThresholds; public void setThresholds(Color color,; double... thresholds); Set thresholds, which are visualized as vertical lines. Parameters:; color - ; thresholds - . getThresholds; public ObservableList<ObservableNumberValue> getThresholds(); Get a list of all thresholds. Returns:. clearThresholds; public void clearThresholds(); Clear all thresholds. setThresholdColor; public void setThresholdColor(ObservableNumberValue val,; Color color); Set the color of a specified threshold line. Parameters:; val - ; color - . addThreshold; public ObservableN",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html:12213,inherit,inherited,12213,javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/ChartThresholdPane.html,1,['inherit'],['inherited']
Modifiability,"useEntered, onMouseExited, onMouseMoved, onMousePressed, onMouseReleased, onRotate, onRotationFinished, onRotationStarted, onScrollFinished, onScroll, onScrollStarted, onSwipeDown, onSwipeLeft, onSwipeRight, onSwipeUp, onTouchMoved, onTouchPressed, onTouchReleased, onTouchStationary, onZoomFinished, onZoom, onZoomStarted, opacity, parent, pickOnBounds, pressed, rotate, rotationAxis, scaleX, scaleY, scaleZ, scene, style, translateX, translateY, translateZ, viewOrder, visible. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; HistogramChart.CountsTransformMode. Enum to specify how the counts are displayed. static enum ; HistogramChart.DisplayMode. Display mode for the histogram. static class ; HistogramChart.HistogramData. Helper class for representing data that may be visualized with a HistogramChart. Nested classes/interfaces inherited from class javafx.scene.chart.XYChart; XYChart.Data<X,Y>, XYChart.Series<X,Y>. Field Summary. Fields inherited from class javafx.scene.layout.Region; USE_COMPUTED_SIZE, USE_PREF_SIZE. Fields inherited from class javafx.scene.Node; BASELINE_OFFSET_SAME_AS_HEIGHT. Constructor Summary; Constructors. Constructor; Description; HistogramChart();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectProperty<HistogramChart.CountsTransformMode>; countsTransformProperty(). Property to control how counts should be transformed before being; shown in the histogram. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Integer color). Create a HistogramData object to wrap a histogram & some info about its display. static HistogramChart.HistogramData; createHistogramData(Histogram histogram,; Color color). Create a HistogramData object to wrap a histogram & some info about its display. ObjectProperty<HistogramChart.DisplayMode>; displayModeProperty(). Property to control how the histogram is displayed, either using",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html:4383,inherit,inherited,4383,javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramChart.html,1,['inherit'],['inherited']
Modifiability,"usters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; Returns:; a collection of objects that have had their classifications set by this method. classifyObjectsByCluster; public static Collection<PathObject> classifyObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters,; Function<Integer,PathClass> pathClassFun); Assign object classifications based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; pathClassFun - function used to create a PathClass from a cluster number (determined by where it falls within the collection).; However rather than set this as the object classification, it will be used to set the name and color of the object ; (so as to avoid overriding an existing classification).; Returns:; a collection of objects that have had their classifications set by this method. nameObjectsByCluster; public static Collection<PathObject> nameObjectsByCluster(Collection<Collection<? extends PathObject>> clusters); Assign object names based upon pre-computed clusters. Parameters:; clusters - a collection of PathObject collections, each of which corresponds to a cluster of related objects.; Returns:; a collection of objects that have had ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html:8166,extend,extends,8166,javadoc/docs/qupath/lib/analysis/DelaunayTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.html,1,['extend'],['extends']
Modifiability,"ut - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4324,extend,extend,4324,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['extend'],['extend']
Modifiability,"utHandler<S,T,U>); qupath.lib.gui.actions.OverlayActions; qupath.lib.gui.viewer.OverlayOptions; qupath.lib.regions.Padding; qupath.lib.gui.tools.PaneTools; qupath.lib.plugins.parameters.ParameterList (implements java.io.Serializable); qupath.lib.gui.dialogs.ParameterPanelFX; qupath.lib.experimental.pixels.Parameters<S,T>; qupath.lib.experimental.pixels.Parameters.Builder<S,T>; qupath.opencv.ml.PatchClassifierParams; qupath.opencv.ml.PatchClassifierParams.Builder; qupath.lib.objects.classes.PathClass (implements java.lang.Comparable<T>, java.io.Serializable); qupath.lib.objects.classes.PathClass.StandardPathClasses; qupath.lib.objects.classes.PathClassFactory; qupath.lib.objects.classes.PathClassTools; qupath.lib.io.PathIO; qupath.lib.objects.PathObject (implements java.io.Externalizable). qupath.lib.objects.PathROIObject. qupath.lib.objects.PathAnnotationObject; qupath.lib.objects.PathDetectionObject. qupath.lib.objects.PathCellObject; qupath.lib.objects.PathTileObject. qupath.lib.plugins.ParallelTileObject (implements qupath.lib.objects.TemporaryObject). qupath.lib.objects.TMACoreObject (implements qupath.lib.objects.MetadataStore). qupath.lib.objects.PathRootObject. qupath.lib.objects.PathObjectConnections (implements java.io.Externalizable); qupath.lib.gui.commands.PathObjectGridView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener); qupath.lib.objects.hierarchy.PathObjectHierarchy (implements java.io.Serializable); qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent; qupath.lib.gui.panes.PathObjectHierarchyView (implements javafx.beans.value.ChangeListener<T>, qupath.lib.objects.hierarchy.events.PathObjectHierarchyListener, qupath.lib.objects.hierarchy.events.PathObjectSelectionListener); qupath.lib.gui.tools.PathObjectLabels; qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane; qupath.lib.gui.viewer.PathObjectPainter; qupath.lib.objects.PathObjectPredicates; qupath.lib.objects.PathOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:26425,plugin,plugins,26425,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"utMethodTextChanged, setOnKeyPressed, setOnKeyReleased, setOnKeyTyped, setOnMouseClicked, setOnMouseDragEntered, setOnMouseDragExited, setOnMouseDragged, setOnMouseDragOver, setOnMouseDragReleased, setOnMouseEntered, setOnMouseExited, setOnMouseMoved, setOnMousePressed, setOnMouseReleased, setOnRotate, setOnRotationFinished, setOnRotationStarted, setOnScroll, setOnScrollFinished, setOnScrollStarted, setOnSwipeDown, setOnSwipeLeft, setOnSwipeRight, setOnSwipeUp, setOnTouchMoved, setOnTouchPressed, setOnTouchReleased, setOnTouchStationary, setOnZoom, setOnZoomFinished, setOnZoomStarted, setOpacity, setPickOnBounds, setPressed, setRotate, setRotationAxis, setScaleX, setScaleY, setScaleZ, setStyle, setTranslateX, setTranslateY, setTranslateZ, setUserData, setViewOrder, setVisible, snapshot, snapshot, startDragAndDrop, startFullDrag, styleProperty, toBack, toFront, translateXProperty, translateYProperty, translateZProperty, usesMirroring, viewOrderProperty, visibleProperty. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface javafx.css.Styleable; getStyleableNode. Property Details. imageDisplay; public ObjectProperty<ImageDisplay> imageDisplayProperty; The image display to which the sliders are applied. See Also:. imageDisplayProperty(). disableMinMaxAdjustment; public BooleanProperty disableMinMaxAdjustmentProperty; Prevent the min and max sliders from being adjusted. See Also:. disableMinMaxAdjustmentProperty(). disableGammaAdjustment; public BooleanProperty disableGammaAdjustmentProperty; Prevent gamma from being adjusted. See Also:. disableGammaAdjustmentProperty(). selectedChannel; public ObjectProperty<ChannelDisplayInfo> selectedChannelProperty; The channel to which the sliders are applied.; This should be a channel found within #imageDisplayProperty(). See Also:. selectedChannelProperty(). maxValue; public DoubleProperty maxValueProperty; Value of the maxi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html:12710,inherit,inherited,12710,javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/display/BrightnessContrastSliderPane.html,1,['inherit'],['inherited']
Modifiability,"ution image in pixels. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the full-resolution image height. getHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the image height at this level. getHeight() - Method in class qupath.lib.regions.ImageRegion. Get the height of the region bounding box. getHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.displ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:401552,plugin,plugins,401552,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"v.dnn.DnnTools. Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. registerOp(Class<? extends ImageOp>, String) - Static method in class qupath.opencv.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register the tool on the viewer. RELABEL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; relabelTMAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:841095,extend,extends,841095,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"v.ml.OpenCVClassifiers.RTreesClassifier;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getParameterList() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Retrieve a list of adjustable parameter that can be used to customize the classifier. getParameterList(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a reference to a ParameterList stored internally, and which will be used for analysis. getParameterListJSON(Map<String, ?>, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(Map) instead. getParameterListJSON(ParameterList, String) - Static method in class qupath.lib.plugins.parameters.ParameterList. Deprecated.; use ParameterList.convertToJson(ParameterList) instead. getParameterMap() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getParameterMap() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getParameterMap() - Method in interface qupath.lib.plugins.workflow.WorkflowStep. Get a map of parameters required for this step. getParameters() - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Get the ParameterList displayed in this panel. getParameters() - Method in class qupath.lib.plugins.parameters.ParameterList. Returns a map of keys and their corresponding parameters. getParent() - Method in class qupath.lib.experimental.pixels.Parameters. Get the parent object. getParent() - Method in class qupath.lib.objects.PathObject. Request the parent object. getParentClass() - Method in class qupath.lib.objects.classes.PathClass. Get the parent classification, or null if this classification has no parent. getParentObjects(ImageData<BufferedIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:473709,plugin,plugins,473709,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['plugin'],['plugins']
Modifiability,"v.ops.ImageOps. Register an ImageOp class for JSON serialization/deserialization. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, Shape, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore. Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. registerRequest(TileListener<BufferedImage>, ImageServer<BufferedImage>, RegionRequest, double, int, int) - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; registerSubtype(Class<? extends ObjectClassifier>) - Static method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory. Register a new ObjectClassifier subtype for compatibility with Gson serialization. registerSubtype(Class<? extends T>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using the default label (the simple name of the class). registerSubtype(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register a subtype using a custom label. registerTool(QuPathViewer) - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; registerTool(QuPathViewer) - Method in interface qupath.lib.gui.viewer.tools.PathTool. Register the tool on the viewer. RELABEL - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; relabelTMAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(Path, Path) - Method in class qupath.lib.io.UriUpdater. Identify replacem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:841271,extend,extends,841271,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['extend'],['extends']
Modifiability,"va.lang.AutoCloseable); qupath.lib.analysis.images.SimpleImages; qupath.lib.gui.panes.SimpleImageViewer; qupath.lib.plugins.workflow.SimplePluginWorkflowStep (implements java.io.Externalizable, qupath.lib.plugins.workflow.ScriptableWorkflowStep); qupath.process.gui.commands.SimpleThresholdCommand (implements java.lang.Runnable); qupath.imagej.processing.SimpleThresholding; qupath.process.gui.commands.SingleMeasurementClassificationCommand (implements java.lang.Runnable); qupath.lib.gui.panes.SlideLabelView (implements javafx.beans.value.ChangeListener<T>); qupath.lib.images.servers.SparseImageServer.Builder; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager (implements java.lang.AutoCloseable); qupath.lib.gui.commands.objects.SplitAnnotationsByLineCommand; qupath.process.gui.commands.SplitProjectTrainingCommand (implements java.lang.Runnable); qupath.lib.color.StainVector (implements java.io.Externalizable); qupath.lib.analysis.stats.StatisticsHelper; qupath.lib.plugins.parameters.StringParameter; qupath.lib.gui.commands.SummaryMeasurementTableCommand; qupath.lib.extension.svg.SvgExtension (implements qupath.lib.gui.extensions.QuPathExtension); qupath.lib.extension.svg.SvgExtension.SvgActions; qupath.lib.extension.svg.SvgTools; qupath.lib.extension.svg.SvgTools.SvgBuilder; qupath.lib.gui.prefs.SystemMenuBar; qupath.lib.plugins.TaskRunnerUtils; qupath.lib.gui.scripting.TextAreaControl (implements qupath.lib.gui.scripting.ScriptEditorControl<T>); qupath.opencv.tools.Thinning; qupath.lib.common.ThreadTools; java.lang.Throwable (implements java.io.Serializable). java.lang.Exception. java.lang.RuntimeException. qupath.lib.images.servers.openslide.jna.OpenSlide.OpenSlideDisposedException. qupath.imagej.images.writers.TiffWriterIJ; qupath.lib.images.writers.TileExporter; qupath.lib.objects.utils.Tiler; qupath.lib.objects.utils.Tiler.Builder; qupath.lib.images.servers.TileRequest; qupath.lib.common.Timeit; qupath.lib.common.Timeit.Checkpoint; qupath.lib.g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/overview-tree.html:34575,plugin,plugins,34575,javadoc/docs/overview-tree.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/overview-tree.html,1,['plugin'],['plugins']
Modifiability,"va.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AbstractTaskRunner; protected AbstractTaskRunner(); Constructor for a PluginRunner that uses the default number of threads, read from; ThreadTools.getParallelism(). AbstractTaskRunner; protected AbstractTaskRunner(int numThreads); Constructor for a PluginRunner that optionally uses a fixed number of threads. Parameters:; numThreads - the number of threads to use, or -1 to use the default number of threads defined by; ThreadTools.getParallelism(). Method Details. makeProgressMonitor; protected abstract SimpleProgressMonitor makeProgressMonitor(); Create a progress monitor to update the user on what is happening. Returns:. runTasks; public void runTasks(Collection<? extends Runnable> tasks); Description copied from interface: TaskRunner; Pass a collection of parallelizable tasks to run. Specified by:; runTasks in interface TaskRunner; Parameters:; tasks - the tasks to run. If these are instances of PathTask then ; an optional postprocessing may be applied after all tasks are complete. awaitCompletion; protected void awaitCompletion(); Await the completion of currently-running tasks, notifying any listener if necessary. postProcess; protected void postProcess(Collection<? extends PathTask> tasks); Perform post-processing after a task has complete.; ; This is necessary to call the taskComplete method (if the Runnable is an instance of PathTask),; and also to update any progress monitor.; ; Note: Subclasses may choose to override this method so that it is called on a particular thread; (e.g. with Platform.runLater() or SwingUtilities.invokeLater). Parameters:; tasks - . isCancelled; public boolean isCancelled(); Description copied from interface: TaskRunner; Query if the plugin can be cancelled while running.; Plugins are expected to check this flag before time-consuming operations. Specified by:; isCancelled in interface TaskRunner; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html:3142,extend,extends,3142,javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractTaskRunner.html,2,"['extend', 'plugin']","['extends', 'plugin']"
Modifiability,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.charts; Class Charts. java.lang.Object; qupath.lib.gui.charts.Charts. public class Charts; extends Object; Helper class for generating interactive charts. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Charts.BarChartBuilder. Builder for creating scatter charts. static class ; Charts.PieChartBuilder. Builder for creating pie charts. static class ; Charts.ScatterChartBuilder. Builder for creating scatter charts. Constructor Summary; Constructors. Constructor; Description; Charts();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Charts.BarChartBuilder; barChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. static Charts.PieChartBuilder; pieChart(). Create a Charts.PieChartBuilder for generating a custom pie chart. static Charts.ScatterChartBuilder; scatterChart(). Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Charts; public Charts(). Method Details. scatterChart; public static Charts.ScatterChartBuilder scatterChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. pieChart; public static Charts.PieChartBuilder pieChart(); Create a Charts.PieChartBuilder for generating a custom pie chart. Returns:; the builder. barChart; public static Charts.BarChartBuilder barChart(); Create a Charts.ScatterChartBuilder for generating a custom scatter plot. Returns:; the builder. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html:1361,inherit,inherited,1361,javadoc/docs/qupath/lib/gui/charts/Charts.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/Charts.html,1,['inherit'],['inherited']
