quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability," # empties the PSI variables list; cfour {} # empties. In this scheme, the contents of the ``cfour {...}`` block are tacked onto; the end of the ``ZMAT`` file that is otherwise written from psi style; format. It is by this route that, for example ``%excite*`` sections can at; present be specified. The execution of :program:`xcfour` can be modified by a few parameters. Setting; the option |cfour__cfour_omp_num_threads| sets the environment variable; :envvar:`OMP_NUM_THREADS` for only the duration of the Cfour computation.; That is, portions of an input file that run |PSIfour| modules are; unaffected. Additionally, there are a few arguments to the function; :py:func:`~psi4.driver.procrouting.interface_cfour.run_cfour` that control the Cfour scratch; directory. . .. comment Notes to Self; .. comment ~~~~~~~~~~~~~; .. comment ; .. comment Test checked-in GENBAS on installed copy; .. comment ; .. comment Reference still not factored into cc_program!; .. comment ; .. comment optimize on a sandwich calc? errors out; .. comment ; .. comment ; .. comment .. _`table:cfour_cc_program`:; .. comment ; .. comment .. table:: Cfour coupled-cluster program defaults by calculation type; .. comment ; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment | | | | RHF | UHF | ROHF |; .. comment | | | +--------+--------+---------+; .. comment | Driver Call, |cfour__cfour_deriv_level| | name, |cfour__cfour_calc_level| | |cfour__cfour_excite| | |cfour__cfour_cc_program| |; .. comment +=========================================+=================================+=======================+========+========+=========+; .. comment | :py:func:`~psi4.energy`, zero | cc2 | none | vcc | vcc | vcc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomee | _cc | _cc | _cc |; .. comment | | +-----------------------+--------+--------+---------+; .. comment | | | eomea/eom",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:42643,error,errors,42643,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['error'],['errors']
Availability," # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; single: geometry optimization, optimization. .. _`sec:optking`:. Geometry Optimization; =====================. .. codeauthor:: Rollin A. King and Alexander G. Heide; .. sectionauthor:: Rollin A. King, Alexander G. Heide, and Lori A. Burns. *Module:* :ref:`Keywords <apdx:optking>`, `OPTKING <https://github.com/psi-rking/optking>`_. |PSIfour| carries out molecular optimizations using a Python module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives |w---w| both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step with trust radius scaling, and the BFGS Hessian update. The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49]_.; The general approach employed in this code; is similar to the ""model Hessian plus RF method"" described and tested by Bakken and; Helgaker [Bakken:2002:9160]_. However, for separated; fragments, we have chosen not to employ their ""extra-redundant"" coordinates. The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; |optking__covalent_connect|. If the user finds that some; connectivity is lacking by default, then this value may be increased. .. warning:: The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the system. .. _DimerIntro:. Presently, by default, separate fragments are bonded by the; nearest atoms, and the whole syst",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:1865,redundant,redundant,1865,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['redundant'],['redundant']
Availability," 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:145508,error,error,145508,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:468144,error,error,468144,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107341,error,error,107341,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485554,error,error,485554,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521829,error,error,521829,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:383111,error,error,383111,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12715,error,error,12715,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17973,error,error,17973,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158981,error,error,158981,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164317,error,error,164317,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333731,error,error,333731,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:205831,error,error,205831,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:522031,error,error,522031,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:148071,error,error,148071,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24083,error,error,24083,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:367112,error,error,367112,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:150463,error,error,150463,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480799,error,error,480799,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:69084,error,error,69084,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-de",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526011,error,error,526011,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'dr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326309,error,error,326309,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:58890,error,error,58890,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:64256,error,error,64256,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:77109,error,error,77109,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:82475,error,error,82475,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9355,error,error,9355,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228649,error,error,228649,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:429529,error,error,429529,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206048,error,error,206048,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421043,error,error,421043,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:439582,error,error,439582,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:491855,error,error,491855,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:498938,error,error,498938,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:118778,error,error,118778,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:458986,error,error,458986,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46243,error,error,46243,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344833,error,error,344833,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:118997,error,error,118997,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:128624,error,error,128624,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:409217,error,error,409217,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363450,error,error,363450,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:371169,error,error,371169,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525206,error,error,525206,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:117120,error,error,117120,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'cc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:126751,error,error,126751,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:340961,error,error,340961,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443303,error,error,443303,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450346,error,error,450346,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:60027,error,error,60027,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:78246,error,error,78246,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-det",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:170373,error,error,170373,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'not",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226215,error,error,226215,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fno",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:478651,error,error,478651,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167532,error,error,167532,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24871,error,error,24871,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:128405,error,error,128405,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224028,error,error,224028,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," * OpenFermion-Psi4 |w---w| https://github.com/quantumlib/OpenFermion. * :ref:`cppe <sec:cppe>` |w---w| https://github.com/maxscheurer/cppe. * mp2d |w---w| https://github.com/Chandemonium/MP2D. * :ref:`FockCI <sec:fockci>` |w---w| https://github.com/shannonhouck/psi4fockci. * cct3 |w---w| https://github.com/piecuch-group/cct3. * :ref:`adcc <sec:adcc>` |w---w| https://github.com/adc-connect/adcc. * :ref:`BrianQC <sec:brianqc>` |w---w| https://www.brianqc.com/. * i-PI |w---w| http://ipi-code.org/. * psixas |w---w| https://github.com/Masterluke87/psixas. * MDI |w---w| https://github.com/MolSSI-MDI/MDI_Library. * :ref:`ddx <sec:ddx>` |w---w| https://github.com/ddsolvation/ddx. .. _`faq:condapsi4dev`:. How to use conda to get a Psi4 development environment; ------------------------------------------------------. |PSIfour| has a lot of dependencies, some of which are complicated; to build. Fortunately, conda can supply them all. A conda; package ``psi4-dev`` is available to gather the dependencies; and build tools needed to compiler |PSIfour| from source. Go to; :psicode:`installs/latest`, select ""source"" and ""nightly build"" along; with Linux/Mac and a Python version. Follow its instructions to create; a conda environment that has a script ``psi4-path-advisor``. Running; ``psi4-path-advisor --help`` shows more options. Running the script; without arguments gives a cmake command that supplies paths to dependency; conda packages to CMake's cache. You can add further cmake options to; this command when you execute it. Once the cmake command has built your; :samp:`{objdir}`, you can build |PSIfour|. Remember to activate this; conda environment during |PSIfour| running or development. There are a; few extra options to ``psi4-path-advisor`` to set up using conda's GNU; compilers (on Linux), conda's Clang compilers (on Mac; less reliably),; or your own Intel compilers backed by conda's GNU compilers (on Linux). .. code-block:: console. >>> git clone https://github.com/psi4/psi4.g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:14177,avail,available,14177,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability," * updated nightly so new features accessible. * standardizes python distribution so no need to find/install libpython packages. * add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages. * develop |PSIfour| through plugins without a pre-existing development environment, see :ref:`sec:condaplugins`. The |PSIfour| binary repository is at `Anaconda (formerly Binstar) <https://anaconda.org/psi4>`_. For commands to get a default installation, go to :ref:`sec:psi4conda`; or the :psicode:`psicode downloads page <installs/latest/>` .; Users proficient with conda may prefer to consult :ref:`sec:condadetails`.; For more flexibility and a detailed explanation, go to; :ref:`sec:slowconda` and :ref:`sec:slowpsi4`. .. _`faq:psicodedownload`:. How to install a Psi4 binary with the Psi4conda installer, download site; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. `Download one of the nine installers; <http://psicode.org/downloads.html>`_ (Linux/Mac/Windows; Py38/39/310).; ``bash`` it. Follow the prompts and *do* make the adjustments to; :envvar:`PATH` and :envvar:`PSI_SCRATCH` that it suggests at the end. Test; with ``psi4 --test`` (green and yellow good; red bad). Done. Explicit commands at :ref:`sec:psi4conda`. .. _`sec:psi4conda`:. How to install a Psi4 binary with the Psi4conda installer, command-line; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour| on Linux,; Mac, Windows (Ubuntu shell for Windows accepts Linux installers), or native Windows.; Installs Miniconda+Psi4+AddOns into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-l",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:3590,down,downloads,3590,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloads']
Availability," .. include:: autodoc_abbr_options_c.rst. .. index:: ; DMA; GDMA; Distributed Multipole Analysis. .. _`sec:gdma`:. Interface to GDMA Distributed Multipole Analysis by A. J. Stone |w---w| :py:func:`~psi4.driver.gdma`; ====================================================================================================. .. codeauthor:: Anthony J. Stone, Andrew C. Simmonett; .. sectionauthor:: Andrew C. Simmonett. *Module:* :ref:`Keywords <apdx:gdma>`, :ref:`PSI Variables <apdx:gdma_psivar>`, :source:`GDMA_INTERFACE<psi4/src/psi4/gdma_interface>`. .. image:: https://img.shields.io/badge/home-gdma-5077AB.svg; :target: https://github.com/psi4/gdma. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://www-stone.ch.cam.ac.uk/documentation/gdma/manual.pdf. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/gdma/badges/version.svg; :target: https://anaconda.org/psi4/gdma. * GDMA is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, gdma has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; gdma can be obtained through ``conda install gdma -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_gdma`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect gdma and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. gdma from conda without thinking, consult. * To remove a conda installation, ``conda remove gdma``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/gdma.svg?maxAge=2592000; :target: https://github.com/psi4/gdma. * If using |PSIfour| built from source and you want gdma built from; from source also,; enable it as a feature with :makevar:`ENABLE_gdma`,; and let the build system fetch and build it and act",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst:1980,avail,available,1980,doc/sphinxman/source/gdma.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst,1,['avail'],['available']
Availability," 0.716 0.222 -0.348 -0.792 1.189; PH OH -2.742 0.749 -0.147 -0.227 -0.674 -3.040; PH PH 0.680 2.187 0.007 -0.208 -2.400 0.266; OH All -7.033 6.931 -0.362 -1.860 -2.040 -4.364; PH All -2.062 2.936 -0.140 -0.435 -3.074 -2.774; All OH -11.167 6.965 -0.730 -1.739 -1.923 -8.594; All PH 2.072 2.903 0.229 -0.556 -3.191 1.456; All All -9.095 9.867 -0.501 -2.295 -5.114 -7.138. Note that the assignment of linking sigma bond contributions is a small point of; ambiguity in F-SAPT. The ``fsapt.dat`` file presents the ""links-by-charge""; assignment at the top and the ""links by 50-50"" assignment at the bottom. We; generally prefer the latter, but both generally give qualitatively identical; energetic partitions. Users should check the files ``fragA.dat`` and ``fragB.dat`` to ensure that; there is not too much charge delocalization from one fragment to another. This; is presented in the ""Orbital Check"" section in these files |w--w| a value larger than; 0.1 docc is an indication that the picture of localizable functional groups may; be breaking down. We also *strongly discourage* the cutting of double,; triple, or aromatic bonding motifs when partitioning the molecule into fragments; |w--w| cuts across only simple sigma bonds are encouraged. .. caution:: November 2022, previous to QCEngine v0.26.0 and Psi4; v1.7.0, there was a scaling inconsistency in the pairwise analysis; such that :psivar:`2-BODY PAIRWISE DISPERSION CORRECTION ANALYSIS`; was doubled when generated from dftd3 compared to the output from other; programs (s-dftd3 and dftd4). This shows up in the QCVariable and in the; ``Empirical_Disp.dat`` file written during ``energy(""fisapt0-d3"")`` (all; -D3 variants). Fortunately, the ``fsapt.py`` script compensated; for dftd3 (by far the most used program for this task). Users of the; pairwise analysis should take care to use the new QCEngine; AND ``fsapt.py`` script distributed with NEW Psi4. ``fisapt0-d4`` run; with previous Psi4/fsapt.py will be wrong. ``fisapt0-d3`` run with",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:8829,down,down,8829,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['down'],['down']
Availability," ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 105.0; }; ; set basis dz. Then the following are examples of various types of calculations that can be completed. * Optimize a geometry using default methods (RFO step)::. optimize('scf'). * Optimize using Newton-Raphson steps instead of RFO steps::. set step_type nr; optimize('scf'). * Optimize using finite differences of energies instead of gradients::. optimize('scf', dertype='energy'). * Optimize while limiting the initial step size to 0.1 au::. set intrafrag_step_limit 0.1; optimize('scf'). * Optimize while always limiting the step size to 0.1 au:. .. code-block:: none. set {; intrafrag_step_limit 0.1; intrafrag_step_limit_min 0.1; intrafrag_step_limit_max 0.1; }. optimize('scf'). * Optimize while calculating the Hessian at every step:. .. code-block:: none. set full_hess_every 1; optimize('scf'). .. code-block:: none; ; import optking; . Hessian; ^^^^^^^. If Cartesian second derivatives are available, optking can read them; and transform them into internal coordinates to make an initial Hessian in; internal coordinates. Otherwise, several empirical Hessians are available,; including those of Schlegel [Schlegel:1984:333]_ and Fischer and Almlof; [Fischer:1992:9770]_.; Either of these or a simple diagonal Hessian may be selected using the ; |optking__intrafrag_hess| keyword. All the common Hessian update schemes are available. For formulas, see; Schlegel [Schlegel:1987:AIMQC]_ and Bofill [Bofill:1994:1]_. The Hessian may be computed during an optimization using the ; |optking__full_hess_every| keyword. .. index:: ; pair: geometry optimization; transition state; pair: geometry optimization; IRC; single: geometry optimization; constrained. Transition States and Reaction Paths; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. * Calculate a starting Hessian and optimize the ""transition state"" of; linear water (note that without a reasonable starting geometry and; Hessian, such a straightforward search often fails)::. molecule h2o {; O",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:4828,avail,available,4828,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['avail'],['available']
Availability," ; LIBPSIO --- The PSI I/O Library. Programmer's Manual for LIBPSIO: The PSI I/O Library. T. Daniel Crawford ; 22 October 1998 ; Updated: 27 July 2006; crawdad@vt.edu. I. The structure and philosophy of the; library. Many I/O libraries for quantum chemistry packages (including those in; the old PSI2 code) expect the programmer to know the byte-by-byte; layout of the given binary file. Accordingly, the primary read; and write functions in such libraries require as an argument a global; bytewise file pointer to the beginning of the desired data. As a; result, when this pointer is defined to be an unsigned four-byte; integer (common on 32-bit computers), the total size of the direct; access file is limited to 4 GB (232 bytes). Furthermore,; in order to avoid code duplication, this I/O design requires that one; construct specialized libraries of functions (e.g., libfile30; in PSI2) for interaction with particularly complicated files such as a; checkpoint file. Even slight modification of the file layout can; require substantial changes to such libraries. This PSI3 I/O library, libpsio, is intended to overcome these; problems in two ways:. Each file makes use of its own table of contents (TOC); which contains file-global starting and ending addresses for each; data item.; Addresses to data items in the TOC are provided to the standard; read and write functions by the programmer as entry-relative; page/offset pairs, which are translated to file-global; addresses internally. Data items in the TOC are identified by keyword strings (e.g.,; ""Nuclear Repulsion Energy""). If the programmer wishes to; read or write an entire TOC entry, he/she is required to provide only; the TOC keyword and the entry size (in bytes) to obtain the data; the; entry's global starting address is supplied by the TOC. Furthermore,; it is possible to read pieces of TOC entries (say a single buffer of a; large list of two-electron integrals) by providing the appropriate TOC; keyword, a size, and a startin",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html:954,checkpoint,checkpoint,954,doc/sphinxman/source/attic/libpsio.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html,2,['checkpoint'],['checkpoint']
Availability," >>> cmake -DCMAKE_Fortran_COMPILER=ifort. .. _`faq:approvedfc`:. What Fortran compilers are approved; -----------------------------------. On Linux and Mac, the following work nicely. * GNU: ``gfortran``; * Intel: ``ifort``. * Packages to install for specific OS or package managers:. * Ubuntu ``gfortran``; * conda ``gfortran_linux-64`` or ``gfortran_osx-64`` to get ``gfortran``. .. _`faq:macgfortran`:. How to obtain a Fortran compiler for Mac without Fink, MacPorts, or Homebrew; ----------------------------------------------------------------------------. Xcode does not provide a Fortran compiler. A way to get one is to download; the ``gfortran_osx-64`` conda package. This provides; ``gfortran`` compilers for Mac. The version is 4.8.5, which is quite old,; but the Fortran compiler will work. .. Xcode does not provide a Fortran compiler. Although a Fortran compiler is; .. not required for Psi4, a broken one can prevent correct configuration. Do; .. not download the latest version of GFortran from the HPC website; this is; .. unlikely to be compatible with your version of GCC. Instead, you should; .. run ``gcc -v`` to find out what version of GCC you're using, and then; .. download the corresponding GFortran from; .. <http://r.research.att.com/tools/>. If you configure Psi on a Mac without; .. any Fortran compiler it will set itself up correctly, so this is only; .. necessary if you want a Fortran compiler for other purposes. .. _`cmake:lapack`:. How to configure BLAS/LAPACK for building Psi4; ----------------------------------------------. **Role and Dependencies**. * Role |w---w| In |PSIfour|, BLAS and LAPACK control much of the speed; and efficiency of the code since computational chemistry is essentially; linear algebra on molecular systems. * Downstream Dependencies |w---w| |PSIfour| |dr| LAPACK Libraries. **CMake Variables**. * :makevar:`BLAS_TYPE` |w---w| CMake variable to specify which BLAS libraries to look for among ``MKL|OPENBLAS|ESSL|ATLAS|ACML|SYSTEM_NATI",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:45035,down,download,45035,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['download']
Availability," A test suite plays a vital role in open-source software use and development. * For a |PSIfour| user, tests provide models of inputs that should work; ""as-is"" and a searchable collection of syntax and capabilities.; The test suite also allows high-quality development snapshots of the; codebase to be built automatically for users. * For a user who has |PSIfour| as part of a complex computational molecular software environment, a test suite alongside installed |PSIfour| can be used to show that the |PSIfour| piece is working. * For a feature developer, adding tests provides confidence that you; can leave your code untouched and still advertise that the feature works; years later. With tests, proposed changes to |PSIfour| that break your; code fall upon the change proposer to fix, rather than being merged; silently and lying in wait for a concientious user to detect and report; and then likely falling upon *you* to fix. * For a general developer, the test suite allows confidence in refactoring, switching out underlying libraries, maintenance, and upgrading. CTest and pytest, PSIthon and PsiAPI; ====================================. In designing a test, sometimes you want it to be a model input for the user in a single file or you don't want a lot of ``psi4.`` or Python syntax cluttering the input.; In this case, follow :ref:`faq:add_psithon_tests` to prepare as PSIthon (``psi4 input.dat``) for, roughly speaking, running through :program:`ctest`.; The PSIthon/CTest test suite occupies the whole of :source:`tests` *except* :source:`tests/pytests`. At other times you want the test to check several variations of a template job or you want to test error handling or you want to focus on PsiAPI rather than PSIthon or you want to control the compute conditions with environment variables.; In this case, follow :ref:`faq:add_psiapi_tests` to prepare as PsiAPI (``import psi4``) for, roughly speaking, running through :program:`pytest`.; The PsiAPI/pytest test suite occupies :sourc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:2161,mainten,maintenance,2161,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['mainten'],['maintenance']
Availability," C -7.122781 1.059754 0.689090; H -7.226173 2.012097 -1.240759; H -6.687348 -2.253224 -1.259958; H -6.707325 -2.266920 1.222105; H -7.246150 1.998400 1.241304; O -6.944245 -0.111984 -2.805375; H -7.058224 0.807436 -3.049180; C -6.990227 -0.143507 2.907714; H -8.018305 -0.274985 3.264065; H -6.592753 0.807024 3.281508; H -6.368443 -0.968607 3.273516; nocom; unit angstrom; }; ; # Create a python dictionary and convert to string for pass through to optking; MTdimer = """"""{; ""Natoms per frag"": [12, 16],; ""A Frag"": 1,; ""A Ref Atoms"": [[1, 3, 4, 6, 8], [8], [11]],; ""A Label"": ""methylthiophene"",; ""B Frag"": 2,; ""B Ref Atoms"": [[13, 14, 15, 16, 17, 18], [13], [15]],; ""B Label"": ""tyrosine"",; ""Frozen"": [""theta_A"", ""theta_B"", ""tau"", ""phi_A"", ""phi_B""],; }""""""; ; set {; basis 6-31+G ; frag_mode MULTI; interfrag_coords $MTdimer ; }. optimize(""mp2""). Dealing with problematic optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Although optking is continuously improved with robustness in mind, some; attempted optimizations will inevitably fail to converge to the desired minima.; For difficult cases, the following suggestions are made. * As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary. * |optking__dynamic_level| allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps. * The developers have found the |optking_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:17939,robust,robustness,17939,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['robust'],['robustness']
Availability," DFT-D2 single point with default parameters (``dftd3`` not called) ::. energy('bp86-d'). * DFT-D3BJ optimization with default parameters ::. optimize('pbe-d3bj'). * DFT-D2 optimization with custom s6 parameter ::. set dft_dispersion_parameters [1.20]; optimize('b3lyp-d2'). * DFT-D3ZERO single point (b3lyp) with custom s8 parameter (reset all four values) ::. set dft_dispersion_parameters [1.0, 2.0, 1.261, 14.0]; energy('b3lyp-d3'). * DFT-D2 single point with ``dftd3`` instead of |PSIfours| libdisp ::. energy('pbe-d2', engine='dftd3'). If only dispersion corrections (rather than total energies) are of; interest, the dispersion programs can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_dftd3` or :py:func:`~qcdb.Molecule.run_dftd4`. (These functions; call QCEngine, which is the same |PSIfour| + ``dftd3``/``dftd4`` interface that is called during an scf job.); This ""D-only"" route is much faster than running a DFT-D energy.; This route is NOT available for ``s-dftd3``. File an issue if a definite need arises. Note that in a DFT+D energy or gradient calculation, user-specified; dispersion parameters override any information provided about the; functional. The same holds true for a ``dftd3`` ""D-only"" calculation. But; in a ``dftd4`` ""D-only"" calculation, functional information overrides; any user-specified dispersion parameters. * Some set-up::. molecule nene {; Ne; Ne 1 2.0; }; ; nene.update_geometry(). * The same four dispersion corrections/gradients as the section above::. >>> print nene.run_dftd3('bp86', 'd', dertype=0); -7.735e-05; ; >>> E, G = nene.run_dftd3('pbe', 'd3bj'); >>> print G; [[0.0, 0.0, -1.1809087569358e-05], [0.0, 0.0, 1.1809087569358e-05]]; ; >>> E, G = nene.run_dftd3('b3lyp', 'd2', {'s6': 1.20}); >>> print E; -8.84e-05; ; >>> E, G = nene.run_dftd3(dashlvl='d3', dashparam={'s8': 2.0, 'alpha6': 14.0, 'sr6': 1.261, 's6': 1.0}); >>> print E; -0.00024762. .. autofunction:: qcdb.Molecule.run_dftd3. .. autofunction",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:24115,avail,available,24115,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability," ENERGY; CUSTOM SCS-LCCD TOTAL ENERGY; CUSTOM SCS-LCCD CORRELATION ENERGY; CUSTOM SCS-OMP2 TOTAL ENERGY; CUSTOM SCS-OMP2 CORRELATION ENERGY; CUSTOM SCS-OMP2.5 TOTAL ENERGY; CUSTOM SCS-OMP2.5 CORRELATION ENERGY; CUSTOM SCS-OMP3 TOTAL ENERGY; CUSTOM SCS-OMP3 CORRELATION ENERGY; CUSTOM SCS-OREMP2 TOTAL ENERGY; CUSTOM SCS-OREMP2 CORRELATION ENERGY; CUSTOM SCS-OLCCD TOTAL ENERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY. Changeable quantities based on options.; The total electronic energy [E_h] and correlation energy component [E_h]; for the method formed by any reweighting of the named :samp:`{method} DOUBLES ENERGY`; for opposite-spin and same-spin contributions, with; any singles carried along.; Contrast with :samp`SCS-{method} TOTAL ENERGY`. .. psivar:: db_name DATABASE MEAN ABSOLUTE DEVIATION. The mean absolute deviation [\ |kcalpermol|\ ] of the requested method; *name* from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{| \textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn} | }. .. psivar:: db_name DATABASE MEAN SIGNED DEVIATION. The mean deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:28949,avail,available,28949,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['avail'],['available']
Availability," EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCac",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13048,error,error,13048,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,1,['error'],['error']
Availability," Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: BrianQC; .. _`sec:brianqc`:. Interface to the BrianQC GPU module by the BrianQC team; =======================================================. .. codeauthor:: Gergely Kis; .. sectionauthor:: Gergely Kis. |PSIfour| contains code to interface to the BrianQC GPU module developed; by the `BrianQC team <https://www.brianqc.com/team>`_, which is available after a license agreement from; `https://brianqc.com/ <https://brianqc.com/>`_. Installing BrianQC; ~~~~~~~~~~~~~~~~~~. Please contact BrianQC at `https://brianqc.com/ <https://brianqc.com/>`_; to download the BrianQC GPU module and obtain a license. Note that there are several prerequisites for using BrianQC, including; having a supported GPU available in the computing node and having the; proper GPU drivers installed. Please refer to the `BrianQC manual <https://www.brianqc.com/download/>`_; for a full list of prerequisites. When installing BrianQC, choose the SDK installation by setting the; :envvar:`BRIANQC_SDK_INSTALL` envoronment variable to `1`. Building BrianQC's user-built components; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. After the installation, build BrianQC's example and sample programs,; which also creates the wrapper library and CMake configuration files; required to build |PSIfour| with BrianQC. 1. Create a build directory to keep the source tree clean. .. code-block:: bash. cd <brianqc_install_path>; mkdir build; cd build. 2. Configure project and generate makefiles with CMake.; You will require `Eigen <http://eigen.tuxfamily.org>`_ (tested with version 3.1.2); and `boost <https://www.boost.org/>`_ (tested with version 1.62). .. code-block:: bash. cmake .. 3. Build the examples and samples. .. code-block:: bash. make. 4. Test the installation by starting a small calculation.; Make sure to set the :envvar:`BRIANQC_INSTALL_PATH` environment variable to `<brianqc_ins",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst:1909,down,download,1909,doc/sphinxman/source/brianqc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst,1,['down'],['download']
Availability," General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: LIBEFP, EFP. .. _`sec:libefp`:. Interface to LIBEFP by I. Kaliman; =================================. .. codeauthor:: Andrew C. Simmonett, A. Eugene DePrince III, Rollin A. King, and Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <psi4/driver/procrouting/solvent/efp.py>`. .. image:: https://img.shields.io/badge/home-libefp-5077AB.svg; :target: https://github.com/libefp2/libefp. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/libefp2/libefp. |PSIfour| contains code to interface to the LIBEFP library developed; in L. Slipchenko's group by I. Kaliman. LIBEFP; requires no additional licence,; downloads, or configuration. Since February 2017, libefp is not required to build; |Psifour|. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libefp/badges/version.svg; :target: https://anaconda.org/psi4/libefp. * libefp is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, libefp has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; libefp can be obtained through ``conda install libefp -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_libefp`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect libefp and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. libefp from conda without thinking, consult. * To remove a conda installation, ``conda remove libefp``. **Sou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:1829,down,downloads,1829,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['down'],['downloads']
Availability," Likewise, vibrational frequencies can be; computed by analytic second derivatives, by finite; differences of analytic gradients, or by finite differences of energies.; |PSIfour| can also compute an extensive list of one-electron properties. For more tables with capabilities details:. * :ref:`Full Capabilities <table:methods>` (first below) lists all methods; * :ref:`Capabilities Breakdown <table:stdsuite>` (second below) lists selected methods by reference, etc.; * :ref:`Module Capabilities <table:managedmethods>` lists selected methods by implementation; * :ref:`Energy <table:energy_gen>`, :ref:`Energy (DFT) <table:energy_dft>`, :ref:`Energy (MRCC) <table:energy_mrcc>`, :ref:`Energy (CFOUR) <table:energy_cfour>` fully list energy target methods; * :ref:`Gradient <table:grad_gen>`, :ref:`Gradient (CFOUR) <table:grad_cfour>` fully list gradient target methods; * :ref:`Frequency <table:freq_gen>` fully lists Hessian target methods. .. _`table:methods`:. .. table:: Summary of theoretical methods available in |PSIfour|. +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | Method [#f10]_ | Reference\ [#f8]_ | Type\ [#f8]_ | Variants\ [#f9]_ |; + + + +------------+------------+------------+------------+; | | | | Canonical | OO | FNO [#f1]_ | DLPNO |; +=========================+===================+===================+============+============+============+============+; | HF | RHF/UHF/ROHF/CUHF | CONV/DF/CD | E/G/H | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DFT | RKS/UKS | CONV/DF/CD | E/G | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DFT-D2, DFT-NL | RKS/UKS | CONV/DF/CD | E/G | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DCT | RHF/UHF | CONV/DF |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:30363,avail,available,30363,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability," MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: BrianQC; .. _`sec:brianqc`:. Interface to the BrianQC GPU module by the BrianQC team; =======================================================. .. codeauthor:: Gergely Kis; .. sectionauthor:: Gergely Kis. |PSIfour| contains code to interface to the BrianQC GPU module developed; by the `BrianQC team <https://www.brianqc.com/team>`_, which is available after a license agreement from; `https://brianqc.com/ <https://brianqc.com/>`_. Installing BrianQC; ~~~~~~~~~~~~~~~~~~. Please contact BrianQC at `https://brianqc.com/ <https://brianqc.com/>`_; to download the BrianQC GPU module and obtain a license. Note that there are several prerequisites for using BrianQC, including; having a supported GPU available in the computing node and having the; proper GPU drivers installed. Please refer to the `BrianQC manual <https://www.brianqc.com/download/>`_; for a full list of prerequisites. When installing BrianQC, choose the SDK installation by setting the; :envvar:`BRIANQC_SDK_INSTALL` envoronment variable to `1`. Building BrianQC's user-built components; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. After the installation, build BrianQC's example and sample programs,; which also creates the wrapper library and CMake configuration files; required to build |PSIfour| with BrianQC. 1. Create a build directory to keep the source tree clean. .. code-block:: bash. cd <brianqc_install_path>; mkdir build; cd build. 2. Configure project and generate makefiles with CMake.; You will require `Eigen <http://eigen.tuxfamily.org>`_ (tested with version 3.1.2); and `boost <https:/",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst:1621,down,download,1621,doc/sphinxman/source/brianqc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst,1,['down'],['download']
Availability," MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. ===================; Obtaining |PSIfour|; ===================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. .. _`faq:obtainpsi4`:. How to obtain Psi4: start with find-the-code quiz, end in ``{top-level-psi4-dir}``; ----------------------------------------------------------------------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. Take a :ref:`quiz <faq:quiz>` to find the best version of the codebase for; your needs, be it binary, tarball, or version-controlled repository. Or,; select outright among:. #. :ref:`faq:binary`; #. :ref:`faq:binarypackage`; #. :ref:`faq:clonepsi4public`; #. :ref:`faq:forkpsi4public` (only path to develop |PSIfour|); #. :ref:`faq:tarballpsi4public`. .. _`faq:quiz`:. Find-the-code Quiz; ------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. * I just want to run the code. I may tweak the Python, but I'm not; developing anything to contribute back to the code base. * Provided I still get good, threaded BLAS/LAPACK, OpenMP parallelism,; and optimization for a variety of processor architectures, I'm willing to forgo; architecture tuning wizardry to avoid compiling it myself. * I'm on Linux or Mac (Intel or Silicon chips) or Windows (native or WSL/Ubuntu Bash Shell). * I'm fami",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst:1618,avail,available,1618,doc/sphinxman/source/build_obtaining.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst,1,['avail'],['available']
Availability," Optimize a geometry using default methods (RFO step)::. optimize('scf'). * Optimize using Newton-Raphson steps instead of RFO steps::. set step_type nr; optimize('scf'). * Optimize using finite differences of energies instead of gradients::. optimize('scf', dertype='energy'). * Optimize while limiting the initial step size to 0.1 au::. set intrafrag_step_limit 0.1; optimize('scf'). * Optimize while always limiting the step size to 0.1 au:. .. code-block:: none. set {; intrafrag_step_limit 0.1; intrafrag_step_limit_min 0.1; intrafrag_step_limit_max 0.1; }. optimize('scf'). * Optimize while calculating the Hessian at every step:. .. code-block:: none. set full_hess_every 1; optimize('scf'). .. code-block:: none; ; import optking; . Hessian; ^^^^^^^. If Cartesian second derivatives are available, optking can read them; and transform them into internal coordinates to make an initial Hessian in; internal coordinates. Otherwise, several empirical Hessians are available,; including those of Schlegel [Schlegel:1984:333]_ and Fischer and Almlof; [Fischer:1992:9770]_.; Either of these or a simple diagonal Hessian may be selected using the ; |optking__intrafrag_hess| keyword. All the common Hessian update schemes are available. For formulas, see; Schlegel [Schlegel:1987:AIMQC]_ and Bofill [Bofill:1994:1]_. The Hessian may be computed during an optimization using the ; |optking__full_hess_every| keyword. .. index:: ; pair: geometry optimization; transition state; pair: geometry optimization; IRC; single: geometry optimization; constrained. Transition States and Reaction Paths; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. * Calculate a starting Hessian and optimize the ""transition state"" of; linear water (note that without a reasonable starting geometry and; Hessian, such a straightforward search often fails)::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 160.0; }. set {; basis dz; full_hess_every 0; opt_type ts; }. optimize('scf'). * At a transition state (planar HOOH), compute the second d",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:5002,avail,available,5002,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['avail'],['available']
Availability," Otherwise, if the solver is almost converged but reaches the maximum number of iterations, try increasing; |scf__solver_maxiter|. .. _`sec:scf-ecps`:. Effective core potentials (ECPs); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| supports the use of effective core potentials to describe the; innermost electrons in heavy elements.; ECPs are only available if |PSIfour| is compiled with the :ref:`LibECPInt <cmake:ecpint>` library.; If a basis set is designed to use an; effective core potential, the ECP definition should be simply placed alongside; the orbital basis set definition, *c.f.* :ref:`sec:basissets-ecps`. All; information related to the definition and number of core electrons will; automatically be detected and no further input is required to use the; ECP-containing basis set. See :srcsample:`scf-ecp` and :srcsample:`dfmp2-ecp`; for examples of computations with ECP-containing basis sets. .. warning:: Prior to May 2022, v1.6, Psi4 used a built-in ECP code. Analytic derivatives of ECPs were not available. The HF and DFT derivatives were implemented in a semi-numerical scheme, where numerical ECP gradients were added to analytic SCF gradients. For post-SCF methods, the entire gradient computation needed to be run as finite difference of energies. .. warning:: As of May 2022, v1.6, Psi4 uses the LibECPInt library, and analytic derivatives and Hessians of ECPs are available. Analytic derivatives of molecular systems including ECPs should be available whenever the method has analytic derivatives, but these have so far only been verified for HF and DFT. .. warning:: ECPs have not been tested with projected basis set guesses or with FI-SAPT calculations. If you require this functionality, please contact the developers on GitHub and/or the `forum <http://forum.psicode.org>`_. .. _`sec:scfqmmm`:. External potentials and QM/MM; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In addition to the implementation of :ref:`EFP <sec:libefp>` for accurate QM/MM; computations, |PSIfour| can perfo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:52874,avail,available,52874,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability," PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, and; :py:func:`~psi4.driver.frequency`) return simply the current total energy.; Consult the descriptions of other functions in :ref:`sec:psithonFunc` for; what quantities they return and for what data structures they make; available for post-processing. Many users need only deal with the simple return; form for the computation functions. ::. # E is total energy float; # G is gradient array; # H is hessian array; # wfn is class instance with many computational details. # simple returns; E = energy(...); E = optimize(...); E = frequency(...); G = gradient(...) # used by optimize(); H = hessian(...) # used by frequency(). For more elaborate post-processing of computations, adding; ``return_wfn=True`` keyword argument additionally returns; :py:class:`~psi4.core.Wavefunction`. ::. # power user returns; E, wfn = energy(..., return_wfn=True); E, wfn = optimize(..., return_wfn=True); E, wfn = frequency(..., return_wfn=True); G, wfn = gradient(..., return_wfn=True) # used by optimize(); H, wfn = hessian(..., return_wfn=True) # used by frequency(). # print gradient array and its rms; wfn.gradient.print_out(); print wfn.gradient().rms(). # format output for o",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:11232,avail,available,11232,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability," Path(psi4.executable).suffix == "".exe"":; command = [psi4.executable, inputdat]; else:; - command = [sys.executable, psi4.executable, inputdat]; - _, output = execute(command, infiles_with_contents, outfiles, environment=env, scratch_messy=False); + command = [sys.executable, psi4.executable, inputdat, ""-n2""]; + _, output = execute(command, infiles_with_contents, outfiles, environment=env, scratch_messy=True). success = output[""proc""].poll() == 0; assert success, output[""stdout""] + output[""stderr""]. * Run a full stdsuite tests to generate new capabilities tables for docs. Detailed instructions are; in :source:`psi4/share/psi4/scripts/merge_stdsuite.py` . Anticipate next release; -----------------------. * Bump version in ``codemeta.json``, :source:`codemeta.json#L9`; * Add to branch list in ``azure-pipelines.yml``, :source:`azure-pipelines.yml`. Build Conda ecosystem stack; ---------------------------. * By ""ecosystem stack"", we mean packages that are upstream, downstream, required, and optional for; a fully featured Psi4 build and which we have some role in packaging.; * These packages (e.g., ``libint``, ``gdma``) should already be updated and built on conda-forge.; Survey them to check version tick and other key PRs have been merged.; * Changes to targets' ""source"" and ""version"" in individual recipes should be edited in psi4; ``external/*/*/CMakeLists.txt`` files; * Edit any added or dropped dependencies in main :source:`CMakeLists.txt` and docs; :source:`doc/sphinxman/source/build_planning.rst` . .. Build Conda ecosystem stack (pre-Spring 2023); .. ---------------------------------------------; ..; .. By ""ecosystem stack"", mean packages that are upstream, downstream, required, and optional for a fully featured Psi4 build and which we can't get from ""defaults"" or ""conda-forge"" channels.; ..; .. * Main directions are in [cbcy](https://github.com/psi4/psi4meta/blob/master/conda-recipes/conda_build_config.yaml) and [poodle](https://github.com/psi4/psi4meta/blob/maste",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:6614,down,downstream,6614,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downstream']
Availability," Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: LibECPInt, ecpint; .. _`sec:ecpint`:. Interface to LibECPInt by R. Shaw; =================================. .. codeauthor:: Andrew C. Simmonett; .. sectionauthor:: Lori A. Burns. .. image:: https://img.shields.io/badge/home-LibECPInt-5077AB.svg; :target: https://github.com/robashaw/libecpint. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://libecpint.readthedocs.io/en/latest/index.html. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libecpint/badges/version.svg; :target: https://anaconda.org/psi4/libecpint. * .. image:: https://anaconda.org/conda-forge/libecpint/badges/version.svg; :target: https://anaconda.org/conda-forge/libecpint. * LibECPInt is available as a conda package for Linux and macOS. * If using the |PSIfour| binary, LibECPInt has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; LibECPInt can be obtained through ``conda install libecpint``.; Then enable it as a feature with :makevar:`ENABLE_ecpint`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect LibECPInt and activate dependent code. * To remove a conda installation, ``conda remove libecpint``. **Source**. * .. image:: https://img.shields.io/github/tag/robashaw/libecpint.svg?maxAge=2592000; :target: https://github.com/robashaw/libecpint. * If using |PSIfour| built from source and you want LibECPInt built from; from source also,; enable it as a feature with :makevar:`ENABLE_ecpint`,; and let the build system fetch and build it and activate dependent code. .. _`cmake:ecpint`:. How to configure LibECPInt for building Psi4; ~~~~~",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ecpint.rst:1814,avail,available,1814,doc/sphinxman/source/ecpint.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ecpint.rst,1,['avail'],['available']
Availability," RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+; | CVS-ADC(2) | RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+; | CVS-ADC(2)-x | RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+; | CVS-ADC(3) | RHF, UHF | yes | yes | any, singlet, triplet |; +---------------+------------+---------------+-------+------------------------------------+. The leftmost column of table :ref:`table:adcsummary` provides the supported ADC methods.; If only excitation energies are desired, one can simply pass one; of the listed method strings to the function :py:func:`~psi4.driver.energy`.; For example, ``energy('adc(2)-x')`` will compute; excitation energies at ADC(2)-x level.; Properties such as oscillator strengths, transition or state dipole moments; are available by calling the function :py:func:`~psi4.driver.properties`; with appropriate arguments.; Most commonly users will want to compute at least oscillator strengths; along with the excitation energies,; resulting in a call like ``properties('adc(2)', properties=[""oscillator_strength""])``. Running ADC calculations; ------------------------; .. sectionauthor:: Michael F. Herbst. Running an ADC calculation with |PSIfour| requires; the call to :py:func:`~psi4.driver.properties` as discussed above; as well as one or more mandatory keyword arguments. The most important keyword argument is |adc__roots_per_irrep|,; which is an array with the number of excited states desired; for each irreducible representation. Most ADC methods; are only supported at C1 symmetry at the moment, such that; this option should in most cases be set to an array with a single; element only. For example one can run an ADC(2) calculation for 10; (singlet) excited states using::. set roots_per_irrep",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:6694,avail,available,6694,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,1,['avail'],['available']
Availability," TARGET simint::simint PROPERTY LOCATION); message(STATUS ""${Cyan}Found simint ${simint_MAXAM}${ColourReset}: ${_loc} (found version ${simint_VERSION}; vectorization ${simint_VECTOR})""); add_library(simint_external INTERFACE) # dummy. if(${CMAKE_INSIST_FIND_PACKAGE_simint}); message(VERBOSE ""Suitable simint located externally as user insists""); endif(). else(); if(${CMAKE_INSIST_FIND_PACKAGE_simint}); message(FATAL_ERROR ""Suitable simint could not be externally located as user insists""); endif(). include(ExternalProject); message(STATUS ""Suitable simint could not be located, ${Magenta}Building simint${ColourReset} instead.""). if (CMAKE_CXX_COMPILER_ID MATCHES Intel); if (NOT (CMAKE_CXX_COMPILER_VERSION VERSION_LESS ""18.0.0"")); message(FATAL_ERROR ""ICPC version 2018 builds an incorrect simint library. Use the conda package or build simint separately with GNU or Intel 2017 compilers.""); endif(); endif(). ExternalProject_Add(simint_external; URL http://www.bennyp.org/research/simint/download/simint-v${SIMINT_VER}.tar.bz2; UPDATE_COMMAND """"; CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}; -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}; -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}; -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}; -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}; -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}; -DBUILD_SHARED_LIBS=${BUILD_SHARED_LIBS}; # OpenMP relevant but always ON and handled by simint; # xHost handled through SIMINT_VECTOR. default sse equiv to XHOST=OFF; -DCMAKE_POSITION_INDEPENDENT_CODE=${BUILD_FPIC}; -DSIMINT_STANDALONE=${ENABLE_GENERIC}; -DENABLE_TESTS=OFF; -DSIMINT_VECTOR=${SIMINT_VECTOR}; -DSIMINT_MAXAM=${MAX_AM_ERI}; -DCMAKE_OSX_DEPLOYMENT_TARGET=${CMAKE_OSX_DEPLOYMENT_TARGET}; -DCMAKE_OSX_SYSROOT=${CMAKE_OSX_SYSROOT}; CMAKE_CACHE_ARGS -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}; -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}; -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}; -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_A",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/simint/CMakeLists.txt:1159,down,download,1159,external/upstream/simint/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/simint/CMakeLists.txt,2,['down'],['download']
Availability," The default behavior for the stability code is to stop after trying to reoptimize the orbitals once; if the instability still exists. For more attempts, set |scf__max_attempts|;; the default value of 1 is recommended. In case the SCF ends up in the same minimum, modification; of |scf__follow_step_scale| is recommended over increasing |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF instabilities can be checked, but not followed. If you want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Algorithm | |scf__reference| | Stability checked | |scf__stability_analysis| | |globals__scf_type| |; +==================+==================+==============================================+===========================+=====================+; | | RHF | Internal, External (:math:`\rightarrow` UHF) |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:48519,avail,available,48519,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability," Therefore care must be taken to ensure that the missing permutations; are correctly accounted for when processing the integrals within the loop. See; the DirectJK code in libfock for an example of using this scheme for a Fock; matrix build. Using bra-ket symmetry; ...................... In cases where there is no batching performed, bra-ket symmetry can be; trivially enforced by ensuring that one of the block indices is greater than or; equal to the other. When batching is used, the situation is trickier; some ket; batches may contain a mixture of integrals that are bra-ket unique and those; that are not. To handle this we must do a coarse check at the top of the loop; to see if *any* integrals in the batch are needed, which is implemented by; asking the integral engine where to start looping in the ket via the call to; ``eri->first_RS_shell_block(PQpair_idx)``. This is followed by a more fine; grained check within the loops to filter individual integrals in the case where; bra and ket have the same angular momentum and there's a possibility of a; handful of integrals coming from the ket that are redundant. Note that the bra; is not batched in any of our engines currently: only the ket is. For this; reason, density fitting integrals should be written as (A0|PQ) rather than; (PQ|A0) where possible, because we want the ket to contain more functions than; the bra for efficient blocking. Instantiating integral objects; .............................. With sieving being introduced in the new integral objects, the cost of their; construction has increased. Although significantly cheaper than computing; integrals themselves, construction of integral objects can be non-negligible,; especially if many threads are used. For example, this pattern can be found in; old versions of the code:. .. code-block:: cpp. std::vector<std::shared_ptr<TwoBodyAOInt>> ints;; ints.push_back(std::shared_ptr<TwoBodyAOInt>(factory->eri()));; for (int thread = 1; thread < num_threads; thread++) {;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:10226,redundant,redundant,10226,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['redundant'],['redundant']
Availability," USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; pair: method alias; adding new. .. _`sec:methodAlias`:. Defining a Method Alias; =======================. .. note:: No recompile of the |PSIfour| program is necessary for changes made to; files in ``$PSIDATADIR`` aka :source:`psi4/share/psi4`, including those described below. .. caution:: As of 1.0, the below, while essentially still correct, is so aged; as to be difficult to follow. Since quantum chemical methods in |PSIfour| are accessed through Python functions, and; most important quantities are available as PSI variables, it is straightforward; to create aliases to commonly run calculations or to define hybrid methods. The; :source:`psi4/driver/aliases.py` file is intended for editing by the user for; this purpose. As an example, the MP2.5 method; (which admittedly is already built in to |PSIfour|); is the average of MP2 and MP3. The latter is; available through the arbitrary order MPn code and returns all lower energies; along with it in PSI variables. The following is basic code that will compute; and return the MP2.5 energy. ::. def run_mp2_5(name, **kwargs):; ; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); ; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; ; print """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); print """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); ; return e_mp25. Compare the above to the method that resides in :source:`psi4/driver/aliases.py`.; The rationale for the changes is indicated in the comments below. ::. def run_mp2_5(name, **kwargs):; lowername = name.lower() # handy variable with name keyword in lowercase; kwargs = kwargs_lower(kwargs) # removes case sensitivity in keyword names; ; # Run detci calculation and collect conventional quantities; energy('mp3', **kwargs); e_scf = psi4.get_variab",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:1935,avail,available,1935,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,1,['avail'],['available']
Availability," ``WRITE``; options to indicate printing to another file. This probably isn't; entirely valid now but should be observed in future. The complement to; ``WRITE`` is ``READ``. ``PRINT``, ``READ``, and ``WRITE`` will usually; be the last words in an option name. * Use ``FOLLOW_ROOT`` for the state to be followed in geometry optimizations. * ``WFN`` (not wavefunction). * You're welcome to use ``WFN`` and ``DERTYPE`` as internal options, but; plan to have these set by the python driver and mark them as ``!expert``; options. Really avoid using ``JOBTYPE``. * You're not welcome to add ``CHARGE`` or ``MULTP`` options. Plan to get; these quantities from the molecule object. Since we frequently use subsets; of systems (with their own charge and multiplicity), this is safer. * Conform. Just grep ``'add' psi4/src/read_options.cc`` to get a list of; all the option names in |PSIfour| and try to match any conventions you; find. * If you have a quantity you'd like to call a cutoff, a threshold, a; tolerance, or a convergence, consider the following guidelines in naming; it. * If its value is typically greater than ~0.001, give it a name with ``CUTOFF``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with larger values (e.g.,; integrals, occupations, eigenvectors), give it a name with ``TOLERANCE``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with smaller values (e.g., energy; changes, residual errors, gradients), give it a name with; ``CONVERGENCE``. * In deciding how to arrange words in an option name, place the context; first (e.g., ``MP2_AMPS_PRINT``, ``TRIPLES_DIIS``). This means ``PRINT``; will generally be at the end of an option name. * Use ``INTS_TOLERANCE`` (not schwarz_cutoff). * ``H`` in an option name is reserved for Hamiltonian (or hydrogen).; Hessian should be ``HESS``. * All option names should be all caps and separated by underscores. * ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:10369,toler,tolerance,10369,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['toler'],['tolerance']
Availability," ``stdout`` as <filename> to redirect; to the screen. Default: when the input filename is ""input.dat"",; then the output filename defaults to ""output.dat"". Otherwise, the; output filename defaults to the the input filename with; "".out"" extension. .. option:: --psiapi-path. Generates a bash command to source correct Python interpreter and path for ``python -c ""import psi4""``. .. option:: --qcschema, --schema. Runs input files as QCSchema. Can either be JSON or MessagePack input. .. option:: -s <name>, --scratch <name>. This overrides the value of :envvar:`PSI_SCRATCH` and provides; a path to the location of scratch files. .. option:: -t <subset>, --test <subset>. Runs pytest tests. If ``pytest-xdist`` installed, parallel with :option:`-n`. .. .. option:: --new-plugin <name>; ..; .. Creates a new directory <name> with files for writing a; .. new plugin. An additional argument specifies a template; .. to use, for example: ``--new-plugin name +mointegrals``.; .. See :ref:`plugins <sec:plugins>` for available templates. .. option:: -v, --verbose. Print the Psithon to Python translation of the input file. .. option:: -V, --version. Print version information. ::. # stable release; >>> psi4 --version; 1.3.2. # development snapshot between 1.3 and 1.4; >>> psi4 --version; 1.4a2.dev525. .. .. option:: -w, --wipe. .. Clean out scratch area. .. _`sec:environmentVariables`:. Environment Variables; =====================. These environment variables will influence |PSIfours| behavior. .. envvar:: CONDA_PREFIX. Set when a conda environment is activated. Note that if |PSIfour| has been; built against any library in CONDA_PREFIX, the path has been baked into the; program, so any available dependencies are liable to been loaded from the environment. .. envvar:: HOST. Set when a conda environment with conda compilers is activated. Used; when compatibly building |PSIfour| from source against conda; dependencies. .. envvar:: MKL_NUM_THREADS. Number of threads to use by operations with Int",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:20062,avail,available,20062,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['avail'],['available']
Availability," and Windows. The Linux package has base ``MAX_AM_ERI=7`` and can run 7z energies; and gradients conventional, 6z energies and gradients density-fitted,; and qz Hessians both conventional and density fitted. The Mac and Windows packages have base ``MAX_AM_ERI=5`` and can run; 5z energies, qz gradients, and tz Hessians, both conventional and; density-fitted. Details about angular momentum settings are available here; :source:`external/upstream/libint2/CMakeLists.txt`; . .. Since February 2019, the |PSIfour| conda package on Linux has been the; .. large AM8. Likewise, this is the package you get upon ::; ..; .. conda install libint -c psi4; ..; .. There is no need for the extra ``am8`` argument previously documented here.; ..; .. On Mac, the Libint conda package itself and the Libint compiled into; .. the |PSIfour| conda package remain AM6.; ..; .. Beware this issue: https://github.com/psi4/psi4/issues/1533. .. _`faq:setuphelp`:. How to see what build configuration options are available; ---------------------------------------------------------. CMake doesn't provide a summary for this (unless you want to try the CMake; GUI, which the developers have never looked at). However, the top half of; the main CMakeLists.txt is a passable summary:. .. literalinclude:: @SFNX_INCLUDE@CMakeLists.txt; :lines: 14-142; :language: none. Note that external projects will have their own sets of build; configuration options. Only the most-common user knobs of those are; mentioned above. .. .. _`faq:setupd`:; .. ###<a name=""setupd""></a> How to set CMake and Preprocessor options through the ``setup`` script; .. ; .. CMake can always be invoked directly to build Psi4 [](see active cmake). But more often you have a working ``setup`` configuration and just need to convey a couple CMake or Preprocessor variables.; .. ; .. * ###### Build with Hint Variable to CMake; .. ; .. ```; .. setup -DGSL_ROOT_DIR=$CONDA/envs/boostenv; .. ```; .. ; .. * ###### Relevant ``setup`` Options:; .. ; .. ```; .. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:19432,avail,available,19432,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability," and its orbital-optimized variant OREMP2; are thus straightforward to implement in a (O)LCCD program by appropriate scaling of residual vector contributions and density matrices. * **OMP2** [Bozkaya:2011:omp2]_ and [Bozkaya:2013:omp2grad]_. * **OMP3** [Bozkaya:2011:omp3]_ , [Bozkaya:2013:omp3]_, and [Bozkaya:2013:omp3grad]_. * **OMP2.5** [Bozkaya:2011:omp3]_. * **OLCCD** [Bozkaya:2013:ocepa]_. * **LCCD** [Bozkaya:2013:ocepa]_. * **OREMP2** [Behnle:2021:OREMP]_, and [Behnle:2022:OREMP]_. Convergence Problems; ~~~~~~~~~~~~~~~~~~~~. For problematic open-shell systems, we recommend to use the ROHF or DFT orbitals as an initial guess for orbital-optimized methods. Both ROHF and ; DFT orbitals may provide better initial guesses than UHF orbitals, hence convergence may be significantly speeded up with ROHF or DFT orbitals. ; In order to use ROHF orbitals, simply ``set reference rohf``. For DFT orbitals, ``set reference uks`` and ``set dft_functional b3lyp``. Of; course users can use any DFT functional available in |PSIfour|. .. _`sec:occ_oo_mtds`:. Methods; ~~~~~~~. The various orbital-optimized methods supported by the OCC/DFOCC; modules in |Psifour| are summarized in Table :ref:`OCC OO; Methods <table:occ_oo_calls>` and detailed in Table :ref:`OCC; OO Capabilities <table:occ_stdsuite_oo>`. Note that while two; separate libraries OCC (conventional integrals ``CONV``) and DFOCC; (density-fitted ``DF`` and Cholesky-decomposed ``CD``) together provide; the methods described on this page, they are controlled through one; |globals__qc_module| value ``OCC``. Without ``set qc_module occ``,; these methods may default to implementations in :ref:`other modules; <table:managedmethods>` based on efficiency considerations. .. _`table:occ_oo_calls`:. .. table:: Orbital-optimized theoretical methods accessible through OCC/DFOCC. +-------------------------+---------------------------------------------------------------+-------+; | name | calls method | OO |; +=========================+=",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst:11384,avail,available,11384,doc/sphinxman/source/occ.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/occ.rst,1,['avail'],['available']
Availability," are only supported at C1 symmetry at the moment, such that; this option should in most cases be set to an array with a single; element only. For example one can run an ADC(2) calculation for 10; (singlet) excited states using::. set roots_per_irrep [10]; properties('adc(2)', properties=[""oscillator_strength""]). where the ``molecule`` section was dropped for brevity. **Selecting the excitation manifold.**; To select between the possible excitation manifolds,; use the |adc__kind| keyword. For restricted references; by default only singlet excited states are computed,; corresponding to the keyword value ``'singlet'``.; To compute triplet states, select ``'triplet'``.; To compute both without making a spin distinction, select ``'any'``.; The latter is default for unrestricted references. The special |adc__kind| value ``'spin_flip'`` selects; a spin-flip computation where a simultaneous flip of spin; and excitation is performed. This is only available; for unrestricted references and not for ``CVS-ADC(n)`` methods,; see table :ref:`table:adcsummary`. **Using the core-valence separation.**; For tackling core-valence excitations using the ``CVS-ADC(n)``; methods, the keyword argument |adc__num_core_orbitals|; is additionally required. It is used to specify the number of; (spatial) orbitals to put into the core space and thus select; as target orbitals for a core-valence excitation process.; A value of ``2`` indicates, for example,; that the two lowest-energy :math:`\alpha` and the two; lowest-energy :math:`\beta` orbitals are placed in the core space.; Since the implemented ADC procedures tackle the; lowest-energy excitations, the value should be specified; such that the targeted core orbital is just inside the core space. *Example:* Consider furane, :math:`C_4H_4O`. In order to tackle; the oxygen 1s edge, *i.e* simulate a O 1s XAS spectrum, one may; just set |adc__num_core_orbitals| to ``1``. This will select the; oxygen 1s orbital for the core space as it is energetical",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:8381,avail,available,8381,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,1,['avail'],['available']
Availability," are printed in the; Cfour output section of the |PSIfour| output file, as shown below. ::. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // Cfour c4-ccsd(t) Energy Results //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. Variable Map:; ----------------------------------------------------------------------------; ""(T) CORRECTION ENERGY"" => -0.007263598030; ""CCSD CORRELATION ENERGY"" => -0.275705492359; ""CCSD TOTAL ENERGY"" => -76.338453952539; ""CCSD(T) CORRELATION ENERGY"" => -0.007263598030; ""CCSD(T) TOTAL ENERGY"" => -76.345717550569; ""CFOUR ERROR CODE"" => 0.000000000000; ""CURRENT CORRELATION ENERGY"" => -0.007263598030; ""CURRENT ENERGY"" => -76.345717550569; ""CURRENT REFERENCE ENERGY"" => -76.062748460180; ""MP2 CORRELATION ENERGY"" => -0.270191667755; ""MP2 OPPOSITE-SPIN ENERGY"" => -0.204890356651; ""MP2 SAME-SPIN ENERGY"" => -0.065301311104; ""MP2 TOTAL ENERGY"" => -76.332940127935; ""NUCLEAR REPULSION ENERGY"" => 9.187331653300; ""SCF TOTAL ENERGY"" => -76.062748460180. The PSI Variables are also available from the input file for manipulation.; For instance, to compute the MBPT 2 3/4 energy from MBPT 3 results, the; following could be used. ::. energy('c4-mp3'); mp2p75_corl = 0.75 * get_variable('mp3 correlation energy') + \; 0.25 * get_variable('MP2 correlation energy'); print mp2p75_corl + get_variable('scf total energy'). .. caution:: Some features are not yet implemented. Buy a developer a coffee. - No PSI Variables for properties: *e.g.*, :psivar:`SCF DIPOLE`. - No PSI Variables for excited state energies. The formation of further regexes for properties, excited states, etc.; is one of the primary areas in which this interface requires further; work. .. rubric:: Gradients and Arrays. In addition to parsing the output stream, results are collected from files; written to the scratch directory. Presently, the ``GRD`` file is parsed; and printed to the output file, as shown below. Also printed is the Cfour; gradient after manipulation by the P4C4 interface and used by |PSIfour|; going f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:23507,avail,available,23507,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability," based on whether PSIthon or PsiAPI suits it better and whether it's a simple model for users (probably PSIthon) or for expert users (probably PsiAPI).; Both will continue to work in future, and neither have limitations. Test Contents; =============. * Most |PSIfour| tests will be integration tests focusing on non-regression of user input to answers, and we insist on having these.; But if you find unit tests helpful, by all means add them to the test suite. * Most tests should store reference results (from literature or another implementation or a carefully run |PSIfour| calculation),; run quantum chemistry, then apply one or more of the :ref:`faq:comparison_functions` so that the test will fail if the answer is unexpected.; The functions are the same in CTest and pytest, but in the former they are, for example, ``compare_matrices(refmat, mat, ...)`` while in the latter it's asserted, like ``assert compare_matrices(refmat, mat, ...)``.; The main advantage of the testing functions is that they provide helpful error printing upon failure. Deep down, they're NumPy functions. * In preparing the test case reference values, aim for the converged value rather than many digits from your computer under default convergence conditions.; This will make the test more robust for different OS, different BLAS libraries, and variations in SCF cycles.; Turn energy, density, amplitude, and geometry convergence criteria to very tight levels, and use these results for reference energies, reference geometries, reference cube files, *etc.*.; Then, either remove or relax the convergence settings, if these are not a vital part of the test.; In choosing the number of digits for :py:func:`~psi4.compare_values` and other compare_* functions, select a number looser than the convergence set in the test; or the default convergence for the calculation type (energy, gradient, *etc.*). * Keep tests as short as possible without sacrificing coverage and variety. Under 30 seconds is a good aim. .. _`faq",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:4967,error,error,4967,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,2,"['error', 'failure']","['error', 'failure']"
Availability," by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94970,error,error,94970,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:70915,error,error,70915,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481212,error,error,481212,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," conda activate p4env. .. _`sec:quickconda`:. Quick Installation; ^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour|. Installs; Miniconda into ``$HOME/miniconda`` and the |PSIfour| executable into the; main conda environment at ``$HOME/miniconda/bin/psi4``. .. code-block:: bash. # Linux or Mac, Py2 or Py3 for main environment (immaterial to Py for Psi4): select between four lines; # Windows: in Ubuntu shell, select either Linux line; >>> curl -o Miniconda-latest.sh ""https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh""; >>> curl -o Miniconda-latest.sh ""https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh""; >>> curl -o Miniconda-latest.sh ""https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh""; >>> curl -o Miniconda-latest.sh ""https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"". .. code-block:: bash. >>> bash; >>> bash Miniconda-latest.sh -b -p $HOME/miniconda # agrees to conda's license terms; >>> echo ""export PATH=$HOME/miniconda/bin:\$PATH"" >> ~/.bashrc # Mac: use ~/.bash_profile; # log out, log back in so conda in path; >>> conda update --yes --all; >>> conda config --add channels http://conda.anaconda.org/psi4; >>> conda install --yes psi4; >>> psi4 ""$(dirname $(which psi4))""/../share/psi4/samples/sapt1/test.in # test installation. works b/c PSI_SCRATCH defaults to /tmp. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. Now you need only specify a scratch directory; (see :ref:`sec:Scratch`) by replacing the placeholder in the following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. .. note:: Above commands use bash for installation and set up your environment for bash at runtime. To use csh at runtime, follow the on-screen directions at the end of the installation or",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:17045,echo,echo,17045,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['echo'],['echo']
Availability," considered expert-only. Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the |scf__dft_basis_tolerance|, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy. Small density values can introduce numerical instabilities with some functionals that; can result in trailing SCF convergence issues or even numerical failures (NaNs).; If the default settings of the LibXC library are insufficient, a custom value can be ; request by setting |scf__dft_density_tolerance|. For notorious cases a value of 1E-10; is sensible. An example of a fully specified grid is as follows::. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_density_tolerance 1.0E-10 # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; dft_pruning_scheme robust # Generally safe and will speed things up; }. energy('b3lyp'). ERI Algorithms; ~~~~~~~~~~~~~~. The",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:26354,toler,tolerance,26354,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['toler'],['tolerance']
Availability," construction. One only needs to worry about the; N-representability of the density cumulant, which is a relatively small part of; :math:`\boldsymbol{\gamma_2}`. In order to obtain the DCT energy, two conditions must be satisfied:. 1) The energy must be stationary with respect to a set of orbitals. This can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currently five DCT methods (functionals) are available: DC-06, DC-12, ODC-06, ODC-12, and ODC-13. The first four ; methods use approximate N-representability conditions derived from ; second-order perturbation theory and differ in the description of the; correlated (non-idempotent) part :math:`\boldsymbol{\tau}` of the one-particle density; matrix and orbital optimization. While in the DC-06 and ODC-06 methods :math:`\boldsymbol{\tau}` is derived from the density cumulant; in an approximate way (labelled by '06'), the DC-12 and ODC-12 methods derive this contribution exactly, and; take full advantage of the N-representability conditions (which is denoted by '12'). The corresponding DC and ODC methods; have similar description of the :",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:5715,avail,available,5715,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability," deepdiff https://github.com/seperman/deepdiff (May 2019; dropped by v1.4). * MPFR https://www.mpfr.org/ (Mar 2022; dropped by v1.6) no longer needed to compile against Libint2. * Perl for testing (April 2022; dropped by v1.6). .. _`faq:addondepend`:. What are the add-on capabilities for Psi4 and what are their dependencies; -------------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want, and examine; the links for appropriate enabling arguments to ``cmake``. Note that many; are available pre-built from conda. * |PSIfour| Testing. * CTest https://cmake.org/download/; * pytest (for installed testing) http://doc.pytest.org/en/latest/; * pytest-xdist (for installed testing many tests at once) https://github.com/pytest-dev/pytest-xdist. * |PSIfour| Documentation (available pre-built at :psicode:`psi4manual/master/index.html`). * Sphinx (3.5+) http://sphinx-doc.org; * Perl (for some auto-documentation scripts) https://www.perl.org/; * nbsphinx (for converting Jupyter notebooks) http://nbsphinx.readthedocs.io/en/jupyter-theme/; * sphinx-psi-theme https://github.com/psi4/sphinx-psi-theme; * See :source:`[""message"" lines] <doc/sphinxman/CMakeLists.txt>` for advice on obtaining docs dependencies or :source:`[conda env spec] <devtools/conda-envs/docs-cf.yaml>`; * See :source:`.github/workflows/docs.yml` for full docs building procedure to follow. * Ambit |w---w| https://github.com/jturney/ambit. * :ref:`CheMPS2 <cmake:chemps2>` |w---w| :ref:`[what is CheMPS2?] <sec:chemps2>` :source:`[CheMPS2 min version] <external/upstream/chemps2/CMakeLists.txt#L2>`. * HDF5 https://support.hdfgroup.org/HDF5/; * zlib http://www.zlib.net/. .. * :ref:`erd <cmake:erd>` |w---w| :ref:`[what is this?] <sec:erd>` `[min version] <https://github.com/psi4/psi4/blob/master/external/upstream/",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:10215,avail,available,10215,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability," defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+---------------------------------------------------------------------------------------------+; | Extension [#f0]_ and Aliases | Variant | Computing Program (engine) | |scf__dft_dispersion_parameters| [#f10]_ |; +=====================================+======================================================================================+=================================+=============================================================================================+; | -D | alias to -D2 | | |; +-------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13629,avail,available,13629,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability," dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:9571,error,error,9571,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," either the Coulomb or the Exchange matrix separately. In general, since; separate Coulomb and Exchange matrix build algorithms exploit properties specific to; their respective matrix, composite algorithms display lower; scaling factors than their combined Fock build counterparts. However, composite algorithms also; introduce redundant ERI computations into the calculation. Therefore, composite Fock build; algorithms tend to perform better for larger systems, but worse for smaller systems. Arbitrary; composite algorithms can be accessed by setting |globals__scf_type| to ``J_alg+K_alg``,; where *J_alg* and *K_alg* are the names of the separate Coulomb; and Exchange construction algorithms to use, respectively. Alternatively, if one is using; DFT with non-hybrid functionals, a composite Coulomb construction algorithm can be; specified solo by setting |globals__scf_type| to ``J_alg``, without the need to set ; an associated ``K_alg``. Specialized algorithms available to construct the Coulomb term within a composite framework ; are as follows:. DFDIRJ; An integral-direct algorithm constructing the Coulomb term based on [Weigend:2002:4285]_; The DFDIRJ algorithm combines the benefits of integral-direct SCF approaches ; with that of density-fitting. Specifically, DFJ utilizes no I/O and displays ; strong performance with large system size through a combination of ; effective parallelization and utilization of density-fitting to minimize ; ERI computational cost. See the :ref:`sec:scfddfj` section for more information. Specialized algorithms available to construct the Exchange term within a composite framework; are as follows:. COSX; An algorithm based on the semi-numerical ""chain of spheres exchange"" (COSX); approach described in [Neese:2009:98]_. The coulomb term is computed with a; direct density-fitting algorithm. The COSX algorithm uses no I/O, scales; well with system size, and requires minimal memory, making it ideal for; large systems and multi-core CPUs. See :ref:`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:31239,avail,available,31239,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability," eri->first_RS_shell_block(blockPQ_idx);; for (int blockRS_idx = loop_start; blockRS_idx < blocksRS.size(); ++blockRS_idx) {; const auto& blockRS = blocksRS[blockRS_idx];. if (!eri->shell_block_significant(blockPQ_idx, blockRS_idx)) continue;. eri->compute_shell_blocks(blockPQ_idx, blockRS_idx);; const auto* block_start = buffers[0];. // Loop over all of the P,Q,R,S shells within the blocks. We have P>=Q, R>=S and PQ<=RS.; for (const auto& pairPQ : blockPQ) {; const auto &P = pairPQ.first;; const auto &Q = pairPQ.second;; const auto& Pshell = basisset->shell(P);; const auto& Qshell = basisset->shell(Q);; const auto Pam = Pshell.am();; const auto Qam = Qshell.am();; for (const auto& pairRS : blockRS) {; const auto &R = pairRS.first;; const auto &S = pairRS.second;; const auto& Rshell = basisset->shell(R);; const auto& Sshell = basisset->shell(S);; const auto Ram = Rshell.am();; const auto Sam = Sshell.am();. size_t block_size = Psize * Qsize * Rsize * Ssize;; // When there are chunks of shellpairs in RS, we need to make sure; // we filter out redundant combinations.; if (use_batching && Pam == Ram && Qam == Sam && ((P > R) || (P == R && Q > S))) {; block_start += block_size;; continue;; }; const double* int_ptr = block_start;; // Query P,Q,R,S shells for metadata and loop over that quartet; // as usual, getting the integrals from the int_ptr buffer.; block_start += block_size;; }; }; }; }. Although this looks more complex, it's essentially doing the same thing. There; are a number of differences that we'll highlight now. Sieving; ....... This is one of two breaking changes to the old style syntax. Instead of; constructing a sieve object, the integral object should be queried directly; using the exact same syntax. Requests for whether a shell is significant or a; shell block is significant are both supported. A sieve object is created if; matching basis sets are found in either the bra or the ket. For a density; fitting integral (PQ|0A) where 0 is the null basis set an",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:5138,redundant,redundant,5138,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['redundant'],['redundant']
Availability," final pass before release tag`_; * `Tag (pre)release`_; * `Initialize release branch`_; * `Build extra Conda packages for Psi4 channel`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub release`_; * `Publish psicode.org release`_; * `Finalize release`_. .. _`faq:postreleaseprocedure`:. Post-Release (e.g., ``v1.8.2``); -------------------------------. * `Assemble postrelease changes`_; * `Tweak Conda for postrelease`_; * `Tag postrelease`_; * `Build Psi4conda set`_; * `Build extra Conda packages for Psi4 channel`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub postrelease`_; * `Publish psicode.org release`_; * `Finalize release`_. On January first; ----------------. * Screenshot https://anaconda.org/psi4/psi4 .; * Screenshot https://anaconda.org/conda-forge/psi4 .; * Add new year title and images to website; https://github.com/psi4/psicode-hugo-website/edit/master/content/posts/downloads.md .; * On the next day, check that the new year's plot appears at https://psicode.netlify.app/posts/downloads/ . Update copyright year; ---------------------. * ``cd ~/path/to/psi4``; * Primary target is licenses. - ``grep -rl ""(c) 2007-2017"" * | xargs sed -i '' ""s/(c) 2007-2017/(c) 2007-2018/g""``; - On Linux, drop the ``''`` in above command; - Need to do ``psi4/`` and ``docs/`` dirs. * Also, license in these files. - ``tests/runtest.py``; - ``README.md``. * Also, in content of :source:`doc/sphinxman/source/conf.py.in#L130`. Update counter scripts; ----------------------. * Log onto vergil as cdsgroup.; * Add new years, Python versions, and Psi4 versions as needed.; * check vergil /home/cdsgroup/psi4meta/download-analysis/installer: vi downloads_updater.py any new patterns to add?; * check vergil if changing any download patterns. Update samples; --------------. * Run ``make sphinxman`` at least once by hand; * Check in resulting ``psifiles.py`` and a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:2895,down,downloads,2895,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downloads']
Availability," focusing on non-regression of user input to answers, and we insist on having these.; But if you find unit tests helpful, by all means add them to the test suite. * Most tests should store reference results (from literature or another implementation or a carefully run |PSIfour| calculation),; run quantum chemistry, then apply one or more of the :ref:`faq:comparison_functions` so that the test will fail if the answer is unexpected.; The functions are the same in CTest and pytest, but in the former they are, for example, ``compare_matrices(refmat, mat, ...)`` while in the latter it's asserted, like ``assert compare_matrices(refmat, mat, ...)``.; The main advantage of the testing functions is that they provide helpful error printing upon failure. Deep down, they're NumPy functions. * In preparing the test case reference values, aim for the converged value rather than many digits from your computer under default convergence conditions.; This will make the test more robust for different OS, different BLAS libraries, and variations in SCF cycles.; Turn energy, density, amplitude, and geometry convergence criteria to very tight levels, and use these results for reference energies, reference geometries, reference cube files, *etc.*.; Then, either remove or relax the convergence settings, if these are not a vital part of the test.; In choosing the number of digits for :py:func:`~psi4.compare_values` and other compare_* functions, select a number looser than the convergence set in the test; or the default convergence for the calculation type (energy, gradient, *etc.*). * Keep tests as short as possible without sacrificing coverage and variety. Under 30 seconds is a good aim. .. _`faq:add_psithon_tests`:. Adding PSIthon Test Cases; =========================. To create a new test case, first make a folder in :source:`tests` or, for an addon, a subfolder under the addon folder.; Use hyphens, not spaces or underscores, in the directory name.; Add the directory name to the list of ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:5218,robust,robust,5218,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['robust'],['robust']
Availability," from an external source and; then performs some kind of expensive matrix operation on those data. Because; Python has a rich set of tools for obtaining data from external sources,; writing this tool in the Python layer is a natural choice. If we know that the; matrix will always be small enough to fit in memory, we can simply rely on the; routines present in NumPy to do the heavy lifting and the code is easy to; implement entirely in the Python layer. In the case where the matrix operation; is non-standard and requires some specialized code to handle disk-based; storage, the decision to write in Python is less clear cut. It is certainly; possible to write these out-of-core routines using Numpy primitives, but there; are a number of tools in |PSIfour| already to perform tasks like these that are; required, *e.g.*, for cluster. In this case, a good design would be to write a; simple piece of code in the C++ layer that performs the matrix operation on a; given input, using the I/O routines available in |PSIfour| and the parallelism; afforded by OpenMP, and to make that code available to the front end as; described in :ref:`sec:prog_tour-exposing`. The Python layer could then be; responsible for obtaining the input data and calling this C++ code to do the; manipulations, allowing each language layer to handle the subset of the work; that caters to their individual strengths. A number of concrete examples of this workflow exist in the code already. For; finite difference computations of energy derivatives, the logic to determine; the type of stencil and which displacements are needed is not going to be rate; limiting for any reasonable quantum mechanical energy function. Therefore,; doing that work in the Python layer is a good idea, as it allows the many; Python tools for farming out *embarrassingly parallel* workloads to be used,; while the C++ layer can be used to implement the energy function to be; differentiated. In SCF, we have a number of sources of external embe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:6358,avail,available,6358,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,2,['avail'],['available']
Availability," happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode and has something to do with the exponent boost chooses for; .. the default zero tolerance. Anyways, commenting out lines 47 to 49, for valgrind purposes, should; .. allow you to run valgrind. The consequence of commenting out these lines are you get no integeral; .. screening, so make sure you uncomment them when you actually run. .. _`faq:cmakeverbose`:. How to see the actual compiling commands (or errors) with ``cmake``; -------------------------------------------------------------------. CMake by default hides a lot of useful debugging information to make the; compilation cleaner. Issue ``make VERBOSE=1`` to display the full; compilation commands and errors. .. _`faq:vigitmerge`:. How to highlight git merge conflicts in ``vi``; ----------------------------------------------. Edit your ``~/.vimrc`` file to include the lines below. Hitting the ``F7``; key will toggle highlighting of git's conflict markers. .. code-block:: bash. >>> cat ~/.vimrc; set hlsearch; map <F7> :/\(<<<<<<<\\|=======\\|>>>>>>>\)<CR>. .. _`faq:libmwcondapy`:. How to handle ""runtime libra",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:56470,toler,tolerance,56470,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['toler'],['tolerance']
Availability," heavy lifting in |PSIfour| is handled by libmints, which can be; found in the :source:`psi4/src/psi4/libmints` directory. New types of one- and; two-electron integral operators should be added here. The Wavefunction class; :source:`psi4/src/psi4/libmints/wavefunction.h` is also found here and is a key; part of the infrastructure. Every energy calculation is performed by a class; that derives from Wavefunction and is accessible as a return value in the; Python layer. The Wavefunction class contains all pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods; ----------------------. A new method that is not a modification of existing code belongs in its own; folder in :source:`psi4/src/psi4`; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to :source:`psi4/src/psi4/CMakeLists.txt`. There are also a number of; variables that can be exported to be available to the user, as detailed in; :ref:`sec:psiVariables`. To set these variables, the following member of; Wavefunction should be called::. set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; :source:`doc/sphinxman/source/glossary_psivariables.rst`. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies; -------------------------------. The general philosophy in |PSIfour| is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF in terms of generalized; Fock-like matrices. From here, a single class can be used to construct these; generalized Fock matrices, which is what libFock; (:source:`psi4/src/psi4/libfock`) accomplishes. A number of integral; te",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst:2324,avail,available,2324,doc/sphinxman/source/prog_tour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst,1,['avail'],['available']
Availability," irrep.; The file ``Psi_a_5_1-B1.cube`` begins with two comment lines::. Psi4 Gaussian Cube File.; Property: Psi_a_5_1-B1. Isocontour range for 85% of the density: (0.0787495,-0.0787495). The second line reports the isocontour values that capture 85% of the probability density using; the least amount of grid points. This quantity is determined for orbitals and densities. The; fraction of the density captured by the isocontour values is by default 0.85, but can; be changed via the option |globals__cubeprop_isocontour_threshold|. .. note:: If your cube plots are too coarse, try to decrease the grid spacing via; the option |globals__cubic_grid_spacing|. If the edges of your plot are cut then; increase the size of the grid via the option |globals__cubic_grid_overage|. Cubeprop Tasks; --------------. The cubeprop utility can be provided a list of tasks to perform.; Tasks are specified by the |globals__cubeprop_tasks| option, which is a list of strings; that identify the tasks. Several tasks are available. These include:. ORBITALS [Default if |globals__cubeprop_tasks| is not specified]; Produces cube representations of the molecular orbitals; :math:`\psi_q(\mathbf{r})`. Orbitals are sorted according to increasing; orbital energy ignoring symmetry.; FRONTIER_ORBITALS; Produces cube representations of the frontier molecular orbitals. For closed shell; species, the highest occupied (HOMO) and the lowest unoccupied (LUMO) alpha orbitals (ie. ; :math:`\psi_{\alpha}(\mathbf{r})`) are printed, while for open shell species a total ; of :math:`(4 + M_s)` orbitals are printed (:math:`\alpha` and :math:`\beta` ; spin for both lowest virtual (LVMO) and highest doubly occupied; orbitals (DOMO), along with all :math:`\alpha` singly occupied (SOMO) orbitals).; DENSITY; This task can be used to obtain the alpha and beta electron densities,; :math:`\rho_\alpha(\mathbf{r})` and :math:`\rho_\beta(\mathbf{r})`, together; with the total density; :math:`\rho(\mathbf{r}) = \rho_\alpha(\mathbf{r}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst:4070,avail,available,4070,doc/sphinxman/source/cubeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst,1,['avail'],['available']
Availability," job.in``), https://psicode.org/psi4manual/master/psiapi.html for PsiAPI (``python job.py``). * **Forum** http://forum.psicode.org. * **Communication & Support** https://psicode.org/psi4manual/master/introduction.html#technical-support. * **GitHub** https://github.com/psi4/psi4 (authoritative repository). * **Continuous Integration Status** [![Azure DevOps builds](https://img.shields.io/azure-devops/build/psi4/e80489d7-9619-4512-8e7b-255e355b3ab8/1/master.svg?logo=azure%20devops)](https://dev.azure.com/psi4/psi4/_build?definitionId=1) on Linux and Windows. * **Anaconda** https://anaconda.org/psi4 (binary available for Linux, Mac, Mac Silicon, Windows, and WSL Windows [![Binstar Badge](https://anaconda.org/psi4/psi4/badges/downloads.svg)](https://anaconda.org/psi4/psi4) ) [![Binstar Badge](https://anaconda.org/conda-forge/psi4/badges/downloads.svg)](https://anaconda.org/conda-forge/psi4) ) [instructions](https://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-download-site). * **Coverage** Python and C++ source code lines hit by running most of the test suite. [![codecov](https://img.shields.io/codecov/c/github/psi4/psi4.svg?logo=Codecov&logoColor=white)](https://codecov.io/gh/psi4/psi4). * **Interested Developers** https://psicode.org/developers.php (replacement page needed) (welcome to fork psi4/psi4 and follow [GitHub contribution procedure](https://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow)) [![PRs welcome](https://img.shields.io/badge/PRs-welcome-yellow.svg)](http://makeapullrequest.com). * **Sample Inputs** http://www.psicode.org/psi4manual/master/testsuite.html (also in [`samples/`](samples)). * **Download Tarball** https://github.com/psi4/psi4/releases . <!--* **Build Dashboard** https://testboard.org/cdash/index.php?project=Psi. * **YouTube Channel** https://www.youtube.com/psitutorials-->. License [![license](https://img.shields.io/github/license/psi4/psi4.svg)](https://opensourc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:5624,down,download-site,5624,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,1,['down'],['download-site']
Availability," load up any EFP portion of that; molecule. This divergent treatment is a stopgap while we determine; how best to handle molecules with different domains. At this time, |PSIfour| is only able to perform pure-efp single-points and; geometry optimizations and mixed qm/efp SCF single-points. .. _`table:libefpauto`:. .. _`table:libefp_methods`:. +-------------------------+----------------------+--------------------------------------------------------------------------+; | name | molecule composition | calls method |; +=========================+======================+==========================================================================+; | efp | pure EFP | EFP interaction energy (IE) on all frags |; + +----------------------+--------------------------------------------------------------------------+; | efp | mixed QM/EFP | EFP IE on EFP frags only |; + +----------------------+--------------------------------------------------------------------------+; | efp | pure QM | *error* |; +-------------------------+----------------------+--------------------------------------------------------------------------+; | scf | pure EFP | *error* |; + +----------------------+--------------------------------------------------------------------------+; | scf | mixed QM/EFP | SCF energy on QM frags w/coupling to EFP frags, plus EFP IE on EFP frags | ; + +----------------------+--------------------------------------------------------------------------+; | scf | pure QM | SCF energy on all frags (normal |Psifour| operation) |; +-------------------------+----------------------+--------------------------------------------------------------------------+. .. index:: EFP; library fragments. .. _`sec:availableEFPFragments`:. Fragment Library; ~~~~~~~~~~~~~~~~. Below are documented the EFP fragments available from the LIBEFP library.; These systems are accessible in ``molecule {...}`` blocks without; additional configuration. ----. .. comment This toctree directive only here to suppress warning",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:10455,error,error,10455,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,2,['error'],['error']
Availability," macroiterations.; Each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and orbitals is achieved.; Convergence of the simultaneous algorithm is accelerated using the; DIIS extrapolation technique. TWOSTEP; In the two-step algorithm each macroiteration consists of two sets of; microiterations. In the first set, the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. As in the simultaneous algorithm, the DIIS; extrapolation is used to accelerate convergence. Two-step algorithm is; only available for the DC-06 and DC-12 methods. QC; In the quadratically-convergent algorithm, the; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. By default, the electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. Setting the |dct__qc_type|; option to ``TWOSTEP`` will perform the Newton-Raphson update only for the orbitals,; while the equations for the cumulant will be solved using a standard Jacobi update.; If requested by the user (set |dct__qc_coupling| to TRUE), the electronic Hessian can include; matrix element",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:10634,avail,available,10634,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability," memory to 2 MB; set_memory_bytes(2000000). Please note that this memory setting only governs the maximal memory; usage of the major data structures, and actual total memory usage; is slightly higher. This is usually a negligible amount, except when; setting tiny memory allowances. One convenient way to override the |PSIfour| default memory is to place a; memory command in the |psirc| file (Sec. :ref:`sec:psirc`). For example,; the following makes the default memory 2 GB. ::. set_memory(2000000000). However, unless you're assured of having only one job running on a node at; a time (and all nodes on the filesystem with |psirc| have similar memory; capacities), it is advised to set memory in the input file on a; per-calculation basis. That same command can be used for PsiAPI mode::. psi4.set_memory(int(5e8)). .. tabs::. .. code-tab:: bash PSIthon. set_memory(2000000000). .. code-tab:: py PsiAPI. psi4.set_memory(int(5e8)). .. note:: For parallel jobs, the ``memory`` keyword represents the total memory; available to the job, *not* the memory per thread. Molecule and Geometry Specification; ===================================. .. toctree::; :maxdepth: 2. psithonmol. .. comment To add EFP fragments to a molecule, see :ref:`sec:usingEFPFragments`. To add EFP fragments to a molecule, see :ref:`sec:usingEFPFragments`. .. index::; triple: setting; keywords; general; .. _`sec:jobControl`:. Job Control Keywords; ====================. |PSIfour| comprises a number of C++ modules that each perform; specific tasks and are callable directly from the Python front end. Each module; recognizes specific keywords in the input file which control its function.; These keywords are detailed in Appendix :ref:`apdx:options_c_module`.; The keywords can be made global, or scoped to apply to; certain specific modules. The following examples demonstrate some of the ways; that global keywords can be specified::. # all equivalent. set globals basis cc-pVDZ. set basis cc-pVDZ. set globals basis = cc-p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:5320,avail,available,5320,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability," no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:69289,error,error,69289,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," nuclear and electronic electrostatic potentials and; polarization charges. It is mainly useful for debugging. For the calculation of vertical excitation energies with PCM non-equilibrium solvation should be included with: ::. pcm = {; Medium {; Nonequilibrium = True; }; }. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The PCMSolver library **cannot** exploit molecular point group symmetry. .. warning:: ROHF with PCM is known **not to work**. See `issue #999 on GitHub <https://github.com/psi4/psi4/issues/999>`_.; For the adventurous, a fix is available in `pull request #953 on GitHub <https://github.com/psi4/psi4/pull/953>`_. .. warning:: Analytic gradients and Hessians **are not** available with PCM. Finite differences will be used; regardless of the ``dertype`` passed to the ``optimize`` function.; See :srcsample:`pcmsolver/opt-fd` for a sample input. The PCM model and molecular cavity are specified in a ``pcm`` section that has; to be explicitly typed in by the user. This additional section follows a syntax; that is slightly different from that of |Psifour| and is fully documented; `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PCM would look like the following: ::. molecule NH3 {; symmetry c1; N -0.0000000001 -0.1040380466 0.0000000000; H -0.9015844116 0.4818470201 -1.5615900098; H -0.9015844116 0.4818470201 1.5615900098; H 1.8031688251 0.4818470204 0.0000000000; units bohr; no_reorient; no_com; }. set {; basis STO-3G; scf_type pk; pcm true; pcm_scf_type total; }. pcm = {; Units = Angstrom; Medium {; SolverType = IEFPCM; Solvent = Water; }. Cavity {; RadiiSet = UFF; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:5153,avail,available,5153,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['avail'],['available']
Availability," of the gradient to be less than one before the; method is valid. To this end, pre-SOSCF SCF iterations use normal; gradient-based extrapolation procedures (*e.g.*, DIIS) until the gradient; conditions are met. Note that while the total number of macroiterations will be; less for SOSCF than gradient-based convergence acceleration, the cost of solving; the microiterations typically results in the overall cost being greater for; SOSCF than for gradient-based methods. Therefore, SOSCF should only be used if; it is difficult to locate a stable minimum. SOSCF is available for all HF and DFT references with the exception of meta-; GGA functionals. To enable, set the option |scf__soscf| to ``true``.; Additional options to modify the number of microiterations taken are as; follows:. |scf__soscf_start_convergence|: when to start SOSCF based on the current density RMS. |scf__soscf_max_iter|: the maximum number of SOSCF microiterations per macroiteration. |scf__soscf_conv|: the relative convergence tolerance of the SOSCF microiterations. |scf__soscf_print|: option to print the microiterations or not. .. _`sec:scfstability_doc`:. Stability Analysis; ~~~~~~~~~~~~~~~~~~. SCF algorithms attempt to minimize the gradient of the energy with respect; to orbital variation parameters. At convergence, the gradient should be approximately zero; given a convergence criterion. Although this is enough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the electronic Hessian, *i.e.* the matrix of second; derivatives of the energy with respect to orbital variation parameters, must be computed.; If one or more eigenvalues of the electronic Hessian are negative, the SCF solution is not a minimum.; In that case, orbital parameters can be varied along the lowest Hessian eigenvector to lower the energy. Orbital variation parameters are usually constrain",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:44968,toler,tolerance,44968,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['toler'],['tolerance']
Availability," of using the TDSCF functionality is as follows::. molecule {; 0 1; O 0.000000 0.695000 -0.092486; O -0.000000 -0.695000 -0.092486; H -0.388142 0.895249 0.739888; H 0.388142 -0.895249 0.739888; symmetry c1; }. set {; tdscf_states 10; }. energy('td-scf/cc-pvdz'). This will seek to converge 10 singlet roots from a restricted Hartree--Fock reference. The roots are obtained with an iterative eigensolver and the following is the printout from the calculation::. ---------------------------------------------------------; TDSCF excitation energies; by Andrew M. James and Daniel G. A. Smith; ---------------------------------------------------------. ==> Options <==. Residual threshold : 1.0000e-04; Initial guess : denominators; Reference : RHF; Solver type : RPA (Hamiltonian). ==> Requested Excitations <==. 10 singlet states with A symmetry. ==> Seeking the lowest 10 singlet states with A symmetry. Generalized Hamiltonian Solver; By Andrew M. James. ==> Options <==. Max number of iterations = 60; Eigenvector tolerance = 1.0000e-04; Max number of expansion vectors = 2000. => Iterations <=; Max[D[value]] Max[|R|] # vectors; HamiltonianSolver iter 1: 5.64572e-01 3.65441e-01 40; HamiltonianSolver iter 2: 1.70649e-02 4.40807e-02 60; HamiltonianSolver iter 3: 2.42552e-04 6.95387e-03 80; HamiltonianSolver iter 4: 2.34146e-06 7.75689e-04 100; HamiltonianSolver iter 5: 1.75483e-08 6.17293e-05 120 Converged. When convergence is reached, |PSIfour| will output a report of excitation energies, oscillator strengths, and rotatory strenghts in atomic units::. Excitation Energy Total Energy Oscillator Strength Rotatory Strength; # Sym: GS->ES (Trans) au eV au au (length) au (velocity) au (length) au (velocity); ---- -------------------- --------------- --------------- --------------- --------------- --------------- --------------- ---------------; 1 A->A (1 A) 0.26945 7.33199 -150.50964 0.0017 0.0082 -0.0019 -0.0135; 2 A->A (1 A) 0.31534 8.58073 -150.46375 0.0000 0.0002 -0.0007 -0.0096; 3 A-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst:2875,toler,tolerance,2875,doc/sphinxman/source/tdscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst,1,['toler'],['tolerance']
Availability," open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482022,error,error,482022,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability," or after small geometry; changes. At present, casting from a different molecular point; group is not supported. This becomes the default for the second; and later iterations of geometry optimizations.; SAP; Superposition of Atomic Potentials. This is essentially a; modification of the core Hamiltonian, which includes screening; effects by using a radially screened effective atomic charge. The; screening effects have been calculated at the complete basis set; limit with finite-element calculations, see [Lehtola:2019:25945]_; and [Lehtola:2020:012516]_. The guess and its implementation have; been described in [Lehtola:2019:1593]_. The guess is evaluated on a; DFT quadrature grid, so the guess energy depends slightly on the; used DFT quadrature. The current implementation is based on; exchange-only local density calculations that are but nanohartree; away from the complete basis set limit [Lehtola:2020:012516]_.; SAPGAU; Superposition of Atomic Potentials, but using error function based; fits to the atomic radial potentials as discussed in; [Lehtola:2020:144105]_. The main difference to the SAP guess; discussed above [Lehtola:2019:25945]_ is that the SAPGAU scheme is; analytic, and can be efficiently formed in terms of three-center; two-electron integrals [Lehtola:2020:144105]_. The potential in; the SAPGAU scheme is passed with the |scf__sapgau_basis|; keyword. The default potential is given by the large fit to the; HelFEM potential, sap_helfem_large, described in; [Lehtola:2020:144105]_. Note that this guess is known in the DIRAC; program as .SCRPOT and in the ERKALE program as SAPFIT. These are all set by the |scf__guess| keyword. Also, an automatic Python; procedure has been developed for converging the SCF in a small basis, and then; casting up to the true basis. This can be done by adding; |scf__basis_guess| = SMALL_BASIS to the options list. We recommend the; 3-21G or pcseg-0 basis for the small basis due to its efficient mix of flexibility and; compactness. An ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:21269,error,error,21269,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['error']
Availability," order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. *This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to*; :ref:`Kallay's MRCC <sec:mrcc>` *code.*. The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216]_, or of Olsen [Olsen:2000:7140]_.; Notably, the approach in DETCI also allows arbitrary-order ; *active space* coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by K\ |a_acute|\ llay, to which |PSIfour| can interface (see Section; :ref:`sec:mrcc`); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for testing of, for example, CCSDTQ or; its active-space CCSDtq analog [Piecuch:1999:6103]_. To perform arbitrary-order coupled-cluster, set the DETCI; option |detci__cc| to TRUE, and set; |detci__cc_ex_level| (note: not |detci__ex_level|); to the desired coupled-cluster excitation level, and invoke ; ``energy('detci')``. Various other DETCI options have a similar; option for coupled-cluster, usually named beginning with CC. The full; list of options is given in Appendix :ref:`apdx:detci`.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:15045,avail,available,15045,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['avail'],['available']
Availability," psi4.core.Matrix.from_array(mat); >>> new_vec = psi4.core.Vector.from_array(vec). NumPy Views; ~~~~~~~~~~~. Copying the data between NumPy and Psi4 objects can lead to excessive data; movement and convoluted code. Here we introduce the idea of ""Views"" where the; same data can be viewed by multiple objects. However, this can lead to very; subtle errors if used incorrectly and care needs to be taken when using these; views. Views can be created in two ways::. >>> numpy_mat_view = np.asarray(mat). # Access the NumPy object and set all values to 1 through broadcasting; >>> numpy_mat_view[:] = 1; ; >>> print(np.array(mat)); [[ 1. 1. 1.]; [ 1. 1. 1.]; [ 1. 1. 1.]]. Secondly, these objects have a ``.np`` attribute for easy access to the underlying data::. >>> mat.np[:] = 1. this operation is identical to the above. |PSIfour| Data Objects with Irreps; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| data objects natively support multiple :ref:`irreducible representations; <sec:symmetry>`; which is quite useful for Quantum Chemistry. However, this is not fundamental; to NumPy and some work around are required to natively support these; operations. Take the following irreped Matrix::. >>> dim = psi4.core.Dimension.from_list([1, 2, 3]); >>> irreped_mat = psi4.core.Matrix(""New Matrix"", dim, dim). # Create a list of Psi4 arrays; >>> list_of_arrays = irreped_mat.to_array(). # Or, use the .nph irreped accessor; >>> irreped_mat.nph[0][:] = 1. Where ``.nph`` is the irreped accessor form. If ``.np`` or ``np.array`` are; called on irreped Matrices or Vectors an error will be thrown; however, the; irreped form is always valid for non-irreped matrices. Array to Matrix; ~~~~~~~~~~~~~~~; A general function that converts |PSIfour| data objects to NumPy arrays. .. autofunction:: psi4.driver.p4util.numpy_helper.array_to_matrix. Matrix to Array; ~~~~~~~~~~~~~~~; A general function that converts NumPy arrays to |PSIfour| data objects. .. autofunction:: psi4.driver.p4util.numpy_helper._to_array. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/numpy.rst:3770,error,error,3770,doc/sphinxman/source/numpy.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/numpy.rst,1,['error'],['error']
Availability," received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: Libint, integrals. .. _`sec:libint`:. Interface to Libint by E. Valeev; ================================. .. codeauthor:: Edward F. Valeev and Justin T. Fermann; .. sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <src/lib/libefp_solver>`. .. image:: https://img.shields.io/badge/home-libint-5077AB.svg; :target: https://github.com/evaleev/libint. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://evaleev.github.io/libint/. |PSIfour|, particularly libmints utterly relies upon the Libint library; developed by E. Valeev from early roots by J. Fermann. Libint requires no; additional licence, downloads, or configuration. Conversely, |Psifour|; cannot build *without* Libint. .. note:: As of Nov 2020 or release v1.4, |PSIfour| uses Libint2, not Libint1.; Compared to many other open-source QC codes, |PSIfour| requires a separate; Libint compilation with a different integrals ordering. See notes at top of; :source:`external/upstream/libint2/CMakeLists.txt` . Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libint2/badges/version.svg; :target: https://anaconda.org/psi4/libint2. * Libint is available as a conda package for Linux and macOS and Windows. * If using the |PSIfour| binary, Libint has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; Libint can be obtained through ``conda install libint2 -c psi4``.; Then, hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect Libint and activate depende",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libint.rst:1795,down,downloads,1795,doc/sphinxman/source/libint.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libint.rst,1,['down'],['downloads']
Availability," references <https://ddsolvation.github.io/ddX/label_references.html>`_; see the ddx documentation. The usage of ddx-based solvation models is enabled; by specifying |globals__ddx| ``true`` in your input file.; The solvation model itself is selected using the |ddx__ddx_model| parameter.; Additionally the definition of the solvent and solute cavity is required; and further parameters allow to influence details of discretisation,; numerical integration and iterative solvers,; see the next sections for details. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: Currently the ddx interface **cannot** exploit molecular point group symmetry. .. warning:: Analytic gradients and Hessians are currently **not available**; with dd-based solvation models. A minimal input for a Hartree--Fock calculation with dd-based PCM would look like; the following: ::. import psi4; nh3 = psi4.geometry(""""""; N -0.0000000001 -0.1040380466 0.0000000000; H -0.9015844116 0.4818470201 -1.5615900098; H -0.9015844116 0.4818470201 1.5615900098; H 1.8031688251 0.4818470204 0.0000000000; symmetry c1; no_reorient; no_com; units bohr; """"""). psi4.set_options({; ""basis"": ""sto-3g"",; ""scf_type"": ""pk"",; ""ddx"": True,; ""ddx_model"": ""pcm"",; ""ddx_solvent"": ""water"",; ""ddx_radii_set"": ""uff"",; }). scf_e = psi4.energy('SCF'). Solvent model and solvent cavity definition; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Beyond setting |globals__ddx| to ``true`` and selecting; a solvent model using |ddx__ddx_model|,; the definition of the solvent is mandatory.; Regularly one might want to influence the setup of the solvent; cavity as well. The **solvent** can be defined either by directly providing a dielectric; constant using |dd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:4735,avail,available,4735,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['avail'],['available']
Availability," scaling the uncoupled term for; :math:`E_{exch-ind,resp}^{(30)}`. S^inf Keywords; ~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__do_ind_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_disp_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_ind30_exch_sinf.rst. .. _`sec:saptd`:. SAPT0-D; ~~~~~~~. In SAPT0, the computation of :math:`E_{disp}^{(20)} + E_{exch-disp}^{(20)}` represents; the computational bottleneck. One can avoid this bottleneck by replacing these; dispersion terms with the empirical D3 corrections developed by Grimme.; ; :ref:`Grimme's dispersion corrections are discussed here. <sec:dftd3>`. The corresponding method, termed SAPT0-D, thus relies on empirically fit parameters; specific to SAPT0/jun-cc-pVDZ. While SAPT0-D can be used with any of the -D ; variants using default parameters optimized for Hartee--Fock interaction energies, ; we recommend using the refit parameters with Becke-Johnson damping, as described in; [Schriber:2021:234107]_. Again, use of SAPT0-D with a basis set other than; jun-cc-pVDZ is not tested and not guaranteed to give meaningful results without; refitting the dispersion parameters. ; A simple water dimer computation using SAPT0-D may look like::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis jun-cc-pvdz. 	energy('sapt0-d3mbj') # runs the recommended dispersion correction; energy('sapt0-d3') # tests an alternative damping scheme/parameterization. Given the naturally pairwise-atomic nature of these empirical dispersion corrections,; integration with existing FSAPT functionality is also available simply by calling; ``energy(""fsapt0-d3mbj"")``. See :ref:`FSAPT <sec:fisapt>` documentation for more details on using FSAPT; for functional group analyses.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:47355,avail,available,47355,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability," sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6925,avail,available,6925,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,1,['avail'],['available']
Availability," set {; basis jun-cc-pVDZ; scf_type DF; freeze_core True; }; ; energy('sapt0'). Before, we have been setting keywords individually with commands like; ``set basis cc-pVDZ``. Because we have a few more options now, it's; convenient to place them together into the ``set``; block, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and; without diffuse :math:`d` functions on heavy atoms) [Papajak:2011:10]_. So,; we'll use that as our standard basis set. The SAPT code is designed to; use density fitting techniques, because they introduce minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:13335,error,error,13335,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['error'],['error']
Availability," setting |scf__dft_density_tolerance|. For notorious cases a value of 1E-10; is sensible. An example of a fully specified grid is as follows::. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_density_tolerance 1.0E-10 # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; dft_pruning_scheme robust # Generally safe and will speed things up; }. energy('b3lyp'). ERI Algorithms; ~~~~~~~~~~~~~~. The ERI algorithms for the Coulomb and hybrid exchange are identical to; :ref:`those for Hartree--Fock <sec:scferi>`. However, for LRC functionals, the long-range; exchange contributions to the Kohn--Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional. Key representative methods supported by the SCF module in |Psifour| are; detailed in Table :ref:`SCF Capabilities <table:scf_stdsuite>`. Note; from :ref:`table:conv_scf` that these SCF-level methods default to; density-fitted reference; use |globals__scf_type| to select an alternate; algorithm. SCF-level methods have no alternate implementations. .. include:: autodoc_capabilities_scf.rst. IP Fitting; ~~~~~~~~~~. In collaboration with the Bredas group, we have developed an automatic procedure; for IP fitting of LRC functionals, based on a modified Regula-Falsi method. To; perform IP fitting, one simply calls the :py:func:`~psi4.driver.frac.ip_fitting` Python macro, after; setting up a standard LRC UKS computation. A representative example is::. memory 512 MB. molecule h2o {; 0 1 # must be neutral; O; H 1 1.0; H 1 1.0 2 104.5; # IP fitting runs in C1 symmetry; }. set {; referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:27616,error,errors,27616,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['error'],['errors']
Availability," simple model for users (probably PSIthon) or for expert users (probably PsiAPI).; Both will continue to work in future, and neither have limitations. Test Contents; =============. * Most |PSIfour| tests will be integration tests focusing on non-regression of user input to answers, and we insist on having these.; But if you find unit tests helpful, by all means add them to the test suite. * Most tests should store reference results (from literature or another implementation or a carefully run |PSIfour| calculation),; run quantum chemistry, then apply one or more of the :ref:`faq:comparison_functions` so that the test will fail if the answer is unexpected.; The functions are the same in CTest and pytest, but in the former they are, for example, ``compare_matrices(refmat, mat, ...)`` while in the latter it's asserted, like ``assert compare_matrices(refmat, mat, ...)``.; The main advantage of the testing functions is that they provide helpful error printing upon failure. Deep down, they're NumPy functions. * In preparing the test case reference values, aim for the converged value rather than many digits from your computer under default convergence conditions.; This will make the test more robust for different OS, different BLAS libraries, and variations in SCF cycles.; Turn energy, density, amplitude, and geometry convergence criteria to very tight levels, and use these results for reference energies, reference geometries, reference cube files, *etc.*.; Then, either remove or relax the convergence settings, if these are not a vital part of the test.; In choosing the number of digits for :py:func:`~psi4.compare_values` and other compare_* functions, select a number looser than the convergence set in the test; or the default convergence for the calculation type (energy, gradient, *etc.*). * Keep tests as short as possible without sacrificing coverage and variety. Under 30 seconds is a good aim. .. _`faq:add_psithon_tests`:. Adding PSIthon Test Cases; ====================",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:5001,down,down,5001,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['down'],['down']
Availability," somewhere in the; optimization. .. index:: ; pair: geometry optimization; convergence criteria. Convergence Criteria; ^^^^^^^^^^^^^^^^^^^^. Optking monitors five quantities to evaluate the progress of a geometry ; optimization. These are (with their keywords) the change in energy ; (|optking__max_energy_g_convergence|), the maximum element of ; the gradient (|optking__max_force_g_convergence|), the root-mean-square ; of the gradient (|optking__rms_force_g_convergence|), the maximum element; of displacement (|optking__max_disp_g_convergence|), and the ; root-mean-square of displacement (|optking__rms_disp_g_convergence|), ; all in internal coordinates and atomic units. Usually, these options will not ; be set directly. Primary control for geometry convergence lies with the keyword ; |optking__g_convergence| which sets the aforementioned in accordance ; with Table :ref:`Geometry Convergence <table:optkingconv>`. |; |. .. _`table:optkingconv`:. .. table:: Summary of sets of geometry optimization criteria available in |PSIfour|. +-----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+; | |optking__g_convergence| | Max Energy | Max Force | RMS Force | Max Disp | RMS Disp |; +=============================+============================+============================+============================+============================+============================+; | NWCHEM_LOOSE [#fd]_ | | :math:`4.5 \times 10^{-3}` | :math:`3.0 \times 10^{-3}` | :math:`5.4 \times 10^{-3}` | :math:`3.6 \times 10^{-3}` |; +-----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+----------------------------+; | GAU_LOOSE [#ff]_ | | :math:`2.5 \times 10^{-3}` | :math:`1.7 \times 10^{-3}` | :math:`1.0 \times 10^{-2}` | :math:`6.7 \times 10^{-3}` |; +-----------------------------+---------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:21255,avail,available,21255,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['avail'],['available']
Availability," terms are grouped according to the component of the interaction; to which they contribute. The total component energies (*i.e.*,; electrostatics, exchange, induction, and dispersion) represent what we; regard as the best estimate available at a given level of SAPT computed; from a subset of the terms of that grouping. The groupings shown above are; not unique and are certainly not rigorously defined. We regard the groupings ; used in |PSIfour| as a ""chemist's grouping"" as opposed to a more; mathematically based grouping, which would group all exchange terms ; (*i.e.* :math:`E_{exch-ind,resp}^{(20)}`, :math:`E_{exch-disp}^{(20)}`, *etc.*) in; the exchange component. A final note is that both ``Disp22(T)``; and ``Est.Disp22(T)`` results appear if MP2 natural orbitals are ; used to evaluate the triples correction to dispersion. The ``Disp22(T)`` ; result is the triples correction as computed in the truncated NO basis; ; ``Est.Disp22(T)`` is a scaled result that attempts to recover; the effect of the truncated virtual space and is our best estimate. The ``Est.Disp22(T)``; value is used in the SAPT energy and dispersion component (see [Hohenstein:2010:104107]_ ; for details). Finally, this part of the output file contains sSAPT0, a special scaling; scheme of the SAPT0 energy that can yield improved results and was described in more details; above. The corresponding scaled total component energies are printed as well. As mentioned above, SAPT results with scaled exchange are also optionally available; by setting the |sapt__exch_scale_alpha| keyword. When activated, the unscaled results are; printed first as reported above, and then repeated with exchange scaling for all ; relevant terms: :: . SAPT Results ==> ALL S2 TERMS SCALED (see Manual) <==. Scaling factor (Exch10/Exch10(S^2))^{Alpha} = 1.007200; with Alpha = 1.000000; --------------------------------------------------------------------------------------------------------; Electrostatics -13.06509118 [mEh] -8.198468",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:38297,recover,recover,38297,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['recover'],['recover']
Availability," the CMake output. Note that the same keyword MAX_AM_ERI controls Libint and simint. simint; can't compile above AM7, so you'll have to turn off simint to get an; internal compile of AM>=8 Libint. The keyword is only a lower bound for; detection, so you can set it at 7, have both Libint and simint enabled,; and point CMake toward a pre-built Libint AM8 just fine. * :ref:`cmake:libint`. .. _`faq:condamaxameri`:. How to get high angular momentum integrals from conda; -----------------------------------------------------. Libint2 conda packages are available from conda for Linux, Mac, and Windows. The Linux package has base ``MAX_AM_ERI=7`` and can run 7z energies; and gradients conventional, 6z energies and gradients density-fitted,; and qz Hessians both conventional and density fitted. The Mac and Windows packages have base ``MAX_AM_ERI=5`` and can run; 5z energies, qz gradients, and tz Hessians, both conventional and; density-fitted. Details about angular momentum settings are available here; :source:`external/upstream/libint2/CMakeLists.txt`; . .. Since February 2019, the |PSIfour| conda package on Linux has been the; .. large AM8. Likewise, this is the package you get upon ::; ..; .. conda install libint -c psi4; ..; .. There is no need for the extra ``am8`` argument previously documented here.; ..; .. On Mac, the Libint conda package itself and the Libint compiled into; .. the |PSIfour| conda package remain AM6.; ..; .. Beware this issue: https://github.com/psi4/psi4/issues/1533. .. _`faq:setuphelp`:. How to see what build configuration options are available; ---------------------------------------------------------. CMake doesn't provide a summary for this (unless you want to try the CMake; GUI, which the developers have never looked at). However, the top half of; the main CMakeLists.txt is a passable summary:. .. literalinclude:: @SFNX_INCLUDE@CMakeLists.txt; :lines: 14-142; :language: none. Note that external projects will have their own sets of build; configur",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:18846,avail,available,18846,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability," the MSIE behavior of various; functional technologies. |PSIfour| features an efficient fractional-particle DFT; code, written into the UKS spin specialization. Due to a combination of DIIS and; reuse of integrals/guess orbitals across a range of fractional occupations, this; code is able to perform fractional occupation curves for systems with up to 60; atoms, across a wide range of the particle number :math:`N`. Two python macros exist for this code. The first is :py:func:`~psi4.driver.frac.frac_traverse`, which is; used to investigate the fractional occupation behavior within one electron above; and below the neutral. An example is::. molecule h2o {; 0 1 # must be neutral; O; H 1 1.0; H 1 1.0 2 104.5; # FRAC jobs will be be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; }. # Argument is functional.; # Many optional arguments are available, see the python file; frac_traverse('wb97', molecule=h2o). The other macro is :py:func:`~psi4.driver.frac.frac_nuke`, which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the :py:func:`~psi4.driver.frac.frac_traverse` call is substituted; for something like::. # Argument is the functional.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac.frac_nuke('wb97', molecule=h2o, nmax = 2). Dispersion Corrections; ~~~~~~~~~~~~~~~~~~~~~~. :ref:`DFT-D dispersion corrections are discussed here. <sec:dftd3>`. :ref:`HF-3c and PBEh-3c dispersion and BSSE corrections are discussed here. <sec:gcp>`. :ref:`DFT-NL dispersion corrections are discussed here. <sec:dftnl>`. Recommendations; ~~~~~~~~~~~~~~~. The KS-DFT code is quite new, but relatively complete. During code deve",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:30684,avail,available,30684,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['avail'],['available']
Availability," the recipe and rebuild for all OS & Python combinations. Then run constructor again.; .. * [Replacement] After adding a post_install to reposition the noarch packages, they are safe to include.; .. * If fetching times out, may have to run run.py several times. Clear out build/ in between. It's the fetching that takes a long time, not constucting; .. * In the end, should have several installers; ..; .. ::; ..; .. >>> ls -l build/psi4conda-1.3-py3.*/*64.sh; .. -rwxr-xr-x. 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; .. -rwxr-xr-x. 299M Feb 28 20:31 build/psi4conda-1.3-py3.6-osx-64/psi4conda-1.3-py36-MacOSX-x86_64.sh; .. -rwxr-xr-x. 518M Feb 28 20:30 build/psi4conda-1.3-py3.7-linux-64/psi4conda-1.3-py37-Linux-x86_64.sh; .. -rwxr-xr-x. 299M Feb 28 20:31 build/psi4conda-1.3-py3.7-osx-64/psi4conda-1.3-py37-MacOSX-x86_64.sh; ..; ..; .. * Upload installer files to vergil, ``scp -r build/Psi4*/Psi4*sh root@vergil.chemistry.gatech.edu:/var/www/html/psicode-download/``; .. * Log in to vergil root and make WindowsWSL symlinks. Build Psi4conda set; -------------------. Installers are build using the project ``constructor`` to build binary bash or exe scripts, one per; OS per Python version. For example, there's 16 installers when OSes are linux-64, win-64, osx-64,; osx-arm64 and pythons are 38, 39, 310, 311. In analogy to Miniconda, they're called Psi4Conda. They; are built through GHA on the https://github.com/psi4/psi4meta repository and get served from vergil; (the cdsgroup webserver). * If the previous release hasn't had a snapshot saved, copy ``construct.yaml`` into a version-labeled; file and check it in.; * Edit recipe https://github.com/psi4/psi4meta/blob/master/installers/construct.yaml. - Edit the top matter for Configuration, mainly the ``release`` field. See snapshots in directory for examples.; - Edit the packages and channels info if necessary. Probably long-term stable. * Edit the GHA control file https://github.com/psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:24675,down,download,24675,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability," to access directly to perform frequency calculations. Behind; the scenes, :py:func:`~psi4.driver.frequency` is a light wrapper over; :py:func:`~psi4.driver.hessian` that computes the Hessian then adds a; thermochemical analysis. .. autofunction:: psi4.frequency(name [, molecule, return_wfn, func, mode, dertype, irrep]); :noindex:. .. autofunction:: psi4.hessian(name [, molecule, return_wfn, func, dertype, irrep]); :noindex:. It's handy to collect the wavefunction after a frequency; calculation through ``e, wfn = psi4.frequency(...,; return_wfn=True)`` as the frequencies can be accessed through; :py:func:`psi4.core.Wavefunction.frequencies()`, the Hessian through; :py:func:`psi4.core.Wavefunction.hessian()`, and much other computation; info through ``psi4.core.Wavefunction.frequency_analysis``; (note no parentheses). Examples of using this data; structure can be found :srcsample:`fd-freq-gradient` and; :source:`tests/pytests/test_vibanalysis.py`. Formatted printing of vibrational; results is available through :py:func:`psi4.driver.qcdb.vib.print_vibs`. .. _`table:frequency_analysis`:. .. table:: Results accessible through ``psi4.core.Wavefunction.frequency_analysis``. +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | key | description (lbl & comment) | units | data (real/imaginary modes) |; +===============+============================================+===========+======================================================+; | omega | frequency | cm^-1 | ndarray(ndof) complex (real/imag) |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | q | normal mode, normalized mass-weighted | a0 u^1/2 | ndarray(ndof, ndof) float |; +---------------+--------------------------------------------+-----------+------------------------------------------------------+; | w | normal mode, un-mass-weighted | a0 | ndarray(ndof, nd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/freq.rst:2790,avail,available,2790,doc/sphinxman/source/freq.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/freq.rst,1,['avail'],['available']
Availability," to different parts of the code, but having; the same name, would cause conflicts. The \module{read\_options} function is; responsible for setting up the \module{Options} object, which contains the list; of user-provided options. Lines 25--32 are important - these provide the list; of keywords expected by the code, their types, and their default values (if; any). This part of the code will be inserted into the \PSIfour\ driver when; the module is ready for merging with the \PSIfour\ distribution; this process; will be detailed later in the chapter. Notice the special format of the; comments on lines 27 and 30. These are still valid \module{C++} comments, but; the extra hyphens inside are essential in this context. Whenever adding any; options for any module, you must comment them as shown - this will ensure that; the keywords are automatically inserted into the \PSIfour\ users' manual. The; \module{main} function does a little setting up of the \PSI\ input and output; environments, before calling the module code we're developing (on line 53) and; shutting down the \PSIfour\ I/O systems. The module we're developing is in the following source file. \includesource{sample-codes/integrals/integrals.cc}{C++}. Given the extensive documentation within the code, we'll not describe this file; line-by-line; however, some points warrant elaboration. Notice that the entire; module is encapsulated in the \module{psi::integrals} namespace (lines 6 and; 92). This simple example has only one function body, which lives in a single; source file - if more functions and/or source files were added, these too would; have to live in the \module{psi::integrals} namespace. On lines 29 and 31 of; \file{main.cc} we told the parser which keywords to expect, and provided; default values in case the user omited them from the input. This makes; retrieving these options very clean and simple ({\it c.f.} lines 11 and 12 of; \file{integrals.cc}). Each \PSIfour\ module will have to initialize its own; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst:3511,down,down,3511,doc/sphinxman/source/attic/progtutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtutorial.rst,1,['down'],['down']
Availability," with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: PCMSolver, PCM, continuum solvation. .. _`sec:pcmsolver`:. Interface to PCMSolver by R. Di Remigio; =======================================. .. codeauthor:: Roberto Di Remigio, T. Daniel Crawford, Andrew C. Simmonett; .. sectionauthor:: Roberto Di Remigio. *Module:* :ref:`Keywords <apdx:pcm>`, :ref:`PSI Variables <apdx:pcm_psivar>`, :source:`PCMSolver <psi4/src/psi4/libpsipcm/>`. .. image:: https://img.shields.io/badge/home-PCMSolver-5077AB.svg; :target: https://github.com/PCMSolver/pcmsolver. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://pcmsolver.readthedocs.io/en/latest/. |PSIfour| contains code to interface to the PCMSolver library developed; by R. Di Remigio and L. Frediani.; The PCMSolver library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable continuum model (PCM), a continuum solvation model [Tomasi:2005:2999]_. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/pcmsolver/badges/version.svg; :target: https://anaconda.org/psi4/pcmsolver. * PCMSolver is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, PCMSolver has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; PCMSolver can be obtained through ``conda install pcmsolver -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_PCMSolver`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect PCMSolver and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:1871,down,downloads,1871,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['down'],['downloads']
Availability," ✓̲ ✓̲ | ✓̲ ✓̳ ✓̳ | ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | ✓̲ ✓̳ ✓̳ | ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | ✓̲ ✓̳ ✓̳ |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | omp2.5\ [#c10]_ | |globals__mp_type| | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | omp3\ [#c10]_ | |globals__mp_type| | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | oremp2\ [#c10]_ | |globals__cc_type| | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | olccd\ [#c10]_ | |globals__cc_type| | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#c1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#c2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#c3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#c10] Also available for DFT references RKS/UKS",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_occ_oo.rst:3893,avail,availability,3893,doc/sphinxman/source/preview_capabilities_occ_oo.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_occ_oo.rst,2,['avail'],"['availability', 'available']"
Availability,""". H. Build with explicit non-MKL LAPACK. .. code-block:: bash. >>> cmake -DLAPACK_LIBRARIES=""/path/to/lib/liblapack.so;/path/to/lib/libblas.a"". I. Build with MKL and GCC (iomp5 needed instead of gomp for threading. use OpenMP_LIBRARY_DIRS to hint location.). .. code-block:: bash. >>> cmake -DLAPACK_LIBRARIES=/opt/intel/mkl/lib/intel64/libmkl_rt.so -DLAPACK_INCLUDE_DIRS=/opt/intel/mkl/include -DOpenMP_LIBRARY_DIRS=/opt/intel/compiler/lib/intel64/. **Notes**. * Much of |PSIfours| speed and efficiency depends on the corresponding; speed and efficiency of the linked BLAS and LAPACK libraries; (especially the former). Consider the following recommendations:. * It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat, as it is usually just the completely; unoptimized netlib distribution. The choice of LAPACK is less; critical, and so the unoptimized netlib distribution is acceptable. * Perhaps the best choice, if available, is Intel's MKL library,; which includes efficient threaded BLAS and LAPACK (as of |PSIfour|; v1.1, earliest known working version is MKL 2013; as of v1.4,; should use at leat MKL 2019). MKL, which is; freely available through conda, is the only threaded BLAS/LAPACK; distribution fully supported by |PSIfour|. * On Mac, the native Accelerate libraries are very nice and would; be recommended but for the potential conflict between |PSIfour|; BLAS and NumPy BLAS. Unless you've a special NumPy, avoid!. * The open-source LAPACK distributions OpenBLAS (formerly GotoBLAS); mostly works. Use it at your own risk and after testing your; particular distribution, including tests run multithreaded,; if you intend to run |PSIfour| so. Use at least 0.2.15, and; pay attention to how it was compiled - unthreaded seems safe,; openmp-threaded is mostly safe, default pthreaded is *not* safe. See; https://github.com/psi4/psi4/issues/1009 for recent analysis. * Another open-source LAPACK distribution, ATLAS had; stability issues with t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:49423,avail,available,49423,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"""Frozen"": [""theta_A"", ""theta_B"", ""tau"", ""phi_A"", ""phi_B""],; }""""""; ; set {; basis 6-31+G ; frag_mode MULTI; interfrag_coords $MTdimer ; }. optimize(""mp2""). Dealing with problematic optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Although optking is continuously improved with robustness in mind, some; attempted optimizations will inevitably fail to converge to the desired minima.; For difficult cases, the following suggestions are made. * As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary. * |optking__dynamic_level| allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps. * The developers have found the |optking__opt_coordinates| set to ""BOTH"" which; includes both the redundant internal coordinate set, as well as cartesian coordinates,; works well for systems with long 'arms' or floppy portions of a molecule poorly; described by local internals. * Optking does support the specification of ghost atoms. Certain internal coordinates such ; as torsions become poorly defined when they contain near-linear bends. ; An internal error `AlgError` may be raised in such cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting |o",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:18710,robust,robust,18710,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['robust'],['robust']
Availability,"# CMake driving pytest copied from pybind11:; # https://github.com/pybind/pybind11/blob/master/tests/CMakeLists.txt. # Make sure pytest is found or produce a fatal error; if(NOT psi4_PYTEST_FOUND); execute_process(COMMAND ${Python_EXECUTABLE} -c ""import pytest""; OUTPUT_QUIET ERROR_QUIET; RESULT_VARIABLE _exec_python_err); if(_exec_python_err); message(STATUS ""Running some tests requires pytest. Please install it manually (try: ${Python_EXECUTABLE} -m pip install pytest)""); endif(); set(psi4_PYTEST_FOUND TRUE CACHE INTERNAL """"); endif(). # A single command to remake and run the pytest smoke tests; add_custom_target(pytest; COMMAND PYTHONPATH=${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}; ${Python_EXECUTABLE} -m pytest -rws -v -m smoke --capture=sys ${CMAKE_CURRENT_SOURCE_DIR}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/pytests/CMakeLists.txt:164,error,error,164,tests/pytests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/pytests/CMakeLists.txt,2,['error'],['error']
Availability,"# GHA for Psi4. ## [docs.yml](./docs.yml). * Since: April 2021; * Runs on: push to master; * Goals:; * get CI warning if doxygen docs compile broken; * get CI warning if sphinx docs compile broken, or compile with warnings, or compile with unreachable links, or can't compile nit-picky""; * publish nightly-build docs promptly and automatically; * get CI warning if psi4 compile broken with conda-forge environment (as opposed to the usual defaults-based environment); * Results:; * automated commit of built HTML docs to psi4/psi4docs:master, which in turn is served up by netlify to https://psi4manual.netlify.app/, which in turn is [redirected by psicode](https://github.com/psi4/psicode-hugo-website/blob/master/netlify.toml) into https://psicode.org/psi4manual/master/index.html. ----. ## [ecosystem.yml](./ecosystem.yml). * Since: March 2022; * Runs on: PR, push to master; * Goals:; * get CI warning if PR breaks addons hosted by psi4 channel or by conda-forge chanel; * show CI model of how to build Psi4 on Linux, macOS, and Windows platforms, including tweaks to the build environment, and emphasizing the minor differences between platforms; * show how to run with the maximal ecosystem (less proprietary addons, gpu addons, and addons I haven't packaged), as the environment can be tricky; * show what addon packages to get from what channel, especially during shift from defaults-based to conda-forge-based; * Results:; * None. ----. ## [docs-pr.yml](./docs-pr.yml). * Since: June 2022; * Runs on: PR; * Goals; * provide CI warning to author if PR changes break sphinx docs compile, or compile with warnings, or compile with unreachable links, or can't compile nit-picky""; * Results; * archived tarball of HTML docs (download from Actions, Archives, then unpack and view in browser). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/.github/workflows/README.md:1729,down,download,1729,.github/workflows/README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/.github/workflows/README.md,1,['down'],['download']
Availability,"# GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: Cfour; .. _`sec:cfour`:. Interface to CFOUR by J. Stanton & J. Gauss; ===========================================. .. codeauthor:: Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:cfour>`, :ref:`PSI Variables <apdx:cfour_psivar>`, :ref:`Samples <apdx:testSuitecfour>`. |PSIfour| contains code to interface to the Cfour quantum chemistry suite of; John F. Stanton (U. Texas, Austin) and J\ |u_dots|\ rgen Gauss (U. Mainz),; which is available after a license agreement from ; `http://www.cfour.de/ <http://www.cfour.de/>`_. Installation; ~~~~~~~~~~~~. Follow the instructions provided with the Cfour download to install the; executable or to build the source. To by used by |PSIfour|, the program; binary (:program:`xcfour`) must be found in your :envvar:`PATH` or; :envvar:`PSIPATH`. The ``GENBAS`` file containing basis sets in Cfour; format is not necessary for this interface, but if you prefer to access; basis sets the ""Cfour way"" using a custom ``GENBAS`` file (the distributed; one is included with the interface), it, too, must be in :envvar:`PATH` or; :envvar:`PSIPATH`. If |PSIfour| is unable to execute the binary, an error; will be reported. .. .. caution:: The p4c4 interface isn't in the master branch nor will it be in; .. the near future. To run this code, (1) build the ``c4`` branch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. python module and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:1702,down,download,1702,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['down'],['download']
Availability,"%; % History of Psi; %; % Daniel Crawford, 24 January, 1996; %. The PSI suite of {\em ab initio} quantum chemistry programs is the result; of an ongoing attempt by a cadre of graduate students, postdoctoral; associates, and professors to produce code that is efficient but also; easy to extend to new theoretical methods. Significant effort has been; devoted to the development of libraries which are robust and easy to use.; Some of the earliest contributions to what is now referred to as ``PSI''; include a direct configuration interaction (CI) program (Robert Lucchese,; 1976, now at Texas A\&M), the well-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:401,robust,robust,401,doc/sphinxman/source/attic/history.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst,1,['robust'],['robust']
Availability,"%; % PSI Programmer's Manual; %; % SVN Revision Control Section; % (formerly CVS); %; % TDC, February, 1996; % Modified by TDC, December 2002; % Updated from CVS to SVN, April 2007; %. The subversion control system (SVN) (\htmladdnormallink{{\tt; subversion.tigris.org}}{http://subversion.tigris.org/}) provides a; convenient means by which programmers may obtain the latest (or any; previous) version of the \PSIfour\ source from the main repository or; a branch version, add new code to the source tree or modify existing; \PSIfour\ modules, and then make changes and additions available to; other programmers by checking the modifications back into the main; repository. SVN also provides a ``safety net'' in that any erroneous; modifications to the code may be easily removed once they have been; identified. This section describes how to use SVN to access and; modify the \PSIfour\ source code. (Note that compilation and; installation instructions are given in a separate document.). The main repository for the \PSIfour\ Source code is currently; maintained by the Crawford group at Virginia Tech. To check out the; code, one must first obtain an SVN account by emailing; \htmladdnormallink{{\tt crawdad@vt.edu}}{mailto:crawdad@vt.edu}.; After you have a login-id and password, you are now ready to access; the repository via a secure, SSL-based WebDAV connection, but first; you must decide which version of the code you need. The \PSIfour\ SVN repository contains three top-level directories:; \begin{itemize}; \item {\tt trunk}: The main development area.; \item {\tt branches}: Release branches and private development; branches are stored here.; \item {\tt tags:} Snapshots of the repository corresponding to public; releases are stored here and should {\em never} be modified.; \end{itemize}; If you have a PSI4 SVN account, you can peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policie",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:580,avail,available,580,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,1,['avail'],['available']
Availability,"', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:121766,error,error,121766,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480387,error,error,480387,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37410,error,error,37410,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521632,error,error,521632,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:68271,error,error,68271,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'dr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:65598,error,error,65598,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'dr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:132593,error,error,132593,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136367,error,error,136367,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:289903,error,error,289903,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159623,error,error,159623,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160051,error,error,160051,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164959,error,error,164959,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165387,error,error,165387,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31080,error,error,31080,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'mo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515798,error,error,515798,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:268478,error,error,268478,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:322363,error,error,322363,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:87450,error,error,87450,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332012,error,error,332012,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:121995,error,error,121995,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:216932,error,error,216932,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,3,['error'],['error']
Availability,"', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:433273,error,error,433273,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:392013,error,error,392013,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'referenc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:289496,error,error,289496,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:297000,error,error,297000,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:347989,error,error,347989,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:358096,error,error,358096,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:143823,error,error,143823,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270087,error,error,270087,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'ny",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270688,error,error,270688,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:331795,error,error,331795,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:474384,error,error,474384,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'not",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224846,error,error,224846,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'cc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:123587,error,error,123587,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:148995,error,error,148995,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303781,error,error,303781,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:190739,error,error,190739,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218626,error,error,218626,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218845,error,error,218845,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51993,error,error,51993,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradien",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218192,error,error,218192,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53172,error,error,53172,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138190,error,error,138190,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172103,error,error,172103,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnoc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324756,error,error,324756,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480185,error,error,480185,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228435,error,error,228435,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:70710,error,error,70710,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'mod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:354350,error,error,354350,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:434778,error,error,434778,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:349494,error,error,349494,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359601,error,error,359601,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328799,error,error,328799,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:524810,error,error,524810,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31276,error,error,31276,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:515994,error,error,515994,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10717,error,error,10717,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:15975,error,error,15975,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:324533,error,error,324533,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:315997,error,error,315997,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525607,error,error,525607,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:136771,error,error,136771,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492505,error,error,492505,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43705,error,error,43705,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158337,error,error,158337,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163673,error,error,163673,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenerg",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:153797,error,error,153797,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:69862,error,error,69862,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:71488,error,error,71488,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:382734,error,error,382734,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:455796,error,error,455796,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159410,error,error,159410,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160911,error,error,160911,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164746,error,error,164746,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'mo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525806,error,error,525806,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'referen",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:421251,error,error,421251,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337449,error,error,337449,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344454,error,error,344454,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:196548,error,error,196548,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:146386,error,error,146386,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13559,error,error,13559,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13981,error,error,13981,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18817,error,error,18817,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19239,error,error,19239,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:75569,error,error,75569,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnoc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:323205,error,error,323205,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278205,error,error,278205,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326535,error,error,326535,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:70097,error,error,70097,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:71723,error,error,71723,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481612,error,error,481612,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158553,error,error,158553,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163889,error,error,163889,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:53392,error,error,53392,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:149227,error,error,149227,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:205616,error,error,205616,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:252851,error,error,252851,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:312727,error,error,312727,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277555,error,error,277555,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328566,error,error,328566,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:265809,error,error,265809,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:320149,error,error,320149,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:329019,error,error,329019,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradien",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:36814,error,error,36814,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521036,error,error,521036,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492073,error,error,492073,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:407696,error,error,407696,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:44866,error,error,44866,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:268699,error,error,268699,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:322584,error,error,322584,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57350,error,error,57350,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330189,error,error,330189,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'mod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483791,error,error,483791,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:40961,error,error,40961,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:101419,error,error,101419,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105133,error,error,105133,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:425102,error,error,425102,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:429738,error,error,429738,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:439791,error,error,439791,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:253065,error,error,253065,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:266023,error,error,266023,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:65394,error,error,65394,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227585,error,error,227585,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:479985,error,error,479985,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37012,error,error,37012,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521234,error,error,521234,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-det",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169040,error,error,169040,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24280,error,error,24280,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:218409,error,error,218409,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228011,error,error,228011,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:119824,error,error,119824,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:153533,error,error,153533,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,")/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:122814,error,error,122814,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,")}; :label: SAPTDFT; .. math:: E_{disp,resp}^{(20)} = -\frac{1}{2\pi}\int_0^\infty d\omega \int d\mathbf{r}_A d\mathbf{r}'_A d\mathbf{r}_B d\mathbf{r}'_B \frac{1}{\left|\mathbf{r}_A-\mathbf{r}_B\right|}\frac{1}{\left|\mathbf{r}'_A-\mathbf{r}'_B\right|}\chi^A_{coup}\left(\mathbf{r}_A,\mathbf{r}'_A|i\omega\right)\chi^B_{coup}\left(\mathbf{r}_B,\mathbf{r}'_B|i\omega\right). .. math:: \chi_{coup}\left(\mathbf{r},\mathbf{r}'|\omega\right) = \chi_0\left(\mathbf{r},\mathbf{r}'|\omega\right) + \int d\omega d\mathbf{r}_1 d\mathbf{r}_2 \chi_0\left(\mathbf{r},\mathbf{r}_1|\omega\right)\left[\frac{1}{r_{12}} + f_{xc}\left(\mathbf{r}_1,\mathbf{r}_2,\omega\right)\right]\chi\left(\mathbf{r}_2,\mathbf{r}'|\omega\right). The :math:`\delta_{HF}^{(2)}` and :math:`\delta_{HF}^{(3)}` terms take into; account higher-order induction effects and are included in the definition; of SAPT terms. They are computed from the Hartree--Fock supermolecular interaction energy; :math:`E_{int}^{HF}` and are only available in dimer-centered basis SAPT; computations, which is the default (see below for monomer-centered basis ; computations). They are defined by:. .. math:: \delta_{HF}^{(2)} = E_{int}^{HF} - (E_{elst}^{(10)} + E_{exch}^{(10)} ; + E_{ind,resp}^{(20)} + E_{exch-ind,resp}^{(20)}); :label: dHF2. .. math:: \delta_{HF}^{(3)} = \delta_{HF}^{(2)} - (E_{exch-ind}^{(30)} ; + E_{ind,resp}^{(30)}); :label: dHF3. Additionally, high-order coupling between induction and dispersion can be ; extracted from the supermolecular MP2 interaction energy:. .. math:: \delta_{MP2}^{(2)} = E_{int}^{MP2, corr} - (E_{elst}^{(12)} +; E_{exch}^{(11)} + E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)}; + \; ^{t}\!E_{exch-ind}^{(22)} + E_{disp}^{(20)} + E_{exch-disp}^{(20)}). .. math:: \delta_{MP2}^{(3)} = \delta_{MP2}^{(2)} - (E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}). where :math:`E_{int}^{MP2, corr}` is the correlation part of the supermolecular MP2 ; interaction energy. :math:`\delta_{MP2}^{(2)}` and :math:`\delta_{MP",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:8423,avail,available,8423,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"* DGER: Rank-1 update (not wrapped yet). * BLAS3. * DGEMM: General Matrix-Matrix product; * DTRMM: General Triangular Matrix-General Matrix product; * DTRSM: Triangular Matrix-General Matrix solution via back substitution (just as fast as DTRMM); * DSYMM/DSYMV calls are not appreciably faster than DGEMM calls, and should only be used in expert situations (like using the other half of the matrix for some form of other transformation).; * DTRMM/DTRMV calls are 2x faster than DGEMM, and should be used where possible. LAPACK Wrappers; ^^^^^^^^^^^^^^^. All standard LAPACK 3.2 double precision routines are provided. LAPACK commands remain in Fortran's ""column-major"" indexing, so all the; results will be transposed, and leading dimensions may have to be fiddled; with (using ``lda = n`` in both directions for square matrices is highly; recommended). An example of the former problem is a Cholesky; Decomposition: you expect to get back a lower triangular matrix L such; that ``L L^T = A``, but this is returned in column-major order, so the actual; recovery of the matrix A with the row-major BLAS wrappers effectively; involves ``L^T L = A``. On of the biggest consequences is in linear equations:; The input/output forcing/solution vector must be explicitly formed in; column-major indexing (each vector is placed in a C++ row, with its; entries along the C++ column). This is visualized in C++ as the transpose; of the forcing/solution vector. All routines are declared in qt.h. Each; routine is prefixed with a ``C_``, followed by the standard Fortran name of; the routine, in capital letters. Input parameters of single primitives; (int, double, unsigned long int, char, ...) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous memory; (as provided by block_matrix, for example), and are passed by providing a; pointer to the first double or int element of the data (this is array[0]; if array is ``double**``). All routines return an int INFO w",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:5902,recover,recovery,5902,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['recover'],['recovery']
Availability,"++ -I${CONDA_PREFIX}/include/c++/v1"". # Configure and build. .. _`faq:modgcc`:. How to satisfy the GCC >= 4.9 requirement on Linux without updating the OS; --------------------------------------------------------------------------. .. code-block:: bash. # See if GCC too old (in this case, yes); >>> gcc --version; gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-4). Even if you're not using GCC as a compiler, your Intel compiler seeks; `gcc` to generate code compatible with your current GCC version. If your; GCC is too old (like above), you can update your system GCC through your; package manager *or* install an acceptable version elsewhere on your; system. The latter route, tested on Linux with Intel compilers, is below. .. code-block:: bash. # Install GCC 7.2 into a non-primary conda environment; >>> conda create -n gcc72 gxx_linux-64 gcc_linux-64. # To Build, either:. # (A) activate environment (prepends PATH and defines environment variables CC, CXX, HOST, etc); >>> conda activate gcc72; >>> echo ${CXX}; /path/to/miniconda/envs/gcc72/bin/x86_64-conda_cos6-linux-gnu-g++; >>> echo ${HOST}; x86_64-conda_cos6-linux-gnu. # build with GNU; >>> cmake -S. -Bbuild \; -DCMAKE_C_COMPILER=${CC} \; -DCMAKE_CXX_COMPILER=${CXX} \. # build with Intel; >>> cmake -S. -Bbuild \; -DCMAKE_C_COMPILER=icc \; -DCMAKE_CXX_COMPILER=icpc \; -DCMAKE_C_FLAGS=""-gnu-prefix=${HOST}-"" \; -DCMAKE_CXX_FLAGS=""-gnu-prefix=${HOST}-"" \. # (B) tell CMake to tell the compiler which GCC to use; >>> GCC7=/path/to/miniconda/envs/gcc72; >>> cmake -S. -Bbuild \; -DCMAKE_C_COMPILER=icc \; -DCMAKE_CXX_COMPILER=icpc \; -DCMAKE_C_FLAGS=""-gnu-prefix=${GCC7}/bin/x86_64-conda_cos6-linux-gnu-"" \; -DCMAKE_CXX_FLAGS=""-gnu-prefix=${GCC7}/bin/x86_64-conda_cos6-linux-gnu-"" \; ...; # if Fortran active ...; -DCMAKE_Fortran_COMPILER=ifort \; -DCMAKE_Fortran_FLAGS=""-gnu-prefix=${GCC7}/bin/x86_64-conda_cos6-linux-gnu-"" \. # Configure and build. # To Run:; >>> export LD_LIBRARY_PATH=${GCC7}/lib:$LD_LIBRARY_PATH. .. _`faq:cray`:. How to",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:41630,echo,echo,41630,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,2,['echo'],['echo']
Availability,+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pwCVXZ-DK | --TQ5 | | | | | | --TQ5 | --TQ5 | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pwCV(X+d)Z-DK | | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+. |; |. .. _`table:basisDunningF12`:. .. table:: Summary of Dunning F12 orbital basis sets available in |PSIfour|. +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +==================+============+=====+=====+=====+=====+=====+==================+========+=======+; | cc-pVXZ-F12 | DTQ | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+. |; |. .. _`table:basisDunningJKFIT`:. .. table:: Summary of Dunning JK-fitting basis sets available in |PSIfour|. +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +========================+============+=====+=====+=====+=====+=====+==================+======+=======+; | cc-pVXZ-JKFIT [#f3]_ | DTQ5 | | 5 | Q5 | TQ5 | DTQ5| DTQ5 | DTQ5 | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pV(X+d)Z-JKFIT | DTQ5 | | 5 | Q5 | TQ5 | DTQ5| DTQ5 | DTQ5 | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pCVXZ-JKFIT [#f3]_ | | | | | | | | | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pCV(X+d)Z-JKFIT | | | | | | | | | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pwCVXZ-JK,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:13180,avail,available,13180,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"+----------------------+--------------------------------------------------------------------------+; | efp | mixed QM/EFP | EFP IE on EFP frags only |; + +----------------------+--------------------------------------------------------------------------+; | efp | pure QM | *error* |; +-------------------------+----------------------+--------------------------------------------------------------------------+; | scf | pure EFP | *error* |; + +----------------------+--------------------------------------------------------------------------+; | scf | mixed QM/EFP | SCF energy on QM frags w/coupling to EFP frags, plus EFP IE on EFP frags | ; + +----------------------+--------------------------------------------------------------------------+; | scf | pure QM | SCF energy on all frags (normal |Psifour| operation) |; +-------------------------+----------------------+--------------------------------------------------------------------------+. .. index:: EFP; library fragments. .. _`sec:availableEFPFragments`:. Fragment Library; ~~~~~~~~~~~~~~~~. Below are documented the EFP fragments available from the LIBEFP library.; These systems are accessible in ``molecule {...}`` blocks without; additional configuration. ----. .. comment This toctree directive only here to suppress warning at build time.; include line below is doing the work. .. toctree::; :hidden:. autodoc_available_efpfrag. .. include:: autodoc_available_efpfrag.rst. .. _`cmake:libefp`:. How to configure libefp for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |w---w| In |PSIfour|, libefp is a library that provides additional; molecular modeling capabilities (EFP). * Downstream Dependencies |w---w| |PSIfour| (\ |dr| optional) libefp. * Upstream Dependencies |w---w| libefp |dr| BLAS/LAPACK. **CMake Variables**. * :makevar:`ENABLE_libefp` |w---w| CMake variable toggling whether Psi4 builds with libefp; * :makevar:`CMAKE_PREFIX_PATH` |w---w| CMake list variable to specify whe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:11173,avail,availableEFPFragments,11173,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['avail'],['availableEFPFragments']
Availability,", 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:217973,error,error,217973,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525410,error,error,525410,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'con",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105531,error,error,105531,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5379,error,error,5379,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61575,error,error,61575,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79794,error,error,79794,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12291,error,error,12291,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17549,error,error,17549,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'grad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:377315,error,error,377315,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159838,error,error,159838,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165174,error,error,165174,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277339,error,error,277339,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94140,error,error,94140,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:518052,error,error,518052,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:467948,error,error,467948,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:151930,error,error,151930,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270909,error,error,270909,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:526209,error,error,526209,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:337241,error,error,337241,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:289271,error,error,289271,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328341,error,error,328341,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:470491,error,error,470491,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:344246,error,error,344246,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:296775,error,error,296775,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:283885,error,error,283885,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:399056,error,error,399056,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:58688,error,error,58688,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:64054,error,error,64054,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:76907,error,error,76907,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:82273,error,error,82273,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171705,error,error,171705,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'ref",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:499330,error,error,499330,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'erro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:270292,error,error,270292,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:322982,error,error,322982,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,", the following suggestions are made. * As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary. * |optking__dynamic_level| allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps. * The developers have found the |optking__opt_coordinates| set to ""BOTH"" which; includes both the redundant internal coordinate set, as well as cartesian coordinates,; works well for systems with long 'arms' or floppy portions of a molecule poorly; described by local internals. * Optking does support the specification of ghost atoms. Certain internal coordinates such ; as torsions become poorly defined when they contain near-linear bends. ; An internal error `AlgError` may be raised in such cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting |optking__opt_coordinates| to cartesian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__dynamic_level| to 1. .. warning:: In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to |optking__geom_maxiter| being exceeded but; the ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:19025,redundant,redundant,19025,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['redundant'],['redundant']
Availability,",; where *J_alg* and *K_alg* are the names of the separate Coulomb; and Exchange construction algorithms to use, respectively. Alternatively, if one is using; DFT with non-hybrid functionals, a composite Coulomb construction algorithm can be; specified solo by setting |globals__scf_type| to ``J_alg``, without the need to set ; an associated ``K_alg``. Specialized algorithms available to construct the Coulomb term within a composite framework ; are as follows:. DFDIRJ; An integral-direct algorithm constructing the Coulomb term based on [Weigend:2002:4285]_; The DFDIRJ algorithm combines the benefits of integral-direct SCF approaches ; with that of density-fitting. Specifically, DFJ utilizes no I/O and displays ; strong performance with large system size through a combination of ; effective parallelization and utilization of density-fitting to minimize ; ERI computational cost. See the :ref:`sec:scfddfj` section for more information. Specialized algorithms available to construct the Exchange term within a composite framework; are as follows:. COSX; An algorithm based on the semi-numerical ""chain of spheres exchange"" (COSX); approach described in [Neese:2009:98]_. The coulomb term is computed with a; direct density-fitting algorithm. The COSX algorithm uses no I/O, scales; well with system size, and requires minimal memory, making it ideal for; large systems and multi-core CPUs. See :ref:`sec:scfcosx` for more information.; LINK; An implementation of the linear-scaling ""Linear Exchange"" (LinK); algorithm described in [Ochsenfeld:1998:1663]_. The LINK algorithm provides ; many of the benefits of integral-direct SCF algorithms, including no disk I/O, ; low memory usage, and effective parallelization. Additionally, the; LINK implementation scales well with system size ; while simultaneously providing a formally-exact computation of the ; Exchange term. See :ref:`sec:scflink` for more information. In some cases the above algorithms have multiple implementations that return;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:31831,avail,available,31831,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"-*/`` comments in; :source:`psi4/src/read_options.cc`, and the ``r"""""" comment """"""``; docstrings in python modules. (That ``r""""""`` makes the string read; literally, so your LaTeX symbols aren't confused with escape characters.); For the two former, math has traditionally; been written in LaTeX (with the special substitution ``@@`` for; subscripting underscore). The autodoc script has been trained to convert; inline LaTeX math to reST math, provided the expression within dollar; signs is offset from other text. That is, expressions of the form; :regexp:`^ $latex math$[., ]$` (pseudo-regex) are good, while ``H$_2$O`` and LaTeX tables; are not translated correctly. Python docstrings are absorbed as-is, so; please use reST math formatting (essentially ``$latex math$`` :math:`\Rightarrow`; ``:math:`latex math```).; Starting around |PSIfour| 1.1, MathJax is used for in-browser LaTeX; rendering in place of offline PNG generation of math images. Check the; online rendering, as occasionally there will be errors even when the LaTeX; looked sound. The Map of the Sphinx; ^^^^^^^^^^^^^^^^^^^^^. * Adding a new Appendix or First-TOC-Level page. Create your reST file and fill it with information. Add the name of your; file to :source:`doc/sphinxman/source/appendices.rst` for an appendix or; to :source:`doc/sphinxman/source/index.rst` for a first-TOC-level.; Finally, add your file to the ``STATICDOC`` variable in; :source:`doc/sphinxman/CMakeLists.txt`. Sphinx will now build with your; new page. * Adding a new module to ""Theoretical Methods"". Copy the file of a well-established module, like; :source:`doc/sphinxman/source/sapt.rst`. Change the title, author, sec; label, ref, and source labels at the top of the file to point instead to; your code. Edit :source:`doc/sphinxman/source/methods.rst` to add the; name of your file so that it will appear in the TOC tree. Add your file; to the ``STATICDOC`` variable in; :source:`doc/sphinxman/CMakeLists.txt`. Sphinx will now build with your new;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst:8708,error,errors,8708,doc/sphinxman/source/documentation.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst,1,['error'],['errors']
Availability,"-+----------------------------------------------------------------------------------+----------+; | ``conda-forge::gcp-correction`` | ``bin/mctc-gcp`` | nyi | preferred | ``gcp_engine=""mctc-gcp""`` | https://github.com/grimme-lab/gcp | mctc |; +-------------------------------------+---------------------------------+-------------+------------+---------------------------+----------------------------------------------------------------------------------+----------+. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/dftd3/badges/version.svg; :target: https://anaconda.org/psi4/dftd3. * There are two implementations of DFTD3; see :ref:`table:empdispimpl` . The newer; ""s-dftd3"" one is preferred, while the older ""classic"" one will work for the immediate future.; |PSIfour| will automatically select whichever is available.; Starting with v1.9, only ""s-dftd3"" is supported, though the ""classic"" continues to work for many applications. * DFTD3 is available as a conda package for Linux and macOS and Windows. * If using the Psi4conda installer, DFTD3 has already been installed alongside. * If using the |PSIfour| conda package, the classic dftd3 conda package can; be obtained through ``conda install dftd3 -c psi4`` or the newer implementation; through ``conda install dftd3-python -c conda-forge``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the dftd3 executable can be obtained through ``conda install dftd3 -c psi4``; or ``conda install dftd3-python -c conda-forge``. * To remove a conda installation, ``conda remove dftd3`` or ``conda remove dftd3-python``. **Source**. * .. image:: https://img.shields.io/badge/home-DFTD3-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/get-the-current-version-of-dft-d3. * If using |PSIfour| built from source and you want to build DFTD3 from; from source also,; follow the instructions provided w",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:6390,avail,available,6390,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability,"--+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | pbe, GGA DFT | .. _ss_pbe: | |globals__scf_type| | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b3lyp, Hybrid DFT | .. _ss_b3lyp: | |globals__scf_type| | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | wb97x, LRC DFT | .. _ss_wb97x: | |globals__scf_type| | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b2plyp, DH DFT\ [#s12]_ | .. _ss_b2plyp: | |globals__scf_type| | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | | |; +--------------------------+----------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#s1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#s2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#s3] Methods with no analytic gradients do not have finite difference explicitly marked by ""∷"", but the capability can be gleaned from the energy availability.; .. [#s10] Arbitrary-order *n* through DETCI is inefficient byproduct of CI; .. [#s11] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L; .. [#s12] DH-DFT only available with DF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_summary.rst:13620,avail,availability,13620,doc/sphinxman/source/preview_capabilities_summary.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_summary.rst,2,['avail'],"['availability', 'available']"
Availability,"--+---+---+---+---+---+---+---+; | b3lyp, Hybrid DFT | .. _dd_b3lyp: | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | ✓ ✓̳ ✓ | ✓ ✓̳ ∷ | | |; | |globals__scf_type| | SCF | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | |; +--------------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | wb97x, LRC DFT | .. _dd_wb97x: | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | ✓ ✓̳ | | |; | |globals__scf_type| | SCF | ✓̲ ✓̳ | ✓̲ ✓̳ | ✓̲ ✓̳ | ✓̲ ✓̳ | | |; +--------------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b2plyp, DH DFT\ [#d14]_ | .. _dd_b2plyp: | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | ✓ ✓ ✓̳ ✓̳ ✓ ✓ | | | |; | |globals__scf_type| | SCF | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | |; +--------------------------+--------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#d1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#d2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#d3] Finite difference gradients are only marked explicitly by ""∷"" for overall (not per-method) lines and when at least one case has analytic gradients implemented, but the capability can be gleaned from the energy availability.; .. [#d10] Also available for DFT references RKS/UKS; .. [#d11] Arbitrary-order *n* through DETCI is inefficient byproduct of CI; .. [#d12] Analytic gradients for conventional all-electron RHF/UHF computations can be requested through |globals__qc_module|\ ``=ccenergy``, but their scaling is best suited to small molecules.; .. [#d13] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L; .. [#d14] DH-DFT only available with DF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_details.rst:15669,avail,availability,15669,doc/sphinxman/source/preview_capabilities_details.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_details.rst,3,['avail'],"['availability', 'available']"
Availability,--+-------+------------------+-------+-------+; | cc-pV(X+d)Z | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | DTQ56 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCVXZ | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | DTQ56 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCV(X+d)Z | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | DTQ56 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pwCVXZ | DTQ5 | | 5 | Q5 | TQ5 | DTQ5 | DTQ5 | DTQ5 | DTQ5 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pwCV(X+d)Z | DTQ5 | | 5 | Q5 | TQ5 | DTQ5 | DTQ5 | DTQ5 | DTQ5 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+. |; |. .. _`table:basisDunningDK`:. .. table:: Summary of Dunning Douglas-Kroll orbital basis sets available in |PSIfour|. +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +==================+============+=====+=====+=====+=====+=====+==================+========+=======+; | cc-pVXZ-DK | DTQ5 | | | | | | DTQ5 | DTQ5 | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pV(X+d)Z-DK | | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pCVXZ-DK | DTQ5 | | | | | | DTQ5 | DTQ5 | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pCV(X+d)Z-DK | | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pwCVXZ-DK | --TQ5 | | | | | | --TQ5 | --TQ5 | |; +------------------+----------,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:11351,avail,available,11351,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"---+---+---+---+---+---+---+; | ccsd | |globals__cc_type| | ✓̳ ✓̳ | ✓̳ | ✓̳ ✓̳ | ✓̳ | ✓̳ ✓̳ | ✓̳ |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccsd(t)\ [#e10]_ | |globals__cc_type| | ✓̳ ✓̳ | | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | a-ccsd(t)\ [#e11]_ | |globals__cc_type| | ✓̳ ✓̳ | | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | bccd(t) | |globals__cc_type| | ✓̳ ✓̳ | | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | cc3 | |globals__cc_type| | ✓̳ ✓̳ | | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#e1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#e2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#e3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#e10] Analytic gradients for conventional all-electron RHF/UHF computations can be requested through |globals__qc_module|\ ``=ccenergy``, but their scaling is best suited to small molecules.; .. [#e11] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_ccenergy.rst:4124,avail,availability,4124,doc/sphinxman/source/preview_capabilities_ccenergy.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_ccenergy.rst,1,['avail'],['availability']
Availability,"-----+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pwCV(X+d)Z-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+. |; |. .. _`table:basisKarlsruhe`:. .. table:: Summary of Karlsruhe orbital basis sets available in |PSIfour|. +--------------+-------------+; | no diffuse | augmented |; +==============+=============+; | def2-SV(P) | |; +--------------+-------------+; | def2-SVP | def2-SVPD |; +--------------+-------------+; | def2-TZVP | def2-TZVPD |; +--------------+-------------+; | def2-TZVPP | def2-TZVPPD |; +--------------+-------------+; | def2-QZVP | def2-QZVPD |; +--------------+-------------+; | def2-QZVPP | def2-QZVPPD |; +--------------+-------------+; | def2-mSVP | |; +--------------+-------------+; | def2-mTZVP | |; +--------------+-------------+; | def2-mTZVPP | |; +--------------+-------------+. |; |. .. _`table:basisJensen`:. .. table:: Summary of Jensen orbital basis sets available in |PSIfour|. +---------------+--------------+-----------+-------+------------------+; | basis set | no diffuse | augmented | tight | augmented, tight |; +===============+==============+===========+=======+==================+; | pcseg-N | 01234 [#f5]_ | | | |; +---------------+--------------+-----------+-------+------------------+; | aug-pcseg-N | | 01234 | | |; +---------------+--------------+-----------+-------+------------------+; | pcSseg-N | | | 01234 | |; +---------------+--------------+-----------+-------+------------------+; | aug-pcSseg-N | | | | 01234 |; +---------------+--------------+-----------+-------+------------------+. |; |. .. _`table:basisPetersson`:. .. table:: Summary of Petersson orbital basis sets available in |PSIfour|. +---------------+--------------+-----+; | basis set | augmented, tight |; +===============+==============+=====+; | nZaPa-NR | 234567 |; +---------------+--------------+-----+. |; |. .. _`table:basisOther`:. .. table:: Summar",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:17894,avail,available,17894,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"-----+------------+; | ❖ with :ref:`CheMPS2 <sec:chemps2>` |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CI | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-SCF | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CASPT2 | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with ex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:40720,avail,available,40720,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | lccd | |globals__cc_type| | ✓ ✓ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | ✓̳ ✓̳ ✓̲ ✓̲ ✓̲ ✓̲ | ✓̳ ✓̲ ✓̲ | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccd | |globals__cc_type| | ✓̲ ✓̲ ✓̲ ✓̲ | ✓̲ ✓̲ | ✓̲ ✓̲ ✓̲ ✓̲ | ✓̲ ✓̲ | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccsd | |globals__cc_type| | ✓ ✓ ✓ ✓ | ✓̲ ✓̲ | ✓̲ ✓̲ ✓̲ ✓̲ | ✓̲ ✓̲ | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ccsd(t) | |globals__cc_type| | ✓ ✓ ✓ ✓ | ✓̲ ✓̲ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | a-ccsd(t)\ [#n10]_ | |globals__cc_type| | ✓̲ ✓̲ ✓̲ ✓̲ | | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#n1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#n2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#n3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#n10] a-CCSD(T) also known as CCSD(aT), Lambda-CCSD(T), and CCSD(T)_L",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_occ_nonoo.rst:4832,avail,availability,4832,doc/sphinxman/source/preview_capabilities_occ_nonoo.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_occ_nonoo.rst,1,['avail'],['availability']
Availability,"---------+--------------------+----------------------+-------------------------+. .. rubric:: Footnotes. .. [#f1] Note that this table applies only the SCF module,; not to the final convergence criteria for post-HF methods or to methods; that use an alternate starting point, like MCSCF. SAPT computations, too,; set tighter values. .. [#f2] This applies to properties computed through the :py:func:`~psi4.driver.properties` function. .. [#f3] Post-HF methods that do not rely upon the usual 4-index AO integrals use a; density-fitted SCF reference. That is, for DF-MP2 and SAPT, the default |globals__scf_type| is DF. .. [#f4] Note that this table applies to the final convergence criteria for; all the post-SCF modules that define a |ccenergy__e_convergence| keyword. .. [#f5] The E_CONVERGENCE keyword is implemented for most post-SCF modules.; See a list beginning at |ccenergy__e_convergence|. .. [#f6] The R_CONVERGENCE keyword places a convergence check on an internal; residual error measure and is implemented for several post-SCF; modules (see list beginning at |ccenergy__r_convergence|). It is defined; according to the quantum chemical method and so its default value is set; by each module individually. .. [#f7] For frequency computations by finite difference of energies,; convergence criteria are tightened further still to 10 for; |scf__e_convergence| and |scf__d_convergence| for SCF of HF or DFT, 11; for |scf__e_convergence| and |scf__d_convergence| for SCF of post-HF,; and 10 for E_CONVERGENCE for post-HF of post-HF. .. _`sec:scfrec`:. Recommendations; ~~~~~~~~~~~~~~~. The SCF code is quite flexible and powerful.; We have tried as much as possible to keep the number of options to; a minimum and to allow all options to be used in the presence of all other; options. Below are some rough words of advice about using the SCF code for; practical calculations:. * For |scf__guess|, the ``SAD`` guess is usually your; friend, even for open-shell systems (at the very least, it g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:59613,error,error,59613,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['error']
Availability,"---------+--------------------------------------------+------------------+------------------+------------------+; | may-cc-pVXZ | s, p, :math:`\cdots`, :math:`\ell_{max}-2` | | | maTZ | maQZ |; +--------------------------+--------------------------------------------------------------------------------------+--------------------------------------------+------------------+------------------+------------------+; | :math:`\cdots` | s, p | | | | aaQZ |; +--------------------------+--------------------------------------------------------------------------------------+--------------------------------------------+------------------+------------------+------------------+; | cc-pVXZ | | | DZ | TZ | QZ |; +--------------------------+--------------------------------------------------------------------------------------+--------------------------------------------+------------------+------------------+------------------+. |; |. .. _`table:basisDunningOrbital`:. .. table:: Summary of Dunning orbital basis sets available in |PSIfour|. +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +===============+============+=====+=====+=====+======+=======+==================+=======+=======+; | cc-pVXZ | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | DTQ56 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pV(X+d)Z | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | DTQ56 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCVXZ | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | DTQ56 |; +---------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCV(X+d)Z | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | DTQ56 |; +---------------+------------+-----+-----+-----+------+-------+",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:9890,avail,available,9890,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"---------+; | efp | mixed QM/EFP | EFP IE on EFP frags only |; + +----------------------+--------------------------------------------------------------------------+; | efp | pure QM | *error* |; +-------------------------+----------------------+--------------------------------------------------------------------------+; | scf | pure EFP | *error* |; + +----------------------+--------------------------------------------------------------------------+; | scf | mixed QM/EFP | SCF energy on QM frags w/coupling to EFP frags, plus EFP IE on EFP frags | ; + +----------------------+--------------------------------------------------------------------------+; | scf | pure QM | SCF energy on all frags (normal |Psifour| operation) |; +-------------------------+----------------------+--------------------------------------------------------------------------+. .. index:: EFP; library fragments. .. _`sec:availableEFPFragments`:. Fragment Library; ~~~~~~~~~~~~~~~~. Below are documented the EFP fragments available from the LIBEFP library.; These systems are accessible in ``molecule {...}`` blocks without; additional configuration. ----. .. comment This toctree directive only here to suppress warning at build time.; include line below is doing the work. .. toctree::; :hidden:. autodoc_available_efpfrag. .. include:: autodoc_available_efpfrag.rst. .. _`cmake:libefp`:. How to configure libefp for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |w---w| In |PSIfour|, libefp is a library that provides additional; molecular modeling capabilities (EFP). * Downstream Dependencies |w---w| |PSIfour| (\ |dr| optional) libefp. * Upstream Dependencies |w---w| libefp |dr| BLAS/LAPACK. **CMake Variables**. * :makevar:`ENABLE_libefp` |w---w| CMake variable toggling whether Psi4 builds with libefp; * :makevar:`CMAKE_PREFIX_PATH` |w---w| CMake list variable to specify where pre-built dependencies can be found. For libefp, set to an installation directory con",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:11273,avail,available,11273,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['avail'],['available']
Availability,"----------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with example inputs, would be; appreciated. Where-to-post summary:[#f6]_. * How do I? -- `ask the forum <http://forum.psicode.org>`_. * I got this error, why? -- `ask the forum <http://forum.psicode.org>`_. * I got this error and I'm sure it's a bug -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * Can I open a discussion on this bit of code? -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * I have an idea/request and a plan -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * I have an idea/request -- `ask the forum <http://forum.psicode.org>`_. * Why do you? -- `ask the f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:41283,reliab,reliability,41283,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['reliab'],['reliability']
Availability,"----------+------------+; | DMRG-CI | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-SCF | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CASPT2 | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with example inputs, would be; appreciated. Where-to-post summary:[#f6]_. * How do I? -- `ask the forum <http://forum.psicode.org>`_. * I got this error, why? -- `a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:40802,avail,available,40802,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"----------+-----------------------------------------------------------------------------------+. There are two ways the computation of one-electron properties can be requested. ; Firstly, the properties can be evaluated from the last; computed one-particle density, using the following syntax::. oeprop(""MO_EXTENTS"", ""MULTIPOLE(4)"", title = ""hello!""). Note that it is the user's responsibility to ensure that the relaxed density; matrix is computed using the method of interest, which may require setting; additional keywords (see the method's manual section for details). The named; argument, *title*, is completely optional and is prepended to any; globals variables set during the computation. The unnamed arguments are the; properties to be computed. These can appear in any order, and multiple; properties may be requested, as in the example above. Note that, due to Python; syntax restrictions, the title argument must appear after the list of; properties to compute. The available properties are shown in the table above. The syntax above works well for computing properties using the SCF; wavefunction, however, may be difficult (or impossible) to use for some of the; correlated levels of theory. Alternatively, one-electron properties can be; computed using the built-in properties() function, e.g.::. properties('ccsd', properties=['dipole']). The :py:func:`~psi4.driver.properties` function provides limited functionality, but is a lot easier to; use for correlated methods. For capabilities of :py:func:`~psi4.driver.properties` see the; corresponding section of the manual. Basic Keywords; ^^^^^^^^^^^^^^. Multipole moments may be computed at any origin, which is controlled by the; global |globals__properties_origin| keyword. The keyword takes an array with; the following possible values:. .. _`table:oe_origin`:. .. table:: Allowed origin specifications. +-------------------------------+-------------------------------------------------------------------------------+; | Keyword | I",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst:6112,avail,available,6112,doc/sphinxman/source/oeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/oeprop.rst,1,['avail'],['available']
Availability,"-----------+------------+; | ADC(3), CVS-ADC(3) | RHF/UHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | ❖ with :ref:`CheMPS2 <sec:chemps2>` |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CI | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-SCF | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CASPT2 | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:40479,avail,available,40479,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"--------------+------------+------------+------------+------------+; | DMRG-CI | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-SCF | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CASPT2 | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with example inputs, would be; appreciated. Where-to-post summary:[#f6]_. * How do I? -- `ask the forum <http://forum.psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:40772,avail,available,40772,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"-----------------+-------------------+------------+------------+------------+------------+; | DMRG-SCF | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CASPT2 | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with example inputs, would be; appreciated. Where-to-post summary:[#f6]_. * How do I? -- `ask the forum <http://forum.psicode.org>`_. * I got this error, why? -- `ask the forum <http://forum.psicode.org>`_. * I got this error and I'm sure it's a bug -- `fi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:40892,avail,available,40892,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"-------------------------------------------+---------+----------+------------------------+; | :math:`\mbox{ODC-12$(\lambda_3)$}` | SIMULTANEOUS, QC | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | :math:`\mbox{ODC-13$(\lambda_3)$}` | SIMULTANEOUS, QC | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-06 | SIMULTANEOUS, QC, TWOSTEP | Y | Y | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | DC-12 | SIMULTANEOUS, QC, TWOSTEP | Y | N | UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+. Note that for ODC-06 and ODC-12 |scf__reference| ``RHF`` is only available for; |dct__algorithm| ``SIMULTANEOUS``. To compute :math:`(\lambda_3)` correction,; the |dct__three_particle| option needs to be set to PERTURBATIVE. .. _`sec:dctmininput`:. Minimal Input; ~~~~~~~~~~~~~. Minimal input for the DCT single-point computation looks like this::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; energy('dct'). The ``energy('dct')`` call to :py:func:`~psi4.driver.energy` executes the DCT; module, which will first call the SCF module and perform the SCF computation; with RHF reference to obtain a guess for the DCT orbitals. After SCF is; converged, the program will perform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:16119,avail,available,16119,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"--------------------------------------------. The core |PSIfour| build requires the software below. Note that; practically everything (including Python, CMake, NumPy, BLAS/LAPACK,; Libint, and even C++ compilers on Linux and Mac) can be; satisfied through conda. The links below give examples of how to configure; that software for |PSIfour| and any notes and warnings pertaining to it. See :source:`codedeps.yaml` for a structured listing and history of dependencies. * :ref:`C++ and C Compilers <cmake:cxx>` (C++17 compliant). * :ref:`Optimized BLAS and LAPACK libraries <cmake:lapack>` (preferably NOT one supplied by a standard; Linux distribution). * :ref:`Python interpreter and headers <cmake:python>` (3.8+) https://www.python.org/. * CMake (3.15+) https://cmake.org/download/. * NumPy (needed at runtime *and* buildtime) https://numpy.org/. * System utilities: GNU make and GNU install or Ninja, POSIX threads (Pthreads) library. The following are also required for |PSIfour|, but if not detected, the; build system will automatically download and build. * :ref:`gau2grid <cmake:gau2grid>` |w---w| :ref:`[what is gau2grid?] <sec:gau2grid>` :source:`[gau2grid min version] <external/upstream/gau2grid/CMakeLists.txt#L1>`. * :ref:`Libint <cmake:libint>` |w---w| :ref:`[what is Libint?] <sec:libint>` :source:`[Libint min version] <external/upstream/libint2/CMakeLists.txt#L1>` (Libint2 as of Nov 2020; added by v1.4). * Eigen https://eigen.tuxfamily.org/index.php?title=Main_Page; * Boost https://www.boost.org/ header-only preprocessor library. * :ref:`Libxc <cmake:libxc>` |w---w| :ref:`[what is Libxc?] <sec:libxc>` :source:`[Libxc min version] <external/upstream/libxc/CMakeLists.txt#L4>`. * pybind11 |w---w| `[what is Pybind11?] <https://pybind11.readthedocs.io/en/stable/>`_ :source:`[Pybind11 min version] <external/upstream/pybind11/CMakeLists.txt#L2>`. * QCElemental |w---w| `[what is QCElemental?] <https://molssi.github.io/QCElemental/>`_. * QCEngine |w---w| `[what is QCEngine?] <ht",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:7163,down,download,7163,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['download']
Availability,"-------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode and has something to do with the exponent boost chooses for; .. the default zero tolerance. Anyways, commenting out lines 47 to 49, for valgrind purposes, should; .. allow you to run valgrind. The consequence of commenting out these lines are you get no integeral; .. screening, so make sure you uncomment them when you actually run. .. _`faq:cmakeverbose`:. How to see the actual compiling commands (or errors) with ``cmake``; -------------------------------------------------------------------. CMake by default hides a lot of useful debugging information to make the; compilation cleaner. Issue ``make VERBOSE=1`` to display the full; compilation commands and errors. .. _`faq:vigitmerge`:. How to highlight git merge conflicts in ``vi``; ----------------------------------------------. Edit your ``~/.vimrc`` file to include the lines below. Hitting the ``F7``; key will toggle highli",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:56272,error,error,56272,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['error']
Availability,"------------------------. Flags to turn optimizations off and debugging on can be set across the; project and plugins with CMake variable ``CMAKE_BUILD_TYPE`` before; compiling. Note that these flags *will not* propagate to any add-ons that; are detected pre-built rather than built. * Build without optimization. .. code-block:: bash. cmake -DCMAKE_BUILD_TYPE=debug. set the CMake build type [default: release]. * Relevant CMake Options:. .. code-block:: bash. CMAKE_BUILD_TYPE=[debug|release] # Build type (Release or Debug)"" [default: release]. .. .. _`faq:setupobjdir`:; .. ; .. How to compile elsewhere than ``{top-level-psi4-dir}/objdir``; .. -------------------------------------------------------------; .. ; .. [How to choose the compilation directory, ``$objdir``](2_Planning#chooseobjdir); .. ; .. * Build in Specific Directory; .. ; .. .. code-block:: bash; .. ; .. cd $top-level-psi4-dir; .. cmake -S. -Bobj-gcc; .. cd obj-gcc. .. .. _`faq:erroreriam`:; ..; .. How to fix error ""``RuntimeError: value for ERI``""; .. --------------------------------------------------; ..; .. You will need to rebuild Libint. Reissue ``cmake`` or edit; .. ``CMakeCache.txt`` with larger ``MAX_AM_ERI`` and rebuild.; ..; .. * :ref:`faq:setupmaxameri`; .. * :ref:`faq:condamaxameri`. .. _`faq:chooseobjdir`:. How to choose the compilation directory, ``{objdir}``; -----------------------------------------------------. * there is no default; * common choices are ``objdir`` or ``build`` under :samp:`{top-level-psi4-dir}`. * ``cd {top-level-psi4-dir} && cmake -S. -Bobjdir``; * ``cd {top-level-psi4-dir} && cmake -S. -Bbuild``. * in-source builds (``*.cc`` and ``*.o`` in same directory) are disallowed; * builds *outside* :samp:`{top-level-psi4-dir}` are permitted. .. _`faq:doconfigure`:. How to save configuration settings for a future compilation; -----------------------------------------------------------. Create a file like ``do-configure`` with the ``cmake`` command and options; *on one line*. ::.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:23277,error,error,23277,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['error']
Availability,"-------------------. ==> Requested Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Energy Reaction Error Reagent 1 Reagent 2; Ref Calc [kcal/mol] [kJ/mol] [Eh] Wt [Eh] Wt; ------------------------------------------------------------------------------------------------------; RGC1-HeHe-0.85 0.0376 0.0301 -0.0075 -0.0312 -5.69430495 1 -2.84717649 -2; RGC1-HeHe-1.0 -0.0219 -0.0004 0.0215 0.0899 -5.69435362 1 -2.84717649 -2; ------------------------------------------------------------------------------------------------------; Minimal Dev -0.0075 -0.0312; Maximal Dev 0.0215 0.0899; Mean Signed Dev 0.0070 0.0293; Mean Absolute Dev 0.0145 0.0605; RMS Dev 0.0161 0.0673; ------------------------------------------------------------------------------------------------------. As well as being printed in the output file, database results from the; ``tabulate`` option are available in the input file as ordinary Python; dictionaries ``DB_RGT`` and ``DB_RXN``, indexed firstly by reagent or reaction; name and secondly by the requested PSI variable name. See the first; paragraph of :ref:`sec:createDatabase` for the distinction between; reagents and reactions. For example, an input file like the following; requests a couple variables through ``tabulate`` and then makes use of the; resulting data structures, here, only to print. ::; ; set basis 6-31g*; db('mp2','s22',subset='small',tabulate=['CURRENT ENERGY','MP2 CORRELATION ENERGY']). from pprint import pprint. print_stdout('\nDB_RGT'); pprint(DB_RGT). print_stdout('\nDB_RXN'); pprint(DB_RXN). print_stdout('\nmp2 interaction energy of water dimer (S22-2)'); print_stdout(DB_RXN['S22-2']['CURRENT ENERGY']). The output to the screen is as follows. ::. DB_RGT; {'S22-16-dimer': {'CURRENT ENERGY': -155.37373581838636,; 'DF-MP2 CORRELATION ENERGY': -0.523870772178089},; 'S22-16-monoA-unCP': {'CURRENT ENERGY': -78.29412053242164,; 'DF-MP2 CORRELATION ENERGY",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:4476,avail,available,4476,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['avail'],['available']
Availability,"--------. Second-order |MollerPlesset| Perturbation Theory (MP2) occupies a unique role; in quantum chemistry due to its small-prefactor :math:`{\cal O}(N^5)` treatment of; dynamic electron correlation. This unusually cheap; *ab initio* treatment of electron correlation may be made even more; efficient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic :math:`ov` products in the; bra- and ket- of the :math:`(ov|ov)`\ -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:2423,robust,robust,2423,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,1,['robust'],['robust']
Availability,"-------; ..; .. * Be in repo psicode-hugo-website; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/content/installs/v13rc2.md. Note the edition string ``v13rc2`` in frontmatter for this and future filenames; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; .. * Enter ``scripts/`` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; .. * Run the ``install-generator.py`` in place. It will dump new files into ``data/installs/`` _subdirs_. Be sure to ``git add`` them.; .. * Installer page is now ready.; .. * Shift ""latest"" alias in frontmatter from whichever page is currently active to the new page. This makes sure ""Downloads"" on the navigation bar points to new page.; .. * Conscientiously, one should test; ..; .. - installer downloads in Mac and Linux. And actually installing them and ``psi4 --test`` them.; .. - that download button and ``curl`` downloading register on the download counters on vergil; ..; .. * Commit the new files, PR, and deploy psicode site; .. * Petition on Slack for testers. Generate download page for psicode.org; --------------------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Copy and edit a new file akin to ``content/installs/v182.md``. Add it to the git index. - Note the edition string ``v182`` in frontmatter for this and future filenames.; - Don't postdate the date string in frontmatter or it won't render.; - Ultimately, make sure the ``aliases:\n - /installs/latest/`` lines are *added* to this new file; and *removed* from the previous latest file, but this can wait until the installer page has been tested. * Copy and edit a new file akin to ``data/installs/v182.yaml``. Add it to the git index. - Glance through the menu and notes",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:28555,down,downloads,28555,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downloads']
Availability,"-. |PSIfour| has a lot of dependencies, some of which are complicated; to build. Fortunately, conda can supply them all. A conda; package ``psi4-dev`` is available to gather the dependencies; and build tools needed to compiler |PSIfour| from source. Go to; :psicode:`installs/latest`, select ""source"" and ""nightly build"" along; with Linux/Mac and a Python version. Follow its instructions to create; a conda environment that has a script ``psi4-path-advisor``. Running; ``psi4-path-advisor --help`` shows more options. Running the script; without arguments gives a cmake command that supplies paths to dependency; conda packages to CMake's cache. You can add further cmake options to; this command when you execute it. Once the cmake command has built your; :samp:`{objdir}`, you can build |PSIfour|. Remember to activate this; conda environment during |PSIfour| running or development. There are a; few extra options to ``psi4-path-advisor`` to set up using conda's GNU; compilers (on Linux), conda's Clang compilers (on Mac; less reliably),; or your own Intel compilers backed by conda's GNU compilers (on Linux). .. code-block:: console. >>> git clone https://github.com/psi4/psi4.git && cd psi4; >>> conda create -n p4dev psi4-dev python=3.8 -c psi4/label/dev; >>> conda activate p4dev; >>> `psi4-path-advisor --gcc`; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`. .. _`faq:setupmaxameri`:. How to configure code to use high angular momentum basis sets; -------------------------------------------------------------. The :ref:`Libint <sec:libint>` integral code handles; arbitrary order angular momentum (AM), but compiling that is; prohibitive. The build process for Libint2 takes longer than; for Libint1, so it's recommended to :ref:`use the conda packages; <faq:condamaxameri>`. The AM controlling keyword ``MAX_AM_ERI``; has definition changed a little from Libint1. It is used to ensure; that conventional energies can use at least ``MAX_AM_ERI`` zeta. See; :source:`/external/upstream",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:15055,reliab,reliably,15055,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['reliab'],['reliably']
Availability,"-Gordon's wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model. :ref:`Double-Hybrid Functionals <table:dft_dhybrid>`; Double hybrids are percolating into |PSIfour|. Note that these are; only available with density-fitted, not conventional, MP2 algorithms. :ref:`-D Functionals <table:dft_disp>`; We have several -D2 functionals implemented. -D3 functionls are available; with the installation of Grimme's :ref:`DFTD3 program <sec:dftd3>`.; For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in |PSIfour| for correctness. If you find an error in a DFT; functional or have a request for a new functional, please let us know on our; forum or GitHub page. Grid Selection; ~~~~~~~~~~~~~~. |PSIfour| uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. ; The default grid in |PSIfour| is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights. Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the |scf__dft_spherical_points|; option, which may take one of the following values:. .. _`table:lebedevorder`:. +-----------------------------+-------+; | |sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:20413,avail,available,20413,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['avail'],['available']
Availability,"-QZVPPD |; +--------------+-------------+; | def2-mSVP | |; +--------------+-------------+; | def2-mTZVP | |; +--------------+-------------+; | def2-mTZVPP | |; +--------------+-------------+. |; |. .. _`table:basisJensen`:. .. table:: Summary of Jensen orbital basis sets available in |PSIfour|. +---------------+--------------+-----------+-------+------------------+; | basis set | no diffuse | augmented | tight | augmented, tight |; +===============+==============+===========+=======+==================+; | pcseg-N | 01234 [#f5]_ | | | |; +---------------+--------------+-----------+-------+------------------+; | aug-pcseg-N | | 01234 | | |; +---------------+--------------+-----------+-------+------------------+; | pcSseg-N | | | 01234 | |; +---------------+--------------+-----------+-------+------------------+; | aug-pcSseg-N | | | | 01234 |; +---------------+--------------+-----------+-------+------------------+. |; |. .. _`table:basisPetersson`:. .. table:: Summary of Petersson orbital basis sets available in |PSIfour|. +---------------+--------------+-----+; | basis set | augmented, tight |; +===============+==============+=====+; | nZaPa-NR | 234567 |; +---------------+--------------+-----+. |; |. .. _`table:basisOther`:. .. table:: Summary of other orbital basis sets available in |PSIfour|. +----------------+; | DZP |; +----------------+; | TZ2P |; +----------------+; | TZ2PF |; +----------------+; | Sadlej-LPol-ds |; +----------------+; | Sadlej-LPol-dl |; +----------------+; | Sadlej-LPol-fs |; +----------------+; | Sadlej-LPol-fl |; +----------------+. |; |. .. rubric:: Footnotes. .. [#f1] Corresponding basis set filenames have star replaced by ""s"", plus replaced by ""p"", and parenthesis and comma replaced by ""_"".; .. [#f2] The heavy-aug-cc-\ *stub* and jul-cc-\ *stub* basis sets are identical.; .. [#f3] The JKFIT basis sets are designed in the cc-\ *stub*\ (X+d)Z ; framework that includes an additional set of; *d*-functions for second-row *p*-block elements. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:18634,avail,available,18634,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amoun",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:6839,avail,available,6839,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,1,['avail'],['available']
Availability,"-\sum_{n=6,8} s_n \sum_{i,j>i}^{N_{at}} ; \frac{C_n^{ij}}{(R_{ij})^n} f_{damp}(R_{ij}); :label: DFTD3ZERO. .. math:: f_{damp}(R_{ij}) = \frac{1}{1 + 6 (R_{ij}/(s_{r,n} R_0^{ij}))^{- \alpha_n}}. A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]_. The parameters; fit for individual functionals are now :math:`s_6`, :math:`s_8`,; :math:`a_1`, and :math:`a_2`. .. math:: E_{disp}^{\text{D3BJ}}=-\sum_{n=6,8} s_n \sum_{i,j>i}^{N_{at}} ; \frac{C_n^{ij}}{(R_{ij})^n + (f_{damp})^n}. .. math:: f_{damp} = a_1 \sqrt{\frac{C_8^{ij}}{C_6^{ij}}} + a_2. All parameters characterizing the dispersion correction are taken from; `Grimme's website <https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/get-the-current-version-of-dft-d3>`_; or else from the literature.; With s-dftd3, parameters are also tabulated in the program source. Running DFTD3 or DFTD4; ~~~~~~~~~~~~~~~~~~~~~~. A number of *a posteriori* dispersion corrections are available in; |PSIfour|. While some are computed within |PSIfours| codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 or -D4 corrections and their variants are; available only through the ``DFTD3`` or ``DFTD4`` programs. Once installed, the; ``dftd3``/|PSIfour| and ``dftd4``/|PSIfour| interfaces are transparent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:11883,avail,available,11883,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability,"-known graphical unitary group CI program; (Bernie Brooks, 1977-78, now at N.I.H.), and the original integrals code; (Russ Pitzer, 1978, now at Ohio State). From 1978-1987, the package was; know as the {\tt BERKELEY} suite, and after the Schaefer group moved to the; Center for Computational Quantum Chemistry at the University of Georgia,; the package was renamed {\tt PSI}. Thanks primarily to the efforts of Curt; Janssen (Sandia Labs, Livermore) and Ed Seidl (LLNL), the package was; ported to UNIX systems, and substantially improved with new input formats; and a C-based I/O system. Beginning in 1999, an extensive effort was begun to develop \PSIthree\; --- a {\tt PSI} suite with a completely new face. As a result of this; effort, all of the legacy Fortran code was removed, and everything was; rewritten in C and C++, including new integral/derivative integral,; coupled cluster, and CI codes. In addition, new I/O libraries have; been added, as well as an improved checkpoint file structure and greater; automation of typical tasks such as geometry optimization and frequency; analysis. The package has the capability to determine wavefunctions,; energies, analytic gradients, and various molecular properties based on; a variety of theories, including spin-restricted, spin-unrestricted, and; restricted open-shell Hartree-Fock (RHF, UHF, and ROHF); configuration; interaction (CI) (including a variety of multireference CI's and full; CI); coupled-cluster (CC) including CC with variationaly optimized; orbitals; second-order M{\o}ller-Plesset perturbation theory (MPPT); including explicitly correlated second-order M{\o}ller-Plesset energy; (MP2-R12); and complete-active-space self-consistent field (CASSCF); theory. By January 2008, all of the C code in \PSIthree\ was ; converted to C++ to enable a path toward more object-oriented design; and a single-excecutable framework that will facilitate code reuse and ; ease efforts at parallelization. At this same time, all of the legacy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst:1585,checkpoint,checkpoint,1585,doc/sphinxman/source/attic/history.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/history.rst,1,['checkpoint'],['checkpoint']
Availability,". * Making a release or prerelease. * update all three fields of metadata.py (see below ex); * commit; * on master, make annotated tag starting with v. note the hash.; * run enough of build to make sure tag formatted properly and ""Defining {} version"" sane. # MUST update metadata.py on same commit at which make tag. git tag -a v1.0 d2243ef; git push origin v1.0; git push [remote] [tagname]. do NOT use the GitHub tagging interface - it creates lightweight tags. :source:`psi4/metadata.py`. __version__ = '1.0'; __version_long = '1.0+d2243ef'; __version_upcoming_annotated_v_tag = '1.1a1'. # Example current and upcoming tag pairs; # * '1.0', '1.1a1'; # * '1.0.4', '1.0.5' on maintenance branch 1.0.x; # * '1.1a1', '1.1b1'; # * '1.1rc2', '1.1'; # * '1.1', '1.2'. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_version.rst:678,mainten,maintenance,678,doc/sphinxman/source/prog_version.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_version.rst,1,['mainten'],['maintenance']
Availability,". Example: :srcsample:`cfour/dfmp2-1`. * :py:func:`~psi4.driver.wrapper_database.database` for computation of a collection of molecules in a; single input, with summarization of results. Examples:; :srcsample:`cfour/pywrap-db1` and :srcsample:`cfour/psi-a24-grad`. * :py:func:`~psi4.driver.cbs` for computation of compound methods involving; basis set extrapolations and/or delta corrections with any combination; of |PSIfour| and Cfour computational methods and |PSIfour| basis sets.; Example: :srcsample:`cfour/pywrap-cbs1`. .. rubric:: Not Yet Implemented. * Ground state CI energies and optimizations. * Excited state energies and optimizations. * Properties are not yet regex-ed, transformed into input frame, and; stowed in PSI Variables. * Property calls that required extra computation not yet translated into; :py:func:`~psi4.driver.properties` computation command. * Frequencies. Energy methods available through P4C4 interface. .. include:: cfour_table_energy.rst. Gradient methods available through P4C4 interface. .. include:: cfour_table_grad.rst. .. _`table:cfour_cc_program`:. .. notes on preferred modules from JFS; .. comment always abcdtype = aobasis (but sometimes ; .. comment ncc does rhf ccsdt(q); .. comment reccommended code to do with, not only code (b/c mrcc can do much of this); .. comment .. table:: Cfour coupled-cluster program defaults by calculation type; .. comment ; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment | | | | RHF | UHF | ROHF |; .. comment | | | +--------+--------+---------+; .. comment | Driver Call, |cfour__cfour_deriv_level| | name, |cfour__cfour_calc_level| | |cfour__cfour_excite| | |cfour__cfour_cc_program| |; .. comment +=========================================+=================================+=======================+========+========+=========+; .. comment | :py:func:`~psi4.energy`, zero | cc2 | none | vcc | vcc | vcc |; .. comme",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:29853,avail,available,29853,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability,". In each step of the SCF procedure, a new Fock or Kohn--Sham potential is built; according to the previous density, following which the potential is diagonalized; to produce new molecular orbitals, from which a new density is computed. This; procedure is continued until either convergence is reached or a preset maximum; number of iterations is exceeded. Convergence is determined by both change in; energy and root-mean-square change in density matrix values, which must be below; the user-specified |scf__e_convergence| and |scf__d_convergence|, respectively.; The maximum number of iterations is specified by the |scf__maxiter| option. It; should be noted that SCF is a chaotic process, and, as such, often requires; careful selection of initial orbitals and damping during iterations to ensure; convergence. This is particularly likely for large systems, metallic systems,; multireference systems, open-shell systems, anions, and systems with diffuse; basis sets. For initial orbital selection, several options are available. These include:. CORE; Diagonalization of the core Hamiltonian, removing even mean-field electron; repulsion. Simple, but often too far from the final solution for larger; systems. This is the default for single atoms.; SAD [:term:`Default <GUESS (SCF)>`]; Superposition of Atomic Densities. Builds the initial density as the; spin-averaged sum of atomic UHF computations in the current basis. If an; open-shell system, uniform scaling of the spin-averaged density matrices is; performed. If orbitals are needed (*e.g.*, in density fitting), a partial; Cholesky factorization of the density matrices is used. Often extremely; accurate, particularly for closed-shell systems. This is the default for; systems of more than one atom.; SADNO; Natural orbitals from Superposition of Atomic Densities. Similar; to the above, but it forms natural orbitals from the SAD density; matrix to get proper orbitals which are used to start the; calculation, see [Lehtola:2019:1593]_.;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:18549,avail,available,18549,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,". Iterate until builds and passes. This stage is the only full ctest & pytest on Psi4+upstream; .. * Build L/RT-MP. If any trouble, edit code in L/RT and rebuild those package(s). Iterate until builds and passes. This stage is the only full ctest & pytest of Psi4+downstream; .. * Build L/DEV. If any trouble, edit psi4 build system, plugin system, or OpenMP setup. Iterate until builds and passes; .. * Build L/DOCS. If any trouble, edit the docs or the tests. Iterate until builds and passes; .. * Results of last should upload to psicode.org (docs) and codecov.io (coverage); .. * Changes to targets' ""source"" and ""version"" in individual recipes should be edited in psi4 ``external/*/*/CMakeLists.txt`` files; .. * Once everything's working on Linux, repeat on Mac; .. * At this point, ready to fine-tune builds of ""Psi4 stack"". Assemble postrelease changes; ----------------------------. * Collect PRs with ""backport"" label, and request other backport suggestions through slack.; * Be on the maintenance branch (e.g., ``1.8.x``). ``git fetch upstream`` or any other remotes you're; going to be cherry-picking from.; * Cherry-pick backport PRs and commits (``git cherry-pick sha``), apply other changes manually, not; forgetting CI files or samples.; * Possibly apply other changes manually, including:. - CI file tweaks like LLVM version or dependency constraint.; - samples files from a docs build.; - :source:`doc/sphinxman/source/introduction.rst` for any compiler and Python minimum requirements to edit. * Tag it (`Tag postrelease`_ for details). This is needed to compute a version on a maintenance; branch to even run. Until the release is published on GH (final step of; `Publish GitHub postrelease`_), it's ok to revise a tag (force push to maintenance branch). - Add or increment patch number in ``psi4/metadata.py``; leave the ""z""s. Commit file.; - Tag with ``git tag -a v1.8.2 -m ""v1.8.2""``, then push ``git push --atomic upstream 1.8.x v1.8.2``. * Test core |PSIfour| thoroughly loca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:9177,mainten,maintenance,9177,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,". ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode and has something to do with the exponent boost chooses for; .. the default zero tolerance. Anyways, commenting out lines 47 to 49, for valgrind purposes, should; .. allow you to run valgrind. The consequence of commenting out these lines are you get no integeral; .. screening, so make sure you uncomment them when you actually run. .. _`faq:cmakeverbose`:. How to see the actual compiling commands (or errors) with ``cmake``; -------------------------------------------------------------------. CMake by default hides a lot of useful debugging information to make the; compilation cleaner. Issue ``make VERBOSE=1`` to display the full; compilation commands and errors. .. _`faq:vigitmerge`:. How to highlight git merge conflicts in ``vi``; ----------------------------------------------. Edit your ``~/.vimrc`` file to include the lines below. Hitting the ``F7``; key will toggle highlighting of git's conflict markers. .. code-block:: bash. >>> cat ~/.vimrc; set hlsearch; map <F7> :/\(<<<<<<<\\|=======\\|>>>>>>>\)<CR>. .. _`faq:libmwcondapy`:. How to handle ""runtime library may be hidden"" when building with Anaconda Python; --------------------------------------------------------------------------------. When building against Ana/Miniconda python (e.g., ``cmake; -DPython_EXECUTABLE=/path/to/conda/bin/python``), the warning below often; appears. It is harmless, proceed. .. code-block:: bash. CMake Warning at src/bin",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:56793,error,errors,56793,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['errors']
Availability,". library of S. Wouters, which is based at `GitHub; .. <https://github.com/SebWouters/CheMPS2>`_. Consult the excellent; .. `documentation <http://sebwouters.github.io/CheMPS2/>`_ for using and; .. `citing <http://sebwouters.github.io/CheMPS2/publications.html>`_ the library. .. image:: https://img.shields.io/badge/home-CheMPS2-5077AB.svg; :target: https://github.com/SebWouters/CheMPS2. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://sebwouters.github.io/CheMPS2/index.html. .. note:: As of late June 2016, DMRG keywords in |PSIfour| have been; realigned with those of the chemps2 executable, plus a; ""dmrg\_"" prefix. The only exceptions are the orbital space; |PSIfour| keywords |globals__restricted_docc| (formerly; CheMPS2 used |globals__frozen_docc|, contrary to its; definition) and |globals__active| which are passed along to; CheMPS2 keywords ``NOCC`` and ``NACT``. A `translation table; <https://github.com/psi4/psi4/issues/150#issuecomment-228951911>`_; is available. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://img.shields.io/badge/Anaconda%20Cloud-1.7.1-5077AB.svg; :target: https://anaconda.org/psi4/chemps2. * CheMPS2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, CheMPS2 has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; CheMPS2 can be obtained through ``conda install chemps2``.; Then enable it as a feature with :makevar:`ENABLE_CheMPS2`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect CheMPS2 and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. Libint from conda without thinking, consult. * To remove a conda installation, ``conda remove chemps2``. **Source**. * .. image:: https://img.shields.io/github/tag/Seb",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst:2449,avail,available,2449,doc/sphinxman/source/chemps2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst,1,['avail'],['available']
Availability,". sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:cfour>`, :ref:`PSI Variables <apdx:cfour_psivar>`, :ref:`Samples <apdx:testSuitecfour>`. |PSIfour| contains code to interface to the Cfour quantum chemistry suite of; John F. Stanton (U. Texas, Austin) and J\ |u_dots|\ rgen Gauss (U. Mainz),; which is available after a license agreement from ; `http://www.cfour.de/ <http://www.cfour.de/>`_. Installation; ~~~~~~~~~~~~. Follow the instructions provided with the Cfour download to install the; executable or to build the source. To by used by |PSIfour|, the program; binary (:program:`xcfour`) must be found in your :envvar:`PATH` or; :envvar:`PSIPATH`. The ``GENBAS`` file containing basis sets in Cfour; format is not necessary for this interface, but if you prefer to access; basis sets the ""Cfour way"" using a custom ``GENBAS`` file (the distributed; one is included with the interface), it, too, must be in :envvar:`PATH` or; :envvar:`PSIPATH`. If |PSIfour| is unable to execute the binary, an error; will be reported. .. .. caution:: The p4c4 interface isn't in the master branch nor will it be in; .. the near future. To run this code, (1) build the ``c4`` branch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. python module and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcdb is what needs to be imported in preference to the one; .. already in psi4). Execute psi4 as usual. .. caution:: The p4c4 interface hasn't been fully adapted for the new March 2014 version. Cfour for |PSIfour| Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. * Set memory as usual. * Set molecule as usual. * Set basis set as usual (Cfour only cares about orbital basis, no fitting; bases). * Set the task as usual, indicating Cfour as the intended code by; prepending ""c4-"" to the method argument. So ``energy('scf')`` become",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:2232,error,error,2232,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['error'],['error']
Availability,".. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:bestPractices_py`:. Best Practices for Python Functions; ===================================. - Thy python functions shall always have final argument \*\*kwargs, that they may take in and pass on keywords meant for other functions. Yea, even the run_mcscf(), and run_ccsd() -type functions that have no use for kwargs. The exceptions are python functions that are only helpers called by a driver function. - Python functions should read the kwargs dictionary and (possibly) add to it. Functions should not pop or remove keywords from kwargs, even those keywords meaningful only to itself. This will ensure that the complete kwargs is available for pickling and sow/reap procedures. The exception is the molecule argument, which is read by the first function that gets ahold of it. This first function activates the molecule and pops it out of kwargs, effectively setting molecule for all subsequent functions. The code below should suffice. ::. # Make sure the molecule the user provided is the active one; if 'molecule' in kwargs:; activate(kwargs['molecule']); del kwargs['molecule']; molecule = psi4.get_active_molecule(); molecule.update_geometry(). - Preferrably, the python function signature (for functions intended to be called in input files) is ``function(name, **kwargs)``. For functions that have other positional keywords, please bundle them into kwargs at earliest convenience (see :ref:`sec:db()` argument db_name for example). - After the docstring, the first two lines of your function should be the ones below. The first provides a case insensitive handle to the name argument value. The second converts all the kwarg",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst:1704,avail,available,1704,doc/sphinxman/source/attic/bestpractices_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/bestpractices_py.rst,1,['avail'],['available']
Availability,".. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: gau2grid, collocation. .. _`sec:gau2grid`:. Interface to gau2grid by D. G. A. Smith; =======================================. .. codeauthor:: D. G. A. Smith; .. sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <src/lib/libefp_solver>`. .. image:: https://img.shields.io/badge/home-gau2grid-5077AB.svg; :target: https://github.com/dgasmith/gau2grid. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/dgasmith/gau2grid/blob/master/README.md. |PSIfour|, relies upon the gau2grid library for Gaussian collocations for DFT. gau2grid; requires no; additional licence, downloads, or configuration. Conversely, |Psifour|; cannot build *without* gau2grid. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/gau2grid/badges/version.svg; :target: https://anaconda.org/psi4/gau2grid. * gau2grid is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, gau2grid has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; gau2grid can be obtained through ``conda install gau2grid -c psi4``.; Then, hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect gau2grid and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. gau2grid from conda without thinking, consult. * To remove a conda installation, ``conda remove gau2grid``. **Source**. * .. image:: https://img.shields.io/g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gau2grid.rst:1776,down,downloads,1776,doc/sphinxman/source/gau2grid.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gau2grid.rst,1,['down'],['downloads']
Availability,".. #; .. # @BEGIN LICENSE; .. #; .. # Psi4: an open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. _`sec:methods`:. ===============================; Theoretical Methods: SCF to FCI; ===============================. Several electronic structure methods are available in the |PSIfour|; package, from Hartree--Fock molecular orbital theory to coupled-cluster; theory to full configuration interaction. This section introduces; the methods available and some of their most common input parameters.; A complete list of standard keywords is provided in Appendix; :ref:`apdx:options_c_module`. .. toctree::; :maxdepth: 2. capabilities; notes_c; scf; dft; dftnl; dct; dfmp2; dlpnomp2; cc; fnocc; occ; psimrcc; detci; mcscf; sapt; fisapt; adc; relativistic; optking; oeprop; thermo; tdscf; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/methods.rst:1180,avail,available,1180,doc/sphinxman/source/methods.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/methods.rst,2,['avail'],['available']
Availability,".. #; .. # @BEGIN LICENSE; .. #; .. # Psi4: an open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. index:: basis set; available by element; .. _`apdx:basisElement`:. Basis Sets by Element; =====================. |; |. .. comment This toctree directive only here to suppress warning at build time.; include line below is doing the work. .. toctree::; :hidden:. autodoc_psi4bases. .. include:: autodoc_psi4bases.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_byelement.rst:1042,avail,available,1042,doc/sphinxman/source/basissets_byelement.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_byelement.rst,1,['avail'],['available']
Availability,".. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use this dictionary to store the; counterpoise-corrected energies as they become available. A dictionary is; like an array, but we can index it using strings or floating-point numbers; instead of integers if we want. Here, we will index it using; floating-point numbers, namely, the ``R`` values. This winds up being; slightly more elegant than a regular array in later parts of the input; file. The next section, beginning with ``for R in Rvals:``, loops over the; interatomic distances, ``R``, in our array ``Rvals``. In Python,; loops need to be indented, and each line in the loop has to be indented; by the same amount. The first line in the loop, ``dimer.R = R``,; sets the Z-matrix variable ``R`` of the molecule called ``dimer``; to the ``R`` value extracted from the ``Rvals`` array. The next line,; ``ecp[R] = energy('ccsd(t)', bsse_type='cp')``, computes the counterpoise-corrected; CCSD(T) energy and places it in the ``ecp`` dictionary with ``R`` as; the index. Note we didn't need to specify ghost atoms, and we didn't need;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:20301,avail,available,20301,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['avail'],['available']
Availability,".....................................PASSED. .. _`faq:runfrombinary`:. How to run Psi4 as executable or Python module from conda installation; ----------------------------------------------------------------------. The configuration commands below are generic versions of the ones printed; to your screen as advice upon installing |PSIfour| into a Anaconda,; Miniconda, or Psi4conda distribution, :samp:`{condadist} =; {ana|mini|psi4}conda`. To see the message again after initial installation,; with the conda environment active, run ``.psi4-post-link.sh``.; If ``which conda python psi4`` points to your; :samp:`{condadist}` and ``echo $PSI_SCRATCH`` is set, skip ahead to the; ""Run |PSIfour|\"" commands below. Otherwise, issue the following; commands directly in your terminal or place them into your ""rc"" file and; open a new terminal. If you installed the Psi4conda distribution or installed the |PSIfour|; conda package into the main environment of an Anaconda or Miniconda; distribution and added that to your :envvar:`PATH`, as prompted, then; ``which psi4`` likely yields :samp:`{condadist}/bin/psi4` and the ``PATH``; setting lines below are redundant. If you installed into a conda environment :samp:`{p4env}` and performed; :samp:`conda activate {p4env}`, then ``which psi4`` likely yields; :samp:`{condadist}/envs/{p4env}/bin/psi4` and the ``PATH`` setting lines; below are redundant. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; unsetenv PSIDATADIR; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Mini",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:31641,redundant,redundant,31641,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['redundant'],['redundant']
Availability,".2.tar.gz | openssl sha256``; - Always: edit ``build/number``. Either reset to 0 if version increments or bump if version *doesn't* increment.; - Possibly: uncomment ``skip: true # [py != 310]`` if you want to test one Python version on all; architectures before the whole build matrix (currently 16 builds). After editing this (and; opening the PR), you'll have to issue a comment ``@conda-forge-admin, please rerender`` for the; matrix slimming to take effect.; - Possibly: remove any old patches that are now in the main codebase.; - Possibly: add in or remove any dependency or ecosystem packages.; - Possibly: for any relevant addition, make sure ``-D CMAKE_INSIST_FIND_PACKAGE_<project>=ON`` or; ``-D ENABLE_<project>=ON`` is set in ``build.sh`` and ``bld.bat``.; - Possibly: add or release version constraints or architecture constraints (e.g., ``[not win]``) on packages. * Submit the PR and rerender (cmd above). Monitor the CI.; * When all CI lanes are passing *and* the tag is final on the maintenance branch, rerender (may be; no-op) and merge the PR.; * After all the packages are built on main and show up at https://anaconda.org/conda-forge/psi4/files; with a couple downloads, this means they're been mirrored and are generally installable. Announce; on slack general channel. Do final pass before release tag; --------------------------------. * Check that :source:`external/` repos and commits have been updated to match conda recipes sources. Also check versions with ``conda_build_config.yaml``; * Check :source:`doc/sphinxman/source/introduction.rst` for any compiler and Python minimum requirements to edit. Tag (pre)release; ----------------. * Thorough version bump directions at master http://psicode.org/psi4manual/master/manage_git.html#how-to-bump-a-version; * Below is tl;dr. ::. # be on clean master up-to-date with upstream in both commits and tags; # * mind which version strings get ""v"" and which don't; # * if not fork, replace ""upstream"" with ""origin"". >>> vi psi4/",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:12952,mainten,maintenance,12952,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,".org/>`_; and lives in :source:`doc/sphinxman`. It is available online at; `<http://psicode.org/psi4manual/master/index.html>`_; for the latest development branch. Installing Sphinx; ^^^^^^^^^^^^^^^^^. Installing Sphinx is only necessary to build the documentation ; yourself, locally. The docs are served from; from psicode, so most users and developers won't need Sphinx; installed. Nevertheless, installation is easy.; Math is rendered through MathJax, so LaTeX and dvipng are no longer needed.; The sphinx executable should be in your path at CMake configure time for; documentation targets to be available. * Binary: ``conda install sphinx``; * Binary: ``conda env create -f devtools/conda-envs/docs-cf.yaml``; * Binary: ``pip install -U Sphinx``; * Source: https://pypi.org/project/Sphinx/. * Check:. >>> which sphinx-build; //anaconda/bin/sphinx-build; >>> sphinx-build --version # needs >= 3.5; Sphinx (sphinx-build) 3.5.3; >>> cmake; ...; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); ... Documentation Structure; ^^^^^^^^^^^^^^^^^^^^^^^. Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in the same; format, hyperlinking within and to external websites, and generating; documentation in different formats from the same source. |PSIfours|; documentation is a unified document covering information for both users; and programmers in separate sections. From the top-level object directory,; build the following target (note that a working version of the |PSIfour|; executable is a requirement for building the; documentation). Only GNU Makefiles, not Ninja, works for the docs:. .. code-block:: console. >>> make sphinxman; # -OR-; >>> cmake --build . --target sphinxman. This will build a full set of documentation in the ``html`` directory that can be viewed offline through any browser. ::. doc/sphinxman/html/index.html; ; Much of the documentat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst:2242,avail,available,2242,doc/sphinxman/source/documentation.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst,1,['avail'],['available']
Availability,"/.condarc`` file. .. code-block:: bash. >>> conda config --add channels http://conda.anaconda.org/psi4; # check; >>> cat ~/.condarc; channels:; - http://conda.anaconda.org/psi4; - defaults. 6. Install |PSIfour|. You can install into the main conda environment so that whenever commands ``conda`` or (Ana/Miniconda's) ``python`` are available, then ``psi4`` is available, too. .. code-block:: bash. >>> conda install psi4; # check; >>> which psi4; /path/to/miniconda/bin/psi4. Or, you can install into a `conda environment <https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#>`_ that places |PSIfour| and its dependencies (including python) into a sandbox unaffected by any other software installed in Ana/Miniconda. This is recommended for developers to avoid interference between multiple versions (including github/conda versions) or to test python versions, *etc.*. In practical terms, installing into a conda environment means you can turn |PSIfours| availability on/off by switching conda environments without turning on/off the whole Ana/Miniconda installation. Below, |PSIfour| is installed into an environment called ``p4env``. Then the environment is activated, removing the main Ana/Miniconda ``bin`` and adding ``envs/p4env/bin`` to :envvar:`PATH`. The ``conda activate`` command (conda >=4.4; December 2017) works in all shells, but if you're using old ``source activate`` that only works for ``bash``; adjust as needed for ``csh``/``tcsh``. .. code-block:: bash. >>> conda create -n p4env psi4; >>> conda activate p4env; # check; >>> which psi4; /path/to/miniconda/envs/p4env/bin/psi4. .. The output for either of the installation commands above looks like the following. It checks what packages are needed, gets your approval for downloading them, fetches and installs them, prints out some useful information, and runs a |PSIfour| test case to check that all's well.; ..; .. .. code-block:: bash; ..; .. >>> conda install psi4; .. Using Anaconda Cloud a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:21801,avail,availability,21801,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['avail'],['availability']
Availability,"/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481823,error,error,481823,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. It works because :envvar:`PSI_SCRATCH`; defaults to ``/tmp``. Now you need only specify a permanent scratch; directory (see :ref:`sec:Scratch`) by replacing the placeholder in the; following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. Configuration for this set-up is summarized at :ref:`faq:runfrombinary`. .. note:: |PSIfour| installs a Python distribution alongside, so you should ch",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:5933,down,downloaded,5933,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloaded']
Availability,"0, 1, 0]. in the input file. If any ensuing computations lower the symmetry, the above; array will be appropriately remapped. For example, reducing the symmetry to; :math:`C_s` (with the molecular plane defining the mirror plane), the above; array will be automatically interpreted as::. SOCC = [0, 1]. Some caution is required, however. The :math:`^2A_1` state can be obtained with; the ::. SOCC = [1, 0, 0, 0]. specification, which would become ::. SOCC = [1, 0]. under the above-mentioned reduction in symmetry. The :math:`^2B_2` state,; whose singly-occupied orbitals are ::. SOCC = [0, 0, 0, 1]. would be mapped to ::. SOCC = [1, 0]. which is the same occupation as the :math:`^2A_1` state. In this case, the; :math:`^2A_1` state is lower in energy, and is not problematic. The distorted; geometries for the :math:`^2B_2` state are excited states that are subject to; variational collapse. One way to obtain reliable energies for these states is; to use a multi-state method; in this case it's easier to run the entire; computation in the lowest symmetry needed during the finite difference; procedure. .. index:: molecule; multiple fragments; .. _`sec:fragments`:. Non-Covalently Bonded Molecule Fragments; ========================================. |PSIfour| has an extensive range of tools for treating non-covalent; intermolecular forces, including counterpoise corrections and symmetry adapted; perturbation theory methods. These require the definition of which fragments; are interacting within the complex. |PSIfour| provides a very simple mechanism; for doing so: simply define the complex's geometry using the standard; Cartesian, Z-matrix, or mixture thereof, specifications and then place two; dashes between nonbonded fragments. For example, to study the interaction; energy of ethane and ethyne molecules, we can use the following molecule; block::. molecule eneyne {; 0 1; C 0.000000 -0.667578 -2.124659; C 0.000000 0.667578 -2.124659; H 0.923621 -1.232253 -2.126185; H -0.923621 -1.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:18215,reliab,reliable,18215,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['reliab'],['reliable']
Availability,"01. OS MP4(SDQ) correlation energy: -0.180324322304; SS MP4(SDQ) correlation energy: -0.048798468084; MP4(SDQ) correlation energy: -0.230995119324; * MP4(SDQ) total energy: -76.266684566910. OS QCISD correlation energy: -0.181578117924; SS QCISD correlation energy: -0.049853548145; QCISD correlation energy: -0.231431666069; * QCISD total energy: -76.267121113654. The first set of energies printed corresponds to the second-order FNO ; correction mentioned previously. Results for many-body perturbation ; theory through partial fourth order are then provided.; The notation MP4(SDQ) indicates that we have included all contributions to; the correlation energy through fourth order, with the exception of that; from connected triple excitations. . One need not run a full QCISD or CCSD computation to obtain these; perturbation theory results. The keywords for invoking perturbation; theory computations are given below in; Table :ref:`FNOCC Methods <table:fnocc_methods>`. Full MP4 correlation; energies are also available. .. _`sec:fnocepa`:. Coupled electron pair approximation; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Coupled-pair methods can be viewed as approximations to CCSD or as; size-extensive modifications of CISD. The methods have the same; complexity as CISD, and solving the CISD or coupled-pair equations; requires fewer floating point operations than solving the CCSD. CISD,; CCSD, and the coupled-pair methods discussed below all scale formally with; the sixth power of system size, and, as with the QCISD method, CEPA; methods retain :math:`{\cal{O}}(o^2v^4)` complexity of the CCSD equations.; For a detailed discussion of the properties of various coupled-pair; methods, see [Wennmohs:2008:217]_\. What follows is a very basic description of the practical differences in; the equations that define each of the coupled-pair methods implemented in; |Psifour|. We begin with the CISD wave function. .. math::; :label: CIwfn. | \Psi \rangle = | \Psi_0 \rangle + \sum_i^{occ} \sum_a^{v",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:8575,avail,available,8575,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['avail'],['available']
Availability,"084139850 0.0000000000 2.1841068002; H -1.7084139850 -0.0000000000 2.1841068002; }. set basis aug-cc-pvdz; set rms_force_g_convergence 6; set cfour_abcdtype aobasis; set cfour_scf_conv 12; set cfour_cc_conv 12; set cfour_lineq_conv 12. optimize('c4-ccsd(t)'). The utility of this method specification is that examination can be made; of the reference, the derivative level, the excitation level, *etc.* and; some options can be set according to best practices. Practically speaking,; |cfour__cfour_cc_program| (and eventually |cfour__cfour_abcdtype|) will; always be set to the :ref:`fastest safe value <table:cfour_cc_program>`.; For example, the input above will run with |cfour__cfour_cc_program|\ =ECC; unless explicitly set to VCC. An advantage of |PSIfours| Python driver is that any number of common; work-up procedures can be automated and wrapped around the; conventional single-point and optimization procedures at the heart of all; quantum chemistry codes. Three core ""wrappers"" available in |PSIfour| are; :py:func:`~psi4.driver.driver_nbody.nbody`,; :py:func:`~psi4.driver.wrapper_database.database`, and; :py:func:`~psi4.driver.cbs`; read their respective sections; for details, but an overview is provided here. :py:func:`~psi4.driver.driver_nbody.nbody`; computes the interaction energy of a bimolecular complex (counterpoise-corrected,; not, or both). ::. molecule dimer {; Ne; --; Ne 1 R; symmetry c1; }; ; Rvals=[2.5, 3.0, 4.0]; set basis aug-cc-pVDZ; ; for R in Rvals:; dimer.R = R; ecp = cp('c4-mp2'); print_stdout('R [A] = %.1f IE [kcal/mol] = %.3f\n' % (R, psi_hartree2kcalmol * ecp)); ; yields ::. R [A] = 2.5 IE [kcal/mol] = 0.804; R [A] = 3.0 IE [kcal/mol] = 0.030; R [A] = 4.0 IE [kcal/mol] = -0.014. Next, the :py:func:`~psi4.driver.wrapper_database.database` wrapper allows any computational; model chemistry to be applied a predefined collection of molecules. Thus; an input ::. set {; basis jun-cc-pvdz; d_convergence 9; }; ; database('c4-mp2','nbc10',cp='on',subset='Me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:15621,avail,available,15621,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability,"1 A->A (1 A) 0.26945 7.33199 -150.50964 0.0017 0.0082 -0.0019 -0.0135; 2 A->A (1 A) 0.31534 8.58073 -150.46375 0.0000 0.0002 -0.0007 -0.0096; 3 A->A (1 A) 0.35760 9.73076 -150.42148 0.0040 0.0097 0.0227 0.0352; 4 A->A (1 A) 0.37522 10.21028 -150.40386 0.0144 0.0442 0.0729 0.1223; 5 A->A (1 A) 0.43252 11.76960 -150.34656 0.0890 0.1189 -0.1942 -0.2491; 6 A->A (1 A) 0.46952 12.77624 -150.30957 0.0640 0.1157 0.0175 0.0235; 7 A->A (1 A) 0.49186 13.38426 -150.28722 0.0016 0.0012 -0.0243 -0.0212; 8 A->A (1 A) 0.50405 13.71581 -150.27504 0.4557 0.4396 -0.0197 -0.0158; 9 A->A (1 A) 0.52971 14.41407 -150.24938 0.0799 0.0948 0.0546 0.0595; 10 A->A (1 A) 0.56083 15.26092 -150.21825 0.0497 0.0567 -0.0587 -0.0650. The solvers can be used to extract the first few roots of interest for the full; time-dependent DFT (TDDFT) equations, also known as the random-phase; approximation (RPA), or its Tamm--Dancoff approximation.; The former is a *generalized* eigenvalue problem and our solver leverages; the Hamiltonian structure of the equations to ensure robust convergence [stratmann:1998]_.; The latter is a Hermitian eigenvalue problem and we employ a Davidson solver. Known limitations; ~~~~~~~~~~~~~~~~~. .. warning:: The implementation cannot currently handle the following cases:; - Functionals with meta or VV10 components. .. warning:: The length-gauge rotatory strengths |PSIfour| computes are; currently **not** gauge-origin invariant. .. index::; pair: TDSCF; theory. Theory; ~~~~~~. The excitation energies and corresponding states are obtained from the following generalized; eigenvalue problem, also known as the *response eigenvalue problem*:. .. math::; \begin{pmatrix}; \mathbf{A} & \mathbf{B} \\; \mathbf{B}^{*} & \mathbf{A}^{*}; \end{pmatrix}; \begin{pmatrix}; \mathbf{X}_{n} \\; \mathbf{Y}_{n}; \end{pmatrix}; =; \omega_{n}; \begin{pmatrix}; \mathbf{1} & \mathbf{0} \\; \mathbf{0} & -\mathbf{1}; \end{pmatrix}; \begin{pmatrix}; \mathbf{X}_{n} \\; \mathbf{Y}_{n}; \end{pmatrix}. This appro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst:4761,robust,robust,4761,doc/sphinxman/source/tdscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst,1,['robust'],['robust']
Availability,"11.; |PSIfour| 1.9 supports Python 3.8, 3.9, 3.10, 3.11, and 3.12.; The future plan is to (1) be compatible with 3.8 and above until there is a good reason to drop; older versions but (2) only build and test for versions conda-forge supports.; The current master supports 3.8, 3.9, 3.10, 3.11, and 3.12. .. index:: license. License; =======. |PSIfour| is distributed under the GNU Lesser General Public License; version 3, `LGPL-3.0 <https://opensource.org/licenses/LGPL-3.0>`_. Its; required dependencies and add-ons have their own licenses, ranging from; BSD-2-Clause to GPL-2.0+. It is possible to build |PSIfour| without any; General GPL dependencies. Capabilities; ============. |PSIfour| can perform *ab initio* computations employing basis; sets of contracted Gaussian-type functions of virtually arbitrary; orbital quantum number. Many parts of |PSIfour| can recognize and; exploit the largest Abelian subgroup of the molecular point group.; Table :ref:`Methods <table:methods>` displays the range of theoretical methods; available in |PSIfour|. Geometry optimization can be performed using either analytic gradients; or energy points. Likewise, vibrational frequencies can be; computed by analytic second derivatives, by finite; differences of analytic gradients, or by finite differences of energies.; |PSIfour| can also compute an extensive list of one-electron properties. For more tables with capabilities details:. * :ref:`Full Capabilities <table:methods>` (first below) lists all methods; * :ref:`Capabilities Breakdown <table:stdsuite>` (second below) lists selected methods by reference, etc.; * :ref:`Module Capabilities <table:managedmethods>` lists selected methods by implementation; * :ref:`Energy <table:energy_gen>`, :ref:`Energy (DFT) <table:energy_dft>`, :ref:`Energy (MRCC) <table:energy_mrcc>`, :ref:`Energy (CFOUR) <table:energy_cfour>` fully list energy target methods; * :ref:`Gradient <table:grad_gen>`, :ref:`Gradient (CFOUR) <table:grad_cfour>` fully list gradient t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:29241,avail,available,29241,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"2. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy. Small density values can introduce numerical instabilities with some functionals that; can result in trailing SCF convergence issues or even numerical failures (NaNs).; If the default settings of the LibXC library are insufficient, a custom value can be ; request by setting |scf__dft_density_tolerance|. For notorious cases a value of 1E-10; is sensible. An example of a fully specified grid is as follows::. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_density_tolerance 1.0E-10 # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; dft_pruning_scheme robust # Generally safe and will speed things up; }. energy('b3lyp'). ERI Algorithms; ~~~~~~~~~~~~~~. The ERI algorithms for the Coulomb and hybrid exchange are identical to; :ref:`those for Hartree--Fock <sec:scferi>`. However, for LRC functionals, the long-range; exchange contributions to the Kohn--Sham matrix have only been implemented in the; DF and DIRECT algorithms. The use of DF is highly recommended for KS-DFT, as the; errors incurred by the density fitting approximation (in a proper -JKFIT; auxiliary basis) are orders of magnitude smaller than the accuracy of any known; functional. Key representative methods supported by the SCF module in |Psifour| are; detailed in Table :ref:`SCF Capabilities <table:scf_stdsuite>`. Note; from :ref:`table:conv_scf` that these SCF-level methods default to; density-fitted reference; use |globals__scf_type| to select an alternate; algorithm. SCF-level methods have no alternate implementations. .. include:: autodoc_capabilities_scf.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:27159,error,error,27159,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,2,"['error', 'robust']","['error', 'robust']"
Availability,"200 basis functions, the cube; files for all the orbitals occupy more than half a GB. Keywords; --------. .. include:: autodir_options_c/globals__cubeprop_tasks.rst; .. include:: autodir_options_c/globals__cubeprop_filepath.rst; .. include:: autodir_options_c/globals__cubeprop_orbitals.rst; .. include:: autodir_options_c/globals__cubeprop_basis_functions.rst; .. include:: autodir_options_c/globals__cubic_grid_spacing.rst; .. include:: autodir_options_c/globals__cubic_grid_overage.rst. Orbital Visualization with VMD; ==============================. Included in |PSIfour| is functionality to automatically render specified surfaces, including molecular orbitals,; densities, and basis functions, using VMD. The vmd_cube.py script takes the .cube files generated; in a calculation and generates images aligned with user-input specifications. The script is located; in :source:`psi4/share/psi4/scripts/vmd_cube.py`. Script Prerequisites; --------------------. 1. VMD must be installed, and it can be downloaded for free at (http://www.ks.uiuc.edu/Research/vmd/). Additionally,; the script needs to know where to find the VMD executable, and this is defined as :envvar:`VMDPATH`. VMDPATH must be defined as; an environment variable. 2. To generate images with multiple surfaces, ImageMagick must also be installed. ImageMagick is a free program which; can be installed using homebrew/pip or from http://www.imagemagick.org/script/binary-releases.php . 3. With ImageMagick installed, an environment variable called :envvar:`MONTAGE` needs to be created which points to the montage executable.; This executable can be found in the /bin/ sub-directory wherever ImageMagick was installed. .. envvar:: VMDPATH. Filesystem path to the VMD executable. .. envvar:: MONTAGE. Filesystem path to the Montage executable of ImageMagick. Running the Script; ------------------. 1. Run a |PSIfour| calculation, generating .cube files as detailed in the above documentation. 2. Add vmd_cube.py to your path. Call vmd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst:7418,down,downloaded,7418,doc/sphinxman/source/cubeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst,1,['down'],['downloaded']
Availability,"2014.html>`_; are also automatically loaded as Psithon; variables (before |psirc| is loaded, so that the user's |psirc| values can; override the builtins (in the input file, not in the C++ code). The physical constants used within |PSIfour|, which are automatically; made available within all |PSIfour| input files are in :ref:`table:physconst`. .. .. literalinclude:: @SFNX_INCLUDE@psi4/driver/constants/physconst.py; .. :lines: 28-. In Psithon input files, prepend physical constants with ``psi_`` to; prevent clashes with user-defined variables (*e.g.*, ``psi_h``). In; PsiAPI mode, access as, *e.g.*, ``psi4.constants.h``. .. index:: memory; .. _`sec:memory`:. Memory Specification; ====================. By default, |PSIfour| assumes that 500 MiB of memory are available. While this is; enough for many computations, many of the algorithms will perform better if; more is available. To specify memory, the ``memory`` keyword should be used. The following; lines are all equivalent methods for specifying that 2 GB of RAM is available; to |PSIfour|::. # all equivalent. memory 2 GB; ; memory 2000 MB; ; memory 2000000 kB. Please note that memory can be specified both in IEC binary units (1 KiB = 1024 bytes) and SI units (1 kB = 1000 bytes). |PSIfour| recognizes and obeys both of them correctly. The units are not case sensitive (Kb and KB are equivalent to kB). By default, |PSIfour| performs a ""sanity check"" when parsing Psithon input files, enforcing a minimum memory requirement of 250 MiB. While it is generally not recomennded to do so, expert users can bypass this check by directly setting the number of bytes availble to |PSIfour|::. # setting available memory to 2 MB; set_memory_bytes(2000000). Please note that this memory setting only governs the maximal memory; usage of the major data structures, and actual total memory usage; is slightly higher. This is usually a negligible amount, except when; setting tiny memory allowances. One convenient way to override the |PSIfour| def",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:3665,avail,available,3665,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"3 / kg^-1 s^-2. which would make the variable ``UGC`` available in all |PSIfour| input files.; For convenience, the physical constants used within the |PSIfour| code (which; are obtained from `NIST CODATA 2014; <https://physics.nist.gov/cuu/Constants/archive2014.html>`_; are also automatically loaded as Psithon; variables (before |psirc| is loaded, so that the user's |psirc| values can; override the builtins (in the input file, not in the C++ code). The physical constants used within |PSIfour|, which are automatically; made available within all |PSIfour| input files are in :ref:`table:physconst`. .. .. literalinclude:: @SFNX_INCLUDE@psi4/driver/constants/physconst.py; .. :lines: 28-. In Psithon input files, prepend physical constants with ``psi_`` to; prevent clashes with user-defined variables (*e.g.*, ``psi_h``). In; PsiAPI mode, access as, *e.g.*, ``psi4.constants.h``. .. index:: memory; .. _`sec:memory`:. Memory Specification; ====================. By default, |PSIfour| assumes that 500 MiB of memory are available. While this is; enough for many computations, many of the algorithms will perform better if; more is available. To specify memory, the ``memory`` keyword should be used. The following; lines are all equivalent methods for specifying that 2 GB of RAM is available; to |PSIfour|::. # all equivalent. memory 2 GB; ; memory 2000 MB; ; memory 2000000 kB. Please note that memory can be specified both in IEC binary units (1 KiB = 1024 bytes) and SI units (1 kB = 1000 bytes). |PSIfour| recognizes and obeys both of them correctly. The units are not case sensitive (Kb and KB are equivalent to kB). By default, |PSIfour| performs a ""sanity check"" when parsing Psithon input files, enforcing a minimum memory requirement of 250 MiB. While it is generally not recomennded to do so, expert users can bypass this check by directly setting the number of bytes availble to |PSIfour|::. # setting available memory to 2 MB; set_memory_bytes(2000000). Please note that this memory ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:3402,avail,available,3402,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"3.9"". .. _`faq:runtimepython`:. What Python is Psi4 running; ---------------------------. The Python detected at build-time is embedded into the |PSIfour|; executable. That is, the top line of ``bin/psi4`` is something like; ``#!/path/to/miniconda/envs/p4deps/bin/python3.5``, and that's the Python; through which |PSIfour| is running, rather than the Python of ``which python``.; To use a different Python with |PSIfour| in the short term, just; ``path/to/desired/python psi4`` on the command line to override the; shebang line. To use a different Python with |PSIfour| in the long term,; edit the shebang line. If you're using |PSIfour| as a Python module, then |PSIfour| *is* running; the Python of ``which python``. .. _`faq:wrongpyfalse`:. How to fix ""``undefined symbol: _Py_FalseStruct``""; --------------------------------------------------. You're probably loading a Py3-compiled Psi4 in Py2. Switch interpreters; and re-run. A python of proper Py2 or Py3-ness is baked into the |PSIfour|; ""executable"", so you'll see this error only for Psi4 as Python module. .. _`faq:gdblldb`:. How to use ``gdb`` and ``lldb`` with Psi4; -----------------------------------------. Debugging |PSIfour| has gotten a little confusing now that it's running through Python. Here's the syntax ::. >>> cd {objdir}; >>> lldb -- python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (lldb) run. ::. >>> cd {objdir}; >>> gdb --args python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (gdb) run. .. .. _`faq:valgrindpsi`:; .. ; .. How to use ``valgrind`` with Psi4; .. ---------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:54737,error,error,54737,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['error']
Availability,"34927 <https://doi.org/10.1063/1.2834927>`_). Mk-MRPT2. * ""A Companion Perturbation Theory for State-specific; Multireference Coupled Cluster Methods,""; F. A. Evangelista, A. C. Simmonett, H. F. Schaefer, D. Mukherjee, and; W. D. Allen,; *Phys. Chem. Chem. Phys.* **11**, 4728-4741 (2009).; (doi: `10.1039/b822910d <https://doi.org/10.1039/b822910d>`_). Symmetry-Adapted Perturbation Theory (SAPT); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. |PSIfour| features an extremely efficient code to perform wavefunction-based; Symmetry Adapted Perturbation Theory (SAPT). A good review article for this; method is as follows:. * ""Perturbation Theory Approach to Intermolecular Potential Energy; Surfaces of van der Waals Complexes,"" B. Jeziorski, R. Moszynski,; and K. Szalewicz, *Chem. Rev.* **94**, 1887-1930 (1994).; (doi: `10.1021/cr00031a008 <https://doi.org/10.1021/cr00031a008>`_). |PSIfour| benefits enormously from the introduction of density fitting (DF); into SAPT. There are several SAPT truncations available in |PSIfour|. For; guidance on which one to choose, see the SAPT section of the manual; and refer to the following systematic study:. * ""Levels of Symmetry Adapted Perturbation Theory (SAPT). I. Efficiency and; Performance for Interaction Energies,'' T. M. Parker, L. A. Burns, R. M.; Parrish, A. G. Ryno, and C. D. Sherrill, *J. Chem. Phys.* **140**,; 094106 (2014).; (doi: `10.1063/1.4867135 <https://doi.org/10.1063/1.4867135>`_). The theory and implementation of DF-SAPT is discussed; in the following papers for various levels of SAPT. DF-SAPT0. * ""Large-scale Symmetry-adapted Perturbation Theory Computations via; Density Fitting and Laplace Transformation Techniques: Investigating the; Fundamental Forces of DNA-Intercalator Interactions,"" E. G. Hohenstein,; R. M. Parrish, C. D. Sherrill, J. M. Turney, and H. F. Schaefer, *J.; Chem. Phys.* **135**, 174017 (2011).; (doi: `10.1063/1.3656681 <https://doi.org/10.1063/1.3656681>`_). * ""Density Fitting and Cholesky Decompositi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:15498,avail,available,15498,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. It works because :envvar:`PSI_SCRATCH`; defaults to ``/tmp``. Now you need only specify a permanent scratch; directory (see :ref:`sec:Scratch`) by replacing the placeholder in the; following:. .. code-block:: bash. >>> echo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:5551,echo,echo,5551,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['echo'],['echo']
Availability,"4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8060,error,error,8060,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8506,error,error,8506,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86798,error,error,86798,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160479,error,error,160479,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160692,error,error,160692,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165815,error,error,165815,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"4/psi4/releases/new (or; ""Draft a new release"" button on GitHub site).; * Release title takes the form: ``v1.8, 2023-05-11``; * Fill in frontmatter style and links from previous GitHub release; * Fill in RN from hopefully existing RN issue.; * Fill in RN by going through the frontmatter from all PRs from this milestone, particularly the; ""User API & Changelog headlines"" section.; * Save the draft release until tag is finalized.; * ""publish"" release. This establishes the release date for the GitHub API.; * Close the RN issue.; * Close the milestone (should be 100% complete).; * Open a milestone for the release that's a year out. Publish GitHub postrelease; --------------------------. * With an anticipated or newly minted tag, go to https://github.com/psi4/psi4/releases/new (or; ""Draft a new release"" button on GitHub site).; * Release title takes the form: ``v1.8.2, 2023-10-03``; * Fill in frontmatter style and links from previous GitHub release.; * Fill in RN bullets for changes cherry-picked or edited to the maintenance branch.; * Save the draft release until tag is finalized.; * ""publish"" release. This establishes the release date for the GitHub API. Publish psicode.org release; ---------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Execute https://api.github.com/repos/psi4/psi4/releases/latest or; https://api.github.com/repos/psi4/psi4/releases/tags/v1.8.2 (substituting tag) and note the ``id``; field value.; * Copy and edit a new file akin to ``content/posts/v182.md``. Add it to the git index. - e.g., ``v1.8.2`` is used for Title and Release Notes.; - e.g., ``1.8.x`` is used for Documentation and Source.; - e.g., ``v182`` (edition string) is used for Image and Installers.; - Use the ``id`` value in the shortcode call at the bottom near ``ghRN``. * Add a new release page to the ``psi4_release_fireworks.key`` Keynote presentation. Run the slide; transition and screenshot the fireworks. Open the PNG file in Pr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:36377,mainten,maintenance,36377,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,"4: an open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. index:: DFT; available functionals; .. _`apdx:dftFunctionals`:. DFT Functionals; ===============. .. comment This toctree directive only here to suppress warning at build time.; include line below is doing the work. .. toctree::; :hidden:; :glob:. autodoc_dft_*. .. _`table:dft_all`:. All Available; -------------. .. include:: autodoc_dft_all.rst. .. _`table:dft_gga`:. GGA; ---. .. include:: autodoc_dft_gga.rst. .. _`table:dft_meta`:. Meta; ----. .. include:: autodoc_dft_meta.rst. .. _`table:dft_lrc`:. Long-Range Corrected; --------------------. .. include:: autodoc_dft_lrc.rst. .. _`table:dft_hybrid`:. Hybrid; ------. .. include:: autodoc_dft_hybrid.rst. .. _`table:dft_dhybrid`:. Double-Hybrid; -------------. .. include:: autodoc_dft_dhybrid.rst. .. _`table:dft_scsdhybrid`:. SCS Double-Hybrid; -----------------. .. comment .. include:: autodoc_dft_scsdhybrid.rst # commented until populated again to appease Sphinx. .. _`table:dft_disp`:. Dispersion-Corrected; --------------------. .. include:: autodoc_df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft_byfunctional.rst:1036,avail,available,1036,doc/sphinxman/source/dft_byfunctional.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft_byfunctional.rst,1,['avail'],['available']
Availability,"4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. Release Procedures; ==================. .. _`faq:annualprocedure`:. Annual; ------. * `On January first`_; * `Update copyright year`_; * `Update counter scripts`_. .. _`faq:prereleaseprocedure`:. Pre-Release (e.g., ``v1.3rc1``); -------------------------------. * `Update samples`_; * `Collect new authors`_; * `Anticipate next release`_; * `Build Conda ecosystem stack`_; * `Tag (pre)release`_; * `Build extra Conda packages for Psi4 channel`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_. .. _`faq:releaseprocedure`:. Release (e.g., ``v1.3``); ------------------------. * `Update samples`_ (if no prerelease); * `Collect new authors`_ (if no prerelease); * `Anticipate next release`_ (if no prerelease); * `Build Conda ecosystem stack`_ (if no prerelease); * `Run long tests`_; * `Do final pass before release tag`_; * `Tag (pre)release`_; * `Initialize release branch`_; * `Build extra Conda packages for Psi4 channel`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub release`_; * `Publish psicode.org release`_; * `Finalize release`_. .. _`faq:postreleaseprocedure`:. Post-Release (e.g., ``v1.8.2``); -------------------------------. * `Assemble postrelease changes`_; * `Tweak Conda for postrelease`_; * `Tag postrelease`_; * `Build Psi4conda set`_; * `Build extra Conda packages for Psi4 channel`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub postrelease`_; * `Publish psicode.org release`_; * `Finalize release`_. On January first; ----------------. * Screenshot https://anaconda.org/psi4/psi4 .; * Screenshot https://anaconda.org/conda-forge/psi4 .; * Add new year title and images to website; https://github.com/psi4/psicode-hugo-websit",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:2049,down,download,2049,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"7.18054663 [mEh] -4.50586123 [kcal/mol] -18.85252518 [kJ/mol]. Special recipe for scaled SAPT0 (see Manual):; Electrostatics sSAPT0 -13.37542977 [mEh] -8.39320925 [kcal/mol] -35.11719087 [kJ/mol]; Exchange sSAPT0 11.21822294 [mEh] 7.03954147 [kcal/mol] 29.45344432 [kJ/mol]; Induction sSAPT0 -3.47550008 [mEh] -2.18090932 [kcal/mol] -9.12492546 [kJ/mol]; Dispersion sSAPT0 -2.88342055 [mEh] -1.80937379 [kcal/mol] -7.57042064 [kJ/mol]; Total sSAPT0 -8.51612746 [mEh] -5.34395089 [kcal/mol] -22.35909265 [kJ/mol]; --------------------------------------------------------------------------------------------------------. At the bottom of this output are the total SAPT energies (defined above),; they are composed of subsets of the individual terms printed above. The; individual terms are grouped according to the component of the interaction; to which they contribute. The total component energies (*i.e.*,; electrostatics, exchange, induction, and dispersion) represent what we; regard as the best estimate available at a given level of SAPT computed; from a subset of the terms of that grouping. The groupings shown above are; not unique and are certainly not rigorously defined. We regard the groupings ; used in |PSIfour| as a ""chemist's grouping"" as opposed to a more; mathematically based grouping, which would group all exchange terms ; (*i.e.* :math:`E_{exch-ind,resp}^{(20)}`, :math:`E_{exch-disp}^{(20)}`, *etc.*) in; the exchange component. A final note is that both ``Disp22(T)``; and ``Est.Disp22(T)`` results appear if MP2 natural orbitals are ; used to evaluate the triples correction to dispersion. The ``Disp22(T)`` ; result is the triples correction as computed in the truncated NO basis; ; ``Est.Disp22(T)`` is a scaled result that attempts to recover; the effect of the truncated virtual space and is our best estimate. The ``Est.Disp22(T)``; value is used in the SAPT energy and dispersion component (see [Hohenstein:2010:104107]_ ; for details). Finally, this part of the output ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:37542,avail,available,37542,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"71 ~; --------------------------------------------------------------------------------------------------------------- ~. The above example also shows the total memory for the computation being; set in |PSIfour| format. See :ref:`sec:memory` for details. When; specified, the memory value is passed on to Cfour by setting keywords; |cfour__cfour_memory_size| and |cfour__cfour_mem_unit|\ =MB. |PSIfour| has an extensive :ref:`basis set library <apdx:basisElement>` in; Gaussian94 format. See :ref:`sec:basisSets` for details. Contrasts to; Cfour basis handling include identifying basis sets by standard name; (aug-cc-pVDZ instead of AUG-PVDZ), direct handles for; diffuse-function-pruned sets (*e.g.*, jun-cc-pVDZ), case insensitivity,; appropriate setting of spherical/Cartesian depending on basis set design,; and syntax to set different basis sets to different classes of atoms; without listing each atom. All of these features are available to Cfour by; using the |mints__basis| keyword instead of |cfour__cfour_basis|; (accompanied, of course, by specifying the molecule |PSIfour|-style).; Internally, |PSIfour| processes the basis set as usual, then translates; the basis set format and writes out a ``GENBAS`` file with an entry for; each atom. The P4C4 interface sets keyword |cfour__cfour_basis|\ =SPECIAL; and |cfour__cfour_spherical| as appropriate, then writes the basis section; necessary for SPECIAL below the ``*CFOUR(...)`` block. (I'm sorry that the; name of the basis doesn't appear in ``ZMAT``, but the combination of the; ~14 character basis name limit and the absence of a comment line marker; rather precludes that helpful label.). The input below employs a |PSIfour| library basis set and also introduces; the final stage of conversion toward |PSIfour| format. Instead of the; generic ``'cfour'``, the computational method is specified as the first; argument to the :py:func:`~psi4.driver.optimize` call. In the computational; command below, the string argument ``'c4-ccsd(t)'``",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:12891,avail,available,12891,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:215278,error,error,215278,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:222374,error,error,222374,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:428241,error,error,428241,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:438294,error,error,438294,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:477517,error,error,477517,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:511383,error,error,511383,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42332,error,error,42332,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47830,error,error,47830,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172699,error,error,172699,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482223,error,error,482223,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:256486,error,error,256486,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:54789,error,error,54789,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527545,error,error,527545,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206478,error,error,206478,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228860,error,error,228860,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:287033,error,error,287033,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'grad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:380463,error,error,380463,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:473818,error,error,473818,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:48988,error,error,48988,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,": 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:294537,error,error,294537,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,":. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis aug-cc-pvdz; 	; 	energy('sapt0'); 	energy('sapt2'); 	energy('sapt2+'); 	energy('sapt2+(3)'); 	energy('sapt2+3'). The SAPT module uses the standard |PSIfour| partitioning of the dimer; into monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the ``no_reorient`` and ``symmetry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in H",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:14945,avail,available,14945,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"://github.com/psi4/psi4/settings/branch_protection_rules/424295; # uncheck admins ""Do not allow ..."" and Save changes. >>> git push upstream master. # re-engage admins ""Do not allow ..."" protections. Tag postrelease; ---------------. ::. # be on clean maintenance branch up-to-date with upstream in both commits and tags; # * mind which version strings get ""v"" and which don't; # * if not fork, replace ""upstream"" with ""origin"". >>> git checkout 1.3.x; Switched to branch '1.3.x'. >>> vi psi4/metadata.py; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version__ = '1.3'; -__version_long = '1.3+zzzzzzz'; +__version__ = '1.3.1'; +__version_long = '1.3.1+zzzzzzz'. >>> git add psi4/metadata.py; >>> git commit -m ""v1.3.1""; [1.3.x 2ce1c29] v1.3.1. >>> git log --oneline | head -1; 786fb2b v1.3.1; >>> git tag -a v1.3.1 2ce1c29 -m ""v1.3.1"". # skipping the hash recording and ""upcoming"" step b/c only tags matter on maintenance branch. # free pushing to maintenance branches at present so GitHub interface steps not needed. # see note at ""Tag (pre)release"" for why atomic commit needed. Collect docs from GHA artifacts. >>> git push --atomic upstream 1.3.x v1.3.1. Initialize release branch; -------------------------. * follow tagging procedure; * before re-engaging the admins ""Do not allow ..."" button, push a branch at the tag commit (not the records commit). ::. >>> git log --online | head -2; 45315cb Records tag for v1.3; 20e5c7e v1.3. >>> git checkout 20e5c7e; >>> git checkout -b 1.3.x; Switched to a new branch '1.3.x'; >>> git push upstream 1.3.x. * set up new branch as protected branch through GitHub psi4 org Settings. Should be already covered under 1.*.x rule. Build extra Conda packages for Psi4 channel; -------------------------------------------. Once upon a time, ""Psi4 stack"", meant packages ``psi4``, ``psi4-rt``, ``psi4-dev``, and ``psi4-docs``.; Package ``psi4-docs`` used to be in ""Psi4 stack"", but it's handled by GHA and netlify now, not Conda.; Pack",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:16417,mainten,maintenance,16417,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,":`sec:Scratch`) by replacing the placeholder in the following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. .. note:: Above commands use bash for installation and set up your environment for bash at runtime. To use csh at runtime, follow the on-screen directions at the end of the installation or consult step 7 below. .. _`sec:slowconda`:. Detailed Installation of Miniconda; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. https://docs.conda.io/en/latest/miniconda.html. .. 0. Sanity check. If you already have Miniconda or Anaconda, skip to step 5. The whole installation takes ~5 min; reading this page takes far longer.; ..; .. 1. Get ``bzip2``. You'll need this slightly exotic command so run ``which`` to test for availability, and install from ``yum``, source, *etc.* if unavailable. You'll also need an internet connection for downloading; computers behind a firewall or with restricted login domains are eligible. So long as you can ssh *into* the computer to an account with write permissions and can connect to the internet *from* the computer, all is well.; ..; .. .. code-block:: bash; ..; .. # check; .. >>> which bzip2; .. /usr/bin/bzip2; .. >>> curl -O ""http://psicode.org/psi4manual/master/introduction.html""; .. >>> ls -1; .. introduction.html; ..; .. 2. Get Miniconda installer script. Either issue the command below or download from http://conda.pydata.org/miniconda.html by clicking on the appropriate link for your OS. If you already have or would prefer to use Anaconda rather than Miniconda, that's fine. Locate or install Anaconda, check that ``conda`` is in your path, and skip to step 4.; ..; .. .. code-block:: bash; ..; .. >>> curl -O ""http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh""; .. # check; .. >>> ls -1; .. Miniconda-latest-Linux-x86_64.sh; ..; .. 3. Install Miniconda. Execute the script and answer",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:18567,down,downloading,18567,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloading']
Availability,":installFile`:. ====================================; Compiling and Installing from Source; ====================================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :source:`conda/psi4-path-advisor.py`; (extensive help menu at ``conda/psi4-path-advisor.py -h``); or :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see :psicode:`installs/latest`; (select ""source""). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see :psicode:`installs/latest` (select ""conda"").; To see working builds for Linux, Mac, and Windows, see :src:; :source:`[this GHA] <.github/workflows/ecosystem.yml>`. .. _`faq:cmakeviasetup`:. Planning: how to configure Psi4 and invoke CMake; ------------------------------------------------. |PSIfour| is built through CMake. An abbreviated build guide can be found; :source:`within the source itself <CMakeLists.txt#L27>` . CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it's very possible that; from :samp:`{top-level-psi4-dir}` source directory, you can call :samp:`cmake -S.; -B{objdir}` without any further arguments, and it will invoke ``cmake``,; detect some appropriate defaults, configure the build, create a build; directory :samp:`{objdir}`, and complete, leaving you to only invoke; ``make`` or Ninja in the new build directory. Should this happy scenario not come to pass, or ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:2064,avail,available,2064,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"; # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. It works because :envvar:`PSI_SCRATCH`; defaults to ``/tmp``. Now you need only specify a pe",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:5455,echo,echo,5455,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['echo'],['echo']
Availability,"; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:mp2`:. Second-order |MollerPlesset| Theory: MP2 and MP2-R12 methods; ============================================================. Second-order |MollerPlesset| theory is one of the most basic; wavefunction approaches which includes electron correlation; directly.; Due to its simplicity, the MP2 method is often the best; level one can afford for a larger molecular system.; At the other end of the spectrum, the MP2-R12 method; of Kutzelnigg, Klopper, and co-workers is a promising; approach to computing MP2 energies in the complete; basis set limit for smaller systems. |PSIfour| is; one of the very few publicly available programs to; feature a robust implementation of the MP2-R12 method. |PSIfour| is capable of computing closed-shell; MP2 and MP2-R12/A energies using integral-direct techniques and a; multithreaded algorithm, which lends itself perfectly for execution ; on symmetric multiprocessor (SMP) machines. |PSIfour| is also; capable of computing RHF, UHF, and ROHF (using semicanonical orbitals); MP2 energies and one-particle density matrices, and RHF MP2 analytic ; gradients. Occupied and virtual orbitals can be frozen during the ; energy calculation, but not for the calculation of the ; one-particle density matrix or the analytic gradient. .. table:: Summary of MP2 and MP2-R12 capabilities in |PSIfour|. +-----------+-----------+---------------+--------------------------+----------+; | Reference | Method | Energy (conv) | Energy (integral-direct) | Gradient |; +===========+===========+===============+==========================+==========+; | RHF | MP2 | Y | Y | Y |; +-----------+-----------+------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:1686,avail,available,1686,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,2,"['avail', 'robust']","['available', 'robust']"
Availability,"; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: BrianQC; .. _`sec:brianqc`:. Interface to the BrianQC GPU module by the BrianQC team; =======================================================. .. codeauthor:: Gergely Kis; .. sectionauthor:: Gergely Kis. |PSIfour| contains code to interface to the BrianQC GPU module developed; by the `BrianQC team <https://www.brianqc.com/team>`_, which is available after a license agreement from; `https://brianqc.com/ <https://brianqc.com/>`_. Installing BrianQC; ~~~~~~~~~~~~~~~~~~. Please contact BrianQC at `https://brianqc.com/ <https://brianqc.com/>`_; to download the BrianQC GPU module and obtain a license. Note that there are several prerequisites for using BrianQC, including; having a supported GPU available in the computing node and having the; proper GPU drivers installed. Please refer to the `BrianQC manual <https://www.brianqc.com/download/>`_; for a full list of prerequisites. When installing BrianQC, choose the SDK installation by setting the; :envvar:`BRIANQC_SDK_INSTALL` envoronment variable to `1`. Building BrianQC's user-built components; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. After the installation, build BrianQC's example and sample programs,; which also creates the wrapper library and CMake configuration files; required to build |PSIfour| with BrianQC. 1. Create a build directory to keep the source tree clean. .. code-block:: bash. cd <brianqc_install_path>; mkdir build; cd build. 2. Configure project and generate makefiles with CMake.; You will require `Eigen <http://eigen.tuxfamily.org>`_ (tested with version 3.1.2); and `boost <https://www.boost.org/>`_ (tested with version 1.62). .. code-block:: bash. cmake .. 3. Build the examples and samples. .. cod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst:1770,avail,available,1770,doc/sphinxman/source/brianqc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst,1,['avail'],['available']
Availability,"; :label: Residual. R_{ij}^{ab} = (ia|jb) + (\epsilon_a + \epsilon_b - f_{ii} - f_{jj})t_{ij}^{ab} - \sum_{k \ne j} f_{ik} \sum_{c,d} S_{ac}t_{kj}^{c,d}S_{db} - \sum_{k \ne i} f_{kj} \sum_{cd} S_{ac}t_{ik}^{cd}S_{db} . where ``i``, ``j``, and ``k`` are (not necessarily canonical) occupied orbitals, ``a``,; ``b``, ``c``, and ``d`` are virtual orbitals, :math:`f_{ij}` are fock matrix elements,; :math:`S_{ab}` are orbital overlaps, and finally :math:`t_{ij}^{ab}` are the MP2; amplitudes to be solved for. Virtual orbitals may be different for each pair; of occupied orbitals. For a given occupied orbital pair ``ij``, all virtuals are; orthogonal and canonical, but virtuals belonging to different pair domains; may not be orthogonal. The following expression is used to evaluate the energy of a given set of amplitudes:. .. math::; :label: Energy. E^{(2)} &= \sum_{i,j} e_{ij}, \\; e_{ij} &= \sum_{a, b}((ia|jb) + R_{ij}^{ab})(2t_{ij}^{ab} - t_{ij}^{ba}). The error in :math:`E^{(2)}` scales quadratically with the error in the amplitudes. No local approximations have been made so far, and this iterative approach can; be used to exactly determine :math:`E^{(2)}` with :math:`{\cal O}(N^5)` cost.; In DLPNO-MP2, the first local approximation is to screen distant, non-interacting; orbital pairs ``ij``. Orbital pairs are screened if below both an overlap criteria:. .. math::; :label: Differential Overlap Integral. DOI_{ij} \equiv \sqrt{\int d\mathbf{r} | \chi_{i}(\mathbf{r}) | ^{2} | \chi_{j}(\mathbf{r}) | ^{2}}, . and a pair energy estimate: . .. math::; :label: Dipole Approximation. e_{ij}^{approx} = -\frac{4}{R^{6}} \sum_{a_{i} \in [i],b_{j} \in [j]} \frac{ (2 \langle i | \mathbf{r} | a_{i} \rangle \langle j | \mathbf{r} | b_{j} \rangle)^{2}}{\epsilon_{a_{i}} + \epsilon_{b_{j}} - f_{ii} - f_{jj}},. in which small domains of virtual orbitals are used for each local MO. As a; result, an asymptotically linear number of ``ij`` pairs enter the local MP2; equations, and the approximate ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:5669,error,error,5669,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,2,['error'],['error']
Availability,"; ``ab`` (the opposite of ``c`` where the entire linking pair is assigned to A/B), ``sao0``, ``sao1``, ``sao2``,; ``siao0``, ``siao1`` (recommended for all I-SAPT applications), and ``siao2`` (essentially identical to ``siao1`` but; slightly more expensive). Advanced I-SAPT Keywords for SAOn/SIAOn Partitionings; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/fisapt__fisapt_link_ortho.rst; .. include:: autodir_options_c/fisapt__fisapt_exch_parperp.rst; .. include:: autodir_options_c/fisapt__fisapt_cube_linkibos.rst; .. include:: autodir_options_c/fisapt__fisapt_cube_linkihos.rst; .. include:: autodir_options_c/fisapt__fisapt_cube_densmat.rst. Other F/I-SAPT Keywords; ^^^^^^^^^^^^^^^^^^^^^^^. The input files described above cover roughly 90% of all F/I-SAPT analyses. For; more delicate or involved problems, there are a large number of user options; that permit the customization of the I-SAPT subsystem partition, the convergence; of the IBO localization procedure, numerical thresholds, etc. We have an entire; `video tutorial devoted to F/I-SAPT Options <https://www.youtube.com/watch?v=KFkPKSUZVfI&index=5&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_ .; Direct source-code documentation on these options is available :ref:`here <apdx:fisapt>`. Additional Notes; ^^^^^^^^^^^^^^^^. .. caution:: In constrast to Ed Hohenstein's SAPT0 code, FISAPT uses the -JKFIT; auxiliary basis sets for all Fock-type terms (*e.g.*, electrostatics, exchange,; induction, and core Fock matrix elements in exchange-dispersion), and the -RI; auxiliary basis sets *only* for the dispersion term. Ed's code uses the -RI; basis sets for all SAPT terms, which can be problematic for heavy elements.; As such, Ed's SAPT0 code will yield slightly different results than FISAPT. The; differences should be very minor for up to and including second-row elements,; after which point one needs to use the |sapt__df_basis_elst| option in Ed's code to; provide an accurate result. . ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:20273,avail,available,20273,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['avail'],['available']
Availability,"; be recommended but for the potential conflict between |PSIfour|; BLAS and NumPy BLAS. Unless you've a special NumPy, avoid!. * The open-source LAPACK distributions OpenBLAS (formerly GotoBLAS); mostly works. Use it at your own risk and after testing your; particular distribution, including tests run multithreaded,; if you intend to run |PSIfour| so. Use at least 0.2.15, and; pay attention to how it was compiled - unthreaded seems safe,; openmp-threaded is mostly safe, default pthreaded is *not* safe. See; https://github.com/psi4/psi4/issues/1009 for recent analysis. * Another open-source LAPACK distribution, ATLAS had; stability issues with the DFOCC module at last testing,; https://github.com/psi4/psi4/issues/391. * ACML libraries are known to work with |PSIfour| v1.1 at ACML 6. * Because of how link loaders work, at runtime, the BLAS of |PSIfour|; and the BLAS of NumPy are not independent. There can be unpredictable; but reproducible numerical and thread-scaling errors if |PSIfour|; and NumPy BLAS don't match down to the library name (that is,; ``libmkl_rt``, ``libmkl_core.so``, ``libmkl_core.a`` are *not*; interchangeable). See https://github.com/psi4/psi4/issues/1007,; https://github.com/psi4/psi4/issues/748,; https://github.com/psi4/psi4/issues/755 for gory discussions.; Choose your NumPy and |PSIfour| compile conditions to use the same; BLAS distribution. * The BLAS/LAPACK detected for |PSIfour| are also linked into any; Add-Ons (*e.g.*, libefp) that require them, rather than relying on; those packages' native math detection. * The separation between BLAS and LAPACK seen in detection printing; and CMake variables is purely formal. In practice, they get run; together and linked as ``${LAPACK_LIBRARIES} ${BLAS_LIBRARIES}``. * Sometimes the CMake's library search capabilites falter at SONAMEs; (*e.g.*, ``libblas.so.3`` *vs.* ``libblas.so``), extensions (static; *vs.* dynamic), or suffixes (*e.g.*, ``libacml_mp.so`` *vs.*; ``libacml.so``). The developers would b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:50790,error,errors,50790,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,2,"['down', 'error']","['down', 'errors']"
Availability,"; cc_excited.cc; dirprd_block.cc; dot_block.cc; dx_read.cc; dx_write.cc; fill_sym_matrix.cc; invert.cc; lapack_intfc.cc; mat_print.cc; newmm_rking.cc; pople.cc; probabil.cc; ras_set.cc; reorder_qt.cc; schmidt.cc; solve_pep.cc; timer.cc; ). # cmake_symbol_exists() or check_cxx_source_runs() are preferable to check_function_exists(); # according to CMake docs. But both require an explicit header, either in the call or in the code,; # and that's tough with multiple BLAS/LAPACK backends. So, we'll see if this is robust enough.; include(CMakePushCheckState); include(CheckFunctionExists); cmake_push_check_state(); list(APPEND CMAKE_REQUIRED_LIBRARIES tgt::lapack); check_function_exists(daxpby _has_daxpby); if(NOT _has_daxpby); message(WARNING ""${Yellow}Your BLAS/LAPACK library does not seem to be providing the DAXPBY subroutine. DAXPBY calls will be re-routed through DSCAL and DAXPY. If you are seeing this message, and you are not building with Apple Accelerate, you may want to re-check that the correct BLAS/LAPACK libraries are being used by the build system. Redo CMake configuration for changes to register.${ColourReset}""); endif(). check_function_exists(dggsvd3 _has_dggsvd3); check_function_exists(dggsvp3 _has_dggsvp3); if(NOT (_has_dggsvd3 AND _has_dggsvp3)); message(WARNING ""${Yellow}Your BLAS/LAPACK library does not seem to be providing the DGGSVD3 and DGGSVP3 subroutines. No re-routing is available. If you are seeing this message, and you are not building with Apple Accelerate, you may want to re-check that the correct BLAS/LAPACK libraries are being used by the build system. Redo CMake configuration for changes to register.${ColourReset}""); endif(); cmake_pop_check_state(). psi4_add_module(lib qt sources); target_compile_definitions(qt; PRIVATE; $<$<BOOL:${_has_daxpby}>:BLAS_HAS_DAXPBY>; $<$<BOOL:${_has_dggsvd3}>:BLAS_HAS_DGGSVD3>; $<$<BOOL:${_has_dggsvp3}>:BLAS_HAS_DGGSVP3>; FC_SYMBOL=${FC_SYMBOL}; ). unset(_has_daxpby); unset(_has_dggsvd3); unset(_has_dggsvp3); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libqt/CMakeLists.txt:1477,avail,available,1477,psi4/src/psi4/libqt/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libqt/CMakeLists.txt,2,['avail'],['available']
Availability,"; compute the :math:`(\lambda_3)` energy correction that perturbatively accounts; for three-particle correlation effects, similarly to the (T) correction in coupled; cluster theory. Computation of the :math:`(\lambda_3)` correction can be; requested by setting the |dct__three_particle| option to PERTURBATIVE. A; combination of the ODC-13 functional with the :math:`(\lambda_3)` correction; [denoted as :math:`\mbox{ODC-13$(\lambda_3)$}`] has been shown to provide highly; accurate results for open-shell molecules near equilibrium geometries. At the present moment, all of the DCT methods support unrestricted reference; orbitals (|scf__reference| ``UHF``), which can be used to perform energy and; gradient computations for both closed- and open-shell molecules. In addition,; the ODC-06 and ODC-12 methods support restricted reference orbitals; (|scf__reference| ``RHF``) for the energy and gradient computations of; closed-shell molecules. Note that in this case restricted reference orbitals; are only available for |dct__algorithm| ``SIMULTANEOUS``. .. _`sec:dctalgorithms`:. Iterative Algorithms; ~~~~~~~~~~~~~~~~~~~~. As explained in the :ref:`Theory <sec:dcttheory>` section, in order to obtain the DCT energy one; needs to solve a system of coupled equations for orbitals and density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; |dct__algorithm| option. SIMULTANEOUS [Default]; In the simultaneous algorithm the DCT equations are solved in macroiterations.; Each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and orbitals is achieved.; Convergence of the simultaneous algorithm is accelerated using the; DIIS extrapolation technique. TWOSTEP; In the two-step algo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:9080,avail,available,9080,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. .. _`faq:obtainpsi4`:. How to obtain Psi4: start with find-the-code quiz, end in ``{top-level-psi4-dir}``; ----------------------------------------------------------------------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. Take a :ref:`quiz <faq:quiz>` to find the best version of the codebase for; your needs, be it binary, tarball, or version-controlled repository. Or,; select outright among:. #. :ref:`faq:binary`; #. :ref:`faq:binarypackage`; #. :ref:`faq:clonepsi4public`; #. :ref:`faq:forkpsi4public` (only path to develop |PSIfour|); #. :ref:`faq:tarballpsi4public`. .. _`faq:quiz`:. Find-the-code Quiz; ------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. * I just want to run the code. I may tweak the Python, but I'm not; developing anything to contribute back to the code base. * Provided I still get good, threaded BLAS/LAPACK, OpenMP parallelism,; and optimization for a variety of processor architectures, I'm willing to forgo; architecture tuning wizardry to avoid compiling it myself. * I'm on Linux or Mac (Intel or Silicon chips) or Windows (native or WSL/Ubuntu Bash Shell). * I'm familiar with conda and want to manage |PSIfour| as an; ordinary conda package. |w---w| :ref:`Goto Binary-Package; <faq:binarypackage>`. * I just want a |PSIfour| installer. |w---w| :ref:`Goto; Binary-Installer <faq:binary>`. * I want to compile it myself to eke out best performance on my; computer. I accept responsibility for navigating compiler, threading,; and BLAS/LAPACK compatibility. * I'm willing to have minimal dealings with git (e.g., commands ``git; clone`` and ``git pull``) in return for easy acce",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst:2127,avail,available,2127,doc/sphinxman/source/build_obtaining.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst,1,['avail'],['available']
Availability,"; this Cartesian basis, eliminating the need to transform to spherical harmonics; as the integrals are computed. This bottleneck no longer exists, so these; extra transformation steps have been removed as part of the switch to Libint2,; and the affected codes (PCM and CPPE interfaces) now compute the potential and; field integrals in the representation required by the basis set. Also, note that the way external point charges are specified has changed.; Previously, a set of N external point charges would be specified by passing a; matrix with dimensions N rows and 4 columns -- corresponding to charge, x, y, z; -- to the ``set_charge_field()`` member of the potential integral class. The; same information is now passed using the more verbose; ``std::vector<std::pair<double, std::array<double, 3>>>`` type instead, to be; consistent with Libint2's convention. New Operators Available; ....................... Libint2 provides a range of integrals that were previously not available in; |PSIfour|, such as the Erfc attenuated nuclear potential integrals needed for; Ewald methods. If new integrals are added to Libint2 but are not yet; interfaced to |PSIfour|, please open an issue on the |PSIfour| GitHub page to; alert the developers, who will be able to add the appropriate code.; Available integrals classes and parameters currently documented at ; `Libint2 C++11 Interface Wiki <https://github.com/evaleev/libint/wiki/using-modern-CPlusPlus-API#create-an-integral-engine>`_. Shell Pairs; ........... To ensure consistency between one- and two-electron terms when screening, and; for efficiency reasons, shell pair lists should be used to iterate over pairs; of Gaussian shells. These lists contain integer pair numbers, corresponding to; the pairs of shells that have sufficient overlap to survive the screening; process. Iterating over these lists is simple:. .. code-block:: cpp. const auto& shell_pairs = Vint->shellpairs();; size_t n_pairs = shell_pairs.size();; for (size_t p = 0; p < ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:17791,avail,available,17791,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['avail'],['available']
Availability,"; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14191,error,error,14191,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19449,error,error,19449,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'not",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290997,error,error,290997,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:140050,error,error,140050,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"<subset>. Runs pytest tests. If ``pytest-xdist`` installed, parallel with :option:`-n`. .. .. option:: --new-plugin <name>; ..; .. Creates a new directory <name> with files for writing a; .. new plugin. An additional argument specifies a template; .. to use, for example: ``--new-plugin name +mointegrals``.; .. See :ref:`plugins <sec:plugins>` for available templates. .. option:: -v, --verbose. Print the Psithon to Python translation of the input file. .. option:: -V, --version. Print version information. ::. # stable release; >>> psi4 --version; 1.3.2. # development snapshot between 1.3 and 1.4; >>> psi4 --version; 1.4a2.dev525. .. .. option:: -w, --wipe. .. Clean out scratch area. .. _`sec:environmentVariables`:. Environment Variables; =====================. These environment variables will influence |PSIfours| behavior. .. envvar:: CONDA_PREFIX. Set when a conda environment is activated. Note that if |PSIfour| has been; built against any library in CONDA_PREFIX, the path has been baked into the; program, so any available dependencies are liable to been loaded from the environment. .. envvar:: HOST. Set when a conda environment with conda compilers is activated. Used; when compatibly building |PSIfour| from source against conda; dependencies. .. envvar:: MKL_NUM_THREADS. Number of threads to use by operations with Intel threaded BLAS libraries. .. deprecated: 1.1; See :ref:`sec:threading` for alternatives. .. envvar:: OMP_NESTED. Do access nested DGEMM in OpenMP sections in DFMP2 for multi-socket; platforms. This is very low-level access to OpenMP functions for; experienced programmers. Users should leave this variable unset or set; to ``False``. .. envvar:: OMP_NUM_THREADS. Number of threads to use by modules with OpenMP threading. .. deprecated: 1.1; See :ref:`sec:threading` for alternatives. .. envvar:: PATH. Path for interfaced executables. .. note:: While once configuring |PSIfour| through :envvar:`PSIPATH` was preferred; to modifying this environment variable,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:20742,avail,available,20742,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['avail'],['available']
Availability,"=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the density fields and ESPs of the various moieties of; .. the I-SAPT embedding scheme with PyMol; .. - `F/I-SAPT Options; .. <https://www.youtube.com/watch?v=KFkPKSUZVfI&index=5&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Details all of the more-advanced options in the F/I-SAPT code (rarely needed). The scripts discussed below are located in :source:`psi4/share/psi4/fsapt`. F-SAPT: A Representative Example; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Below, we show an example of using F-SAPT0/jun-cc-pVDZ to analyze the; distribution of the intermolecular interaction energy components between the; various hydroxyl and phenyl moieties of the phenol dimer. This example is; explicitly included in :srcsample:`fsapt1`. A video; lecture explaining this example is available `F-SAPT#1; <https://www.youtube.com/watch?v=J22J0wh4mVo&index=1&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_,; while an additional video describing how to plot the order-1 F-SAPT analysis; with PyMol and perform a ""difference F-SAPT""; analysis is available `F-SAPT#2; <https://www.youtube.com/watch?v=fqlzXsayec0&index=2&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_::. memory 1 GB; ; molecule mol {; 0 1; O -1.3885044 1.9298523 -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197947; H -4.8670730 -0.8822939 -0.8811319; H -3.6431662 1.2134345 -1.4057590; --; 0 1; O 1.3531168 1.9382724 0.4723133; H 1.7842846 2.3487495 1.2297110; C 2.0369747 0.7865043 0.1495491; C 1.5904026 0.0696860 -0.9574153; C 2.2417367 -1.1069765 -1.3128110; C 3.3315674 -1.5665603 -0.5748636; C 3.7696838 -0.8396901 0.5286439; C 3.1224836 0.3383498 0.8960491; H 0.7445512 0.436798",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:5077,avail,available,5077,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['avail'],['available']
Availability,"===. Basis sets in |PSIfour| are Gaussian functions (not Slater-type functions or plane waves),; all-electron [no effective core potentials (ECPs)],; and of Gaussian94 format (for ease of export from `EMSL <https://bse.pnl.gov/bse/portal>`_).; Both spherical harmonic (5D/7F) and Cartesian (6D/10F) Gaussian functions are supported,; but their mixtures are not, neither within a basis set (*e.g.*, 6D/7F) nor within a calculation; (*e.g.*, cartesian for the orbital basis and spherical for the fitting basis).; For built-in basis sets, the correct ``spherical``/``cartesian`` value for |globals__puream|; is set internally from the orbital basis. * :ref:`sec:basisBuiltIn`; * :ref:`Specifying basis sets <sec:jobControl>`; * :ref:`Built-in basis sets by family <apdx:basisTables>`; * :ref:`Built-in basis sets by element <apdx:basisElement>`; * :ref:`User-Defined basis sets <sec:basisUserDefined>`; * :ref:`Auxiliary bases for built-in orbital basis sets <apdx:basisFamily>`. .. index:: basis set; available by family; .. _`sec:basisBuiltIn`:. Built-In Basis Sets; ===================. A wide range of orbital basis sets are built into |PSIfour|. These are; summarized in Tables :ref:`Pople <table:basisPopleOrbital>`,; :ref:`Dunning <table:basisDunningOrbital>`, ; :ref:`Dunning (Douglas-Kroll) <table:basisDunningDK>`, ; :ref:`Karlsruhe <table:basisKarlsruhe>`,; :ref:`Jensen <table:basisJensen>`,; and :ref:`Other <table:basisOther>` in Appendix :ref:`apdx:basisTables`.; These tables are arranged so that columns indicate degree of; augmentation by diffuse functions (generally necessary for anions, excited; states, and noncovalent interactions) and DTQ56 indicate the :math:`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:2113,avail,available,2113,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,1,['avail'],['available']
Availability,====+=====+==================+========+=======+; | cc-pVXZ-DK | DTQ5 | | | | | | DTQ5 | DTQ5 | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pV(X+d)Z-DK | | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pCVXZ-DK | DTQ5 | | | | | | DTQ5 | DTQ5 | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pCV(X+d)Z-DK | | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pwCVXZ-DK | --TQ5 | | | | | | --TQ5 | --TQ5 | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | cc-pwCV(X+d)Z-DK | | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+. |; |. .. _`table:basisDunningF12`:. .. table:: Summary of Dunning F12 orbital basis sets available in |PSIfour|. +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +==================+============+=====+=====+=====+=====+=====+==================+========+=======+; | cc-pVXZ-F12 | DTQ | | | | | | | | |; +------------------+------------+-----+-----+-----+-----+-----+------------------+--------+-------+. |; |. .. _`table:basisDunningJKFIT`:. .. table:: Summary of Dunning JK-fitting basis sets available in |PSIfour|. +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +========================+============+=====+=====+=====+=====+=====+==================+======+=======+; | cc-pVXZ-JKFIT [#f3]_ | DTQ5 | | 5 | Q5 | TQ5 | DTQ5| DTQ5 | DTQ5 | |; +------------------------+------------+---,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:12633,avail,available,12633,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"=====+=====+=====+=====+=====+=====+==================+=====+=======+; | cc-pVXZ-DUAL | TQ | | | | | | TQ | DTQ | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pV(X+d)Z-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pCVXZ-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pCV(X+d)Z-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pwCVXZ-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pwCV(X+d)Z-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+. |; |. .. _`table:basisKarlsruhe`:. .. table:: Summary of Karlsruhe orbital basis sets available in |PSIfour|. +--------------+-------------+; | no diffuse | augmented |; +==============+=============+; | def2-SV(P) | |; +--------------+-------------+; | def2-SVP | def2-SVPD |; +--------------+-------------+; | def2-TZVP | def2-TZVPD |; +--------------+-------------+; | def2-TZVPP | def2-TZVPPD |; +--------------+-------------+; | def2-QZVP | def2-QZVPD |; +--------------+-------------+; | def2-QZVPP | def2-QZVPPD |; +--------------+-------------+; | def2-mSVP | |; +--------------+-------------+; | def2-mTZVP | |; +--------------+-------------+; | def2-mTZVPP | |; +--------------+-------------+. |; |. .. _`table:basisJensen`:. .. table:: Summary of Jensen orbital basis sets available in |PSIfour|. +---------------+--------------+-----------+-------+------------------+; | basis set | no diffuse | augmented | tight | augmented, tight |; +===============+==============+===========+=======+==================+; | pcseg-N | 01234 [#f5]_ | | | |; +---------------+-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:17196,avail,available,17196,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"======; Introduction; ============. Overview; ========. |PSIfour| provides a wide variety of quantum chemical methods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory. In this section, we provide an overview of some of the features of; |PSIfour| along with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details int",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:2138,avail,available,2138,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,">>> (gdb) run. .. .. _`faq:valgrindpsi`:; .. ; .. How to use ``valgrind`` with Psi4; .. ---------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode and has something to do with the exponent boost chooses for; .. the default zero tolerance. Anyways, commenting out lines 47 to 49, for valgrind purposes, should; .. allow you to run valgrind. The consequence of commenting out these lines are you get no integeral; .. screening, so make sure you uncomment them when you actually run. .. _`faq:cmakeverbose`:. How to see the actual compiling commands (or errors) with ``cmake``; -------------------------------------------------------------------. CMake by default hides a lot of useful debugging information to make the; compilation cleaner. Issue ``make VERBOSE=1`` to display the full; compilation commands and errors. .. _`faq:vigitmerge`:. How to highlight git merge conflicts in ``vi``; ----------------------------------------------. Edit yo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:56159,error,error,56159,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,2,['error'],['error']
Availability,"ABLE}; -b linkcheck # builder; -d ${CCBD}/_doctrees # cache w/ pickled reST; -c ${CCBD}/source # whereabouts of conf.py; ${CCBD}/source # build from; ${CCBD}/latex # build to; COMMENT ""Building linkcheck documentation ...""). # * full, proper build with LaTeX; if (LATEX_COMPILER AND PDFLATEX_COMPILER); add_custom_target(sphinxpdf; DEPENDS sphinxman; COMMENT ""Preparing Sphinx HTML and PDF documentation build""). # * full, proper build with latex builder; add_custom_command(; TARGET sphinxpdf POST_BUILD; COMMAND ${SPHINX_EXECUTABLE}; -b latex # builder; -d ${CCBD}/_doctrees # cache w/ pickled reST; -c ${CCBD}/source # whereabouts of conf.py; ${CCBD}/source # build from; ${CCBD}/latex # build to; COMMENT ""Building latex documentation ...""); add_custom_command(; TARGET sphinxpdf POST_BUILD; COMMAND ${PDFLATEX_COMPILER}; -interaction=nonstopmode; ""Psi4.tex"" > /dev/null 2>&1; WORKING_DIRECTORY ${CCBD}/latex; COMMENT ""Building remarkably ugly PDF documentation from LaTeX ... (ignore the make exit error)""); endif(). # Establishing commands to build docs targets. # * full, proper build with html builder; add_custom_command(; TARGET sphinxman POST_BUILD; COMMAND ${SPHINX_EXECUTABLE}; # -v # Repeat for greater verbosity; # -q # Enable for quiet mode; # -Q # Enable for even more quiet mode; # -E # don't use a saved environment, always read all file; # -a # write all files; default is to only write new and changed files; # -n # nit-picky mode, warn about all missing references; # -W # turn warnings into errors; # --keep-going # with -W, keep going when getting warnings; ${SPHINX_EXTRAS}; -b html # builder; -d ${CCBD}/_doctrees # cache w/ pickled reST; -c ${CCBD}/source # whereabouts of conf.py; ${CCBD}/source # build from; ${CCBD}/html # build to; COMMENT ""Building html documentation ...""). # * Special abridged-docs target for fast-compile when developing static docs; # * removing autodocs alleviates dependencies; # * thar will be warnings galore for unresolved links; add_custom_co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:23886,error,error,23886,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,1,['error'],['error']
Availability,"AKE_PREFIX_PATH`` part) *and* telling it to; do an in-source build (the ``.`` part). Then just run ``make`` in; your plugin directory. After any change to the plugin C++ code,; ``make`` must be run in the plugin directory to recompile the; ``myplugin.so`` executable, but recompiling the main |PSIfour| code; is not necessary. Should you add additional (non-header) files to; the plugin or need to link to additional external libraries, add that; information here. * **input.dat** |w---w| Sample input file for the plugin.; Since the ``__init__.py`` file makes the plugin directory look like a; Python module, the plugin can be treated as such in an input file. The; location of the plugin directory must be included in :envvar:`PYTHONPATH`,; either externally in the calling shell or defined in the input file.; This is usually done by manipulating :envvar:`PSIPATH`. Then,; the plugin can be loaded as ``import myplugin`` and executed as; ``energy('myplugin')``. Any other Python functions are also available from; the input file, *e.g.* ``myplugin.testfunction()``, note the namespace; protection. * **pymodule.py** |w---w| Python component of the plugin.; By encoding the sequence of |PSIfour| module; calls needed to run the plugin in the ``run_myplugin()`` function in this; file, the plugin is hooked into the main |PSIfour| driver function; :py:func:`~psi4.driver.energy` and so can be accessed through; ``energy('myplugin')`` in an input file. Any other Python functions can; also be placed in this file. * **__init__.py** |w---w| Init script for the plugin (in the sense that; the whole plugin directory is a Python module). This file generally won't; need editing unless additional Python files are added to the plugin; directory (add additional lines to the ``# Load Python modules`` section); or the plugin depends on .so codes in other plugin directories (add; additional plugin_load lines relative to the current plugin directory to; the ``# Load C++ plugin`` section). .. comment as m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:9222,avail,available,9222,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,1,['avail'],['available']
Availability,"ARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:mtd_capabilities`:. Capabilities and Alternate Implementations; ==========================================. Depending on the reference (e.g., RHF, UHF, ROHF), the integral treatment; (conventional CONV, density-fitted DF, and Cholesky-decomposed CD),; active orbitals, and derivative level, computational methods are; sometimes assembled from implementations by multiple coders. Conversely,; some capabilities may be implemented multiple times. Capabilities,; modules, algorithm types, and defaults are detailed for many ground-state; methods at Table :ref:`Module Capabilities <table:managedmethods>`. Its; analogous summary table (with modules collapsed) is at :ref:`Summary; Capabilities <table:stdsuite>`. |PSIfour| transparently selects the; most efficient implementation, so one generally needn't consult this; table. However, to understand the details of what combinations are; accessible or what alternate implementations are available, read on. Note that HF, DFT, and MPn (n<=3); default to density-fitted integrals, while all higher methods default to; conventional integrals. Therefore, for a closed-shell molecule::. # runs MP2 with default algorithm type ``DF`` with default implementation DFMP2; energy('mp2'). # runs MP2 with algorithm type ``CONV`` with default implementation OCC; set mp2_type conv; energy('mp2'). # runs MP2 with default algorithm type ``DF`` with implementation OCC; set qc_module occ; energy('mp2'). # runs MP2 with algorithm type ``CONV`` with implementation FNOCC; set mp2_type conv; set qc_module fnocc; energy('mp2'). .. include:: autodoc_capabilities_details.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/capabilities.rst:2004,avail,available,2004,doc/sphinxman/source/capabilities.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/capabilities.rst,1,['avail'],['available']
Availability,"ATH` and :envvar:`PSI_SCRATCH` that it suggests at the end. Test; with ``psi4 --test`` (green and yellow good; red bad). Done. Explicit commands at :ref:`sec:psi4conda`. .. _`sec:psi4conda`:. How to install a Psi4 binary with the Psi4conda installer, command-line; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour| on Linux,; Mac, Windows (Ubuntu shell for Windows accepts Linux installers), or native Windows.; Installs Miniconda+Psi4+AddOns into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: ba",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:4747,echo,echo,4747,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['echo'],['echo']
Availability,B.cc; T3_RHF.cc; T3_RHF_ic.cc; block_matrix.cc; buf4_axpbycz.cc; buf4_axpy.cc; buf4_axpy_matrix.cc; buf4_close.cc; buf4_copy.cc; buf4_dirprd.cc; buf4_dot.cc; buf4_dot_self.cc; buf4_dump.cc; buf4_init.cc; buf4_mat_irrep_close.cc; buf4_mat_irrep_close_block.cc; buf4_mat_irrep_init.cc; buf4_mat_irrep_init_block.cc; buf4_mat_irrep_rd.cc; buf4_mat_irrep_rd_block.cc; buf4_mat_irrep_row_close.cc; buf4_mat_irrep_row_init.cc; buf4_mat_irrep_row_rd.cc; buf4_mat_irrep_row_wrt.cc; buf4_mat_irrep_row_zero.cc; buf4_mat_irrep_shift13.cc; buf4_mat_irrep_shift31.cc; buf4_mat_irrep_wrt.cc; buf4_mat_irrep_wrt_block.cc; buf4_print.cc; buf4_scm.cc; buf4_scmcopy.cc; buf4_sort.cc; buf4_sort_axpy.cc; buf4_sort_ooc.cc; buf4_symm.cc; buf4_symm2.cc; buf4_trace.cc; buf4_zero.cc; cc3_sigma_RHF.cc; cc3_sigma_RHF_ic.cc; cc3_sigma_UHF.cc; close.cc; contract222.cc; contract244.cc; contract422.cc; contract424.cc; contract442.cc; contract444.cc; contract444_df.cc; dot13.cc; dot14.cc; dot23.cc; dot24.cc; dpdmospace.cc; error.cc; file2_axpbycz.cc; file2_axpy.cc; file2_axpy_matrix.cc; file2_cache.cc; file2_close.cc; file2_copy.cc; file2_dirprd.cc; file2_dot.cc; file2_dot_self.cc; file2_init.cc; file2_mat_close.cc; file2_mat_init.cc; file2_mat_print.cc; file2_mat_rd.cc; file2_mat_wrt.cc; file2_print.cc; file2_scm.cc; file2_trace.cc; file2_zero.cc; file4_cache.cc; file4_close.cc; file4_init.cc; file4_init_nocache.cc; file4_mat_irrep_close.cc; file4_mat_irrep_init.cc; file4_mat_irrep_rd.cc; file4_mat_irrep_rd_block.cc; file4_mat_irrep_row_close.cc; file4_mat_irrep_row_init.cc; file4_mat_irrep_row_rd.cc; file4_mat_irrep_row_wrt.cc; file4_mat_irrep_row_zero.cc; file4_mat_irrep_wrt.cc; file4_mat_irrep_wrt_block.cc; file4_print.cc; init.cc; memfree.cc; pairnum.cc; split.cc; trace42_13.cc; trans4_close.cc; trans4_init.cc; trans4_mat_irrep_close.cc; trans4_mat_irrep_init.cc; trans4_mat_irrep_rd.cc; trans4_mat_irrep_shift13.cc; trans4_mat_irrep_shift31.cc; trans4_mat_irrep_wrt.cc; ); psi4_add_module(lib dpd sourc,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libdpd/CMakeLists.txt:1069,error,error,1069,psi4/src/psi4/libdpd/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libdpd/CMakeLists.txt,2,['error'],['error']
Availability,"CENSE; .. #. .. include:: autodoc_abbr_options_c.rst. Notes on Options; ================. .. note:: The options referred to in the :ref:`sec:methods` section below; and indexed in :ref:`apdx:options_c_module` are placed in ``set`` blocks as; described in :ref:`sec:jobControl`, not as arguments to a Python function; (like ``energy()``). .. note:: All |PSIfour| keyword names and values are insensitive to case, both; those that are placed in ``set`` blocks and as Python function arguments.; The few exceptions are documented for the :py:func:`~psi4.driver.wrapper_database.database` function,; where case structure must match the database file. .. _`op_c_bool`:; .. _`op_c_boolean`:; .. note:: Boolean options can be specified by ``yes``, ``on``, ``true``, or ``1``; for affirmative and ``no``, ``off``, ``false``, or ``0`` for negative,; all insensitive to case. .. _`op_c_conv`:; .. note:: Certain convergence and tolerance keywords, of type *double* (real numbers),; may be specified using either a real number or an integer; and integer *X* is then; treated as the number of converged decimal digits required. For example, to request; as energy converged to :math:`10^{-6} E_h`, the user may set the ``e_convergence``; keyword to ``0.000001``, ``1.0e-6``, or ``6``. .. _`sec:psivarnotes`:. Notes on PSI Variables; ======================. .. note:: Starting in 1.6, there are three standard ways to access an excited state; property. We give examples below, but the method name and property name may change. * ``method ROOT 0 -> ROOT m property`` to get root ``m``.; * ``method ROOT 0 -> ROOT m property - h TRANSITION`` to get root m and; independently specify that the total transition symmetry is ``h``, e.g., A2.; * ``method ROOT 0 (h) -> ROOT m (i) property`` to get the transition; between two roots, specifying the symmetry of both states and the index of the target; roots among states of their own symmetry. For example, to target the second excited-state, which is also the lowest energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst:1925,toler,tolerance,1925,doc/sphinxman/source/notes_c.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/notes_c.rst,1,['toler'],['tolerance']
Availability,DTQ5 | | 5 | Q5 | TQ5 | DTQ5| DTQ5 | DTQ5 | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pV(X+d)Z-JKFIT | DTQ5 | | 5 | Q5 | TQ5 | DTQ5| DTQ5 | DTQ5 | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pCVXZ-JKFIT [#f3]_ | | | | | | | | | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pCV(X+d)Z-JKFIT | | | | | | | | | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pwCVXZ-JKFIT [#f3]_ | | | | | | | | | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+; | cc-pwCV(X+d)Z-JKFIT | | | | | | | | | |; +------------------------+------------+-----+-----+-----+-----+-----+------------------+------+-------+. |; |. .. _`table:basisDunningMP2FIT`:. .. table:: Summary of Dunning MP2-fitting basis sets available in |PSIfour|. +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +==================+============+=====+=====+=====+======+=======+==================+=======+=======+; | cc-pVXZ-RI | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pV(X+d)Z-RI | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCVXZ-RI | | | | | | | | | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCV(X+d)Z-RI | | | | | | | | | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pwCVXZ-RI | DTQ5 | | 5 | Q,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:14544,avail,available,14544,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,DTQ56 | DTQ56 | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pV(X+d)Z-RI | DTQ56 | 6 | 56 | Q56 | TQ56 | DTQ56 | DTQ56 | DTQ56 | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCVXZ-RI | | | | | | | | | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pCV(X+d)Z-RI | | | | | | | | | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pwCVXZ-RI | DTQ5 | | 5 | Q5 | TQ5 | DTQ5 | DTQ5 | DTQ5 | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+; | cc-pwCV(X+d)Z-RI | DTQ5 | | 5 | Q5 | TQ5 | DTQ5 | DTQ5 | DTQ5 | |; +------------------+------------+-----+-----+-----+------+-------+------------------+-------+-------+. |; |. .. _`table:basisDunningDUAL`:. .. table:: Summary of Dunning dual-basis helper basis sets available in |PSIfour|. +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | basis set | no diffuse | feb | mar | apr | may | jun | heavy-aug [#f2]_ | aug | d-aug |; +======================+============+=====+=====+=====+=====+=====+==================+=====+=======+; | cc-pVXZ-DUAL | TQ | | | | | | TQ | DTQ | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pV(X+d)Z-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pCVXZ-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pCV(X+d)Z-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----+-----+-----+------------------+-----+-------+; | cc-pwCVXZ-DUAL | | | | | | | | | |; +----------------------+------------+-----+-----+-----,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:15935,avail,available,15935,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"GY`. .. psivar:: db_name DATABASE MEAN ABSOLUTE DEVIATION. The mean absolute deviation [\ |kcalpermol|\ ] of the requested method; *name* from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{| \textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn} | }. .. psivar:: db_name DATABASE MEAN SIGNED DEVIATION. The mean deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contribution of the; antisymmetrized product of 1RDMs. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT THREE-PARTICLE ENERGY. The three-particle correlation energy correction [E_h] in density cumulant; theory, akin to :psivar:`(T) CORRECTION ENERGY` in coupled-cluster. .. psivar:: DCT TOTAL ENERGY. Total energy [E_h] in d",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:29690,avail,available,29690,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['avail'],['available']
Availability,"General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:documentation`:. Updating the |PSIfour| Users' and Programmers' Manual; =====================================================. |PSIfours| documentation is generated by `Sphinx <https://www.sphinx-doc.org/>`_; and lives in :source:`doc/sphinxman`. It is available online at; `<http://psicode.org/psi4manual/master/index.html>`_; for the latest development branch. Installing Sphinx; ^^^^^^^^^^^^^^^^^. Installing Sphinx is only necessary to build the documentation ; yourself, locally. The docs are served from; from psicode, so most users and developers won't need Sphinx; installed. Nevertheless, installation is easy.; Math is rendered through MathJax, so LaTeX and dvipng are no longer needed.; The sphinx executable should be in your path at CMake configure time for; documentation targets to be available. * Binary: ``conda install sphinx``; * Binary: ``conda env create -f devtools/conda-envs/docs-cf.yaml``; * Binary: ``pip install -U Sphinx``; * Source: https://pypi.org/project/Sphinx/. * Check:. >>> which sphinx-build; //anaconda/bin/sphinx-build; >>> sphinx-build --version # needs >= 3.5; Sphinx (sphinx-build) 3.5.3; >>> cmake; ...; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); ... Documentation Structure; ^^^^^^^^^^^^^^^^^^^^^^^. Sphinx has nice capabilities for extracting docstrings from python files,; presenting both auto-generated and narrative documentation in the same; format, hyperlinking within and to external websites, and generating; documentation in different formats from the same source. |PSIfours|; documentation is a unified document covering information for both users; and programmers in separate sections. From the top-level object directory,; build the f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst:1870,avail,available,1870,doc/sphinxman/source/documentation.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst,1,['avail'],['available']
Availability,"Geometry Optimization; =====================. .. codeauthor:: Rollin A. King and Alexander G. Heide; .. sectionauthor:: Rollin A. King, Alexander G. Heide, and Lori A. Burns. *Module:* :ref:`Keywords <apdx:optking>`, `OPTKING <https://github.com/psi-rking/optking>`_. |PSIfour| carries out molecular optimizations using a Python module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives |w---w| both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step with trust radius scaling, and the BFGS Hessian update. The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49]_.; The general approach employed in this code; is similar to the ""model Hessian plus RF method"" described and tested by Bakken and; Helgaker [Bakken:2002:9160]_. However, for separated; fragments, we have chosen not to employ their ""extra-redundant"" coordinates. The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; |optking__covalent_connect|. If the user finds that some; connectivity is lacking by default, then this value may be increased. .. warning:: The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian representation of the system. .. _DimerIntro:. Presently, by default, separate fragments are bonded by the; nearest atoms, and the whole system is treated as if it were part of one; molecule. However, with the option |optking__frag_mode|, fragments; may instead be related by a minimal set of interfragment coordinates defined by; reference points within each fragment. The reference points can be atomic; positions (current",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:2166,redundant,redundant,2166,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['redundant'],['redundant']
Availability,"HF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with example inputs, would be; appreciated. Where-to-post summary:[#f6]_. * How do I? -- `ask the forum <http://forum.psicode.org>`_. * I got this error, why? -- `ask the forum <http://forum.psicode.org>`_. * I got this error and I'm sure it's a bug -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * Can I open a discussion on this bit of code? -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * I have an idea/request and a plan -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * I have an idea/request -- `ask the forum <http://forum.psicode.org>`_. * Why do you? -- `ask the forum <http://forum.psicode.org>`_. * When will you? -- `ask the forum <http://forum.psicode.org>`_. * I have an experience that can improve the build documentation -- `inform the forum <http://forum.psicode.org>`_ or :source:`add to the documentation itself <doc/sphinxman/source>`. * Anything you want to share privately -- `crawdad@vt.edu <mailto:crawdad@vt.edu>`_ or `sherrill@gatech.edu <mailto:sherrill@gatech.edu>`_. .. [#f6] Adapted from `here <https://groups.google.com/forum/#!topic/google-collections-users/m8FnC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:41784,error,error,41784,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['error'],['error']
Availability,"HF calculation and then call MRCC to compute the CCSDT energy.; Here the ``qc_module=mrcc`` is optional since |PSIfour| has no builtin module; that can perform CCSDT. For a method like CCSD, no specification of |globals__qc_module|; will default to the CCENERGY module, and specification with value ``mrcc`` is; required to route the computation to the MRCC program.; For a CCSDT(Q) energy, simply use ``'ccsdt(q)'`` in the call to; :py:func:`~psi4.driver.energy`. MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only. At this time, |PSIfour| is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you can call it directly; For other methods, you will be required to; use the MRCC keywords described in Appendix :ref:`apdx:mrcc`.; Perturbative methods (``ccsd(t)``, ``ccsdtqp(h)_l``, etc.); are available with |scf__reference| ROHF in versions of MRCC published; at least after July 1, 2014. When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101]_ |PSIfour| will save both energies but will use; the CCSDT(Q)/B as the CCSDT(Q) energy. CCSDT(Q)/B has been found to be; more robust by Martin. [Martin:2014:785]_. .. include:: mrcc_table_energy.rst. Frozen-core approximation is also supported in the MRCC interface.; To optimize CH\ :sub:`4` with CCSDT freezing the 1\ *s* on carbon, run::. molecule H2O {; O; H 1 r; H 1 r 2 104.5; ; r = 1.0; }; ; set {; basis cc-pVDZ; freeze_core true; }; ; optimize('ccsdt'). Interface Details; ~~~~~~~~~~~~~~~~~. .. _`table:mrcc__mrcc_method`:. .. table:: MRCC methods . +---------------------+--------------+-------------------------------------------------------------+; | |mrcc__mrcc_method| | Method | Description | ; +=====================+==============+=============================================================+ ; | 1 | CC | |; +--",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:3598,avail,available,3598,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['avail'],['available']
Availability,"HOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. index:: prerequisites, compiling, installing; .. _`sec:installFile`:. ====================================; Compiling and Installing from Source; ====================================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :source:`conda/psi4-path-advisor.py`; (extensive help menu at ``conda/psi4-path-advisor.py -h``); or :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see :psicode:`installs/latest`; (select ""source""). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see :psicode:`installs/latest` (select ""conda"").; To see working builds for Linux, Mac, and Windows, see :src:; :source:`[this GHA] <.github/workflows/ecosystem.yml>`. .. _`faq:cmakeviasetup`:. Planning: how to configure Psi4 and invoke CMake; ------------------------------------------------. |PSIfour| is built through CMake. An abbreviated build guide can be found; :source:`within the source itself <CMakeLists.txt#L27>` . CMake does a good job scanning your computer ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:1567,down,downloads,1567,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['downloads']
Availability,"I_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. * :ref:`faq:psi4psiapipath`. Run |PSIfour|. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:runfrombinary`:. How to run Psi4 as executable or Python module from conda installation; ----------------------------------------------------------------------. The configuration commands below are generic versions of the ones printed; to your screen as advice upon installing |PSIfour| into a Anaconda,; Miniconda, or Psi4conda distribution, :samp:`{condadist} =; {ana|mini|psi4}conda`. To see the message again after initial installation,; with the conda environment active, run ``.psi4-post-link.sh``.; If ``which conda python psi4`` points to your; :samp:`{condadist}` and ``echo $PSI_SCRATCH`` is set, skip ahead to the; ""Run |PSIfour|\"" commands below. Otherwise, issue the following; commands directly in your terminal or place them into your ""rc"" file and; open a new terminal. If you installed the Psi4conda distribution or installed the |PSIfour|; conda package into the main environment of an Anaconda or Miniconda; distribution and added that to your :envvar:`PATH`, as prompted, then; ``which psi4`` likely yields :samp:`{condadist}/bin/psi4` and the ``PATH``; setting lines below are redundant. If you installed into a conda environment :samp:`{p4env}` and performed; :samp:`conda activate {p4env}`, then ``which psi4`` likely yields; :samp:`{condadist}/envs/{p4env}/bin/psi4` and the ``PATH`` setting lines; below are redundant. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; unsetenv PSIDATADIR; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:31122,echo,echo,31122,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['echo'],['echo']
Availability,"Ifour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the gcp executable can be obtained through ``conda install gcp -c psi4``; or ``conda install gcp-correction -c conda-forge``. * To remove a conda installation, ``conda remove gcp`` or ``conda remove gcp-correction``. **Source**. * .. image:: https://img.shields.io/badge/home-gCP-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp/getgcp. * If using |PSIfour| built from source and you want to build gCP from; from source also, follow the instructions provided with the source; (essentially, download the freely available tarball, unpack the source,; edit the Makefile to select a Fortran compiler, and run make). To be used by |PSIfour|, the program binary (``gcp`` or ``mctc-gcp``) must be; found in your :envvar:`PATH` so that QCEngine can detect it. Check if and where; found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular gcp compilation, simply adjust its; position in the path environment variables. Running gCP; ~~~~~~~~~~~. At present there is a limited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correction (it does use ECPs down to first row elements); but is listed here for completeness of the ""3c"" family.; A :ref:`DFTD3 <sec:dftd3>` executable, classic or simple-dftd3, must also be available for; the HF-3c, PBEh-3c, or B97-3c methods to run.; A :ref:`DFTD4 <sec:dftd3>` python module must also be available for; the r2SCAN-3c or wB97X-3c methods to run.; These m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:3465,error,error,3465,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,1,['error'],['error']
Availability,"JOBTYPE``. * You're not welcome to add ``CHARGE`` or ``MULTP`` options. Plan to get; these quantities from the molecule object. Since we frequently use subsets; of systems (with their own charge and multiplicity), this is safer. * Conform. Just grep ``'add' psi4/src/read_options.cc`` to get a list of; all the option names in |PSIfour| and try to match any conventions you; find. * If you have a quantity you'd like to call a cutoff, a threshold, a; tolerance, or a convergence, consider the following guidelines in naming; it. * If its value is typically greater than ~0.001, give it a name with ``CUTOFF``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with larger values (e.g.,; integrals, occupations, eigenvectors), give it a name with ``TOLERANCE``. * If its value is typically less than ~0.001 and quantities being tested; against the option are more valuable with smaller values (e.g., energy; changes, residual errors, gradients), give it a name with; ``CONVERGENCE``. * In deciding how to arrange words in an option name, place the context; first (e.g., ``MP2_AMPS_PRINT``, ``TRIPLES_DIIS``). This means ``PRINT``; will generally be at the end of an option name. * Use ``INTS_TOLERANCE`` (not schwarz_cutoff). * ``H`` in an option name is reserved for Hamiltonian (or hydrogen).; Hessian should be ``HESS``. * All option names should be all caps and separated by underscores. * If you have an option that instructs your module to do something not too; computationally intensive and then quit, append ``_EXIT`` to the option; name. * Scaling terms (like for scs) should follow the pattern ``MP2_SS_SCALE``; and ``SAPT_OS_SCALE``. * ``FRAG`` for fragment. * ``AVG`` for average. * For level-shifting, let's try to have it governed by (double); ``LEVEL_SHIFT`` only and not a boolean/double combo since the procedure; can be turned on (role of boolean) if the value (role of double) has; changed. * For Tikhonow regularization, ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:10904,error,errors,10904,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['error'],['errors']
Availability,"Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; single: geometry optimization, optimization. .. _`sec:optking`:. Geometry Optimization; =====================. .. codeauthor:: Rollin A. King and Alexander G. Heide; .. sectionauthor:: Rollin A. King, Alexander G. Heide, and Lori A. Burns. *Module:* :ref:`Keywords <apdx:optking>`, `OPTKING <https://github.com/psi-rking/optking>`_. |PSIfour| carries out molecular optimizations using a Python module called; optking. The optking program takes as input nuclear gradients and,; optionally, nuclear second derivatives |w---w| both in Cartesian coordinates.; The default minimization algorithm employs an empirical model Hessian,; redundant internal coordinates, an RFO step with trust radius scaling, and the BFGS Hessian update. The principal literature references include the introduction of redundant; internal coordinates by Peng et al. [Peng:1996:49]_.; The general approach employed in this code; is similar to the ""model Hessian plus RF method"" described and tested by Bakken and; Helgaker [Bakken:2002:9160]_. However, for separated; fragments, we have chosen not to employ their ""extra-redundant"" coordinates. The internal coordinates are generated automatically based on an assumed bond; connectivity. The connectivity is determined by testing if the interatomic; distance is less than the sum of atomic radii times the value of; |optking__covalent_connect|. If the user finds that some; connectivity is lacking by default, then this value may be increased. .. warning:: The selection of a Z-matrix input, and in particular the inclusion; of dummy atoms, has no effect on the behavior of the optimizer, which begins; from a Cartesian",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:1701,redundant,redundant,1701,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['redundant'],['redundant']
Availability,"Manual** [http://bit.ly/psi4manual](https://psicode.org/psi4manual/master/index.html) (built nightly from master branch) or https://psicode.org/psi4manual/1.4.0/index.html (last release). * **Tutorial** https://psicode.org/psi4manual/master/tutorial.html for Psithon (``psi4 job.in``), https://psicode.org/psi4manual/master/psiapi.html for PsiAPI (``python job.py``). * **Forum** http://forum.psicode.org. * **Communication & Support** https://psicode.org/psi4manual/master/introduction.html#technical-support. * **GitHub** https://github.com/psi4/psi4 (authoritative repository). * **Continuous Integration Status** [![Azure DevOps builds](https://img.shields.io/azure-devops/build/psi4/e80489d7-9619-4512-8e7b-255e355b3ab8/1/master.svg?logo=azure%20devops)](https://dev.azure.com/psi4/psi4/_build?definitionId=1) on Linux and Windows. * **Anaconda** https://anaconda.org/psi4 (binary available for Linux, Mac, Mac Silicon, Windows, and WSL Windows [![Binstar Badge](https://anaconda.org/psi4/psi4/badges/downloads.svg)](https://anaconda.org/psi4/psi4) ) [![Binstar Badge](https://anaconda.org/conda-forge/psi4/badges/downloads.svg)](https://anaconda.org/conda-forge/psi4) ) [instructions](https://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-download-site). * **Coverage** Python and C++ source code lines hit by running most of the test suite. [![codecov](https://img.shields.io/codecov/c/github/psi4/psi4.svg?logo=Codecov&logoColor=white)](https://codecov.io/gh/psi4/psi4). * **Interested Developers** https://psicode.org/developers.php (replacement page needed) (welcome to fork psi4/psi4 and follow [GitHub contribution procedure](https://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow)) [![PRs welcome](https://img.shields.io/badge/PRs-welcome-yellow.svg)](http://makeapullrequest.com). * **Sample Inputs** http://www.psicode.org/psi4manual/master/testsuite.html (also in [`samples/`](samples)). * **Download Tarball*",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:5332,down,downloads,5332,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,1,['down'],['downloads']
Availability,"NERGY; CUSTOM SCS-OLCCD CORRELATION ENERGY. Changeable quantities based on options.; The total electronic energy [E_h] and correlation energy component [E_h]; for the method formed by any reweighting of the named :samp:`{method} DOUBLES ENERGY`; for opposite-spin and same-spin contributions, with; any singles carried along.; Contrast with :samp`SCS-{method} TOTAL ENERGY`. .. psivar:: db_name DATABASE MEAN ABSOLUTE DEVIATION. The mean absolute deviation [\ |kcalpermol|\ ] of the requested method; *name* from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{| \textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn} | }. .. psivar:: db_name DATABASE MEAN SIGNED DEVIATION. The mean deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \frac{1}{n}\sum_{rxn}^{n}{\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn}}. .. psivar:: db_name DATABASE ROOT-MEAN-SQUARE DEVIATION. The rms deviation [\ |kcalpermol|\ ] of the requested method *name*; from the stored reference values for the requested reactions in; database *db_name*. If no reference is available, this will be a large; and nonsensical value. .. math:: \sqrt{\frac{1}{n}\sum_{rxn}^{n}{(\textsf{\textsl{name}}_{rxn}-\text{REF}_{rxn})^2}}. .. psivar:: DCT LAMBDA ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 2-electron cumulant's contribution contribution to the reduced; density matrix energy expression. Not recommended for interpretative; use except by reduced density matrix specialists. .. psivar:: DCT SCF ENERGY. An energy term in density cumulant theory [E_h]. This term is the; 1-electron reduced density matrix (1RDM) contribution to the reduced; density matrix energy expression, plus the contrib",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:29320,avail,available,29320,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['avail'],['available']
Availability,"NTERFACE) # dummy. if(${CMAKE_INSIST_FIND_PACKAGE_qcengine}); message(VERBOSE ""Suitable qcengine located externally as user insists""); endif(). else(); if(${CMAKE_INSIST_FIND_PACKAGE_qcengine}); message(FATAL_ERROR ""Suitable qcengine could not be externally located as user insists""); endif(). include(ExternalProject); message(STATUS ""Suitable qcengine could not be located, ${Magenta}Building qcengine${ColourReset} instead.""). file(TO_NATIVE_PATH ""${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}"" _install_lib); file(TO_NATIVE_PATH ""${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}/"" _install_bin); file(TO_NATIVE_PATH ""${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/bin/"" _pip_install_bin); if(WIN32); set(_qcengineexe ""qcengine.exe""); else(); set(_qcengineexe ""qcengine""); endif(). # Note: Without downgrading setuptools or `sed`ing ""git_refnames"" (_version.py for versioneer-generated),; # pip will strenuously resist (""Invalid version: <branch or commit>"") arbitrary branch or commit refs from GH.; # Make a proper PEP440 tag (e.g., `git tag -a v0.26.0.dev1 -m ""v0.26.0.dev1""`), push it, and use in URL below.; #; # With downgrading to (setuptools""<66.0.0"" packaging""<23.0"" ; former vendors latter), one can use arbitrary; # branch or commit tarballs without the tagging procedure described above. ExternalProject_Add(qcengine_external; DEPENDS qcelemental_external; BUILD_ALWAYS 1; URL https://github.com/MolSSI/QCEngine/archive/v0.29.0.tar.gz; DOWNLOAD_NO_EXTRACT 1; CONFIGURE_COMMAND """"; UPDATE_COMMAND """"; BUILD_COMMAND """"; BUILD_IN_SOURCE 1; INSTALL_COMMAND ${Python_EXECUTABLE} -m pip install <DOWNLOADED_FILE>; --target=${_install_lib}; --no-deps; #-v; ); ExternalProject_Add_Step(qcengine_external; fix_qcng_bin; DEPENDEES install; COMMAND ${CMAKE_COMMAND} -E copy ""${_pip_install_bin}${_qcengineexe}"" ""${_install_bin}${_qcengineexe}""; COMMENT ""Moves qcengine entry-point into place alongside bin/psi4 for `qcengine info`""; ); endif(); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/qcengine/CMakeLists.txt:1475,down,downgrading,1475,external/upstream/qcengine/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/qcengine/CMakeLists.txt,2,['down'],['downgrading']
Availability,"NU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: DKH; .. _`sec:DKH`:. Interface to DKH by A. Wolf, M. Reiher, and B. A. Hess; ======================================================. .. codeauthor:: Justin M. Turney; .. sectionauthor:: Justin M. Turney. *Module:* :ref:`Keywords <sec:dkhkeywords>`, :ref:`Samples <apdx:testSuitedkh>`. .. image:: https://img.shields.io/badge/home-dkh-5077AB.svg; :target: https://github.com/psi4/dkh. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://www.reiher.ethz.ch/software/dkh-x2c.html. .. _`sec:dkhinstall`:. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/dkh/badges/version.svg; :target: https://anaconda.org/psi4/dkh. * DKH is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, dkh has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; dkh can be obtained through ``conda install dkh -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_dkh`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect dkh and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. dkh from conda without thinking, consult. * To remove a conda installation, ``conda remove dkh``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/dkh.svg?maxAge=2592000; :target: https://github.com/psi4/dkh. * If using |PSIfour| built from source and you want dkh built from; from source also,; enable it as a feature with :makevar:`ENABLE_dkh`,; and let the build system fetch and build it and activate depend",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dkh.rst:1774,avail,available,1774,doc/sphinxman/source/dkh.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dkh.rst,1,['avail'],['available']
Availability,"ON ENERGY': -0.2629759351596186},; 'S22-16-monoB-unCP': {'CURRENT ENERGY': -77.07606823017188,; 'DF-MP2 CORRELATION ENERGY': -0.2594122526144091},; 'S22-2-dimer': {'CURRENT ENERGY': -152.40958884746667,; 'DF-MP2 CORRELATION ENERGY': -0.3797598812113561},; 'S22-2-monoA-unCP': {'CURRENT ENERGY': -76.19905879745446,; 'DF-MP2 CORRELATION ENERGY': -0.1887118848315123},; 'S22-2-monoB-unCP': {'CURRENT ENERGY': -76.19902978067739,; 'DF-MP2 CORRELATION ENERGY': -0.18857384937354635},; 'S22-8-dimer': {'CURRENT ENERGY': -80.67416758080654,; 'DF-MP2 CORRELATION ENERGY': -0.2844102558783027},; 'S22-8-monoA-unCP': {'CURRENT ENERGY': -40.336952636980364,; 'DF-MP2 CORRELATION ENERGY': -0.14185962536715307},; 'S22-8-monoB-unCP': {'CURRENT ENERGY': -40.336952636980506,; 'DF-MP2 CORRELATION ENERGY': -0.14185962536715097}}; ; DB_RXN; {'S22-16': {'CURRENT ENERGY': -0.0035470557928363178,; 'DF-MP2 CORRELATION ENERGY': -0.0014825844040612934},; 'S22-2': {'CURRENT ENERGY': -0.011500269334817403,; 'DF-MP2 CORRELATION ENERGY': -0.0024741470062974724},; 'S22-8': {'CURRENT ENERGY': -0.0002623068456699684,; 'DF-MP2 CORRELATION ENERGY': -0.0006910051439986686}}; ; mp2 interaction energy of water dimer (S22-2); -0.0115002693348. .. index:: database(); available. .. _`sec:availableDatabases`:. Available Databases; ^^^^^^^^^^^^^^^^^^^. Below are documented for particular databases the availability of the generic; database function options **cp**, **rlxd**, **benchmark**, and the string; options for **subset**. The full reagent member list, which can also be used; in conjunction with **subset**, is not included here for consideration of space; and may be found in the database file. The database Python files are very; readable and should be consulted for more particular questions. ----. .. comment This toctree directive only here to suppress warning at build time.; include line below is doing the work. .. toctree::; :hidden:. autodoc_available_databases. .. include:: autodoc_available_databases.rst. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:6750,avail,available,6750,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,3,['avail'],"['availability', 'available', 'availableDatabases']"
Availability,"OSX_DEPLOYMENT_TARGET}; -DCMAKE_OSX_SYSROOT=${CMAKE_OSX_SYSROOT}; CMAKE_CACHE_ARGS -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}; -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS}; -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}; -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}). #-DLIBINT2_REQUIRE_CXX_API=ON; #-DLIBINT2_REQUIRE_CXX_API_COMPILED=OFF; #-DLIBINT2_ENABLE_FORTRAN=OFF; #-DLIBINT2_ENABLE_PYTHON=OFF; else(); message(STATUS ""Suitable Libint2 could not be located, ${Magenta}Building Libint2${ColourReset} from generator source instead.""); message(WARNING ""${Yellow}Libint2 generator source build requires Ninja (not Makefile) builder and Boost, Eigen, and GMPXX dependencies. The build will be very long for non-trivial AM, and parallelism won't help for the generation phase. Edit external/upstream/libint2/CMakeLists.txt for AM, derivative, and integral classes settings. This is also building v2.7, not v2.8 Libint2.${ColourReset}""). if (MSVC); message(FATAL_ERROR ""${Red}Libint2 generator source build faulty on Windows.${ColourReset}""); endif(). # NOTE: active AM settings below will pass few tests, as they're set for 1st row triple-zeta ene and double-zeta ene/grad/hess for both conv/df. Please edit for desired use. ExternalProject_Add(libint2_external; URL https://github.com/loriab/libint/archive/new-cmake-2023-take2-b.zip; CMAKE_ARGS -GNinja; -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}; -DCMAKE_BUILD_TYPE=${_cmake_build_type}; -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}; -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}; -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}; -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}; -DENABLE_ONEBODY=2; -DENABLE_ERI=2; -DENABLE_ERI3=2; -DENABLE_ERI2=2; -DENABLE_G12=1; -DDISABLE_ONEBODY_PROPERTY_DERIVS=ON; -DMULTIPOLE_MAX_ORDER=4; -DBoost_DIR=${Boost_DIR}; -DBOOST_ROOT=${BOOST_ROOT}; -DEigen3_DIR=${Eigen3_DIR}; -DEigen3_ROOT=${Eigen3_ROOT}; -DMultiprecision_ROOT=${Multiprecision_ROOT}; -DERI3_PURE_SH=OFF; -DERI2_PURE_SH=OFF;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:8465,fault,faulty,8465,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['fault'],['faulty']
Availability,"OUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; pair: method alias; adding new. .. _`sec:methodAlias`:. Defining a Method Alias; =======================. .. note:: No recompile of the |PSIfour| program is necessary for changes made to; files in ``$PSIDATADIR`` aka :source:`psi4/share/psi4`, including those described below. .. caution:: As of 1.0, the below, while essentially still correct, is so aged; as to be difficult to follow. Since quantum chemical methods in |PSIfour| are accessed through Python functions, and; most important quantities are available as PSI variables, it is straightforward; to create aliases to commonly run calculations or to define hybrid methods. The; :source:`psi4/driver/aliases.py` file is intended for editing by the user for; this purpose. As an example, the MP2.5 method; (which admittedly is already built in to |PSIfour|); is the average of MP2 and MP3. The latter is; available through the arbitrary order MPn code and returns all lower energies; along with it in PSI variables. The following is basic code that will compute; and return the MP2.5 energy. ::. def run_mp2_5(name, **kwargs):; ; energy('mp3', **kwargs); e_scf = psi4.get_variable('SCF TOTAL ENERGY'); ce_mp2 = psi4.get_variable('MP2 CORRELATION ENERGY'); ce_mp3 = psi4.get_variable('MP3 CORRELATION ENERGY'); ; ce_mp25 = 0.5 * (ce_mp2 + ce_mp3); e_mp25 = e_scf + ce_mp25; ; print """""" MP2.5 total energy: %16.8f\n"""""" % (e_mp25); print """""" MP2.5 correlation energy: %16.8f\n"""""" % (ce_mp25); ; return e_mp25. Compare the above to the method that resides ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst:1578,avail,available,1578,doc/sphinxman/source/quickaddalias.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickaddalias.rst,1,['avail'],['available']
Availability,"OpenMP_LIBRARY_DIRS to hint location.). .. code-block:: bash. >>> cmake -DLAPACK_LIBRARIES=/opt/intel/mkl/lib/intel64/libmkl_rt.so -DLAPACK_INCLUDE_DIRS=/opt/intel/mkl/include -DOpenMP_LIBRARY_DIRS=/opt/intel/compiler/lib/intel64/. **Notes**. * Much of |PSIfours| speed and efficiency depends on the corresponding; speed and efficiency of the linked BLAS and LAPACK libraries; (especially the former). Consider the following recommendations:. * It is NOT wise to use the stock BLAS library provided with many; Linux distributions like RedHat, as it is usually just the completely; unoptimized netlib distribution. The choice of LAPACK is less; critical, and so the unoptimized netlib distribution is acceptable. * Perhaps the best choice, if available, is Intel's MKL library,; which includes efficient threaded BLAS and LAPACK (as of |PSIfour|; v1.1, earliest known working version is MKL 2013; as of v1.4,; should use at leat MKL 2019). MKL, which is; freely available through conda, is the only threaded BLAS/LAPACK; distribution fully supported by |PSIfour|. * On Mac, the native Accelerate libraries are very nice and would; be recommended but for the potential conflict between |PSIfour|; BLAS and NumPy BLAS. Unless you've a special NumPy, avoid!. * The open-source LAPACK distributions OpenBLAS (formerly GotoBLAS); mostly works. Use it at your own risk and after testing your; particular distribution, including tests run multithreaded,; if you intend to run |PSIfour| so. Use at least 0.2.15, and; pay attention to how it was compiled - unthreaded seems safe,; openmp-threaded is mostly safe, default pthreaded is *not* safe. See; https://github.com/psi4/psi4/issues/1009 for recent analysis. * Another open-source LAPACK distribution, ATLAS had; stability issues with the DFOCC module at last testing,; https://github.com/psi4/psi4/issues/391. * ACML libraries are known to work with |PSIfour| v1.1 at ACML 6. * Because of how link loaders work, at runtime, the BLAS of |PSIfour|; and the ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:49642,avail,available,49642,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"P by I. Kaliman; =================================. .. codeauthor:: Andrew C. Simmonett, A. Eugene DePrince III, Rollin A. King, and Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <psi4/driver/procrouting/solvent/efp.py>`. .. image:: https://img.shields.io/badge/home-libefp-5077AB.svg; :target: https://github.com/libefp2/libefp. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/libefp2/libefp. |PSIfour| contains code to interface to the LIBEFP library developed; in L. Slipchenko's group by I. Kaliman. LIBEFP; requires no additional licence,; downloads, or configuration. Since February 2017, libefp is not required to build; |Psifour|. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libefp/badges/version.svg; :target: https://anaconda.org/psi4/libefp. * libefp is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, libefp has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; libefp can be obtained through ``conda install libefp -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_libefp`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect libefp and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. libefp from conda without thinking, consult. * To remove a conda installation, ``conda remove libefp``. **Source**. * .. image:: https://img.shields.io/github/tag/ilyak/libefp.svg?maxAge=2592000; :target: https://github.com/ilyak/libefp. * If using |PSIfour| built from source and you want libefp built from; from source also,; enable it as a feature with :makevar:`ENABLE_libefp`,; and let the build system f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:2084,avail,available,2084,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['avail'],['available']
Availability,"PDF documentation build""). # * full, proper build with latex builder; add_custom_command(; TARGET sphinxpdf POST_BUILD; COMMAND ${SPHINX_EXECUTABLE}; -b latex # builder; -d ${CCBD}/_doctrees # cache w/ pickled reST; -c ${CCBD}/source # whereabouts of conf.py; ${CCBD}/source # build from; ${CCBD}/latex # build to; COMMENT ""Building latex documentation ...""); add_custom_command(; TARGET sphinxpdf POST_BUILD; COMMAND ${PDFLATEX_COMPILER}; -interaction=nonstopmode; ""Psi4.tex"" > /dev/null 2>&1; WORKING_DIRECTORY ${CCBD}/latex; COMMENT ""Building remarkably ugly PDF documentation from LaTeX ... (ignore the make exit error)""); endif(). # Establishing commands to build docs targets. # * full, proper build with html builder; add_custom_command(; TARGET sphinxman POST_BUILD; COMMAND ${SPHINX_EXECUTABLE}; # -v # Repeat for greater verbosity; # -q # Enable for quiet mode; # -Q # Enable for even more quiet mode; # -E # don't use a saved environment, always read all file; # -a # write all files; default is to only write new and changed files; # -n # nit-picky mode, warn about all missing references; # -W # turn warnings into errors; # --keep-going # with -W, keep going when getting warnings; ${SPHINX_EXTRAS}; -b html # builder; -d ${CCBD}/_doctrees # cache w/ pickled reST; -c ${CCBD}/source # whereabouts of conf.py; ${CCBD}/source # build from; ${CCBD}/html # build to; COMMENT ""Building html documentation ...""). # * Special abridged-docs target for fast-compile when developing static docs; # * removing autodocs alleviates dependencies; # * thar will be warnings galore for unresolved links; add_custom_command(; TARGET sphinxmini; COMMAND ${CMAKE_COMMAND} -E remove ${CCBD}/source/autodoc*; COMMAND ${CMAKE_COMMAND} -E remove_directory ${CCBD}/source/autodir_options_c; COMMAND ${CMAKE_COMMAND} -E remove_directory ${CCBD}/source/autodir_psivariables; COMMAND ${CMAKE_COMMAND} -E remove_directory ${CCBD}/source/autodir_psivariables; COMMAND ${CMAKE_COMMAND} -E remove_directory ${CCBD}/sou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:24397,error,errors,24397,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,1,['error'],['errors']
Availability,"Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:handlingOptions_py`:. LibOptions: globals, locals, has_changed and all that; =====================================================. To simplify parsing of options and handling of defaults, the Options class; was created. It functions in the following way:. - Each module (or plugin) declares which options it will look for in the; input: their name, type (string, int, double, array, etc.), and any; default value they take. - The input is parsed for these options, and defaults are assigned for; those keywords not specified by the user. - The c-side module or plugin can then query the Options object for the; values associated with each keyword. - The options will also be accessible py-side to the procedures that drive; the modules. Array-type options are not available in python. Declaring Options; -----------------. Each module needs to make itself known to the Options object, via a; read_options section. For plugins, this routine is provided by the user; in the plugin code. For native |PSIfour| modules, the entries need to; be appended to the read_options code in :source:`psi4/src/read_options.cc`.; An example of such a routine is. .. code-block:: cpp. if (name == ""MYMODULE""|| options.read_globals()) {; /*- The amount of information printed; to the output file -*/; options.add_int(""PRINT"", 1);; /*- Do save information to |mymodule__data_file| at the end of the computation? -*/; options.add_bool(""SAVE_INFO"", true);; /*- An array containing the number of doubly occupied orbitals per irrep ; (in :ref:`Cotton order <table:irrepOrdering>`) -*/; options.add(""DOCC"", new ArrayType());; /*- The factor by which the harmonic vibrational frequencies are multiplied to; obtain an approximation to the fundamental vibrational frequencies -*/; options",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst:1835,avail,available,1835,doc/sphinxman/source/optionshandling.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst,1,['avail'],['available']
Availability,"Records tag for v1.3rc2. # goto GH:psi4/psi4 > Settings > Branches > master > Edit; # https://github.com/psi4/psi4/settings/branch_protection_rules/424295; # uncheck admins ""Do not allow ..."" and Save changes. >>> git push upstream master. # re-engage admins ""Do not allow ..."" protections. Tag postrelease; ---------------. ::. # be on clean maintenance branch up-to-date with upstream in both commits and tags; # * mind which version strings get ""v"" and which don't; # * if not fork, replace ""upstream"" with ""origin"". >>> git checkout 1.3.x; Switched to branch '1.3.x'. >>> vi psi4/metadata.py; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version__ = '1.3'; -__version_long = '1.3+zzzzzzz'; +__version__ = '1.3.1'; +__version_long = '1.3.1+zzzzzzz'. >>> git add psi4/metadata.py; >>> git commit -m ""v1.3.1""; [1.3.x 2ce1c29] v1.3.1. >>> git log --oneline | head -1; 786fb2b v1.3.1; >>> git tag -a v1.3.1 2ce1c29 -m ""v1.3.1"". # skipping the hash recording and ""upcoming"" step b/c only tags matter on maintenance branch. # free pushing to maintenance branches at present so GitHub interface steps not needed. # see note at ""Tag (pre)release"" for why atomic commit needed. Collect docs from GHA artifacts. >>> git push --atomic upstream 1.3.x v1.3.1. Initialize release branch; -------------------------. * follow tagging procedure; * before re-engaging the admins ""Do not allow ..."" button, push a branch at the tag commit (not the records commit). ::. >>> git log --online | head -2; 45315cb Records tag for v1.3; 20e5c7e v1.3. >>> git checkout 20e5c7e; >>> git checkout -b 1.3.x; Switched to a new branch '1.3.x'; >>> git push upstream 1.3.x. * set up new branch as protected branch through GitHub psi4 org Settings. Should be already covered under 1.*.x rule. Build extra Conda packages for Psi4 channel; -------------------------------------------. Once upon a time, ""Psi4 stack"", meant packages ``psi4``, ``psi4-rt``, ``psi4-dev``, and ``psi4-docs``.; Package ``psi4-d",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:16379,mainten,maintenance,16379,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,"R},""Unix Makefiles"">,${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag/*efp,${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag/h2o.efp>; COMMENT ""Autodoc efp fragments""); else(); file(WRITE ${CCBD}/source/autodoc_available_efpfrag.rst """"); endif(). # Format git log for feed; add_custom_command(; COMMAND ${CMAKE_COMMAND} -E make_directory feed; COMMAND ${Python_EXECUTABLE} ${CCSD}/extract_changeset.py ${CCBD}; OUTPUT ${CCBD}/feed/history_trac_changeset.txt; ${CCBD}/feed/latest_trac_changeset.txt; DEPENDS ${CCSD}/extract_changeset.py; COMMENT ""Format git --log for psicode.org feed""). # Establishing dependencies for docs targets. # * mini github feed for psicode.org; add_custom_target(ghfeed; DEPENDS ${CCBD}/feed/history_trac_changeset.txt; ${CCBD}/feed/latest_trac_changeset.txt; COMMENT ""Preparing GitHub feed""). # * announcement; if (LATEX_COMPILER AND PDFLATEX_COMPILER); message(STATUS ""Documentation targets ${_jupy}available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF)""); else(); message(STATUS ""Documentation targets ${_jupy}available: sphinxman (html), sphinxmini (quick html)""); endif(). # * quick mini-build for docs development; add_custom_target(sphinxmini; DEPENDS ${CCBD}/source/conf.py; COMMENT ""Building Sphinx abridged HTML documentation build""). # * full, proper build; add_custom_target(sphinxman; DEPENDS ${CCBD}/source/autodoc_psi4bases.rst; ${CCBD}/source/autodoc_psifiles.rst; ${CCBD}/source/autodoc_physconst.rst; ${CCBD}/source/autodoc_abbr_options_c.rst; ${CCBD}/source/autodoc_glossary_options_c.rst; ${CCBD}/source/autodoc_options_c_bymodule.rst; ${CCBD}/source/autodir_options_c/module__scf.rst # representative; ${CCBD}/source/autodir_options_c/scf__guess.rst # representative; ${CCBD}/source/autodoc_psivariables_bymodule.rst; ${CCBD}/source/autodir_psivariables/module__scf.rst # representative; ${CCBD}/source/autodir_psivariables/module__cfour.rst; ${CCBD}/source/autodoc_available_databases.rst; ${CCBD}/sou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt:20419,avail,available,20419,doc/sphinxman/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/CMakeLists.txt,2,['avail'],['available']
Availability,"SIfour\; executables have been installed. The configure script in \$PSI4 ; will take all the necessary files in \$PSI4/tests; with the .in stub: Makefile.in, MakeRules.in, MakeVars.in,; and runtest.pl.in, replace variables with system specific parameters,; and copy/create the testing files and directories in \$prefix/tests.; The tests should be run in the object directory before installation. If you have just added a new module for performing, say multireference ; coupled cluster, and you would like to add a test case to the current ; test suite, here is what you should do. ; \begin{enumerate}; \item Copy one of the existing test case directories to an ; appropriately named directory for the new test case. \item Create an appropriate input file for running the new module. ; Then, if your program produced the correct data, rename; the output files to *.ref. Follow the convention of the ; existing test cases. Make sure you add a descriptive comment to the; input file, stating what the calculation type is. Use the special comment; marker ``\%!'' to do this, so that the comment is inserted into the user's; manual. \item If the test case is small, add the directory name to the list; in \$PSI4/tests/Makefile.in. If the test is particularly tricky,; see the psi\_start or rhf-stab test cases as an example. \item All the testing functionality is located in the perl library; \file{runtest.pl.in}. If you are testing for a quantity that; is not searched for currently, then add a function to the ; library following the format of the functions already available.; If you have added functionality to the \PSIfour\ driver,; make sure to update the appropriate functions in \file{runtest.pl.in}. \item Add the location of the Makefile for the new test case; to the configure script in \$PSI4. \end{enumerate}. Please contact one of the authors of \PSIfour\ before making any; major changes or if you have a problem adding a new test case.; Remember, if all else fails, read the source code. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst:1670,avail,available,1670,doc/sphinxman/source/attic/progtestsuite.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/progtestsuite.rst,1,['avail'],['available']
Availability,"Scratch file location can be specified through the ; :envvar:`PSI_SCRATCH` environment variable or through the |psirc| file; (see section :ref:`sec:psirc`). Most of the time, :envvar:`PSI_SCRATCH`; is preferred, and it overrides any existing |psirc| setting. You can set up ; :envvar:`PSI_SCRATCH` by issuing the following commands in a terminal,; or including them in the appropriate ``rc`` file. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. |PSIfour| has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch :ref:`numbered by content <apdx:psiFiles>` and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user. A Python callable handle to the |PSIfour| I/O management routines is available,; and is called ``psi4_io``. To instruct the I/O manager to send all files to; another location, say ``/scratch/user``, add the following command to your input; file: ::. psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case ``$MYSCRATCH``) to set the scratch directory;; the following code will do that::. import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to spec",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:3309,checkpoint,checkpoint,3309,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['checkpoint'],['checkpoint']
Availability,"T. Daniel Crawford, Andrew C. Simmonett; .. sectionauthor:: Roberto Di Remigio. *Module:* :ref:`Keywords <apdx:pcm>`, :ref:`PSI Variables <apdx:pcm_psivar>`, :source:`PCMSolver <psi4/src/psi4/libpsipcm/>`. .. image:: https://img.shields.io/badge/home-PCMSolver-5077AB.svg; :target: https://github.com/PCMSolver/pcmsolver. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://pcmsolver.readthedocs.io/en/latest/. |PSIfour| contains code to interface to the PCMSolver library developed; by R. Di Remigio and L. Frediani.; The PCMSolver library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable continuum model (PCM), a continuum solvation model [Tomasi:2005:2999]_. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/pcmsolver/badges/version.svg; :target: https://anaconda.org/psi4/pcmsolver. * PCMSolver is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, PCMSolver has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; PCMSolver can be obtained through ``conda install pcmsolver -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_PCMSolver`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect PCMSolver and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. pcmsolver from conda without thinking, consult. * To remove a conda installation, ``conda remove pcmsolver``. **Source**. * .. image:: https://img.shields.io/github/tag/PCMSolver/pcmsolver.svg?maxAge=2592000; :target: https://github.com/PCMSolver/pcmsolver. * If using |PSIfour| built from source and you want PCMSolver built from; from source also,; enable it as a feature with :makevar:`ENAB",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:2213,avail,available,2213,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['avail'],['available']
Availability,"TH}``. Further directions assume that the ``conda`` command is in your path; you may have to log out and log back in for ``which conda`` to return correctly.; ..; .. .. code-block:: bash; ..; .. >>> bash Miniconda-latest-Linux-x86_64.sh; .. # check; .. >>> which conda; .. /path/to/miniconda/bin/conda; ..; .. 4. Update conda. This updates the package manager itself.; ..; .. .. code-block:: bash; ..; .. >>> conda update conda. .. _`sec:slowpsi4`:. Detailed Installation of |PSIfour|; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. 5. Subscribe to |PSIfour|. Subscribe to our channel at https://anaconda.org/psi4 that contains the |PSIfour| package and several dependency packages. Make sure this shows up in your ``~/.condarc`` file. .. code-block:: bash. >>> conda config --add channels http://conda.anaconda.org/psi4; # check; >>> cat ~/.condarc; channels:; - http://conda.anaconda.org/psi4; - defaults. 6. Install |PSIfour|. You can install into the main conda environment so that whenever commands ``conda`` or (Ana/Miniconda's) ``python`` are available, then ``psi4`` is available, too. .. code-block:: bash. >>> conda install psi4; # check; >>> which psi4; /path/to/miniconda/bin/psi4. Or, you can install into a `conda environment <https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#>`_ that places |PSIfour| and its dependencies (including python) into a sandbox unaffected by any other software installed in Ana/Miniconda. This is recommended for developers to avoid interference between multiple versions (including github/conda versions) or to test python versions, *etc.*. In practical terms, installing into a conda environment means you can turn |PSIfours| availability on/off by switching conda environments without turning on/off the whole Ana/Miniconda installation. Below, |PSIfour| is installed into an environment called ``p4env``. Then the environment is activated, removing the main Ana/Miniconda ``bin`` and adding ``envs/p4env/bin`` to :envvar:`PATH`. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:21145,avail,available,21145,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,2,['avail'],['available']
Availability,"TUS ""${Cyan}Found qcengine${ColourReset}: ${PY_qcengine} (found version ${qcengine_VERSION})""); add_library(qcengine_external INTERFACE) # dummy. if(${CMAKE_INSIST_FIND_PACKAGE_qcengine}); message(VERBOSE ""Suitable qcengine located externally as user insists""); endif(). else(); if(${CMAKE_INSIST_FIND_PACKAGE_qcengine}); message(FATAL_ERROR ""Suitable qcengine could not be externally located as user insists""); endif(). include(ExternalProject); message(STATUS ""Suitable qcengine could not be located, ${Magenta}Building qcengine${ColourReset} instead.""). file(TO_NATIVE_PATH ""${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}"" _install_lib); file(TO_NATIVE_PATH ""${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}/"" _install_bin); file(TO_NATIVE_PATH ""${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}/bin/"" _pip_install_bin); if(WIN32); set(_qcengineexe ""qcengine.exe""); else(); set(_qcengineexe ""qcengine""); endif(). # Note: Without downgrading setuptools or `sed`ing ""git_refnames"" (_version.py for versioneer-generated),; # pip will strenuously resist (""Invalid version: <branch or commit>"") arbitrary branch or commit refs from GH.; # Make a proper PEP440 tag (e.g., `git tag -a v0.26.0.dev1 -m ""v0.26.0.dev1""`), push it, and use in URL below.; #; # With downgrading to (setuptools""<66.0.0"" packaging""<23.0"" ; former vendors latter), one can use arbitrary; # branch or commit tarballs without the tagging procedure described above. ExternalProject_Add(qcengine_external; DEPENDS qcelemental_external; BUILD_ALWAYS 1; URL https://github.com/MolSSI/QCEngine/archive/v0.29.0.tar.gz; DOWNLOAD_NO_EXTRACT 1; CONFIGURE_COMMAND """"; UPDATE_COMMAND """"; BUILD_COMMAND """"; BUILD_IN_SOURCE 1; INSTALL_COMMAND ${Python_EXECUTABLE} -m pip install <DOWNLOADED_FILE>; --target=${_install_lib}; --no-deps; #-v; ); ExternalProject_Add_Step(qcengine_external; fix_qcng_bin; DEPENDEES install; COMMAND ${CMAKE_COMMAND} -E copy ""${_pip_install_bin}${_qcengineexe}"" ""${_inst",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/qcengine/CMakeLists.txt:1150,down,downgrading,1150,external/upstream/qcengine/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/qcengine/CMakeLists.txt,2,['down'],['downgrading']
Availability,"The Psi4 package is distributed for free and without any; guarantee of reliability, accuracy, or suitability for any; particular purpose. No obligation to provide technical support is; expressed or implied. As time allows, the developers will attempt; to answer inquiries on the [forum](http://forum.psicode.org>) or; [GitHub](https://github.com/psi4/psi4/issues/new). For bug reports,; specific and detailed information, with example inputs and `psi4; --version`, would be appreciated. #### Where-to-post summary. * How do I? -- [ask the forum](http://forum.psicode.org). * I got this error, why? -- [ask the forum](http://forum.psicode.org). * I got this error and I'm sure it's a bug -- [file a GitHub issue](https://github.com/psi4/psi4/issues/new). * Can I open a discussion on this bit of code? -- [file a GitHub issue](https://github.com/psi4/psi4/issues/new). * I have an idea/request and a plan -- [file a GitHub issue](https://github.com/psi4/psi4/issues/new). * I have an idea/request -- [ask the forum](http://forum.psicode.org). * Why do you? -- [ask the forum](http://forum.psicode.org). * When will you? -- [ask the forum](http://forum.psicode.org). * I have an experience that can improve the documentation -- [inform the forum](http://forum.psicode.org) or [edit the docs via the little pencil](http://psicode.org/psi4manual/master/index.html) or [add to the documentation itself](doc/sphinxman/source). * Anything you want to share privately -- psi4aiqc+help at gmail.com. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/.github/SUPPORT.md:71,reliab,reliability,71,.github/SUPPORT.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/.github/SUPPORT.md,3,"['error', 'reliab']","['error', 'reliability']"
Availability,"The python function; then makes its changes to the option and runs any c-side modules with; those changes. Finally, just before the function returns, the options are; reset to the user's value and has_changed status (which should now again; reflect only whether the user has changed the value). .. comment options[""AO_BASIS""].has_changed(); .. comment will return false if the default value is being used, and true if the user specified this keyword in the input. .. warning:: |globals__puream| is an exception in that its value and; ``has_changed()`` value only reflect what the user has explicitly set.; This keyword should not be queried to find out the current; |globals__puream| state for the active basis; use instead,; ``psi4.MintsHelper().basisset().has_puream()``. Reading Options in Module; -------------------------. Handling Options in Driver; --------------------------. This section is about the scopes of options and how best to handle them in; the python driver. There are four groups of commands available.; Options from the c-side Options object are accessible in the Python driver through four sets of commands. - get . - :py:func:`psi4.core.get_global_option()`; - :py:func:`psi4.core.get_local_option()`; - :py:func:`psi4.core.get_option()`. - set . - :py:func:`psi4.core.set_global_option()`; - :py:func:`psi4.core.set_local_option()`. - has_changed . - :py:func:`psi4.core.has_global_option_changed()`; - :py:func:`psi4.core.has_local_option_changed()`; - :py:func:`psi4.core.has_option_changed()`. - revoke_changed . - :py:func:`psi4.core.revoke_global_option_changed()`; - :py:func:`psi4.core.revoke_local_option_changed()`. There's a pattern here. Setting something, either a value (set) or a; negative changed status (revoke_changed), can only be done for a specific; scope, either global or local to the specified module. Querying, either a; value (get) or a changed status (has_changed), can be done in the global; scope, in a specified local scope, or in the context of """,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst:8667,avail,available,8667,doc/sphinxman/source/optionshandling.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst,1,['avail'],['available']
Availability,"U Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:conda`:. Conda Binary Distribution; =========================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. .. warning:: As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. |PSIfour| is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through `Anaconda (formerly Continuum Analytics; <https://www.anaconda.com/products/individual>`_, the company that produces; `Anaconda Python <http://docs.continuum.io/anaconda/index.html>`_ (a; full-fledged scientific python environment with package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_) and, more particularly, `Miniconda; <https://docs.conda.io/en/latest/miniconda.html>`_ (a lightweight Python; distribution with same package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_). Some nice features for us:. * cross-platform. * no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:1392,down,downloads,1392,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloads']
Availability,"V | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-SCF | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+; | DMRG-CASPT2 | RHF | CONV | E | | | |; +-------------------------+-------------------+-------------------+------------+------------+------------+------------+. .. [#f10] Many methods have a more detailed breakdown of capabilities :ref:`here <table:managedmethods>`.; .. [#f8] Not all combinations of reference and algorithm type may be available for any variant and derivative. See detailed capabilities tables.; .. [#f9] Shown are analytic implementations for energy (E), gradient, (G), and Hessian (H); finite difference derivatives are invoked automatically if analytic not available.; .. [#f1] Frozen natural orbital variant available. In particular, RHF available as CONV.; .. [#f2] Frozen natural orbital variant available. In particular, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with example inputs, would be; appreciated. Where-to-post summary:[#f6]_. * How do I? -- `ask the forum <http://forum.psicode.org>`_. * I got this error, why? -- `ask the forum <http://forum.psicode.org>`_. * I ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:40862,avail,available,40862,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"With tests, proposed changes to |PSIfour| that break your; code fall upon the change proposer to fix, rather than being merged; silently and lying in wait for a concientious user to detect and report; and then likely falling upon *you* to fix. * For a general developer, the test suite allows confidence in refactoring, switching out underlying libraries, maintenance, and upgrading. CTest and pytest, PSIthon and PsiAPI; ====================================. In designing a test, sometimes you want it to be a model input for the user in a single file or you don't want a lot of ``psi4.`` or Python syntax cluttering the input.; In this case, follow :ref:`faq:add_psithon_tests` to prepare as PSIthon (``psi4 input.dat``) for, roughly speaking, running through :program:`ctest`.; The PSIthon/CTest test suite occupies the whole of :source:`tests` *except* :source:`tests/pytests`. At other times you want the test to check several variations of a template job or you want to test error handling or you want to focus on PsiAPI rather than PSIthon or you want to control the compute conditions with environment variables.; In this case, follow :ref:`faq:add_psiapi_tests` to prepare as PsiAPI (``import psi4``) for, roughly speaking, running through :program:`pytest`.; The PsiAPI/pytest test suite occupies :source:`tests/pytests`. The above description sounds as if there are two disjoint test suites, and you have to run both ``ctest`` and ``pytest`` to fully test |PSIfour|.; This has indeed been the case until March 2022.; The difficulty has been that (1) two test suites is unexpected so some developers don't know to run both; and (2) there are important tests in the PSIthon suite that can't be run on a |PSIfour| installation since CTest only works in a build directory.; Now, by adding an extra file to the test directory (:ref:`faq:psithon_through_pytest`), PSIthon tests can also be run through :program:`pytest`.; This hasn't rolled out to all ~500 PSIthon tests (help wanted), but eventu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:2786,error,error,2786,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['error'],['error']
Availability,"Y`` will be set by; :py:func:`~psi4.driver.energy`, etc. In future, this will be extracted from the wavefunction. ::. # return highest or most prominent wavefunction (like dimer for SAPT); return fnocc_wfn. Managed Methods; ---------------. There are several conditions when a method and derivative combination should be *managed*:. * when functionality overlaps between modules, a pattern is needed to; access each route through the code;. * when functionality doesn't overlap completely, a pattern is needed to apportion defaulting among; the modules, taking into account reference (RHF/UHF/ROHF), calc type (CONV/DF/CD), and possibly; |globals__freeze_core| state (AE/FC). * for higher-level derivatives, when, say, gradient functionality for mtd+ref+type+fcae doesn't; exactly match energy functionality, a pattern is needed to decide analytic vs. finite difference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative error message is needed. Managed methods handle these cases through the addition of a new; keyword |globals__qc_module| and a set of type keywords analogous to; |globals__mp2_type|: |globals__mp_type|,; |globals__ci_type|, |globals__cc_type|, which can have values ``CONV``,; ``DF``, and ``CD``. These are all *global* keywords, as their values are; shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls a; ""select"" function rather than a ""run"" function. ::. procedures = {; 'energy': {; 'scf' : run_scf,; 'mp3' : select_mp3,; 'dct' : run_dct,. Then in :source:`psi4/driver/procrouting/proc.py`, the select function runs through; reference, t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:6128,avail,available,6128,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,2,"['avail', 'error']","['available', 'error']"
Availability,"_c/sapt__nat_orbs_t3.rst; .. include:: autodir_options_c/sapt__nat_orbs_v4.rst; .. include:: autodir_options_c/sapt__occ_tolerance.rst. .. comment Advanced Keywords Controlling MP2 NO Approximations; .. comment ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. comment .. include:: autodir_options_c/sapt__nat_orbs_t2.rst. .. index:: SAPT; charge-transfer. .. _`sec:saptct`:. Charge-Transfer in SAPT; ^^^^^^^^^^^^^^^^^^^^^^^. It is possible to obtain the stabilization energy of a complex due to; charge-transfer effects from a SAPT computation. The charge-transfer energy ; can be computed with the SAPT module as described by Stone; and Misquitta [Misquitta:2009:201]_. Charge-transfer energies can be obtained from the following calls to the; energy function. ::. energy('sapt0-ct'); energy('sapt2-ct'); energy('sapt2+-ct'); energy('sapt2+(3)-ct'); energy('sapt2+3-ct'); energy('sapt2+(ccd)-ct'); energy('sapt2+(3)(ccd)-ct'); energy('sapt2+3(ccd)-ct'). For now, charge transfer computations are not available with open-shell SAPT0. A SAPT charge-transfer analysis will perform 5 HF computations: the dimer; in the dimer basis, monomer A in the dimer basis, monomer B in the dimer; basis, monomer A in the monomer A basis, and monomer B in the monomer B; basis. Next, it performs two SAPT computations, one in the dimer basis and; one in the monomer basis. Finally, it will print a summary of the; charge-transfer results::. SAPT Charge Transfer Analysis; ------------------------------------------------------------------------------------------------; SAPT Induction (Dimer Basis) -2.0970 [mEh] -1.3159 [kcal/mol] -5.5057 [kJ/mol]; SAPT Induction (Monomer Basis) -1.1396 [mEh] -0.7151 [kcal/mol] -2.9920 [kJ/mol]; SAPT Charge Transfer -0.9574 [mEh] -0.6008 [kcal/mol] -2.5137 [kJ/mol]. These results are for the water dimer geometry shown above computed with ; SAPT0/aug-cc-pVDZ. . .. index:: ; pair: SAPT; output. Monomer-Centered Basis Computations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:30570,avail,available,30570,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:257243,error,error,257243,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:260227,error,error,260227,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:256271,error,error,256271,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:57552,error,error,57552,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450727,error,error,450727,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:367320,error,error,367320,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93710,error,error,93710,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50380,error,error,50380,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:55962,error,error,55962,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:516387,error,error,516387,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24477,error,error,24477,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"_wfn = scf_helper(name, **kwargs); ; # If the scf type is DF/CD, then the AO integrals were never written to disk; if psi4.get_option('SCF', 'SCF_TYPE') in ['DF', 'CD']:; psi4.MintsHelper(ref_wfn.basisset()).integrals(). Direct any post-scf modules to be run. ::. # include if further post-scf modules are needed; psi4.transqt2(); psi4.ccsort(); psi4.mp2(). If an :py:class:`~psi4.driver.p4util.OptionsState` object was set up, those options; need to be returned to the original user state with the following. ::. # include if optstash = OptionsState(...) was set up previously; optstash.restore(). Current best practice is to store as much as possible on the wavefunction, not in globals. The; driver should handle interactions with globals. When QCVariables are stored on the wavefunction in; the module, copy to globals with the below::. # Shove variables into global space; for k, v in dfmp2_wfn.variables().items():; core.set_variable(k, v). The function should return the wavefunction, except for rare cases like EFP where no wavefunction available.; For now, ``CURRENT ENERGY`` will be set by; :py:func:`~psi4.driver.energy`, etc. In future, this will be extracted from the wavefunction. ::. # return highest or most prominent wavefunction (like dimer for SAPT); return fnocc_wfn. Managed Methods; ---------------. There are several conditions when a method and derivative combination should be *managed*:. * when functionality overlaps between modules, a pattern is needed to; access each route through the code;. * when functionality doesn't overlap completely, a pattern is needed to apportion defaulting among; the modules, taking into account reference (RHF/UHF/ROHF), calc type (CONV/DF/CD), and possibly; |globals__freeze_core| state (AE/FC). * for higher-level derivatives, when, say, gradient functionality for mtd+ref+type+fcae doesn't; exactly match energy functionality, a pattern is needed to decide analytic vs. finite difference. * when default type is not available for a method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:5068,avail,available,5068,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['avail'],['available']
Availability,"_{ij} = \sum_{ab} v_{ij}^{ab} (2 t_{ij}^{ab} - t_{ij}^{ba}). Methods whose shifts (:math:`\Delta_{ij}` and :math:`\Delta_i`) do not; explicitly depend on orbitals :math:`i` or :math:`j` (CISD, CEPA(0), ACPF,; and AQCC) have solutions that render the energy stationary with respect; variations in the amplitudes. This convenient property allows density; matrices and 1-electron properties to be evaluated without any additional; effort. Note, however, that 1-electron properties are currently; unavailable when coupling these stationary CEPA-like methods with frozen; natural orbitals. Density-fitted coupled cluster; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Density fitting (DF) [or the resolution of the identity (RI)] and Cholesky; decomposition (CD) techniques are popular in quantum chemistry to avoid; the computation and storage of the 4-index electron repulsion integral; (ERI) tensor and even to reduce the computational scaling of some terms.; DF/CD-CCSD(T) computations are available in |Psifour|, with or without the; use of FNOs, through the FNOCC module. The implementation and accuracy of; the DF/CD-CCSD(T) method are described in [DePrince:2013:2687]_\. The DF-CCSD(T) procedure uses two auxiliary basis sets. The first set is; that used in the SCF procedure, defined by the |scf__df_basis_scf|; keyword. If this keyword is not specified, an appropriate -JKFIT set is; automatically selected. This auxiliary set defines the ERIs used to; build the Fock matrix used in the DF-CCSD(T) procedure. The second; auxiliary set is used to approximate all other ERIs in the DF-CCSD(T); procedure. The choice of auxiliary basis is controlled by the keyword; |fnocc__df_basis_cc|. By default, |fnocc__df_basis_cc| is the RI set; (optimized for DFMP2) most appropriate for use with the primary basis.; For example, if the primary basis is aug-cc-pVDZ, the default; |fnocc__df_basis_cc| will be aug-cc-pVDZ-RI. Alternatively, the user can request that the DF-CCSD(T) procedure use a; set of vectors defined",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst:13916,avail,available,13916,doc/sphinxman/source/fnocc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fnocc.rst,1,['avail'],['available']
Availability,"` options is available: ::. energy('scf', write_orbitals='my_mos'),. which writes a ``Wavefunction`` object converted (serialized) to a numpy file called ``my_mos.npy``.; The restart can then be done as follows: ::. energy('scf', restart_file='my_mos'). Specifying the ``.npy`` suffix when writing and reading restart files is optional. Alternatively, the restart can also be done from any previously saved ``wfn`` object. ::. energy, scf_wfn = energy('scf',return_wfn=True); scf_wfn.to_file('my_wfn'); energy('scf', restart_file='my_wfn'). For advanced users manipulating or writing custom wavefunction files, note; that |PSIfour| expects the numpy file on disk to have the ``.npy`` extension, not, e.g., `.npz`. .. index:: DIIS, MOM, damping. .. _`sec:scfconv`:. Convergence Stabilization; ~~~~~~~~~~~~~~~~~~~~~~~~~. A summary of Psi's supported convergence stabilization techniques is presented below:. DIIS [On by Default]; DIIS uses previous iterates of the Fock matrix together; with an error criterion based on the orbital gradient to produce an informed; estimate of the next Fock Matrix. DIIS is almost always necessary to converge; the SCF procedure and is therefore turned on by default. In rare cases, the; DIIS algorithm may need to be modified or turned off altogether, which may be; accomplished via :term:`options <DIIS (SCF)>`.; ADIIS [On by Default]; ADIIS uses previous iterates of the Fock and density matrices to produce an; informed estimate of the next Fock matrix. ADIIS estimates are based on minimizing; an energy estimate rather than zeroing the residual, so this performs best in the early; iterations. By default, Psi will start using ADIIS before blending the ADIIS step with; the DIIS step, eventually using the pure DIIS step. The closely-related EDIIS procedure; may be used instead by setting |scf__scf_initial_accelerator|. This is formally identical; to ADIIS for HF, but the methods will differ for more general DFT.; MOM [Off by Default]; MOM was developed to com",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:24155,error,error,24155,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['error']
Availability,"`; * Run tests matching by label: ``ctest -L testlabel``; * Run tests excluding those by label: ``ctest -LE testlabel``. Pytest has similar commands:. * Run tests in parallel with ``-n`` flag (if Python package ``pytest-xdist`` installed). For maximum parallelism: :samp:`pytest -n auto`; * Run full test suite: ``pytest``; * Run the quick tests: ``pytest -m quick``; * Run the minimal number of tests to ensure Psi4 and any add-ons in working order: ``pytest -m smoke``; * Run tests matching by name: ``pytest -k testname``; * Run tests excluding those by name: ``pytest -k ""not testname""``; * Run tests matching by label: ``pytest -m testlabel``; * Run tests excluding those by label: ``pytest -m ""not testlabel""``; * Run tests with complicated filtering by name: ``pytest -k ""cc and not cc4 and not stdsuite""``; * Run tests and see test names: ``pytest -v``; * Run tests and see test names and sometimes more verbose errors: ``pytest -vv``. .. _`faq:testsoutput`:. How to see CTest testing errors; -------------------------------. ::. >>> ctest; Test project /your/path/2/psi4/build/directory/tests; Start 248: tu1-h2o-energy; 1/2 Test #248: tu1-h2o-energy ................... Passed 1.73 sec; Start 6: cc1; 2/2 Test #6: cc1 ..............................***Failed 0.07 sec; ... When ``ctest`` reports that some (or all) tests have failed, look in your; build directory for file; :samp:`{objdir}/Testing/Temporary/LastTest.log`. It may have a; ``.tmp`` extension, depending on whether the last test was interrupted and; a few other factors. Either way, this file should contain CMake's testing; output, as well as everything that was printed to the screen. .. _`faq:pytest`:. How to test a Psi4 installation; -------------------------------. ``ctest`` requires a connection to source files and ``cmake``; machinery and so can only be performed from :samp:`{objdir}`; (staged installation). To test an installed |PSIfour| (full or staged; installation), a supplementary test suite is available to b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:62677,error,errors,62677,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['errors']
Availability,"`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fitting :math:`(oo|`\ -type products,; such as encountered in SCF theory and the electrostatics/exchange terms of SAPT.; RI sets are appropriate for fitting :math:`(ov|`\ -type products, such as encountered in; MP2 and most SAPT terms. Citations for basis sets can be found in their; definition files at :source:`psi4/share/psi4/basis` in the source. For basis set availability by; element and the default value for keyword |globals__puream|, consult; Appendix :ref:`apdx:basisElement`. |; |. .. _`table:basisPopleOrbital`:. .. table:: Summary of Pople-style orbital basis sets available in |PSIfour| [#f1]_. +-----------------+--------------+------------------+---------------+-------------------+----------------+; | no diffuse | heavy-augmented | augmented |; +-----------------+--------------+------------------+---------------+-------------------+----------------+; | basis set | alias | basis set | alias | basis set | alias |; +=================+==============+==================+===============+===================+================+; | STO-3G | | | | | |; +-----------------+--------------+------------------+---------------+-------------------+----------------+; | 3-21G | | | | | |; +-----------------+--------------+------------------+---------------+-------------------+----------------+; +-----------------+--------------+------------------+---------------+-------------------+----------------+; | 6-31G |",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:2760,avail,availability,2760,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['availability']
Availability,"`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fitting :math:`(oo|`\ -type products,; such as encountered in SCF theory and the electrostatics/exchange terms of SAPT.; RI sets are appropriate for fitting :math:`(ov|`\ -type products, such as encountered in; MP2 and most SAPT terms. Citations for basis sets can be found in their; definition files at :source:`psi4/share/psi4/basis` in the source. For basis set availability by; element and the default value for keyword |globals__puream|, consult; Appendix :ref:`apdx:basisElement`. |PSIfour| uses the angular momentum convention below that; skips the letter ``J``. Note that Gaussian94 convention is; *not* to skip this letter.; |PSIfour| can use either convention for ``.gbs`` import (assuming; angular momentum levels are not skipped), but it will always output; in the ``HIK`` sequence. Another portion of the G94 format, labeling; angular momentum with :samp:`L={l}` syntax is newly (August 2020); implemented, and this is preferred for ``L=7`` and above to; avoid ambiguity. ::. L: 0123456789...; Psi4: SPDFGHIKLM...; G94: SPDFGHIJKL... .. index:: basis set; multiple within molecule; .. _`sec:psithonBasissets`:. Mixing Basis Sets; =================. While the above syntax will suffice for specifying basis sets in most cases,; the user may need to assign basis sets to specific atoms. To achieve this, a; basis ""block"" can be used. We use a snippet from the :srcsample:`mints2` sample; input file, which p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:3742,avail,availability,3742,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,1,['avail'],['availability']
Availability,"`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub release`_; * `Publish psicode.org release`_; * `Finalize release`_. .. _`faq:postreleaseprocedure`:. Post-Release (e.g., ``v1.8.2``); -------------------------------. * `Assemble postrelease changes`_; * `Tweak Conda for postrelease`_; * `Tag postrelease`_; * `Build Psi4conda set`_; * `Build extra Conda packages for Psi4 channel`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub postrelease`_; * `Publish psicode.org release`_; * `Finalize release`_. On January first; ----------------. * Screenshot https://anaconda.org/psi4/psi4 .; * Screenshot https://anaconda.org/conda-forge/psi4 .; * Add new year title and images to website; https://github.com/psi4/psicode-hugo-website/edit/master/content/posts/downloads.md .; * On the next day, check that the new year's plot appears at https://psicode.netlify.app/posts/downloads/ . Update copyright year; ---------------------. * ``cd ~/path/to/psi4``; * Primary target is licenses. - ``grep -rl ""(c) 2007-2017"" * | xargs sed -i '' ""s/(c) 2007-2017/(c) 2007-2018/g""``; - On Linux, drop the ``''`` in above command; - Need to do ``psi4/`` and ``docs/`` dirs. * Also, license in these files. - ``tests/runtest.py``; - ``README.md``. * Also, in content of :source:`doc/sphinxman/source/conf.py.in#L130`. Update counter scripts; ----------------------. * Log onto vergil as cdsgroup.; * Add new years, Python versions, and Psi4 versions as needed.; * check vergil /home/cdsgroup/psi4meta/download-analysis/installer: vi downloads_updater.py any new patterns to add?; * check vergil if changing any download patterns. Update samples; --------------. * Run ``make sphinxman`` at least once by hand; * Check in resulting ``psifiles.py`` and all the updated and new ``samples/`` files and dirs; * Make a lone PR and warn reviewers not to read it, since autogenerated. Collect ne",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:3006,down,downloads,3006,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downloads']
Availability,"a activate {p4env}`, then ``which psi4`` likely yields; :samp:`{condadist}/envs/{p4env}/bin/psi4` and the ``PATH`` setting lines; below are redundant. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; unsetenv PSIDATADIR; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executable. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilation using driver from source; ------------------------------------------------------------------------. When developing python driver code, it can be annoying to keep `make`\; ing to test the code. |PSIfour| can be run ""inplace"" through the; following procedure. To be clear, this is running compiled C++ from the; build directory and python from th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:32734,redundant,redundant,32734,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['redundant'],['redundant']
Availability,"a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a higher lying SCF solution. Because of this, in; practice level shifting is most useful in the initial phase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry is utilized to reduce number of; integrals.; OUT_OF_CORE; An out-of-core, unsorted algorithm using exact ERIs. Overcomes the; memory bottleneck of the curre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:27583,error,error,27583,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['error']
Availability,"a third of the tests in 5 minutes, the so-called *quicktests*: ``ctest -L quick``; * Run the same subset of tests that continuous integration checks (not the full test suite): ``ctest -L quick``; * Run the minimal number of tests to ensure Psi4 and any add-ons in working order: ``ctest -L smoke``; * Run tests matching by name: ``ctest -R testname``; * Run tests excluding those by name: ``ctest -E testname``; * Run tests matching by label: ``ctest -L testlabel``; * Run tests excluding those by label: ``ctest -LE testlabel``. Pytest has similar commands:. * Run tests in parallel with ``-n`` flag (if Python package ``pytest-xdist`` installed). For maximum parallelism: :samp:`pytest -n auto`; * Run full test suite: ``pytest``; * Run the quick tests: ``pytest -m quick``; * Run the minimal number of tests to ensure Psi4 and any add-ons in working order: ``pytest -m smoke``; * Run tests matching by name: ``pytest -k testname``; * Run tests excluding those by name: ``pytest -k ""not testname""``; * Run tests matching by label: ``pytest -m testlabel``; * Run tests excluding those by label: ``pytest -m ""not testlabel""``; * Run tests with complicated filtering by name: ``pytest -k ""cc and not cc4 and not stdsuite""``; * Run tests and see test names: ``pytest -v``; * Run tests and see test names and sometimes more verbose errors: ``pytest -vv``. .. _`faq:testsoutput`:. How to see CTest testing errors; -------------------------------. ::. >>> ctest; Test project /your/path/2/psi4/build/directory/tests; Start 248: tu1-h2o-energy; 1/2 Test #248: tu1-h2o-energy ................... Passed 1.73 sec; Start 6: cc1; 2/2 Test #6: cc1 ..............................***Failed 0.07 sec; ... When ``ctest`` reports that some (or all) tests have failed, look in your; build directory for file; :samp:`{objdir}/Testing/Temporary/LastTest.log`. It may have a; ``.tmp`` extension, depending on whether the last test was interrupted and; a few other factors. Either way, this file should contain CMake's te",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:62604,error,errors,62604,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['errors']
Availability,"able error generated. ::. def select_mp3(name, **kwargs):; """"""Function selecting the algorithm for a MP3 energy call; and directing to specified or best-performance default modules. """"""; reference = psi4.get_option('SCF', 'REFERENCE'); mtd_type = psi4.get_global_option('MP_TYPE'); module = psi4.get_global_option('QC_MODULE'); # Considering only [df]occ/fnocc/detci. func = None; if reference == 'RHF':; if mtd_type == 'CONV':; if module == 'DETCI':; func = run_detci; elif module == 'FNOCC':; func = run_fnocc; elif module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'UHF':; if mtd_type == 'CONV':; if module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'ROHF':; if mtd_type == 'CONV':; if module in ['DETCI']:; func = run_detci. if func is None:; raise ManagedMethodError(['select_mp3', name, 'MP_TYPE', mtd_type, reference, module]). return func(name, **kwargs). Naturally, in the run function, you must either use the type keyword for; type switching or translate it into whatever ``DO_CD``-like keywords your; module uses. At run time with a closed-shell molecule, ::. energy('mp3'). will run OCC, while ::. set qc_module fnocc; energy('mp3'). will run FNOCC mp3. A special case is DETCI that *can* run mp3, but oughtn't to be used for such. So above, ROHF CONV mp3 has no default, but can still access the detci code with ::. set reference rohf; set qc_module detci; energy('mp3'). While the below gives an error ::. set reference rohf; energy('mp3'). Again, whenever a single method name needs to call multiple proc.py run; functions, it should be managed. In :ref:`table:managedmethods` ""Y"" means method available in; module, ""D"" means module is default for that method, """" mean method not; available. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:9105,error,error,9105,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,3,"['avail', 'error']","['available', 'error']"
Availability,"ad-only; within the modules. Py-side is another matter since the driver's role is to take terse; instructions from the user and translate those into instructions to the; C++ modules, usually through manipulation of options. .. comment * Reading options C-side; .. comment ; .. comment This usually takes place within each module during options parsing,; .. comment see section [] for details. No option is modified, so this process has; .. comment no entanglement with the definition of has_changed.; .. comment ; .. comment * Setting options C-side; .. comment ; .. comment This is very rarely done (what's going on in optking?). This; .. comment document was written as background to the only case of note: PUREAM.; .. comment This option has a clearly defined default, but it can't be set in; .. comment read_options because its default depends on other options. This is a; .. comment situation common to many options (and most all array options) and is; .. comment generally handled within the module code and so is never available to; .. comment the user. Analogously, PUREAM is handled in libmints but it is never; .. comment reset. In order to preserve effective definition [a], the strategy for each; python driver function is to query for the value of any option the; function may want to change and for the current has_changed status; (presumably reflecting whether the user has changed the value, as long as; no preceding code has corrupted that definition). The python function; then makes its changes to the option and runs any c-side modules with; those changes. Finally, just before the function returns, the options are; reset to the user's value and has_changed status (which should now again; reflect only whether the user has changed the value). .. comment options[""AO_BASIS""].has_changed(); .. comment will return false if the default value is being used, and true if the user specified this keyword in the input. .. warning:: |globals__puream| is an exception in that its value an",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst:7210,avail,available,7210,doc/sphinxman/source/optionshandling.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optionshandling.rst,1,['avail'],['available']
Availability,"adients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290341,error,error,290341,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf hessians for hf'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'h",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:197293,error,error,197293,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:499133,error,error,499133,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:417758,error,error,417758,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:424725,error,error,424725,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:249541,error,error,249541,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"al Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: CPPE, PE. .. _`sec:cppe`:. Interface to CPPE by M. Scheurer; =======================================. .. codeauthor:: Maximilian Scheurer; .. sectionauthor:: Maximilian Scheurer. *Module:* :ref:`Keywords <apdx:pe>`, :ref:`PSI Variables <apdx:pe_psivar>`. .. image:: https://img.shields.io/badge/home-cppe-informational.svg; :target: https://github.com/maxscheurer/cppe. .. .. raw:: html; .. ; .. <br>; .. ; .. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; .. :target: http://pcmsolver.readthedocs.io/en/latest/. |PSIfour| contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721]_. For a general tutorial on how to prepare/perform PE calculations, read the; `tutorial review <https://onlinelibrary.wiley.com/doi/full/10.1002/qua.25717>`_. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/cppe/badges/version.svg; :target: https://anaconda.org/psi4/cppe. * CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, CPPE has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; CPPE can be obtained through ``conda install cppe -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_cppe`,; hint its location with :makevar:`cppe_DIR`,; and rebuild |PSIfour| to d",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:1736,down,downloads,1736,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['down'],['downloads']
Availability,"al Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: basis set; available by family; .. _`apdx:basisTables`:. ====================; Basis Sets by Family; ====================. Tables :ref:`Pople <table:basisPopleOrbital>`,; :ref:`Dunning <table:basisDunningOrbital>`, ; :ref:`Dunning (Douglas-Kroll) <table:basisDunningDK>`, ; :ref:`Dunning (F12) <table:basisDunningF12>`, ; :ref:`Karlsruhe <table:basisKarlsruhe>`,; :ref:`Jensen <table:basisJensen>`,; :ref:`Petersson <table:basisPetersson>`,; and :ref:`Other <table:basisOther>` summarize the orbital basis sets available in; |PSIfour|. These tables are arranged so that columns indicate degree of; augmentation by diffuse functions (generally necessary for anions, excited; states, and noncovalent interactions) and DTQ56 indicate the :math:`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fitting :math:`(oo|`\ -type products,; such as encountered in SCF theory and the electrostatics/exchange terms of SAPT.; RI sets are appropriate for fitting :math:`(ov|`\ -type products, such as encountered in; MP2 and most SAPT terms. Citations for basis sets can be found in their; definition files at :source:`psi4/share/psi4/b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:1833,avail,available,1833,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"al; memory of a small-memory node if all threads are involved in the generation of; these integrals. For general DF algorithms, the user may specify::. set MODULE_NAME df_ints_num_threads n. to explicitly control the number of threads used for integral formation. Setting; this variable to 0 (the default) uses the number of threads specified by the; :py:func:`~psi4.core.set_num_threads` Psithon method or the default environmental variables. .. index:: PBS queueing system, threading; .. _`sec:PBS`:. PBS job file; ============. To run a |PSIfour| job on a PBS queueing system, you need to properly set up; all necessary variables in the PBS job file. Below is a minimal example of; a PBS job file for a threaded job, and a short explanation for each section. .. code-block:: bash. #!/bin/tcsh; #PBS -j oe; #PBS -l pmem=2120mb; #PBS -N jobname; #PBS -V. cd $PBS_O_WORKDIR; setenv myscratch /scratch/user/psi4.$PBS_JOBID. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end. unsetenv PSIDATADIR; setenv PSI_SCRATCH $myscratch; if ! ( $?PSIPATH ) setenv PSIPATH """"; setenv PSIPATH /path/to/external/modules:${PSIPATH}; setenv PSIPATH /path/to/python/modules:${PSIPATH}; /psi/install/directory/bin/psi4 -i input.in -o input.out -n 4. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end. The top section features PBS-specific commands. These depend on the ; specific characteristics of your PBS queuing system but they may include: ::. #!/bin/tcsh; #PBS -j oe ; #PBS -l pmem=2120mb; #PBS -N jobname; #PBS -V; ; The ``PBS -j oe`` option instructs PBS to write any output or error message; from the queuing system in dedicated files. ``PBS -l pmem=2120mb`` requests ; 2120 MB of memory for each thread on the node. The total memory requested for ; the job by PBS should generally be slightly greater than what indicated ; in ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:13837,echo,echo,13837,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['echo'],['echo']
Availability,"als that have; been partially interfaced into libmints. Enabling erd and adding; ``set integral_package erd`` (do this in ``~/.psi4rc`` for universal; effect) runs libderiv from Libint for derivative integrals and erd for; non-derivative integrals. .. warning:: The interface between erd and libderiv is not fully; debugged. So analytic gradients, particularly density-fitted ones,; are wrong, as are ESP calculations and some energies for long-range; corrected (""omega"") functionals. Insofar as faulty answers are; anticipated with |globals__integral_package| ``erd``, |PSIfour| will; throw an error if you try to execute that class of computation. But; there may be more, so use with caution. .. warning:: erd seems to be having some problems with Intel 2018 compilers. presently disabled in conda package. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/erd/badges/version.svg; :target: https://anaconda.org/psi4/erd. * ERD is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). .. * If using the |PSIfour| binary, erd has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; erd can be obtained through ``conda install erd -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_erd`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect erd and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. erd from conda without thinking, consult. * To remove a conda installation, ``conda remove erd``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/erd.svg?maxAge=2592000; :target: https://github.com/psi4/erd. * If using |PSIfour| built from source and you want erd built from; from source also,; enable it as a feature with :makevar:`ENABLE_erd`,; and let the build system fetch and build it and activate dep",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/erd.rst:2646,avail,available,2646,doc/sphinxman/source/erd.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/erd.rst,1,['avail'],['available']
Availability,"als, which are entirely delocalized across; the molecule. Canonical orbitals are commonly used because of mathematical; convenience. Another possible choice is localized orbitals. Any two orbitals; localized to separate regions of a molecule can be treated as non-interacting; to a good approximation. Thus, when working with localized orbitals, the number; of interacting orbital pairs (and triples, quadruples, etc.) scales linearly; with system size. If carefully implemented, programs that exploit this sparsity; can be made to scale linearly (or else with lower order than their canonical; counterparts) at the cost of of modest, controllable errors. This is the; defining insight of DLPNO-MP2 and all related ""local correlation"" methods. The DLPNO-MP2 code is a linear-scaling alternative to the :ref:`DF-MP2 <sec:dfmp2>`; code, and is intended for use with large systems for which DF-MP2 is intractable.; When running DLPNO-MP2 with default settings, approximately 99.9% of the DF-MP2 ; correlation energy is recovered. The general outline of the method is as follows:. (1) Localize the active occupied MOs (with the Foster-Boys method); (2) Construct projected AOs (PAOs) from the virtual MOs; (3) Calculate three-index integrals in the (sparse) LMO/PAO basis; (4) Perform local density fitting to construct (sparse) exchange integrals; (5) Transform local virtuals from PAOs to pair natural orbitals (PNOs), and truncate; (6) Solve the iterative local MP2 equations in the LMO/PNO basis. An example input file is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c1; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; set pno_convergence normal; ; energy('dlpno-mp2'). The main difference between this input and a DF-MP2 input is the ``energy('dlpno-mp2')``; call to :py:func:`~psi4.driver.energy`. The only other addition is the |dlpno__pno_convergence|; keyword, which determines the accuracy of the local approximations underlying ; the DLPNO-MP2 method. Note that ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:2724,recover,recovered,2724,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['recover'],['recovered']
Availability,"alytics; <https://www.anaconda.com/products/individual>`_, the company that produces; `Anaconda Python <http://docs.continuum.io/anaconda/index.html>`_ (a; full-fledged scientific python environment with package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_) and, more particularly, `Miniconda; <https://docs.conda.io/en/latest/miniconda.html>`_ (a lightweight Python; distribution with same package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_). Some nice features for us:. * cross-platform. * no root, administrator, or sudo access required. * built with high-performance math libraries. * lightweight software stack (<100 MB w/o |PSIfour|; ~1 GB including |PSIfour|, numpy, and MKL). * updated nightly so new features accessible. * standardizes python distribution so no need to find/install libpython packages. * add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages. * develop |PSIfour| through plugins without a pre-existing development environment, see :ref:`sec:condaplugins`. The |PSIfour| binary repository is at `Anaconda (formerly Binstar) <https://anaconda.org/psi4>`_. For commands to get a default installation, go to :ref:`sec:psi4conda`; or the :psicode:`psicode downloads page <installs/latest/>` .; Users proficient with conda may prefer to consult :ref:`sec:condadetails`.; For more flexibility and a detailed explanation, go to; :ref:`sec:slowconda` and :ref:`sec:slowpsi4`. .. _`faq:psicodedownload`:. How to install a Psi4 binary with the Psi4conda installer, download site; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. `Download one of the nine installers; <http://psicode.org/downloads.html>`_ (Linux/Mac/Windows; Py38/39/310).; ``bash`` it. Follow the prompts and *do* make the adjustments to; :envvar:`PATH` and :envvar:`PSI_SCRATCH` that it suggests at the end. Test; with ``psi4 --test`` (gre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:2803,avail,available,2803,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['avail'],['available']
Availability,"an peruse these directories if; you like by pointing web browser to:. \noindent; {\tt https://sirius.chem.vt.edu/svn/psi4/}. \subsection{\PSIfour\ SVN Policies: Which Branch Should I Use?}; \label{section:branches}. The \PSIfour\ repository comprises a main trunk and several; release branches. The branch you should use depends on the sort of ; work you plan for the codes:; \begin{enumerate}; \item For any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code developme",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:2817,mainten,maintenance,2817,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,1,['mainten'],['maintenance']
Availability,"anions or very diffuse basis functions,; the |scf__dft_bs_radius_alpha| option may be increased from 1.0 to a larger value to force the radial grid to span a larger extent in space. The atomic weighting scheme is controlled by the |scf__dft_nuclear_scheme|; option, which may be one of ``TREUTLER``, ``BECKE``, ``STRATMANN``, ``NAIVE``,; or ``SBECKE``. The last is a smoother variant of the BECKE scheme recently introduced ; by Laqua [Laqua:2018:204111]_ that should behave better for weak interactions. Pruning of the quadrature grid is controlled by the |scf__dft_pruning_scheme|; option. The options ``ROBUST`` and ``TREUTLER`` divide the grid into spherical regions; based on the Bragg-Slater radius of each atom and apply different orders to them.; The ``ROBUST`` scheme is a less aggressive variant of the ``TREUTLER`` approach and; suitable for benchmark-level quality (MAD < 0.002 kcal/mol for the S22 with PBE/aug-cc-pVTZ; for pruned versus unpruned grid). Our implementation of the ``TREUTLER`` scheme shows an ; error of 0.02 kcal/mol for the same benchmark. Both also reduce the grid order by 1 for H ; and He atoms and avoid any pruning of heavy atoms (Z >= 36) Other schemes mentioned in ; the keyword documentation (e.g. P_SLATER) are experimental and should be considered expert-only. Once the molecular quadrature grid is built, the points are partitioned into; blocks of points which are spatially close to each other. We use an octree; algorithm for this procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:25036,error,error,25036,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['error'],['error']
Availability,"ath:`(vv|vv)` and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the |dct__ao_basis| option to; DISK (currently used by default). For more recommendations on the choice of the algorithm see; :ref:`Recommendations <sec:dctrecommend>`. .. _`sec:dctgradients`:. Analytic Gradients; ~~~~~~~~~~~~~~~~~~. Analytic gradients are available for the DC-06, ODC-06, ODC-12, and ODC-13 methods.; For DC-06, the evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: ``TWOSTEP`` (default) and ``SIMULTANEOUS``. These algorithms are similar to those; described for the orbital and cumulant updates in the :ref:`Iterative Algorithms <sec:dctalgorithms>`; section and usually exhibit similar efficiency. The choice of the algorithm can; be made using the |dct__response_algorithm| option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. For the ODC-06, ODC-12 and ODC-13 methods no response equations; need to be solved, which makes the computation of the analytic gradients very; efficient. Analytic gradients are not available for the three-particle energy; correction :math:`(\lambda_3)`. .. _`sec:dctmethodsummary`:. Methods Summary; ~~~~~~~~~~~~~~~. The table below summarizes current DCT code features:. .. _`table:dct_methods_summary`:. +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | Method | Available algorithms | Energy | Gradient | Reference |; +=====================================+==============================================================+=========+==========+========================+; | ODC-06 | SIMULTANEOUS, QC | Y | Y | RHF/UHF |; +-------------------------------------+--------------------------------------------------------------+---",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:13749,avail,available,13749,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"atically based grouping, which would group all exchange terms ; (*i.e.* :math:`E_{exch-ind,resp}^{(20)}`, :math:`E_{exch-disp}^{(20)}`, *etc.*) in; the exchange component. A final note is that both ``Disp22(T)``; and ``Est.Disp22(T)`` results appear if MP2 natural orbitals are ; used to evaluate the triples correction to dispersion. The ``Disp22(T)`` ; result is the triples correction as computed in the truncated NO basis; ; ``Est.Disp22(T)`` is a scaled result that attempts to recover; the effect of the truncated virtual space and is our best estimate. The ``Est.Disp22(T)``; value is used in the SAPT energy and dispersion component (see [Hohenstein:2010:104107]_ ; for details). Finally, this part of the output file contains sSAPT0, a special scaling; scheme of the SAPT0 energy that can yield improved results and was described in more details; above. The corresponding scaled total component energies are printed as well. As mentioned above, SAPT results with scaled exchange are also optionally available; by setting the |sapt__exch_scale_alpha| keyword. When activated, the unscaled results are; printed first as reported above, and then repeated with exchange scaling for all ; relevant terms: :: . SAPT Results ==> ALL S2 TERMS SCALED (see Manual) <==. Scaling factor (Exch10/Exch10(S^2))^{Alpha} = 1.007200; with Alpha = 1.000000; --------------------------------------------------------------------------------------------------------; Electrostatics -13.06509118 [mEh] -8.19846883 [kcal/mol] -34.30239689 [kJ/mol]; Elst10,r -13.37542977 [mEh] -8.39320925 [kcal/mol] -35.11719087 [kJ/mol]; Elst12,r 0.04490350 [mEh] 0.02817737 [kcal/mol] 0.11789413 [kJ/mol]; Elst13,r 0.26543510 [mEh] 0.16656305 [kcal/mol] 0.69689985 [kJ/mol]. Exchange sc. 13.43351854 [mEh] 8.42966050 [kcal/mol] 35.26970292 [kJ/mol]; Exch10 11.21822294 [mEh] 7.03954147 [kcal/mol] 29.45344432 [kJ/mol]; Exch10(S^2) 11.13802706 [mEh] 6.98921779 [kcal/mol] 29.24289005 [kJ/mol]; Exch11(S^2) sc. 0.04591732 [mEh] 0.0",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:38822,avail,available,38822,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"ation; ====================. By default, |PSIfour| assumes that 500 MiB of memory are available. While this is; enough for many computations, many of the algorithms will perform better if; more is available. To specify memory, the ``memory`` keyword should be used. The following; lines are all equivalent methods for specifying that 2 GB of RAM is available; to |PSIfour|::. # all equivalent. memory 2 GB; ; memory 2000 MB; ; memory 2000000 kB. Please note that memory can be specified both in IEC binary units (1 KiB = 1024 bytes) and SI units (1 kB = 1000 bytes). |PSIfour| recognizes and obeys both of them correctly. The units are not case sensitive (Kb and KB are equivalent to kB). By default, |PSIfour| performs a ""sanity check"" when parsing Psithon input files, enforcing a minimum memory requirement of 250 MiB. While it is generally not recomennded to do so, expert users can bypass this check by directly setting the number of bytes availble to |PSIfour|::. # setting available memory to 2 MB; set_memory_bytes(2000000). Please note that this memory setting only governs the maximal memory; usage of the major data structures, and actual total memory usage; is slightly higher. This is usually a negligible amount, except when; setting tiny memory allowances. One convenient way to override the |PSIfour| default memory is to place a; memory command in the |psirc| file (Sec. :ref:`sec:psirc`). For example,; the following makes the default memory 2 GB. ::. set_memory(2000000000). However, unless you're assured of having only one job running on a node at; a time (and all nodes on the filesystem with |psirc| have similar memory; capacities), it is advised to set memory in the input file on a; per-calculation basis. That same command can be used for PsiAPI mode::. psi4.set_memory(int(5e8)). .. tabs::. .. code-tab:: bash PSIthon. set_memory(2000000000). .. code-tab:: py PsiAPI. psi4.set_memory(int(5e8)). .. note:: For parallel jobs, the ``memory`` keyword represents the total memor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:4296,avail,available,4296,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"ational frequency analysis, being very careful to copy over the; optimized geometry from the *bottom* of the output file for the geometry; optimization. This geometry could be specified in either z-matrix or; Cartesian formats. However, there's a much easier way to do this. If we; specify a vibrational frequency analysis in the same input file as the; optimization, after the optimization function has been called, then the; optimized geometry will automatically be carried over. So, it's easiset to do the optimization and vibrational frequency analysis; together. This can be specified as follows (see test case; :srcsample:`tu4-h2o-freq`):. .. literalinclude:: @SFNX_INCLUDE@samples/tu4-h2o-freq/input.dat. The program will do the same optimization as in our previous example,; but then it will follow it with some computations to obtain the Hessian; (second derivative matrix) of the electronic energy with respect to; nuclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:9852,error,errors,9852,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['error'],['errors']
Availability,"atus': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290121,error,error,290121,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:228223,error,error,228223,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"aultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303137,error,error,303137,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"autodir_options_c/adc__cutoff_amps_print.rst. The full list is provided in appendix :ref:`apdx:adc_psivar`; and many more sample input files can be found in the adc and adcc; subfolders of :source:`samples`.; Note, that not all keywords are supported by all backends. .. _`sec:interfaceadcc`:. Interface to adcc; -----------------; .. codeauthor:: Michael F. Herbst; .. sectionauthor:: Michael F. Herbst. For most implemented ADC methods |PSIfour| relies; on an interface to the `adcc <https://adc-connect.org>`_ python package.; The approach of adcc is to directly diagonalise the; ADC matrix :math:`\mathbf{A}` in an iterative diagonalisation; procedure, usually a Jacobi-preconditioned Davidson. Expensive parts; of the ADC matrix-vector product are precomputed and stored; in memory. This approach is general in the sense; that it can be applied to a large range of ADC methods and variants.; So far levels up to ADC(3) and CVS-ADC(3) are available; and additional approximations such as; |globals__freeze_core| and |globals__num_frozen_uocc|; are supported with all ADC methods using the adcc backend. Currently adcc is only capable of performing in-core calculations,; for which, however, permutational symmetry and spin symmetry is taken; into account for both tensor computations and tensor storage.; Inside adcc some heuristic checks for overly excessive memory requirements; are implemented, resulting in a warning in case a; successful execution is unlikely. There are no guarantees for the memory; to be sufficient in case such a warning is not displayed. More detailed documentation about adcc and its features can be found; at `<https://adc-connect.org>`_,; especially the `theory section <https://adc-connect.org/latest/theory.html>`_.; If you are using adcc from |PSIfour| for your calculations,; please cite both |PSIfour| as well as adcc [Herbst2020]_; in your published work. **The ADC wavefunction object.**; After running the ADC calculation in adcc, the interface code sets; a nu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:10824,avail,available,10824,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,1,['avail'],['available']
Availability,"based on a domain decomposition approach; [Cances:2013:054111]_ making it linear scaling.; For more details about ddx see the :ref:`section on ddx <sec:ddx>`. Using PCMsolver is achieved instead by setting |globals__pcm| ``true`` in your input file.; |Psifour| understands the additional option |pcm__pcm_scf_type| with possible values ``total``; (the default) or ``separate``.; The latter forces the separate handling of nuclear and electronic electrostatic potentials and; polarization charges. It is mainly useful for debugging. For the calculation of vertical excitation energies with PCM non-equilibrium solvation should be included with: ::. pcm = {; Medium {; Nonequilibrium = True; }; }. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The PCMSolver library **cannot** exploit molecular point group symmetry. .. warning:: ROHF with PCM is known **not to work**. See `issue #999 on GitHub <https://github.com/psi4/psi4/issues/999>`_.; For the adventurous, a fix is available in `pull request #953 on GitHub <https://github.com/psi4/psi4/pull/953>`_. .. warning:: Analytic gradients and Hessians **are not** available with PCM. Finite differences will be used; regardless of the ``dertype`` passed to the ``optimize`` function.; See :srcsample:`pcmsolver/opt-fd` for a sample input. The PCM model and molecular cavity are specified in a ``pcm`` section that has; to be explicitly typed in by the user. This additional section follows a syntax; that is slightly different from that of |Psifour| and is fully documented; `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PCM would look like the fol",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:4759,avail,available,4759,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['avail'],['available']
Availability,"bind11 min version] <external/upstream/pybind11/CMakeLists.txt#L2>`. * QCElemental |w---w| `[what is QCElemental?] <https://molssi.github.io/QCElemental/>`_. * QCEngine |w---w| `[what is QCEngine?] <https://molssi.github.io/QCEngine/>`_ (March 2019; added by v1.4). * optking |w---w| `[what is optking] <https://optking.readthedocs.io/en/latest/>`_ (runtime dependency, required at build-time) . Additionally, there are runtime-only dependencies:. * msgpack-python for MessagePack https://msgpack.org/ (transitive dependency of QCElemental; optional for QCElemental but required for |PSIfour|). * NumPy https://numpy.org/. * networkx https://github.com/networkx/networkx (transitive dependency of QCElemental; optional for QCElemental but required for |PSIfour|). * pint https://pint.readthedocs.io/en/latest/ (transitive dependency of QCElemental). * pydantic https://pydantic-docs.helpmanual.io/# (transitive dependency of QCElemental). * SciPy https://scipy.org/ (avoidable if necessary by following directions in runtime error message). * py-cpuinfo (provides ``import cpuinfo``) https://github.com/workhorsy/py-cpuinfo (transitive dependency of QCEngine). * psutil https://github.com/giampaolo/psutil (transitive dependency of QCEngine). Dropped Dependencies:. * Boost (September 2016; dropped by v1.1). * deepdiff https://github.com/seperman/deepdiff (May 2019; dropped by v1.4). * MPFR https://www.mpfr.org/ (Mar 2022; dropped by v1.6) no longer needed to compile against Libint2. * Perl for testing (April 2022; dropped by v1.6). .. _`faq:addondepend`:. What are the add-on capabilities for Psi4 and what are their dependencies; -------------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want, and examine; the links for appropriate enabling arguments to ``cmake``. Note that m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:8944,error,error,8944,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['error']
Availability,"blic License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:conda`:. Conda Binary Distribution; =========================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. .. warning:: As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. |PSIfour| is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through `Anaconda (formerly Continuum Analytics; <https://www.anaconda.com/products/individual>`_, the company that produces; `Anaconda Python <http://docs.continuum.io/anaconda/index.html>`_ (a; full-fledged scientific python environment with package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_) and, more particularly, `Miniconda; <https://docs.conda.io/en/latest/miniconda.html>`_ (a lightweight Python; distribution with same package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_). Some nice features for us:. * cross-platform. * no root, administrator, or sudo access required. * built with high-performance math libraries. * lightweight software stack (<100 MB w/o |PSIfour|; ~1 GB including |PSIfour|, numpy, and MKL). * updated nightly so new features accessible. * standardizes python distribution so no need to find/install libpython packages. * add-on",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:1642,avail,available,1642,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['avail'],['available']
Availability,"blications.html>`_ the library. .. image:: https://img.shields.io/badge/home-CheMPS2-5077AB.svg; :target: https://github.com/SebWouters/CheMPS2. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://sebwouters.github.io/CheMPS2/index.html. .. note:: As of late June 2016, DMRG keywords in |PSIfour| have been; realigned with those of the chemps2 executable, plus a; ""dmrg\_"" prefix. The only exceptions are the orbital space; |PSIfour| keywords |globals__restricted_docc| (formerly; CheMPS2 used |globals__frozen_docc|, contrary to its; definition) and |globals__active| which are passed along to; CheMPS2 keywords ``NOCC`` and ``NACT``. A `translation table; <https://github.com/psi4/psi4/issues/150#issuecomment-228951911>`_; is available. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://img.shields.io/badge/Anaconda%20Cloud-1.7.1-5077AB.svg; :target: https://anaconda.org/psi4/chemps2. * CheMPS2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, CheMPS2 has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; CheMPS2 can be obtained through ``conda install chemps2``.; Then enable it as a feature with :makevar:`ENABLE_CheMPS2`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect CheMPS2 and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. Libint from conda without thinking, consult. * To remove a conda installation, ``conda remove chemps2``. **Source**. * .. image:: https://img.shields.io/github/tag/SebWouters/chemps2.svg?maxAge=2592000; :target: https://github.com/SebWouters/chemps2. * If using |PSIfour| built from source and you want CheMPS2 built from; from source also,; enable it as a feature with :makevar:`ENABLE_CheMPS2`,; and let the bu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst:2634,avail,available,2634,doc/sphinxman/source/chemps2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst,1,['avail'],['available']
Availability,"brid NumPy and Psi4 can be found at the `Psi4Numpy; project <https://github.com/psi4/psi4numpy>`_. Currently only the Matrix; and Vector objects support NumPy interfacing. Let us begin with a simple; conversion from these objects to a NumPy array::. >>> import psi4; >>> import numpy as np. # Build the Psi4 data objects; >>> mat = psi4.core.Matrix(3, 3) ; >>> vec = psi4.core.Vector(3). # Convert to a NumPy array; >>> numpy_mat = np.array(mat); >>> numpy_vec = np.array(vec). Here the data is copied into new NumPy arrays. NumPy arrays can be converted; back to |PSIfour| objects using the ``from_array`` interface::. >>> new_mat = psi4.core.Matrix.from_array(mat); >>> new_vec = psi4.core.Vector.from_array(vec). NumPy Views; ~~~~~~~~~~~. Copying the data between NumPy and Psi4 objects can lead to excessive data; movement and convoluted code. Here we introduce the idea of ""Views"" where the; same data can be viewed by multiple objects. However, this can lead to very; subtle errors if used incorrectly and care needs to be taken when using these; views. Views can be created in two ways::. >>> numpy_mat_view = np.asarray(mat). # Access the NumPy object and set all values to 1 through broadcasting; >>> numpy_mat_view[:] = 1; ; >>> print(np.array(mat)); [[ 1. 1. 1.]; [ 1. 1. 1.]; [ 1. 1. 1.]]. Secondly, these objects have a ``.np`` attribute for easy access to the underlying data::. >>> mat.np[:] = 1. this operation is identical to the above. |PSIfour| Data Objects with Irreps; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| data objects natively support multiple :ref:`irreducible representations; <sec:symmetry>`; which is quite useful for Quantum Chemistry. However, this is not fundamental; to NumPy and some work around are required to natively support these; operations. Take the following irreped Matrix::. >>> dim = psi4.core.Dimension.from_list([1, 2, 3]); >>> irreped_mat = psi4.core.Matrix(""New Matrix"", dim, dim). # Create a list of Psi4 arrays; >>> list_of_arrays = irreped_ma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/numpy.rst:2551,error,errors,2551,doc/sphinxman/source/numpy.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/numpy.rst,1,['error'],['errors']
Availability,"bsite/blob/master/content/installs/v13rc2.md. Note the edition string ``v13rc2`` in frontmatter for this and future filenames; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; .. * Enter ``scripts/`` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; .. * Run the ``install-generator.py`` in place. It will dump new files into ``data/installs/`` _subdirs_. Be sure to ``git add`` them.; .. * Installer page is now ready.; .. * Shift ""latest"" alias in frontmatter from whichever page is currently active to the new page. This makes sure ""Downloads"" on the navigation bar points to new page.; .. * Conscientiously, one should test; ..; .. - installer downloads in Mac and Linux. And actually installing them and ``psi4 --test`` them.; .. - that download button and ``curl`` downloading register on the download counters on vergil; ..; .. * Commit the new files, PR, and deploy psicode site; .. * Petition on Slack for testers. Generate download page for psicode.org; --------------------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Copy and edit a new file akin to ``content/installs/v182.md``. Add it to the git index. - Note the edition string ``v182`` in frontmatter for this and future filenames.; - Don't postdate the date string in frontmatter or it won't render.; - Ultimately, make sure the ``aliases:\n - /installs/latest/`` lines are *added* to this new file; and *removed* from the previous latest file, but this can wait until the installer page has been tested. * Copy and edit a new file akin to ``data/installs/v182.yaml``. Add it to the git index. - Glance through the menu and notes content to make sure they're up-to-date. This file determines; the structure of the install page.; - Add or remove python vers",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:28649,down,download,28649,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,3,['down'],"['download', 'downloading']"
Availability,"buted in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: ; Molden; WebMO; visualization. .. _`sec:molden`:. Interface to Molden |w---w| :py:func:`~psi4.driver.molden`; ==========================================================. .. codeauthor:: Justin M. Turney; .. sectionauthor:: C. David Sherrill. |PSIfour| contains an interface to the Molden program. Molden is a ; visualization program for electronic structure developed by Gijs Schaftenaar; at the University of of Nijmegen, Netherlands. It is available at ; https://www3.cmbi.umcn.nl/molden/ . Molden can; plot atomic orbitals, densities, electrostatic potentials (ESPs), etc.; |PSIfour| can create a file containing; atomic coordinates, basis set, and SCF orbital coefficients in the ; so-called Molden format. This file is; written by the SCF module (see Section :ref:`SCF <sec:scf>`) ; if the user sets the |scf__molden_write| keyword to true. This Molden file is ; also used to pass information between |PSIfour| and WebMO, if |PSIfour| ; computations are invoked using the WebMO GUI. The filename of the ; Molden file ends in "".molden"", and the prefix is determined by ; |globals__writer_file_label| (if set), or else by the name of the output; file plus the name of the current molecule. If |globals__molden_with_virtual|; is set to false, the unoccupied orbitals are not written to the Molden; file. .. autofunction:: psi4.molden(wfn, filename); :noindex:. Options; ~~~~~~~. .. include:: autodir_options_c/scf__molden_write.rst; .. include:: autod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/molden.rst:1515,avail,available,1515,doc/sphinxman/source/molden.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/molden.rst,1,['avail'],['available']
Availability,"by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:72539,error,error,72539,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486177,error,error,486177,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c open-shell SAPT0 keywords; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__sapt_mem_safety.rst; .. include:: autodir_options_c/sapt__coupled_induction.rst. .. index:: SAPT; SAPT(DFT). .. _`sec:saptdft`:. SAPT(DFT); ^^^^^^^^^. In general, SAPT(DFT) should provide more accurate interaction energy ; components, and overall interaction energies, than SAPT0. The drawback ; is SAPT(DFT) method is more computationally demanding than SAPT0, ; SAPT(DFT) can still be applied to medium-sized or large systems. The ; SAPT(DFT) module was employed successfully in computations of systems ; with up to 2000 basis functions, and the code should be scalable to ; 3000 basis functions. Like higher-order SAPT, SAPT(DFT) requires ; sufficient memory to hold :math:`2ovN_aux` doubles. SAPT(DFT) requires a few special treatments to obtain accurate; result. The DFT functionals used in SAPT(DFT) need to be asymptotically; corrected with Gradient Regulated Asymptotic Correction scheme (GRAC),; in order to recover the correct long-range asymptotic behavior; (approaching :math:`-1/r` as :math:`r` approaches infinity). The program; requires manual input of GRAC shift parameter for each monomer through; keywords |sapt__sapt_dft_grac_shift_a| and |sapt__sapt_dft_grac_shift_b|,; which should be equal to the difference of the actual ionization; potential and the corresponding Kohn-Sham HOMO energy. The dispersion; term needs to be computed with orbital response for good accuracy,; and it is recommended to enable |sapt__sapt_dft_do_hybrid| (set to; ``True`` by default). The coupled exchange-dispersion energy is usually; estimated by scaling from the uncoupled value either by a fitted fixed; value (suggested initially by [Hesselmann:2014:094107]_ for a local Hartree--Fock (LHF) formulation and then revised; by [Xie:2022:024801]_ for non-LHF) or; by the ratio of; coupled and uncoupled dispersion energy (suggested by [Podeszwa:2006:400]_ ). ; This can be controlled by keyword |s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:23305,recover,recover,23305,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['recover'],['recover']
Availability,"c psi4`` or the newer implementation; through ``conda install dftd3-python -c conda-forge``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the dftd3 executable can be obtained through ``conda install dftd3 -c psi4``; or ``conda install dftd3-python -c conda-forge``. * To remove a conda installation, ``conda remove dftd3`` or ``conda remove dftd3-python``. **Source**. * .. image:: https://img.shields.io/badge/home-DFTD3-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/get-the-current-version-of-dft-d3. * If using |PSIfour| built from source and you want to build DFTD3 from; from source also,; follow the instructions provided with the source; (essentially, download the freely available tarball, unpack the source,; edit the Makefile to select a; Fortran compiler, and run make). From version 3.1.0 onwards, DFTD3 can; be used as-is; for earlier versions, patches are available:; :source:`psi4/share/psi4/scripts/patch_grimme_dftd3.3.0.2`. To be used by |PSIfour|, the classic program binary (``dftd3``) must be; found in your :envvar:`PATH` or the s-dftd3 module in your :envvar:`PYTHONPATH`; so QCEngine can detect it. Check if and where found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular dftd3 compilation, simply adjust its; position in the path environment variables. .. >>> cd dftd3; .. >>> ls; .. dftd3.tar; .. patch_grimme_dftd3.3.0.2; .. >>> tar -xvf dftd3.tar; .. copyc6.f; .. dftd3.f; .. Makefile; .. man.pdf; .. pars.f; .. param; .. >>> patch < patch_grimme_dftd3.3.0.2; .. patching file dftd3.f; .. >>> make; .. making dftd3.o from dftd3.f; .. ifort -O -c dftd3.f -o dftd3.o; .. making copyc6.o from copyc6.f; .. ifort -O -c copyc6.f -o copyc6.o; .. ifort dftd3.o copyc6.o -o ./dftd3; .. >>> ls; .. Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:7656,avail,available,7656,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability,"c', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:354561,error,error,354561,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'modul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:376727,error,error,376727,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446834,error,error,446834,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-de",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:527347,error,error,527347,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:43488,error,error,43488,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:169239,error,error,169239,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166223,error,error,166223,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"c.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: gCP; .. _`sec:gcp`:. Interface to gCP by S. Grimme; =============================. .. codeauthor:: Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Samples <apdx:testSuitegcp>`. .. image:: https://img.shields.io/badge/home-gCP-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp/manGCP.pdf. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/gcp/badges/version.svg; :target: https://anaconda.org/psi4/gcp. * There are two implementations of gCP; see :ref:`table:empdispimpl` . The newer; ""mctc"" one is preferred, while the older ""classic"" one will work for the immediate future.; |PSIfour| will automatically select whichever is available.; Starting with v1.9, only ""mctc-gcp"" is supported, though the now untested; ""classic"" continues to work for many applications. * gCP is available as a conda package for Linux and macOS and Windows. * If using the Psi4conda installer, gCP has already been installed alongside. * If using the |PSIfour| conda package, the classic gcp conda package can; be obtained through ``conda install gcp -c psi4`` or the newer implementation; through ``conda install gcp-correction -c conda-forge``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the gcp executable can be obtained through ``conda install gcp -c psi4``; or ``conda install gcp-correction -c conda-forge``. * To remove a conda installation, ``conda remove gcp`` or ``conda remove gcp-correction``. **Source**. * .. image:: https://img.shields.io/badge/home-gCP-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:1939,avail,available,1939,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,1,['avail'],['available']
Availability,"c2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:74157,error,error,74157,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimizati",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6302,error,error,6302,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155356,error,error,155356,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206263,error,error,206263,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cal Constants; ==================. For convenience, the Python interpreter will execute the contents of the; |psirc| file in the current user's home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the |psirc| file ::. UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable ``UGC`` available in all |PSIfour| input files.; For convenience, the physical constants used within the |PSIfour| code (which; are obtained from `NIST CODATA 2014; <https://physics.nist.gov/cuu/Constants/archive2014.html>`_; are also automatically loaded as Psithon; variables (before |psirc| is loaded, so that the user's |psirc| values can; override the builtins (in the input file, not in the C++ code). The physical constants used within |PSIfour|, which are automatically; made available within all |PSIfour| input files are in :ref:`table:physconst`. .. .. literalinclude:: @SFNX_INCLUDE@psi4/driver/constants/physconst.py; .. :lines: 28-. In Psithon input files, prepend physical constants with ``psi_`` to; prevent clashes with user-defined variables (*e.g.*, ``psi_h``). In; PsiAPI mode, access as, *e.g.*, ``psi4.constants.h``. .. index:: memory; .. _`sec:memory`:. Memory Specification; ====================. By default, |PSIfour| assumes that 500 MiB of memory are available. While this is; enough for many computations, many of the algorithms will perform better if; more is available. To specify memory, the ``memory`` keyword should be used. The following; lines are all equivalent methods for specifying that 2 GB of RAM is available; to |PSIfour|::. # all equivalent. memory 2 GB; ; memory 2000 MB; ; memory 2000000 kB. Please note that memory can be specified both in IEC binary units (1 KiB = 1024 bytes) and SI units (1 kB = 1000 bytes). |PSIfour| recognizes an",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:2908,avail,available,2908,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"can be done by; diagonalizing the generalized Fock operator (as in the DC-06 and DC-12 methods, see below),; which introduces partial orbital relaxation, or by fully relaxing the orbitals and minimizing the entire energy expression; (as in the ODC-06 and ODC-12 methods). 2) The energy must be stationary with respect to the variation of the density; cumulant :math:`\boldsymbol{\lambda_2}`, constrained to N-representability conditions. Making the energy stationary requires solution of two sets of coupled; equations for orbitals and density cumulant, respectively (also known as; residual equations). At the present moment, three different algorithms for the; solution of the system of coupled equations are available (see; :ref:`Iterative Algorithms <sec:dctalgorithms>` for details). . Publications resulting from the use of the DCT code should cite contributions; listed :ref:`here <intro:dctcitations>`. .. _`sec:dctmethods`:. Methods; ~~~~~~~. Currently five DCT methods (functionals) are available: DC-06, DC-12, ODC-06, ODC-12, and ODC-13. The first four ; methods use approximate N-representability conditions derived from ; second-order perturbation theory and differ in the description of the; correlated (non-idempotent) part :math:`\boldsymbol{\tau}` of the one-particle density; matrix and orbital optimization. While in the DC-06 and ODC-06 methods :math:`\boldsymbol{\tau}` is derived from the density cumulant; in an approximate way (labelled by '06'), the DC-12 and ODC-12 methods derive this contribution exactly, and; take full advantage of the N-representability conditions (which is denoted by '12'). The corresponding DC and ODC methods; have similar description of the :math:`\boldsymbol{\gamma_1}` N-representability, but differ in describing the orbital relaxation:; the former methods account for the relaxation only partially, while the latter fully relax the orbitals.; Both DC-06 and DC-12 methods have similar computational cost, same is true when comparing ODC-06 an",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:6001,avail,available,6001,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"cc', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:491639,error,error,491639,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:91629,error,error,91629,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93282,error,error,93282,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:96251,error,error,96251,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:97904,error,error,97904,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ce': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:504666,error,error,504666,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ce': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395334,error,error,395334,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ce': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:263577,error,error,263577,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ce': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:33847,error,error,33847,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ce': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:267146,error,error,267146,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:430117,error,error,430117,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:255696,error,error,255696,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37210,error,error,37210,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'};",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:521432,error,error,521432,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uh",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492289,error,error,492289,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"cf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'con",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:107114,error,error,107114,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486797,error,error,486797,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"clude:: autodir_options_c/ccenergy__cachelevel.rst; .. include:: autodir_options_c/ccenergy__cachetype.rst; .. include:: autodir_options_c/ccenergy__num_amps_print.rst; .. include:: autodir_options_c/ccenergy__mp2_amps_print.rst. Larger Calculations; ^^^^^^^^^^^^^^^^^^^. Here are a few recommendations for carrying out large-basis-set coupled; cluster calculations with |PSIfour|:. * In most cases it is reasonable to set the ``memory`` keyword to 90% of; the available physical memory, at most. There is a small amount of overhead; associated with the; coupled cluster modules that is not accounted for by the internal CC memory; handling routines. Thus, the user should *not* specify the entire; physical memory of the system, or swapping is likely. However, for especially large; calculations, it is better to set the ``memory`` keyword to a value less than 16 GB. * Set the |ccenergy__cachelevel| keyword to ``0``.; This will turn off cacheing, which, for very large calculations, can; lead to heap fragmentation and memory faults, even when sufficient; physical memory exists. * Set the |globals__print| keyword to ``2``. This; will help narrow where memory bottlenecks or other errors exist in the; event of a crash. .. _`sec:eomcc`:. Excited State Coupled Cluster Calculations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. A complete list of keywords related to; coupled cluster linear response is provided in Appendix :ref:`apdx:cceom`.; The most important keywords associated with EOM-CC calculations are:. .. include:: autodir_options_c/cceom__roots_per_irrep.rst; .. include:: autodir_options_c/cceom__e_convergence.rst; .. include:: autodir_options_c/cceom__singles_print.rst; .. include:: autodir_options_c/cceom__schmidt_add_residual_tolerance.rst; .. include:: autodir_options_c/cceom__eom_guess.rst. Linear Response (CCLR) Calculations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Linear response computations are invoked like ``properties('ccsd')``; or ``properties('cc2')``, along with a li",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:9753,fault,faults,9753,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['fault'],['faults']
Availability,"code since computational chemistry is essentially; linear algebra on molecular systems. * Downstream Dependencies |w---w| |PSIfour| |dr| LAPACK Libraries. **CMake Variables**. * :makevar:`BLAS_TYPE` |w---w| CMake variable to specify which BLAS libraries to look for among ``MKL|OPENBLAS|ESSL|ATLAS|ACML|SYSTEM_NATIVE``.; * :makevar:`LAPACK_TYPE` |w---w| CMake variable to specify which LAPACK libraries to look for among ``MKL|OPENBLAS|ESSL|ATLAS|ACML|SYSTEM_NATIVE``.; * :makevar:`LAPACK_LIBRARIES` |w---w| CMake variable to specify BLAS/LAPACK libraries explicitly, bypassing math detection. Should be "";""-separated list of full paths.; * :makevar:`LAPACK_INCLUDE_DIRS` |w---w| CMake variable to specify BLAS/LAPACK header location explicitly, bypassing math detection. Only needed for MKL.; * :makevar:`OpenMP_LIBRARY_DIRS` |w---w| CMake variable to specify OpenMP library (iomp5/gomp/omp) directories explicitly. Should be "";""-separated list of full directory paths. Usually the solution to error ``Could NOT find MathOpenMP``. .. envvar:: MKL_ROOT. Environment variable set by Intel compilervars scripts. Sufficient to trigger math detection of MKL at this location. .. envvar:: MATH_ROOT. Environment variable to specify root directory in which BLAS/LAPACK libraries should be detected (*e.g.*, ``${MATH_ROOT}/lib64/libblas.so`` and ``${MATH_ROOT}/lib64/liblapack.so``). **Examples**. A. Build with any LAPACK in standard location. .. code-block:: bash. >>> cmake. B. Build with native Accelerate LAPACK on Mac (MKL *not* also present).; If NumPy *not* using native Accelerate LAPACK, then directing Psi4; to use it is Bad Idea!. .. code-block:: bash. >>> cmake. C. Build with native Accelerate LAPACK on Mac (MKL also present); If NumPy *not* using native Accelerate LAPACK, then directing Psi4; to use it is Bad Idea!. .. code-block:: bash. >>> cmake -DBLAS_TYPE=SYSTEM_NATIVE -DLAPACK_TYPE=SYSTEM_NATIVE. D. Build with Intel MKL. .. code-block:: bash. >>> source /path/to/intel/vers/linux/mkl",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:46750,error,error,46750,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['error']
Availability,"conda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. It works because :envvar:`PSI_SCRATCH`; defaults to ``/tmp``. Now you need only specify a permanent scratch; directory (see :ref:`sec:Scratch`) by replacing the placeholder in the; following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. Configuration for this set-up is summarized at :ref:`faq:runfrombinary`. .. note:: |PSIfour| installs a Python distribution alongside, so you should choose an installer based on the Python version you *want*, irrespective of any Python version you *have*. .. _`faq:psi4pkg`:. How to install a Psi4 binary into an Ana/Miniconda distribution; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Conda command to install the latest nightly build of |PSIfour| + compiled; add-ons + runtime add-ons into an existing Anaconda or Miniconda; distribution. .. code-block:: bash. # Linux or Mac or Windows; # substitute x.x by 3.6|3.7|3.8|3.9 for alternate python versions; # remove `-c psi4/label/dev` to get stable releases instead of nightly builds; >>> conda create -n p4env python=x.x psi4 -c psi4/label/dev. Activate environment and make the adjustments to :envvar:`PA",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:6555,echo,echo,6555,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['echo'],['echo']
Availability,"conda package and docs, not tag+1.dev1 .; # the atomic flag below pushes commit and tag together so only one CI; # which is necessary for Windows conda package to compute the right version.; # After push, can temporarily re-engage admins ""Do not allow ..."" protections.; # also, grab the docs build from GHA artifacts. >>> vi psi4/metadata.py; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version_long = '1.3rc2+zzzzzzz'; +__version_long = '1.3rc2+bc8d7f5'. >>> git add psi4/metadata.py; >>> git commit -m ""Records tag for v1.3rc2""; [master 16dbd3e] Records tag for v1.3rc2. # goto GH:psi4/psi4 > Settings > Branches > master > Edit; # https://github.com/psi4/psi4/settings/branch_protection_rules/424295; # uncheck admins ""Do not allow ..."" and Save changes. >>> git push upstream master. # re-engage admins ""Do not allow ..."" protections. Tag postrelease; ---------------. ::. # be on clean maintenance branch up-to-date with upstream in both commits and tags; # * mind which version strings get ""v"" and which don't; # * if not fork, replace ""upstream"" with ""origin"". >>> git checkout 1.3.x; Switched to branch '1.3.x'. >>> vi psi4/metadata.py; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version__ = '1.3'; -__version_long = '1.3+zzzzzzz'; +__version__ = '1.3.1'; +__version_long = '1.3.1+zzzzzzz'. >>> git add psi4/metadata.py; >>> git commit -m ""v1.3.1""; [1.3.x 2ce1c29] v1.3.1. >>> git log --oneline | head -1; 786fb2b v1.3.1; >>> git tag -a v1.3.1 2ce1c29 -m ""v1.3.1"". # skipping the hash recording and ""upcoming"" step b/c only tags matter on maintenance branch. # free pushing to maintenance branches at present so GitHub interface steps not needed. # see note at ""Tag (pre)release"" for why atomic commit needed. Collect docs from GHA artifacts. >>> git push --atomic upstream 1.3.x v1.3.1. Initialize release branch; -------------------------. * follow tagging procedure; * before re-engaging the admins ""Do not allow ..."" button, push a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:15694,mainten,maintenance,15694,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,"conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:46459,error,error,46459,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"converged.; ... @UHF iter 9: -149.62730705472407 -3.63645e-04 8.63697e-05 DIIS; @UHF iter 10: -149.62730737348096 -3.18757e-07 1.50223e-05 DIIS; @UHF iter 11: -149.62730738537113 -1.18902e-08 3.80466e-06 DIIS; @UHF iter 12: -149.62730738624032 -8.69193e-10 7.06634e-07 DIIS. The first set of iterations are from the DF portion of the computation, the; second set uses the exact (but much slower) Direct algorithm. Within the DF portion; of the computation, the zeroth-iteration uses a non-idempotent density matrix; obtained from the SAD guess, so the energy is unphysically low. However, the; first true iteration is quite close to the final DF energy, highlighting the; efficiency of the SAD guess. Pulay's DIIS procedure is then used to accelerate; SCF convergence, with the DF phase reaching convergence in eight true; iterations. When used together, SAD and DIIS are usually sufficient to converge; the SCF for all but the most difficult systems. Additional convergence; techniques are available for more difficult cases, and are detailed below. At; this point, the code switches on the requested Direct integrals technology, which; requires only four full iterations to reach convergence, starting from the DF; guess. This hybrid DF/Direct procedure can significantly accelerate SCF; computations requiring exact integrals. After the iterations are completed, a number of one-electron properties are; printed, and some bookkeeping is performed to set up possible correlated; computations. Additional one-electron properties are available by increasing the; |globals__print| option. Also printed are the occupied and virtual orbital energies,; which are useful in elucidating the stability and reactivity of the system. .. index::; pair: SCF; theory. .. _`sec:scftheory`:. Theory; ~~~~~~. The objective of Hartree--Fock (HF) Theory is to produce the optimized Molecular; Orbitals (MOs) :math:`\{\psi_i\}`,. .. math:: \psi_i(\vec x_1) = C_{\mu i} \phi_{\mu} (\vec x_1). Here, :math:`\{\phi_{\mu}\}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:4397,avail,available,4397,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"coordinates,; works well for systems with long 'arms' or floppy portions of a molecule poorly; described by local internals. * Optking does support the specification of ghost atoms. Certain internal coordinates such ; as torsions become poorly defined when they contain near-linear bends. ; An internal error `AlgError` may be raised in such cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting |optking__opt_coordinates| to cartesian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__dynamic_level| to 1. .. warning:: In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to |optking__geom_maxiter| being exceeded but; the final step report indicates that optking has not taken |optking__geom_maxiter| steps, such a ; reset has occured. Inspection will show that the step counter was reset to 1 somewhere in the; optimization. .. index:: ; pair: geometry optimization; convergence criteria. Convergence Criteria; ^^^^^^^^^^^^^^^^^^^^. Optking monitors five quantities to evaluate the progress of a geometry ; optimization. These are (with their keywords) the change in energy ; (|optking__max_energy_g_convergence|), the maximum element of ; the gradient (|optking__max_force_g_convergence|), the root-mean-square ; of the gradient (|optking__rms_force_g_convergence|), the maximum element; of displacement (|optking__max_disp_g_convergence|), and the ; root-mean-square of displacement (|optking__rms_disp_g_convergence|), ; all in internal coordinates and atomic units. Usually, these options will not ; be set directly. Primary control for geometry convergence lies with the keyword ; |optking__g_convergence| which sets the aforementi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:19990,error,error,19990,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['error'],['error']
Availability,"corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:37782,error,error,37782,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:67701,error,error,67701,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"csd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:99896,error,error,99896,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"csd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:103610,error,error,103610,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ctly to a; ``ZMAT`` file. This is joined by a default ``GENBAS`` file; (:source:`psi4/share/psi4/basis/GENBAS`). To preferentially use your own ``GENBAS``,; place it in :envvar:`PATH` or :envvar:`PSIPATH`. The line calling; :py:func:`~psi4.driver.energy` with argument ``'cfour'`` invokes; :program:`xcfour`. After execution of the ``energy('cfour')`` line completes, Cfour results; are read back into |PSIfour| format and are thereafter accessible for; further processing in the input file. See :ref:`sec:cfourOutput` for; details. This storage of results in variables and arrays *in memory* for; the duration of the |PSIfour| instance (as opposed to solely *in files*); is the only advantage thus far incurred by the P4C4 interface. We'll call; this mode of basic utility the ""sandwich"" mode. Molecule specification in |PSIfour| allows Cartesians, Z-matrices, mixed; Cartesian/Z-matrix, negation of variables, delayed specification of; variables, specification of fragments, etc., all in a whitespace-tolerant; format. See :ref:`sec:moleculeSpecification` for details and; :srcsample:`cfour/mints5` for examples. When a |PSIfour|-style molecule is; supplied, its geometry is written to ``ZMAT`` in Cartesian form and the; |cfour__cfour_coordinates|\ =CARTESIAN, |cfour__cfour_units|\ =ANGSTROM,; |cfour__cfour_charge|, and |cfour__cfour_multiplicity| keywords are set; appropriately in the ``*CFOUR(...)`` directive. .. warning:: There exist molecules (*e.g.*, allene) where the; inertial frame is not unique (planes along atoms or between; atoms). The orientation reconciling machinery currently does not; handle these cases and will fail with ""Axis unreconcilable between; QC programs"". I will get to this soon. Whenever the molecule is supplied in |PSIfour| format, the job control; keywords must be too. All :ref:`Cfour keywords <apdx:cfour>` are the usual; ones, prepended by ``cfour_`` to avoid any possible name conflicts. As; detailed in :ref:`sec:jobControl`, setting keywords is flexible i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:6560,toler,tolerant,6560,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['toler'],['tolerant']
Availability,"c{1}{1 + 6 (R_{ij}/(s_{r,n} R_0^{ij}))^{- \alpha_n}}. A modified damping scheme for DFT-D3 using the rational damping form of; Becke and Johnson was introduced in [Grimme:2011:1456]_. The parameters; fit for individual functionals are now :math:`s_6`, :math:`s_8`,; :math:`a_1`, and :math:`a_2`. .. math:: E_{disp}^{\text{D3BJ}}=-\sum_{n=6,8} s_n \sum_{i,j>i}^{N_{at}} ; \frac{C_n^{ij}}{(R_{ij})^n + (f_{damp})^n}. .. math:: f_{damp} = a_1 \sqrt{\frac{C_8^{ij}}{C_6^{ij}}} + a_2. All parameters characterizing the dispersion correction are taken from; `Grimme's website <https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/get-the-current-version-of-dft-d3>`_; or else from the literature.; With s-dftd3, parameters are also tabulated in the program source. Running DFTD3 or DFTD4; ~~~~~~~~~~~~~~~~~~~~~~. A number of *a posteriori* dispersion corrections are available in; |PSIfour|. While some are computed within |PSIfours| codebase (-D1, -D2,; -CHG, -DAS2009, -DAS2010), the -D3 or -D4 corrections and their variants are; available only through the ``DFTD3`` or ``DFTD4`` programs. Once installed, the; ``dftd3``/|PSIfour| and ``dftd4``/|PSIfour| interfaces are transparent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posterio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:12049,avail,available,12049,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability,"d adding ``envs/p4env/bin`` to :envvar:`PATH`. The ``conda activate`` command (conda >=4.4; December 2017) works in all shells, but if you're using old ``source activate`` that only works for ``bash``; adjust as needed for ``csh``/``tcsh``. .. code-block:: bash. >>> conda create -n p4env psi4; >>> conda activate p4env; # check; >>> which psi4; /path/to/miniconda/envs/p4env/bin/psi4. .. The output for either of the installation commands above looks like the following. It checks what packages are needed, gets your approval for downloading them, fetches and installs them, prints out some useful information, and runs a |PSIfour| test case to check that all's well.; ..; .. .. code-block:: bash; ..; .. >>> conda install psi4; .. Using Anaconda Cloud api site https://api.anaconda.org; .. Fetching package metadata: ......; .. Solving package specifications: .........; ..; .. Package plan for installation in environment /theoryfs2/ds/cdsgroup/miniconda/envs/tpsi4:; ..; .. The following packages will be downloaded:; ..; .. package | build; .. ---------------------------|-----------------; .. psi4-0.4.322 | py27_g84b3aa1 44.4 MB http://conda.anaconda.org/psi4/linux-64/; ..; .. The following NEW packages will be INSTALLED:; ..; .. psi4: 0.4.322-py27_g84b3aa1 http://conda.anaconda.org/psi4/linux-64/; ..; .. Proceed ([y]/n)? y; ..; .. Fetching packages ...; .. psi4-0.4.322-p 100% |####################################################################################| Time: 0:00:08 5.77 MB/s; .. Extracting packages ...; .. [ COMPLETE ]|#######################################################################################################| 100%; .. Linking packages ...; ..; ..; .. Thank you for installing psi4. Additional resources:; .. Website: www.psicode.org; .. Inputs: /theoryfs2/ds/cdsgroup/miniconda/envs/tpsi4/share/psi4/samples; .. Manual: http://psicode.org/psi4manual/master/index.html; .. GitHub: https://github.com/psi4/psi4/wiki; .. Binary: https://anaconda.org/psi4; .. You",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:23068,down,downloaded,23068,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloaded']
Availability,"d by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:278423,error,error,278423,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'mod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482437,error,error,482437,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'r",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487417,error,error,487417,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular gcp compilation, simply adjust its; position in the path environment variables. Running gCP; ~~~~~~~~~~~. At present there is a limited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correction (it does use ECPs down to first row elements); but is listed here for completeness of the ""3c"" family.; A :ref:`DFTD3 <sec:dftd3>` executable, classic or simple-dftd3, must also be available for; the HF-3c, PBEh-3c, or B97-3c methods to run.; A :ref:`DFTD4 <sec:dftd3>` python module must also be available for; the r2SCAN-3c or wB97X-3c methods to run.; These method are defined with their own basis set and thus no basis set should be set by the user.; |PSIfour| will select the intended basis sets: HF-3c/MINIX, PBEh-3c/def2-mSVP, B97-3c/def2-mTZVP, r2SCAN-3c/def2-mTZVPP, wB97X-3c/vDZP.; If a basis has previously been set for another calculation, use the slash syntax to ""empty"" the basis; option for the scope of the current calculation, ``energy(""hf3c/"")``. A few practical examples:. * HF-3c single point with default minix basis ::. energy('hf3c'). * PBEh-3c optimization with default def2-mSVP basis ::. optimize('pbeh3c'). * r2SCAN-3c with default basis after basis set ::. set basis cc-pvdz; energy('r2scan3c/'). If only BSSE/basis set corrections (rather than total energies) are of; interest, the ``gcp`` program can be run independently of the scf; through the python function :py:func:`~qcdb.Molecule.run_gcp`. (This function; is the same |PSIfour|/``gcp`` interface that is called",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:4386,avail,available,4386,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,1,['avail'],['available']
Availability,"d to a larger Libint, enter ``<objdir>``,; remove the result of ``make install`` (if ever invoked), remove; ``external/upstream/libint/``. If earlier Libint was built; internally (as opposed to detecting an external installation),; remove ``stage/include/libint/``, ``stage/share/cmake/Libint/``,; ``stage/lib/libint2.so.2``. Edit MAX_AM_ERI; value in ``CMakeCache.txt``. Reinvoke ``make`` and check the number; beside ``Found Libint`` in the CMake output. Note that the same keyword MAX_AM_ERI controls Libint and simint. simint; can't compile above AM7, so you'll have to turn off simint to get an; internal compile of AM>=8 Libint. The keyword is only a lower bound for; detection, so you can set it at 7, have both Libint and simint enabled,; and point CMake toward a pre-built Libint AM8 just fine. * :ref:`cmake:libint`. .. _`faq:condamaxameri`:. How to get high angular momentum integrals from conda; -----------------------------------------------------. Libint2 conda packages are available from conda for Linux, Mac, and Windows. The Linux package has base ``MAX_AM_ERI=7`` and can run 7z energies; and gradients conventional, 6z energies and gradients density-fitted,; and qz Hessians both conventional and density fitted. The Mac and Windows packages have base ``MAX_AM_ERI=5`` and can run; 5z energies, qz gradients, and tz Hessians, both conventional and; density-fitted. Details about angular momentum settings are available here; :source:`external/upstream/libint2/CMakeLists.txt`; . .. Since February 2019, the |PSIfour| conda package on Linux has been the; .. large AM8. Likewise, this is the package you get upon ::; ..; .. conda install libint -c psi4; ..; .. There is no need for the extra ``am8`` argument previously documented here.; ..; .. On Mac, the Libint conda package itself and the Libint compiled into; .. the |PSIfour| conda package remain AM6.; ..; .. Beware this issue: https://github.com/psi4/psi4/issues/1533. .. _`faq:setuphelp`:. How to see what build configurati",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:18406,avail,available,18406,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"d to the maintenance branch.; * Save the draft release until tag is finalized.; * ""publish"" release. This establishes the release date for the GitHub API. Publish psicode.org release; ---------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Execute https://api.github.com/repos/psi4/psi4/releases/latest or; https://api.github.com/repos/psi4/psi4/releases/tags/v1.8.2 (substituting tag) and note the ``id``; field value.; * Copy and edit a new file akin to ``content/posts/v182.md``. Add it to the git index. - e.g., ``v1.8.2`` is used for Title and Release Notes.; - e.g., ``1.8.x`` is used for Documentation and Source.; - e.g., ``v182`` (edition string) is used for Image and Installers.; - Use the ``id`` value in the shortcode call at the bottom near ``ghRN``. * Add a new release page to the ``psi4_release_fireworks.key`` Keynote presentation. Run the slide; transition and screenshot the fireworks. Open the PNG file in Preview and save as JPEG while; downsampling to ~400kB. Place the file at e.g., ``static/images/portfolio/fireworks_slide_v182.jpg``.; Add it to the git index.; * Edit ``data/portfolio.yml`` to add a new block for the release (order matters).; * Include these changes in a PR. Check the generated preview if needed. Merge the PR yourself or ask; for it to be merged. Finalize release; ----------------. * Make new PR with; * edits to main ``README.md`` badges, python versions, etc.; * Tweet about release. .. Reset psi4meta for nightly operation (pre-Spring 2023); .. ------------------------------------------------------; ..; .. On both Linux and Mac:; ..; .. * After (post)release (not prerelease), in ``conda_build_config.yaml``, edit ``ltrtver`` to a new ""release.dev"" label; .. * After postrelease, unpin any dependencies in cbcy that needed older either ver or bld (e.g., v2rdm_casscf_bld); .. * Edit ``psi4ver`` back to ``''`` in cbcy; .. * Edit ``source/git_tag`` back to ``master`` for psi4-multiout, psi4-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:37384,down,downsampling,37384,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downsampling']
Availability,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:455413,error,error,455413,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:465574,error,error,465574,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:314941,error,error,314941,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,3,['error'],['error']
Availability,"d', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158123,error,error,158123,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:163459,error,error,163459,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:155575,error,error,155575,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:152194,error,error,152194,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7654,error,error,7654,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:8954,error,error,8954,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"d,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; submitted. -----------------------------------------------------------------------. Psi4 started on: Friday, 28 April 2017 07:31PM. Process ID: 95107; PSIDATADIR: /Users/johndoe/psi4/objdir8/stage/usr/local/psi4/share/psi4; Memory: 500.0 MiB; Threads: 1. >>> psi4.version_formatter(); '1.1rc2.dev17'; >>> psi4.version_formatter('all'); '1.1rc2.dev17 {condadoc} c852257 1.0.0.999 dirty 1.0 <-- 1.1rc2.dev17+c852257'; >>> psi4.version_formatter(""""""{{{branch}}} {versionlong}""""""); '{condadoc} 1.1rc2.dev17+c852257'. .. _`faq:grepascii`:. How to locate non-ascii characters in the codebase; --------------------------------------------------. Neither the Python interpreter nor Sphinx like non-ASCII characters one; bit, though the errors may be intermittant. Output files are usually ok,; so Jerome can live, for now. To aid in tracking down offenders, here's; the ``vi`` and ``grep`` search strings. In the docs, you want to use; the substitutions in :source:`doc/sphinxman/source/abbr_accents.rst`; instead of the actual characters. ::. # vim; :/[^\x00-\x7F]. # bash; grep -r --color='auto' -P -n ""[^\x00-\x7F]"" psi4/; ; .. _`faq:undefversion`:. How to fix ""Psi4 undefined"" version; -----------------------------------. When in a git repo, the versioner uses ``git describe`` and psi4/metadata.py; to compute the version. If you don't have all the latest tags, this mechanism; can't work. To solve, pull tags and remake. ::. # upstream in `git remote -v` points to github.com/psi4/psi4.git; >>> git fetch upstream 'refs/tags/*:refs/tags/*'; >>> make; # version healed; ; .. _`faq:cannotimportcoretlpd`:. How to fix ""cannot import name 'core' from {top-level-psi4-dir}; ---------------------------------------------------------------. First, what's happening? ``sys.path`` (where modules can be imported from in python) starts with ``''``. If you `export PYT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_git.rst:7971,down,down,7971,doc/sphinxman/source/manage_git.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_git.rst,1,['down'],['down']
Availability,"d-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode and has something to do with the exponent boost chooses for; .. the default zero tolerance. Anyways, commenting out lines 47 to 49, for valgrind purposes, should; .. allow you to run valgrind. The consequence of commenting out these lines are you get no integeral; .. screening, so make sure you uncomment them when you actually run. .. _`faq:cmakeverbose`:. How to see the actual compiling commands (or errors) with ``cmake``; -------------------------------------------------------------------. CMake by default hides a lot of useful debugging information to make the; compilation cleaner. Issue ``make VERBOSE=1`` to display the full; compilation commands and errors. .. _`faq:vigitmerge`:. How to highlight git merge conflicts in ``vi``; ----------------------------------------------. Edit your ``~/.vimrc`` file to include the lines below. Hitting the ``F7``; key will toggle highlighting of git's conflict markers. .. code-block:: bash. >>> cat ~/.vimrc; set hlsearch; map <F7> :/\(<<<<<<<\\|=======\\|>>>>>>>\)<CR>. .. _`faq:libmwcondapy`:. How to handle ""runtime library may be hidden"" when building with Anaconda Python; --------------------------------------------------------------------------------. When building against Ana/Miniconda python (e.g., ``cmake; -DPython_EXECUTABLE=/path/to/conda/bin/python``), the warning below often; appears. It is harmless, proceed. .. code-block:: bash. CMake Warning at src/bin/psi4/CMakeLists.txt:58 (add_executable):; Cannot generate a safe runtime search path for target psi4 because files in; some directories may conflict with libraries in implicit directories:. runtime libra",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:57052,error,errors,57052,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['errors']
Availability,"da-forge``. * To remove a conda installation, ``conda remove dftd3`` or ``conda remove dftd3-python``. **Source**. * .. image:: https://img.shields.io/badge/home-DFTD3-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/get-the-current-version-of-dft-d3. * If using |PSIfour| built from source and you want to build DFTD3 from; from source also,; follow the instructions provided with the source; (essentially, download the freely available tarball, unpack the source,; edit the Makefile to select a; Fortran compiler, and run make). From version 3.1.0 onwards, DFTD3 can; be used as-is; for earlier versions, patches are available:; :source:`psi4/share/psi4/scripts/patch_grimme_dftd3.3.0.2`. To be used by |PSIfour|, the classic program binary (``dftd3``) must be; found in your :envvar:`PATH` or the s-dftd3 module in your :envvar:`PYTHONPATH`; so QCEngine can detect it. Check if and where found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular dftd3 compilation, simply adjust its; position in the path environment variables. .. >>> cd dftd3; .. >>> ls; .. dftd3.tar; .. patch_grimme_dftd3.3.0.2; .. >>> tar -xvf dftd3.tar; .. copyc6.f; .. dftd3.f; .. Makefile; .. man.pdf; .. pars.f; .. param; .. >>> patch < patch_grimme_dftd3.3.0.2; .. patching file dftd3.f; .. >>> make; .. making dftd3.o from dftd3.f; .. ifort -O -c dftd3.f -o dftd3.o; .. making copyc6.o from copyc6.f; .. ifort -O -c copyc6.f -o copyc6.o; .. ifort dftd3.o copyc6.o -o ./dftd3; .. >>> ls; .. Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3.3.0.2; .. copyc6.f dftd3 dftd3.o man.pdf pars.f. Theory; ~~~~~~. The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515]_ and assiduously developed by Grimme, [Grimme:2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:8011,error,error,8011,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['error'],['error']
Availability,"ded in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:prog_integrals`:. ======================; Integrals in |PSIfour|; ======================. Introduction; ------------. |PSIfour| has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style; ---------------. A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:. .. code-block:: cpp. auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:1223,avail,available,1223,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['avail'],['available']
Availability,"ded job, and a short explanation for each section. .. code-block:: bash. #!/bin/tcsh; #PBS -j oe; #PBS -l pmem=2120mb; #PBS -N jobname; #PBS -V. cd $PBS_O_WORKDIR; setenv myscratch /scratch/user/psi4.$PBS_JOBID. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end. unsetenv PSIDATADIR; setenv PSI_SCRATCH $myscratch; if ! ( $?PSIPATH ) setenv PSIPATH """"; setenv PSIPATH /path/to/external/modules:${PSIPATH}; setenv PSIPATH /path/to/python/modules:${PSIPATH}; /psi/install/directory/bin/psi4 -i input.in -o input.out -n 4. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end. The top section features PBS-specific commands. These depend on the ; specific characteristics of your PBS queuing system but they may include: ::. #!/bin/tcsh; #PBS -j oe ; #PBS -l pmem=2120mb; #PBS -N jobname; #PBS -V; ; The ``PBS -j oe`` option instructs PBS to write any output or error message; from the queuing system in dedicated files. ``PBS -l pmem=2120mb`` requests ; 2120 MB of memory for each thread on the node. The total memory requested for ; the job by PBS should generally be slightly greater than what indicated ; in the input file (see :ref:`memory setting <sec:memory>`). .. In the next section, we define :envvar:`OMP_NUM_THREADS` and :envvar:`MKL_NUM_THREADS`; .. to use 4 threads for OpenMP parallelization and in threaded BLAS (see section :ref:`sec:threading`). ::; .. ; .. setenv OMP_NUM_THREADS 4; .. setenv MKL_NUM_THREADS 4. Then, we move to the working directory using PBS variable ``$PBS_O_WORKDIR`` and ; we create scratch directories on every node, using the ``$PBS_NODEFILE`` which ; points to a file containing a list of the nodes attributed to the job. .. code-block:: bash. cd $PBS_O_WORKDIR; setenv myscratch /scratch/user/psi4.$PBS_JOBID; ; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch d",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:14624,error,error,14624,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['error'],['error']
Availability,"des. t_{ij}^{ab} &= - \frac{(iajb)}{\epsilon_{a} + \epsilon_{b} - \epsilon_{i} - \epsilon_{j}}, \\; \tilde{t}_{ij}^{ab} &= 2t_{ij}^{ab} - t_{ij}^{ba}. PNOs with small occupation numbers are discarded, and the local MP2 equations are; solved in the LMO/PNO basis. Recommendations; ---------------. Some practical notes on running the code:. * DLPNO-MP2 is not a drop-in replacement for DF-MP2. Instead, it should be used for; large calculations that cannot reasonably be performed with DF-MP2. The crossover; point between DF-MP2 and DLPNO-MP2 depends on details of both the calculation and; the hardware, but can be as low as 2,000 basis functions. * The accuracy of DLPNO-MP2 (relative to DF-MP2) can be controlled with the; |dlpno__pno_convergence| keyword according to recommendation by Liakos et al.; [Liakos:2015:1525]_. For non-covalent interactions ``TIGHT`` is highly recommended. ; ; * The greater the spatial sparsity of a molecular system, the smaller the pair; domains and consequently the faster the calculation. DLPNO-MP2 is much faster; for linear alkanes than for globular proteins, all else constant. * Similar to molecular sparsity, the sparsity of the orbital basis affects runtime.; Diffuse functions increase the size of the pair domains and therefore lead to ; longer calculations. * All aspects of DLPNO-MP2 run in core; no disk is required. As a result, the; code exhibits very good intra-node parallelism, and benefits from many threads.; The amount of memory needed scales linearly with system size. * DLPNO-MP2 is not symmetry aware. This should not be a concern for large systems in; which symmetry is seldom present. * As with DF-MP2, freezing core orbitals (by setting |globals__freeze_core|; to ``True``) is recommended for efficiency. In DLPNO methods, this is also; recommended for accuracy, since core excitations are known to exhibit; greater errors relative to valence excitations. * At the moment, the DLPNO-MP2 code is only compatible with with RHF references.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:9613,error,errors,9613,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['error'],['errors']
Availability,"df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:404506,error,error,404506,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:460888,error,error,460888,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dge/docs-latest-5077AB.svg; :target: https://ddsolvation.github.io/ddX/. |PSIfour| contains code to interface to the ddx FORTRAN library developed; by A. Mikhalev *et. al.*. The library provides a linear-scaling implementation; of standard continuum solvation models using a domain-decomposition ansatz; [Cances:2013:054111]_ [Stamm:2016:054101]_.; Currently the conductor-like screening model (COSMO) [Klamt:1993:799]_ [Lipparini:2014:184108]_,; the polarisable continuum model (PCM) [Tomasi:2005:2999]_ [Nottoli:2019:6061]_; and the linearized poisson-boltzmann model (LPB) [Lu:2008:973]_ [Jha:2023:104105]_ are supported.; No additional licence or configuration is required to use ddx with Psi4. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/conda-forge/pyddx/badges/version.svg; :target: https://anaconda.org/conda-forge/pyddx. * .. image:: https://img.shields.io/pypi/v/pyddx; :target: https://pypi.org/project/pyddx. * ddx is available for Linux and macOS in form of the ``pyddx`` package; on conda-forge and on pypi. * To install from conda run ``conda install pyddx -c conda-forge``. * To remove a conda installation, ``conda remove pyddx``. **Source**. * .. image:: https://img.shields.io/github/tag-date/ddsolvation/ddx.svg?maxAge=2592000; :target: https://github.com/ddsolvation/ddx. * If using |PSIfour| built from source and you want ddx installed as well,; enable it as a feature with :makevar:`ENABLE_ddx`,; and let the build system fetch and install it. .. _`sec:usingDDX`:. Using dd-based continum solvation models; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In |PSIfour| two option to enable continuum solvation models; are currently implemented using either the PCMSolver or ddx package.; PCMSolver is based on a boundary-element discretisation [Cances:1998:309]_,; while ddx is based on a domain decomposition approach; [Cances:2013:054111]_ making it linear scaling.; For more details about PCMSolver see the :ref:`section on PCMsolver <sec:pcmsolver>`.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:2547,avail,available,2547,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['avail'],['available']
Availability,"dimer.set_basisset(""DF_BASIS_ELST"", aux_basis); ; psi4.sapt(wfn_dimer,wfn_monA,wfn_monB). In this way, any of the SCF options can be tweaked for individual fragments.; For optimal efficiency, the example uses ``set df_ints_io save`` to keep file 97,; which contains the three-index integrals for density fitting. ``set df_ints_io load``; then instructs the program to read these integrals from disk instead of recomputing; them. For each SCF computation, we use ``psi4.IO.set_default_namespace`` to uniquely; name scratch files. In the following SCF step, only file 97 is renamed using; ``psi4.IO.change_file_namespace`` so that integrals can be read from it.; For more information on stability analysis, see the :ref:`stability <sec:scfstability_doc>`; documentation. .. index:: SAPT; SAPT0. SAPT0; ^^^^^. Generally speaking, SAPT0 should be applied to large systems or large data; sets. The performance of closed-shell SAPT0 relies entirely on error cancellation, which; seems to be optimal with a truncated aug-cc-pVDZ basis, namely,; jun-cc-pVDZ (which we have referred to in previous work as; aug-cc-pVDZ'). We do not recommend using SAPT0 with large basis sets; like aug-cc-pVTZ. A systematic study of the accuracy of closed-shell SAPT0 and other SAPT ; truncations, using different basis sets, is reported in ; [Parker:2014:094106]_. In particular, an empirical recipe for scaled SAPT0; can yield improved performance and has been included in the output file as; the sSAPT0 interaction energy. sSAPT0 is a free by-product and is automatically ; computed when SAPT0 is requested (see above for more details).; The SAPT module has been used to perform SAPT0 computations with over; 200 atoms and 2800 basis functions; this code should be scalable to 4000; basis functions. Publications resulting from the use of the SAPT0 code ; should cite the following publications: [Hohenstein:2010:184111]_ and ; [Hohenstein:2011:174107]_. If the open-shell SAPT0 code is used,; [Gonthier:2016:134106]_ shou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:20172,error,error,20172,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['error'],['error']
Availability,"dition number of the overlap matrix to be smaller than; the machine epsilon - the partial Cholesky decomposition is undertaken; until |scf__s_cholesky_tolerance|, which defaults to 1E-8. Use of symmetric, canonical, and partial Cholesky orthogonalization; can be forced by setting the |scf__s_orthogonalization| option to; ``SYMMETRIC``, ``CANONICAL``, or ``PARTIALCHOLESKY``,; respectively. Note that in practice, the MOs and OSOs are built separately within; each irrep from the symmetry-adapted combinations of AOs known as; Unique Symmetry Orbitals (USOs). For canonical orthogonalization,; this implies that the number of MOs and OSOs per irrep may be slightly; smaller than the number of USOs per irrep. A contrived example demonstrating OSOs/MOs vs. AOs with symmetry is shown; below::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; symmetry c2 # Two irreps is easier to comprehend; }. set {; s_tolerance 0.0001 # Set an unreasonably tight; # tolerance to force canonical; basis aug-cc-pv5z # This diffuse basis will have; # small-ish eigenvalues for even H2O; print 3; }. energy('scf'). Output::. ==> Pre-Iterations <==. -------------------------------------------------------; Irrep Nso Nmo Nalpha Nbeta Ndocc Nsocc; -------------------------------------------------------; A 145 145 0 0 0 0; B 142 142 0 0 0 0; -------------------------------------------------------; Total 287 287 5 5 5 0; -------------------------------------------------------. ... Minimum eigenvalue in the overlap matrix is 1.6888063568E-05.; Using Canonical Orthogonalization with cutoff of 1.0000000000E-04.; Irrep 0, 1 of 145 possible MOs eliminated.; Irrep 1, 2 of 142 possible MOs eliminated.; Overall, 3 of 287 possible MOs eliminated. In this example, there are 287 AO basis functions after spherical harmonics are; applied. These are used to produce 287 symmetry adapted USOs, 145 of which are; assigned to irrep A, and 142 of which are assigned to irrep B. Within irrep A,; 144 OSOs fall above the eigenval",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:16294,toler,tolerance,16294,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['toler'],['tolerance']
Availability,"driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:159197,error,error,159197,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164533,error,error,164533,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'o",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333947,error,error,333947,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ds related to coupled-cluster computations is; provided in the appendices, with the majority of the relevant; keywords appearing in Appendix :ref:`apdx:ccenergy`. For a standard ground-state; CCSD or CCSD(T) computation, the following keywords are common:. .. include:: autodir_options_c/ccenergy__reference.rst; .. include:: autodir_options_c/ccenergy__r_convergence.rst; .. include:: autodir_options_c/ccenergy__maxiter.rst; .. include:: autodir_options_c/ccenergy__brueckner_orbs_r_convergence.rst; .. include:: autodir_options_c/ccenergy__restart.rst; .. include:: autodir_options_c/ccenergy__cachelevel.rst; .. include:: autodir_options_c/ccenergy__cachetype.rst; .. include:: autodir_options_c/ccenergy__num_amps_print.rst; .. include:: autodir_options_c/ccenergy__mp2_amps_print.rst. Larger Calculations; ^^^^^^^^^^^^^^^^^^^. Here are a few recommendations for carrying out large-basis-set coupled; cluster calculations with |PSIfour|:. * In most cases it is reasonable to set the ``memory`` keyword to 90% of; the available physical memory, at most. There is a small amount of overhead; associated with the; coupled cluster modules that is not accounted for by the internal CC memory; handling routines. Thus, the user should *not* specify the entire; physical memory of the system, or swapping is likely. However, for especially large; calculations, it is better to set the ``memory`` keyword to a value less than 16 GB. * Set the |ccenergy__cachelevel| keyword to ``0``.; This will turn off cacheing, which, for very large calculations, can; lead to heap fragmentation and memory faults, even when sufficient; physical memory exists. * Set the |globals__print| keyword to ``2``. This; will help narrow where memory bottlenecks or other errors exist in the; event of a crash. .. _`sec:eomcc`:. Excited State Coupled Cluster Calculations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. A complete list of keywords related to; coupled cluster linear response is provided in Appendix :ref:`apdx:cc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:9185,avail,available,9185,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['avail'],['available']
Availability,"dsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:353048,error,error,353048,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62716,error,error,62716,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:80935,error,error,80935,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86344,error,error,86344,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:315779,error,error,315779,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:453900,error,error,453900,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:464061,error,error,464061,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:167730,error,error,167730,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13349,error,error,13349,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14829,error,error,14829,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"dule': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18607,error,error,18607,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index::; pair: plugin; v2rdm_casscf. .. _`sec:v2rdm_casscf`:. Plugin v2rdm_casscf by A. E. DePrince; =====================================. .. codeauthor:: A. E. DePrince; .. sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:pcm>`, :ref:`PSI Variables <apdx:pcm_psivar>`, :source:`PCMSolver <src/lib/libpsipcm>`. .. image:: https://img.shields.io/badge/home-v2rdm_casscf-5077AB.svg; :target: https://github.com/edeprince3/v2rdm_casscf. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/edeprince3/v2rdm_casscf/blob/master/README.md. A variational 2-RDM-driven CASSCF plugin to |PSIfour|. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/v2rdm_casscf/badges/version.svg; :target: https://anaconda.org/psi4/v2rdm_casscf. * v2rdm_casscf is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the Psi4conda installer, v2rdm_casscf has already been installed alongside. * If using the |PSIfour| conda package, the v2rdm_casscf conda package can; be obtained through ``conda install v2rdm_casscf -c psi4`` or ``conda install; psi4-rt -c psi4``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; v2rdm_casscf can be obtained through ``conda install v2rdm_casscf -c psi4``.; Then, hint its location with :envvar:`PYTHONPATH`. * To remove a conda installation, ``conda remove v2rdm_casscf``. **Source**. * .. image:: https://img.shields.io/github/tag/edeprince3/v2rdm_casscf.svg?maxAge=2592000; :target: https://github.com/edeprince3/v2rdm_casscf. * If using |PSIfour| built from source and you want v2rdm_casscf built from; from source also,; build it, then hint its location with :envvar:`PYTHONPATH`. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_v2rdm_casscf.rst:1909,avail,available,1909,doc/sphinxman/source/plugin_v2rdm_casscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_v2rdm_casscf.rst,1,['avail'],['available']
Availability,"e Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:sowreap`:. Embarrassing Parallelism; ========================. Many of the tasks automated by Python wrappers consist of a number of; independent |PSIfour| calculations and are thus suited to an embarrassingly; parallel mode of operation. In Psithon, these have been dubbed sow/reap; procedures and have the following general structure. - Prepare an input file, simply adding ``mode='sow'`` to the; argument list of an available Python function. Run this quick job to; produce input files for lengthier calculations. - According to the instructions in the output file of the above step,; run the generated input files in any order on any variety of computers; and architectures. This is the time-intensive portion of the; calculation. - The 'sow' stage also produces a *master* input file (with a; ``mode='reap'`` directive). When all the jobs in the above step are; completed, place their output files in the same location as the; *master* input, and run this last, quick job to collect the results. - Sow/reap procedures are governed by the **mode** keyword, choices being; ``'continuous'``, ``'sow'``, and ``'reap'``. Only ``'sow'`` is likely to; be used by the user, as ``'continuous'`` is always the default, and; input files with ``'reap'`` are autogenerated. - Embarrassingly parallel algorithm available at present for:. - :ref:`sec:db()` ; - finite difference operation of :ref:`sec",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sowreap.rst:1489,avail,available,1489,doc/sphinxman/source/sowreap.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sowreap.rst,1,['avail'],['available']
Availability,"e GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: basis set; available by family; .. _`apdx:basisTables`:. ====================; Basis Sets by Family; ====================. Tables :ref:`Pople <table:basisPopleOrbital>`,; :ref:`Dunning <table:basisDunningOrbital>`, ; :ref:`Dunning (Douglas-Kroll) <table:basisDunningDK>`, ; :ref:`Dunning (F12) <table:basisDunningF12>`, ; :ref:`Karlsruhe <table:basisKarlsruhe>`,; :ref:`Jensen <table:basisJensen>`,; :ref:`Petersson <table:basisPetersson>`,; and :ref:`Other <table:basisOther>` summarize the orbital basis sets available in; |PSIfour|. These tables are arranged so that columns indicate degree of; augmentation by diffuse functions (generally necessary for anions, excited; states, and noncovalent interactions) and DTQ56 indicate the :math:`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fittin",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:1583,avail,available,1583,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"e between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307; }; ; energy('sapt(dft)'). As already mentioned above, the SAPT0 module for open-shell cases can also; use exact integrals for all terms except for dispersion. In practice,; density fitting is considerably faster and introduces negligible errors, thus; it is the preferred method for open-shell cases as well.; Below, you can find a minimum example of open-shell SAPT0 computation. ::. molecule {; 0 1; O 0.000000 0.000000 6.000000; H 0.000000 1.431500 4.890600; H 0.000000 -1.431500 4.890600; --; 0 2; O 0.000000 0.000000 0.000000; O 0.000000 2.503900 0.000000; H 0.000000 -0.424700 -1.839500; units bohr; symmetry c1; no_reorient; no_com; }; ; set {; reference uhf; scf_type df; basis aug-cc-pVDZ; }; ; energy('sapt0'); ; . |scf__reference| needs to be ``UHF`` or ``ROHF`` for the open-shell computation to proceed. Advanced example; ^^^^^^^^^^^^^^^^. Open-shell computations can be difficult to converge in certain cases, thus you may; want to have more control over the SCF procedure. You have the option of ; doing the driver job in the input file, by performing the dimer and monomer computations; yourself. In the example below, we do a stability analysis for the open-shell monomer only ::. molecule {; 0 2; O 0.000000 0.00000",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:16874,error,errors,16874,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['error'],['errors']
Availability,"e exported to be available to the user, as detailed in; :ref:`sec:psiVariables`. To set these variables, the following member of; Wavefunction should be called::. set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; :source:`doc/sphinxman/source/glossary_psivariables.rst`. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies; -------------------------------. The general philosophy in |PSIfour| is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF in terms of generalized; Fock-like matrices. From here, a single class can be used to construct these; generalized Fock matrices, which is what libFock; (:source:`psi4/src/psi4/libfock`) accomplishes. A number of integral; technologies -- such as integral-direct, disk-based and density fitting -- are; supported in libFock, making them generally available to all elements of the; code that use the generalized Fock matrix strategy. .. _`sec:prog_tour-exposing`:. Exposing C++ code to Python; ---------------------------. The recent push to move sections of the code that are not a bottleneck into the; Python layer requires that the C++ code is callable from Python and that its; results are accessible. The result accessibility is addressed by populating; the appropriate variables in the Wavefunction object. To make the code; callable from Python, we rely on the excellent `PyBind11 <https://pybind11.readthedocs.io/en/stable/>`_ library; to create the bindings. Existing code to export various |PSIfour| classes can; be found in :source:`psi4/src` in the files whose name begins with `export_`.; The code to export functions that run entire calculations is usually found in; :source:`psi4/src/core.cc`.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst:3445,avail,available,3445,doc/sphinxman/source/prog_tour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst,1,['avail'],['available']
Availability,"e freely available tarball, unpack the source,; edit the Makefile to select a Fortran compiler, and run make). To be used by |PSIfour|, the program binary (``gcp`` or ``mctc-gcp``) must be; found in your :envvar:`PATH` so that QCEngine can detect it. Check if and where; found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular gcp compilation, simply adjust its; position in the path environment variables. Running gCP; ~~~~~~~~~~~. At present there is a limited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correction (it does use ECPs down to first row elements); but is listed here for completeness of the ""3c"" family.; A :ref:`DFTD3 <sec:dftd3>` executable, classic or simple-dftd3, must also be available for; the HF-3c, PBEh-3c, or B97-3c methods to run.; A :ref:`DFTD4 <sec:dftd3>` python module must also be available for; the r2SCAN-3c or wB97X-3c methods to run.; These method are defined with their own basis set and thus no basis set should be set by the user.; |PSIfour| will select the intended basis sets: HF-3c/MINIX, PBEh-3c/def2-mSVP, B97-3c/def2-mTZVP, r2SCAN-3c/def2-mTZVPP, wB97X-3c/vDZP.; If a basis has previously been set for another calculation, use the slash syntax to ""empty"" the basis; option for the scope of the current calculation, ``energy(""hf3c/"")``. A few practical examples:. * HF-3c single point with default minix basis ::. energy('hf3c'). * PBEh-3c optimization with default def2-mSVP basis ::. optimize('pbeh3c'). * r2SCAN-3c with default basis after basis set ::. set basis cc-pvdz; energy('r2scan3c/'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:4107,down,down,4107,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,1,['down'],['down']
Availability,"e https://github.com/psi4/psi4.git && cd psi4; >>> conda create -n p4dev psi4-dev python=3.8 -c psi4/label/dev; >>> conda activate p4dev; >>> `psi4-path-advisor --gcc`; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`. .. _`faq:setupmaxameri`:. How to configure code to use high angular momentum basis sets; -------------------------------------------------------------. The :ref:`Libint <sec:libint>` integral code handles; arbitrary order angular momentum (AM), but compiling that is; prohibitive. The build process for Libint2 takes longer than; for Libint1, so it's recommended to :ref:`use the conda packages; <faq:condamaxameri>`. The AM controlling keyword ``MAX_AM_ERI``; has definition changed a little from Libint1. It is used to ensure; that conventional energies can use at least ``MAX_AM_ERI`` zeta. See; :source:`/external/upstream/libint2/CMakeLists.txt` for a fuller; discussion of AM capabilities. Unless :makevar:`BUILD_Libint2_GENERATOR`; is set to ``ON``, an internal build of Libint2 will download a; pregenerated tarball of at least :makevar:`MAX_AM_ERI` AM. If you; want to build completely from generator source, turn on the keyword,; but parts can only run in serial and parts benefit from parallel, so; it's not recommended. All the AM generation settings would need to be; edited in the above ``CMakeLists.txt`` rather than passing them into; the |PSIfour| build directly. * Build with Higher Angular Momentum. .. code-block:: bash. >>> cmake -DMAX_AM_ERI=6. * Relevant CMake Options:. .. code-block:: bash. MAX_AM_ERI=N # The maximum angular momentum level (1=p, 2=d, 3=f,; # etc.) for the libint integrals and derivative; # integrals. A value of N implies a maximum first; # derivative of N-1, and maximum second derivative of; # N-2, so for an atom such as Neon, the default 5 gets; # you conventional cc-pV5Z for energies, cc-pVQZ for; # gradients, cc-pVTZ for frequencies and density-fitted; # cc-pVQZ for energies, cc-pVTZ for gradients, cc-pVDZ; # for frequencies",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:16189,down,download,16189,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['download']
Availability,"e in |PSIfour|. +---------------+--------------+-----------+-------+------------------+; | basis set | no diffuse | augmented | tight | augmented, tight |; +===============+==============+===========+=======+==================+; | pcseg-N | 01234 [#f5]_ | | | |; +---------------+--------------+-----------+-------+------------------+; | aug-pcseg-N | | 01234 | | |; +---------------+--------------+-----------+-------+------------------+; | pcSseg-N | | | 01234 | |; +---------------+--------------+-----------+-------+------------------+; | aug-pcSseg-N | | | | 01234 |; +---------------+--------------+-----------+-------+------------------+. |; |. .. _`table:basisPetersson`:. .. table:: Summary of Petersson orbital basis sets available in |PSIfour|. +---------------+--------------+-----+; | basis set | augmented, tight |; +===============+==============+=====+; | nZaPa-NR | 234567 |; +---------------+--------------+-----+. |; |. .. _`table:basisOther`:. .. table:: Summary of other orbital basis sets available in |PSIfour|. +----------------+; | DZP |; +----------------+; | TZ2P |; +----------------+; | TZ2PF |; +----------------+; | Sadlej-LPol-ds |; +----------------+; | Sadlej-LPol-dl |; +----------------+; | Sadlej-LPol-fs |; +----------------+; | Sadlej-LPol-fl |; +----------------+. |; |. .. rubric:: Footnotes. .. [#f1] Corresponding basis set filenames have star replaced by ""s"", plus replaced by ""p"", and parenthesis and comma replaced by ""_"".; .. [#f2] The heavy-aug-cc-\ *stub* and jul-cc-\ *stub* basis sets are identical.; .. [#f3] The JKFIT basis sets are designed in the cc-\ *stub*\ (X+d)Z ; framework that includes an additional set of; *d*-functions for second-row *p*-block elements. Identical basis sets; with the cc-\ *stub*\ XZ-JKFIT label are provided for convenience.; .. [#f4] D\ :math:`\zeta` has :math:`\ell_{max}=2` or d.; T\ :math:`\zeta` has :math:`\ell_{max}=3` or f.; Q\ :math:`\zeta` has :math:`\ell_{max}=4` or g, *etc*.; .. [#f5] *N* in Jensen basis",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:18913,avail,available,18913,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"e package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: basis set; available by family; .. _`apdx:basisTables`:. ====================; Basis Sets by Family; ====================. Tables :ref:`Pople <table:basisPopleOrbital>`,; :ref:`Dunning <table:basisDunningOrbital>`, ; :ref:`Dunning (Douglas-Kroll) <table:basisDunningDK>`, ; :ref:`Dunning (F12) <table:basisDunningF12>`, ; :ref:`Karlsruhe <table:basisKarlsruhe>`,; :ref:`Jensen <table:basisJensen>`,; :ref:`Petersson <table:basisPetersson>`,; and :ref:`Other <table:basisOther>` summarize the orbital basis sets available in; |PSIfour|. These tables are arranged so that columns indicate degree of; augmentation by diffuse functions (generally necessary for anions, excited; states, and noncovalent interactions) and DTQ56 indicate the :math:`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in T",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:1083,avail,available,1083,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"e same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+---------------------------------------------------------------------------------------------+; | Extension [#f0]_ and Aliases | Variant | Computing Program (engine) | |scf__dft_dispersion_parameters| [#f10]_ |; +=====================================+======================================================================================+=================================+=============================================================================================+; | -D | alias to -D2 | | |; +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+---------------------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13851,avail,available,13851,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability,"e the fractional occupation behavior within one electron above; and below the neutral. An example is::. molecule h2o {; 0 1 # must be neutral; O; H 1 1.0; H 1 1.0 2 104.5; # FRAC jobs will be be run in C1 symmetry; }. set {; reference uks # UKS, as we need to do all kinds of weird stuff; basis aug-cc-pvdz # Augmented functions are very important on the anion side; scf_type df; }. # Argument is functional.; # Many optional arguments are available, see the python file; frac_traverse('wb97', molecule=h2o). The other macro is :py:func:`~psi4.driver.frac.frac_nuke`, which strips several electrons out of the; system to gather information on the MSIE over a range of orbitals. The input is; identical to the above, except that the :py:func:`~psi4.driver.frac.frac_traverse` call is substituted; for something like::. # Argument is the functional.; # A useful optional argument is nmax, the total number of electrons to; # strip out of the molecule, in this case, 2.; # Many optional arguments are available, see the python file; frac.frac_nuke('wb97', molecule=h2o, nmax = 2). Dispersion Corrections; ~~~~~~~~~~~~~~~~~~~~~~. :ref:`DFT-D dispersion corrections are discussed here. <sec:dftd3>`. :ref:`HF-3c and PBEh-3c dispersion and BSSE corrections are discussed here. <sec:gcp>`. :ref:`DFT-NL dispersion corrections are discussed here. <sec:dftnl>`. Recommendations; ~~~~~~~~~~~~~~~. The KS-DFT code is quite new, but relatively complete. During code development,; emphasis was placed on flexibility of functional technology, efficiency for; medium to large systems in difficult electronic environments (*e.g.*, compact; spatial extents, diffuse basis sets, low band-gaps, LRC and/or hybrid GKS; functionals), and time to code completion. We are very interested in optimizing; and extending the code, so expect performance gains and extensions to; gradients/hessians and TDDFT in future releases. Some rough guidelines for using the KS-DFT code are as follows,. * Use DF for the ERI algorithm where",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:31242,avail,available,31242,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['avail'],['available']
Availability,"e to specify name or full path to Fortran compiler.; * :makevar:`CMAKE_Fortran_FLAGS` |w---w| CMake variable to specify any additional custom compiler flags for Fortran source. **Examples**. A. Build with detected compiler from :envvar:`PATH`. .. code-block:: bash. >>> cmake. B. Build with specific (Intel) compiler from :envvar:`PATH`. .. code-block:: bash. >>> cmake -DCMAKE_Fortran_COMPILER=ifort. .. _`faq:approvedfc`:. What Fortran compilers are approved; -----------------------------------. On Linux and Mac, the following work nicely. * GNU: ``gfortran``; * Intel: ``ifort``. * Packages to install for specific OS or package managers:. * Ubuntu ``gfortran``; * conda ``gfortran_linux-64`` or ``gfortran_osx-64`` to get ``gfortran``. .. _`faq:macgfortran`:. How to obtain a Fortran compiler for Mac without Fink, MacPorts, or Homebrew; ----------------------------------------------------------------------------. Xcode does not provide a Fortran compiler. A way to get one is to download; the ``gfortran_osx-64`` conda package. This provides; ``gfortran`` compilers for Mac. The version is 4.8.5, which is quite old,; but the Fortran compiler will work. .. Xcode does not provide a Fortran compiler. Although a Fortran compiler is; .. not required for Psi4, a broken one can prevent correct configuration. Do; .. not download the latest version of GFortran from the HPC website; this is; .. unlikely to be compatible with your version of GCC. Instead, you should; .. run ``gcc -v`` to find out what version of GCC you're using, and then; .. download the corresponding GFortran from; .. <http://r.research.att.com/tools/>. If you configure Psi on a Mac without; .. any Fortran compiler it will set itself up correctly, so this is only; .. necessary if you want a Fortran compiler for other purposes. .. _`cmake:lapack`:. How to configure BLAS/LAPACK for building Psi4; ----------------------------------------------. **Role and Dependencies**. * Role |w---w| In |PSIfour|, BLAS and LAPACK con",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:44697,down,download,44697,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['download']
Availability,"e', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: retire rhf zapt by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:525007,error,error,525007,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'metho",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6536,error,error,6536,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:473622,error,error,473622,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'er",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:257462,error,error,257462,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'er",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:260446,error,error,260446,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp3 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:316213,error,error,316213,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:119595,error,error,119595,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:354940,error,error,354940,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:371546,error,error,371546,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:54570,error,error,54570,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:139608,error,error,139608,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229284,error,error,229284,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:72335,error,error,72335,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332227,error,error,332227,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:131046,error,error,131046,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:134820,error,error,134820,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:403912,error,error,403912,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:455202,error,error,455202,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:255475,error,error,255475,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'ene",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327442,error,error,327442,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:446624,error,error,446624,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:40745,error,error,40745,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:414073,error,error,414073,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:465363,error,error,465363,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"e:: autodoc_abbr_options_c.rst. .. index::; single: CC, coupled cluster; pair: CC; theory. .. _`sec:cc`:. CC: Coupled Cluster Theory; ==========================. .. codeauthor:: T. Daniel Crawford; .. sectionauthor:: T. Daniel Crawford. *Module:* :ref:`PSI Variables <apdx:ccenergy_psivar>`. *Module:* :ref:`Keywords <apdx:ccenergy>`, :source:`CCENERGY <psi4/src/psi4/cc/ccenergy>`. *Module:* :ref:`Keywords <apdx:cceom>`, :source:`CCEOM <psi4/src/psi4/cc/cceom>`. *Module:* :ref:`Keywords <apdx:ccresponse>`, :source:`CCRESPONSE <psi4/src/psi4/cc/ccresponse>`. *Module:* :ref:`Keywords <apdx:cctriples>`, :source:`CCTRIPLES <psi4/src/psi4/cc/cctriples>`. *Module:* :ref:`Keywords <apdx:ccdensity>`, :source:`CCDENSITY <psi4/src/psi4/cc/ccdensity>`. *Module:* :ref:`Keywords <apdx:cchbar>`, :source:`CCHBAR <psi4/src/psi4/cc/cchbar>`. *Module:* :ref:`Keywords <apdx:cclambda>`, :source:`CCLAMBDA <psi4/src/psi4/cc/cclambda>`. The coupled cluster approach is one of the most accurate and reliable quantum; chemical techniques for including the effects of electron correlation.; Instead of the linear expansion of the wavefunction used by configuration; interaction, coupled cluster uses an exponential expansion,. .. math::; :label: CCexpansion. | \Psi \rangle &= e^{\hat{T}} | \Phi_0 \rangle \\; &= \left( 1 + {\hat{T}} + \frac{1}{2} {\hat{T}}^2 + \frac{1}{3!}{\hat{T}}^3 + \cdots \right) | \Phi_0 \rangle,. where the cluster operator :math:`{\hat{T}}` is written as a sum of operators that; generate singly-excited, doubly-excited, *etc.*, determinants:. .. math:: {\hat{T}} = {\hat{T}_1} + {\hat{T}_2} + {\hat{T}_3} + \cdots + {\hat{T}_N},. with. .. math::. {\hat T}_1 | \Phi_0 \rangle &= \sum_{i}^{\rm occ} \sum_a^{\rm vir} t_i^a | \Phi_i^a \rangle \\; {\hat T}_2 | \Phi_0 \rangle &= \sum_{i<j}^{\rm occ} \sum_{a<b}^{\rm vir} t_{ij}^{ab} | \Phi_{ij}^{ab} \rangle,. *etc.* The popular coupled cluster singles and doubles (CCSD) model; [Purvis:1982]_ truncates the expansion at :math:`{\hat{T}} = {\",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:2016,reliab,reliable,2016,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['reliab'],['reliable']
Availability,"e; deployed together in this module, yielding ""F/I-SAPT."" All F/I-SAPT computations; in |PSIfour| use density-fitted SAPT0 as the underlying SAPT methodology. Interested; users should consult the manual page for Ed Hohenstein's :ref:`SAPT0 <sec:sapt>` code; and the SAPT literature to understand the specifics of SAPT0 before beginning; with F/I-SAPT0. F-SAPT is detailed over two papers: [Parrish:2014:044115]_ on our much-earlier; ""atomic"" SAPT (A-SAPT) and [Parrish:2014:4417]_ on the finished ""functional; group"" SAPT (F-SAPT). An additional paper describes how to use F-SAPT to analyze; differences under functional group substitutions [Parrish:2014:17386]_. I-SAPT; is explained in [Parrish:2015:051103]_. There is also a reasonably-detailed; review of the aims of A/F/I-SAPT and the existing state-of-the-art in the field; in the introduction chapter on partitioned SAPT methods in `Parrish's thesis; <https://smartech.gatech.edu/handle/1853/53850>`_. .. A video tutorial series for the use of the FISAPT module is available `here; .. <https://www.youtube.com/playlist?list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Specific videos in the series include:; ..; .. - `F-SAPT#1; .. <https://www.youtube.com/watch?v=J22J0wh4mVo&index=1&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of F-SAPT to analyze the; .. distribution of the intermolecular interaction energy components between the; .. various hydroxyl and phenyl moieties of the phenol dimer.; .. - `F-SAPT#2; .. <https://www.youtube.com/watch?v=fqlzXsayec0&index=2&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the order-1 F-SAPT analysis with PyMol and perform a; .. ""difference F-SAPT"" analysis; .. - `I-SAPT#1; .. <https://www.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Describes the use of I-SAPT to analyze the interaction between the two phenol; .. groups in a 2,4-pentanediol molecule.; .. - `I-SAPT#2; .. <https://www.youtube.com/watch?v=hDbo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:2995,avail,available,2995,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['avail'],['available']
Availability,"ease Notes.; - e.g., ``1.8.x`` is used for Documentation and Source.; - e.g., ``v182`` (edition string) is used for Image and Installers.; - Use the ``id`` value in the shortcode call at the bottom near ``ghRN``. * Add a new release page to the ``psi4_release_fireworks.key`` Keynote presentation. Run the slide; transition and screenshot the fireworks. Open the PNG file in Preview and save as JPEG while; downsampling to ~400kB. Place the file at e.g., ``static/images/portfolio/fireworks_slide_v182.jpg``.; Add it to the git index.; * Edit ``data/portfolio.yml`` to add a new block for the release (order matters).; * Include these changes in a PR. Check the generated preview if needed. Merge the PR yourself or ask; for it to be merged. Finalize release; ----------------. * Make new PR with; * edits to main ``README.md`` badges, python versions, etc.; * Tweet about release. .. Reset psi4meta for nightly operation (pre-Spring 2023); .. ------------------------------------------------------; ..; .. On both Linux and Mac:; ..; .. * After (post)release (not prerelease), in ``conda_build_config.yaml``, edit ``ltrtver`` to a new ""release.dev"" label; .. * After postrelease, unpin any dependencies in cbcy that needed older either ver or bld (e.g., v2rdm_casscf_bld); .. * Edit ``psi4ver`` back to ``''`` in cbcy; .. * Edit ``source/git_tag`` back to ``master`` for psi4-multiout, psi4-docs; .. * Edit build string back to ``0`` if psi4-multiout needed multiple passes; .. * Edit kitandkapoodle.py back to ``***`` stack; .. * Check in all release, construct, recipe changes on Linux and Mac. Synchronize both to GitHub psi4meta; .. * Copy meta.yaml and build.sh files to vMmp-prefixed files for the record.; .. * Edit crontab back to 2am ""norm"". Comment out ""anom"". Misc.; -----. * Consider rebuilding the |PSIfour| binder image.; * If you want to do trial conda builds from a maintenance branch w/o pushing the tag, requires; ``source/git_tag: 1.3.x`` and fake ``package/version: v1.3.1rc1``. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:38860,mainten,maintenance,38860,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,"eatured electronic structure programs are large and complex. However,; the |PSIfour| ecosystem provides a path for easier and more rapid development; of new features. The earliest versions of |PSIfour| were written by merging; individual executables that performed specific tasks into a unified C++; executable. By linking this C++ executable against the Python interpreter, the; individual modules could be called in any sequence, enabling a very diverse; range of tasks to be accomplished within a given input. Although Python-driven; model allowed for great flexibility from a user's perspective, programming was; still relatively difficult because it required modifications to be made in C++; code. Since those early days, the code has undergone some important structural; changes that have greatly simplified the development workflow. These changes; were motivated by the realization that only a few bottlenecks exist in a typical; calculation; by focusing on optimized C++ implementations of these bottlenecks; and making these C++ functions available in Python, most of the code to implement; the overall calculation can be written in simpler Python code. Python is far; better suited to management tasks such as directory navigation and retrieval,; making it a natural choice for overall calculation layout than C++. With the; emergence of `NumPy <https://numpy.org/>`_ as a standard tool for executing almost any; mathematical technique efficiently in Python, the transitioning of code from; C++ to Python has facilitated a much simpler work flow for prototyping and; developing methods: this is detailed in the next section. .. _`sec:prog_psi4numpy`:. Rapid initial development using Psi4NumPy; -----------------------------------------. The `Psi4NumPy <https://github.com/psi4/psi4numpy>`_ project [Smith:2018:3504]_ is the recommended; mechanism for developing and prototyping new methods in Psi4. Because; `NumPy <https://numpy.org/>`_ provides such a rich set of features for efficient l",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:2343,avail,available,2343,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,1,['avail'],['available']
Availability,"ecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilation using driver from source; ------------------------------------------------------------------------. When developing python driver code, it can be annoying to keep `make`\; ing to test the code. |PSIfour| can be run ""inplace"" through the; following procedure. To be clear, this is running compiled C++ from the; build directory and python from the source directory. This is an expert; option for development, and not all functionality will be available. ::. >>> cd {objdir}; >>> ln -s {top-level-psi4-dir}/{objdir}/stage/lib/psi4/core.cpython-{ext_will_vary}.so ../psi4/core.cpython-{ext_will_vary}.so; >>> python ../psi4/run_psi4.py --inplace input.dat. .. _`faq:psidatadir`:. Why not to set :envvar:`PSIDATADIR`; -----------------------------------. :envvar:`PSIDATADIR` is an environment variable containing the location of the; text resource parts of the |PSIfour| codebase (*e.g.*, basis sets,; databases, EFP fragments). It is for developer use only. In |PSIfour| 1.1; and beyond, the program *always* knows where its resources are, and the; only reason to set this variable is to point to another location.; Previously in |PSIfour| 1.0 and previous, only installed executables knew; the location, so it always needed to be explicitly set when run from the; compilation directory. At runtime. .. code-block:: bash. >>> psi4 -p {top-level-psi4-dir}/psi4/share/psi4. Or in the shell. .. code-block:: tcsh.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:33834,avail,available,33834,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"ed by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. Release Procedures; ==================. .. _`faq:annualprocedure`:. Annual; ------. * `On January first`_; * `Update copyright year`_; * `Update counter scripts`_. .. _`faq:prereleaseprocedure`:. Pre-Release (e.g., ``v1.3rc1``); -------------------------------. * `Update samples`_; * `Collect new authors`_; * `Anticipate next release`_; * `Build Conda ecosystem stack`_; * `Tag (pre)release`_; * `Build extra Conda packages for Psi4 channel`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_. .. _`faq:releaseprocedure`:. Release (e.g., ``v1.3``); ------------------------. * `Update samples`_ (if no prerelease); * `Collect new authors`_ (if no prerelease); * `Anticipate next release`_ (if no prerelease); * `Build Conda ecosystem stack`_ (if no prerelease); * `Run long tests`_; * `Do final pass before release tag`_; * `Tag (pre)release`_; * `Initialize release branch`_; * `Build extra Conda packages for Psi4 channel`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub release`_; * `Publish psicode.org release`_; * `Finalize release`_. .. _`faq:postreleaseprocedure`:. Post-Release (e.g., ``v1.8.2``); -------------------------------. * `Assemble postrelease changes`_; * `Tweak Conda for postrelease`_; * `Tag postrelease`_; * `Build Psi4conda set`_; * `Build extra Conda packa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:1545,down,download,1545,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"ed number of ""smoke"" tests is; generally sufficient to verify an installation. * From the executable. .. code-block:: bash. # smoke tests only in serial; psi4 --test; # smoke tests only in parallel; psi4 --test -n`getconf _NPROCESSORS_ONLN`; # most tests; psi4 --test full. * From the library (|PSIfour| must be detectable as a Python; module. See setup at :ref:`faq:psi4psiapipath`; if needed.). .. code-block:: bash. # smoke tests only; python -c ""import psi4; psi4.test('smoke')""; # most tests; python -c ""import psi4; psi4.test()"". * From pytest directly. If package ``pytest-xdist`` is installed, can run in parallel. .. code-block:: bash. # smoke tests only; pytest {prefix}/lib/{PYMOD_INSTALL_LIBDIR}/psi4/tests/ -m smoke -n auto; # all tests; pytest {prefix}/lib/{PYMOD_INSTALL_LIBDIR}/psi4/tests/ -n auto. Output looks something like the below. ``PASSED`` in green is good; (means test ran correctly); ``SKIPPED`` in yellow is good (means that; not all software required for test is available); ``XPASS`` or ``XFAIL``; in yellow is fine (unexpected pass or expected fail happens when we; include tests that need particular conditions (*e.g.*, multiple cores); to run correctly); ``FAILED`` in red is bad. ::. test_addons.py::test_gdma PASSED; test_addons.py::test_mrcc SKIPPED; test_addons.py::test_chemps2 PASSED; test_addons.py::test_dftd3 PASSED; test_addons.py::test_libefp PASSED; test_addons.py::test_pcmsolver PASSED; test_addons.py::test_erd PASSED; test_addons.py::test_simint PASSED; test_addons.py::test_json PASSED; test_addons.py::test_cfour SKIPPED; test_addons.py::test_v2rdm_casscf PASSED; test_addons.py::test_grimme_3c PASSED; test_addons.py::test_dkh PASSED; test_psi4.py::test_psi4_basic PASSED; test_psi4.py::test_psi4_cc PASSED; test_psi4.py::test_psi4_cas PASSED; test_psi4.py::test_psi4_dfmp2 PASSED; test_psi4.py::test_psi4_sapt PASSED; test_psi4.py::test_psi4_scfproperty PASSED. .. _`faq:writepsi4`:. How to refer to Psi4; --------------------. Ways to refer to |P",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:64710,avail,available,64710,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"ed.; Note that this is an un-counterpoise-corrected example, and the wrapper is smart enough; to compute only once the monomer whose energy will be subtracted from each of the three dimers. ::. RGC1-HeHe-0.85-dimer; RGC1-He-mono-unCP; RGC1-HeHe-1.0-dimer; RGC1-HeHe-1.5-dimer. At the end of the job, the Requested Energy table is printed that gives the total; energies for the requested model chemistry for each reagent and each reaction, as; well as the stoichiometric weights by which the reagent energies are transformed; into the reaction energy. In this case, the dimer is +1 and the monomer is -2,; indicating the interaction energy is computed from dimer less first monomer; less second (identical) monomer. Error statistics are computed with respect to the reference; energies stored in the database. One of these, the mean absolute deviation, is ; returned by the wrapper as an ordinary Python variable. (For databases; without a stored reference energy, *e.g.*, BASIC, large and meaningless numbers are; printed for error.) The other two tables tabulate the PSI variables requested; through keyword ``tabulate``, in this case the total SCF energy and the number; of atoms in each reagent. ::. ==> Mp2 Total Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Value Reagent 1 Reagent 2; Value Wt Value Wt; ------------------------------------------------------------------------------------------------------; RGC1-HeHe-0.85 0.00004802 -5.69430495 1 -2.84717649 -2; RGC1-HeHe-1.0 -0.00000064 -5.69435362 1 -2.84717649 -2; ------------------------------------------------------------------------------------------------------. ==> Requested Energy <==. ------------------------------------------------------------------------------------------------------; Reaction Reaction Energy Reaction Error Reagent 1 Reagent 2; Ref Calc [kcal/mol] [kJ/mol] [Eh] Wt [Eh] Wt; -----------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst:2848,error,error,2848,doc/sphinxman/source/db.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/db.rst,1,['error'],['error']
Availability,"efaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:137001,error,error,137001,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"eference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:391804,error,error,391804,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"eference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327890,error,error,327890,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"eference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fno",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:477318,error,error,477318,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"eference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:514134,error,error,514134,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"eference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:398847,error,error,398847,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"elds.io/badge/home-psi4fockci-5077AB.svg; :target: https://github.com/shannonhouck/psi4fockci. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://shannonhouck.github.io/psi4fockci/build/index.html. This plugin is an implementation of the RAS-nSF-IP/EA approach detailed ; in the paper by Houck et. al. [Houck:2019:2278]_. ; This approach handles systems with both spin and spatial degeneracies ; by combining the spin-flip (SF) [Krylov:2001:522]_; and ionization potential/electron affinity (IP/EA) [Nooijen:1995:3629]_ ; approaches. . The Psi4FockCI plugin allows one to perform spin-flip (SF), ionization ; potential (IP), and electron affinity (EA) calculations, as well as ; combined RAS-SF-IP/EA calculations, through the DETCI (:ref:`sec:ci`) module. Installation; ~~~~~~~~~~~~. * Download the plugin from the GitHub repository:. .. code-block:: bash. >>> git clone https://github.com/shannonhouck/psi4fockci.git. * Once downloaded, the plugin can be installed as follows:. .. code-block:: bash. >>> cd {top-level-psi4fockci-directory}; >>> python -m pip install . Sample Input; ~~~~~~~~~~~~. To run a CAS-nSF-IP/EA calculation, start with a molecule with the ; correct charge and multiplicity for the reference state (i.e. some ; state well-represented by a single reference). Then, run an energy ; calculation, passing in the charge and multiplicity of the ; desired state; the number of spin-flips and IP/EA will be automatically ; determined based on this input. If additional excitations outside of the ; RAS II space are desired, one can set the level of external ; excitations using the ``conf_space`` keyword. A sample input file for a RAS(h)-2SF-IP calculation is shown below:. .. code-block:: python. molecule {; 0 7; N 0.0 0.0 0.0; N 0.0 0.0 1.3; symmetry c1; }. set {; basis cc-pVDZ; }. energy('psi4fockci', new_charge=1, new_multiplicity=1, conf_space=""h""); ; Note that for calculations involving IP/EA, inclusion of hole (for IP)",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_psi4fockci.rst:2300,down,downloaded,2300,doc/sphinxman/source/plugin_psi4fockci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_psi4fockci.rst,1,['down'],['downloaded']
Availability,"ell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs]_,; and a systematic study of the accuracy of these truncations (with and ; without an improved CCD treatment of dispersion) using different basis sets; is reported in [Parker:2014:094106]_. The closed-shell SAPT module relies entirely on the density-fitting approximation; of the two-electron integrals. The factorization of the SAPT energy; expressions, as implemented in |PSIfour|, assumes the use of density-fitted; two-electron integrals, therefore, the closed-shell SAPT module cannot be run with; exact integrals. In practice, we have found that the density-fitting; approximation introduces negligible errors into the SAPT energy ; (often less than 0.01 kcal/mol for small dimers) and greatly; improves efficiency. . The latest addition to the SAPT code is the SAPT0 method for open-shell ; monomers [Gonthier:2016:134106]_. This code is available for both exact and density fitted integrals, ; except for the dispersion terms which implementation relies on a density fitting; factorization. Both ``UHF`` and ``ROHF`` |scf__reference| can be used, but coupled; induction computations are currently not supported with ``ROHF``. This means that orbital; relaxation is not included for ``ROHF`` and the uncoupled induction term is computed instead.; If both monomers are open-shell, their coupling is assumed to be high spin, i.e.; two doublets would interact to form a triplet. The *S*\ :superscript:`2` approximation and scaling; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. All exchange terms in SAPT arise from the antisymmetrization; of the wavefunctions of monomers A and B. Taking into account exchange of all possible; electron pairs between the two monomers yields to complicated formulae.; For this reason, exchange terms are often evaluated in the :math:`S^{2}`; approximation, that can be interpreted as the exchange of a single electron ; pair between monomers. The :math:`S^{2}` approximat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:10669,avail,available,10669,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"en-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481411,error,error,481411,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:328118,error,error,328118,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:212135,error,error,212135,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"energies instead of gradients::. optimize('scf', dertype='energy'). * Optimize while limiting the initial step size to 0.1 au::. set intrafrag_step_limit 0.1; optimize('scf'). * Optimize while always limiting the step size to 0.1 au:. .. code-block:: none. set {; intrafrag_step_limit 0.1; intrafrag_step_limit_min 0.1; intrafrag_step_limit_max 0.1; }. optimize('scf'). * Optimize while calculating the Hessian at every step:. .. code-block:: none. set full_hess_every 1; optimize('scf'). .. code-block:: none; ; import optking; . Hessian; ^^^^^^^. If Cartesian second derivatives are available, optking can read them; and transform them into internal coordinates to make an initial Hessian in; internal coordinates. Otherwise, several empirical Hessians are available,; including those of Schlegel [Schlegel:1984:333]_ and Fischer and Almlof; [Fischer:1992:9770]_.; Either of these or a simple diagonal Hessian may be selected using the ; |optking__intrafrag_hess| keyword. All the common Hessian update schemes are available. For formulas, see; Schlegel [Schlegel:1987:AIMQC]_ and Bofill [Bofill:1994:1]_. The Hessian may be computed during an optimization using the ; |optking__full_hess_every| keyword. .. index:: ; pair: geometry optimization; transition state; pair: geometry optimization; IRC; single: geometry optimization; constrained. Transition States and Reaction Paths; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. * Calculate a starting Hessian and optimize the ""transition state"" of; linear water (note that without a reasonable starting geometry and; Hessian, such a straightforward search often fails)::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 160.0; }. set {; basis dz; full_hess_every 0; opt_type ts; }. optimize('scf'). * At a transition state (planar HOOH), compute the second derivative, and; then follow the intrinsic reaction path to the minimum::. molecule hooh {; symmetry c1; H; O 1 0.946347; O 2 1.397780 1 107.243777; H 3 0.946347 2 107.243777 1 0.0; }. set {; basis dzp; opt_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:5260,avail,available,5260,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['avail'],['available']
Availability,"ensity_tolerance|, and; |scf__cosx_basis_tolerance| keywords, respectively. |scf__cosx_ints_tolerance|; is the most consequential of the three thresholds in both cost and accuracy.; This keyword determines screening of negligible one-electron integrals.; |scf__cosx_density_tolerance| controls the threshold for significant; shell pairs in the density matrix. Lastly, |scf__cosx_basis_tolerance| is; a cutoff for the value of basis functions at grid points. This keyword is; used to determine the radial extent of the each basis shell, and it is the; COSX analogue to |scf__dft_basis_tolerance|. The |scf__incfock| keyword (defaults to ``false``) increases performance; by constructing the Fock matrix from differences in the density matrix, which; are more amenable to screening. This option is disabled by default because of; potential SCF convergence issues, particularly when using diffuse basis functions.; The |scf__cosx_overlap_fitting| keyword (defaults to ``true``) reduces numerical; integration errors using the method described in [Izsak:2011:144105]_ and is; always recommended. .. _`sec:scflink`:. Linear Exchange; ~~~~~~~~~~~~~~~. Large SCF calculations can benefit from specialized screening procedures that further reduce the scaling of the ERI contribution to the Fock matrix.; LinK, the linear-scaling exchange method described in [Ochsenfeld:1998:1663]_, is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:41465,error,errors,41465,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['errors']
Availability,"ent using Psi4NumPy; -----------------------------------------. The `Psi4NumPy <https://github.com/psi4/psi4numpy>`_ project [Smith:2018:3504]_ is the recommended; mechanism for developing and prototyping new methods in Psi4. Because; `NumPy <https://numpy.org/>`_ provides such a rich set of features for efficient linear; algebra, Fourier transforms, and general tensor manipulations, a massive number; of methods can be easily implemented very easily using that library. To; facilitate this workflow, |PSIfour| exports key quantities such as integrals,; densities and molecular orbitals in NumPy format. From this point, the; programmer can simply call the appropriate |PSIfour| functions to compute the; desired input quantities, retrieve them in NumPy format, and then write the; remaining code using standard Python and/or NumPy syntax. This approach does; not require any recompilation of code, resulting in a particularly facile; development workflow. Detailed examples and tutorials are available in the; `Psi4NumPy <https://github.com/psi4/psi4numpy>`_ repository. .. _`sec:prog_plugins`:. Avoiding the need to modify Psi4, using plugins; -----------------------------------------------. In the early days when |PSIfour| was still primarily a C++ code, development; was very cumbersome due to a lengthy build process. To expedite development, a; plugin system was developed. This plugin machinery allows developers to access; the classes defined in the innards of |PSIfour|, with only the small plugin; code requiring recompilation during development. The resulting lightweight; code can be maintained and distributed independently of |PSIfour|, making this; a good strategy for development, especially in cases where tighter integration; of the new code with existing |PSIfour| machinery is required than that; afforded by the Numpy based strategy outlined in the :ref:`sec:prog_psi4numpy`; section. For details about how to write these plugins, see the; :ref:`sec:plugins` section. .. _`s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:3975,avail,available,3975,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,1,['avail'],['available']
Availability,"ent, and all corrections are; interfaced exactly alike.; The -D3 interface can use classic or simple-dftd3 programs interchangeably and will prefer the latter.; Starting in v1.9, the classic program is no longer supported or tested, though it isn't deliberately disabled. Despite different defaults in these programs when run independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+------------------------------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13167,redundant,redundant,13167,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['redundant'],['redundant']
Availability,"ential, the ECP definition should be simply placed alongside; the orbital basis set definition, *c.f.* :ref:`sec:basissets-ecps`. All; information related to the definition and number of core electrons will; automatically be detected and no further input is required to use the; ECP-containing basis set. See :srcsample:`scf-ecp` and :srcsample:`dfmp2-ecp`; for examples of computations with ECP-containing basis sets. .. warning:: Prior to May 2022, v1.6, Psi4 used a built-in ECP code. Analytic derivatives of ECPs were not available. The HF and DFT derivatives were implemented in a semi-numerical scheme, where numerical ECP gradients were added to analytic SCF gradients. For post-SCF methods, the entire gradient computation needed to be run as finite difference of energies. .. warning:: As of May 2022, v1.6, Psi4 uses the LibECPInt library, and analytic derivatives and Hessians of ECPs are available. Analytic derivatives of molecular systems including ECPs should be available whenever the method has analytic derivatives, but these have so far only been verified for HF and DFT. .. warning:: ECPs have not been tested with projected basis set guesses or with FI-SAPT calculations. If you require this functionality, please contact the developers on GitHub and/or the `forum <http://forum.psicode.org>`_. .. _`sec:scfqmmm`:. External potentials and QM/MM; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In addition to the implementation of :ref:`EFP <sec:libefp>` for accurate QM/MM; computations, |PSIfour| can perform more rudimentary QM/MM procedures via the; |scf__extern| keyword. The following snippet, extracted from the; :srcsample:`extern1` test case, demonstrates its use for a TIP3P external potential::. import numpy as np; external_potentials = [; [-0.834, np.array([1.649232019048,0.0,-2.356023604706]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-3.799961446760]) / psi_bohr2angstroms],; [ 0.417, np.array([0.544757019107,0.0,-0.912085762652]) / psi_bohr2angstroms]]. grad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:53326,avail,available,53326,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"ents for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'mod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:225063,error,error,225063,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"er and more stable just to solve with DGETRS); * DPOTRI: Inverse, given Cholesky decomposition by DPOTRF (Warning: it's faster and more stable just to solve with DPOTRS). .. _`faq:blasmatrix`:. How to use low-level BLAS/LAPACK with ``psi4.core.Matrix``; ----------------------------------------------------------. Jet's awesome new Matrix object has a lot of simple BLAS/LAPACK built in,; but you can just as easily use the ``double***`` array underneath if you are; careful (the outer index is the submatrix for each irrep). Here's an; example:. .. code-block:: cpp. // BLAS/LAPACK; #include ""psi4/libqt/qt.h""; // Matrix; #include ""psi4/libmints/matrix.h""; ; using namespace psi;; ...; int n = 100;; ; // Allocate A Matrix (new C1 convenience constructor);; shared_ptr<Matrix> A(new Matrix(""Still A, but way cooler"", n,n));; // Get the pointer to the 0 irrep (C1 for now, it errors if you ask for too high of an index); double** A_pointer = A->get_pointer(0);; ; // Call the LAPACK DPOTRF to get the Cholesky factor; // Note this works in column-major order; // The result fills like:; // * * * *; // * * *; // * *; // *; // instead of the expected:; // *; // * *; // * * *; // * * * *; //; int info = C_DPOTRF('L', n, A_pointer[0], n);; ; // Wow that's a lot easier; A->print();; ; // Don't free, it's shared_ptr!. .. _`faq:labas`:. How to name orbital bases (e.g., AO & SO); -----------------------------------------. Many different working bases (the internal linear algebraic basis, not the; name of the Gaussian basis) are used within |PSIfour|, each with a unique; and important purpose. It is critical to keep them all distinct to prevent; weird results from occurring. * ``AO`` (Atomic Orbitals): Cartesian Gaussians (6D, 10F, etc.),; ``(L + 1)(L + 2)/2`` functions per shell of angular momentum L. The; ordering of Cartesian exponents for a given L is given by the standard; ordering below (MATLAB code)::. ncart = (L + 1) * (L + 2) / 2;; exps = zeros(ncart,3);; index = 1;; for i = 0:L; for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:9253,error,errors,9253,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['error'],['errors']
Availability,"er branch) or https://psicode.org/psi4manual/1.4.0/index.html (last release). * **Tutorial** https://psicode.org/psi4manual/master/tutorial.html for Psithon (``psi4 job.in``), https://psicode.org/psi4manual/master/psiapi.html for PsiAPI (``python job.py``). * **Forum** http://forum.psicode.org. * **Communication & Support** https://psicode.org/psi4manual/master/introduction.html#technical-support. * **GitHub** https://github.com/psi4/psi4 (authoritative repository). * **Continuous Integration Status** [![Azure DevOps builds](https://img.shields.io/azure-devops/build/psi4/e80489d7-9619-4512-8e7b-255e355b3ab8/1/master.svg?logo=azure%20devops)](https://dev.azure.com/psi4/psi4/_build?definitionId=1) on Linux and Windows. * **Anaconda** https://anaconda.org/psi4 (binary available for Linux, Mac, Mac Silicon, Windows, and WSL Windows [![Binstar Badge](https://anaconda.org/psi4/psi4/badges/downloads.svg)](https://anaconda.org/psi4/psi4) ) [![Binstar Badge](https://anaconda.org/conda-forge/psi4/badges/downloads.svg)](https://anaconda.org/conda-forge/psi4) ) [instructions](https://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-download-site). * **Coverage** Python and C++ source code lines hit by running most of the test suite. [![codecov](https://img.shields.io/codecov/c/github/psi4/psi4.svg?logo=Codecov&logoColor=white)](https://codecov.io/gh/psi4/psi4). * **Interested Developers** https://psicode.org/developers.php (replacement page needed) (welcome to fork psi4/psi4 and follow [GitHub contribution procedure](https://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow)) [![PRs welcome](https://img.shields.io/badge/PRs-welcome-yellow.svg)](http://makeapullrequest.com). * **Sample Inputs** http://www.psicode.org/psi4manual/master/testsuite.html (also in [`samples/`](samples)). * **Download Tarball** https://github.com/psi4/psi4/releases . <!--* **Build Dashboard** https://testboard.org/cdash/index.php?pro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:5445,down,downloads,5445,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,1,['down'],['downloads']
Availability,"er': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332873,error,error,332873,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"er': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:150695,error,error,150695,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"erence': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:349284,error,error,349284,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"erence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:340752,error,error,340752,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"erence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:7206,error,error,7206,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"erence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:359391,error,error,359391,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"erence': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:90348,error,error,90348,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:304211,error,error,304211,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ers. Users should leave this variable unset or set; to ``False``. .. envvar:: OMP_NUM_THREADS. Number of threads to use by modules with OpenMP threading. .. deprecated: 1.1; See :ref:`sec:threading` for alternatives. .. envvar:: PATH. Path for interfaced executables. .. note:: While once configuring |PSIfour| through :envvar:`PSIPATH` was preferred; to modifying this environment variable, now `PATH` is preferred for; executables to accommodate QCEngine. To run K\ |a_acute|\ llay's MRCC program ; (see :ref:`MRCC <sec:mrcc>`), the ``dmrcc`` executable must be in :envvar:`PATH`.; Likewise to run Grimme's dftd3 program (see :ref:`dftd3 <sec:dftd3>`), the ; ``dftd3`` executable must be in :envvar:`PATH`. .. envvar:: PSI_SCRATCH. Directory where scratch files are written. Overrides settings in |psirc|.; It is very important to ensure that |PSIfour| is writing its scratch files ; to a disk drive physically attached to the computer running the computation. ; If it is not, it will significantly slow down the program and the network. . Modify :envvar:`PSI_SCRATCH` through normal Linux shell commands before invoking :command:`psi4`. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PSI_SCRATCH /scratch/user. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PSI_SCRATCH=/scratch/user. .. envvar:: PSIPATH. Path in which |PSIfour| looks for user extensions to the built-in; libraries. Specifically, directories containing ; :ref:`user basis sets <sec:basisUserDefined>`,; :ref:`EFP fragments <sec:findingEFPFragments>`,; :ref:`databases <sec:createDatabase>`, ; :ref:`plugins <sec:plugins>`, and ; interfaced executables (; ``dmrcc`` for :ref:`MRCC <sec:mrcc>` and ; ``dftd3`` for :ref:`DFTD3 <sec:dftd3>`; ) should be placed in this colon-separated list. |PSIfour| is designed so that user extensions that are findable through; :envvar:`PSIPATH` can be used in input files entirely like their; built-in c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:22329,down,down,22329,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['down'],['down']
Availability,"es in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486593,error,error,486593,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"es on a density fitting; factorization. Both ``UHF`` and ``ROHF`` |scf__reference| can be used, but coupled; induction computations are currently not supported with ``ROHF``. This means that orbital; relaxation is not included for ``ROHF`` and the uncoupled induction term is computed instead.; If both monomers are open-shell, their coupling is assumed to be high spin, i.e.; two doublets would interact to form a triplet. The *S*\ :superscript:`2` approximation and scaling; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. All exchange terms in SAPT arise from the antisymmetrization; of the wavefunctions of monomers A and B. Taking into account exchange of all possible; electron pairs between the two monomers yields to complicated formulae.; For this reason, exchange terms are often evaluated in the :math:`S^{2}`; approximation, that can be interpreted as the exchange of a single electron ; pair between monomers. The :math:`S^{2}` approximation is usually pretty good, but may ; break down for short intermolecular distance, particularly in high-order; terms. To compensate for these deviations, in 2014 Parker et al. [Parker:2014:094106]_ ; recommended to scale all :math:`S^{2}` approximated exchange terms by the ratio:. .. math:: p_{EX}(\alpha) = \left( \frac{E_{exch}^{(10)}}{E_{exch}^{(10)}(S^{2})} \right)^{\alpha}. and recommended using the ratio with exponent :math:`\alpha = 1`. To obtain SAPT energies with this scaling,; simply set the keyword ``exch_scale_alpha true``. Alternatively, another value for :math:`\alpha`; can be specified by setting |sapt__exch_scale_alpha| to a value. For example, ::. set exch_scale_alpha 1.0. will set :math:`\alpha = 1.0` and scale exchange energies with :math:`p_{EX}(1.0)`. However, as pointed out by Schaffer and Jansen [Schaffer:2013:2570]_; in the context of DFT-based SAPT, the ratios :math:`E_{exch}^{(1)}(S^{2})/E_{exch}^{(1)}`,; :math:`E_{\rm exch-ind}^{(2)}(S^2)/E_{\rm exch-ind}^{(2)}`, and ; :math:`E_{\rm exch-disp}^{(2)}(S^2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:11783,down,down,11783,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['down'],['down']
Availability,"ess, so the energy is unphysically low. However, the; first true iteration is quite close to the final DF energy, highlighting the; efficiency of the SAD guess. Pulay's DIIS procedure is then used to accelerate; SCF convergence, with the DF phase reaching convergence in eight true; iterations. When used together, SAD and DIIS are usually sufficient to converge; the SCF for all but the most difficult systems. Additional convergence; techniques are available for more difficult cases, and are detailed below. At; this point, the code switches on the requested Direct integrals technology, which; requires only four full iterations to reach convergence, starting from the DF; guess. This hybrid DF/Direct procedure can significantly accelerate SCF; computations requiring exact integrals. After the iterations are completed, a number of one-electron properties are; printed, and some bookkeeping is performed to set up possible correlated; computations. Additional one-electron properties are available by increasing the; |globals__print| option. Also printed are the occupied and virtual orbital energies,; which are useful in elucidating the stability and reactivity of the system. .. index::; pair: SCF; theory. .. _`sec:scftheory`:. Theory; ~~~~~~. The objective of Hartree--Fock (HF) Theory is to produce the optimized Molecular; Orbitals (MOs) :math:`\{\psi_i\}`,. .. math:: \psi_i(\vec x_1) = C_{\mu i} \phi_{\mu} (\vec x_1). Here, :math:`\{\phi_{\mu}\}` are the basis functions, which, in |PSIfour| are; contracted Cartesian Gaussian functions often referred to as Atomic Orbitals; (AOs). The matrix :math:`C_{\mu i}` contains the MO coefficients, which are the; constrained variational parameters in Hartree--Fock. The molecular orbitals are; used to build the simplest possible antisymmetric wavefunction, a single Slater; determinant,. .. math:: | \Psi_0 \rangle =; \frac{1}{\sqrt{N!}} \left | \begin{array}{cccc}; \psi_1 (\vec x_1) & \psi_2(\vec x_1) & \ldots & \psi_N (\vec x_1) \\; \psi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:4940,avail,available,4940,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"essing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For example, after; performing a density fitted MP2 computation, both the spin component; scaled energy and the unscaled MP2 energy are made available::. e_mp2 = get_variable('MP2 TOTAL ENERGY'); e_scs_mp2 = get_variable('SCS-MP2 TOTAL ENERGY'). Each module and the Python driver set PSI variables over the course of a; calculation. The values for all can be printed in the output file with; the input file command :py:func:`~psi4.core.print_variables`. Note that PSI variables; are cleared at the start of each :py:func:`~psi4.driver.energy`, etc. in an input; file by :py:func:`~psi4.core.clean_variables()`.; So if you run in a single input file a STO-3G FCI followed by a; aug-cc-pVQZ SCF followed by a :py:func:`~psi4.core.print_variables` command, the; last will include :psivar:`SCF TOTAL ENERGY` but not; :psivar:`FCI TOTAL ENERGY`.; The entire dictionary of PSI variables can be obtained through; :py:func:`~psi4.core.get_variables`. .. _`sec:returnvals`:. Return Values; =============. Most of the usual user computation functions (*i.e.*,; :py:func:`~psi4.driver.en",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:10032,avail,available,10032,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"est compiler to obtain is ``clang`` which is a drop-in replacement; for ``gcc`` and ``g++``. Just install `XCode; <https://apps.apple.com/us/app/xcode/id497799835>`_. Some old versions; of XCode can't handle some of the advanced C++ language features, but this; is a *software* not *hardware* limitation. Checks for version compliance; performed at build-time. Note that this ""AppleClang"" will not be compatible; with conda Mac packages using C++11, nor can it make use of OpenMP directives. Another route to obtaining ``clang`` compilers without the above limitations; is through conda. .. code-block:: bash. # Install Clang 4.0.1 into a non-primary conda environment; >>> conda create -n clang401 clangxx_osx-64 clang_osx-64 llvm-openmp intel-openmp. # To Build, activate environment (prepends PATH and defines environment variables CLANG, CLANGXX, HOST, etc):; >>> conda activate clang401; >>> echo ${CLANGXX}; /path/to/miniconda/envs/clang401/bin/x86_64-apple-darwin13.4.0-clang++; >>> echo ${HOST}; x86_64-apple-darwin13.4.0. # build with Clang; >>> cmake -S. -Bbuild \; -DCMAKE_C_COMPILER=${CLANG} \; -DCMAKE_CXX_COMPILER=${CLANGXX} \; -DCMAKE_CXX_FLAGS=""-stdlib=libc++"" \; -DOpenMP_CXX_FLAG=""-fopenmp=libiomp5"". # build with Intel; >>> cmake -S. -Bbuild \; -DCMAKE_C_COMPILER=icc \; -DCMAKE_CXX_COMPILER=icpc \; -DCMAKE_C_FLAGS=""-clang-name=${CLANG}"" \; -DCMAKE_CXX_FLAGS=""-clang-name=${CLANG} -clangxx-name=${CLANGXX} -stdlib=libc++ -I${CONDA_PREFIX}/include/c++/v1"". # Configure and build. .. _`faq:modgcc`:. How to satisfy the GCC >= 4.9 requirement on Linux without updating the OS; --------------------------------------------------------------------------. .. code-block:: bash. # See if GCC too old (in this case, yes); >>> gcc --version; gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-4). Even if you're not using GCC as a compiler, your Intel compiler seeks; `gcc` to generate code compatible with your current GCC version. If your; GCC is too old (like above), you can update your system GCC",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:40181,echo,echo,40181,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['echo'],['echo']
Availability,"e|: The integral screening tolerance used for sparsity-prep in the LinK algorithm. Defaults to the |scf__ints_tolerance| option. .. index::; single: SOSCF. .. _`sec:soscf`:. Second-order Convergence; ~~~~~~~~~~~~~~~~~~~~~~~~. Second-order convergence takes into account both the gradient and Hessian to; take a full Newton step with respect to the orbital parameters. This results in; quadratic convergence with respect to density for SCF methods. For cases where; normal acceleration methods either fail or take many iterations to converge,; second-order can reduce the total time to solution. Solving second-order (SO) methods exactly would require an inversion of the; orbital Hessian (an expensive :math:`\mathbb{N}^6` operation); however, these; equations are normally solved iteratively where each iteration costs the same; as a normal Fock build (:math:`\mathbb{N}^4`). The overall SOSCF operation is; thus broken down into micro- and macroiterations where the microiterations; refer to solving the SOSCF equations and macroiterations are the construction; of a new Fock matrix based on the orbitals from a SOSCF step. SOSCF requires that all elements of the gradient to be less than one before the; method is valid. To this end, pre-SOSCF SCF iterations use normal; gradient-based extrapolation procedures (*e.g.*, DIIS) until the gradient; conditions are met. Note that while the total number of macroiterations will be; less for SOSCF than gradient-based convergence acceleration, the cost of solving; the microiterations typically results in the overall cost being greater for; SOSCF than for gradient-based methods. Therefore, SOSCF should only be used if; it is difficult to locate a stable minimum. SOSCF is available for all HF and DFT references with the exception of meta-; GGA functionals. To enable, set the option |scf__soscf| to ``true``.; Additional options to modify the number of microiterations taken are as; follows:. |scf__soscf_start_convergence|: when to start SOSCF based",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:43728,down,down,43728,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['down'],['down']
Availability,"f I-SAPT to analyze the interaction between the two phenol; .. groups in a 2,4-pentanediol molecule.; .. - `I-SAPT#2; .. <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Discusses how to plot the density fields and ESPs of the various moieties of; .. the I-SAPT embedding scheme with PyMol; .. - `F/I-SAPT Options; .. <https://www.youtube.com/watch?v=KFkPKSUZVfI&index=5&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_.; .. Details all of the more-advanced options in the F/I-SAPT code (rarely needed). The scripts discussed below are located in :source:`psi4/share/psi4/fsapt`. F-SAPT: A Representative Example; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Below, we show an example of using F-SAPT0/jun-cc-pVDZ to analyze the; distribution of the intermolecular interaction energy components between the; various hydroxyl and phenyl moieties of the phenol dimer. This example is; explicitly included in :srcsample:`fsapt1`. A video; lecture explaining this example is available `F-SAPT#1; <https://www.youtube.com/watch?v=J22J0wh4mVo&index=1&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_,; while an additional video describing how to plot the order-1 F-SAPT analysis; with PyMol and perform a ""difference F-SAPT""; analysis is available `F-SAPT#2; <https://www.youtube.com/watch?v=fqlzXsayec0&index=2&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_::. memory 1 GB; ; molecule mol {; 0 1; O -1.3885044 1.9298523 -0.4431206; H -0.5238121 1.9646519 -0.0064609; C -2.0071056 0.7638459 -0.1083509; C -1.4630807 -0.1519120 0.7949930; C -2.1475789 -1.3295094 1.0883677; C -3.3743208 -1.6031427 0.4895864; C -3.9143727 -0.6838545 -0.4091028; C -3.2370496 0.4929609 -0.7096126; H -0.5106510 0.0566569 1.2642563; H -1.7151135 -2.0321452 1.7878417; H -3.9024664 -2.5173865 0.7197947; H -4.8670730 -0.8822939 -0.8811319; H -3.6431662 1.2134345 -1.4057590; --; 0 1; O 1.3531168 1.9382724 0.4723133; H 1.7842846 2.3487495 1.2297110; C 2.0369747 0.7865043 0.1495491; C 1.5904026 0.069686",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:4822,avail,available,4822,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['avail'],['available']
Availability,"f', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:409598,error,error,409598,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"f', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4-occ', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6760,error,error,6760,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"f', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'n",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:23886,error,error,23886,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"f', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:113952,error,error,113952,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"f:`Dunning <table:basisDunningOrbital>`, ; :ref:`Dunning (Douglas-Kroll) <table:basisDunningDK>`, ; :ref:`Dunning (F12) <table:basisDunningF12>`, ; :ref:`Karlsruhe <table:basisKarlsruhe>`,; :ref:`Jensen <table:basisJensen>`,; :ref:`Petersson <table:basisPetersson>`,; and :ref:`Other <table:basisOther>` summarize the orbital basis sets available in; |PSIfour|. These tables are arranged so that columns indicate degree of; augmentation by diffuse functions (generally necessary for anions, excited; states, and noncovalent interactions) and DTQ56 indicate the :math:`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fitting :math:`(oo|`\ -type products,; such as encountered in SCF theory and the electrostatics/exchange terms of SAPT.; RI sets are appropriate for fitting :math:`(ov|`\ -type products, such as encountered in; MP2 and most SAPT terms. Citations for basis sets can be found in their; definition files at :source:`psi4/share/psi4/basis` in the source. For basis set availability by; element and the default value for keyword |globals__puream|, consult; Appendix :ref:`apdx:basisElement`. |; |. .. _`table:basisPopleOrbital`:. .. table:: Summary of Pople-style orbital basis sets available in |PSIfour| [#f1]_. +-----------------+--------------+------------------+---------------+-------------------+----------------+; | no diffuse | heavy-augmented | augmented |; +-----------------+--------------+------------------+---------------+-------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:2281,avail,available,2281,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"f__basis_guess| = SMALL_BASIS to the options list. We recommend the; 3-21G or pcseg-0 basis for the small basis due to its efficient mix of flexibility and; compactness. An example of performing an RHF solution of water by SAD guessing; in a 3-21G basis and then casting up to cc-pVTZ is shown below::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pvtz; basis_guess 3-21G; guess sad; }. energy('scf'). .. _`sec:scfrestart`:. Restarting the SCF; ~~~~~~~~~~~~~~~~~~. Reading orbital data from a previous calculations is done via the ``restart_file`` option,; where the actual file is a serialized ``wfn`` object (see :ref:`saving the wfn <sec:save_wfn>`); By default, the orbital data file of the converged SCF(``psi.PID.name.180.npy``) is deleted; after |PSIfour| exits or the ``clean()`` function is called. The orbital guess is automatically; set to ``READ`` when ``restart_file`` is given a ``wfn`` file.; To write the orbitals after every iteration and keep the orbitals from the last iteration, the ``write_orbitals`` options is available: ::. energy('scf', write_orbitals='my_mos'),. which writes a ``Wavefunction`` object converted (serialized) to a numpy file called ``my_mos.npy``.; The restart can then be done as follows: ::. energy('scf', restart_file='my_mos'). Specifying the ``.npy`` suffix when writing and reading restart files is optional. Alternatively, the restart can also be done from any previously saved ``wfn`` object. ::. energy, scf_wfn = energy('scf',return_wfn=True); scf_wfn.to_file('my_wfn'); energy('scf', restart_file='my_wfn'). For advanced users manipulating or writing custom wavefunction files, note; that |PSIfour| expects the numpy file on disk to have the ``.npy`` extension, not, e.g., `.npz`. .. index:: DIIS, MOM, damping. .. _`sec:scfconv`:. Convergence Stabilization; ~~~~~~~~~~~~~~~~~~~~~~~~~. A summary of Psi's supported convergence stabilization techniques is presented below:. DIIS [On by Default]; DIIS uses previous iterates o",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:23175,avail,available,23175,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"f_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for lccd by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:224251,error,error,224251,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"f_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'om",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:435155,error,error,435155,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"fault is false. \item[OPDM\_WRITE = boolean]\mbox{}\\; If {\tt true}, write the one-particle density matrix to disk. \item[OPDM\_PRINT = boolean]\mbox{}\\; If {\tt true}, print the one-particle density matrix to the output file. Using the MP2-R12 method; ------------------------. Although this manual is not a how-to on running; quantum chemistry applications, the MP2-R12 method is; a rather non-standard tool, hence a few comments on its; use are appropriate. * The version of the MP2-R12 method implemented in |PSIfour|; is a so-called single-basis MP2-R12 method; in standard approximation A. This means that a basis set; rather complete in Hartree--Fock (or one-particle) sense; is absolutely mandatory for meaningful computations with the MP2-R12; method. The user is strongly urged to read literature on; linear R12 methods before using |PSIfour| to compute MP2-R12; energies. * More robust, two-basis versions; of the MP2-R12 method, also known as the auxiliary basis; MP2-R12 method, have been implemented; in a publicly available Massively Parallel Quantum Chemistry (MPQC); package (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}).; The two-basis version of the MP2-R12 method is a theoretically more; sound approach, and thus should be preferred to the single-basis method.; In some situations, however, it may make sense to use; the single-basis method. Larger Calculations; -------------------. Here are a few recommendations for carrying out extended integral-direct MP2 and; MP2-R12 calculations with |PSIfour|: . * While the integral-direct MP2 algorithm doesn't need any; significant disk storage,; the integral-direct algorithm for the MP2-R12 energy; stores the transformed integrals to disk, hence very large; computations will require a lot of disk space. In general; the storage requirement is :math:`16 o^2N^2` bytes, where :math:`o`; is the number of occupied orbitals, and :math:`N` is the size of the basis. * If there is not enough memory to perform the computation i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:5520,robust,robust,5520,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,2,"['avail', 'robust']","['available', 'robust']"
Availability,"faultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:258069,error,error,258069,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"faultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:261053,error,error,261053,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12080,error,error,12080,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17338,error,error,17338,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326085,error,error,326085,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93482,error,error,93482,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'mo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:473426,error,error,473426,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'hessian', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'hessian', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'hessia",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:511185,error,error,511185,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:443094,error,error,443094,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326988,error,error,326988,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:501690,error,error,501690,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:450137,error,error,450137,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"find_package(Doxygen QUIET); if(NOT TARGET Doxygen::doxygen); message(STATUS ""No Doxygen, no docs.""); else(); message(STATUS ""Documentation targets available: doxyman (html)""). # Configuration of the Doxygen configuration file; set(HAVE_QHELP ""NO""); set(QHELP_GENERATOR """"); set(HAVE_DOT ""NO""); set(DOT_PATH """"); configure_file(doxygen.cfg.in doxygen.cfg @ONLY). add_custom_target(doxyman; VERBATIM; COMMAND Doxygen::doxygen ${CMAKE_CURRENT_BINARY_DIR}/doxygen.cfg; COMMENT ""Build Doxygen html documentation ...""); endif(). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/doxygen/CMakeLists.txt:148,avail,available,148,doc/doxygen/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/doxygen/CMakeLists.txt,1,['avail'],['available']
Availability,"form approximate; CASSCF computations in which one uses RAS restrictions on the CI excitations,; rather than doing a full CI in the active space. This is called a ; RASSCF. CASSCF and RASSCF computations are types of multi-configurational; self-consistent-field procedures, and are described in :ref:`sec:mcscf`. As mentioned above, the DETCI module is designed for challenging; chemical systems for which simple CISD is not suitable. Because; CI wavefunctions which go beyond CISD (such as RAS CI) are fairly complex,; typically the DETCI code will be used in cases where the; tradeoffs between computational expense and completeness of the; model space are nontrivial. Hence, the user is advised to develop; a good working knowledge of multi-reference and RAS CI methods before; attempting to use the program for a production-level project. This user's; manual will provide only an elementary introduction to the most; important keywords. Additional information is available in the complete; list of keywords for DETCI provided in Appendix :ref:`apdx:detci`. For single-reference CI computations, the easiest way to invoke a CI; computation with DETCI is simply to call :py:func:`~psi4.driver.energy`, :py:func:`~psi4.driver.optimize`, *etc.*,; with the common name for that CI wavefunction, like ``energy('cisd')`` ; for a CISD single-point energy. The Python driver; recognizes ``cisd``, ``cisdt``, and ``cisdtq``. As mentioned above, codes; written specifically for CISD will be more efficient than DETCI for a ; CISD computation, and ``energy('cisd')`` by default will call other,; more efficient modules. To force a CISD computation with DETCI,; set |globals__qc_module| = DETCI. . Higher order single-reference CI wavefunctions, like those including singles through; 6-fold excitations, can be invoked using numbers, like ``ci6``. A full; CI can be specified by ``fci``. More complicated CI computations, like; RASCI, can be performed by setting the appropriate keywords and calling the; modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:5620,avail,available,5620,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['avail'],['available']
Availability,"four| repository in your GitHub account. Locally, proceed to clone:. .. code-block:: bash. # replace johndoe; # use https or ssh; >>> git clone https://github.com/johndoe/psi4.git; >>> cd psi4; # this is your {top-level-psi4-dir}. `Set up a connection; <https://help.github.com/articles/configuring-a-remote-for-a-fork/>`_; between your forked repository and the parent repository. .. code-block:: bash. >>> git remote add upstream https://github.com/psi4/psi4.git. * **Build** :ref:`directions <faq:buildquick>`. * **Get Updates**. Locally, `update your fork; <https://help.github.com/articles/syncing-a-fork/>`_ from the parent; repository and store on GitHub at your fork. .. code-block:: bash. # on branch working_branch; >>> git pull --rebase upstream master; >>> git push origin working_branch. Remember: Working in the master branch of a fork is considered bad practice. * **Contribute Back**. |PSIfour| contributions process :ref:`here <faq:githubworkflow>` and; :source:`here <.github/CONTRIBUTING.md>`.; Consider `preparing your contribution in a branch; <http://blog.jasonmeridth.com/posts/do-not-issue-pull-requests-from-your-master-branch/>`_; then issue a `GitHub pull request; <https://help.github.com/articles/creating-a-pull-request/>`_. .. _`faq:tarballpsi4public`:. Tarball from GitHub Repository; ------------------------------. * **Get Initially**. Discouraged! From the |PSIfour| repository at https://github.com/psi4/psi4, hit the; ""Clone or download"" then ""Download ZIP"" button. Locally, unpack as; below. .. code-block:: bash. >>> unzip psi4-master.zip; >>> cd psi4-master; # this is your {top-level-psi4-dir}. * **Build** :ref:`directions <faq:buildquick>`. * **Get Updates**. Download new tarball and rebuild. * **Contribute Back**. Not applicable as source not under git control. .. _`faq:githubworkflow`:. What is the suggested GitHub workflow; -------------------------------------. .. image:: /prflow.001.jpeg; .. image:: /prflow.002.jpeg; .. image:: /prflow.003.jpeg; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst:8870,down,download,8870,doc/sphinxman/source/build_obtaining.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst,1,['down'],['download']
Availability,"fp_solver>`. .. image:: https://img.shields.io/badge/home-simint-5077AB.svg; :target: http://www.bennyp.org/research/simint/. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://www.bennyp.org/research/simint/. These are the vectorized implementation of the Obara-Saika (OS) method of; calculating electron repulsion integrals developed by B. Pritchard and; interfaced into libmints. Enabling simint and adding ``set; integral_package simint`` (do this in ``~/.psi4rc`` for universal effect); runs libderiv from Libint for derivative integrals and simint for; non-derivative integrals. Note that present AM maximum is ``$$(gg|gg)$$``. .. warning:: simint seems to be having some problems with Intel 2018 compilers. presently disabled in conda package. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/simint/badges/version.svg; :target: https://anaconda.org/psi4/simint. * SIMINT is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * The conda package is compiled to least-common-denominator, namely SSE instruction set. * If using the |PSIfour| binary, simint has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; simint can be obtained through ``conda install simint -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_simint`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect simint and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use ; .. simint from conda without thinking, consult. * To remove a conda installation, ``conda remove simint``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/simint.svg?maxAge=2592000. .. :target: https://github.com/psi4/simint TODO BPP. * If using |PSIfour| built from source and you want simint built from; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/simint.rst:2329,avail,available,2329,doc/sphinxman/source/simint.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/simint.rst,1,['avail'],['available']
Availability,"gdb --args python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (gdb) run. .. .. _`faq:valgrindpsi`:; .. ; .. How to use ``valgrind`` with Psi4; .. ---------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode and has something to do with the exponent boost chooses for; .. the default zero tolerance. Anyways, commenting out lines 47 to 49, for valgrind purposes, should; .. allow you to run valgrind. The consequence of commenting out these lines are you get no integeral; .. screening, so make sure you uncomment them when you actually run. .. _`faq:cmakeverbose`:. How to see the actual compiling commands (or errors) with ``cmake``; -------------------------------------------------------------------. CMake by default hides a lot of useful debugging information to make the; compilation cleaner. Issue ``make VERBOSE=1`` to display the full; compilation commands and errors. .. _`faq:vigitmerge`:. How to highlight git merge conflict",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:56132,error,errors,56132,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['errors']
Availability,"gtrsim`\ CCSD(T)] or a -JKFIT auxiliary basis is unavailable; for the orbital basis/atoms involved.; CD; A threaded algorithm using approximate ERIs obtained by Cholesky; decomposition of the ERI tensor. The accuracy of the Cholesky; decomposition is controlled by the keyword |scf__cholesky_tolerance|.; This algorithm is similar to the DF algorithm, but it is not suitable; for gradient computations. The algorithm to obtain the Cholesky; vectors is not designed for computations with thousands of basis; functions. |PSIfour| also features the capability to use ""composite"" Fock matrix build; algorithms - arbitrary combinations of specialized algorithms that construct; either the Coulomb or the Exchange matrix separately. In general, since; separate Coulomb and Exchange matrix build algorithms exploit properties specific to; their respective matrix, composite algorithms display lower; scaling factors than their combined Fock build counterparts. However, composite algorithms also; introduce redundant ERI computations into the calculation. Therefore, composite Fock build; algorithms tend to perform better for larger systems, but worse for smaller systems. Arbitrary; composite algorithms can be accessed by setting |globals__scf_type| to ``J_alg+K_alg``,; where *J_alg* and *K_alg* are the names of the separate Coulomb; and Exchange construction algorithms to use, respectively. Alternatively, if one is using; DFT with non-hybrid functionals, a composite Coulomb construction algorithm can be; specified solo by setting |globals__scf_type| to ``J_alg``, without the need to set ; an associated ``K_alg``. Specialized algorithms available to construct the Coulomb term within a composite framework ; are as follows:. DFDIRJ; An integral-direct algorithm constructing the Coulomb term based on [Weigend:2002:4285]_; The DFDIRJ algorithm combines the benefits of integral-direct SCF approaches ; with that of density-fitting. Specifically, DFJ utilizes no I/O and displays ; strong performan",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:30598,redundant,redundant,30598,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['redundant'],['redundant']
Availability,"gy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:87222,error,error,87222,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"h psi4 CMake config files installed."" share/cmake/psi4); option_with_default(TargetLAPACK_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetLAPACK); option_with_default(TargetHDF5_INSTALL_CMAKEDIR ""Directory to which psi4 CMake config files installed."" share/cmake/TargetHDF5); option_with_default(ENABLE_GENERIC ""Enables mostly static linking of language libraries for shared library"" OFF); option_with_default(CMAKE_INSTALL_MESSAGE ""Specify verbosity of installation messages"" LAZY); option_with_default(psi4_CXX_STANDARD ""Specify C++ standard for core Psi4"" 17); option_with_default(psi4_CXX_STANDARD_Libint2 ""Specify C++ standard for Psi4 files including Libint2 headers. Older (e.g., 2021.4) Intel compilers may need 14"" 17); option_with_default(SIMINT_VECTOR ""Vectorization type to use for simint (scalar sse avx avxfma micavx512)"" avx); option_with_default(SPHINX_THEME ""Theme for Sphinx documentation and extensions"" sphinx_psi_theme); option_with_default(SPHINXMAN_STRICT ""Turn warnings into errors for docs target sphinxman"" OFF); option_with_default(BUILD_Libint2_GENERATOR ""If prebuilt not found, don't build Libint2 from source tarball but instead build and run generator (several hours for production library). Edit angular momentum and integrals classes directly in `external/upstream/libint2/CMakeLists.txt` (requires Ninja)."" OFF); option_with_default(psi4_SHGAUSS_ORDERING ""Ordering for shells of solid harmonic Gaussians: standard -- standard ordering (-l, -l+1 ... l) -or- gaussian -- the Gaussian ordering (0, 1, -1, 2, -2, ... l, -l). Changing this is experimental, expert only, and not a future plan. Internal calculations should be correct and fchk files should be correct, but other exports like Molden and QCSchema.Wavefunction won't be."" gaussian); include(custom_int_orderings). ######################## Process & Validate Options ##########################; include(GNUInstallDirs); include(autocmake_safeguards); include(custom_c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:12669,error,errors,12669,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['error'],['errors']
Availability,"h the :math:`(\lambda_3)` correction; [denoted as :math:`\mbox{ODC-13$(\lambda_3)$}`] has been shown to provide highly; accurate results for open-shell molecules near equilibrium geometries. At the present moment, all of the DCT methods support unrestricted reference; orbitals (|scf__reference| ``UHF``), which can be used to perform energy and; gradient computations for both closed- and open-shell molecules. In addition,; the ODC-06 and ODC-12 methods support restricted reference orbitals; (|scf__reference| ``RHF``) for the energy and gradient computations of; closed-shell molecules. Note that in this case restricted reference orbitals; are only available for |dct__algorithm| ``SIMULTANEOUS``. .. _`sec:dctalgorithms`:. Iterative Algorithms; ~~~~~~~~~~~~~~~~~~~~. As explained in the :ref:`Theory <sec:dcttheory>` section, in order to obtain the DCT energy one; needs to solve a system of coupled equations for orbitals and density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; |dct__algorithm| option. SIMULTANEOUS [Default]; In the simultaneous algorithm the DCT equations are solved in macroiterations.; Each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and orbitals is achieved.; Convergence of the simultaneous algorithm is accelerated using the; DIIS extrapolation technique. TWOSTEP; In the two-step algorithm each macroiteration consists of two sets of; microiterations. In the first set, the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; ma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:9466,avail,available,9466,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"h:`N` is the size of the basis. * If there is not enough memory to perform the computation in one pass,; the program will do multiple passes through the entire set of integrals,; hence your computation will run that many times longer.; In such case, find the machine with the most memory and processors available. * On SMP machines, set the {\tt NUM\_THREADS} to the number of; processors available for the job, or, if all processors are allocated for; your job, set {\tt NUM\_THREADS} to {\em twice} the number of processors; you have. Modern operating systems schedulers are usually very efficient; at handling multithreaded programs, so the overhead of thread context; switching is not significant, but using more threads may lead to better; load balancing, and lower execution times. For example, on a 32-processor; IBM eServer p690 we found that the optimal number of threads was 128.; For the optimal performance, do a few runs with different number of threads; and see which number works best.; Avoid excessively large; number of threads, as this descreases the net amount of memory available to; the computation and thus may increase the number of passes. . * Set the {\tt MEMORY} keyword to the 90% of the available physical; memory, at most. There is a small amount of overhead associated with the; integral-direct algorithms that is not accounted for by the internal memory; handling routines. * The implementation of the integral-direct MP2-R12 (and MP2) method; in |PSIfour| can run efficiently on SMP, or shared-memory, machines,; by utilizing multiple processors via multithreaded approach.; However, it cannot utilize distributed memory machines,; such as commodity (PC) clusters and massively parallel machines,; to their full potential, since one computation can only take advantage; of one node of such machine at a time.; In such environments, the aformentioned MPQC implementation of; the MP2-R12 method should be preferred; (see \url{http://aros.ca.sandia.gov/~cljanss/mpqc/}). ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst:7626,avail,available,7626,doc/sphinxman/source/attic/mp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/mp2.rst,2,['avail'],['available']
Availability,"he aggregate model chemistry requested through cbs(). Then,; since, for example, an ``energy('ccsd(t)')`` yields CCSD(T), CCSD, MP2,; and SCF energy values, the wrapper condenses this task list into the second; list of minimum number of calculations which will actually be run. ::. Naive listing of computations required.; scf / aug-cc-pvqz for SCF TOTAL ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY; mp2 / aug-cc-pvdz for MP2 CORRELATION ENERGY; mp2 / aug-cc-pvtz for MP2 CORRELATION ENERGY. Enlightened listing of computations required.; mp2 / aug-cc-pvqz for MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz for CCSD(T) CORRELATION ENERGY; ccsd(t) / aug-cc-pvtz for CCSD(T) CORRELATION ENERGY. At the end of a cbs() job is printed a summary section like the one below. First,; in the components section, are listed the results for each model chemistry available, whether; required for the cbs job (*) or not. Next, in the stages section, are listed the results for; each extrapolation. The energies of this section must be dotted with the weightings in column Wt; to get the total cbs energy. Finally, in the CBS section, are listed the results for each stage; of the cbs procedure. The stage energies of this section sum outright to the total cbs energy. ::. ==> Components <==; ; ----------------------------------------------------------------------------------; Method / Basis Rqd Energy [H] Variable; ----------------------------------------------------------------------------------; scf / aug-cc-pvqz * -1.11916375 SCF TOTAL ENERGY; mp2 / aug-cc-pvqz * -0.03407997 MP2 CORRELATION ENERGY; scf / aug-cc-pvdz -1.11662884 SCF TOTAL ENERGY; mp2 / aug-cc-pvdz * -0.02881480 MP2 CORRELATION ENERGY; ccsd(t) / aug-cc-pvdz * -0.03893812 CCSD(T) CORRELATION ENERGY; ccsd / aug-cc-pvdz -0.03893812 CCSD CORRELATION ENERGY; scf / aug-cc-pvtz ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst:5671,avail,available,5671,doc/sphinxman/source/cbs.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cbs.rst,1,['avail'],['available']
Availability,"he mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a higher lying SCF solution. Because of this, in; practice level shifting is most useful in the initial phase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry is utilized to reduce number of; integrals.; OUT_OF_CORE; An out-of-core, unsorted algorithm using exact ERIs. Overcomes the; memory bottleneck of the current PK algorithm. Integrals are generated; only once, and symmetry is utilized to reduce number of integrals.; DIRECT; A threaded, sieved, integral-direct algorithm, with full permutational; symmetry. This algorithm is brand new, but seems to be reasonably fast; up to 1500 basis functions, uses zero disk (if DF pre-iterations are; turned off), and can obtain significant; speedups with negligible error loss i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:27960,avail,available,27960,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"he; plugin. In this example, a directory named myplugin will be created.; All you need to do is ``cd`` into the directory, use |PSIfour| to generate; a Makefile, and type make. Then execute ``psi4`` in the directory on the; default input file. .. code-block:: bash. >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. |PSIfour| comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs::. >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-template wavefunction; >>> psi4 --plugin-name myplugin --plugin-template scf; >>> psi4 --plugin-name myplugin --plugin-template dfmp2. .. >>> psi4 --plugin-name myplugin --plugin-template ambit. .. Several stable sample plugin directories are available to consult in the; .. :source:`plugins` directory. Other plugin directories can be used as models; .. but are in active development. For documentation on plugin modules, see; .. :ref:`Available Plugins <sec:availablePlugins>`.; .. ; .. * :source:`plugins/aointegrals/aointegrals.cc` ; .. An example that uses the LibMints library to generate and print AO basis (no symmetry) integrals.; .. ; .. * :source:`plugins/backtrans/backtrans.cc` ; .. A test of the one- and two-particle density matrix backtransformation code.; .. ; .. * :source:`plugins/mointegrals/mointegrals.cc` ; .. An example that uses the LibTrans library to generate and print MO basis integrals.; .. ; .. * :source:`plugins/mollerplesset2/mp2.cc` ; .. A plugin that uses LibTrans to generate open- and closed-shell MP2 energies.; .. ; .. * :source:`plugins/sointegrals/sointegrals.cc` ; .. An example that uses the LibMints library to generate and print SO basis (with symmetry) integrals. .. _`sec:condaplugins`:.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:3349,avail,available,3349,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,1,['avail'],['available']
Availability,"heMPS2, set to an installation directory containing ``include/chemps2/DMRG.h``; * :makevar:`CheMPS2_DIR` |w---w| CMake variable to specify where pre-built CheMPS2 can be found. Set to installation directory containing ``share/cmake/CheMPS2/CheMPS2Config.cmake``; * :makevar:`CMAKE_DISABLE_FIND_PACKAGE_CheMPS2` |w---w| CMake variable to force internal build of CheMPS2 instead of detecting pre-built; * :makevar:`CMAKE_INSIST_FIND_PACKAGE_CheMPS2` |w---w| CMake variable to force detecting pre-built CheMPS2 and not falling back on internal build. **Examples**. A. Build bundled. .. code-block:: bash. >>> cmake -DENABLE_CheMPS2=ON. B. Build *without* CheMPS2. .. code-block:: bash. >>> cmake. C. Build bundled with specific HDF5. .. code-block:: bash. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=/path/to/hdf5. D. Link against pre-built. .. code-block:: bash. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=/path/to/chemps2/root. .. code-block:: bash. >>> cmake -DENABLE_CheMPS2=ON -DCheMPS2_DIR=/path/to/chemps2/configdir. E. Link against pre-built with specific HDF5. .. code-block:: bash. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=""/path/to/chemps2/root;/path/to/hdf5/root"". F. Build bundled despite pre-built being detectable. .. code-block:: bash. >>> cmake -DENABLE_CheMPS2=ON -DCMAKE_PREFIX_PATH=/path/to/unwanted/chemps2/root/and/wanted/other/dependencies/root -DCMAKE_DISABLE_FIND_PACKAGE_CheMPS2=ON. .. _`faq:chemps2gccflto`:. How to fix ""``plugin needed to handle lto object``"" when building CheMPS2; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. For building with GCC, errors involving unresolved symbols or a message; ""plugin needed to handle lto object"" may indicate a failure of the; interprocedural optimization. This can be resolved by passing full; locations to gcc toolchain utilities to ``setup`` or ``cmake``:; ``-DCMAKE_RANLIB=/path/to/gcc-ranlib -DCMAKE_AR=/path/to/gcc-ar`` .; Details at https://github.com/psi4/psi4/issues/414. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst:8642,error,errors,8642,doc/sphinxman/source/chemps2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/chemps2.rst,2,"['error', 'failure']","['errors', 'failure']"
Availability,"hf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:92001,error,error,92001,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"hf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:96623,error,error,96623,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"hf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86143,error,error,86143,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"hinking, consult. * To remove a conda installation, ``conda remove gdma``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/gdma.svg?maxAge=2592000; :target: https://github.com/psi4/gdma. * If using |PSIfour| built from source and you want gdma built from; from source also,; enable it as a feature with :makevar:`ENABLE_gdma`,; and let the build system fetch and build it and activate dependent code. Input; ~~~~~. The distributed multipole analysis (DMA) technique, developed by Anthony J.; Stone and implemented by him into the `GDMA package; <http://www-stone.ch.cam.ac.uk/programs.html>`_, is available in |PSIfour|.; The current implementation simply embeds Stone's GDMA code into the main; executable, and generates the appropriate input files automatically. The; program takes as input a data file, and a Gaussian formatted checkpoint (see; Section :ref:`FCHK <sec:fchk>`) file. The simplest usage of the GDMA code is; demonstrated below, along with a listing of the options supported; these; options correspond to the options described in the ; :download:`GDMA manual <gdma-2.3.pdf>`. If more advanced usage is desired, which is not is permitted by the options; listed below, the user may provide their own data file containing keywords to; control the GDMA code. Simply place the data file in the directory |PSIfour|; is called from, and provide the file name as the datafile argument to the; :py:func:`~psi4.driver.gdma` routine. For example, if GDMA data file is called; *control.dma*, the GDMA code is called as follows::. grad, wfn = gradient('mp2', return_wfn=True); gdma(wfn, datafile='control.dma'). An FCHK file will be generated for the GDMA code to read; this file will have; the prefix given by |globals__writer_file_label| (if set), or else by the name; of the output file plus the name of the current molecule, and the suffix will; be '.fchk'. This FCHK file name should be passed to the 'File' keyword in the; DGMA data file, to ensure that the GDMA code reads t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst:3694,down,download,3694,doc/sphinxman/source/gdma.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst,1,['down'],['download']
Availability,"hod or the default environmental variables. .. index:: PBS queueing system, threading; .. _`sec:PBS`:. PBS job file; ============. To run a |PSIfour| job on a PBS queueing system, you need to properly set up; all necessary variables in the PBS job file. Below is a minimal example of; a PBS job file for a threaded job, and a short explanation for each section. .. code-block:: bash. #!/bin/tcsh; #PBS -j oe; #PBS -l pmem=2120mb; #PBS -N jobname; #PBS -V. cd $PBS_O_WORKDIR; setenv myscratch /scratch/user/psi4.$PBS_JOBID. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end. unsetenv PSIDATADIR; setenv PSI_SCRATCH $myscratch; if ! ( $?PSIPATH ) setenv PSIPATH """"; setenv PSIPATH /path/to/external/modules:${PSIPATH}; setenv PSIPATH /path/to/python/modules:${PSIPATH}; /psi/install/directory/bin/psi4 -i input.in -o input.out -n 4. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end. The top section features PBS-specific commands. These depend on the ; specific characteristics of your PBS queuing system but they may include: ::. #!/bin/tcsh; #PBS -j oe ; #PBS -l pmem=2120mb; #PBS -N jobname; #PBS -V; ; The ``PBS -j oe`` option instructs PBS to write any output or error message; from the queuing system in dedicated files. ``PBS -l pmem=2120mb`` requests ; 2120 MB of memory for each thread on the node. The total memory requested for ; the job by PBS should generally be slightly greater than what indicated ; in the input file (see :ref:`memory setting <sec:memory>`). .. In the next section, we define :envvar:`OMP_NUM_THREADS` and :envvar:`MKL_NUM_THREADS`; .. to use 4 threads for OpenMP parallelization and in threaded BLAS (see section :ref:`sec:threading`). ::; .. ; .. setenv OMP_NUM_THREADS 4; .. setenv MKL_NUM_THREADS 4. Then, we move to the working directory using PBS variable ``$PBS_O_WORKDIR`` and ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:14251,echo,echo,14251,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['echo'],['echo']
Availability,"hod': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:249327,error,error,249327,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"hod': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:309613,error,error,309613,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"hods using; state-of-the-art numerical methods and algorithms. Several parts of; the code feature shared-memory parallelization to run efficiently on; multi-core machines (see Sec. :ref:`sec:threading`).; An advanced parser written in Python allows the user; input to have a very simple style for routine computations, but it can also; automate very complex tasks with ease. |PSIfour| is, in many ways, a whole new package compared to Psi3.; While some libraries and modules remain the same, the majority of the code has; been rewritten from scratch based on a powerful set of new libraries written; in C++. A totally new Python front-end makes |PSIfour| incredibly user-friendly; and automates many common tasks such as basis set extrapolation, composite; methods, running the same computation on every molecule in a test set, etc.; Density-functional theory, absent in Psi3, is quite efficient; in |PSIfour|, with many functionals available. Density fitting is ubiquitous in; |PSIfour|, leading to some of the most efficient MP2 and CCSD(T) code available.; |PSIfour| also introduces extensive,; powerful features for energy component analysis of non-covalent interactions; via symmetry-adapted perturbation theory. Orbital-optimized versions of; perturbation theory and coupled-cluster methods, and their analytic gradients,; have also been added. Through external libraries, |PSIfour| gains access to implicit; solvent (PCM) capabilities, density-matrix renormalization group CI, effective; fragment potentials, Grimme dispersion corrections, and high-order; coupled-cluster theory. In this section, we provide an overview of some of the features of; |PSIfour| along with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details into the; structure of |PSIfour| input files and how Python can be mixed with; quantum chemistry directives in |PSIf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:2253,avail,available,2253,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"html (for the CMake adept, see [CMakeLists.txt](CMakeLists.txt#L27). * **Manual** [http://bit.ly/psi4manual](https://psicode.org/psi4manual/master/index.html) (built nightly from master branch) or https://psicode.org/psi4manual/1.4.0/index.html (last release). * **Tutorial** https://psicode.org/psi4manual/master/tutorial.html for Psithon (``psi4 job.in``), https://psicode.org/psi4manual/master/psiapi.html for PsiAPI (``python job.py``). * **Forum** http://forum.psicode.org. * **Communication & Support** https://psicode.org/psi4manual/master/introduction.html#technical-support. * **GitHub** https://github.com/psi4/psi4 (authoritative repository). * **Continuous Integration Status** [![Azure DevOps builds](https://img.shields.io/azure-devops/build/psi4/e80489d7-9619-4512-8e7b-255e355b3ab8/1/master.svg?logo=azure%20devops)](https://dev.azure.com/psi4/psi4/_build?definitionId=1) on Linux and Windows. * **Anaconda** https://anaconda.org/psi4 (binary available for Linux, Mac, Mac Silicon, Windows, and WSL Windows [![Binstar Badge](https://anaconda.org/psi4/psi4/badges/downloads.svg)](https://anaconda.org/psi4/psi4) ) [![Binstar Badge](https://anaconda.org/conda-forge/psi4/badges/downloads.svg)](https://anaconda.org/conda-forge/psi4) ) [instructions](https://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-download-site). * **Coverage** Python and C++ source code lines hit by running most of the test suite. [![codecov](https://img.shields.io/codecov/c/github/psi4/psi4.svg?logo=Codecov&logoColor=white)](https://codecov.io/gh/psi4/psi4). * **Interested Developers** https://psicode.org/developers.php (replacement page needed) (welcome to fork psi4/psi4 and follow [GitHub contribution procedure](https://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow)) [![PRs welcome](https://img.shields.io/badge/PRs-welcome-yellow.svg)](http://makeapullrequest.com). * **Sample Inputs** http://www.psicode.org/psi4manual/ma",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:5212,avail,available,5212,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,1,['avail'],['available']
Availability,"i4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86996,error,error,86996,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"i: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:481001,error,error,481001,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"iAPI mode, access as, *e.g.*, ``psi4.constants.h``. .. index:: memory; .. _`sec:memory`:. Memory Specification; ====================. By default, |PSIfour| assumes that 500 MiB of memory are available. While this is; enough for many computations, many of the algorithms will perform better if; more is available. To specify memory, the ``memory`` keyword should be used. The following; lines are all equivalent methods for specifying that 2 GB of RAM is available; to |PSIfour|::. # all equivalent. memory 2 GB; ; memory 2000 MB; ; memory 2000000 kB. Please note that memory can be specified both in IEC binary units (1 KiB = 1024 bytes) and SI units (1 kB = 1000 bytes). |PSIfour| recognizes and obeys both of them correctly. The units are not case sensitive (Kb and KB are equivalent to kB). By default, |PSIfour| performs a ""sanity check"" when parsing Psithon input files, enforcing a minimum memory requirement of 250 MiB. While it is generally not recomennded to do so, expert users can bypass this check by directly setting the number of bytes availble to |PSIfour|::. # setting available memory to 2 MB; set_memory_bytes(2000000). Please note that this memory setting only governs the maximal memory; usage of the major data structures, and actual total memory usage; is slightly higher. This is usually a negligible amount, except when; setting tiny memory allowances. One convenient way to override the |PSIfour| default memory is to place a; memory command in the |psirc| file (Sec. :ref:`sec:psirc`). For example,; the following makes the default memory 2 GB. ::. set_memory(2000000000). However, unless you're assured of having only one job running on a node at; a time (and all nodes on the filesystem with |psirc| have similar memory; capacities), it is advised to set memory in the input file on a; per-calculation basis. That same command can be used for PsiAPI mode::. psi4.set_memory(int(5e8)). .. tabs::. .. code-tab:: bash PSIthon. set_memory(2000000000). .. code-tab:: py PsiAPI.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:4261,avail,availble,4261,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['availble']
Availability,"ic License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: ; FCHK; Gaussian Formatted Checkpoint. .. _`sec:fchk`:. Interface to programs through FCHK files |w---w| :py:func:`~psi4.driver.fchk()`; ===============================================================================. .. codeauthor:: Andrew C. Simmonett; .. sectionauthor:: Andrew C. Simmonett. Many post-processing tools can read information from `Gaussian's formatted; checkpoint (FCHK) files <https://gaussian.com/formchk/>`_.; To allow interoperability with such tools, |PSIfour| includes a utility to; generate FCHK files. Wavefunction information, such as orbitals, densities,; orbital energies and basis set information is currently supported, but geometry; optimization and vibrational frequency information are not supported at this; time. To generate a FCHK file, simply store the wavefunction from the energy; calculation, and hand it to the fchk driver function::. energy, wfn = energy('scf', return_wfn=True); fchk(wfn,'output.fchk'). The file will be written to the name passed to the fchk function.; Note that for MP2 and CCSD methods, the energy can be computed without; the expensive steps required to compute the density, so energy calls for these; methods will return a wavefunction that has the Hartree--Fock density. If a; density is required for these methods, the user should instead request a; gradient computation, to ensure that",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fchk.rst:1443,checkpoint,checkpoint,1443,doc/sphinxman/source/fchk.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fchk.rst,1,['checkpoint'],['checkpoint']
Availability,"ient by means of the Density-Fitting (DF) approximation (also known as; Resolution-of-the-Identity or RI), wherein the quadratic :math:`ov` products in the; bra- and ket- of the :math:`(ov|ov)`\ -type Electron Repulsion Integrals (ERIs); appearing in MP2 are cast onto a linear-scaling auxiliary basis by least-squares; fitting. Substitution of the DF factorization into the MP2 equations results in; a formal scaling and prefactor reduction of MP2, and further speed gains are; possible due to heavy utilization of matrix-multiplication kernels and minimal; storage requirements in a DF approach. The method has been found to be quite; robust and accurate, and it should be preferred unless extreme accuracy is required; or a fitting basis is not defined for the primary basis and atom type; encountered. In particular, we have found excellent efficiency and tractability; gains when using DF-MP2 in concert with a DF-SCF reference. An efficient,; threaded, disk-based DF-MP2 code is available in |PSIfour| for all single; reference types available in the SCF module.; MP2 defaults in |PSIfour| to the density-fitted code. The support for MP2 by the DFMP2 module in |Psifour| is detailed in; Table :ref:`DFMP2 Capabilities <table:dfmp2_stdsuite>`. Even without; ``set qc_module dfmp2``, methods will default to this module, but; alternate implementations and use of |globals__mp2_type| for performing; a MP2 with conventional integrals can be seen at :ref:`other modules; <table:managedmethods>`. .. include:: autodoc_capabilities_dfmp2.rst. An example utilization of the code is::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }; ; set basis cc-pvdz; set scf_type df; set freeze_core True; ; energy('mp2'). The ``energy('mp2')`` call to :py:func:`~psi4.driver.energy` executes; the predefined DF-MP2 procedure, first calling; the SCF module with a default RHF reference and DF algorithm for the; two-electron integrals. When the orbitals are converged, the DF-MP2 module is; launched, which for",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst:2771,avail,available,2771,doc/sphinxman/source/dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dfmp2.rst,2,['avail'],['available']
Availability,"ify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. _`sec:buildrunfaq`:. ===============; Build & Run FAQ; ===============. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. Obtaining and Updating |PSIfour|; --------------------------------. #. :ref:`faq:obtainpsi4`; #. :ref:`faq:quiz`; #. :ref:`faq:binary`; #. :ref:`faq:clonepsi4public`; #. :ref:`faq:forkpsi4public`; #. :ref:`faq:tarballpsi4public`; #. :ref:`faq:recompile`. .. #. :ref:`faq:psi3sourceforge`. Configuring and Installing |PSIfour| via Binary; -----------------------------------------------. #. :ref:`faq:psicodedownload`; #. :ref:`sec:psi4conda`; #. :ref:`faq:psi4pkg`; #. :ref:`faq:updatepsi4`; #. :ref:`faq:psi4deps`; #. :ref:`sec:condadetails`; #. :ref:`faq:condamaxameri`. Configuring, Building, and Installing |PSIfour| via Source; ----------------------------------------------------------. #. :ref:`faq:cmakeviasetup`; #. :ref:`faq:buildquick`; #. :ref:`faq:builddetailed`. #. :ref:`faq:setuphelp`; #. :ref:`faq:chooseobjdir`; #. :ref:`faq:setupprefix`; #. :ref:`faq:condapsi4dev`; #. :ref:`faq:setupmaxameri`; #. :ref:`faq:cmakeverbose`; #. :ref:`fa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_faq.rst:1354,down,downloads,1354,doc/sphinxman/source/build_faq.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_faq.rst,1,['down'],['downloads']
Availability,"ild |PSIfour| to detect gdma and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. gdma from conda without thinking, consult. * To remove a conda installation, ``conda remove gdma``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/gdma.svg?maxAge=2592000; :target: https://github.com/psi4/gdma. * If using |PSIfour| built from source and you want gdma built from; from source also,; enable it as a feature with :makevar:`ENABLE_gdma`,; and let the build system fetch and build it and activate dependent code. Input; ~~~~~. The distributed multipole analysis (DMA) technique, developed by Anthony J.; Stone and implemented by him into the `GDMA package; <http://www-stone.ch.cam.ac.uk/programs.html>`_, is available in |PSIfour|.; The current implementation simply embeds Stone's GDMA code into the main; executable, and generates the appropriate input files automatically. The; program takes as input a data file, and a Gaussian formatted checkpoint (see; Section :ref:`FCHK <sec:fchk>`) file. The simplest usage of the GDMA code is; demonstrated below, along with a listing of the options supported; these; options correspond to the options described in the ; :download:`GDMA manual <gdma-2.3.pdf>`. If more advanced usage is desired, which is not is permitted by the options; listed below, the user may provide their own data file containing keywords to; control the GDMA code. Simply place the data file in the directory |PSIfour|; is called from, and provide the file name as the datafile argument to the; :py:func:`~psi4.driver.gdma` routine. For example, if GDMA data file is called; *control.dma*, the GDMA code is called as follows::. grad, wfn = gradient('mp2', return_wfn=True); gdma(wfn, datafile='control.dma'). An FCHK file will be generated for the GDMA code to read; this file will have; the prefix given by |globals__writer_file_label| (if set), or else by the name; of the output file plus the name of the current mo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst:3471,checkpoint,checkpoint,3471,doc/sphinxman/source/gdma.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst,1,['checkpoint'],['checkpoint']
Availability,"ild. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4/label/dev; >>> conda install psi4 --channel psi4/label/dev. * (H) Initially install |PSIfour| nightly build with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4/label/dev. * (I) Update to latest |PSIfour| nightly build. .. code-block:: console. >>> conda update psi4 -c psi4/label/dev. * (J) Initially install nightly build into a conda environment ""p4env"" instead of ""root"". This creates a sandbox with |PSIfour| and python (loaded as dependency). .. code-block:: console. >>> conda create -y -n p4env psi4 -c psi4/label/dev; >>> conda activate p4env. * (K) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4/label/dev. .. Troubleshooting; .. ^^^^^^^^^^^^^^^; ..; .. * If the target computer doesn't have libc >= 2.7 (released c.2007; for reference, 2.10 is newer than 2.7; unlike most libraries, libc generally not available in multiple versions on a computer), the |PSIfour| conda package won't work. ::; ..; .. # unsuitable computer; .. >>> ldd --version; .. ldd (GNU libc) 2.5; .. # suitable computer; .. >>> ldd --version; .. ldd (GNU libc) 2.17; ..; .. * It is of greatest importance that the |PSIfour| executable be linked against conda libpython.so *not* against any system libpython.so. This is arranged by setting ``RPATH`` to seek libraries relative to executable (thanks, conda binary relocation routine!). The conda |PSIfour| executable is not vulnerable to interference from your ``LD_LIBRARY_PATH`` settings. Below shows a well-linked executable.; ..; .. * no libraries ""not found""; .. * fundamental libraries like libc, ld-linux, pthreads found system libraries to link against; .. * libpython linked against conda python *not* system python; .. * libm is linked against conda *or* system; .. * blas, c++, and gcc libraries are absent because statically linked; ..; .. .. code-block:: console; ..; .. >>> conda install co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:28103,avail,available,28103,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['avail'],['available']
Availability,"ilers for Mac without Fink, MacPorts, or Homebrew; -----------------------------------------------------------------------------. The easiest compiler to obtain is ``clang`` which is a drop-in replacement; for ``gcc`` and ``g++``. Just install `XCode; <https://apps.apple.com/us/app/xcode/id497799835>`_. Some old versions; of XCode can't handle some of the advanced C++ language features, but this; is a *software* not *hardware* limitation. Checks for version compliance; performed at build-time. Note that this ""AppleClang"" will not be compatible; with conda Mac packages using C++11, nor can it make use of OpenMP directives. Another route to obtaining ``clang`` compilers without the above limitations; is through conda. .. code-block:: bash. # Install Clang 4.0.1 into a non-primary conda environment; >>> conda create -n clang401 clangxx_osx-64 clang_osx-64 llvm-openmp intel-openmp. # To Build, activate environment (prepends PATH and defines environment variables CLANG, CLANGXX, HOST, etc):; >>> conda activate clang401; >>> echo ${CLANGXX}; /path/to/miniconda/envs/clang401/bin/x86_64-apple-darwin13.4.0-clang++; >>> echo ${HOST}; x86_64-apple-darwin13.4.0. # build with Clang; >>> cmake -S. -Bbuild \; -DCMAKE_C_COMPILER=${CLANG} \; -DCMAKE_CXX_COMPILER=${CLANGXX} \; -DCMAKE_CXX_FLAGS=""-stdlib=libc++"" \; -DOpenMP_CXX_FLAG=""-fopenmp=libiomp5"". # build with Intel; >>> cmake -S. -Bbuild \; -DCMAKE_C_COMPILER=icc \; -DCMAKE_CXX_COMPILER=icpc \; -DCMAKE_C_FLAGS=""-clang-name=${CLANG}"" \; -DCMAKE_CXX_FLAGS=""-clang-name=${CLANG} -clangxx-name=${CLANGXX} -stdlib=libc++ -I${CONDA_PREFIX}/include/c++/v1"". # Configure and build. .. _`faq:modgcc`:. How to satisfy the GCC >= 4.9 requirement on Linux without updating the OS; --------------------------------------------------------------------------. .. code-block:: bash. # See if GCC too old (in this case, yes); >>> gcc --version; gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-4). Even if you're not using GCC as a compiler, your Intel compiler se",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:40088,echo,echo,40088,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['echo'],['echo']
Availability,"in the order they appear in; the input file, so if the last four commands in the above example were to read ::. set basis cc-pVDZ; energy('ccsd'); set ccenergy print 3; set scf print 1. the commands that set the print level would be ineffective, as they would be; processed after the CCSD computation completes. In PsiAPI mode, one can use the command :py:func:`~psi4.driver.set_options`; like below for general and module-specific options. Note that these values; should be of correct type, strings for strings, floats for floats like; convergences. The function `~psi4.core.clean_options` that reinitializes; all options may also be useful to separate calculations in a PsiAPI; session. ::. psi4.set_options({; 'scf_type': 'pk',; 'e_convergence': 1.e-5,; 'soscf': True,; 'optking__geom_maxiter': 50; }). Basis Sets; ==========. .. toctree::; :maxdepth: 2. basissets. .. _`sec:psiVariables`:. PSI Variables; =============. To harness the power of Python, |PSIfour| makes the most pertinent results; of each computation available to the Python interpreter for; post-processing. To demonstrate, we can embellish the previous example of; H\ :sub:`2` and H atom::. molecule h2 {; H; H 1 0.9; }; ; set basis cc-pvdz; set reference rhf; h2_energy = energy('scf'); ; molecule h {; H; }; ; set basis cc-pvdz; set reference uhf; h_energy = energy('scf'); ; D_e = psi_hartree2kcalmol * (2*h_energy - h2_energy); print ""De=%f"" % D_e. The :py:func:`~psi4.driver.energy` function returns the final result of the; computation, the requested total energy in Hartrees, which we assign to a; Python variable. The two energies are then converted to a dissociation; energy and printed to the output file using standard Python notation. Generally, there are multiple quantities of interest. Appendix; :ref:`apdx:psivariables_module` lists PSI variables variables set by each; module, and :ref:`apdx:psivariables_alpha` defines them. These can be; accessed through the :py:func:`~psi4.core.get_variable` function. For ex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:8917,avail,available,8917,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"inary (``gcp`` or ``mctc-gcp``) must be; found in your :envvar:`PATH` so that QCEngine can detect it. Check if and where; found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular gcp compilation, simply adjust its; position in the path environment variables. Running gCP; ~~~~~~~~~~~. At present there is a limited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correction (it does use ECPs down to first row elements); but is listed here for completeness of the ""3c"" family.; A :ref:`DFTD3 <sec:dftd3>` executable, classic or simple-dftd3, must also be available for; the HF-3c, PBEh-3c, or B97-3c methods to run.; A :ref:`DFTD4 <sec:dftd3>` python module must also be available for; the r2SCAN-3c or wB97X-3c methods to run.; These method are defined with their own basis set and thus no basis set should be set by the user.; |PSIfour| will select the intended basis sets: HF-3c/MINIX, PBEh-3c/def2-mSVP, B97-3c/def2-mTZVP, r2SCAN-3c/def2-mTZVPP, wB97X-3c/vDZP.; If a basis has previously been set for another calculation, use the slash syntax to ""empty"" the basis; option for the scope of the current calculation, ``energy(""hf3c/"")``. A few practical examples:. * HF-3c single point with default minix basis ::. energy('hf3c'). * PBEh-3c optimization with default def2-mSVP basis ::. optimize('pbeh3c'). * r2SCAN-3c with default basis after basis set ::. set basis cc-pvdz; energy('r2scan3c/'). If only BSSE/basis set corrections (rather than total energies) are of; interest, the ``gcp`` program can be run independently of the scf; through ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:4270,avail,available,4270,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,1,['avail'],['available']
Availability,"indepth 1 -maxdepth 1 -type d '!' -exec test -e ""{}/output.ref"" "";"" -print. .. _`faq:githubcodereview`:. How to do GitHub issue management and code review; -------------------------------------------------. a) Anyone, core-dev or not, is encouraged to review PRs. It's actually good practice for interacting with other open-source projects, where you don't have the advantage of knowing or working with the contributors. Before venturing into projects on GitHub where you don't know the maintainers, it doesn't hurt to read https://snarky.ca/setting-expectations-for-open-source-participation/ . b) Psi4 is a learning tool for all involved, so partial reviews in areas of confidence and questions and comments on PRs in general are encouraged. c) Approving before CI completes is fine, though it can be mildly personally embarrassing when CI catches something you didn't. d) All main branches (master and `1.N.x` maintenance) are protected by GitHub, including administrators, so even with write access, no one can accidentally push (master) or rewrite the history (master and maintenance). e) PR owners who also have maintainer status can merge their PRs as GitHub enforces two external reviews. f) Unless there's been a lot of discussion on core-dev about merge order, generally the 2nd positive reviewer merges the PR. Also fine to add review and leave merge for later. g) Presently only Azure is set up as a required-to-merge service. Incomplete GHA Ecosystem or Docs won't block merging, but we do usually let it complete before merging unless it's a trivial PR. h) We don't enforce branches to be up to date before merging since that'd be a lot of extra CI time and coordination when merging several PRs in a day. So, if a PR hasn't been updated in a while, and a reviewer is nervous about PR interference, fine to ask submitter to rebase. Or, there's an update button on the PR -- but if this is used, warn the submitted that their remote and local branches will be out of sync. For this reaso",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_git.rst:10863,mainten,maintenance,10863,doc/sphinxman/source/manage_git.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_git.rst,2,['mainten'],['maintenance']
Availability,"ing of all :math:`S^{2}` approximated terms; was turned off by default. Finally, in 2014 Parker et al. [Parker:2014:094106]_ empirically discovered that ; SAPT0 energies for van der Waals dimers with close contacts benefit from a slightly modified ; recipe that involves an empirically adjusted exponent :math:`\alpha = 3.0`. ; To distinguish it from its unscaled counterpart, this energy is denoted sSAPT0 (see [Parker:2014:094106]_). .. math:: E_{sSAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; p_{EX}(3.0) E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + p_{EX}(3.0) E_{exch-disp}^{(20)} ; + \delta_{HF}^{(2)}; :label: sSAPT0. where :math:`\delta_{HF}^{(2)}` is computed *without* any scaling. Please note that ; sSAPT0 is thus not the same as requesting ``exch_scale_alpha 3.0``, and that the; scaling is automatically performed by requesting ``energy('ssapt0')``. A First Example; ^^^^^^^^^^^^^^^. The following is the simplest possible input that will perform all; available SAPT computations (normally, you would pick one of these methods,; not all of them). ::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis aug-cc-pvdz; 	; 	energy('sapt0'); 	energy('sapt2'); 	energy('sapt2+'); 	energy('sapt2+(3)'); 	energy('sapt2+3'). The SAPT module uses the standard |PSIfour| partitioning of the dimer; into monomers. SAPT does not use spatial symmetry and needs the geometry; of the system to remain fixed throughout monomer and dimer calculations.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the ``no_reorient`` and ``symmetry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and o",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:13865,avail,available,13865,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"inking, consult. * To remove a conda installation, ``conda remove cppe``. **Source**. * .. image:: https://img.shields.io/github/tag-date/maxscheurer/cppe.svg?maxAge=2592000; :target: https://github.com/maxscheurer/cppe. * If using |PSIfour| built from source and you want CPPE built from; from source also,; enable it as a feature with :makevar:`ENABLE_cppe`,; and let the build system fetch and build it and activate dependent code. .. index:: PE; Using PE. .. _`sec:usingPE`:. Using the polarizable embedding model; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The inclusion of a PE description of the solvent into your calculation; is achieved by setting |globals__pe| ``true`` in your input file. .. note:: At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The CPPE library **cannot** exploit molecular point group symmetry. .. .. warning:: Analytic gradients and Hessians **are not** available with PE. Finite differences will be used; .. regardless of the ``dertype`` passed to the ``optimize`` function.; .. See :srcsample:`pcmsolver/opt-fd` for a sample input. .. The PCM model and molecular cavity are specified in a ``pcm`` section that has; .. to be explicitly typed in by the user. This additional section follows a syntax; .. that is slightly different from that of |Psifour| and is fully documented; .. `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PE would look like the following: ::. molecule pna {; C 8.64800 1.07500 -1.71100; C 9.48200 0.43000 -0.80800; C 9.39600 0.75000 0.53800; C 8.48200 1.71200 0.99500; C 7.65300 2.34500 0.05500; C 7.73200 2.03100 -1.29200; H 10.18300 -0.30900 -1.16400; H 1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:3913,avail,available,3913,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['avail'],['available']
Availability,"ins>`. * I'd rather not compile |PSIfour| or I don't have compilers |w---w|; :ref:`Goto Binary-Package <faq:binarypackage>` then consult; :ref:`plugins through conda <sec:condaplugins>`. * I really like parentheses and/or DBOC, so I want Psi3. |w---w|; Psi3 is available from `sourceforge <https://sourceforge.net/projects/psicode/files/psi/3.4.0/>`_, but you're on your own. .. comment * I am a core |PSIfour| developer, yet I'm still taking this quiz.; .. comment ; .. comment * I have minions whose Psi4 development work I want to supervise through this repository instance. Preferably, [Goto Fork-from-GitHub](#forkpsi4public); otherwise [Goto Fork-from-GitHub-Private](#forkpsi4private); .. comment ; .. comment * Just give me a repository to commit to directly. Preferably, [Goto Clone-from-GitHub](#clonepsi4public); otherwise [Goto Clone-from-GitHub-Private](#clonepsi4private). .. _`faq:binary`:. Binary Installer; ----------------. * **Get Initially**. Just go to http://www.psicode.org/downloads.html, select ""Installer"",; ""Stable Release"", and your choice of architecture and Python version,; and follow the instructions there. * **Build**. Not applicable as binary is pre-built. * **Get Updates** :ref:`directions <faq:updatepsi4>`. .. code-block:: bash. >>> conda update psi4. * **Contribute Back**. Not applicable as not under git control. .. _`faq:binarypackage`:. Conda Binary Package; --------------------. * **Get Initially**. The pre-compiled conda packages at https://anaconda.org/conda-forge/psi4; can be installed into an existing Anaconda or Miniconda distribution; according to :ref:`directions <faq:psi4pkg>`. Locally, install into; a conda environment as below. .. code-block:: bash. >>> conda create -n p4env psi4 -c conda-forge/label/libint_dev -c conda-forge; >>> conda activate p4env. .. code-block:: bash. >>> # nightly build (Linux and Windows only); >>> conda create -n p4env psi4/label/dev::psi4 -c conda-forge/label/libint_dev -c conda-forge; >>> # release; >>> co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst:4842,down,downloads,4842,doc/sphinxman/source/build_obtaining.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst,1,['down'],['downloads']
Availability,"into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. That la",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:5236,down,download,5236,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['download']
Availability,"ion. Because of this, in; practice level shifting is most useful in the initial phase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry is utilized to reduce number of; integrals.; OUT_OF_CORE; An out-of-core, unsorted algorithm using exact ERIs. Overcomes the; memory bottleneck of the current PK algorithm. Integrals are generated; only once, and symmetry is utilized to reduce number of integrals.; DIRECT; A threaded, sieved, integral-direct algorithm, with full permutational; symmetry. This algorithm is brand new, but seems to be reasonably fast; up to 1500 basis functions, uses zero disk (if DF pre-iterations are; turned off), and can obtain significant; speedups with negligible error loss if |scf__ints_tolerance|; is set to 1.0E-8 or so.; DF [:ref:`Default <table:conv_scf>`]; A density-fitted algorithm designed for computations with thousands of; basis functions. This algorithm is highly optimized, and is threaded; with a mixture of parallel BLAS and OpenMP. Note that this algorithm; should use the -JKFIT series of auxiliary bases, ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:28304,error,error,28304,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,2,"['avail', 'error']","['available', 'error']"
Availability,"is available as a conda package for Linux and macOS and Windows. * If using the Psi4conda installer, gCP has already been installed alongside. * If using the |PSIfour| conda package, the classic gcp conda package can; be obtained through ``conda install gcp -c psi4`` or the newer implementation; through ``conda install gcp-correction -c conda-forge``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the gcp executable can be obtained through ``conda install gcp -c psi4``; or ``conda install gcp-correction -c conda-forge``. * To remove a conda installation, ``conda remove gcp`` or ``conda remove gcp-correction``. **Source**. * .. image:: https://img.shields.io/badge/home-gCP-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp/getgcp. * If using |PSIfour| built from source and you want to build gCP from; from source also, follow the instructions provided with the source; (essentially, download the freely available tarball, unpack the source,; edit the Makefile to select a Fortran compiler, and run make). To be used by |PSIfour|, the program binary (``gcp`` or ``mctc-gcp``) must be; found in your :envvar:`PATH` so that QCEngine can detect it. Check if and where; found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular gcp compilation, simply adjust its; position in the path environment variables. Running gCP; ~~~~~~~~~~~. At present there is a limited interface to gCP that is used; only to implement the ""HF-3c"" [Sure:2013:1672]_, ""PBEh-3c""; [Grimme:2015:054107]_, ""B97-3c"" [Brandenburg:2018:b973c]_, ""r2SCAN-3c"" [Grimme:2021:064103]_,; and ""wB97X-3c"" [Muller:2023:014103]_ methods (both energy and gradient).; The interface can use classic or mctc-gcp executables but only the latter implements ""B97-3c"" and ""r2SCAN-3c"".; The newest wB97X-3c method doesn't use a gcp correc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:3100,down,download,3100,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,2,"['avail', 'down']","['available', 'download']"
Availability,"is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especially powerful when combined with density-matrix based ERI screening (set |globals__screening| to ``DENSITY``) and incremental Fock builds (set |scf__incfock| to ``TRUE``), which decrease the number of significant two-electron integrals to calculate. To control the LinK algorithm, here are the list of options provided.; ; |scf__linK_ints_tolerance|: The integral screening tolerance used for sparsity-prep in the LinK algorithm. Defaults to the |scf__ints_tolerance| option. .. index::; single: SOSCF. .. _`sec:soscf`:. Second-order Convergence; ~~~~~~~~~~~~~~~~~~~~~~~~. Second-order convergence takes into account both the gradient and Hessian to; take a full Newton step with respect to the orbital parameters. This results in; quadratic convergence with respect to density for SCF methods. For cases where; normal acceleration methods either fail or take many iterations to converge,; second-order can reduce the total time to solution. Solving second-order (SO) methods exactly would require an inversion of the; orbital Hessian (an expensive :math:`\mathbb{N}^6` operation); however, these; equations are normally solved iteratively where each iteration costs the same; as a normal Fock build (:math:`\mathbb{N}^4`). The overall SOSCF operation is; thus broken down into micro- and macroiterations where the microiterations; refer to solving the SOSCF equations and m",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:42834,toler,tolerance,42834,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['toler'],['tolerance']
Availability,"is sets are built into |PSIfour|. These are; summarized in Tables :ref:`Pople <table:basisPopleOrbital>`,; :ref:`Dunning <table:basisDunningOrbital>`, ; :ref:`Dunning (Douglas-Kroll) <table:basisDunningDK>`, ; :ref:`Karlsruhe <table:basisKarlsruhe>`,; :ref:`Jensen <table:basisJensen>`,; and :ref:`Other <table:basisOther>` in Appendix :ref:`apdx:basisTables`.; These tables are arranged so that columns indicate degree of; augmentation by diffuse functions (generally necessary for anions, excited; states, and noncovalent interactions) and DTQ56 indicate the :math:`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fitting :math:`(oo|`\ -type products,; such as encountered in SCF theory and the electrostatics/exchange terms of SAPT.; RI sets are appropriate for fitting :math:`(ov|`\ -type products, such as encountered in; MP2 and most SAPT terms. Citations for basis sets can be found in their; definition files at :source:`psi4/share/psi4/basis` in the source. For basis set availability by; element and the default value for keyword |globals__puream|, consult; Appendix :ref:`apdx:basisElement`. |PSIfour| uses the angular momentum convention below that; skips the letter ``J``. Note that Gaussian94 convention is; *not* to skip this letter.; |PSIfour| can use either convention for ``.gbs`` import (assuming; angular momentum levels are not skipped), but it will always output; in the ``HIK`` sequence. Another portion of the G94 format, labeling; angular mom",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:3263,avail,available,3263,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,1,['avail'],['available']
Availability,"ist beginning at |ccenergy__r_convergence|). It is defined; according to the quantum chemical method and so its default value is set; by each module individually. .. [#f7] For frequency computations by finite difference of energies,; convergence criteria are tightened further still to 10 for; |scf__e_convergence| and |scf__d_convergence| for SCF of HF or DFT, 11; for |scf__e_convergence| and |scf__d_convergence| for SCF of post-HF,; and 10 for E_CONVERGENCE for post-HF of post-HF. .. _`sec:scfrec`:. Recommendations; ~~~~~~~~~~~~~~~. The SCF code is quite flexible and powerful.; We have tried as much as possible to keep the number of options to; a minimum and to allow all options to be used in the presence of all other; options. Below are some rough words of advice about using the SCF code for; practical calculations:. * For |scf__guess|, the ``SAD`` guess is usually your; friend, even for open-shell systems (at the very least, it gets the right; number of electrons, unlike some other programs). For instance, we have found; that a simple SAD guess is often as good as doing a full SCF in a 3-21G basis; and then performing a cast-up, at a fraction of the cost. However, SAD and; DOCC/SOCC arrays do not play very well together at the moment.; * For wall time, ``DF`` may be a factor of ten or more faster than the exact; integral technologies available in |PSIfour|.; Use ``DF`` unless you need absolute accuracy or do not; have a -JKFIT auxiliary set for your orbital basis/atom type. Then use; ``DIRECT``.; * Don't mess with the DIIS convergence options unless convergence is a problem.; We have optimized the parameters for efficiency over a wide array of system; types.; * Buy a developer a beer!. The ""best-practice"" input file for HF is::. memory 1 GB # As much as you've got, the DF algorithm can use. molecule {; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pvdz; scf_type df; guess sad; ints_tolerance 1.0E-10 # Even this is epically tight, 1.0E-8 is OK; }. energy('scf'); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:61040,avail,available,61040,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"ists.txt~ (see [Feb 2023] update); # * In order for DF tests to yield right values when cartesian basis sets (6d) used, need ERI3_PURE_SH and ERI2_PURE_SH =OFF; # * In order for DF integrals to be present as nominally expected, need WITH_MAX_AM to mirror WITH_ERI3_MAX_AM; # * In order for DF calculations to not be limited by cheap integrals, need WITH_MAX_AM_ERI2 >= WITH_MAX_AM_ERI3; # * In order for DF fallback fitting to work with def2-universal on all elements, need WITH_ERI3_MAX_AM >=4 for energies; # * Since non-DF calculations often use DF guess or preiterations and DF calculations use 4-center integrals for sieving,; # a natural relationship between ERI and ERI3 for energy integrals is N and N+1.; # * The combination WITH_MAX_AM_ERI=""5;4;3"" and WITH_MAX_AM_ERI3=""6;5;4"" permits any 5Z energy, QZ gradient, and TZ Hessian and is sufficient for the full test suite.; # * Psi4 doesn't know the limits of the Libint2 library to which it's linked. `libint2::Engine::lmax_exceeded` errors will be thrown from l2; nothing from Psi4.; # * If ever use a libint2 with AM>7, edit the `init_spherical_harmonics` line in libmints/integral.cc; # * In selecting AM values, before `grep`ing lots of basis set files, consult the guide at end of this file.; # [Feb 2023]; # * Upon additions to the Libint2 API to allow runtime SHGAUSS switching, Psi4 can use LIBINT2_SHGAUSS_ORDERING=standard|gaussian; # *at Libint source generation time*. At Psi4 build time, it's going to be looking for standard (sss), so you'll have to; # edit the CMake to use a gss.; # * Upon additions to the Libint2 API to allow runtime SHGAUSS switching, Psi4 can no longer be adapted to use a libtool+cmake source.; # * Libraries of different AM are not hot-swappable in a Psi4 build, but they only require a relinking.; # [Jan 2024]; # * As of v1.9, Psi4 can use an upstream v2.8 Libint2. This is a libtool+cmake build, so `find_package(Libint2 ... COMPONENTS ...)` has no components to check. find_package(; Libint2; 2.7.2;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:2696,error,errors,2696,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['error'],['errors']
Availability,"itional section follows a syntax; .. that is slightly different from that of |Psifour| and is fully documented; .. `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PE would look like the following: ::. molecule pna {; C 8.64800 1.07500 -1.71100; C 9.48200 0.43000 -0.80800; C 9.39600 0.75000 0.53800; C 8.48200 1.71200 0.99500; C 7.65300 2.34500 0.05500; C 7.73200 2.03100 -1.29200; H 10.18300 -0.30900 -1.16400; H 10.04400 0.25200 1.24700; H 6.94200 3.08900 0.38900; H 7.09700 2.51500 -2.01800; N 8.40100 2.02500 2.32500; N 8.73400 0.74100 -3.12900; O 7.98000 1.33100 -3.90100; O 9.55600 -0.11000 -3.46600; H 7.74900 2.71100 2.65200; H 8.99100 1.57500 2.99500; symmetry c1; no_reorient; no_com; }. set {; basis sto-3g; pe true; e_convergence 10; d_convergence 10; scf_type pk; }. set pe {; potfile pna_6w.pot; }. scf_energy, wfn = energy('scf', return_wfn=True). The corresponding potential file `pna_6w.pot` can be downloaded; `here <https://raw.githubusercontent.com/maxscheurer/cppe/master/tests/potfiles/pna_6w.pot>`_. Keywords for CPPE; ~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/globals__pe.rst; .. include:: autodir_options_c/pe__potfile.rst; .. include:: autodir_options_c/pe__isotropic_pol.rst; .. include:: autodir_options_c/pe__induced_convergence.rst; .. include:: autodir_options_c/pe__maxiter.rst; .. include:: autodir_options_c/pe__border.rst; .. include:: autodir_options_c/pe__border_type.rst; .. include:: autodir_options_c/pe__border_n_redist.rst; .. include:: autodir_options_c/pe__border_redist_order.rst; .. include:: autodir_options_c/pe__border_rmin.rst; .. include:: autodir_options_c/pe__border_rmin_unit.rst; .. include:: autodir_options_c/pe__border_redist_pol.rst. .. _`cmake:cppe`:. How to configure CPPE for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |w---w| In |PSIfour|, CPPE is a library that provides additional; quantum chemical capabil",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:5369,down,downloaded,5369,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['down'],['downloaded']
Availability,"ity-Fitted Coulomb Construction; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The Resolution of the Identity (RI) can be used to decompose the normally 4-center ERI tensor into a combination of 3-center and 2-center components.; By reducing the dimensionality of the ERI tensor, application of the RI (often referred to as density-fitting, or DF) can be used to greatly speed up; SCF calculations. The reduction in ERI tensor rank also makes DF an appealing option for conventional SCF calculations, where the ERIs are stored ; in core or on disk. However, even when using DF, I/O becomes a significant bottleneck for systems of a sufficient size when performing conventional SCF; calculations. In principle, though, DF approaches can be utilized in an integral-direct context, gaining the benefits of DF methods without suffering the; I/O bottlenecks that conventional DF methods will eventually run into. One such approach, outlined by Weigend in [Weigend:2002:4285]_,; is available for use in Psi4 for the separate construction of the Coulomb contribution to the Fock matrix. This implementation can be used alongside ; Psi4's separate Exchange construction algorithms for composite Fock matrix construction by using the keyword DFDIRJ as the Coulomb construction ; algorithm when specifying |globals__scf_type| to use a composite algorithm combination (``DFDIRJ+K_alg`` in general, ; or ``DFDIRJ`` for DFT with non-hybrid functionals). . DFDIRJ supports multiple capabilities to improve performance. Specifically, DFDIRJ allows for a combination of density-matrix based ERI ; screening (set |globals__screening| to ``DENSITY``) and incremental Fock matrix construction (set |scf__incfock| to ``TRUE``). These two, when combined,; enable more aggressive screening of ERI contributions to the Coulomb matrix and thus greatly improve performance. .. _`sec:scfcosx`:. COSX Exchange; ~~~~~~~~~~~~~. The semi-numerical COSX algorithm described in [Neese:2009:98]_ evaluates; two-electron ERIs a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:37677,avail,available,37677,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"iver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333303,error,error,333303,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"jctc.5b00817 <https://doi.org/10.1021/acs.jctc.5b00817>`_). .. index:: architectures; .. index:: compilers. Supported Systems; =================. Architectures; The majority of |PSIfour| was developed on Mac and Linux machines; in; principle, it should work on any Unix system. The latest version of the; |PSIfour| program package may be obtained at `psicode.org <http://psicode.org>`_.; The package is available as a binary (:ref:`Installing from Binary; <sec:conda>`) for Linux, macOS (both Intel and Apple Silicon), or Windows (both native and via Windows Subsystem for; Linux aka `Bash on Ubuntu on Windows; <https://docs.microsoft.com/en-us/windows/wsl/about>`_); or as source code (git repository or zipped archive from; https://github.com/psi4/psi4.; Compilers; |PSIfour| has been successfully compiled using Intel, GCC, and Clang; compilers. :ref:`Compiler requirements <faq:approvedcxx>` are primarily; C++17 compliance (now GCC version 7.0 or above).; For some architectures, a :ref:`precompiled binary; <sec:conda>` is available. See :ref:`Compiling and Installing; <sec:installFile>` for details.; Python; |PSIfour| 1.1 and 1.2 are supported on Python 2.7, 3.5,; and 3.6. After 1.2, only Python 3 will be supported; `in accordance with other scientific software projects; <https://python3statement.org/>`_).; |PSIfour| 1.3 supports Python 3.6 and 3.7.; |PSIfour| 1.4 supports Python 3.6, 3.7, 3.8, and 3.9.; |PSIfour| 1.5 supports Python 3.7, 3.8, and 3.9.; |PSIfour| 1.6 supports Python 3.8, 3.9, and 3.10.; |PSIfour| 1.7 supports Python 3.8, 3.9, 3.10, and 3.11 (no binary packages for 3.11).; |PSIfour| 1.8 supports Python 3.8, 3.9, 3.10, and 3.11.; |PSIfour| 1.9 supports Python 3.8, 3.9, 3.10, 3.11, and 3.12.; The future plan is to (1) be compatible with 3.8 and above until there is a good reason to drop; older versions but (2) only build and test for versions conda-forge supports.; The current master supports 3.8, 3.9, 3.10, 3.11, and 3.12. .. index:: license. License; =======",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:27581,avail,available,27581,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"k', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:62918,error,error,62918,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"k', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:81137,error,error,81137,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"k:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files. |PSIfour| has a number of utilities that manage; input and output (I/O) of quantities to and from the hard disk. Most; quantities, such as molecular integrals, are intermediates that are not of; interest to the user and can be deleted after the computation finishes, but; pertinent details of computations are also written to a checkpoint file and; might be useful in subsequent computations. All files are written to the; designated scratch :ref:`numbered by content <apdx:psiFiles>` and labeled; with the process id, then are deleted at the end of the computation,; unless otherwise instructed by the user. A Python callable handle to the |PSIfour| I/O management routines is available,; and is called ``psi4_io``. To instruct the I/O manager to send all files to; another location, say ``/scratch/user``, add the following command to your input; file: ::. psi4_io.set_default_path('/scratch/user'). For batch jobs running through a queue, it might be more convenient to use an; environmental variable (in this case ``$MYSCRATCH``) to set the scratch directory;; the following code will do that::. import os; scratch_dir = os.environ.get('MYSCRATCH'); if scratch_dir:; psi4_io.set_default_path(scratch_dir + '/'). Individual files can be sent to specific locations. For example, file 12; contains information about the internal coordiantes of a geometry optimization.; The user may want to retain this in the working directory; (*i.e.*, where |PSIfour| was launched from) to analyze the optimization. This is; accomplished by the commands below::. psi4_io.set_specific_path(12, './'); psi4_io.set_specific_retention(12, True). # equivalent to above; psi4_io.se",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:3659,avail,available,3659,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['avail'],['available']
Availability,"ken-center/software/gcp/gcp_v202.tar.gz | classic |; +-------------------------------------+---------------------------------+-------------+------------+---------------------------+----------------------------------------------------------------------------------+----------+; | ``conda-forge::gcp-correction`` | ``bin/mctc-gcp`` | nyi | preferred | ``gcp_engine=""mctc-gcp""`` | https://github.com/grimme-lab/gcp | mctc |; +-------------------------------------+---------------------------------+-------------+------------+---------------------------+----------------------------------------------------------------------------------+----------+. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/dftd3/badges/version.svg; :target: https://anaconda.org/psi4/dftd3. * There are two implementations of DFTD3; see :ref:`table:empdispimpl` . The newer; ""s-dftd3"" one is preferred, while the older ""classic"" one will work for the immediate future.; |PSIfour| will automatically select whichever is available.; Starting with v1.9, only ""s-dftd3"" is supported, though the ""classic"" continues to work for many applications. * DFTD3 is available as a conda package for Linux and macOS and Windows. * If using the Psi4conda installer, DFTD3 has already been installed alongside. * If using the |PSIfour| conda package, the classic dftd3 conda package can; be obtained through ``conda install dftd3 -c psi4`` or the newer implementation; through ``conda install dftd3-python -c conda-forge``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the dftd3 executable can be obtained through ``conda install dftd3 -c psi4``; or ``conda install dftd3-python -c conda-forge``. * To remove a conda installation, ``conda remove dftd3`` or ``conda remove dftd3-python``. **Source**. * .. image:: https://img.shields.io/badge/home-DFTD3-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-cente",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:6256,avail,available,6256,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability,"l be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: DFTNL; .. _`sec:dftnl`:. DFT-NL; ======. .. codeauthor:: Daniel G. A. Smith and Holger Kruse; .. sectionauthor:: Holger Kruse. Non-local (NL), density based correlation energy from the VV10 kernel can be added; to arbitrary functionals. .. math:: E_{DFT-NL}=E_{DFT}+E_{NL}. For pre-defined functionals (see Functional overview in :ref:`this Table <table:dft_all>` ) it is sufficient to add `-NL` to; the functional name::. energy('b3lyp-nl'). Modification of the parameters `b` and `C` is done setting |scf__dft_vv10_b| and |scf__dft_vv10_c|. The `C` is usually left unchanged and the originally proposed; value of `C=0.0093` is used. Adding |scf__dft_vv10_b| to any functional activates the calculation of the VV10 kernel. A BLYP-NL calculation can be set as follows::. set DFT_VV10_B 4.0; energy('blyp'). The default `C` parameter will be used. Similar to |scf__dft_dispersion_parameters| the tuple |scf__nl_dispersion_parameters| can used::. set NL_DISPERSION_PARAMTERS [4.0]; energy('blyp'). which is equivalent to the example above. Further examples can be found in the respective :source:`regression test <tests/dft-vv10/input.dat>`. post-SCF time savings; ~~~~~~~~~~~~~~~~~~~~~. Substantial time-savings for energy calculations are available by evaluating the VV10 kernel only at the converged electron density, i.e. in a post-SCF fashion.; The deviations from the fully self-consistent treatment are usually minimal. To activate this set |scf__dft_vv10_postscf| to `true`.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst:2311,avail,available,2311,doc/sphinxman/source/dftnl.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftnl.rst,1,['avail'],['available']
Availability,"l cases, put Add-Ons in alphabetic order, ignoring any ""lib"" in the name. * :source:`CMakeLists.txt`. * Add the :samp:`ENABLE_{AddOn_name}` line. * Add the :samp:`external_{addon_name}` dependency to the ``psi4-core`` external project. * Add the :samp:`{AddOn_name}_DIR` variable passing to the ``psi4-core`` external project. * :source:`psi4/CMakeLists.txt`. * Add a block imitating Libint if Add-On required or CheMPS2 if not; required. * If there are shared resources to the external that need; to be found by |PSIfour| in PSIDATADIR, follow the ``efpfrag``; pattern of libefp to symlink them in. * :source:`psi4/src/CMakeLists.txt`. * No changes should be required unless both (1) code in export_*; or core.cc needs the :samp:`USING_{AddOn_name}` definition or; AddOn header includes and (2) no binary |PSIfour| module (as; opposed to library |PSIfour| module with the AddOn target linked; is itself a direct dependency of target ``core``. Basically,; try to leave this file alone, but if there are compile errors,; add the definitions/headers as needed. * :source:`psi4/src/psi4/`. * If a module is needed to interface the AddOn to |PSIfour|, try to; put ""interface"" in the name. Follow the pattern of CheMPS2 or gdma.; If non-required, be sure to conditionalize it with ``if(TARGET; AddOn::addon)`` in CMake files or ``#ifdef USING_AddOn`` in; source files. * If a separate module is not required, follow the patter of dkh; or simint with respect to libmints. Again, conditionalize as in; preceding bullet. * :source:`external/upstream/`. * Add a CMakeLists.txt that imitates another AddOn of similar; language and dependencies. Try to keep the format, messaging,; and variables passed as similar as possible so that differences; mean something. If BLAS/LAPACK or other common dependencies in; :source:`external/common` are needed, be sure to add them to the; ``DEPENDS`` argument. * The usual practice to to get everything cohesive between; the CMake for the AddOn repository and |PSIfour| and ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:4412,error,errors,4412,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['error'],['errors']
Availability,"l: ``ifort``. * Packages to install for specific OS or package managers:. * Ubuntu ``gfortran``; * conda ``gfortran_linux-64`` or ``gfortran_osx-64`` to get ``gfortran``. .. _`faq:macgfortran`:. How to obtain a Fortran compiler for Mac without Fink, MacPorts, or Homebrew; ----------------------------------------------------------------------------. Xcode does not provide a Fortran compiler. A way to get one is to download; the ``gfortran_osx-64`` conda package. This provides; ``gfortran`` compilers for Mac. The version is 4.8.5, which is quite old,; but the Fortran compiler will work. .. Xcode does not provide a Fortran compiler. Although a Fortran compiler is; .. not required for Psi4, a broken one can prevent correct configuration. Do; .. not download the latest version of GFortran from the HPC website; this is; .. unlikely to be compatible with your version of GCC. Instead, you should; .. run ``gcc -v`` to find out what version of GCC you're using, and then; .. download the corresponding GFortran from; .. <http://r.research.att.com/tools/>. If you configure Psi on a Mac without; .. any Fortran compiler it will set itself up correctly, so this is only; .. necessary if you want a Fortran compiler for other purposes. .. _`cmake:lapack`:. How to configure BLAS/LAPACK for building Psi4; ----------------------------------------------. **Role and Dependencies**. * Role |w---w| In |PSIfour|, BLAS and LAPACK control much of the speed; and efficiency of the code since computational chemistry is essentially; linear algebra on molecular systems. * Downstream Dependencies |w---w| |PSIfour| |dr| LAPACK Libraries. **CMake Variables**. * :makevar:`BLAS_TYPE` |w---w| CMake variable to specify which BLAS libraries to look for among ``MKL|OPENBLAS|ESSL|ATLAS|ACML|SYSTEM_NATIVE``.; * :makevar:`LAPACK_TYPE` |w---w| CMake variable to specify which LAPACK libraries to look for among ``MKL|OPENBLAS|ESSL|ATLAS|ACML|SYSTEM_NATIVE``.; * :makevar:`LAPACK_LIBRARIES` |w---w| CMake variable to",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:45259,down,download,45259,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['download']
Availability,"l_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:316429,error,error,316429,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"l_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:505085,error,error,505085,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"l_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:483993,error,error,483993,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"l_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:388292,error,error,388292,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,2,['error'],['error']
Availability,"l_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:24674,error,error,24674,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"lable if |PSIfour| is compiled with the :ref:`LibECPInt <cmake:ecpint>` library.; If a basis set is designed to use an; effective core potential, the ECP definition should be simply placed alongside; the orbital basis set definition, *c.f.* :ref:`sec:basissets-ecps`. All; information related to the definition and number of core electrons will; automatically be detected and no further input is required to use the; ECP-containing basis set. See :srcsample:`scf-ecp` and :srcsample:`dfmp2-ecp`; for examples of computations with ECP-containing basis sets. .. warning:: Prior to May 2022, v1.6, Psi4 used a built-in ECP code. Analytic derivatives of ECPs were not available. The HF and DFT derivatives were implemented in a semi-numerical scheme, where numerical ECP gradients were added to analytic SCF gradients. For post-SCF methods, the entire gradient computation needed to be run as finite difference of energies. .. warning:: As of May 2022, v1.6, Psi4 uses the LibECPInt library, and analytic derivatives and Hessians of ECPs are available. Analytic derivatives of molecular systems including ECPs should be available whenever the method has analytic derivatives, but these have so far only been verified for HF and DFT. .. warning:: ECPs have not been tested with projected basis set guesses or with FI-SAPT calculations. If you require this functionality, please contact the developers on GitHub and/or the `forum <http://forum.psicode.org>`_. .. _`sec:scfqmmm`:. External potentials and QM/MM; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. In addition to the implementation of :ref:`EFP <sec:libefp>` for accurate QM/MM; computations, |PSIfour| can perform more rudimentary QM/MM procedures via the; |scf__extern| keyword. The following snippet, extracted from the; :srcsample:`extern1` test case, demonstrates its use for a TIP3P external potential::. import numpy as np; external_potentials = [; [-0.834, np.array([1.649232019048,0.0,-2.356023604706]) / psi_bohr2angstroms],; [ 0.417, np.array([0.54475",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:53248,avail,available,53248,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"ld Conda ecosystem stack`_; * `Tag (pre)release`_; * `Build extra Conda packages for Psi4 channel`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_. .. _`faq:releaseprocedure`:. Release (e.g., ``v1.3``); ------------------------. * `Update samples`_ (if no prerelease); * `Collect new authors`_ (if no prerelease); * `Anticipate next release`_ (if no prerelease); * `Build Conda ecosystem stack`_ (if no prerelease); * `Run long tests`_; * `Do final pass before release tag`_; * `Tag (pre)release`_; * `Initialize release branch`_; * `Build extra Conda packages for Psi4 channel`_; * `Build Psi4conda set`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub release`_; * `Publish psicode.org release`_; * `Finalize release`_. .. _`faq:postreleaseprocedure`:. Post-Release (e.g., ``v1.8.2``); -------------------------------. * `Assemble postrelease changes`_; * `Tweak Conda for postrelease`_; * `Tag postrelease`_; * `Build Psi4conda set`_; * `Build extra Conda packages for Psi4 channel`_; * `Generate download page for psicode.org`_; * `Collect documentation snapshot`_; * `Publish GitHub postrelease`_; * `Publish psicode.org release`_; * `Finalize release`_. On January first; ----------------. * Screenshot https://anaconda.org/psi4/psi4 .; * Screenshot https://anaconda.org/conda-forge/psi4 .; * Add new year title and images to website; https://github.com/psi4/psicode-hugo-website/edit/master/content/posts/downloads.md .; * On the next day, check that the new year's plot appears at https://psicode.netlify.app/posts/downloads/ . Update copyright year; ---------------------. * ``cd ~/path/to/psi4``; * Primary target is licenses. - ``grep -rl ""(c) 2007-2017"" * | xargs sed -i '' ""s/(c) 2007-2017/(c) 2007-2018/g""``; - On Linux, drop the ``''`` in above command; - Need to do ``psi4/`` and ``docs/`` dirs. * Also, license in these files. - ``tests/runtest.py``; - ``README.md``. * Also, in content of :source:`doc/sph",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:2483,down,download,2483,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"le molecular system; (may be a dimer) whose geometry you are possession of and whose electronic; energy may be of interest. A reaction is a combination of one or more; reagent energies whose value you are interested in and a reference value; for which you may or may not be in possession of. A few examples follow.; In a database of interaction energies, the reagents are dimers and their; component monomers (usually derived from the dimer geometry), and the; reactions are the dimer less monomers energies. In a database of barrier; heights, the reagents are reactants, products, and transition-state; structures, and the reactions are the transition-states less; minimum-energy structures. Possibly you may have a collection of; structures to simply be acted upon in parallel, in which case the; structures are both the reagents and the reactions. The role of the; database.py file is to collect arrays and dictionaries that define the; geometries of reagents (GEOS), their combination into reactions (RXNM &; ACTV), available reference values for reactions (BIND), and brief comments; for reagents and reactions (TAGL). The journey from reagent geometries to; functional database.py file is largely automated, in a process described; below. * Prepare geometry files; Assemble xyz files for all intended reagent systems in a directory.; Follow the rules below for best results. The filename for each xyz; file should be the name of the system. lowercase or MixedCase is; preferable (according to Sherrill lab convention). Avoid dashes and; dots in the name as python won't allow them. If you're determined to; have dashes and dots, they must be replaced by other characters in the; process_input line, then translated back in the GEOS section; see; NBC10.py for an example. - The first line for each xyz file should be the number of atoms in the system. - The second line for each xyz file can be blank (interpreted as no comment), anything (interpreted as a comment), or two integers and anything",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst:2451,avail,available,2451,doc/sphinxman/source/quickadddatabase.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/quickadddatabase.rst,1,['avail'],['available']
Availability,"le': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229071,error,error,229071,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"le': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229495,error,error,229495,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"lecule h2o {; symmetry c1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; basis cc-pVTZ; scf_type df; df_basis_scf cc-pVTZ-RI; e_convergence 10; }. thisenergy = energy(""hf""). compare_values(nucenergy, h2o.nuclear_repulsion_energy(), 9, ""Nuclear repulsion energy"") #TEST; compare_values(refenergy, thisenergy, 9, ""Reference energy"") #TEST; compare_values(refenergy, variable('scf total energy'), 9, ""Reference energy"") #TEST. Of those small modifications, first, note the special comment at the top (starting with the ``#!`` comment marker). This should be descriptive since it is inlined into the manual (unless ``!nosample`` in the comment) as a sample input. Reference values are often assigned to variables for later use.; The compare_values function (along with several relatives in :source:`psi4/driver/p4util/testing.py` for comparing strings, matrices, etc.) checks that the computed values match these reference values to suitable precision. This function prints an error message and signals that the test failed to the make system, if the values don't match. Any lines of the input associated with the validation process should be flagged with ``#TEST`` at the end of each line, so that they can be removed when copying from the tests to the samples directory. ``output.ref``; --------------. When your test case is in final form, run it locally, rename the output to ``output.ref``, and check it into the repository alongside ``input.dat``.; While this isn't used for any testing machinery, it can be handy for users or developers to consult. .. _`faq:psithon_through_pytest`:. ``test_input.py``; -----------------. Starting March 2022, one can also run tests designed as above for CTest through pytest.; To bring the test to pytest's notice, add a file to the directory named ``test_input.py``.; Below is an example for the :source:`tests/ci-property/test_input.py` ::. from addons import *. @ctest_labeler(""quick;ci;cas;properties;cart;noc1""); def test_ci_property():; ctest_runner(__file__, [""gr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:9500,error,error,9500,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['error'],['error']
Availability,"les.; For convenience, the physical constants used within the |PSIfour| code (which; are obtained from `NIST CODATA 2014; <https://physics.nist.gov/cuu/Constants/archive2014.html>`_; are also automatically loaded as Psithon; variables (before |psirc| is loaded, so that the user's |psirc| values can; override the builtins (in the input file, not in the C++ code). The physical constants used within |PSIfour|, which are automatically; made available within all |PSIfour| input files are in :ref:`table:physconst`. .. .. literalinclude:: @SFNX_INCLUDE@psi4/driver/constants/physconst.py; .. :lines: 28-. In Psithon input files, prepend physical constants with ``psi_`` to; prevent clashes with user-defined variables (*e.g.*, ``psi_h``). In; PsiAPI mode, access as, *e.g.*, ``psi4.constants.h``. .. index:: memory; .. _`sec:memory`:. Memory Specification; ====================. By default, |PSIfour| assumes that 500 MiB of memory are available. While this is; enough for many computations, many of the algorithms will perform better if; more is available. To specify memory, the ``memory`` keyword should be used. The following; lines are all equivalent methods for specifying that 2 GB of RAM is available; to |PSIfour|::. # all equivalent. memory 2 GB; ; memory 2000 MB; ; memory 2000000 kB. Please note that memory can be specified both in IEC binary units (1 KiB = 1024 bytes) and SI units (1 kB = 1000 bytes). |PSIfour| recognizes and obeys both of them correctly. The units are not case sensitive (Kb and KB are equivalent to kB). By default, |PSIfour| performs a ""sanity check"" when parsing Psithon input files, enforcing a minimum memory requirement of 250 MiB. While it is generally not recomennded to do so, expert users can bypass this check by directly setting the number of bytes availble to |PSIfour|::. # setting available memory to 2 MB; set_memory_bytes(2000000). Please note that this memory setting only governs the maximal memory; usage of the major data structures, and actual to",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:3513,avail,available,3513,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"lin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: MRCC; .. _`sec:mrcc`:. Interface to MRCC by M. K\ |a_acute|\ llay; ==========================================. .. codeauthor:: Justin M. Turney and Andrew C. Simmonett; .. sectionauthor:: Justin M. Turney. *Module:* :ref:`Keywords <apdx:mrcc>`, :ref:`PSI Variables <apdx:mrcc_psivar>`, :source:`MRCC <psi4/src/psi4/mrcc>`, :ref:`Samples <apdx:testSuitemrcc>`. |PSIfour| contains code to interface to the MRCC program of M. K\ |a_acute|\ llay; and J. Gauss. The license and source code of the MRCC program must be; obtained from Mih\ |a_acute|\ ly K\ |a_acute|\ llay (`https://www.mrcc.hu/ <https://www.mrcc.hu/>`_). Installation; ~~~~~~~~~~~~. Follow the instructions provided with the source to build the MRCC programs.; To be used by |PSIfour|, ensure that the program binary (``dmrcc``) can be; found in your :envvar:`PATH`. If |PSIfour| is unable to execute the binary, an; error will be reported. Running MRCC; ~~~~~~~~~~~~. MRCC can be invoked in similar fashion as other theories provided in |PSIfour|.; To indicate MRCC as the target software, set |globals__qc_module|\ ``=MRCC``.; This is a change as of October 2022; previously, one prefixed the method by ""mr""; to indicate MRCC (e.g., ``energy('mrccsdt')``).; For example, if you want to obtain the CCSDT energy for water with cc-pVDZ using; MRCC simply provide the following::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; qc_module mrcc; }; energy('ccsdt'). ``'ccsdt'`` in the call to :py:func:`~psi4.driver.energy` plus ``qc_module=mrcc`` instructs |PSIfour| to first; perform an RHF calculation and then call MRCC to compute the CCSDT energy.; Here the ``qc_module=mrcc`` is optional since |PSIfour| has no builtin module; that can perform CCSDT. For a method like CCSD, no specification of |globals__qc_module|; will default to the CCENERGY module, and specification with v",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:1950,error,error,1950,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['error'],['error']
Availability,"list(APPEND sources; 3d_array.cc; blas_intfc.cc; blas_intfc23.cc; cc_excited.cc; dirprd_block.cc; dot_block.cc; dx_read.cc; dx_write.cc; fill_sym_matrix.cc; invert.cc; lapack_intfc.cc; mat_print.cc; newmm_rking.cc; pople.cc; probabil.cc; ras_set.cc; reorder_qt.cc; schmidt.cc; solve_pep.cc; timer.cc; ). # cmake_symbol_exists() or check_cxx_source_runs() are preferable to check_function_exists(); # according to CMake docs. But both require an explicit header, either in the call or in the code,; # and that's tough with multiple BLAS/LAPACK backends. So, we'll see if this is robust enough.; include(CMakePushCheckState); include(CheckFunctionExists); cmake_push_check_state(); list(APPEND CMAKE_REQUIRED_LIBRARIES tgt::lapack); check_function_exists(daxpby _has_daxpby); if(NOT _has_daxpby); message(WARNING ""${Yellow}Your BLAS/LAPACK library does not seem to be providing the DAXPBY subroutine. DAXPBY calls will be re-routed through DSCAL and DAXPY. If you are seeing this message, and you are not building with Apple Accelerate, you may want to re-check that the correct BLAS/LAPACK libraries are being used by the build system. Redo CMake configuration for changes to register.${ColourReset}""); endif(). check_function_exists(dggsvd3 _has_dggsvd3); check_function_exists(dggsvp3 _has_dggsvp3); if(NOT (_has_dggsvd3 AND _has_dggsvp3)); message(WARNING ""${Yellow}Your BLAS/LAPACK library does not seem to be providing the DGGSVD3 and DGGSVP3 subroutines. No re-routing is available. If you are seeing this message, and you are not building with Apple Accelerate, you may want to re-check that the correct BLAS/LAPACK libraries are being used by the build system. Redo CMake configuration for changes to register.${ColourReset}""); endif(); cmake_pop_check_state(). psi4_add_module(lib qt sources); target_compile_definitions(qt; PRIVATE; $<$<BOOL:${_has_daxpby}>:BLAS_HAS_DAXPBY>; $<$<BOOL:${_has_dggsvd3}>:BLAS_HAS_DGGSVD3>; $<$<BOOL:${_has_dggsvp3}>:BLAS_HAS_DGGSVP3>; FC_SYMBOL=${FC_SYMBOL}; ).",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libqt/CMakeLists.txt:578,robust,robust,578,psi4/src/psi4/libqt/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libqt/CMakeLists.txt,2,['robust'],['robust']
Availability,list(APPEND sources; aio_handler.cc; change_namespace.cc; close.cc; compose_err_msg.cc; done.cc; decode_errno.cc; error.cc; filemanager.cc; filescfg.cc; get_address.cc; get_filename.cc; get_global_address.cc; get_numvols.cc; get_volpath.cc; getpid.cc; init.cc; open.cc; open_check.cc; read.cc; read_entry.cc; rename_file.cc; rw.cc; tocclean.cc; toclast.cc; toclen.cc; tocprint.cc; tocread.cc; tocscan.cc; tocwrite.cc; volseek.cc; write.cc; write_entry.cc; ); psi4_add_module(lib psio sources); ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libpsio/CMakeLists.txt:114,error,error,114,psi4/src/psi4/libpsio/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/libpsio/CMakeLists.txt,2,['error'],['error']
Availability,"ll be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: Cfour; .. _`sec:cfour`:. Interface to CFOUR by J. Stanton & J. Gauss; ===========================================. .. codeauthor:: Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:cfour>`, :ref:`PSI Variables <apdx:cfour_psivar>`, :ref:`Samples <apdx:testSuitecfour>`. |PSIfour| contains code to interface to the Cfour quantum chemistry suite of; John F. Stanton (U. Texas, Austin) and J\ |u_dots|\ rgen Gauss (U. Mainz),; which is available after a license agreement from ; `http://www.cfour.de/ <http://www.cfour.de/>`_. Installation; ~~~~~~~~~~~~. Follow the instructions provided with the Cfour download to install the; executable or to build the source. To by used by |PSIfour|, the program; binary (:program:`xcfour`) must be found in your :envvar:`PATH` or; :envvar:`PSIPATH`. The ``GENBAS`` file containing basis sets in Cfour; format is not necessary for this interface, but if you prefer to access; basis sets the ""Cfour way"" using a custom ``GENBAS`` file (the distributed; one is included with the interface), it, too, must be in :envvar:`PATH` or; :envvar:`PSIPATH`. If |PSIfour| is unable to execute the binary, an error; will be reported. .. .. caution:: The p4c4 interface isn't in the master branch nor will it be in; .. the near future. To run this code, (1) build the ``c4`` branch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. pyt",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:1535,avail,available,1535,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability,"ll file; name; therefore, it is safe to use the same scratch directory for calculations; running simultaneously. Elementary Restart; ==================. The |PSIfour| intermediate files use the following naming scheme ::. psi.PID.name.filenumber. where by default, PID is the process number, name the name of the molecule,; and filenumber is listed in :ref:`content <apdx:psiFiles>`. For those modules providing restart capabilities, the previous file can; be provided through the``restart_file`` option ::. energy('scf',restart_file='./psi.PID.name.filenumber'). Only the filenumber is necessary for the driver to appropriately rename the; file and copy it to the scratch directory where |PSIfour| will expect it.; The restart capabilities of a specific method (if any) are found in that method's documentation. To provide multiple files, pass them as arguments of a Python list ::. energy('scf',restart_file=['./file1.filenumber','./file2.filenumber']). Note that the ``restart_file`` options is only available for energy procedures as of now. Executing |PSIfour| with the :option:`psi4 -m` (for; messy) flag will prevent files being deleted at the end of the run::. psi4 -m. The mechanism for restarting HF/DFT calculations is described in details :ref:`here <sec:scfrestart>`. .. _`sec:save_wfn`:. Saving the Wavefunction; =======================. A core object of |PSIfour| is the Wavefunction (short ``wfn``) object ::. energy, wfn = energy('scf',return_wfn=True). This C++/Python object (:py:class:`psi4.core.Wavefunction`) contains orbital; data, basis set information, result variables and more.; It can be saved either to a numpy file or converted to a python dictionary ::. # write the wavefunction to file; wfn.to_file('my_wfn'). # alternatively store the dict representation of the wavefunction in memory; wfn_dict = wfn.to_file(). In either form, its attributes can be set and edited.; This is an expert-level feature, though.; In general, let |PSIfour| create the Wavefunction, then tr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:5972,avail,available,5972,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['avail'],['available']
Availability,"ll``) in return for easy access in future to new; features and bug fixes. |w---w| :ref:`Goto Clone-from-GitHub; <faq:clonepsi4public>`. * I don't want to deal with this newfangled git, just give me a; tarball of the source code |w---w| :ref:`Goto Tarball-from-GitHub; <faq:tarballpsi4public>`. * I want to run *and* develop in |PSIfour|. * In keeping with the open-source philosophy, I don't mind my code being; as public as Psi4 itself during the development process. |w---w|; :ref:`Goto Fork-from-GitHub <faq:forkpsi4public>`. * I want to develop *using* |PSIfour| infrastructure and libraries, not; *on* them; I think a plugin might do. * I've got a |PSIfour| compilation. Use it, then consult :ref:`plugins; <sec:newplugins>`. * I'd rather not compile |PSIfour| or I don't have compilers |w---w|; :ref:`Goto Binary-Package <faq:binarypackage>` then consult; :ref:`plugins through conda <sec:condaplugins>`. * I really like parentheses and/or DBOC, so I want Psi3. |w---w|; Psi3 is available from `sourceforge <https://sourceforge.net/projects/psicode/files/psi/3.4.0/>`_, but you're on your own. .. comment * I am a core |PSIfour| developer, yet I'm still taking this quiz.; .. comment ; .. comment * I have minions whose Psi4 development work I want to supervise through this repository instance. Preferably, [Goto Fork-from-GitHub](#forkpsi4public); otherwise [Goto Fork-from-GitHub-Private](#forkpsi4private); .. comment ; .. comment * Just give me a repository to commit to directly. Preferably, [Goto Clone-from-GitHub](#clonepsi4public); otherwise [Goto Clone-from-GitHub-Private](#clonepsi4private). .. _`faq:binary`:. Binary Installer; ----------------. * **Get Initially**. Just go to http://www.psicode.org/downloads.html, select ""Installer"",; ""Stable Release"", and your choice of architecture and Python version,; and follow the instructions there. * **Build**. Not applicable as binary is pre-built. * **Get Updates** :ref:`directions <faq:updatepsi4>`. .. code-block:: bash. >>> conda",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst:4106,avail,available,4106,doc/sphinxman/source/build_obtaining.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst,1,['avail'],['available']
Availability,"lobals__scf_type| | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b3lyp, Hybrid DFT | |globals__scf_type| | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | ✓̲ ✓̳ ✓̲ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | wb97x, LRC DFT | |globals__scf_type| | ✓̲ ✓̳ | ✓̲ ✓̳ | | ✓̲ ✓̳ | ✓̲ ✓̳ | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | b2plyp, DH DFT\ [#r10]_ | |globals__scf_type| | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | ✓̲ ✓̲ ✓̳ ✓̳ ✓̲ ✓̲ | | | | | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#r1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#r2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#r3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#r4] Finite difference Hessians are not marked explicitly by ""∷"", but the capability can be gleaned from the gradient or energy availability.; .. [#r10] DH-DFT only available with DF-MP2",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_scf.rst:5043,avail,availability,5043,doc/sphinxman/source/preview_capabilities_scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_scf.rst,3,['avail'],"['availability', 'available']"
Availability,"lock, bounded by ``{...}``. This; will set all of these options as ""global"" options (meaning that they are; visible to all parts of the program). Most common |PSIfour| options can be; set in a globals section like this. If an option needs to be visible; only to one part of the program (*e.g.*, we only want to increase the; energy convergence in the SCF code, but not the rest of the; code), it can be placed in a section of input visible to that part of the; program (*e.g.*, ``set scf e_convergence 1.0E-8``). Back to our SAPT example, we have found that for basic-level SAPT; computations (*i.e.*, SAPT0), a good error cancellation is found; [Hohenstein:2012:WIREs]_ with the jun-cc-pVDZ basis (this is the; usual aug-cc-pVDZ basis, but without diffuse functions on hydrogen and; without diffuse :math:`d` functions on heavy atoms) [Papajak:2011:10]_. So,; we'll use that as our standard basis set. The SAPT code is designed to; use density fitting techniques, because they introduce minimal errors; while providing much faster computations [Hohenstein:2010:184111]_ ; [Hohenstein:2010:014101]_. Since we're using density fitting for the SAPT,; we might as well also use it for the Hartree--Fock computations that are; performed as part of the SAPT. We can specify that with ; ``scf_type DF``. Density fitting procedures require the use of auxiliary basis sets that; pair with the primary basis set. Fortunately, |PSIfour| is usually smart; enough to figure out what auxiliary basis sets are needed for a given; computation. In this case, jun-cc-pVDZ is a standard enough basis set; (just a simple truncation of the very popular aug-cc-pVDZ basis set); that |PSIfour| correctly guesses that we want the jun-cc-pVDZ-JKFIT; auxiliary basis for the Hartree--Fock, and the jun-cc-pVDZ-RI basis set; for the SAPT procedure. To speed up the computation a little, we also tell the SAPT procedure to; freeze the core electrons with ``freeze_core True``. The SAPT; procedure is invoked with the simple call",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:13714,error,errors,13714,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['error'],['errors']
Availability,"ls__puream|; is set internally from the orbital basis. * :ref:`sec:basisBuiltIn`; * :ref:`Specifying basis sets <sec:jobControl>`; * :ref:`Built-in basis sets by family <apdx:basisTables>`; * :ref:`Built-in basis sets by element <apdx:basisElement>`; * :ref:`User-Defined basis sets <sec:basisUserDefined>`; * :ref:`Auxiliary bases for built-in orbital basis sets <apdx:basisFamily>`. .. index:: basis set; available by family; .. _`sec:basisBuiltIn`:. Built-In Basis Sets; ===================. A wide range of orbital basis sets are built into |PSIfour|. These are; summarized in Tables :ref:`Pople <table:basisPopleOrbital>`,; :ref:`Dunning <table:basisDunningOrbital>`, ; :ref:`Dunning (Douglas-Kroll) <table:basisDunningDK>`, ; :ref:`Karlsruhe <table:basisKarlsruhe>`,; :ref:`Jensen <table:basisJensen>`,; and :ref:`Other <table:basisOther>` in Appendix :ref:`apdx:basisTables`.; These tables are arranged so that columns indicate degree of; augmentation by diffuse functions (generally necessary for anions, excited; states, and noncovalent interactions) and DTQ56 indicate the :math:`X\;=\zeta` levels; available. Several intermediate levels of diffuse space between the customary; non-augmented and augmented versions have been supplied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fitting :math:`(oo|`\ -type products,; such as encountered in SCF theory and the electrostatics/exchange terms of SAPT.; RI sets are appropriate for fitting :math:`(ov|`\ -type products, such as encountered in; MP2 and most SAPT terms. Citations for basis sets can be found in their; definition files at :source:`psi4/share/psi4/b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst:2815,avail,available,2815,doc/sphinxman/source/basissets.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets.rst,1,['avail'],['available']
Availability,"ltdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485972,error,error,485972,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ltdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'n",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:122594,error,error,122594,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"lude:: autodir_options_c/ccenergy__mp2_amps_print.rst. Larger Calculations; ^^^^^^^^^^^^^^^^^^^. Here are a few recommendations for carrying out large-basis-set coupled; cluster calculations with |PSIfour|:. * In most cases it is reasonable to set the ``memory`` keyword to 90% of; the available physical memory, at most. There is a small amount of overhead; associated with the; coupled cluster modules that is not accounted for by the internal CC memory; handling routines. Thus, the user should *not* specify the entire; physical memory of the system, or swapping is likely. However, for especially large; calculations, it is better to set the ``memory`` keyword to a value less than 16 GB. * Set the |ccenergy__cachelevel| keyword to ``0``.; This will turn off cacheing, which, for very large calculations, can; lead to heap fragmentation and memory faults, even when sufficient; physical memory exists. * Set the |globals__print| keyword to ``2``. This; will help narrow where memory bottlenecks or other errors exist in the; event of a crash. .. _`sec:eomcc`:. Excited State Coupled Cluster Calculations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. A complete list of keywords related to; coupled cluster linear response is provided in Appendix :ref:`apdx:cceom`.; The most important keywords associated with EOM-CC calculations are:. .. include:: autodir_options_c/cceom__roots_per_irrep.rst; .. include:: autodir_options_c/cceom__e_convergence.rst; .. include:: autodir_options_c/cceom__singles_print.rst; .. include:: autodir_options_c/cceom__schmidt_add_residual_tolerance.rst; .. include:: autodir_options_c/cceom__eom_guess.rst. Linear Response (CCLR) Calculations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Linear response computations are invoked like ``properties('ccsd')``; or ``properties('cc2')``, along with a list of requested properties.; A complete list of keywords related to; coupled cluster linear response is provided in Appendix :ref:`apdx:ccresponse`. The most important keywor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst:9909,error,errors,9909,doc/sphinxman/source/cc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cc.rst,1,['error'],['errors']
Availability,"machinery allows developers to access; the classes defined in the innards of |PSIfour|, with only the small plugin; code requiring recompilation during development. The resulting lightweight; code can be maintained and distributed independently of |PSIfour|, making this; a good strategy for development, especially in cases where tighter integration; of the new code with existing |PSIfour| machinery is required than that; afforded by the Numpy based strategy outlined in the :ref:`sec:prog_psi4numpy`; section. For details about how to write these plugins, see the; :ref:`sec:plugins` section. .. _`sec:prog_fullintegration`:. Incorporating code into |PSIfour|; ---------------------------------. For features to be incorporated fully into the |PSIfour| ecosystem, changes to; the core routines are inevitable. However, the programmer should think very; carefully about the most appropriate language for the task in hand. Let's; consider a new feature that downloads some data from an external source and; then performs some kind of expensive matrix operation on those data. Because; Python has a rich set of tools for obtaining data from external sources,; writing this tool in the Python layer is a natural choice. If we know that the; matrix will always be small enough to fit in memory, we can simply rely on the; routines present in NumPy to do the heavy lifting and the code is easy to; implement entirely in the Python layer. In the case where the matrix operation; is non-standard and requires some specialized code to handle disk-based; storage, the decision to write in Python is less clear cut. It is certainly; possible to write these out-of-core routines using Numpy primitives, but there; are a number of tools in |PSIfour| already to perform tasks like these that are; required, *e.g.*, for cluster. In this case, a good design would be to write a; simple piece of code in the C++ layer that performs the matrix operation on a; given input, using the I/O routines available in |PSIfo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst:5336,down,downloads,5336,doc/sphinxman/source/prog_ways_to_add.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_ways_to_add.rst,1,['down'],['downloads']
Availability,"mand tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. Now you need only specify a scratch directory; (see :ref:`sec:Scratch`) by replacing the placeholder in the following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. .. note:: Above commands use bash for installation and set up your environment for bash at runtime. To use csh at runtime, follow the on-screen directions at the end of the installation or consult step 7 below. .. _`sec:slowconda`:. Detailed Installation of Miniconda; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. https://docs.conda.io/en/latest/miniconda.html. .. 0. Sanity check. If you already have Miniconda or Anaconda, skip to step 5. The whole installation takes ~5 min; reading this page takes far longer.; ..; .. 1. Get ``bzip2``. You'll need this slightly exotic command so run ``which`` to test for availability, and install from ``yum``, source, *etc.* if unavailable. You'll also need an internet connection for downloading; computers behind a firewall or with restricted login domains are eligible. So long as you can ssh *into* the computer to an account with write permissions and can connect to the internet *from* the computer, all is well.; ..; .. .. code-block:: bash; ..; .. # check; .. >>> which bzip2; .. /usr/bin/bzip2; .. >>> curl -O ""http://psicode.org/psi4manual/master/introduction.html""; .. >>> ls -1; .. introduction.html; ..; .. 2. Get Miniconda installer script. Either issue the command below or download from http://conda.pydata.org/miniconda.html by clicking on the appropriate link for your OS. If you already have or would prefer to use Anaconda rather than Miniconda, that's fine. Locate or install Anaconda, check that ``conda`` is in your path, and skip to step 4.; ..; .. .. code-block:: bash; ..; .. >>> curl -O ""http://repo.continuum.io/miniconda/Miniconda-l",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:18452,avail,availability,18452,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['avail'],['availability']
Availability,"matrix A with the row-major BLAS wrappers effectively; involves ``L^T L = A``. On of the biggest consequences is in linear equations:; The input/output forcing/solution vector must be explicitly formed in; column-major indexing (each vector is placed in a C++ row, with its; entries along the C++ column). This is visualized in C++ as the transpose; of the forcing/solution vector. All routines are declared in qt.h. Each; routine is prefixed with a ``C_``, followed by the standard Fortran name of; the routine, in capital letters. Input parameters of single primitives; (int, double, unsigned long int, char, ...) are passed by value. Arrays,; including multidimensional arrays, are required to be in contiguous memory; (as provided by block_matrix, for example), and are passed by providing a; pointer to the first double or int element of the data (this is array[0]; if array is ``double**``). All routines return an int INFO with error and; calculation information specific to the routine, In Fortran, this is the; last argument in all LAPACK calls, but should not be provided as an; argument here. For char arguments, case is insensitive. A Cholesky; transform example is shown::. // BLAS/LAPACK; #include ""psi4/libqt/qt.h""; // block_matrix, init_array; #include ""psi4/libciomr/libciomr.h""; ; using namespace psi;; ...; int n = 100;; ; // Allocate A matrix;; double** A = block_matrix(n,n);; ; // Call the LAPACK DPOTRF to get the Cholesky factor; // Note this works in column-major order; // The result fills like:; // * * * *; // * * *; // * *; // *; // instead of the expected:; // *; // * *; // * * *; // * * * *; //; int info = C_DPOTRF('L', n, A[0], n);; ; // A bit painful, see below; fprintf(outfile, ""A:\n"");; print_mat(A,n,n,outfile);. // Block matrix should be free_blocked; free_block(A);. Important Lapack Routines; ^^^^^^^^^^^^^^^^^^^^^^^^^. * DSYEV: Eigenvalues and, optionally eigenvectors of a symmetric matrix. Eigenvectors take up to 10x longer than eigenvalues.; * DGEEV: Ei",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:6853,error,error,6853,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['error'],['error']
Availability,"med ``fsapt.py`` analysis using the same; functional group names in ``source-fsapt-dir-1`` and ``source-fsapt-dir-2``. The; difference F-SAPT partition entries are computed as :math:`E^{\Delta} = E^{1} -; E^{2}`, and the geometries for order-1 ``.pdb`` visualization files are taken; from system 1. I-SAPT: A Representative Example; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. caution:: As of April 2018, you can't specify molecule fragments; with an unphysical multiplicity like the singlet OH fragments in; the molecule below, especially as (again in the example below) the; overall molecule needs to be a singlet, which |PSIfour| doesn't at; present let be set independently. For situations like this, use the; temporary input pattern in :srcsample:`isapt1` . Below, we show an example of using I-SAPT0/jun-cc-pVDZ to analyze the; interaction between the two phenol groups in a 2,4-pentanediol molecule.; This example is; explicitly included in :srcsample:`isapt1`. A video; lecture explaining this example is available; `I-SAPT#1 <https://www.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_,; while an additional video describing how to plot the density and ESP fields from; the I-SAPT embedding procedure is available `I-SAPT#2 <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_::. memory 1 GB; ; molecule mol {; 0 1; O 0.39987 2.94222 -0.26535; H 0.05893 2.05436 -0.50962; --; 0 1; O 0.48122 0.30277 -0.77763; H 0.26106 -0.50005 -1.28451; --; 0 1; C 2.33048 -1.00269 0.03771; C 1.89725 0.31533 -0.59009; C 2.28232 1.50669 0.29709; C 1.82204 2.84608 -0.29432; C 2.37905 4.02099 0.49639; H 3.41246 -1.03030 0.19825; H 2.05362 -1.84372 -0.60709; H 1.82714 -1.16382 0.99734; H 2.36243 0.42333 -1.57636; H 3.36962 1.51414 0.43813; H 1.81251 1.38060 1.28140; H 2.14344 2.92967 -1.33843; H 3.47320 4.02400 0.48819; H 2.03535 3.99216 1.53635; H 2.02481 4.96785 0.07455; symmetry c1; no_reorient; no_com; }; ; # => Standard Options",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:12448,avail,available,12448,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['avail'],['available']
Availability,"module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13771,error,error,13771,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19029,error,error,19029,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'refere",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:149835,error,error,149835,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv rohf gradients for ccsd(t) by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:151303,error,error,151303,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:158767,error,error,158767,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:164103,error,error,164103,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:93940,error,error,93940,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"n ``~/.condarc``. But proficient; conda users may prefer to treat ``psi4`` as a normal conda package and; not have another large Miniconda installation (including the hefty MKL); lying around just for |PSIfour|. Installing just the ``psi4`` package; itself will get you |PSIfour|, whatever add-ons require linking in to; |PSIfour| (*e.g.*, CheMPS2 and PCMSolver), and the correct versions of; packages. However, just the ``psi4`` package won't get you add-ons that; don't need linking (*e.g.*, adcc and v2rdm_casscf). .. Conda Proficients; .. ^^^^^^^^^^^^^^^^^; ..; .. or dependencies; .. from the ""right"" channels, which can be important for issues of fPIC; .. and libc++ vs. libstdc++. So ``conda create -c psi4 -n p4env psi4 dftd3; .. v2rdm_casscf`` *should* be equivalent to running the psi4conda installer,; .. but I wouldn't count on it. Instead, an `explicit environment spec; .. <http://conda.pydata.org/docs/using/envs.html#build-identical-conda-environments-with-urls>`_; .. will be available for download.; ..; .. .. code-block:: bash; ..; .. # Linux; .. >>> curl -o explicit-latest.sh ""https://repo.continuum.io/miniconda/explicit2-latest-Linux-x86_64.txt""; .. >>> conda create --name p4env --file explicitenv2-latest-Linux-x86_64.txt; .. >>> conda activate p4env; ..; .. .. code-block:: bash; ..; .. # Mac; .. >>> curl -o explicit-latest.sh ""https://repo.continuum.io/miniconda/explicit2-latest-MacOSX-x86_64.txt""; .. >>> conda create --name p4env --file explicitenv2-latest-MacOSX-x86_64.txt; .. >>> conda activate p4env. .. _`sec:quickconda`:. Quick Installation; ^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour|. Installs; Miniconda into ``$HOME/miniconda`` and the |PSIfour| executable into the; main conda environment at ``$HOME/miniconda/bin/psi4``. .. code-block:: bash. # Linux or Mac, Py2 or Py3 for main environment (immaterial to Py for Psi4): select between four lines; # Windows: in Ubuntu shell, select either Linux line; >>> curl -o Miniconda-lat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:15519,avail,available,15519,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,2,"['avail', 'down']","['available', 'download']"
Availability,"n interpreter looks for modules to import. For ; |PSIfour|, these are generally :ref:`plugins <sec:plugins>` or databases. Modify :envvar:`PSIPATH` through normal Linux shell commands before invoking :command:`psi4`. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PSIPATH /home/user/psiadditions:/home/user/gbs. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PSIPATH=/home/user/psiadditions:/home/user/gbs. .. envvar:: PYTHONPATH. Path in which the Python interpreter looks for modules to import. For ; |PSIfour|, these are generally :ref:`plugins <sec:plugins>` or databases. .. note:: While once configuring |PSIfour| through :envvar:`PSIPATH` was preferred; to modifying this environment variable, now `PYTHONPATH` is preferred for; Python moduels to accommodate QCEngine. Modification of :envvar:`PYTHONPATH` can be done in three ways, equivalently. * Normal Linux shell commands. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PYTHONPATH /home/user/psiadditions:$PYTHONPATH. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PYTHONPATH=/home/user/psiadditions:$PYTHONPATH. * Place the path in the |psirc| file so that it is available for ; every |PSIfour| instance. ::. sys.path.insert(0, '/home/user/psiadditions'). * Place the path in the input file, either absolute or relative. ::. sys.path.insert(0, '../../psiadditions'); sys.path.insert(0, '/home/user/psiadditions'). .. envvar:: PSIDATADIR. Path in which the |PSIfour| executable looks for its non-compiled; dependencies (*i.e.*, basis sets, databases, quadratures, *etc.*).; This path is always known by the |PSIfour| program or shared library,; so this variable is relevant primarily to developers wanting a; non-standard location. Value should be set; to directory containing driver, basis, *etc.* directories, generally; ending in ``share/psi4``.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:24922,avail,available,24922,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['avail'],['available']
Availability,"n plain string, ``variables_[""FCI TOTAL ENERGY""]``, add a plain string line as a single-line comment, so the scraper can find it.; * Add new places to scrape for variables to :source:`doc/sphinxman/document_psivariables.pl`; * For now, we're scraping both global and Wfn variables; * All of these show up in referenceable appendices like ``apdx:detci_psivar``; * Plugins: ``doc.rst`` text, \*.py modules, and C++ keywords in ``psi4/tests/plugin_*`` plugin directories (disabled at the moment); * PSI Files: scratch file names and numbers in :source:`psi4/include/psi4/psifiles.h`. Some documentation is even extracted from |PSIfour| objects at runtime. * psi4: docstrings for the C++ submodule ``psi4.core`` and the Python submodule ``psi4.driver`` that comprise |PSIfour|. C++ docstrings from ""core"" and ""export"" files in :source:`psi4/src/`, and Py docstrings from :source:`psi4/driver/`.; * DFT: functional availability and characteristics as encoded in :source:`psi4/driver/procrouting/dft`; * BasisFamily: fitting basis sets for each orbital basis as encoded in :source:`psi4/driver/qcdb/basislistdunning.py` and :source:`psi4/driver/qcdb/basislistother.py`. Building all the documentation takes ~10 minutes. There is now good; dependency structure built into the :source:`doc/sphinxman/CMakeLists.txt`; , so very long builds should be infrequent (unless you're touching; :source:`psi4/src/read_options.cc` or the driver. Note that not all dependencies are; encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, remove (in the object; directory) ``doc/sphinxman`` and start from scratch. Even ~10 minutes of build time can be annoying when developing; documentation and testing ``rst`` files. In that situation, use the target; below which builds only the written docs (not autodocs) in; ``psi4/doc/sphinxman/source`` quickly, though with a lot of warnings for; unresolved links::. >>> make sphinxmini. reStructuredText; ^^^^^^^^^^^^",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst:5480,avail,availability,5480,doc/sphinxman/source/documentation.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst,1,['avail'],['availability']
Availability,"n redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:documentation`:. Updating the |PSIfour| Users' and Programmers' Manual; =====================================================. |PSIfours| documentation is generated by `Sphinx <https://www.sphinx-doc.org/>`_; and lives in :source:`doc/sphinxman`. It is available online at; `<http://psicode.org/psi4manual/master/index.html>`_; for the latest development branch. Installing Sphinx; ^^^^^^^^^^^^^^^^^. Installing Sphinx is only necessary to build the documentation ; yourself, locally. The docs are served from; from psicode, so most users and developers won't need Sphinx; installed. Nevertheless, installation is easy.; Math is rendered through MathJax, so LaTeX and dvipng are no longer needed.; The sphinx executable should be in your path at CMake configure time for; documentation targets to be available. * Binary: ``conda install sphinx``; * Binary: ``conda env create -f devtools/conda-envs/docs-cf.yaml``; * Binary: ``pip install -U Sphinx``; * Source: https://pypi.org/project/Sphinx/. * Check:. >>> which sphinx-build; //anaconda/bin/sphinx-build; >>> sphinx-build --version # needs >= 3.5; Sphinx (sphinx-build) 3.5.3; >>> cmake; ...; -- Documentation targets available: sphinxman (html), sphinxmini (quick html), sphinxpdf (LaTeX --> PDF); ... Documentatio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst:1323,avail,available,1323,doc/sphinxman/source/documentation.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst,1,['avail'],['available']
Availability,"n runtime error message). * py-cpuinfo (provides ``import cpuinfo``) https://github.com/workhorsy/py-cpuinfo (transitive dependency of QCEngine). * psutil https://github.com/giampaolo/psutil (transitive dependency of QCEngine). Dropped Dependencies:. * Boost (September 2016; dropped by v1.1). * deepdiff https://github.com/seperman/deepdiff (May 2019; dropped by v1.4). * MPFR https://www.mpfr.org/ (Mar 2022; dropped by v1.6) no longer needed to compile against Libint2. * Perl for testing (April 2022; dropped by v1.6). .. _`faq:addondepend`:. What are the add-on capabilities for Psi4 and what are their dependencies; -------------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want, and examine; the links for appropriate enabling arguments to ``cmake``. Note that many; are available pre-built from conda. * |PSIfour| Testing. * CTest https://cmake.org/download/; * pytest (for installed testing) http://doc.pytest.org/en/latest/; * pytest-xdist (for installed testing many tests at once) https://github.com/pytest-dev/pytest-xdist. * |PSIfour| Documentation (available pre-built at :psicode:`psi4manual/master/index.html`). * Sphinx (3.5+) http://sphinx-doc.org; * Perl (for some auto-documentation scripts) https://www.perl.org/; * nbsphinx (for converting Jupyter notebooks) http://nbsphinx.readthedocs.io/en/jupyter-theme/; * sphinx-psi-theme https://github.com/psi4/sphinx-psi-theme; * See :source:`[""message"" lines] <doc/sphinxman/CMakeLists.txt>` for advice on obtaining docs dependencies or :source:`[conda env spec] <devtools/conda-envs/docs-cf.yaml>`; * See :source:`.github/workflows/docs.yml` for full docs building procedure to follow. * Ambit |w---w| https://github.com/jturney/ambit. * :ref:`CheMPS2 <cmake:chemps2>` |w---w| :ref:`[what is CheMPS2?] <sec:chemps2>`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:9929,avail,available,9929,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"n the indices into any grouping; we desire, we may select any grouping of the indices to use as row and; column indices. For example, since i; × j; × a; = b. we could also construct a different supermatrix for these same; integrals, using (i,j,a) as the compound row index and b as the column; index. These same concepts apply to any multi-index quantity. III. Library Initialization . Before the library may be used, it must first be initialized; via the dpd_init() function. This function; requires the following information (see dpd.h for proper syntax):; int dpd_init(int dpd_num, int nirreps, long int memory, int cachetype, ; int *cachefiles, int **cachelist, struct dpd_file4_cache_entry *priority, ; int num_subspaces, int *orbspi, int *orbsym, ...);. dpd_num - An integer identifier for the current DPD; setup. Only two active DPD's are currently allowed, so this value; can be either 0 or 1.; nirreps - The number of irreducible representations in; the point group.; memory - The amount of available memory in bytes.; cachetype - The type of file cacheing desired (see below). If this; is 0, then a priority-based cache is used; if it's 1 then a; ""least-recently-used"" method is applied.; cachefiles - See below.; cachelist - See below.; priority - See below.; num_subspaces - The number of orbital subspaces to be; used. If the programmer uses only occupied and virtual spaces,; for example, this would be set to 2.; For each value of num_subspaces, the following; two arrays must also be provided:; orbspi - An irrep population array,; i.e., the number of orbitals per irrep in the current; subspace.; orbsym - An orbital symmetry array,; i.e., the irrep value for each orbital in the current; subspace. For four-index quantities, the dpd_init() function; pre-computes a number of orbital lookup arrays about all pairwise; combinations of the given orbital subspaces, including information; regarding possible permutational symmetry or antisymmetry among the; orbitals. libdpd then assigns",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html:4348,avail,available,4348,doc/sphinxman/source/attic/libdpd.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libdpd.html,2,['avail'],['available']
Availability,"n with value ``mrcc`` is; required to route the computation to the MRCC program.; For a CCSDT(Q) energy, simply use ``'ccsdt(q)'`` in the call to; :py:func:`~psi4.driver.energy`. MRCC can be used to perform geometry optimization and; frequency calculations for electronic ground states only. At this time, |PSIfour| is only able to automatically generate the proper; input file for MRCC for the methods listed in table below.; To utilize any method described in the table, you can call it directly; For other methods, you will be required to; use the MRCC keywords described in Appendix :ref:`apdx:mrcc`.; Perturbative methods (``ccsd(t)``, ``ccsdtqp(h)_l``, etc.); are available with |scf__reference| ROHF in versions of MRCC published; at least after July 1, 2014. When using ROHF-CCSDT(Q), MRCC will compute and report two variants:; CCSDT(Q)/A and CCSDT(Q)/B. [Kallay:2008:144101]_ |PSIfour| will save both energies but will use; the CCSDT(Q)/B as the CCSDT(Q) energy. CCSDT(Q)/B has been found to be; more robust by Martin. [Martin:2014:785]_. .. include:: mrcc_table_energy.rst. Frozen-core approximation is also supported in the MRCC interface.; To optimize CH\ :sub:`4` with CCSDT freezing the 1\ *s* on carbon, run::. molecule H2O {; O; H 1 r; H 1 r 2 104.5; ; r = 1.0; }; ; set {; basis cc-pVDZ; freeze_core true; }; ; optimize('ccsdt'). Interface Details; ~~~~~~~~~~~~~~~~~. .. _`table:mrcc__mrcc_method`:. .. table:: MRCC methods . +---------------------+--------------+-------------------------------------------------------------+; | |mrcc__mrcc_method| | Method | Description | ; +=====================+==============+=============================================================+ ; | 1 | CC | |; +---------------------+--------------+-------------------------------------------------------------+; | 2 | CC(n-1)[n] | |; +---------------------+--------------+-------------------------------------------------------------+; | 3 | CC(n-1)(n) | (CC(n-1)[n] energy is also calculated) | ; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst:3939,robust,robust,3939,doc/sphinxman/source/mrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/mrcc.rst,1,['robust'],['robust']
Availability,"n, the Davidson algorithm can automatically; adapt |scf__follow_step_scale| to find a new SCF minimum. If |scf__max_attempts| > 1, additional attempts; will automatically increment |scf__follow_step_scale| by 0.2 every time the SCF falls back to the previously; found unstable minimum. The increment can be adjusted by setting |scf__follow_step_increment|.; The default value is 0.2; adjust if needed to try different values of |scf__follow_step_scale| in a single computation. The Davidson solver for the eigenvalues is controlled through several keywords. |scf__solver_maxiter|: maximum number of iterations. |scf__solver_convergence|: eigenvector convergence threshold. |scf__solver_n_root|: Solve for N eigenvectors in each irreducible representation. |scf__solver_roots_per_irrep|: The number of eigenvectors to solve in each irreducible representation. An array of as many integers as there are irreducible representations. |scf__solver_n_guess|: Use N guess vectors, this needs to be larger than the number of roots so that the lowest ones can be captured reliably. Defaults to 4 guess vectors per root. .. warning:: Prior to Dec 2022, v1.7, Psi4 had a different set of keywords controlling instability analysis, and those were included in the CPHF module rather than the SCF module.; .. warning:: Extending Davidson instability analysis to Kohn-Sham references is under development. As of 1.7, only LDA functionals are currently supported. In case convergence problems are encountered during the Davidson procedure, file a bug report.; If the solver seems to converge on the wrong eigenvalue, try increasing |scf__solver_n_guess|.; Otherwise, if the solver is almost converged but reaches the maximum number of iterations, try increasing; |scf__solver_maxiter|. .. _`sec:scf-ecps`:. Effective core potentials (ECPs); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| supports the use of effective core potentials to describe the; innermost electrons in heavy elements.; ECPs are only available if |P",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:51283,reliab,reliably,51283,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['reliab'],['reliably']
Availability,"nabling Fortran language even when Fortran addons enabled. Use when only linking pre-built, not compiling addon code."" OFF). # Append modules added to pasture as needed; if(ENABLE_ccsort OR ENABLE_transqt2); set(ENABLE_pasture ON); message(STATUS ""Enabling pasture plugins""); endif(). if(ENABLE_gdma OR ENABLE_dkh OR ENABLE_erd OR ENABLE_PCMSolver); if(psi4_SKIP_ENABLE_Fortran); message(STATUS ""NOT Enabling Fortran""); else(); enable_language(Fortran); set(Fortran_ENABLED ON) # communicate required languages with psi4-core; message(STATUS ""Enabling Fortran""); endif(); endif(). if(ENABLE_erd); message(FATAL_ERROR ""The Psi4/ERD interface is broken, probably since spring 2017. It's toast (comment this line to try), but disabling for now.""); message(WARNING ""ERD will build, link, and run in Psi4 just fine. However, it has not been hooked into Psi4 in all roles, notably gradients, LRC DFT energies, and ESP. So upon activating through ``set integral_package erd``, known failures will be caught and halted, but perhaps other types not tested and identified will give *wrong* answers. Consider this your warning.""); endif(). ############################ Options: Build How? #############################; include(psi4OptionsTools); option_with_print(BUILD_SHARED_LIBS ""Build internally built Psi4 add-on libraries as shared, not static"" OFF); option_with_default(CMAKE_BUILD_TYPE ""Build type (Release or Debug)"" Release); include(xhost) # defines: option(ENABLE_XHOST ""Enable processor-specific optimization"" ON); # below are uncommon to adjust; option_with_print(ENABLE_OPENMP ""Enables OpenMP parallelization"" ON); option_with_print(ENABLE_AUTO_BLAS ""Enables CMake to auto-detect BLAS"" ON); option_with_print(ENABLE_AUTO_LAPACK ""Enables CMake to auto-detect LAPACK"" ON); option_with_print(ENABLE_PLUGIN_TESTING ""Test the plugin templates build and run"" OFF); option_with_print(ENABLE_CYTHONIZE ""Compile each python file rather than plaintext (requires cython) !experimental!"" OFF); option_with_f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:9087,failure,failures,9087,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['failure'],['failures']
Availability,"nalize release`_. On January first; ----------------. * Screenshot https://anaconda.org/psi4/psi4 .; * Screenshot https://anaconda.org/conda-forge/psi4 .; * Add new year title and images to website; https://github.com/psi4/psicode-hugo-website/edit/master/content/posts/downloads.md .; * On the next day, check that the new year's plot appears at https://psicode.netlify.app/posts/downloads/ . Update copyright year; ---------------------. * ``cd ~/path/to/psi4``; * Primary target is licenses. - ``grep -rl ""(c) 2007-2017"" * | xargs sed -i '' ""s/(c) 2007-2017/(c) 2007-2018/g""``; - On Linux, drop the ``''`` in above command; - Need to do ``psi4/`` and ``docs/`` dirs. * Also, license in these files. - ``tests/runtest.py``; - ``README.md``. * Also, in content of :source:`doc/sphinxman/source/conf.py.in#L130`. Update counter scripts; ----------------------. * Log onto vergil as cdsgroup.; * Add new years, Python versions, and Psi4 versions as needed.; * check vergil /home/cdsgroup/psi4meta/download-analysis/installer: vi downloads_updater.py any new patterns to add?; * check vergil if changing any download patterns. Update samples; --------------. * Run ``make sphinxman`` at least once by hand; * Check in resulting ``psifiles.py`` and all the updated and new ``samples/`` files and dirs; * Make a lone PR and warn reviewers not to read it, since autogenerated. Collect new authors; -------------------. * Survey contributions to current Milestone. Add new contributors to the release notes GitHub issue.; * Figure out any new ""Additional Contributors"" authors since last release.; * Get permission of new authors and their particulars for ``codemeta.json``.; * Edit ``psi4/header.py`` accordingly and make PR. Run long tests; --------------. * Run the full test suite with threading parallelism on. There's one CC test that's a known fail; in parallel b/c it sets memory very low, iirc. - CTest (CLI)::. +++ b/tests/runtest.py; @@ -104,7 +104,7 @@ def backtick(exelist):. # run psi4 and col",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:3621,down,download-analysis,3621,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download-analysis']
Availability,"nalized to form the Kohn--Sham orbitals in the same manner as in; Hartree--Fock. In practice the local functional kernel :math:`f_{\mathrm{xc}}` and its required; partial derivatives are exceedingly complex and are not analytically; integrable. In this case, atom-centered numerical quadratures are used to; evaluate the Kohn--Sham potentials and energies to a high degree of accuracy. The; evaluation of these numerical integrals can be made to be linear scaling with a; reasonable amount of cleverness (mostly related to the fact that the basis; functions decay exponentially), meaning that the Coulomb and diagonalization; steps become rate limiting. This enormous potential speed gain over Hartree--Fock; with potentially exact treatment of electron correlation for ""free"" was one of; the primary motivations for KS-DFT's adoption by chemists in the late 1980s and; early 1990s. Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn--Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions. Generalized Kohn--Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as ""implicit"" density; functionals, as the orbitals are themselves functionals of the Kohn",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:8466,failure,failures,8466,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['failure'],['failures']
Availability,"nbody` for computation of interaction energies with or; without counterpoise correction. Example: :srcsample:`cfour/dfmp2-1`. * :py:func:`~psi4.driver.wrapper_database.database` for computation of a collection of molecules in a; single input, with summarization of results. Examples:; :srcsample:`cfour/pywrap-db1` and :srcsample:`cfour/psi-a24-grad`. * :py:func:`~psi4.driver.cbs` for computation of compound methods involving; basis set extrapolations and/or delta corrections with any combination; of |PSIfour| and Cfour computational methods and |PSIfour| basis sets.; Example: :srcsample:`cfour/pywrap-cbs1`. .. rubric:: Not Yet Implemented. * Ground state CI energies and optimizations. * Excited state energies and optimizations. * Properties are not yet regex-ed, transformed into input frame, and; stowed in PSI Variables. * Property calls that required extra computation not yet translated into; :py:func:`~psi4.driver.properties` computation command. * Frequencies. Energy methods available through P4C4 interface. .. include:: cfour_table_energy.rst. Gradient methods available through P4C4 interface. .. include:: cfour_table_grad.rst. .. _`table:cfour_cc_program`:. .. notes on preferred modules from JFS; .. comment always abcdtype = aobasis (but sometimes ; .. comment ncc does rhf ccsdt(q); .. comment reccommended code to do with, not only code (b/c mrcc can do much of this); .. comment .. table:: Cfour coupled-cluster program defaults by calculation type; .. comment ; .. comment +-----------------------------------------+---------------------------------+-----------------------+--------+--------+---------+; .. comment | | | | RHF | UHF | ROHF |; .. comment | | | +--------+--------+---------+; .. comment | Driver Call, |cfour__cfour_deriv_level| | name, |cfour__cfour_calc_level| | |cfour__cfour_excite| | |cfour__cfour_cc_program| |; .. comment +=========================================+=================================+=======================+========+========+=========+",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:29765,avail,available,29765,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability,"nce': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:467754,error,error,467754,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"nd :math:`\delta_{MP2}^{(3)}` also improve the ; description of electrostatically dominated complexes. :math:`\delta_{MP2}^{(2)}`; can be applied to SAPT2+ or SAPT2+(3) energies whereas :math:`\delta_{MP2}^{(3)}` ; should be applied to SAPT2+3 energies. A thorough analysis of the performance of these truncations of closed-shell SAPT can be; found in a review by Hohenstein and Sherrill [Hohenstein:2012:WIREs]_,; and a systematic study of the accuracy of these truncations (with and ; without an improved CCD treatment of dispersion) using different basis sets; is reported in [Parker:2014:094106]_. The closed-shell SAPT module relies entirely on the density-fitting approximation; of the two-electron integrals. The factorization of the SAPT energy; expressions, as implemented in |PSIfour|, assumes the use of density-fitted; two-electron integrals, therefore, the closed-shell SAPT module cannot be run with; exact integrals. In practice, we have found that the density-fitting; approximation introduces negligible errors into the SAPT energy ; (often less than 0.01 kcal/mol for small dimers) and greatly; improves efficiency. . The latest addition to the SAPT code is the SAPT0 method for open-shell ; monomers [Gonthier:2016:134106]_. This code is available for both exact and density fitted integrals, ; except for the dispersion terms which implementation relies on a density fitting; factorization. Both ``UHF`` and ``ROHF`` |scf__reference| can be used, but coupled; induction computations are currently not supported with ``ROHF``. This means that orbital; relaxation is not included for ``ROHF`` and the uncoupled induction term is computed instead.; If both monomers are open-shell, their coupling is assumed to be high spin, i.e.; two doublets would interact to form a triplet. The *S*\ :superscript:`2` approximation and scaling; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. All exchange terms in SAPT arise from the antisymmetrization; of the wavefunctions of monomers A and",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:10433,error,errors,10433,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['error'],['errors']
Availability,"ndex:: gau2grid, collocation. .. _`sec:gau2grid`:. Interface to gau2grid by D. G. A. Smith; =======================================. .. codeauthor:: D. G. A. Smith; .. sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <src/lib/libefp_solver>`. .. image:: https://img.shields.io/badge/home-gau2grid-5077AB.svg; :target: https://github.com/dgasmith/gau2grid. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/dgasmith/gau2grid/blob/master/README.md. |PSIfour|, relies upon the gau2grid library for Gaussian collocations for DFT. gau2grid; requires no; additional licence, downloads, or configuration. Conversely, |Psifour|; cannot build *without* gau2grid. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/gau2grid/badges/version.svg; :target: https://anaconda.org/psi4/gau2grid. * gau2grid is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, gau2grid has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; gau2grid can be obtained through ``conda install gau2grid -c psi4``.; Then, hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect gau2grid and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. gau2grid from conda without thinking, consult. * To remove a conda installation, ``conda remove gau2grid``. **Source**. * .. image:: https://img.shields.io/github/tag/dgasmith/gau2grid.svg?maxAge=2592000; :target: https://github.com/dgasmith/gau2grid/tree/master. * If using |PSIfour| built from source and you want gau2grid built from; from source also, let the build system fetch and build it and activate; dependent code. .. _`cmake:gau2grid`:. How to",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gau2grid.rst:2028,avail,available,2028,doc/sphinxman/source/gau2grid.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gau2grid.rst,1,['avail'],['available']
Availability,"nergy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:6070,error,error,6070,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ng in Python syntax that is customized for PSI, termed Psithon. In; this section we will describe the essential features of the Psithon language.; |PSIfour| is distributed with an extensive test suite, described in section; :ref:`apdx:testSuite`; the input files for these test cases can be found in the; samples subdirectory of the top-level |PSIfour| source directory and should; serve as useful examples. .. index:: physical constants; .. _`sec:physicalConstants`:. Physical Constants; ==================. For convenience, the Python interpreter will execute the contents of the; |psirc| file in the current user's home area (if present) before performing any; tasks in the input file. This allows frequently used python variables to be; automatically defined in all input files. For example, if we repeatedly make; use of the universal gravitational constant, the following line could be placed; in the |psirc| file ::. UGC = 6.67384E-11 # m^3 / kg^-1 s^-2. which would make the variable ``UGC`` available in all |PSIfour| input files.; For convenience, the physical constants used within the |PSIfour| code (which; are obtained from `NIST CODATA 2014; <https://physics.nist.gov/cuu/Constants/archive2014.html>`_; are also automatically loaded as Psithon; variables (before |psirc| is loaded, so that the user's |psirc| values can; override the builtins (in the input file, not in the C++ code). The physical constants used within |PSIfour|, which are automatically; made available within all |PSIfour| input files are in :ref:`table:physconst`. .. .. literalinclude:: @SFNX_INCLUDE@psi4/driver/constants/physconst.py; .. :lines: 28-. In Psithon input files, prepend physical constants with ``psi_`` to; prevent clashes with user-defined variables (*e.g.*, ``psi_h``). In; PsiAPI mode, access as, *e.g.*, ``psi4.constants.h``. .. index:: memory; .. _`sec:memory`:. Memory Specification; ====================. By default, |PSIfour| assumes that 500 MiB of memory are available. While this is; enou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst:2432,avail,available,2432,doc/sphinxman/source/psithoninput.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithoninput.rst,1,['avail'],['available']
Availability,"ng |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF instabilities can be checked, but not followed. If you want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Algorithm | |scf__reference| | Stability checked | |scf__stability_analysis| | |globals__scf_type| |; +==================+==================+==============================================+===========================+=====================+; | | RHF | Internal, External (:math:`\rightarrow` UHF) | ``CHECK`` | PK only |; + +------------------+----------------------------------------------+---------------------------+---------------------+; | Direct Inversion | ROHF | Internal | ``CHECK`` | PK only |; +------------------+------------------+----------------------------------------------+---------------------------+--------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:48840,avail,available,48840,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"nimal, run-time; libraries (*e.g.*, libgcc-ng) not compilers.; It doesn't have the run-time qc addons ``psi4-rt`` (*e.g.*, snsmp2) or build tools (*e.g.*, g++, sphinx, cmake). ``psi4-dev`` - does not have psi4 itself or the run-time addons ``psi4-rt`` or numpy (though fine to install them; alongside). Does have all the link-time addons. Does have; cmake and sphinx (and python). Of gcc-ness, has full packages, that is,; compilers as well as runtime packages. Psi4conda installer - has full-featured ``psi4`` itself, all link-time qc addons, all; run-time qc addons, and minimal gcc runtime libraries. Developers should additionally install ``psi4-dev`` for build tools. The :ref:`sec:psi4conda` uses a `conda constructor; <https://github.com/conda/constructor>`_ to package up Miniconda,; the |PSIfour| conda package, the |PSIfour| add-on conda packages, dependencies; thereof (possibly from particular channels), and the psi4 channel; as a default. This is very convenient for novice users and robust; against differing channel settings in ``~/.condarc``. But proficient; conda users may prefer to treat ``psi4`` as a normal conda package and; not have another large Miniconda installation (including the hefty MKL); lying around just for |PSIfour|. Installing just the ``psi4`` package; itself will get you |PSIfour|, whatever add-ons require linking in to; |PSIfour| (*e.g.*, CheMPS2 and PCMSolver), and the correct versions of; packages. However, just the ``psi4`` package won't get you add-ons that; don't need linking (*e.g.*, adcc and v2rdm_casscf). .. Conda Proficients; .. ^^^^^^^^^^^^^^^^^; ..; .. or dependencies; .. from the ""right"" channels, which can be important for issues of fPIC; .. and libc++ vs. libstdc++. So ``conda create -c psi4 -n p4env psi4 dftd3; .. v2rdm_casscf`` *should* be equivalent to running the psi4conda installer,; .. but I wouldn't count on it. Instead, an `explicit environment spec; .. <http://conda.pydata.org/docs/using/envs.html#build-identical-conda-envi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:14482,robust,robust,14482,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['robust'],['robust']
Availability,"ning; the Python of ``which python``. .. _`faq:wrongpyfalse`:. How to fix ""``undefined symbol: _Py_FalseStruct``""; --------------------------------------------------. You're probably loading a Py3-compiled Psi4 in Py2. Switch interpreters; and re-run. A python of proper Py2 or Py3-ness is baked into the |PSIfour|; ""executable"", so you'll see this error only for Psi4 as Python module. .. _`faq:gdblldb`:. How to use ``gdb`` and ``lldb`` with Psi4; -----------------------------------------. Debugging |PSIfour| has gotten a little confusing now that it's running through Python. Here's the syntax ::. >>> cd {objdir}; >>> lldb -- python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (lldb) run. ::. >>> cd {objdir}; >>> gdb --args python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (gdb) run. .. .. _`faq:valgrindpsi`:; .. ; .. How to use ``valgrind`` with Psi4; .. ---------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:55455,error,error,55455,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['error']
Availability,"note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:269705,error,error,269705,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'remp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'sta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:492723,error,error,492723,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:316647,error,error,316647,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ns`:. Creating a New Plugin Using a Conda Pre-compiled Binary; -------------------------------------------------------. .. # prepare; .. >>> bash; .. >>> export PATH=$PSI4CONDA/bin:$PATH # usually already done from psi4 installation; .. >>> cd ""$(dirname $(which psi4))""/.. # move into distribution/environment directory, $PSI4CONDA; .. >>> conda install gcc # install compilers into expected place. |PSIfour| plugins can also be created using Conda for both |PSIfour|; binary and development environment. On Linux (or Ubuntu shell on Windows), one can use the ``gcc``; compiler installed alongside ``psi4`` itself in the Conda distribution; or environment (below, ``$PSI4CONDA``). On Mac, one must use; ``libc++.so`` (*not* ``libstdc++.so``), and this can be accomplished by; installing XCode from the App Store that provides ``clang`` and; ``clang++`` compilers. * Check environment:. .. code-block:: bash. # yes, the following returns a blank line. yes, LD_LIBRARY_PATH irrelevant; >>> echo $PYTHONHOME $PYTHONPATH $DYLD_LIBRARY_PATH $PSIDATADIR. >>> which python psi4 g++ gfortran # Linux; $PSI4CONDA/bin/python; $PSI4CONDA/bin/psi4; $PSI4CONDA/bin/gcc++; $PSI4CONDA/bin/gfortran; >>> which python psi4 g++ gfortran clang++ # Mac; $PSI4CONDA/bin/python; $PSI4CONDA/bin/psi4; $PSI4CONDA/bin/g++; $PSI4CONDA/bin/gfortran; /usr/bin/clang++. >>> which cmake; $PSI4CONDA/bin/cmake; # if above empty, ``conda install cmake``. * Create and compile plugin:. .. code-block:: bash. >>> psi4 --plugin-name testplugin; -- Creating ""testplugin"" with ""basic"" template. -----------------; ==> Created plugin files (in testplugin as basic):; __init__.py, CMakeLists.txt, doc.rst, input.dat, plugin.cc, pymodule.py. # move into plugin directory; >>> cd testplugin. # configure using build info from parent psi4; >>> `psi4 --plugin-compile` # Linux; loading initial cache file $PSI4CONDA/share/cmake/psi4/psi4PluginCache.cmake; -- The CXX compiler identification is GNU 5.2.0; -- Check for working CXX compiler: $P",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:5325,echo,echo,5325,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,1,['echo'],['echo']
Availability,"nse as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: BrianQC; .. _`sec:brianqc`:. Interface to the BrianQC GPU module by the BrianQC team; =======================================================. .. codeauthor:: Gergely Kis; .. sectionauthor:: Gergely Kis. |PSIfour| contains code to interface to the BrianQC GPU module developed; by the `BrianQC team <https://www.brianqc.com/team>`_, which is available after a license agreement from; `https://brianqc.com/ <https://brianqc.com/>`_. Installing BrianQC; ~~~~~~~~~~~~~~~~~~. Please contact BrianQC at `https://brianqc.com/ <https://brianqc.com/>`_; to download the BrianQC GPU module and obtain a license. Note that there are several prerequisites for using BrianQC, including; having a supported GPU available in the computing node and having the; proper GPU drivers installed. Please refer to the `BrianQC manual <https://www.brianqc.com/download/>`_; for a full list of prerequisites. When installing BrianQC, choose the SDK installation by setting the; :envvar:`BRIANQC_SDK_INSTALL` envoronment variable to `1`. Building BrianQC's user-built components; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. After the installation, build BrianQC's example and sample programs,; which also creates the wrapper library and CMake configuration files; required to build |PSIfour| with BrianQC. 1. Create a build directory to keep the source tree clean. .. code-block:: bash. c",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst:1414,avail,available,1414,doc/sphinxman/source/brianqc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst,1,['avail'],['available']
Availability,"nstructions at :ref:`sec:quickconda`),; gdma can be obtained through ``conda install gdma -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_gdma`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect gdma and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. gdma from conda without thinking, consult. * To remove a conda installation, ``conda remove gdma``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/gdma.svg?maxAge=2592000; :target: https://github.com/psi4/gdma. * If using |PSIfour| built from source and you want gdma built from; from source also,; enable it as a feature with :makevar:`ENABLE_gdma`,; and let the build system fetch and build it and activate dependent code. Input; ~~~~~. The distributed multipole analysis (DMA) technique, developed by Anthony J.; Stone and implemented by him into the `GDMA package; <http://www-stone.ch.cam.ac.uk/programs.html>`_, is available in |PSIfour|.; The current implementation simply embeds Stone's GDMA code into the main; executable, and generates the appropriate input files automatically. The; program takes as input a data file, and a Gaussian formatted checkpoint (see; Section :ref:`FCHK <sec:fchk>`) file. The simplest usage of the GDMA code is; demonstrated below, along with a listing of the options supported; these; options correspond to the options described in the ; :download:`GDMA manual <gdma-2.3.pdf>`. If more advanced usage is desired, which is not is permitted by the options; listed below, the user may provide their own data file containing keywords to; control the GDMA code. Simply place the data file in the directory |PSIfour|; is called from, and provide the file name as the datafile argument to the; :py:func:`~psi4.driver.gdma` routine. For example, if GDMA data file is called; *control.dma*, the GDMA code is called as follows::. grad, wfn = gradient('mp2', return_wfn=True); gdma(wfn, datafile='co",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst:3237,avail,available,3237,doc/sphinxman/source/gdma.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst,1,['avail'],['available']
Availability,"nsums=${ENABLE_Einsums}; -DENABLE_erd=${ENABLE_erd}; -DENABLE_simint=${ENABLE_simint}; -DENABLE_gdma=${ENABLE_gdma}; -DENABLE_PCMSolver=${ENABLE_PCMSolver}; -DENABLE_ddx=${ENABLE_ddx}; -DENABLE_mdi=${ENABLE_mdi}; -DENABLE_BrianQC=${ENABLE_BrianQC}; -DENABLE_OPENMP=${ENABLE_OPENMP}; -DTargetLAPACK_DIR=${TargetLAPACK_DIR}; -DTargetHDF5_DIR=${TargetHDF5_DIR}; -DEigen3_DIR=${Eigen3_DIR}; -Dambit_DIR=${ambit_DIR}; -DCheMPS2_DIR=${CheMPS2_DIR}; -Ddkh_DIR=${dkh_DIR}; -Decpint_DIR=${ecpint_DIR}; -Dlibefp_DIR=${libefp_DIR}; -DEinsums_DIR=${Einsums_DIR}; -Derd_DIR=${erd_DIR}; -Dgau2grid_DIR=${gau2grid_DIR}; -Dgdma_DIR=${gdma_DIR}; #-DLibint_DIR=${Libint_DIR}; -DLibint2_DIR=${Libint2_DIR}; -DPCMSolver_DIR=${PCMSolver_DIR}; -Dmdi_DIR=${mdi_DIR}; -Dpybind11_DIR=${pybind11_DIR}; -Dpylibefp_DIR=${pylibefp_DIR}; -Dsimint_DIR=${simint_DIR}; -DLibxc_DIR=${Libxc_DIR}; -DBrianQC_DIR=${BrianQC_DIR}; -DFortran_ENABLED=${Fortran_ENABLED}; -DLIBC_INTERJECT=${LIBC_INTERJECT}; -DRESTRICT_KEYWORD=${RESTRICT_KEYWORD}; -DFC_SYMBOL=${FC_SYMBOL}; -DOpenMP_LIBRARY_DIRS=${OpenMP_LIBRARY_DIRS}; -DCMAKE_EXPORT_COMPILE_COMMANDS=ON; -DENABLE_CYTHONIZE=${ENABLE_CYTHONIZE}; -Dpsi4_SHGSHELL_ORDERING=${psi4_SHGSHELL_ORDERING}; CMAKE_CACHE_ARGS -DCMAKE_PREFIX_PATH:PATH=${CMAKE_PREFIX_PATH}; -DCMAKE_C_COMPILER_ARG1:STRING=${CMAKE_C_COMPILER_ARG1}; -DCMAKE_CXX_COMPILER_ARG1:STRING=${CMAKE_CXX_COMPILER_ARG1}; -DCMAKE_Fortran_COMPILER_ARG1:STRING=${CMAKE_Fortran_COMPILER_ARG1}; # CMAKE_<lang>_COMPILER_ARG1 vars pass args thru when CMAKE_<lang>_COMPILER set as ""compiler --vital-args""; USES_TERMINAL_BUILD 1; BUILD_ALWAYS 1). add_subdirectory(external/downstream); add_subdirectory(doc); include(ConfigTesting). # <<< Install >>>. install(DIRECTORY ${STAGED_INSTALL_PREFIX}/; DESTINATION ${CMAKE_INSTALL_PREFIX}; USE_SOURCE_PERMISSIONS; PATTERN ""*.pyc"" EXCLUDE). install(DIRECTORY samples; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; USE_SOURCE_PERMISSIONS; PATTERN ""example_psi4rc_file"" EXCLUDE); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:18465,down,downstream,18465,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['down'],['downstream']
Availability,"nt of electron correlation for ""free"" was one of; the primary motivations for KS-DFT's adoption by chemists in the late 1980s and; early 1990s. Unfortunately, local KS-DFT exhibits several spectacular failures, most of which; stem from the exponential decay of the local Kohn--Sham potential, which cannot; encapsulate long-range information in the exchange and correlation holes. In the; exchange hole, this manifests as the problem of Many-Electron Self-Interaction; Error (MSIE), which presents as spurious low-lying charge transfer states in; excited-state calculations, eventual metallic breakdown in extended insulators,; poor thermochemistry, and complete lack of a derivative discontinuity in the; chemical potential as integer particle numbers are crossed. On the correlation; side, this is primarily observed in the inability of KS-DFT to treat dispersion; interactions. Generalized Kohn--Sham (GKS) functionals incorporate long-range information into; the functional through orbital-dependent contributions, and are designed to; combat the failures of local KS-DFT, particularly the MSIE on the exchange side.; Note that these functionals are often referred to as ""implicit"" density; functionals, as the orbitals are themselves functionals of the Kohn--Sham; potential. The simplest form of an exchange-side GKS is the global hybrid ansatz, in which; some fraction of the exact Hartree--Fock exchange of the noninteracting; quasiparticles is added to the functional, with the local part of the exchange; functional decreased by the corresponding amount. Note that the term; ""exact-exchange"" refers to the Hartree--Fock being the exact exchange energy of; the noninteracting quasiparticles, not the true electrons. Therefore, adding; 100% exact exchange is not physically reasonable, and will often lead to; extremely poor results. The fraction of exact-exchange, denoted :math:`\alpha`,; is often determined by adiabatic or heuristic arguments and is typically around; 25%. The addition of",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:9316,failure,failures,9316,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['failure'],['failures']
Availability,"nt variables :envvar:`OMP_NUM_THREADS` and :envvar:`MKL_NUM_THREADS`; do not affect threading in |PSIfour|. .. The easiest/least visible way to thread |PSIfour| is to set the standard OpenMP/MKL; .. environment variables :envvar:`OMP_NUM_THREADS` and :envvar:`MKL_NUM_THREADS`.; ..; .. .. code-block:: tcsh; ..; .. # csh, tcsh: add to shell or ~/.tcshrc file; .. setenv OMP_NUM_THREADS 4; .. setenv MKL_NUM_THREADS 4; ..; .. .. code-block:: bash; ..; .. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; .. export OMP_NUM_THREADS=4; .. export MKL_NUM_THREADS=4; ..; .. Psi4 then detects these value via the API routines in ``<omp.h>`` and; .. ``<mkl.h>``, and runs all applicable code with 4 threads. .. rubric:: (2) The -n Command Line Flag. To change the number of threads at runtime, the :option:`psi4 -n` flag may be used. An; example is:. .. code-block:: bash. psi4 -i input.dat -o output.dat -n 4. which will run on four threads. Note that is is not available for PsiAPI mode of operation. .. rubric:: (3) Setting Thread Numbers in an Input. For more explicit control, the Process::environment class in |PSIfour| can; override the number of threads set by environment variables. This functionality; is accessed via the :py:func:`~psi4.core.set_num_threads` function, which controls; both MKL and OpenMP thread numbers. The number of threads may be changed; multiple times in a |PSIfour| input file. An example input for this feature is::. # A bit small-ish, but you get the idea; molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 90.0; }. # Run from 1 to 4 threads, for instance, to record timings; for nthread in range(1, 5):; set_num_threads(nthread); energy(""scf/cc-pvdz""). In PsiAPI mode of operation, this syntax, ``psi4.set_num_threads(nthread)``, is; the primary way to control threading. .. rubric:: (4) Method-Specific Control. Even more control is possible in certain circumstances. For instance, the; threaded generation of AO density-fitted integrals inv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:11762,avail,available,11762,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['avail'],['available']
Availability,"ntified by; unit. The status flag is a boolean used to indicate; if the file is new (PSIO_OPEN_NEW) or if it already exists and is; being re-opened (PSIO_OPEN_OLD). If specified in the user input file,; the file will be automatically opened as a multivolume (striped) file,; and each page of data will be read from or written to each volume in; succession. (Note that a non-existent file can still be opened with; status PSIO_OPEN_OLD.); int psio_close(ULI unit, int; keep): Closes a binary file identified by; unit. The keep flag is a boolean used to indicate; if the file's volumes should be deleted (0) or retained (1) after; being closed.; int psio_read_entry(ULI unit, char *key, char; *buffer, ULI size): Used to read an entire TOC entry; identified by the string key from unit into the; array buffer. The number of bytes to be read is given by; size, but this value is only used to ensure that the read; request does not exceed the end of the entry. If the entry does not; exist, an error is printed to stderr and the program will; exit.; int psio_write_entry(ULI unit, char *key, char; *buffer, ULI size): Used to write an entire TOC entry; idenitified by the string key to unit into the array; buffer. The number of bytes to be written is given by; size. If the entry already exists and its data is being; overwritten, the value of size is used to ensure that the; write request does not exceed the end of the entry.; int psio_read(ULI unit, char *key, char; *buffer, ULI size, psio_address sadd, psio_address; *eadd): Used to read a fragment of size bytes; of a given TOC entry identified by key from unit; into the array buffer. The starting address is given by the; sadd and the ending address (that is, the entry-relative; address of the next byte in the file) is returned in; *eadd.; int psio_write(ULI unit, char *key, char; *buffer, ULI size, psio_address sadd, psio_address; *eadd): Used to write a fragment of size; bytes of a given TOC entry identified by key to unit; into the arr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html:5827,error,error,5827,doc/sphinxman/source/attic/libpsio.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html,2,['error'],['error']
Availability,"nto a version-labeled; file and check it in.; * Edit recipe https://github.com/psi4/psi4meta/blob/master/installers/construct.yaml. - Edit the top matter for Configuration, mainly the ``release`` field. See snapshots in directory for examples.; - Edit the packages and channels info if necessary. Probably long-term stable. * Edit the GHA control file https://github.com/psi4/psi4meta/blob/master/.github/workflows/Installers.yml; ``matrix.cfg`` list if Python versions or target architectures have changed.; * All conda packages must already have been built and present in the right channels on; https://anaconda.org/conda-forge/psi4/files .; * Commit ``construct.yaml`` to trigger installer builds. (Even workflow edits need a dummy commit to; ``construct.yaml`` to retrigger.); * When all build successfully, hover over the artifacts, and note the smallest and largest of the; near-consecutive numbers GH has assigned them. These artifacts only linger for a day.; * Log in to vergil root and cd to ``/var/www/html/psicode-download``.; * Use the pull_gha_installers.sh script to download the installers from GH to vergil. First two; arguments are first and last of the artifact numbers, and third argument is an auth token.; ``bash pull_gha_installers.sh 47226565 47226573 715...4f3``.; * Make WindowsWSL and any other symlinks the script frontmatter advises. Build Docker images; -------------------. Docker images are built through GHA on the https://github.com/psi4/psi4meta repository from a Conda; environment specification and get served from DockerHub, https://hub.docker.com/r/psi4/psi4/tags . * Edit specification https://github.com/psi4/psi4meta/blob/master/docker/environment.yaml. - Edit the packages and channels info if necessary. Probably long-term stable.; - Don't edit the Python version, as that's controlled by the GHA. * Edit the GHA control file https://github.com/psi4/psi4meta/blob/master/.github/workflows/Docker.yml; ``matrix.cfg`` list for changed Python version and to lab",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:26320,down,download,26320,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"nv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12504,error,error,12504,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"nv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:17762,error,error,17762,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"nv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdef",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172499,error,error,172499,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"nv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:45083,error,error,45083,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"o run the plugin in the ``run_myplugin()`` function in this; file, the plugin is hooked into the main |PSIfour| driver function; :py:func:`~psi4.driver.energy` and so can be accessed through; ``energy('myplugin')`` in an input file. Any other Python functions can; also be placed in this file. * **__init__.py** |w---w| Init script for the plugin (in the sense that; the whole plugin directory is a Python module). This file generally won't; need editing unless additional Python files are added to the plugin; directory (add additional lines to the ``# Load Python modules`` section); or the plugin depends on .so codes in other plugin directories (add; additional plugin_load lines relative to the current plugin directory to; the ``# Load C++ plugin`` section). .. comment as modeled in :source:`tests/plugin_libcim/__init__.py`). .. literalinclude:: @SFNX_INCLUDE@psi4/share/psi4/plugin/__init__.py.template. * **doc.rst** |w---w| Documentation file. Place in this file any notes,; equations, warnings to users, todo lists, *etc.*. Plain text is fine,; though reStructuredText is the ultimate goal. Remove the ``.. comment``; text and build Sphinx documentation for samples of linking keywords,; sections, and math. This file is absorbed into the |PSIfour|; documentation, along with any docstrings to Python functions, and the C++; keywords block in the ``myplugin.cc`` file. See :ref:`sec:documentation`; for building documentation. .. and :ref:`Available Plugins <sec:availablePlugins>`; .. for this file's final destination. Please note that pure virtual functions in a plugin may cause undefined symbols errors when; the plugin is loaded. To create a purely Python plugin, create a new plugin directory, then; remove the ``Makefile`` and ``myplugin.cc`` files and; erase the shared object loading portion of ``__init__.py``. Create as many .py; files as necessary (registering each one in ``__init__.py``), use; ``input.dat`` as a model for loading the plugin, no recompile ever; necessary. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:10916,avail,availablePlugins,10916,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,2,"['avail', 'error']","['availablePlugins', 'errors']"
Availability,"o that; https://psicode.org/psi4manual/master/index.html presents the psi4docs repo content. - GHA sphinx-build controller is :source:`.github/workflows/docs.yml`; - GHA gh-pages deploy controller is https://github.com/psi4/psi4docs/blob/master/.github/workflows/docs.yml; - Netlify psicode redirect controller is https://github.com/psi4/psicode-hugo-website/blob/master/netlify.toml#L10-L15. * This setup works great for ""latest"" docs, but it won't necessarily build a nice copy on the tag; commit itself for release and postrelease snapshots. Get a snapshot *on the tag* by some means:. - For releases and postreleases, any commit to the maintenance branch will build docs and upload; to the branch name in psi4docs. This should be pre-positioned by GHA, so check that docs with; the right version are deployed and then no further action required (can skip ahead to README.md; and netlify.toml steps).; - For releases, you can do the ``atomic`` push of the tag commit, wait for the docs build to; complete, download the GHA artifact (zipped docs dir), then continue by pushing the record commit.; - For releases beyond the ``atomic`` push, navigate on psi4 GH to the tag commit (not the record; commit) and retrigger the docs GHA, then download the GHA artifact (zipped docs dir).; - For postreleases, build the docs locally at the tag and collect the docs dir. * In your local clone of https://github.com/psi4/psi4docs, find the appropriate folder and unpack; your docs snapshot into it. - For releases, you'll need to make a new folder, e.g. ``sphinxman/1.8.x``.; - For postreleases, you'll overwrite the contents of the existing folder.; - Unpack and rearrange so that in the end, e.g., ``sphinxman/1.8.x/index.html`` is present. * Commit all your docs files and push to ``master``.; * For releases, add a line to the top-level table https://github.com/psi4/psi4docs/edit/master/README.md .; * For releases, add a new redirects block to https://github.com/psi4/psicode-hugo-website/edit/master/n",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:33816,down,download,33816,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"ob/master/installers/construct.yaml. - Edit the top matter for Configuration, mainly the ``release`` field. See snapshots in directory for examples.; - Edit the packages and channels info if necessary. Probably long-term stable. * Edit the GHA control file https://github.com/psi4/psi4meta/blob/master/.github/workflows/Installers.yml; ``matrix.cfg`` list if Python versions or target architectures have changed.; * All conda packages must already have been built and present in the right channels on; https://anaconda.org/conda-forge/psi4/files .; * Commit ``construct.yaml`` to trigger installer builds. (Even workflow edits need a dummy commit to; ``construct.yaml`` to retrigger.); * When all build successfully, hover over the artifacts, and note the smallest and largest of the; near-consecutive numbers GH has assigned them. These artifacts only linger for a day.; * Log in to vergil root and cd to ``/var/www/html/psicode-download``.; * Use the pull_gha_installers.sh script to download the installers from GH to vergil. First two; arguments are first and last of the artifact numbers, and third argument is an auth token.; ``bash pull_gha_installers.sh 47226565 47226573 715...4f3``.; * Make WindowsWSL and any other symlinks the script frontmatter advises. Build Docker images; -------------------. Docker images are built through GHA on the https://github.com/psi4/psi4meta repository from a Conda; environment specification and get served from DockerHub, https://hub.docker.com/r/psi4/psi4/tags . * Edit specification https://github.com/psi4/psi4meta/blob/master/docker/environment.yaml. - Edit the packages and channels info if necessary. Probably long-term stable.; - Don't edit the Python version, as that's controlled by the GHA. * Edit the GHA control file https://github.com/psi4/psi4meta/blob/master/.github/workflows/Docker.yml; ``matrix.cfg`` list for changed Python version and to label the tags with current Psi4 from c-f.; * Commit ``environment.yaml`` or ``Docker.yml`` to tri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:26376,down,download,26376,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"od': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:84677,error,error,84677,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"od': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:85940,error,error,85940,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"od': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94598,error,error,94598,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"od': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:88713,error,error,88713,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"od': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:89976,error,error,89976,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"od': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:187619,error,error,187619,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"od': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303567,error,error,303567,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"odule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:12926,error,error,12926,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"odule': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18184,error,error,18184,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"odule': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229706,error,error,229706,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"odule': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:73953,error,error,73953,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"odule, which will first call the SCF module and perform the SCF computation; with RHF reference to obtain a guess for the DCT orbitals. After SCF is; converged, the program will perform the energy computation using the ODC-12; method. By default, simultaneous algorithm will be used for the solution of; the equations. One can also request to perform geometry; optimization following example below::. molecule { ; H; H 1 1.0; }. set basis cc-pvdz; ; optimize('dct'). The ``optimize('dct')`` call will first perform all of the procedures; described above to obtain the ODC-12 energy. After that, the ODC-12 analytic; gradients code will be executed and geometry optimization will be performed. . .. _`sec:dctrecommend`:. Recommendations; ~~~~~~~~~~~~~~~. Here is a list of recommendations for the DCT module:. * Generally, the use of the simultaneous algorithm together with the; |dct__ao_basis| ``DISK`` option is recommended (set by default). * In cases when available memory is insufficient, the use of the |dct__ao_basis| ``DISK`` option; is recommended. This will significantly reduce the memory requirements. However, when; used together with the two-step algorithm, this option can significantly; increase the cost of the energy computation. * In cases when the oscillatory convergence is observed before the DIIS; extrapolation is initialized, it is recommended to increase the threshold for; the RMS of the density cumulant or orbital update residual, below which the; DIIS extrapolation starts. This can be done by setting the; |dct__diis_start_convergence| option to the value greater than; :math:`10^{-3}` by one or two orders of magnitude (*e.g.* :math:`10^{-2}` or; :math:`10^{-1}`). This can be particularly useful for computations using the; ODC methods, because it can greatly reduce the number of iterations. * If oscillatory convergence is observed for atoms or molecules with high; symmetry, it is recommended to use the quadratically-convergent algorithm. * When using the quadrat",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:17507,avail,available,17507,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"ohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:409005,error,error,409005,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:460295,error,error,460295,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"oint group of the molecule is inferred when reading the molecule; section, and may be overridden by the :ref:`symmetry <sec:moleculeKeywords>` flag, as in::. molecule h {; 0 2; H; symmetry c1; }. or by the ``reset_point_group`` Python molecule attribute::. h.reset_point_group('c2v'). During the SCF procedure, the occupation of orbitals is typically determined by; the Aufbau principal across all spatial symmetries. This may result in the; occupation shifting between iterations. If the occupations are known *a priori*,; they may be clamped throughout the procedure by using the |globals__docc| and; |globals__socc| options. For instance, all good quantum chemists know that; :math:`C_{2v}` water is; actually,::. molecule h2o {; 0 1; O; H 1 1.0; H 1 1.0 2 104.5; }. set {; docc [3, 0, 1, 1] # 1A1 2A1 1B1 3A1 1B2; basis cc-pvdz; }. energy('scf'). .. _`sec:scfbrokensymm`:. Broken Symmetry; ~~~~~~~~~~~~~~~. For certain problems, such diradicals, allowing the spin-up and spin-down; orbitals to differ in closed-shell computations can be advantageous;; this is known as symmetry breaking. The resulting unrestricted wavefunction; will often provide superior energetics, due to the increased flexibility,; but it will suffer non-physical spin contamination from higher multiplicity states.; A convenient approach to break symmetry is to perform a UHF or UKS calculation; with the guess HOMO and LUMO orbitals mixed.; Mixing of the guess orbitals can be requested by setting the |scf__guess_mix|; keyword to true::. set reference uhf; set guess_mix true; energy('scf'). .. _`sec:scflindep`:. Orthogonalization; ~~~~~~~~~~~~~~~~~. One of the first steps in the SCF procedure is the determination of an; orthogonal basis (known as the OSO basis) from the atomic orbital; basis (known as the AO basis). The Molecular Orbital basis (MO basis); is then built as a particular unitary transformation of the OSO; basis. In |PSIfour|, the determination of the OSO basis is; accomplished via either symmetric, ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:12411,down,down,12411,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['down'],['down']
Availability,"omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:417551,error,error,417551,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:424518,error,error,424518,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"on in ``codemeta.json``, :source:`codemeta.json#L9`; * Add to branch list in ``azure-pipelines.yml``, :source:`azure-pipelines.yml`. Build Conda ecosystem stack; ---------------------------. * By ""ecosystem stack"", we mean packages that are upstream, downstream, required, and optional for; a fully featured Psi4 build and which we have some role in packaging.; * These packages (e.g., ``libint``, ``gdma``) should already be updated and built on conda-forge.; Survey them to check version tick and other key PRs have been merged.; * Changes to targets' ""source"" and ""version"" in individual recipes should be edited in psi4; ``external/*/*/CMakeLists.txt`` files; * Edit any added or dropped dependencies in main :source:`CMakeLists.txt` and docs; :source:`doc/sphinxman/source/build_planning.rst` . .. Build Conda ecosystem stack (pre-Spring 2023); .. ---------------------------------------------; ..; .. By ""ecosystem stack"", mean packages that are upstream, downstream, required, and optional for a fully featured Psi4 build and which we can't get from ""defaults"" or ""conda-forge"" channels.; ..; .. * Main directions are in [cbcy](https://github.com/psi4/psi4meta/blob/master/conda-recipes/conda_build_config.yaml) and [poodle](https://github.com/psi4/psi4meta/blob/master/psinet-nightly/kitandkapoodle.py); .. * A couple weeks before the first ""rc"" is planned, start going through L/LT in poodle, checking with upstream to see if new versions have been released. If good changes present, rebuild the packages, changing the version numbers in the respective recipes; .. * When L/LT all built and passed, edit the individual package version numbers in cbcy and increment to a new ``ltrtver`` with updated version numbers and/or build numbers (only if code changes); .. * Build L/PSI4. If any trouble, edit psi4 code. Iterate until builds and passes. This stage is the only full ctest & pytest on Psi4+upstream; .. * Build L/RT-MP. If any trouble, edit code in L/RT and rebuild those package(s). It",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:7325,down,downstream,7325,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downstream']
Availability,"on is built automatically by GHA from the latest psi4 master commit. It gets pushed to; a special ""master"" folder on the https://github.com/psi4/psi4docs repository. From there, it and; other docs snapshots are built and served to https://psi4.github.io/psi4docs/master/ (independent; of psicode.org). The netlify psicode.org site has a redirect so that; https://psicode.org/psi4manual/master/index.html presents the psi4docs repo content. - GHA sphinx-build controller is :source:`.github/workflows/docs.yml`; - GHA gh-pages deploy controller is https://github.com/psi4/psi4docs/blob/master/.github/workflows/docs.yml; - Netlify psicode redirect controller is https://github.com/psi4/psicode-hugo-website/blob/master/netlify.toml#L10-L15. * This setup works great for ""latest"" docs, but it won't necessarily build a nice copy on the tag; commit itself for release and postrelease snapshots. Get a snapshot *on the tag* by some means:. - For releases and postreleases, any commit to the maintenance branch will build docs and upload; to the branch name in psi4docs. This should be pre-positioned by GHA, so check that docs with; the right version are deployed and then no further action required (can skip ahead to README.md; and netlify.toml steps).; - For releases, you can do the ``atomic`` push of the tag commit, wait for the docs build to; complete, download the GHA artifact (zipped docs dir), then continue by pushing the record commit.; - For releases beyond the ``atomic`` push, navigate on psi4 GH to the tag commit (not the record; commit) and retrigger the docs GHA, then download the GHA artifact (zipped docs dir).; - For postreleases, build the docs locally at the tag and collect the docs dir. * In your local clone of https://github.com/psi4/psi4docs, find the appropriate folder and unpack; your docs snapshot into it. - For releases, you'll need to make a new folder, e.g. ``sphinxman/1.8.x``.; - For postreleases, you'll overwrite the contents of the existing folder.; - Unpack a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:33447,mainten,maintenance,33447,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,"onals are all denoted by a lower-case ""w"" in front of the standard DFA; functional, such as wPBE. We offer a stable implementation of the Gill; association function for wS and Head-Gordon's wB97/wB97X functionals.; Additionally, we are pleased to have recently completed a heavily conditioned; implementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model. :ref:`Double-Hybrid Functionals <table:dft_dhybrid>`; Double hybrids are percolating into |PSIfour|. Note that these are; only available with density-fitted, not conventional, MP2 algorithms. :ref:`-D Functionals <table:dft_disp>`; We have several -D2 functionals implemented. -D3 functionls are available; with the installation of Grimme's :ref:`DFTD3 program <sec:dftd3>`.; For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in |PSIfour| for correctness. If you find an error in a DFT; functional or have a request for a new functional, please let us know on our; forum or GitHub page. Grid Selection; ~~~~~~~~~~~~~~. |PSIfour| uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. ; The default grid in |PSIfour| is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights. Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resoluti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:20244,avail,available,20244,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['avail'],['available']
Availability,"onauthor:: Zach Glick. *Module:* :ref:`Keywords <apdx:dlpno>`, :ref:`PSI Variables <apdx:dlpno_psivar>`, :source:`DLPNOMP2 <psi4/src/psi4/dlpno>`. Introduction; ------------. The steep polynomial scaling (in both time and memory) of post-HF dynamic; correlation methods prohibits calculations on large systems, even for efficient; codes like |PSIfours| :ref:`DF-MP2 <sec:dfmp2>`. This poor scaling is in part; due to the use of canonical HF orbitals, which are entirely delocalized across; the molecule. Canonical orbitals are commonly used because of mathematical; convenience. Another possible choice is localized orbitals. Any two orbitals; localized to separate regions of a molecule can be treated as non-interacting; to a good approximation. Thus, when working with localized orbitals, the number; of interacting orbital pairs (and triples, quadruples, etc.) scales linearly; with system size. If carefully implemented, programs that exploit this sparsity; can be made to scale linearly (or else with lower order than their canonical; counterparts) at the cost of of modest, controllable errors. This is the; defining insight of DLPNO-MP2 and all related ""local correlation"" methods. The DLPNO-MP2 code is a linear-scaling alternative to the :ref:`DF-MP2 <sec:dfmp2>`; code, and is intended for use with large systems for which DF-MP2 is intractable.; When running DLPNO-MP2 with default settings, approximately 99.9% of the DF-MP2 ; correlation energy is recovered. The general outline of the method is as follows:. (1) Localize the active occupied MOs (with the Foster-Boys method); (2) Construct projected AOs (PAOs) from the virtual MOs; (3) Calculate three-index integrals in the (sparse) LMO/PAO basis; (4) Perform local density fitting to construct (sparse) exchange integrals; (5) Transform local virtuals from PAOs to pair natural orbitals (PNOs), and truncate; (6) Solve the iterative local MP2 equations in the LMO/PNO basis. An example input file is::. molecule h2o {; 0 1; O; H 1 1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst:2356,error,errors,2356,doc/sphinxman/source/dlpnomp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dlpnomp2.rst,1,['error'],['errors']
Availability,"onda install libefp -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_libefp`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect libefp and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. libefp from conda without thinking, consult. * To remove a conda installation, ``conda remove libefp``. **Source**. * .. image:: https://img.shields.io/github/tag/ilyak/libefp.svg?maxAge=2592000; :target: https://github.com/ilyak/libefp. * If using |PSIfour| built from source and you want libefp built from; from source also,; enable it as a feature with :makevar:`ENABLE_libefp`,; and let the build system fetch and build it and activate dependent code. .. index:: EFP; library fragments; pair: EFP; adding new. .. _`sec:findingEFPFragments`:. EFP Fragments; ~~~~~~~~~~~~~. LIBEFP comes with a couple dozen ready-to-use fragments (water, benzene,; common solvents, etc.) listed :ref:`here <sec:availableEFPFragments>`; with source https://github.com/libefp2/libefp/tree/master/fraglib. Any of these may be used directly in; a |PSIfour| input file as described :ref:`here <sec:usingEFPFragments>`. .. comment .. note:: The built-in fragment library distributed with Q-Chem (as of version 4.0.1) is *not*; .. comment equivalent to that distributed with LIBEFP. Although many of the same; .. comment molecules are present and should perform similarly in computations,; .. comment exact matches of fragment geometries or efp energies should not be; .. comment expected. See files in test case directories :source:`qchem-efp-sp; .. comment <tests/libefp/qchem-efp-sp>` and :source:`qchem-qmefp-sp; .. comment <tests/libefp/qchem-qmefp-sp>` for equivalent Q-Chem and |PSIfour|; .. comment EFP input files. Creating new efp fragments requires the `GAMESS; <https://www.msg.chem.iastate.edu/gamess/index.html>`_ quantum chemistry package.; Instructions on building new fragments are `here; <https://github.com/libefp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:3409,avail,availableEFPFragments,3409,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['avail'],['availableEFPFragments']
Availability,"onda-latest.sh ""https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh""; >>> curl -o Miniconda-latest.sh ""https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh"". .. code-block:: bash. >>> bash; >>> bash Miniconda-latest.sh -b -p $HOME/miniconda # agrees to conda's license terms; >>> echo ""export PATH=$HOME/miniconda/bin:\$PATH"" >> ~/.bashrc # Mac: use ~/.bash_profile; # log out, log back in so conda in path; >>> conda update --yes --all; >>> conda config --add channels http://conda.anaconda.org/psi4; >>> conda install --yes psi4; >>> psi4 ""$(dirname $(which psi4))""/../share/psi4/samples/sapt1/test.in # test installation. works b/c PSI_SCRATCH defaults to /tmp. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. Now you need only specify a scratch directory; (see :ref:`sec:Scratch`) by replacing the placeholder in the following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. .. note:: Above commands use bash for installation and set up your environment for bash at runtime. To use csh at runtime, follow the on-screen directions at the end of the installation or consult step 7 below. .. _`sec:slowconda`:. Detailed Installation of Miniconda; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. https://docs.conda.io/en/latest/miniconda.html. .. 0. Sanity check. If you already have Miniconda or Anaconda, skip to step 5. The whole installation takes ~5 min; reading this page takes far longer.; ..; .. 1. Get ``bzip2``. You'll need this slightly exotic command so run ``which`` to test for availability, and install from ``yum``, source, *etc.* if unavailable. You'll also need an internet connection for downloading; computers behind a firewall or with restricted login domains are eligible. So long as you can ssh *into* the computer to an account with write permi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:17678,echo,echo,17678,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['echo'],['echo']
Availability,"ons,""; U. Bozkaya, *J. Chem. Theory Comput.* **12**, 1179 (2016).; (doi: `10.1021/acs.jctc.5b01128 <https://doi.org/10.1021/acs.jctc.5b01128>`_). Density-Fitted and Cholesky-Decomposed Orbital-Optimized Linearized Coupled-Cluster Doubles Method (DF-OLCCD). * ""Orbital-optimized linearized coupled-cluster doubles with density-fitting; and Cholesky decomposition approximations: an efficient implementation,""; U. Bozkaya, *Phys. Chem. Chem. Phys.* **18**, 11362 (2016).; (doi: `10.1039/c6cp00164e <https://doi.org/10.1039/c6cp00164e>`_). Algebraic-Diagrammatic Construction methods (ADC); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. General ADC theory. * ""Intermediate state representation approach to physical properties of; electronically excited molecules,""; J. Schirmer, and A. B. Trofimov, *J. Chem. Phys.* **120**,; 11449-11464 (2004).; (doi: `10.1063/1.1752875 <https://doi.org/10.1063/1.1752875>`_). Implementation inside `adcc <https://adc-connect.org>`_,; the ADC backend used for most ADC methods available in |PSIfour|. * ""adcc: A versatile toolkit for rapid development of; algebraic-diagrammatic construction methods,""; M. F. Herbst, M. Scheurer, T. Fransson, D. R. Rehn, and A. Dreuw.; *WIREs Comput. Mol. Sci.*, (2020).; (DOI: `10.1002/wcms.1462 <https://doi.org/10.1002/wcms.1462>`_, Preprint https://adc-connect.org/q/publications. Density Matrix Renormalization Group (DMRG); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; * ""CheMPS2: a free open-source spin-adapted implementation of the density; matrix renormalization group for ab initio quantum chemistry,""; S. Wouters, W. Poelmans, P. W. Ayers and D. Van Neck,; *Comput. Phys. Commun.* **185** (6), 1501-1514 (2014).; (doi: `10.1016/j.cpc.2014.01.019 <https://doi.org/10.1016/j.cpc.2014.01.019>`_). * ""The density matrix renormalization group for ab initio quantum chemistry,""; S. Wouters and D. Van Neck, *Eur. Phys. J. D* **68** (9), 272 (2014).; (doi: `10.1140/epjd/e2014-50500-1 <https://doi.org/10.1140/epjd/e2014-505",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:24851,avail,available,24851,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"onv gradients for mp2.5 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290559,error,error,290559,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"or cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:75771,error,error,75771,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ords <apdx:pe>`, :ref:`PSI Variables <apdx:pe_psivar>`. .. image:: https://img.shields.io/badge/home-cppe-informational.svg; :target: https://github.com/maxscheurer/cppe. .. .. raw:: html; .. ; .. <br>; .. ; .. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; .. :target: http://pcmsolver.readthedocs.io/en/latest/. |PSIfour| contains code to interface to the CPPE library developed; by M. Scheurer.; The CPPE library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable embedding model (PE), an explicit, fragment-based solvent model [Olsen:2010:3721]_. For a general tutorial on how to prepare/perform PE calculations, read the; `tutorial review <https://onlinelibrary.wiley.com/doi/full/10.1002/qua.25717>`_. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/cppe/badges/version.svg; :target: https://anaconda.org/psi4/cppe. * CPPE is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, CPPE has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; CPPE can be obtained through ``conda install cppe -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_cppe`,; hint its location with :makevar:`cppe_DIR`,; and rebuild |PSIfour| to detect CPPE and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. cppe from conda without thinking, consult. * To remove a conda installation, ``conda remove cppe``. **Source**. * .. image:: https://img.shields.io/github/tag-date/maxscheurer/cppe.svg?maxAge=2592000; :target: https://github.com/maxscheurer/cppe. * If using |PSIfour| built from source and you want CPPE built from; from source also,; enable it as a feature with :makevar:`ENABLE_cppe`,; and let the build system fetch and build ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:2232,avail,available,2232,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['avail'],['available']
Availability,"orl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:259255,error,error,259255,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"orl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'acpf', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:10933,error,error,10933,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"orl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:16191,error,error,16191,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ormance. .. _`sec:scfcosx`:. COSX Exchange; ~~~~~~~~~~~~~. The semi-numerical COSX algorithm described in [Neese:2009:98]_ evaluates; two-electron ERIs analytically over one electron coordinate and numerically; over the other electron coordinate, and belongs to the family of pseudospectral ; methods originally suggested by Friesner. In COSX, numerical integration is performed on standard; DFT quadrature grids, which are described in :ref:`sec:dft`.; Both the accuracy of the COSX algorithm and also the computational; cost are directly determined by the size of the integration grid, so selection; of the grid is important. This COSX implementation uses two separate grids.; By default, the SCF algorithm is first converged on a smaller grid, followed by a; number of SCF iterations up to a maximum value (controlled by the |scf__cosx_maxiter_final| keyword); on a larger grid. By default, |scf__cosx_maxiter_final| is set to 1, a single; SCF iteration, which results in numerical errors comparable to; performing the entire SCF on the expensive larger grid at a computational cost; much closer to the smaller grid. Setting |scf__cosx_maxiter_final| to 0 disables the; larger grid entirely. Setting |scf__cosx_maxiter_final| to -1 allows; for the SCF to fully converge on the larger grid, useful for the study of wavefunction; properties such as gradients. The size of the initial grid is controlled by the keywords; |scf__cosx_radial_points_initial| and |scf__cosx_spherical_points_initial|.; The final grid is controlled by |scf__cosx_radial_points_final| and; |scf__cosx_spherical_points_final|. Currently, the default grids are very crude,; allowing for high performance at the cost of accuracy. If high-accuracy calculations; are desired with COSX, the grid sizes should be increased. Screening thresholds over integrals, densities, and basis extents are set; with the |scf__cosx_ints_tolerance|, |scf__cosx_density_tolerance|, and; |scf__cosx_basis_tolerance| keywords, respectively. |scf__",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:39526,error,errors,39526,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['errors']
Availability,"orthogonalized by; Symmetric or Canonical Orthogonalization. The number of OSOs may be; slightly smaller than the total number of USOs, due to removal of linear; dependencies via Canonical Orthogonalization. The OSOs are rarely; encountered, as usually we go straight from USOs to MOs. * ``MO`` (Molecular Orbitals): The combination of OSOs that diagonalizes; the Fock Matrix, so each basis function is a Hartree-Fock (or Kohn-Sham); molecular orbital. The number of OSOs and MOs is always the same. MOs are; orthonormal. * ``LO`` (Localized Orbitals): Localized occupied orbitals, a different; combination of the occupied molecular orbitals which enhances spatial; locality. LOs do not diagonalize the occ-occ block of the Fock Matrix, but; remain orthonormal to each other and the virtual space. .. _`faq:orbdims`:. How to name orbital dimensions; ------------------------------. There are a number of different names used to refer to the basis set size.; These may seem redundant, but they have subtly different meanings, as; detailed below. A calculation can use either pure (5D, 7F, 9G, etc.) basis functions or; Cartesian (6D, 10F, 15G, etc.), as dictated by the input file / basis set; specification. Also, the basis can be represented in terms of atomic; orbitals (AO) or symmetry-adapted orbitals (SO). Further complications; come from the fact that a nearly linearly-dependent basis set will have; functions removed from it to prevent redundancies. With all of these; factors in mind, here are the conventions used internally:. * nao |w---w| The number of atomic orbitals in Cartesian representation.; * nso |w---w| The number of atomic orbitals but in the pure representation if the current basis uses pure functions, number of Cartesian AOs otherwise.; * nbf |w---w| The number of basis functions, which is the same as nso.; * nmo |w---w| The number of basis functions, after projecting out redundancies in the basis. When molecular symmetry is utilized, a small array of sizes per irrep ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:13011,redundant,redundant,13011,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['redundant'],['redundant']
Availability,"ote': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:142068,error,error,142068,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ote': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:138420,error,error,138420,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ote': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:269485,error,error,269485,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ote': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:259470,error,error,259470,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ote': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-dfmp2', 'driver': 'grad",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:262454,error,error,262454,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ource:`LIBEFP <src/lib/libefp_solver>`. .. image:: https://img.shields.io/badge/home-libint-5077AB.svg; :target: https://github.com/evaleev/libint. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://evaleev.github.io/libint/. |PSIfour|, particularly libmints utterly relies upon the Libint library; developed by E. Valeev from early roots by J. Fermann. Libint requires no; additional licence, downloads, or configuration. Conversely, |Psifour|; cannot build *without* Libint. .. note:: As of Nov 2020 or release v1.4, |PSIfour| uses Libint2, not Libint1.; Compared to many other open-source QC codes, |PSIfour| requires a separate; Libint compilation with a different integrals ordering. See notes at top of; :source:`external/upstream/libint2/CMakeLists.txt` . Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libint2/badges/version.svg; :target: https://anaconda.org/psi4/libint2. * Libint is available as a conda package for Linux and macOS and Windows. * If using the |PSIfour| binary, Libint has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; Libint can be obtained through ``conda install libint2 -c psi4``.; Then, hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect Libint and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use ; .. Libint from conda without thinking, consult. * To remove a conda installation, ``conda remove libint2``. **Source**. * .. image:: https://img.shields.io/github/tag/evaleev/libint.svg?maxAge=2592000; :target: https://github.com/evaleev/libint/pull/233. Note that |PSIfour| uses v2 and a modified branch. * If using |PSIfour| built from source and you want Libint built from; from source also,; let the build system fetch and build it and activate dependent code.; Note that Li",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libint.rst:2327,avail,available,2327,doc/sphinxman/source/libint.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libint.rst,1,['avail'],['available']
Availability,"out PCMSolver see the :ref:`section on PCMsolver <sec:pcmsolver>`.; For a concise introduction to the; `theory behind ddx <https://ddsolvation.github.io/ddX/md_docs_theory.html>`_; or further `literature references <https://ddsolvation.github.io/ddX/label_references.html>`_; see the ddx documentation. The usage of ddx-based solvation models is enabled; by specifying |globals__ddx| ``true`` in your input file.; The solvation model itself is selected using the |ddx__ddx_model| parameter.; Additionally the definition of the solvent and solute cavity is required; and further parameters allow to influence details of discretisation,; numerical integration and iterative solvers,; see the next sections for details. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: Currently the ddx interface **cannot** exploit molecular point group symmetry. .. warning:: Analytic gradients and Hessians are currently **not available**; with dd-based solvation models. A minimal input for a Hartree--Fock calculation with dd-based PCM would look like; the following: ::. import psi4; nh3 = psi4.geometry(""""""; N -0.0000000001 -0.1040380466 0.0000000000; H -0.9015844116 0.4818470201 -1.5615900098; H -0.9015844116 0.4818470201 1.5615900098; H 1.8031688251 0.4818470204 0.0000000000; symmetry c1; no_reorient; no_com; units bohr; """"""). psi4.set_options({; ""basis"": ""sto-3g"",; ""scf_type"": ""pk"",; ""ddx"": True,; ""ddx_model"": ""pcm"",; ""ddx_solvent"": ""water"",; ""ddx_radii_set"": ""uff"",; }). scf_e = psi4.energy('SCF'). Solvent model and solvent cavity definition; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. Beyond setting |globals__ddx| to ``true`` and selecting; a solvent model using |ddx__ddx_model|,; the definitio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:4567,avail,available,4567,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['avail'],['available']
Availability,"ozen_uocc| [#f1]_ |; +----------------------------+----------------------------+-------------------------------+; | (all orbitals not in | |globals__ras4| | |; + |globals__frozen_uocc| +----------------------------+ +; | or |globals__frozen_docc| | |globals__ras3| | |; + are included in CI) +----------------------------+ +; | | |globals__ras2| | |; + +----------------------------+ +; | | |globals__ras1| | |globals__active| |; +----------------------------+----------------------------+-------------------------------+; | |globals__frozen_docc| | |globals__frozen_docc| | |globals__frozen_docc| |; +----------------------------+----------------------------+-------------------------------+. .. [#f1] |globals__frozen_uocc| is not required and will be inferred if ; |globals__active| is provided. However, if it is easier to specify; |globals__frozen_uocc|, then this may be provided and |globals__active| can; be inferred. The table above shows the relevant orbitals spaces for CI computations (an; analogous :ref:`table <table:mcscf_spaces>` for MCSCF is also available). ; The third column of the; table refers to CASCI, in which a full CI is performed in some smaller; set of ``active`` orbitals; it is equivalent to CASSCF except without; any orbital optimization. It can be invoked via ``energy('fci')``; with appropriate values selected for |globals__frozen_docc| and; |globals__active|. For CI computations, there is no difference between; |globals__frozen_docc| and |globals__restricted_docc|, or between; |globals__frozen_uocc| and |globals__restricted_uocc|. There are; differences between these keywords for :ref:`sec:mcscf`. .. index:: CI; basic-keywords. Basic DETCI Keywords; ~~~~~~~~~~~~~~~~~~~~. .. include:: autodir_options_c/detci__reference.rst; .. include:: autodir_options_c/detci__r_convergence.rst; .. include:: autodir_options_c/detci__ex_level.rst; .. include:: autodir_options_c/detci__fci.rst; .. include:: autodir_options_c/globals__frozen_docc.rst; .. include:: autodi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:8448,avail,available,8448,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['avail'],['available']
Availability,"pe': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277989,error,error,277989,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pe': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:376936,error,error,376936,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pe': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'olccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:349875,error,error,349875,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:170572,error,error,170572,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pe': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'dri",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:478850,error,error,478850,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pertinent calculation; results, such as one-particle densities, molecular orbitals and gradients. Completely new methods; ----------------------. A new method that is not a modification of existing code belongs in its own; folder in :source:`psi4/src/psi4`; see other folders in that exist in that; location for examples of setting up CMake, and make sure that the new folder is; added to :source:`psi4/src/psi4/CMakeLists.txt`. There are also a number of; variables that can be exported to be available to the user, as detailed in; :ref:`sec:psiVariables`. To set these variables, the following member of; Wavefunction should be called::. set_variable(""Variable Name"", variable_value);. The new variable should also be documented in; :source:`doc/sphinxman/source/glossary_psivariables.rst`. There are a; number of different helpers to export various quantities from the wavefunction; to external formats such as FCHK and MOLDEN. Because the Wavefunction makes; its members available to the Python layer, any other similar export functions; should be written in python. Integral consuming technologies; -------------------------------. The general philosophy in |PSIfour| is to try write two-electron integral; driven tasks in methods like Hartree-Fock, CIS and CPHF in terms of generalized; Fock-like matrices. From here, a single class can be used to construct these; generalized Fock matrices, which is what libFock; (:source:`psi4/src/psi4/libfock`) accomplishes. A number of integral; technologies -- such as integral-direct, disk-based and density fitting -- are; supported in libFock, making them generally available to all elements of the; code that use the generalized Fock matrix strategy. .. _`sec:prog_tour-exposing`:. Exposing C++ code to Python; ---------------------------. The recent push to move sections of the code that are not a bottleneck into the; Python layer requires that the C++ code is callable from Python and that its; results are accessible. The result accessibility is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst:2805,avail,available,2805,doc/sphinxman/source/prog_tour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_tour.rst,1,['avail'],['available']
Availability,"physically meaningful components: *i.e.*,; electrostatic, exchange, induction, and dispersion terms. In SAPT, the ; Hamiltonian of the dimer is partitioned into contributions from each ; monomer and the interaction. .. math:: H=F_A+W_A+F_B+W_B+V. Here, the Hamiltonian is written as a sum of the usual monomer Fock; operators, :math:`F`, the fluctuation potential of each monomer, :math:`W`, and the; interaction potential, :math:`V`. The monomer Fock operators, :math:`F_A+F_B`, are; treated as the zeroth-order Hamiltonian and the interaction energy is; evaluated through a perturbative expansion of :math:`V`, :math:`W_A`, and :math:`W_B`. ; Through first-order in :math:`V`, electrostatic and exchange interactions are; included; induction and dispersion first appear at second-order in :math:`V`. For; a complete description of SAPT, the reader is referred to the excellent; review by Jeziorski, Moszynski, and Szalewicz [Jeziorski:1994:1887]_. Several truncations of the closed-shell SAPT expansion are available in the SAPT; module of |PSIfour|. The simplest truncation of SAPT is denoted SAPT0; and defined in Eq. :eq:`SAPT0`. .. math:: E_{SAPT0} = E_{elst}^{(10)} + E_{exch}^{(10)} + E_{ind,resp}^{(20)} +; E_{exch-ind,resp}^{(20)} + E_{disp}^{(20)} + E_{exch-disp}^{(20)} + \delta_{HF}^{(2)}; :label: SAPT0. In this notation, :math:`E^{(vw)}` defines the order in :math:`V` and in :math:`W_A+W_B`; the; subscript, :math:`resp`, indicates that orbital relaxation effects are included. .. math:: E_{SAPT2} = E_{SAPT0} + E_{elst,resp}^{(12)} + E_{exch}^{(11)} +; E_{exch}^{(12)} + \; ^{t}\!E_{ind}^{(22)} + \; ^{t}\!E_{exch-ind}^{(22)}; :label: SAPT2. .. math:: E_{SAPT2+} = E_{SAPT2} + E_{disp}^{(21)} + E_{disp}^{(22)}; :label: SAPT2p. .. math:: E_{SAPT2+(3)} = E_{SAPT2+} + E_{elst,resp}^{(13)} + E_{disp}^{(30)}; :label: SAPT2pparen3. .. math:: E_{SAPT2+3} = E_{SAPT2+(3)}; + E_{exch-ind}^{(30)} + E_{ind,resp}^{(30)}; + E_{exch-disp}^{(30)} + E_{ind-disp}^{(30)} + E_{exch-ind-disp}^{(30)}",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:5677,avail,available,5677,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'sc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:73109,error,error,73109,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:74727,error,error,74727,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:60230,error,error,60230,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'ps",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:78449,error,error,78449,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"plementation of the HJS exchange-hole model, which provides an analytical form; for the short-range enhancement factor for wPBE, wPBEsol, and wB88. From a; physics perspective, this implementation of wPBE is extremely useful for; theoretical investigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model. :ref:`Double-Hybrid Functionals <table:dft_dhybrid>`; Double hybrids are percolating into |PSIfour|. Note that these are; only available with density-fitted, not conventional, MP2 algorithms. :ref:`-D Functionals <table:dft_disp>`; We have several -D2 functionals implemented. -D3 functionls are available; with the installation of Grimme's :ref:`DFTD3 program <sec:dftd3>`.; For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in |PSIfour| for correctness. If you find an error in a DFT; functional or have a request for a new functional, please let us know on our; forum or GitHub page. Grid Selection; ~~~~~~~~~~~~~~. |PSIfour| uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. ; The default grid in |PSIfour| is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights. Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the |scf__dft_spherical_points|; option, which may take one of the following values:. .. _`table:lebedevorder`:. +-----------------------------+-------+; | |scf__dft_spherical_points| | Order |; +=============================+=======+; | 6 | 3 |; +---------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:20616,reliab,reliable,20616,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['reliab'],['reliable']
Availability,"plicit commands at :ref:`sec:psi4conda`. .. _`sec:psi4conda`:. How to install a Psi4 binary with the Psi4conda installer, command-line; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour| on Linux,; Mac, Windows (Ubuntu shell for Windows accepts Linux installers), or native Windows.; Installs Miniconda+Psi4+AddOns into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:4837,echo,echo,4837,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['echo'],['echo']
Availability,"plied for each basis set,; including heavy-augmented and Truhlar's [Papajak:2011:10]_ calendar; truncations described in Table :ref:`Months Bases <table:basisMonths>`. Fitting bases ; in Tables :ref:`JKFIT <table:basisDunningJKFIT>`,; :ref:`RI <table:basisDunningMP2FIT>`, and :ref:`DUAL <table:basisDunningDUAL>`; are available for methods incorporating density-fitting or dual-basis; approximations. JKFIT sets are appropriate for fitting :math:`(oo|`\ -type products,; such as encountered in SCF theory and the electrostatics/exchange terms of SAPT.; RI sets are appropriate for fitting :math:`(ov|`\ -type products, such as encountered in; MP2 and most SAPT terms. Citations for basis sets can be found in their; definition files at :source:`psi4/share/psi4/basis` in the source. For basis set availability by; element and the default value for keyword |globals__puream|, consult; Appendix :ref:`apdx:basisElement`. |; |. .. _`table:basisPopleOrbital`:. .. table:: Summary of Pople-style orbital basis sets available in |PSIfour| [#f1]_. +-----------------+--------------+------------------+---------------+-------------------+----------------+; | no diffuse | heavy-augmented | augmented |; +-----------------+--------------+------------------+---------------+-------------------+----------------+; | basis set | alias | basis set | alias | basis set | alias |; +=================+==============+==================+===============+===================+================+; | STO-3G | | | | | |; +-----------------+--------------+------------------+---------------+-------------------+----------------+; | 3-21G | | | | | |; +-----------------+--------------+------------------+---------------+-------------------+----------------+; +-----------------+--------------+------------------+---------------+-------------------+----------------+; | 6-31G | | 6-31+G | | 6-31++G | |; +-----------------+--------------+------------------+---------------+-------------------+----------------+; | 6-31G(d) | 6-",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst:2973,avail,available,2973,doc/sphinxman/source/basissets_tables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/basissets_tables.rst,1,['avail'],['available']
Availability,"procedure, which produces a good balance between spatial; compactness of each block (which helps achieve linear scaling due to the; exponential decay of the basis functions), and retaining a large number of; points in each block (which helps keep the FLOP rate up by allowing for a; reasonably large amount of BLAS3/BLAS2 work to form the densities and potentials; in each block). For each block, a united set of significant basis functions is; determined by the cutoff radius of each shell of basis functions. The size of; this cutoff radius (and thereby the accuracy of the density/potential; evaluation) can be varied by setting the |scf__dft_basis_tolerance|, which; defaults to 1E-12. We are still exploring optimizations of the octree algorithm; and the basis cutoffs, but it is likely that significant speed gains may be; realized by relaxing the basis cutoff tolerance, with negligible decrease in; accuracy. Small density values can introduce numerical instabilities with some functionals that; can result in trailing SCF convergence issues or even numerical failures (NaNs).; If the default settings of the LibXC library are insufficient, a custom value can be ; request by setting |scf__dft_density_tolerance|. For notorious cases a value of 1E-10; is sensible. An example of a fully specified grid is as follows::. molecule {; H; H 1 0.7; }. set {; basis cc-pvdz; scf_type df; dft_spherical_points 590 # Often needed; dft_radial_points 99 # Often needed; dft_radial_scheme treutler # Rarely needed; dft_nuclear_scheme treutler # Rarely needed; dft_density_tolerance 1.0E-10 # Rarely needed; dft_basis_tolerance 1.0E-11 # Can speed things up, but benchmark the error; dft_pruning_scheme robust # Generally safe and will speed things up; }. energy('b3lyp'). ERI Algorithms; ~~~~~~~~~~~~~~. The ERI algorithms for the Coulomb and hybrid exchange are identical to; :ref:`those for Hartree--Fock <sec:scferi>`. However, for LRC functionals, the long-range; exchange contributions to the Kohn--",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:26555,failure,failures,26555,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['failure'],['failures']
Availability,"projected down to this subspace where conventional full; diagonalization algorithms can be applied. The subspace is augmented with new; trial vectors, until a suitable convergence criterion is met.; The efficiency of the subspace solver is determined by the first half-projection; of the Hessian in the trial subspace, that is, by the efficiency of the routines; performing the matrix-vector products. It is essential to note that, despite the hermiticity of the molecular; electronic Hessian, the response eigenvalue equation is not an Hermitian; eigenproblem, due to the nonunit metric on the right-hand side. Indeed the Davidson; solver, the standard subspace iteration method in quantum chemistry,; demonstrates very poor convergence, sometimes manifesting as spurious complex; eigenvalues.; The eigenproblem however has Hamiltonian symmetry: the; roots appear in pairs :math:`(\omega_{n}, -\omega_{n})`, as do the eigenvectors.; A robust subspace solver should preserve the Hamiltonian symmetry, by enforcing; the paired structure on the trial vectors themselves.; Since |PSIfour| employs real orbitals, the response eigenproblem can be brought; to the form:. .. math::; (\mathbf{A} - \mathbf{B})(\mathbf{A} + \mathbf{B})| \mathbf{X}_{n} + \mathbf{Y}_{n}\rangle; =; \omega^{2}_{n} | \mathbf{X}_{n} + \mathbf{Y}_{n}\rangle,. and further to the Hermitian form:. .. math::; (\mathbf{A} - \mathbf{B})^{\frac{1}{2}}(\mathbf{A} + \mathbf{B})(\mathbf{A} - \mathbf{B})^{\frac{1}{2}} \mathbf{T}_{n}; =; \omega^{2}_{n} \mathbf{T}_{n},. assuming the SCF reference is stable, *i.e.* :math:`(\mathbf{A}-\mathbf{B})` is positive-definite.; The paired vectors :math:`| \mathbf{X}_{n} - \mathbf{Y}_{n}\rangle` are left; eigenvectors and form a biorthonormal set together; with the right eigenvectors :math:`| \mathbf{X}_{n} + \mathbf{Y}_{n}\rangle`. The algorithm for the subspace iteration Hamiltonian solver implemented in |PSIfour|; was first described by Stratmann *et al.* [stratmann:1998]_.; As already me",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst:7616,robust,robust,7616,doc/sphinxman/source/tdscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst,1,['robust'],['robust']
Availability,"psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:166025,error,error,166025,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ptype`:. How to compile for debugging; ----------------------------. Flags to turn optimizations off and debugging on can be set across the; project and plugins with CMake variable ``CMAKE_BUILD_TYPE`` before; compiling. Note that these flags *will not* propagate to any add-ons that; are detected pre-built rather than built. * Build without optimization. .. code-block:: bash. cmake -DCMAKE_BUILD_TYPE=debug. set the CMake build type [default: release]. * Relevant CMake Options:. .. code-block:: bash. CMAKE_BUILD_TYPE=[debug|release] # Build type (Release or Debug)"" [default: release]. .. .. _`faq:setupobjdir`:; .. ; .. How to compile elsewhere than ``{top-level-psi4-dir}/objdir``; .. -------------------------------------------------------------; .. ; .. [How to choose the compilation directory, ``$objdir``](2_Planning#chooseobjdir); .. ; .. * Build in Specific Directory; .. ; .. .. code-block:: bash; .. ; .. cd $top-level-psi4-dir; .. cmake -S. -Bobj-gcc; .. cd obj-gcc. .. .. _`faq:erroreriam`:; ..; .. How to fix error ""``RuntimeError: value for ERI``""; .. --------------------------------------------------; ..; .. You will need to rebuild Libint. Reissue ``cmake`` or edit; .. ``CMakeCache.txt`` with larger ``MAX_AM_ERI`` and rebuild.; ..; .. * :ref:`faq:setupmaxameri`; .. * :ref:`faq:condamaxameri`. .. _`faq:chooseobjdir`:. How to choose the compilation directory, ``{objdir}``; -----------------------------------------------------. * there is no default; * common choices are ``objdir`` or ``build`` under :samp:`{top-level-psi4-dir}`. * ``cd {top-level-psi4-dir} && cmake -S. -Bobjdir``; * ``cd {top-level-psi4-dir} && cmake -S. -Bbuild``. * in-source builds (``*.cc`` and ``*.o`` in same directory) are disallowed; * builds *outside* :samp:`{top-level-psi4-dir}` are permitted. .. _`faq:doconfigure`:. How to save configuration settings for a future compilation; -----------------------------------------------------------. Create a file like ``do-configure`` with the ``cmak",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:23245,error,erroreriam,23245,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['erroreriam']
Availability,"putation. While the two-step algorithm requires a small number of; disk-intensive :math:`{\cal O}(N^5)` integral transformations, the simultaneous; algorithm benefits from a smaller number of expensive :math:`{\cal O}(N^6)`; cumulant updates. As a result, for small closed-shell systems the two-step; algorithm is usually preferred, while for larger systems and molecules with; open-shell character it is recommended to use the simultaneous algorithm.; Efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; :math:`(vv|vv)` and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the |dct__ao_basis| option to; DISK (currently used by default). For more recommendations on the choice of the algorithm see; :ref:`Recommendations <sec:dctrecommend>`. .. _`sec:dctgradients`:. Analytic Gradients; ~~~~~~~~~~~~~~~~~~. Analytic gradients are available for the DC-06, ODC-06, ODC-12, and ODC-13 methods.; For DC-06, the evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: ``TWOSTEP`` (default) and ``SIMULTANEOUS``. These algorithms are similar to those; described for the orbital and cumulant updates in the :ref:`Iterative Algorithms <sec:dctalgorithms>`; section and usually exhibit similar efficiency. The choice of the algorithm can; be made using the |dct__response_algorithm| option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. For the ODC-06, ODC-12 and ODC-13 methods no response equations; need to be solved, which makes the computation of the analytic gradients very; efficient. Analytic gradients are not available for the three-particle energy; correction :math:`(\lambda_3)`. .. _`sec:dctmethodsummary`:. Methods Summary; ~~~~~~~~~~~~~~~. The ta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:13141,avail,available,13141,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"putational step, namely the formation of the matrix-vector products; scales as :math:`{\cal O}(N^5)` for ADC(2) and :math:`{\cal O}(N^6)`; for ADC(2)-x and ADC(3). Several additional approximations,; such as frozen-core, frozen-virtual; may be applied to reduce the cost of the problem.; Using the core-valence separation (CVS) approximation; one may specifically target core-valence-excitations; at a substantial reduction in cost.; With the spin-flip modification few-reference ground states can; be tackled starting from a triplet reference by simultaneously; exciting an electron and flipping its spin.; A more detailed overview of such modifications gives [Dreuw:2014:82]_; and the `adcc theory documentation <https://adc-connect.org/latest/theory.html>`_. Available ADC methods; ---------------------; .. sectionauthor:: Michael F. Herbst. Several ADC methods are available in |PSIfour| for the computation of excited states,; see :ref:`table:adcsummary`.; The methods are available via an interface to the `adcc <https://adc-connect.org>`_ python module.; After a more general introduction, specific aspects of the implementation will be highlighted; in section :ref:`sec:interfaceadcc`. .. _`table:adcsummary`:. .. table:: ADC capabilities of Psi4. +---------------+------------+---------------+-------+------------------------------------+; | Method | References | Exc. Energies | Props | Supported values for kind keyword |; +===============+============+===============+=======+====================================+; | ADC(1) | RHF, UHF | yes | yes | any, singlet, triplet, spin_flip |; +---------------+------------+---------------+-------+------------------------------------+; | ADC(2) | RHF, UHF | yes | yes | any, singlet, triplet, spin_flip |; +---------------+------------+---------------+-------+------------------------------------+; | ADC(2)-x | RHF, UHF | yes | yes | any, singlet, triplet, spin_flip |; +---------------+------------+---------------+-------+---------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:4460,avail,available,4460,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,1,['avail'],['available']
Availability,"r', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:258463,error,error,258463,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"r', 'note': 'nyi: no df open-shell gradients for mp2 by dfmp2'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:261447,error,error,261447,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"r', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:206695,error,error,206695,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"r': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332659,error,error,332659,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"r, RHF available as CONV/DF. .. not enumerated; .. * scs/sos; .. * full controls: ccenergy, detci; .. * deprecated: adc, mrcc, dfocc; .. * composite: g2; .. * narrow alternate scf: mcscf, qchf. .. include:: autodoc_capabilities_summary.rst. .. index::; single: contact; single: bugs. Technical Support; =================. The |PSIfour| package is distributed for free and without any guarantee of; reliability, accuracy, or suitability for any particular purpose. No; obligation to provide technical support is expressed or implied. As time; allows, the developers will attempt to answer inquiries on the `forum; <http://forum.psicode.org>`_ or `GitHub; <https://github.com/psi4/psi4/issues/new>`_. For bug reports,; specific and detailed information, with example inputs, would be; appreciated. Where-to-post summary:[#f6]_. * How do I? -- `ask the forum <http://forum.psicode.org>`_. * I got this error, why? -- `ask the forum <http://forum.psicode.org>`_. * I got this error and I'm sure it's a bug -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * Can I open a discussion on this bit of code? -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * I have an idea/request and a plan -- `file a GitHub issue <https://github.com/psi4/psi4/issues/new>`_. * I have an idea/request -- `ask the forum <http://forum.psicode.org>`_. * Why do you? -- `ask the forum <http://forum.psicode.org>`_. * When will you? -- `ask the forum <http://forum.psicode.org>`_. * I have an experience that can improve the build documentation -- `inform the forum <http://forum.psicode.org>`_ or :source:`add to the documentation itself <doc/sphinxman/source>`. * Anything you want to share privately -- `crawdad@vt.edu <mailto:crawdad@vt.edu>`_ or `sherrill@gatech.edu <mailto:sherrill@gatech.edu>`_. .. [#f6] Adapted from `here <https://groups.google.com/forum/#!topic/google-collections-users/m8FnCcmtC88>`_. .. toctree::; :hidden:. mrcc_table_energy; cfour_table_energy; cfour_table_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:41857,error,error,41857,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['error'],['error']
Availability,"r>`. .. image:: https://img.shields.io/badge/home-adcc-informational.svg; :target: https://code.adc-connect.org. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://adc-connect.org/latest. |PSIfour| contains code to interface to the adcc python module developed; by M. F. Herbst *et. al.*. No additional licence or configuration; is required to use adcc. The module serves as the backend for; most algebraic-diagrammatic construction methods for correlated; excited states in |PSIfour|. For more details on ADC methods,; see :ref:`sec:adc`. Installation; ~~~~~~~~~~~~. For up to date information and more details,; see the `adcc installation documentation <https://adc-connect.org/latest/installation.html>`_. **Binary**. * .. image:: https://anaconda.org/adcc/adcc/badges/version.svg; :target: https://anaconda.org/adcc/adcc. * .. image:: https://img.shields.io/pypi/v/adcc; :target: https://pypi.org/project/adcc. * adcc is available as a conda package for Linux and macOS; and on pypi. .. * If using the |PSIfour| binary, adcc has already been installed alongside.; ..; .. * If using |PSIfour| built from source, and anaconda or miniconda has; .. already been installed (instructions at :ref:`sec:quickconda`),; .. adcc can be obtained through ``conda install adcc -c adcc``.; .. Then enable it as a feature with :makevar:`ENABLE_adcc`; .. and rebuild |PSIfour| to detect adcc and activate dependent code.; ..; .. * Previous bullet had details. To build |PSIfour| from source and use; .. adcc from conda without thinking, consult :ref:`sec:condapsi4dev`. * To remove a conda installation, ``conda remove adcc``. **Source**. * .. image:: https://img.shields.io/github/tag-date/adc-connect/adcc.svg?maxAge=2592000; :target: https://github.com/adc-connect/adcc. * If using |PSIfour| built from source and you want adcc installed as well,; enable it as a feature with :makevar:`ENABLE_adcc`,; and let the build system fetch and install it. Keywords for ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adcc.rst:2323,avail,available,2323,doc/sphinxman/source/adcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adcc.rst,1,['avail'],['available']
Availability,"re computed as :math:`E^{\Delta} = E^{1} -; E^{2}`, and the geometries for order-1 ``.pdb`` visualization files are taken; from system 1. I-SAPT: A Representative Example; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. caution:: As of April 2018, you can't specify molecule fragments; with an unphysical multiplicity like the singlet OH fragments in; the molecule below, especially as (again in the example below) the; overall molecule needs to be a singlet, which |PSIfour| doesn't at; present let be set independently. For situations like this, use the; temporary input pattern in :srcsample:`isapt1` . Below, we show an example of using I-SAPT0/jun-cc-pVDZ to analyze the; interaction between the two phenol groups in a 2,4-pentanediol molecule.; This example is; explicitly included in :srcsample:`isapt1`. A video; lecture explaining this example is available; `I-SAPT#1 <https://www.youtube.com/watch?v=fD6mu_tTG_c&index=3&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_,; while an additional video describing how to plot the density and ESP fields from; the I-SAPT embedding procedure is available `I-SAPT#2 <https://www.youtube.com/watch?v=hDbonAOD5dY&index=4&list=PLg_zUQpVYlA1Tc1X_HgAbqnFcHNydqN7W>`_::. memory 1 GB; ; molecule mol {; 0 1; O 0.39987 2.94222 -0.26535; H 0.05893 2.05436 -0.50962; --; 0 1; O 0.48122 0.30277 -0.77763; H 0.26106 -0.50005 -1.28451; --; 0 1; C 2.33048 -1.00269 0.03771; C 1.89725 0.31533 -0.59009; C 2.28232 1.50669 0.29709; C 1.82204 2.84608 -0.29432; C 2.37905 4.02099 0.49639; H 3.41246 -1.03030 0.19825; H 2.05362 -1.84372 -0.60709; H 1.82714 -1.16382 0.99734; H 2.36243 0.42333 -1.57636; H 3.36962 1.51414 0.43813; H 1.81251 1.38060 1.28140; H 2.14344 2.92967 -1.33843; H 3.47320 4.02400 0.48819; H 2.03535 3.99216 1.53635; H 2.02481 4.96785 0.07455; symmetry c1; no_reorient; no_com; }; ; # => Standard Options <= #; ; set {; basis jun-cc-pvdz; scf_type df; guess sad; freeze_core true; fisapt_do_plot true # For extra analysis; }; ; energy('fisapt0'). This is essential",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst:12683,avail,available,12683,doc/sphinxman/source/fisapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/fisapt.rst,1,['avail'],['available']
Availability,"re details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: Libxc, DFT, functionals. .. _`sec:libxc`:. Interface to Libxc by M. A. L. Marques; ======================================. .. codeauthor:: M. A. L. Marques and Micael Oliveira; .. sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <src/lib/libefp_solver>`. .. image:: https://img.shields.io/badge/home-libxc-5077AB.svg; :target: https://gitlab.com/libxc/libxc. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://www.tddft.org/programs/libxc/manual/. |PSIfour|, relies upon the Libxc library for density functionals. Libxc; requires no; additional licence, downloads, or configuration. Conversely, |Psifour|; cannot build *without* Libxc. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libxc/badges/version.svg; :target: https://anaconda.org/psi4/libxc. * Libxc is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, Libxc has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; Libxc can be obtained through ``conda install libxc -c psi4``.; Then, hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect Libxc and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. Libxc from conda without thinking, consult. * To remove a conda installation, ``conda remove libxc``. **Source**. * .. image:: https://img.shields.io/github/tag/loriab/libxc.svg?maxAg",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libxc.rst:1756,down,downloads,1756,doc/sphinxman/source/libxc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libxc.rst,1,['down'],['downloads']
Availability,"ree--Fock, or ROHF). Usually, UHF is a little easier to; converge (although it may be more susceptible to spin contamination than; ROHF). Geometry Optimization and Vibrational Frequency Analysis; ========================================================. The above examples were simple single-point energy computations; (as specified by the :py:func:`~psi4.driver.energy` function). Of course there are other; kinds of computations to perform, such as geometry optimizations and; vibrational frequency computations. These can be specified by replacing; :py:func:`~psi4.driver.energy` with :py:func:`~psi4.driver.optimize` or :py:func:`~psi4.driver.frequency`, respectively. Here's an example of optimizing the H\ :sub:`2`\ O molecule using Hartree--Fock with; a cc-pVDZ basis set (located in; :srcsample:`tu3-h2o-opt`). .. literalinclude:: @SFNX_INCLUDE@samples/tu3-h2o-opt/input.dat. This should perform a series of gradient computations. The gradient points; which way is downhill in energy, and the optimizer then modifies the; geometry to follow the gradient. After a few cycles, the geometry should; converge with a message like ``Optimization is complete!``. As indicated; in the following table (printed by the optimizer at the end of the; computation and grep-able with ``~``), the energy decreases with each step,; and the maximum force on each atom also decreases with each step (in; principle these numbers could increase in some iterations, but here they do; not). ::. --------------------------------------------------------------------------------------------------------------- ~; Step Total Energy Delta E MAX Force RMS Force MAX Disp RMS Disp ~; --------------------------------------------------------------------------------------------------------------- ~; 1 -76.026632734857 -76.026632734857 0.01523505 0.01245744 0.02742199 0.02277500 ~; 2 -76.027022668419 -0.000389933562 0.00178749 0.00142923 0.01007985 0.00594840 ~; 3 -76.027032729361 -0.000010060942 0.00014016 0.00008485 0",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:7338,down,downhill,7338,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['down'],['downhill']
Availability,"reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327665,error,error,327665,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t)",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:152832,error,error,152832,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:154435,error,error,154435,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rence': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:374677,error,error,374677,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rence': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:327214,error,error,327214,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rence': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:434568,error,error,434568,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rence': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:386242,error,error,386242,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rg/psi4/psi4 .; * Screenshot https://anaconda.org/conda-forge/psi4 .; * Add new year title and images to website; https://github.com/psi4/psicode-hugo-website/edit/master/content/posts/downloads.md .; * On the next day, check that the new year's plot appears at https://psicode.netlify.app/posts/downloads/ . Update copyright year; ---------------------. * ``cd ~/path/to/psi4``; * Primary target is licenses. - ``grep -rl ""(c) 2007-2017"" * | xargs sed -i '' ""s/(c) 2007-2017/(c) 2007-2018/g""``; - On Linux, drop the ``''`` in above command; - Need to do ``psi4/`` and ``docs/`` dirs. * Also, license in these files. - ``tests/runtest.py``; - ``README.md``. * Also, in content of :source:`doc/sphinxman/source/conf.py.in#L130`. Update counter scripts; ----------------------. * Log onto vergil as cdsgroup.; * Add new years, Python versions, and Psi4 versions as needed.; * check vergil /home/cdsgroup/psi4meta/download-analysis/installer: vi downloads_updater.py any new patterns to add?; * check vergil if changing any download patterns. Update samples; --------------. * Run ``make sphinxman`` at least once by hand; * Check in resulting ``psifiles.py`` and all the updated and new ``samples/`` files and dirs; * Make a lone PR and warn reviewers not to read it, since autogenerated. Collect new authors; -------------------. * Survey contributions to current Milestone. Add new contributors to the release notes GitHub issue.; * Figure out any new ""Additional Contributors"" authors since last release.; * Get permission of new authors and their particulars for ``codemeta.json``.; * Edit ``psi4/header.py`` accordingly and make PR. Run long tests; --------------. * Run the full test suite with threading parallelism on. There's one CC test that's a known fail; in parallel b/c it sets memory very low, iirc. - CTest (CLI)::. +++ b/tests/runtest.py; @@ -104,7 +104,7 @@ def backtick(exelist):. # run psi4 and collect testing status from any compare_* in input file; if os.path.isfile(infile):; - ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:3731,down,download,3731,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"rget: https://github.com/maxscheurer/cppe. * If using |PSIfour| built from source and you want CPPE built from; from source also,; enable it as a feature with :makevar:`ENABLE_cppe`,; and let the build system fetch and build it and activate dependent code. .. index:: PE; Using PE. .. _`sec:usingPE`:. Using the polarizable embedding model; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. The inclusion of a PE description of the solvent into your calculation; is achieved by setting |globals__pe| ``true`` in your input file. .. note:: At present, PE can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The CPPE library **cannot** exploit molecular point group symmetry. .. .. warning:: Analytic gradients and Hessians **are not** available with PE. Finite differences will be used; .. regardless of the ``dertype`` passed to the ``optimize`` function.; .. See :srcsample:`pcmsolver/opt-fd` for a sample input. .. The PCM model and molecular cavity are specified in a ``pcm`` section that has; .. to be explicitly typed in by the user. This additional section follows a syntax; .. that is slightly different from that of |Psifour| and is fully documented; .. `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PE would look like the following: ::. molecule pna {; C 8.64800 1.07500 -1.71100; C 9.48200 0.43000 -0.80800; C 9.39600 0.75000 0.53800; C 8.48200 1.71200 0.99500; C 7.65300 2.34500 0.05500; C 7.73200 2.03100 -1.29200; H 10.18300 -0.30900 -1.16400; H 10.04400 0.25200 1.24700; H 6.94200 3.08900 0.38900; H 7.09700 2.51500 -2.01800; N 8.40100 2.02500 2.32500; N 8.73400 0.74100 -3.12900; O 7.98000 1.33100 -3.90100; O 9.55600 -0.110",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst:4065,avail,available,4065,doc/sphinxman/source/cppe.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cppe.rst,1,['avail'],['available']
Availability,"rgies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'drive",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487213,error,error,487213,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'ener",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:363243,error,error,363243,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ri_c2_d2_l3). Psi4 will automatically fall back to finite difference.""); # endif(); add_library(libint2_external INTERFACE) # dummy. if(${CMAKE_INSIST_FIND_PACKAGE_Libint2}); message(VERBOSE ""Suitable Libint2 located externally as user insists""); endif(). else(); if(${CMAKE_INSIST_FIND_PACKAGE_Libint2}); message(FATAL_ERROR ""Suitable Libint2 could not be externally located as user insists""); endif(). # stopgap to avert a report that static lib not working on Linux; set(_build_shared_libs ""ON""). # reportedly Debug takes forever to build on Mac; set(_cmake_build_type ""Release""). include(ExternalProject). if(NOT ${BUILD_Libint2_GENERATOR}); if (${MAX_AM_ERI} GREATER 5); set(_url_am_src ""7-7-4-12-7-5"") # passes E&G 7z conv and 6z df, H Qz conv and df. covers all internal basis sets for energy and gradient; elseif (${MAX_AM_ERI} LESS_EQUAL 5); set(_url_am_src ""5-4-3-6-5-4"") # passes full. production Mac, temp production Linux; endif(). set(_url_l2_tarball ""https://github.com/loriab/libint/releases/download/v0.1/libint-2.8.1-${_url_am_src}_mm10f12ob2_0.tgz""). message(STATUS ""Suitable Libint2 could not be located, ${Magenta}Building Libint2 ${_url_am_src}${ColourReset} instead.""). if (MSVC); # Windows shared (dll) can't work; set(_build_shared_libs ""OFF""); endif(). ExternalProject_Add(libint2_external; URL ${_url_l2_tarball}; CMAKE_ARGS -GNinja; -DCMAKE_INSTALL_PREFIX=${STAGED_INSTALL_PREFIX}; -DCMAKE_BUILD_TYPE=${_cmake_build_type}; -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}; -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}; -DCMAKE_INSTALL_BINDIR=${CMAKE_INSTALL_BINDIR}; -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}; -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}; -DBoost_DIR=${Boost_DIR}; -DBOOST_ROOT=${BOOST_ROOT}; -DEigen3_DIR=${Eigen3_DIR}; -DEigen3_ROOT=${Eigen3_ROOT}; -DBUILD_SHARED_LIBS=${_build_shared_libs}; -DREQUIRE_CXX_API=ON; -DENABLE_FORTRAN=OFF; -DLIBINT2_PYTHON=OFF; -DENABLE_XHOST=${ENABLE_XHOST}; -DCMAKE_OSX_DEPLOYMENT_TARGET=${CMAKE_OSX_DEPLOYMENT_TARGET};",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:6469,down,download,6469,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['down'],['download']
Availability,"river': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333087,error,error,333087,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"river': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'olccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:333517,error,error,333517,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:262240,error,error,262240,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"rl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 's",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:227797,error,error,227797,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ry. * |optking__dynamic_level| allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps. * The developers have found the |optking__opt_coordinates| set to ""BOTH"" which; includes both the redundant internal coordinate set, as well as cartesian coordinates,; works well for systems with long 'arms' or floppy portions of a molecule poorly; described by local internals. * Optking does support the specification of ghost atoms. Certain internal coordinates such ; as torsions become poorly defined when they contain near-linear bends. ; An internal error `AlgError` may be raised in such cases. Optking will avoid such; coordinates when choosing an initial coordinate system; however, they may arise in the course; of an optimization. In such cases, try restarting from the most recent geometry.; Alternatively, setting |optking__opt_coordinates| to cartesian will avoid any internal; coordinate difficulties altogether. These coordinate changes can be automatically; performed by turning |optking__dynamic_level| to 1. .. warning:: In some cases, such as the coordinate issues described above, optking will reset to maintain; a consistent history. If an error occurs in Psi4 due to |optking__geom_maxiter| being exceeded but; the final step report indicates that optking has not taken |optking__geom_maxiter| steps, such a ; reset has occured. Inspection will show that the step counter was reset to 1 somewhere in the; optimization. .. index:: ; pair: geometry optimization; convergence criteria. Convergence Criteria; ^^^^^^^^^^^^^^^^^^^^. Optking monitors five",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:19384,error,error,19384,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['error'],['error']
Availability,"s (Ubuntu shell for Windows accepts Linux installers), or native Windows.; Installs Miniconda+Psi4+AddOns into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:5114,down,download,5114,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['download']
Availability,"s are normally solved iteratively where each iteration costs the same; as a normal Fock build (:math:`\mathbb{N}^4`). The overall SOSCF operation is; thus broken down into micro- and macroiterations where the microiterations; refer to solving the SOSCF equations and macroiterations are the construction; of a new Fock matrix based on the orbitals from a SOSCF step. SOSCF requires that all elements of the gradient to be less than one before the; method is valid. To this end, pre-SOSCF SCF iterations use normal; gradient-based extrapolation procedures (*e.g.*, DIIS) until the gradient; conditions are met. Note that while the total number of macroiterations will be; less for SOSCF than gradient-based convergence acceleration, the cost of solving; the microiterations typically results in the overall cost being greater for; SOSCF than for gradient-based methods. Therefore, SOSCF should only be used if; it is difficult to locate a stable minimum. SOSCF is available for all HF and DFT references with the exception of meta-; GGA functionals. To enable, set the option |scf__soscf| to ``true``.; Additional options to modify the number of microiterations taken are as; follows:. |scf__soscf_start_convergence|: when to start SOSCF based on the current density RMS. |scf__soscf_max_iter|: the maximum number of SOSCF microiterations per macroiteration. |scf__soscf_conv|: the relative convergence tolerance of the SOSCF microiterations. |scf__soscf_print|: option to print the microiterations or not. .. _`sec:scfstability_doc`:. Stability Analysis; ~~~~~~~~~~~~~~~~~~. SCF algorithms attempt to minimize the gradient of the energy with respect; to orbital variation parameters. At convergence, the gradient should be approximately zero; given a convergence criterion. Although this is enough to make sure the SCF converged to a; stationary point, this is not a sufficient condition for a minimal SCF solution. It may be; a saddle point or a maximum. To ensure that a minimum has been found, the ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:44529,avail,available,44529,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"s of the External Project owners are to:. (1) allow us to contribute some CMake files to your build system; so that compile flags and dependencies (e.g., BLAS/LAPACK) can be; consistent with the |PSIfour| build and so the installed project can; be readily detected by |PSIfour| or any interested party (through a; CMake imported target). (2) provide us a tag at a tested commit/version number so their; development may be ongoing. (3) communicate with us when they've made improvements and minted; a new tag. * In return, for Add-Ons the |PSIfour| project will:. (1) leave control of their code under your purview. (2) maintain any interfacing code needed. (3) regularly run integration tests between |PSIfour| and your code. (4) build a mostly statically linked conda package so that any; of your users can obtain a pre-built binary distribution through; ``conda install addon --channel psi4``. (5) provide a development sandbox for your code through |PSIfour| plugins. (6) provide conda download counts independent of |PSIfour|. .. _`faq:readoptions`:. How to name keywords in ``psi4/src/read_options.cc``; ----------------------------------------------------. A few guidelines for standardizing option names among modules. * ``TRIPLES`` (not trip), ``TRIPLETS`` (not trip), ``SINGLES`` (not sing),; ``SINGLETS`` (not sing). * ``CONVERGENCE`` (not conv, not converge) and ``TOLERANCE`` (not tol). * Convergence of a method should be governed by an ``E_CONVERGENCE`` for; energy and either a ``D_CONVERGENCE`` for density or a ``R_CONVERGENCE``; for residual/amplitudes. All of these should be doubles- let the input; parser handle the flexible input format. * Diis should have a boolean ``DIIS`` (not do_diis, not use_diis) to turn; on/off diis extrapolation, a ``DIIS_MIN_VECS`` and ``DIIS_MAX_VECS`` for; minimum and maximum number of diis vectors to use, and a ``DIIS_START``; which is the iteration at which to start saving vectors for diis. Not all; modules conform to all these at present, bu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst:7763,down,download,7763,doc/sphinxman/source/manage_addon.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_addon.rst,1,['down'],['download']
Availability,"s printed; to your screen as advice upon installing |PSIfour| into a Anaconda,; Miniconda, or Psi4conda distribution, :samp:`{condadist} =; {ana|mini|psi4}conda`. To see the message again after initial installation,; with the conda environment active, run ``.psi4-post-link.sh``.; If ``which conda python psi4`` points to your; :samp:`{condadist}` and ``echo $PSI_SCRATCH`` is set, skip ahead to the; ""Run |PSIfour|\"" commands below. Otherwise, issue the following; commands directly in your terminal or place them into your ""rc"" file and; open a new terminal. If you installed the Psi4conda distribution or installed the |PSIfour|; conda package into the main environment of an Anaconda or Miniconda; distribution and added that to your :envvar:`PATH`, as prompted, then; ``which psi4`` likely yields :samp:`{condadist}/bin/psi4` and the ``PATH``; setting lines below are redundant. If you installed into a conda environment :samp:`{p4env}` and performed; :samp:`conda activate {p4env}`, then ``which psi4`` likely yields; :samp:`{condadist}/envs/{p4env}/bin/psi4` and the ``PATH`` setting lines; below are redundant. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; unsetenv PSIDATADIR; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:31876,redundant,redundant,31876,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['redundant'],['redundant']
Availability,"s the advantage that there is no need to explicitly parametrize; the wavefunctions of the molecular excited states. Furthermore, the excitation; eigenvectors, :math:`(\mathbf{X}_{n} \mathbf{Y}_{n})^{t}`,; provide information on the nature of the transitions and can be used to form; spectroscopic observables, such as oscillator and rotatory strengths. The :math:`\mathbf{A}` and :math:`\mathbf{B}` matrices appearing on the left-hand side are; the blocks of the molecular electronic; Hessian, [Norman2018-tn]_; whose dimensionality is :math:`(OV)^{2}`, with :math:`O` and :math:`V` the number of occupied and; virtual molecular orbitals, respectively.; This prevents explicit formation of the full Hessian, and subspace iteration; methods need to be used to extract the first few roots.; In such methods, the eigenvectors are expanded in a subspace of trial vectors,; whose dimensionality is greatly lower than that of the full eigenproblem.; The Hessian is projected down to this subspace where conventional full; diagonalization algorithms can be applied. The subspace is augmented with new; trial vectors, until a suitable convergence criterion is met.; The efficiency of the subspace solver is determined by the first half-projection; of the Hessian in the trial subspace, that is, by the efficiency of the routines; performing the matrix-vector products. It is essential to note that, despite the hermiticity of the molecular; electronic Hessian, the response eigenvalue equation is not an Hermitian; eigenproblem, due to the nonunit metric on the right-hand side. Indeed the Davidson; solver, the standard subspace iteration method in quantum chemistry,; demonstrates very poor convergence, sometimes manifesting as spurious complex; eigenvalues.; The eigenproblem however has Hamiltonian symmetry: the; roots appear in pairs :math:`(\omega_{n}, -\omega_{n})`, as do the eigenvectors.; A robust subspace solver should preserve the Hamiltonian symmetry, by enforcing; the paired structure on th",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst:6690,down,down,6690,doc/sphinxman/source/tdscf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tdscf.rst,1,['down'],['down']
Availability,"s': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'statu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:68489,error,error,68489,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"s': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5611,error,error,5611,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"s': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:480599,error,error,480599,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"s, dielectric_constant, temperature); kappa_invang = kappa_invbohr / constants.bohr2angstroms. computes the parameter (in inverse Angström) for a 0.1 mol/l solution of sodium; chloride in water, thus a solution woith 0.1 mol/l of a ``+1``-charged ion; and 0.1 mol/l of a ``-1``-charged ion. The **cavity** in ddx is defined as a union of spheres around each atom.; Usually the spehere radii for each atom are determined using a standard; set of tabulated radii per atomic species, determined by the |ddx__ddx_radii_set| parameter.; Currently ``bondi`` [Bondi:1964:441]_ and ``uff`` [Rappe:1992:114]_; are supported for |ddx__ddx_radii_set| with ``uff`` selected by default.; These radius values are conventionally scaled by an additional factor before use,; conventionally 1.1 for ``uff`` and 1.2 for ``bondi``. Customisation of the scaling; is possible using the |ddx__ddx_radii_scaling| parameter.; A more fine-grained control over the sphere radii is available by explicitly providing; a list of radii (one per atom, exactly in the order of the input geometry); using the |ddx__ddx_radii| parameter. Note that the same unit as for the molecular; input is expected for the radii. .. include:: autodir_options_c/globals__ddx.rst; .. include:: autodir_options_c/ddx__ddx_model.rst; .. include:: autodir_options_c/ddx__ddx_radii.rst; .. include:: autodir_options_c/ddx__ddx_radii_scaling.rst; .. include:: autodir_options_c/ddx__ddx_radii_set.rst; .. include:: autodir_options_c/ddx__ddx_solvent_epsilon.rst; .. include:: autodir_options_c/ddx__ddx_solvent.rst; .. include:: autodir_options_c/ddx__ddx_solvent_kappa.rst. Numerical integration and discretisation parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters can be altered to balance the cost and accuracy; of the implict description of the solvation. |ddx__ddx_solute_radial_points| and |ddx__ddx_solute_spherical_points| influence; the accuracy of the numerical grid used to obtain the representation; of the elect",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:7705,avail,available,7705,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['avail'],['available']
Availability,"s3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |detci__active|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible representations is used.; The default is the zero vector. RESTRICTED\_UOCC = (integer array); Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of highest energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4542,error,error,4542,doc/sphinxman/source/attic/detcas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst,1,['error'],['error']
Availability,"s__ci_type|, |globals__cc_type|, which can have values ``CONV``,; ``DF``, and ``CD``. These are all *global* keywords, as their values are; shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls a; ""select"" function rather than a ""run"" function. ::. procedures = {; 'energy': {; 'scf' : run_scf,; 'mp3' : select_mp3,; 'dct' : run_dct,. Then in :source:`psi4/driver/procrouting/proc.py`, the select function runs through; reference, type, and possibly freeze_core to specify the proc; function to call for any able, non-default module (*e.g.*, ``mtd_type ==; 'DETCI'`` ) or able, default module (*e.g.*, ``mtd_typd == ['', 'FNOCC']`` ).; Don't worry about 'else' statements as anything that falls through will be; caught and a readable error generated. ::. def select_mp3(name, **kwargs):; """"""Function selecting the algorithm for a MP3 energy call; and directing to specified or best-performance default modules. """"""; reference = psi4.get_option('SCF', 'REFERENCE'); mtd_type = psi4.get_global_option('MP_TYPE'); module = psi4.get_global_option('QC_MODULE'); # Considering only [df]occ/fnocc/detci. func = None; if reference == 'RHF':; if mtd_type == 'CONV':; if module == 'DETCI':; func = run_detci; elif module == 'FNOCC':; func = run_fnocc; elif module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'UHF':; if mtd_type == 'CONV':; if module in ['', 'OCC']:; func = run_occ; elif mtd_type == 'DF':; if module in ['', 'OCC']:; func = run_dfocc; elif mtd_type == 'CD':; if module in ['', 'OCC']:; func = run_dfocc; elif reference == 'ROHF':; if mtd_ty",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:7407,error,error,7407,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['error'],['error']
Availability,"sc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:61372,error,error,61372,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'cc3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:79591,error,error,79591,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:528682,error,error,528682,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:402610,error,error,402610,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:412771,error,error,412771,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:42116,error,error,42116,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:47614,error,error,47614,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2.5', 'reference': 'uhf'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:277773,error,error,277773,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b3lyp', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b3lyp'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:31474,error,error,31474,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:516192,error,error,516192,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'oremp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:460507,error,error,460507,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:331580,error,error,331580,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'cor",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485146,error,error,485146,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driv",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:404123,error,error,404123,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156739,error,error,156739,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162075,error,error,162075,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:395544,error,error,395544,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:382524,error,error,382524,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'wb97x', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd for lrc in dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'wb97x', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:518254,error,error,518254,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"sec:slowconda`:. Detailed Installation of Miniconda; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. https://docs.conda.io/en/latest/miniconda.html. .. 0. Sanity check. If you already have Miniconda or Anaconda, skip to step 5. The whole installation takes ~5 min; reading this page takes far longer.; ..; .. 1. Get ``bzip2``. You'll need this slightly exotic command so run ``which`` to test for availability, and install from ``yum``, source, *etc.* if unavailable. You'll also need an internet connection for downloading; computers behind a firewall or with restricted login domains are eligible. So long as you can ssh *into* the computer to an account with write permissions and can connect to the internet *from* the computer, all is well.; ..; .. .. code-block:: bash; ..; .. # check; .. >>> which bzip2; .. /usr/bin/bzip2; .. >>> curl -O ""http://psicode.org/psi4manual/master/introduction.html""; .. >>> ls -1; .. introduction.html; ..; .. 2. Get Miniconda installer script. Either issue the command below or download from http://conda.pydata.org/miniconda.html by clicking on the appropriate link for your OS. If you already have or would prefer to use Anaconda rather than Miniconda, that's fine. Locate or install Anaconda, check that ``conda`` is in your path, and skip to step 4.; ..; .. .. code-block:: bash; ..; .. >>> curl -O ""http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh""; .. # check; .. >>> ls -1; .. Miniconda-latest-Linux-x86_64.sh; ..; .. 3. Install Miniconda. Execute the script and answer its questions, particularly your choice of installation location. You may need to replace the filename below with the correct filename for the OS/version of installer you downloaded. Execute with ``bash`` regardless of ``csh``/``bash`` shell. If you're a ``bash`` user, it's convenient to agree to its offer to prepend ``conda`` commands to your :envvar:`PATH` in ``~/.bashrc``. If you're a ``csh``/``tcsh`` user, it's convenient to do the same by hand to your ``~/.tcshrc``: ``",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:19071,down,download,19071,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['download']
Availability,"sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:dkh>`, :ref:`Samples <apdx:testSuitedkh>`. .. image:: https://img.shields.io/badge/home-erd-5077AB.svg; :target: https://github.com/psi4/erd. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://onlinelibrary.wiley.com/doi/10.1002/jcc.21018/abstract. .. _`sec:erdinstall`:. These are the AcesIII electron repulsion integrals that have; been partially interfaced into libmints. Enabling erd and adding; ``set integral_package erd`` (do this in ``~/.psi4rc`` for universal; effect) runs libderiv from Libint for derivative integrals and erd for; non-derivative integrals. .. warning:: The interface between erd and libderiv is not fully; debugged. So analytic gradients, particularly density-fitted ones,; are wrong, as are ESP calculations and some energies for long-range; corrected (""omega"") functionals. Insofar as faulty answers are; anticipated with |globals__integral_package| ``erd``, |PSIfour| will; throw an error if you try to execute that class of computation. But; there may be more, so use with caution. .. warning:: erd seems to be having some problems with Intel 2018 compilers. presently disabled in conda package. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/erd/badges/version.svg; :target: https://anaconda.org/psi4/erd. * ERD is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). .. * If using the |PSIfour| binary, erd has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; erd can be obtained through ``conda install erd -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_erd`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect erd and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/erd.rst:2181,fault,faulty,2181,doc/sphinxman/source/erd.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/erd.rst,2,"['error', 'fault']","['error', 'faulty']"
Availability,"sed on the orbital gradient to produce an informed; estimate of the next Fock Matrix. DIIS is almost always necessary to converge; the SCF procedure and is therefore turned on by default. In rare cases, the; DIIS algorithm may need to be modified or turned off altogether, which may be; accomplished via :term:`options <DIIS (SCF)>`.; ADIIS [On by Default]; ADIIS uses previous iterates of the Fock and density matrices to produce an; informed estimate of the next Fock matrix. ADIIS estimates are based on minimizing; an energy estimate rather than zeroing the residual, so this performs best in the early; iterations. By default, Psi will start using ADIIS before blending the ADIIS step with; the DIIS step, eventually using the pure DIIS step. The closely-related EDIIS procedure; may be used instead by setting |scf__scf_initial_accelerator|. This is formally identical; to ADIIS for HF, but the methods will differ for more general DFT.; MOM [Off by Default]; MOM was developed to combat a particular class of convergence failure:; occupation flipping. In some cases, midway though the SCF procedure, a partially; converged orbital which should be occupied in the fully-optimized SCF solution; has a slightly higher orbital eigenvalue than some other orbital which should be; destined to be a virtual orbital. This results in the virtual orbital being; spuriously occupied for one or more iterations. Sometimes this resolves itself; without help, other times the occupation flips back and forth between two, four,; or more orbitals. This is typically visible in the output as a non-converging; SCF which eventually settles down to steady oscillation between two (or more); different total energies. This behavior can be ameliorated by choosing occupied; orbitals by ""shape"" instead of by orbital eigenvalue, *i.e.*, by choosing the set; of new orbitals which looks most like some previously known ""good"" set. The; ""good"" set is typically the occupied orbitals from one of the oscillating; itera",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:25201,failure,failure,25201,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['failure'],['failure']
Availability,"ser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. ======================================; Installation and Runtime Configuration; ======================================. .. toctree::; :maxdepth: 2. FAQ <build_faq>; build_obtaining; build_planning; Installing from Binary <conda>. .. index:: scratch files, restart; .. _`sec:Scratch`:. Scratch Files; =============. One very important part of user configuration at the end of the; installation process; is to tell |PSIfour| where to write its temporary; (""scratch"") files. Electronic structure packages like |PSIfour| can; create rather large temporary disk files. It is very important to ; ensure that |PSIfour| is writing its temporary files to a disk drive; physically attached to the computer running the computation. If it; is not, it will significantly slow down the program and the network.; By default, |PSIfour| will write temporary files to ``/tmp``, but this; directory is often not large enough for typical computations. Therefore,; you need to (a) make sure there is a sufficiently large directory on a; locally attached disk drive (100GB--1TB or more, depending on the size of; the molecules to be studied) and (b) tell |PSIfour| the path to this; directory. Scratch file location can be specified through the ; :envvar:`PSI_SCRATCH` environment variable or through the |psirc| file; (see section :ref:`sec:psirc`). Most of the time, :envvar:`PSI_SCRATCH`; is preferred, and it overrides any existing |psirc| setting. You can set up ; :envvar:`PSI_SCRATCH` by issuing the following commands in a terminal,; or including them in the appropriate ``rc`` file. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files. .. code-block:: bash. # sh, bash:",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:1824,down,down,1824,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['down'],['down']
Availability,setupprefix`; #. :ref:`faq:condapsi4dev`; #. :ref:`faq:setupmaxameri`; #. :ref:`faq:cmakeverbose`; #. :ref:`faq:doconfigure`; #. :ref:`faq:cray`. Non-QC Dependencies; -------------------. #. :ref:`faq:coredepend`; #. :ref:`cmake:python`; #. :ref:`faq:libmwcondapy`; #. :ref:`cmake:lapack`; #. :ref:`cmake:cxx`; #. :ref:`faq:approvedcxx`; #. :ref:`faq:modgcc`; #. :ref:`faq:macxcode`; #. :ref:`cmake:fortran`; #. :ref:`faq:approvedfc`; #. :ref:`faq:macgfortran`. QC Dependencies and Extensions; ------------------------------. #. :ref:`faq:addondepend`; #. :ref:`faq:localaddon`; #. :ref:`cmake:chemps2`; #. :ref:`faq:chemps2gccflto`; #. :ref:`cmake:dkh`; #. :ref:`cmake:libefp`; #. :ref:`cmake:erd`; #. :ref:`cmake:gdma`; #. :ref:`cmake:libint`; #. :ref:`cmake:pcmsolver`. Testing ; -------. #. :ref:`faq:testsoutput`; #. :ref:`faq:subsettests`; #. :ref:`faq:minutetests`; #. :ref:`faq:pytest`. Runtime Setup; -------------. #. :ref:`faq:runordinaryexe`; #. :ref:`faq:runordinarymodule`; #. :ref:`faq:runfrombinary`; #. :ref:`faq:inplace`; #. :ref:`faq:psi4scratch`; #. :ref:`faq:psidatadir`; #. :ref:`faq:psi4psiapipath`; #. :ref:`faq:modulenotfounderror`. Running |PSIfour|; -----------------. #. :ref:`What command line options does Psi4 have <sec:commandLineOptions>`; #. :ref:`What environment variables affect Psi4 <sec:environmentVariables>`; #. :ref:`faq:runtimepython`; #. :ref:`faq:psi4version`; #. :ref:`faq:psi4PBS`; #. :ref:`faq:psi4fileretention`; #. :ref:`faq:logging`; #. :ref:`faq:findexemod`. Runtime Errors and Debugging; ----------------------------. #. :ref:`faq:gdblldb`; #. :ref:`faq:setuptype`; #. :ref:`faq:wrongpyfalse`. Managing Code; -------------. #. :ref:`faq:dirlayoutinstall`; #. :ref:`faq:githubworkflow`; #. :ref:`faq:vigitmerge`. Miscellaneous; -------------. #. :ref:`faq:writepsi4`; #. :ref:`faq:psi4logos`. .. #. :ref:`faq:getversion`; .. #. :ref:`faq:binarypackage`; .. #. :ref:`faq:getting-and-using-the-psi4dependencies-package`; .. #. :ref:`faq:erroreriam`. ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_faq.rst:4243,error,erroreriam,4243,doc/sphinxman/source/build_faq.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_faq.rst,1,['error'],['erroreriam']
Availability,"shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:482639,error,error,482639,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"si4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:160264,error,error,160264,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"si4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cisd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:165600,error,error,165600,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"si4-ccenergy', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv open-shell a-ccsd(t) by ccenergy'}; {'module': 'psi4', 'driver': 'energy', 'method': 'a-ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:5845,error,error,5845,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"si4-fnocc', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'modu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303351,error,error,303351,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"si4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. It works because :envvar:`PSI_SCRATCH`; defaults to ``/tmp``. Now you need only specify a permanent scratch; directory (see :ref:`sec:Scratch`) by replacing the placeholder in the; following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. Configuration for this set-up is sum",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:5765,down,download,5765,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['download']
Availability,"sislistdunning.py` and :source:`psi4/driver/qcdb/basislistother.py`. Building all the documentation takes ~10 minutes. There is now good; dependency structure built into the :source:`doc/sphinxman/CMakeLists.txt`; , so very long builds should be infrequent (unless you're touching; :source:`psi4/src/read_options.cc` or the driver. Note that not all dependencies are; encoded (PSI variables, for instance, depend on every .cc file in the; source tree), so for a definitive doc build, remove (in the object; directory) ``doc/sphinxman`` and start from scratch. Even ~10 minutes of build time can be annoying when developing; documentation and testing ``rst`` files. In that situation, use the target; below which builds only the written docs (not autodocs) in; ``psi4/doc/sphinxman/source`` quickly, though with a lot of warnings for; unresolved links::. >>> make sphinxmini. reStructuredText; ^^^^^^^^^^^^^^^^. Sphinx files are written in reStructuredText (\*.rst). In the html; documentation, source code is available from the sidebar. Here are a; few resources on Sphinx formatting. * `reStructuredText <http://docutils.sourceforge.net/docs/user/rst/quickref.html>`_; * `links example <https://github.com/sphinx-doc/sphinx/issues/5208#issuecomment-736259355>`_; * `rendered test document <http://docutils.sourceforge.net/test/functional/expected/standalone_rst_html4css1.html>`_; *vs.* `source test document <http://svn.python.org/projects/external/docutils-0.5/docs/user/rst/demo.txt>`_; * `Sphinx Docs <https://www.sphinx-doc.org/en/master/contents.html>`_. .. * `Another reStructuredText <http://people.ee.ethz.ch/~creller/web/tricks/reST.html>`_; .. * `LaTeX that Sphinx can handle <ftp://ftp.ams.org/ams/doc/amsmath/short-math-guide.pdf>`_. Math in the Codebase; ^^^^^^^^^^^^^^^^^^^^. It is often useful to have mathematical expressions in docstrings or; comments in the code that are auto-documented into the manual. Such; locations include the ``#! comment`` comments at the top of test case;",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst:6674,avail,available,6674,doc/sphinxman/source/documentation.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/documentation.rst,1,['avail'],['available']
Availability,"ss', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no conventional scf for df/cd cc in fnocc'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:105758,error,error,105758,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ssian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:271291,error,error,271291,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,3,['error'],['error']
Availability,"ssible to run a closed-shell SAPT computation at any; level using only the monomer-centered basis. To do this, simply add; ``sapt_basis='monomer'`` to the energy function, such as ::. energy('sapt2',sapt_basis='monomer'). This procedure leads to faster compuations, but it converges more slowly; towards the complete basis set limit than the default procedure, which uses; the dimer-centered basis set. Hence, monomer-centered basis SAPT; computations are not recommended. The open-shell SAPT0 code is not; compatible yet with monomer-centered computations. Computations with Mid-bonds; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^. SAPT computations with midbonds can be accomplished by adding a third ghost; monomer to the computation. For example ::. molecule dimer {; 0 1; He 0 0 5; --; 0 1; He 0 0 -5; --; 0 1; @He 0 0 0; }. Here the functions of the third monomer will be added to the virtual space of; the entire computation. Note that an error will be thrown if each atom in the; third monomer is not a ghost to prevent confusion with three-body SAPT which is; not currently supported by Psi4. Interpreting SAPT Results; ^^^^^^^^^^^^^^^^^^^^^^^^^. We will examine the results of a SAPT2+3/aug-cc-pVDZ computation on the; water dimer. This computation can be performed with the following ; input::. molecule water_dimer {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561; units angstrom; }; ; set globals {; basis aug-cc-pvdz; guess sad; scf_type df; }; ; set sapt {; print 1; nat_orbs_t2 true; freeze_core true; }; ; energy('sapt2+3'). To reiterate some of the options mentioned above: the; |sapt__nat_orbs_t2| option will compute MP2 natural orbitals and use; them in the evaluation of the triples correction to dispersion, and the; |sapt__freeze_core| option will freeze the core throughout the SAPT; computation. This SAPT2+3/aug-cc-pVDZ computation prod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:32800,error,error,32800,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['error'],['error']
Availability,"st(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}); set(TargetOpenMP_FIND_COMPONENTS ""CXX""); find_package(MathOpenMP); endif(). #include(CMakePrintHelpers); #cmake_print_properties(TARGETS OpenMP::OpenMP_CXX OpenMP::OpenMP tgt::MathOpenMP lapack; # PROPERTIES INTERFACE_COMPILE_DEFINITIONS INTERFACE_COMPILE_OPTIONS INTERFACE_INCLUDE_DIRS INTERFACE_LINK_LIBRARIES). get_property(_ill TARGET lapk PROPERTY INTERFACE_LINK_LIBRARIES); list(GET _ill 0 _ill0); message(STATUS ""${Cyan}Found LAPACK${isMKL}${ColourReset}: ${_ill0};...""). if(NOT (${isMKL} MATCHES ""MKL"")); message(WARNING ""${Yellow}MKL is the only BLAS/LAPACK distribution thoroughly tested with Psi4. Several others are mostly fine, with problems cropping up in particular modules or when running in threaded mode. When using a non-MKL distribution, please run the test suite in full and also run particular tests in threaded mode, if you plan to run Psi4 threaded. MKL is freely available through conda; see instructions to compile against conda MKL through the 'source' option on the download website page. OpenBLAS also seems to work, but be sure you're using the OpenMP, not the pthreads, variant.${ColourReset}""); endif(). unset(BLAS_LIBRARIES); unset(LAPACK_LIBRARIES); unset(BLAS_INCLUDE_DIRS); unset(LAPACK_INCLUDE_DIRS). set(PN ${PROJECT_NAME}); install(TARGETS blas lapk lapack; EXPORT ""${PN}Targets""). # <<< Export Config >>>. include(CMakePackageConfigHelpers). set(CMAKECONFIG_INSTALL_DIR ""${TargetLAPACK_INSTALL_CMAKEDIR}""); configure_package_config_file(${PN}Config.cmake.in; ""${CMAKE_CURRENT_BINARY_DIR}/${PN}Config.cmake""; INSTALL_DESTINATION ${CMAKECONFIG_INSTALL_DIR}); install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PN}Config.cmake; ${CMAKE_CURRENT_SOURCE_DIR}/FindTargetOpenMP.cmake; ${CMAKE_CURRENT_SOURCE_DIR}/FindMathOpenMP.cmake; DESTINATION ${CMAKECONFIG_INSTALL_DIR}); install(EXPORT ""${PN}Targets""; NAMESPACE ""tgt::""; DESTINATION ${CMAKECONFIG_INSTALL_DIR}). add_custom_target(lapack_external; ${CMAKE_COMMAND} """,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/common/lapack/CMakeLists.txt:2432,avail,available,2432,external/common/lapack/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/common/lapack/CMakeLists.txt,2,"['avail', 'down']","['available', 'download']"
Availability,"st; .. include:: autodir_options_c/sapt__sapt_dft_mp2_disp_alg.rst; .. include:: autodir_options_c/sapt__sapt_quiet.rst. .. index:: SAPT; higher-order. Higher-Order SAPT; ^^^^^^^^^^^^^^^^^. For smaller systems (up to the size of a nucleic acid base pair), more; accurate interaction energies can be obtained through higher-order SAPT; computations. The SAPT module can perform density-fitted evaluations; of SAPT2, SAPT2+, SAPT2+(3), and SAPT2+3 energies for closed-shell systems ; only. Publications resulting from the use of the higher-order SAPT code ; should cite the following: ; [Hohenstein:2010:014101]_. For methods SAPT2+ and above, one can replace the many-body treatment of; dispersion by an improved method based on coupled-cluster doubles (CCD).; This approach tends to give good improvements when dispersion effects; are very large, as in the PCCP dimer (see [Hohenstein:2011:2842]_).; As shown in [Parker:2014:094106]_, whether or not CCD dispersion offers; more accurate interaction energies tends to depend on the SAPT truncation; and basis set employed, due to cancellations of errors. Thanks to; natural orbital methods [Parrish:2013:174102]_, the SAPT code; is able to include CCD dispersion with only a modest additional cost.; Computations employing CCD dispersion should cite [Parrish:2013:174102]_. ; To request CCD dispersion treatment in a SAPT computation, simply append; ``(ccd)`` to the name of the method, as in the following examples ::. 	energy('sapt2+(ccd)'); 	energy('sapt2+(3)(ccd)'); 	energy('sapt2+3(ccd)'). The :math:`\delta_{MP2}` corrections can also be computed automatically; by appending ``dmp2`` to the name of the method, with or without CCD dispersion ::. 	energy('sapt2+dmp2'); 	energy('sapt2+(3)dmp2'); 	energy('sapt2+3dmp2'); 	energy('sapt2+(ccd)dmp2'); 	energy('sapt2+(3)(ccd)dmp2'); 	energy('sapt2+3(ccd)dmp2'). A brief note on memory usage: the higher-order SAPT code assumes that; certain quantities can be held in core. This code requires sufficie",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:26769,error,errors,26769,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['error'],['errors']
Availability,"status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv for ccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccd', 'reference': 'uhf', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:86570,error,error,86570,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:330409,error,error,330409,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"stein, U. Bozkaya, A. Yu. Sokolov,; R. Di Remigio, R. M. Richard, J. F. Gonthier, A. M. James,; H. R. McAlexander, A. Kumar, M. Saitow, X. Wang, B. P. Pritchard,; P. Verma, H. F. Schaefer III, K. Patkowski, R. A. King, E. F. Valeev,; F. A. Evangelista, J. M. Turney, T. D. Crawford, and C. D. Sherrill,; submitted. -----------------------------------------------------------------------. Psi4 started on: Friday, 28 April 2017 07:31PM. Process ID: 95107; PSIDATADIR: /Users/johndoe/psi4/objdir8/stage/usr/local/psi4/share/psi4; Memory: 500.0 MiB; Threads: 1. >>> psi4.version_formatter(); '1.1rc2.dev17'; >>> psi4.version_formatter('all'); '1.1rc2.dev17 {condadoc} c852257 1.0.0.999 dirty 1.0 <-- 1.1rc2.dev17+c852257'; >>> psi4.version_formatter(""""""{{{branch}}} {versionlong}""""""); '{condadoc} 1.1rc2.dev17+c852257'. .. _`faq:grepascii`:. How to locate non-ascii characters in the codebase; --------------------------------------------------. Neither the Python interpreter nor Sphinx like non-ASCII characters one; bit, though the errors may be intermittant. Output files are usually ok,; so Jerome can live, for now. To aid in tracking down offenders, here's; the ``vi`` and ``grep`` search strings. In the docs, you want to use; the substitutions in :source:`doc/sphinxman/source/abbr_accents.rst`; instead of the actual characters. ::. # vim; :/[^\x00-\x7F]. # bash; grep -r --color='auto' -P -n ""[^\x00-\x7F]"" psi4/; ; .. _`faq:undefversion`:. How to fix ""Psi4 undefined"" version; -----------------------------------. When in a git repo, the versioner uses ``git describe`` and psi4/metadata.py; to compute the version. If you don't have all the latest tags, this mechanism; can't work. To solve, pull tags and remake. ::. # upstream in `git remote -v` points to github.com/psi4/psi4.git; >>> git fetch upstream 'refs/tags/*:refs/tags/*'; >>> make; # version healed; ; .. _`faq:cannotimportcoretlpd`:. How to fix ""cannot import name 'core' from {top-level-psi4-dir}; -----------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_git.rst:7865,error,errors,7865,doc/sphinxman/source/manage_git.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_git.rst,1,['error'],['errors']
Availability,"stigations, as it is parameter free, and properly integrated; against the partition function in the exchange hole. We would like to thank Dr.; Scuseria for providing helpful advice and a reference implementations of the; older HSE exchange-hole model which led to the successful implementation of the; HJS model. :ref:`Double-Hybrid Functionals <table:dft_dhybrid>`; Double hybrids are percolating into |PSIfour|. Note that these are; only available with density-fitted, not conventional, MP2 algorithms. :ref:`-D Functionals <table:dft_disp>`; We have several -D2 functionals implemented. -D3 functionls are available; with the installation of Grimme's :ref:`DFTD3 program <sec:dftd3>`.; For now, the pure-GGA B97-D; functional of Grimme is remarkably accurate, and the hybrid B3LYP-D; functional is also quite reliable. Note: we have made a sincere effort to rigorously test all functionals; implemented in |PSIfour| for correctness. If you find an error in a DFT; functional or have a request for a new functional, please let us know on our; forum or GitHub page. Grid Selection; ~~~~~~~~~~~~~~. |PSIfour| uses the standard Lebedev-Laikov spherical quadratures in concert with a; number of radial quadratures and atomic partitioning schemes. ; The default grid in |PSIfour| is a Lebedev-Treutler (75,302) grid with a Treutler; partition of the atomic weights. Spherical grids are all of the extremely efficient Lebedev-Laikov type.; Spherical grid resolution is controlled by the |scf__dft_spherical_points|; option, which may take one of the following values:. .. _`table:lebedevorder`:. +-----------------------------+-------+; | |scf__dft_spherical_points| | Order |; +=============================+=======+; | 6 | 3 |; +-----------------------------+-------+; | 14 | 5 |; +-----------------------------+-------+; | 26 | 7 |; +-----------------------------+-------+; | 38 | 9 |; +-----------------------------+-------+; | 50 | 11 |; +-----------------------------+-------+; | 74 | 13 |; +-------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst:20755,error,error,20755,doc/sphinxman/source/dft.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dft.rst,1,['error'],['error']
Availability,"stsoutput`:. How to see CTest testing errors; -------------------------------. ::. >>> ctest; Test project /your/path/2/psi4/build/directory/tests; Start 248: tu1-h2o-energy; 1/2 Test #248: tu1-h2o-energy ................... Passed 1.73 sec; Start 6: cc1; 2/2 Test #6: cc1 ..............................***Failed 0.07 sec; ... When ``ctest`` reports that some (or all) tests have failed, look in your; build directory for file; :samp:`{objdir}/Testing/Temporary/LastTest.log`. It may have a; ``.tmp`` extension, depending on whether the last test was interrupted and; a few other factors. Either way, this file should contain CMake's testing; output, as well as everything that was printed to the screen. .. _`faq:pytest`:. How to test a Psi4 installation; -------------------------------. ``ctest`` requires a connection to source files and ``cmake``; machinery and so can only be performed from :samp:`{objdir}`; (staged installation). To test an installed |PSIfour| (full or staged; installation), a supplementary test suite is available to be; run via pytest. Running a limited number of ""smoke"" tests is; generally sufficient to verify an installation. * From the executable. .. code-block:: bash. # smoke tests only in serial; psi4 --test; # smoke tests only in parallel; psi4 --test -n`getconf _NPROCESSORS_ONLN`; # most tests; psi4 --test full. * From the library (|PSIfour| must be detectable as a Python; module. See setup at :ref:`faq:psi4psiapipath`; if needed.). .. code-block:: bash. # smoke tests only; python -c ""import psi4; psi4.test('smoke')""; # most tests; python -c ""import psi4; psi4.test()"". * From pytest directly. If package ``pytest-xdist`` is installed, can run in parallel. .. code-block:: bash. # smoke tests only; pytest {prefix}/lib/{PYMOD_INSTALL_LIBDIR}/psi4/tests/ -m smoke -n auto; # all tests; pytest {prefix}/lib/{PYMOD_INSTALL_LIBDIR}/psi4/tests/ -n auto. Output looks something like the below. ``PASSED`` in green is good; (means test ran correctly); ``SKIPPED`",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:63670,avail,available,63670,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['avail'],['available']
Availability,"style molecule, the; interface cannot judge whether a sandwich mode (drop the |PSIfour| molecule; and use the cfour block as the entirety of the ``ZMAT``) or a standard mode; (translate the |PSIfour| molecule and append additional input from the; cfour block) is intended. The latter is what actually occurs. If; there is both a |PSIfour| molecule and a molecule in the cfour block,; ``ZMAT`` *will* end up with multiple molecules and multiple ``*CFOUR(...)``; blocks, and it *will not* run. Therefore, if mixing sandwich and; standard or pure-\ |PSIfour| computations in an input file, place all; the sandwich jobs at the beginning before declaring |PSIfour|; molecules. If necessary, clear the cfour block with ``cfour {}`` before; commencing standard P4C4 jobs. .. _`sec:cfourOutput`:. Output; ~~~~~~. The output of :program:`xcfour` invoked from a |PSIfour| input file is; written to the |PSIfour| output file as the computation progresses. If a; Cfour module terminates with a non-zero error code, the value will show up; in :psivar:`CFOUR ERROR CODE`. .. rubric:: Energies & Scalars. After execution of :program:`xcfour` has completed, the output string is; extensively parsed and appropriate results are stored in :ref:`PSI; Variables <apdx:cfour_psivar>`. All gleaned variables are printed in the; Cfour output section of the |PSIfour| output file, as shown below. ::. //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>//; // Cfour c4-ccsd(t) Energy Results //; //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<//. Variable Map:; ----------------------------------------------------------------------------; ""(T) CORRECTION ENERGY"" => -0.007263598030; ""CCSD CORRELATION ENERGY"" => -0.275705492359; ""CCSD TOTAL ENERGY"" => -76.338453952539; ""CCSD(T) CORRELATION ENERGY"" => -0.007263598030; ""CCSD(T) TOTAL ENERGY"" => -76.345717550569; ""CFOUR ERROR CODE"" => 0.000000000000; ""CURRENT CORRELATION ENERGY"" => -0.007263598030; ""CURRENT ENERGY"" => -76.345717550569; ""CURRENT REFERENCE ENERGY"" => -76.062748460180; ""MP2 CORRELAT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:22222,error,error,22222,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['error'],['error']
Availability,"t and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. ===================; Obtaining |PSIfour|; ===================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. .. _`faq:obtainpsi4`:. How to obtain Psi4: start with find-the-code quiz, end in ``{top-level-psi4-dir}``; ----------------------------------------------------------------------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. Take a :ref:`quiz <faq:quiz>` to find the best version of the codebase for; your needs, be it binary, tarball, or version-controlled repository. Or,; select outright among:. #. :ref:`faq:binary`; #. :ref:`faq:binarypackage`; #. :ref:`faq:clonepsi4public`; #. :ref:`faq:forkpsi4public` (only path to develop |PSIfour|); #. :ref:`faq:tarballpsi4public`. .. _`faq:quiz`:. Find-the-code Quiz; ------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. * I just want to run the code. I may tweak the Python, but I'm not; developing anything to contribute back to the code base. * Provided I still get good,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst:1342,down,downloads,1342,doc/sphinxman/source/build_obtaining.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst,1,['down'],['downloads']
Availability,"t be in; .. the near future. To run this code, (1) build the ``c4`` branch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. python module and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcdb is what needs to be imported in preference to the one; .. already in psi4). Execute psi4 as usual. .. caution:: The p4c4 interface hasn't been fully adapted for the new March 2014 version. Cfour for |PSIfour| Users; ~~~~~~~~~~~~~~~~~~~~~~~~~. * Set memory as usual. * Set molecule as usual. * Set basis set as usual (Cfour only cares about orbital basis, no fitting; bases). * Set the task as usual, indicating Cfour as the intended code by; prepending ""c4-"" to the method argument. So ``energy('scf')`` becomes; ``energy('c4-scf')`` and ``optimize('ccsd(t)')`` becomes; ``optimize('c4-ccsd(t)')``. Find available methods for; :py:func:`~psi4.driver.energy` at :ref:`Energy (CFOUR) <table:energy_cfour>`; and for :py:func:`~psi4.driver.optimize` at :ref:`Gradient (CFOUR); <table:grad_cfour>`. * Generally, the p4c4 interface will handle best practices for path of; execution: ``vcc``/``ecc``, derivative type, *etc.* The user is still; responsible for setting convergence, frozen core, guess, diis, *etc.*; For the moment, so-called ""best-practices"" keywords are summarized at; :ref:`Best Practices <table:cfour_cc_program>`. * For the type of computation intended, find appropriate options at; :ref:`Keywords <apdx:cfour>`. These keyword summaries contain the same; information as the `proper CFOUR options list; <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.ListOfKeywordsInAlphabeticalOrder>`_; plus notes on keyword relevance when run through |PSIfour|. Information; at the `CFOUR manual; <http://slater.chemie.uni-mainz.de/cfour/index.php?n=Main.Manual>`_ may; also be useful, as may the many samples at",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:3313,avail,available,3313,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability,"t numbers, and third argument is an auth token.; ``bash pull_gha_installers.sh 47226565 47226573 715...4f3``.; * Make WindowsWSL and any other symlinks the script frontmatter advises. Build Docker images; -------------------. Docker images are built through GHA on the https://github.com/psi4/psi4meta repository from a Conda; environment specification and get served from DockerHub, https://hub.docker.com/r/psi4/psi4/tags . * Edit specification https://github.com/psi4/psi4meta/blob/master/docker/environment.yaml. - Edit the packages and channels info if necessary. Probably long-term stable.; - Don't edit the Python version, as that's controlled by the GHA. * Edit the GHA control file https://github.com/psi4/psi4meta/blob/master/.github/workflows/Docker.yml; ``matrix.cfg`` list for changed Python version and to label the tags with current Psi4 from c-f.; * Commit ``environment.yaml`` or ``Docker.yml`` to trigger GHA Docker builds.; * Check at DockerHub for new images. .. Generate download page for psicode.org (pre-Fall 2023); .. ------------------------------------------------------; ..; .. * Be in repo psicode-hugo-website; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/content/installs/v13rc2.md. Note the edition string ``v13rc2`` in frontmatter for this and future filenames; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; .. * Enter ``scripts/`` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; .. * Run the ``install-generator.py`` in place. It will dump new files into ``data/installs/`` _subdirs_. Be sure to ``git add`` them.; .. * Installer page is now ready.; .. * Shift ""latest"" alias in frontmatter from whichever page is currently active to the new page. This makes sure ""Downloads"" on the navigation b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:27465,down,download,27465,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"t with high-performance math libraries. * lightweight software stack (<100 MB w/o |PSIfour|; ~1 GB including |PSIfour|, numpy, and MKL). * updated nightly so new features accessible. * standardizes python distribution so no need to find/install libpython packages. * add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages. * develop |PSIfour| through plugins without a pre-existing development environment, see :ref:`sec:condaplugins`. The |PSIfour| binary repository is at `Anaconda (formerly Binstar) <https://anaconda.org/psi4>`_. For commands to get a default installation, go to :ref:`sec:psi4conda`; or the :psicode:`psicode downloads page <installs/latest/>` .; Users proficient with conda may prefer to consult :ref:`sec:condadetails`.; For more flexibility and a detailed explanation, go to; :ref:`sec:slowconda` and :ref:`sec:slowpsi4`. .. _`faq:psicodedownload`:. How to install a Psi4 binary with the Psi4conda installer, download site; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. `Download one of the nine installers; <http://psicode.org/downloads.html>`_ (Linux/Mac/Windows; Py38/39/310).; ``bash`` it. Follow the prompts and *do* make the adjustments to; :envvar:`PATH` and :envvar:`PSI_SCRATCH` that it suggests at the end. Test; with ``psi4 --test`` (green and yellow good; red bad). Done. Explicit commands at :ref:`sec:psi4conda`. .. _`sec:psi4conda`:. How to install a Psi4 binary with the Psi4conda installer, command-line; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour| on Linux,; Mac, Windows (Ubuntu shell for Windows accepts Linux installers), or native Windows.; Installs Miniconda+Psi4+AddOns into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for altern",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:3443,down,download,3443,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['download']
Availability,"t', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'rohf', 'fcae':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:148388,error,error,148388,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"t. .. index:: SNS-MP2. .. _`sec:snsmp2`:. Spin-Network-Scaled MP2 (SNS-MP2) by D. E. Shaw; ===============================================. .. codeauthor:: D. E. Shaw Research; .. sectionauthor:: Shannon E. Houck. .. image:: https://img.shields.io/badge/home-sns--mp2-5077AB.svg; :target: https://github.com/DEShawResearch/sns-mp2. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/DEShawResearch/sns-mp2/blob/master/README.md. This plugin is an implementation of the SNS-MP2 algorithm developed by McGibbon ; et. al. [McGibbon:2017:161725]_. The SNS-MP2 method uses neural networking to ; improve the accuracy of MP2 (:ref:`sec:dfmp2`) interaction energies for dimer molecules.; The plugin is distributed under the 2-clause BSD license. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/snsmp2/badges/version.svg; :target: https://anaconda.org/psi4/snsmp2. * snsmp2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the Psi4conda installer, snsmp2 has already been installed alongside. * If using the |PSIfour| conda package, the snsmp2 conda package can; be obtained through ``conda install snsmp2 -c psi4`` or ``conda install; psi4-rt -c psi4``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; snsmp2 can be obtained through ``conda install snsmp2 -c psi4``.; Then, hint its location with :envvar:`PYTHONPATH`. * To remove a conda installation, ``conda remove snsmp2``. **Source**. * .. image:: https://img.shields.io/github/tag/DEShawResearch/sns-mp2.svg?maxAge=2592000; :target: https://github.com/DEShawResearch/sns-mp2. * Download the plugin from the GitHub repository:. .. code-block:: bash. >>> git clone https://github.com/DEShawResearch/sns-mp2. * Once dowloaded, the plugin can be installed as outlined in the documentation:. .. code-block:: bash. >>> cd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst:2020,avail,available,2020,doc/sphinxman/source/plugin_snsmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst,1,['avail'],['available']
Availability,"tatus': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:505654,error,error,505654,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"te': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485769,error,error,485769,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"te': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:73343,error,error,73343,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"te': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell gradients for cc2 by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cc3', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:74961,error,error,74961,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"te. The |psimrcc__follow_root| option may be used; to follow different roots of the effective Hamiltonian. A value of 1; instructs PSIMRCC to follow the solution with the lowest energy given; a certain set of determinants. ::. molecule o2 {; 0 3; O; O 1 2.265122720724; units au; }; set {; basis cc-pvtz; }; set mcscf {; reference rohf; docc [3,0,0,0,0,2,1,1] # Doubly occupied MOs; socc [0,0,1,1,0,0,0,0] # Singly occupied MOs; }; set psimrcc {; corr_wfn ccsd # Do Mk-MRCCSD ; frozen_docc [1,0,0,0,0,1,0,0] # Frozen MOs; restricted_docc [2,0,0,0,0,1,1,1] # Doubly occupied MOs; active [0,0,1,1,0,0,0,0] # Active MOs; frozen_uocc [0,0,0,0,0,0,0,0] # Frozen virtual MOs; corr_multp 1 # Select the Ms = 0 component; follow_root 1; wfn_sym B1g # Select the B1g state; }; energy('psimrcc'). Note that the oxygen molecule has 16 electrons (including core), while; the ``docc`` array contains only 7 doubly-occupied orbitals (or 14; electrons). Hence, two more electrons are available to place into; the active space (given by ``active``), which consists of 2 orbitals.; Thus there are two active electrons in two orbitals. In this particular; example, we are using standard ROHF orbitals for the Mk-MRCCSD procedure,; rather than TCSCF orbitals. Nevertheless, with the present code, ; these orbitals must be provided through the MCSCF module, as specified in the; ``set mcscf`` section above. Orbital ordering and selection of the model space; _________________________________________________. The reference determinants :math:`\Phi_\mu` are specified in PSIMRCC; via occupational numbers. PSIMRCC requires that four arrays be specified; for this purpose. - Frozen doubly occupied orbitals (|globals__frozen_docc|) are doubly; occupied in each reference determinant and are not correlated in the; MRCC procedure.; - Doubly occupied orbitals (|globals__restricted_docc|) are doubly; occupied in each reference determinant and are correlated in the MRCC; procedure.; - Active orbitals (|globals__active|) ar",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst:6829,avail,available,6829,doc/sphinxman/source/psimrcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psimrcc.rst,1,['avail'],['available']
Availability,"th:`{\cal O}(N^6)`; cumulant updates. As a result, for small closed-shell systems the two-step; algorithm is usually preferred, while for larger systems and molecules with; open-shell character it is recommended to use the simultaneous algorithm.; Efficiency of the simultaneous algorithm can be greatly increased by avoiding; the transformation of the four-index virtual two-electron integrals; :math:`(vv|vv)` and computing the terms that involve these integrals in the AO; basis. In order to do that one needs to set the |dct__ao_basis| option to; DISK (currently used by default). For more recommendations on the choice of the algorithm see; :ref:`Recommendations <sec:dctrecommend>`. .. _`sec:dctgradients`:. Analytic Gradients; ~~~~~~~~~~~~~~~~~~. Analytic gradients are available for the DC-06, ODC-06, ODC-12, and ODC-13 methods.; For DC-06, the evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: ``TWOSTEP`` (default) and ``SIMULTANEOUS``. These algorithms are similar to those; described for the orbital and cumulant updates in the :ref:`Iterative Algorithms <sec:dctalgorithms>`; section and usually exhibit similar efficiency. The choice of the algorithm can; be made using the |dct__response_algorithm| option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. For the ODC-06, ODC-12 and ODC-13 methods no response equations; need to be solved, which makes the computation of the analytic gradients very; efficient. Analytic gradients are not available for the three-particle energy; correction :math:`(\lambda_3)`. .. _`sec:dctmethodsummary`:. Methods Summary; ~~~~~~~~~~~~~~~. The table below summarizes current DCT code features:. .. _`table:dct_methods_summary`:. +-------------------------------------+--------------------------------------------------------------+---------+----------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:13332,avail,available,13332,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry is utilized to reduce number of; integrals.; OUT_OF_CORE; An out-of-core, unsorted algorithm using exact ERIs. Overcomes the; memory bottleneck of the current PK algorithm. Integrals are generated; only once, and symmetry is utilized to reduce number of integrals.; DIRECT; A threaded, sieved, integral-direct algorithm, with full permutational; symmetry. This algorithm is brand new, but seems to be reasonably fast; up to 1500 basis functions, uses zero disk (if DF pre-iterations are; turned off), and can obtain significant; speedups with negligible error loss if |scf__ints_tolerance|; is set to 1.0E-8 or so.; DF [:ref:`Default <table:conv_scf>`]; A density-fitted algorithm designed for computations with thousands of; basis functions. This algorithm is highly optimized, and is threaded; with a mixture of parallel BLAS and OpenMP. Note that this algorithm; should use the -JKFIT series of auxiliary bases, *not* the -RI or; -MP2FIT bases. The default guess for auxiliary basis set should work; for most bases, otherwise the |scf__df_basis_scf| keyword can; be used to manually specify the auxiliary basis. This algorithm is; preferred unless either absolute accuracy is required; [:math:`\gtrsim`\ CCSD(T)] or a -JKFIT auxiliary basis is unavailable; for the orbital basis/atoms involved.; CD; A threaded algorithm using approximate ERIs obtained by Cholesky; decomposition of the ERI tensor. The accuracy of the Cholesky; decomposition is controlled by the keyword |scf",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:28954,error,error,28954,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['error']
Availability,"the; default input file. .. code-block:: bash. >>> cd myplugin; >>> `psi4 --plugin-compile`; >>> make; >>> psi4. |PSIfour| comes with a few templates that provide an excellent starting; point. These include code that demonstrates AO, MO, and SO integrals. Use; one of the following commands that meets your needs::. >>> psi4 --plugin-name myplugin --plugin-template aointegrals; >>> psi4 --plugin-name myplugin --plugin-template mointegrals; >>> psi4 --plugin-name myplugin --plugin-template sointegrals; >>> psi4 --plugin-name myplugin --plugin-template wavefunction; >>> psi4 --plugin-name myplugin --plugin-template scf; >>> psi4 --plugin-name myplugin --plugin-template dfmp2. .. >>> psi4 --plugin-name myplugin --plugin-template ambit. .. Several stable sample plugin directories are available to consult in the; .. :source:`plugins` directory. Other plugin directories can be used as models; .. but are in active development. For documentation on plugin modules, see; .. :ref:`Available Plugins <sec:availablePlugins>`.; .. ; .. * :source:`plugins/aointegrals/aointegrals.cc` ; .. An example that uses the LibMints library to generate and print AO basis (no symmetry) integrals.; .. ; .. * :source:`plugins/backtrans/backtrans.cc` ; .. A test of the one- and two-particle density matrix backtransformation code.; .. ; .. * :source:`plugins/mointegrals/mointegrals.cc` ; .. An example that uses the LibTrans library to generate and print MO basis integrals.; .. ; .. * :source:`plugins/mollerplesset2/mp2.cc` ; .. A plugin that uses LibTrans to generate open- and closed-shell MP2 energies.; .. ; .. * :source:`plugins/sointegrals/sointegrals.cc` ; .. An example that uses the LibMints library to generate and print SO basis (with symmetry) integrals. .. _`sec:condaplugins`:. Creating a New Plugin Using a Conda Pre-compiled Binary; -------------------------------------------------------. .. # prepare; .. >>> bash; .. >>> export PATH=$PSI4CONDA/bin:$PATH # usually already done from psi4 insta",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:3566,avail,availablePlugins,3566,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,1,['avail'],['availablePlugins']
Availability,"thod': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd rohf ccd/ccsd/ccsd(t)/a-ccsd(t) by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no conv ccd by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:94368,error,error,94368,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"thod': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'hf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'hf', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'g",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:184512,error,error,184512,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"tion, you can tune the scale factor for the orbital; rotation through the keyword |scf__follow_step_scale|.; The rotation angle is :math:`\frac{\pi}{2}\mbox{ } \cdot` (|scf__follow_step_scale|). The default value of; 0.5 usually provides a good guess, and modification is only recommended in difficult cases.; The default behavior for the stability code is to stop after trying to reoptimize the orbitals once; if the instability still exists. For more attempts, set |scf__max_attempts|;; the default value of 1 is recommended. In case the SCF ends up in the same minimum, modification; of |scf__follow_step_scale| is recommended over increasing |scf__max_attempts|. .. note:: Setting the option |scf__stability_analysis| to ``FOLLOW`` is only avalible for UHF. When using; RHF and ROHF instabilities can be checked, but not followed. If you want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+------------------+----------------------------------------------+---------------------------+--------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:48160,avail,available,48160,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"tions.; These requirements are imposed whenever a SAPT calculation is requested; but can also be set explicitly with the ``no_reorient`` and ``symmetry; c1`` molecule keywords, as in the example above. As a reminder, only; SAPT0 can handle the interaction of both closed- and open-shell monomers.; Higher-order SAPT and SAPT(DFT) are currently available only ; for computation of interactions between; closed-shell singlets. The SAPT codes in |PSIfour| have been written; to utilize density fitting, which is much faster than using conventional; 4-index electron repulsion integrals. This happens automatically and; does not require any additional keywords to be specified (both the ; SAPT computations and the underlying Hartree-Fock computations will; utilize density fitting). For SAPT(DFT), the user will need to manually specify the GRAC shift of ; both monomers, defined by the difference of ionization potential (IP) and; Kohn-Sham HOMO energy. The ionization potential data for many common molecules ; is available in NIST Chemistry Webbook. Alternatively, one can estimate the; ionization potential of molecule by computing the energy difference between; the molecule as given, and the molecule after one electron has been removed; (e.g., the energy difference between a neutral molecule and its cation). The values of GRAC shifts should be given in Hartree. For the example above,; the GRAC shift value of both molecules are calculated to be 0.1307 (using experimental; IP from CCCBDB), and the user would specify them using the following keywords::. set globals {; sapt_dft_grac_shift_a 0.1307; sapt_dft_grac_shift_b 0.1307 ; }. A complete, minimal example of a SAPT(DFT) computation is given below. ::. molecule {; 0 1; O -1.551007 -0.114520 0.000000; H -1.934259 0.762503 0.000000; H -0.599677 0.040712 0.000000; --; 0 1; O 1.350625 0.111469 0.000000; H 1.680398 -0.373741 -0.758561; H 1.680398 -0.373741 0.758561. units angstrom; }; ; set {; basis aug-cc-pVDZ; sapt_dft_grac_shift_a 0.1",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:15614,avail,available,15614,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['avail'],['available']
Availability,"tml>`_) and, more particularly, `Miniconda; <https://docs.conda.io/en/latest/miniconda.html>`_ (a lightweight Python; distribution with same package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_). Some nice features for us:. * cross-platform. * no root, administrator, or sudo access required. * built with high-performance math libraries. * lightweight software stack (<100 MB w/o |PSIfour|; ~1 GB including |PSIfour|, numpy, and MKL). * updated nightly so new features accessible. * standardizes python distribution so no need to find/install libpython packages. * add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages. * develop |PSIfour| through plugins without a pre-existing development environment, see :ref:`sec:condaplugins`. The |PSIfour| binary repository is at `Anaconda (formerly Binstar) <https://anaconda.org/psi4>`_. For commands to get a default installation, go to :ref:`sec:psi4conda`; or the :psicode:`psicode downloads page <installs/latest/>` .; Users proficient with conda may prefer to consult :ref:`sec:condadetails`.; For more flexibility and a detailed explanation, go to; :ref:`sec:slowconda` and :ref:`sec:slowpsi4`. .. _`faq:psicodedownload`:. How to install a Psi4 binary with the Psi4conda installer, download site; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. `Download one of the nine installers; <http://psicode.org/downloads.html>`_ (Linux/Mac/Windows; Py38/39/310).; ``bash`` it. Follow the prompts and *do* make the adjustments to; :envvar:`PATH` and :envvar:`PSI_SCRATCH` that it suggests at the end. Test; with ``psi4 --test`` (green and yellow good; red bad). Done. Explicit commands at :ref:`sec:psi4conda`. .. _`sec:psi4conda`:. How to install a Psi4 binary with the Psi4conda installer, command-line; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:3140,down,downloads,3140,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloads']
Availability,"to https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; .. * Enter ``scripts/`` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; .. * Run the ``install-generator.py`` in place. It will dump new files into ``data/installs/`` _subdirs_. Be sure to ``git add`` them.; .. * Installer page is now ready.; .. * Shift ""latest"" alias in frontmatter from whichever page is currently active to the new page. This makes sure ""Downloads"" on the navigation bar points to new page.; .. * Conscientiously, one should test; ..; .. - installer downloads in Mac and Linux. And actually installing them and ``psi4 --test`` them.; .. - that download button and ``curl`` downloading register on the download counters on vergil; ..; .. * Commit the new files, PR, and deploy psicode site; .. * Petition on Slack for testers. Generate download page for psicode.org; --------------------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Copy and edit a new file akin to ``content/installs/v182.md``. Add it to the git index. - Note the edition string ``v182`` in frontmatter for this and future filenames.; - Don't postdate the date string in frontmatter or it won't render.; - Ultimately, make sure the ``aliases:\n - /installs/latest/`` lines are *added* to this new file; and *removed* from the previous latest file, but this can wait until the installer page has been tested. * Copy and edit a new file akin to ``data/installs/v182.yaml``. Add it to the git index. - Glance through the menu and notes content to make sure they're up-to-date. This file determines; the structure of the install page.; - Add or remove python versions and architectures if necessary.; - Every couple years, update the default python version in ``datakey: python``/``selected`` *and*; in ``optsHandler`` at ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:28840,down,download,28840,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"to targets' ""source"" and ""version"" in individual recipes should be edited in psi4 ``external/*/*/CMakeLists.txt`` files; .. * Once everything's working on Linux, repeat on Mac; .. * At this point, ready to fine-tune builds of ""Psi4 stack"". Assemble postrelease changes; ----------------------------. * Collect PRs with ""backport"" label, and request other backport suggestions through slack.; * Be on the maintenance branch (e.g., ``1.8.x``). ``git fetch upstream`` or any other remotes you're; going to be cherry-picking from.; * Cherry-pick backport PRs and commits (``git cherry-pick sha``), apply other changes manually, not; forgetting CI files or samples.; * Possibly apply other changes manually, including:. - CI file tweaks like LLVM version or dependency constraint.; - samples files from a docs build.; - :source:`doc/sphinxman/source/introduction.rst` for any compiler and Python minimum requirements to edit. * Tag it (`Tag postrelease`_ for details). This is needed to compute a version on a maintenance; branch to even run. Until the release is published on GH (final step of; `Publish GitHub postrelease`_), it's ok to revise a tag (force push to maintenance branch). - Add or increment patch number in ``psi4/metadata.py``; leave the ""z""s. Commit file.; - Tag with ``git tag -a v1.8.2 -m ""v1.8.2""``, then push ``git push --atomic upstream 1.8.x v1.8.2``. * Test core |PSIfour| thoroughly locally (ecosystem will get tested by c-f) by running; ``pytest ../tests/ -n auto`` (psithon and psiapi tests). Possibly you may have to step back for; dependency versions from what master needs.; * Start `Tweak Conda for postrelease`_ PR at conda-forge. This will thoroughly test the ecosystem.; * If more changes are needed, ``git tag -d v1.8.2`` to delete the tag, then make more commits,; retag, push, and repeat. Try to finalize the postrelease tag within a session or a day, so; tentative tags don't linger.; * Start the draft parts of `Publish GitHub postrelease`_ from the backported PRs ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:9778,mainten,maintenance,9778,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,"trecommend>`. .. _`sec:dctgradients`:. Analytic Gradients; ~~~~~~~~~~~~~~~~~~. Analytic gradients are available for the DC-06, ODC-06, ODC-12, and ODC-13 methods.; For DC-06, the evaluation of the analytic gradients requires the solution of the; coupled response equations. Two algorithms are available for their iterative; solution: ``TWOSTEP`` (default) and ``SIMULTANEOUS``. These algorithms are similar to those; described for the orbital and cumulant updates in the :ref:`Iterative Algorithms <sec:dctalgorithms>`; section and usually exhibit similar efficiency. The choice of the algorithm can; be made using the |dct__response_algorithm| option. For the DC-12 method the; analytic gradients are not yet available, one has to use numerical gradients to; perform the geometry optimizations. For the ODC-06, ODC-12 and ODC-13 methods no response equations; need to be solved, which makes the computation of the analytic gradients very; efficient. Analytic gradients are not available for the three-particle energy; correction :math:`(\lambda_3)`. .. _`sec:dctmethodsummary`:. Methods Summary; ~~~~~~~~~~~~~~~. The table below summarizes current DCT code features:. .. _`table:dct_methods_summary`:. +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | Method | Available algorithms | Energy | Gradient | Reference |; +=====================================+==============================================================+=========+==========+========================+; | ODC-06 | SIMULTANEOUS, QC | Y | Y | RHF/UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | ODC-12 | SIMULTANEOUS, QC | Y | Y | RHF/UHF |; +-------------------------------------+--------------------------------------------------------------+---------+----------+------------------------+; | ODC-13 | SIMULTANEOUS, QC | Y ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:14017,avail,available,14017,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,1,['avail'],['available']
Availability,"treet, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:sowreap`:. Embarrassing Parallelism; ========================. Many of the tasks automated by Python wrappers consist of a number of; independent |PSIfour| calculations and are thus suited to an embarrassingly; parallel mode of operation. In Psithon, these have been dubbed sow/reap; procedures and have the following general structure. - Prepare an input file, simply adding ``mode='sow'`` to the; argument list of an available Python function. Run this quick job to; produce input files for lengthier calculations. - According to the instructions in the output file of the above step,; run the generated input files in any order on any variety of computers; and architectures. This is the time-intensive portion of the; calculation. - The 'sow' stage also produces a *master* input file (with a; ``mode='reap'`` directive). When all the jobs in the above step are; completed, place their output files in the same location as the; *master* input, and run this last, quick job to collect the results. - Sow/reap procedures are governed by the **mode** keyword, choices being; ``'continuous'``, ``'sow'``, and ``'reap'``. Only ``'sow'`` is likely to; be used by the user, as ``'continuous'`` is always the default, and; input files with ``'reap'`` are autogenerated. - Embarrassingly parallel algorithm available at present for:. - :ref:`sec:db()` ; - finite difference operation of :ref:`sec:opt()` ; - finite difference of energies of :ref:`sec:freq()`; - finite difference of gradients of :ref:`sec:freq()`. .. caution:: Some features are not yet implemented. Buy a developer a coffee. - Local options (*e.g.*, ``set scf e_convergence 9``) will not get transmitted to the child jobs. - Array options (*e.g.*, ``set states_per_irrep [2, 1]``) will not get transmitted to the child jobs. - Function intercalls (*e.g.*, db(opt())) are not tested with sow/reap procedures. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sowreap.rst:2372,avail,available,2372,doc/sphinxman/source/sowreap.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sowreap.rst,1,['avail'],['available']
Availability,"tributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:conda`:. Conda Binary Distribution; =========================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. .. warning:: As of v1.2rc1, new (conda build 3; updated compilers); conda packages are available for Linux but not Mac).; Psi4conda installers are not ready for either platform. |PSIfour| is available as a pre-compiled binary for Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through `Anaconda (formerly Continuum Analytics; <https://www.anaconda.com/products/individual>`_, the company that produces; `Anaconda Python <http://docs.continuum.io/anaconda/index.html>`_ (a; full-fledged scientific python environment with package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_) and, more particularly, `Miniconda; <https://docs.conda.io/en/latest/miniconda.html>`_ (a lightweight Python; distribution with same package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_). Some nice features for us:. * cross-platform. * no root, administrator, or sudo access required. * built with high-performance math libraries. * lightweight software st",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:1538,avail,available,1538,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['avail'],['available']
Availability,"troller is https://github.com/psi4/psi4docs/blob/master/.github/workflows/docs.yml; - Netlify psicode redirect controller is https://github.com/psi4/psicode-hugo-website/blob/master/netlify.toml#L10-L15. * This setup works great for ""latest"" docs, but it won't necessarily build a nice copy on the tag; commit itself for release and postrelease snapshots. Get a snapshot *on the tag* by some means:. - For releases and postreleases, any commit to the maintenance branch will build docs and upload; to the branch name in psi4docs. This should be pre-positioned by GHA, so check that docs with; the right version are deployed and then no further action required (can skip ahead to README.md; and netlify.toml steps).; - For releases, you can do the ``atomic`` push of the tag commit, wait for the docs build to; complete, download the GHA artifact (zipped docs dir), then continue by pushing the record commit.; - For releases beyond the ``atomic`` push, navigate on psi4 GH to the tag commit (not the record; commit) and retrigger the docs GHA, then download the GHA artifact (zipped docs dir).; - For postreleases, build the docs locally at the tag and collect the docs dir. * In your local clone of https://github.com/psi4/psi4docs, find the appropriate folder and unpack; your docs snapshot into it. - For releases, you'll need to make a new folder, e.g. ``sphinxman/1.8.x``.; - For postreleases, you'll overwrite the contents of the existing folder.; - Unpack and rearrange so that in the end, e.g., ``sphinxman/1.8.x/index.html`` is present. * Commit all your docs files and push to ``master``.; * For releases, add a line to the top-level table https://github.com/psi4/psi4docs/edit/master/README.md .; * For releases, add a new redirects block to https://github.com/psi4/psicode-hugo-website/edit/master/netlify.toml . * Details:. - If you sequentially push the tag commit, push the tag, push the record commit, GHA will build the docs at v1.{Y+1}.dev1, not at v1.Y .; - If you sequentially push",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:34045,down,download,34045,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['download']
Availability,"tructs PBS to write any output or error message; from the queuing system in dedicated files. ``PBS -l pmem=2120mb`` requests ; 2120 MB of memory for each thread on the node. The total memory requested for ; the job by PBS should generally be slightly greater than what indicated ; in the input file (see :ref:`memory setting <sec:memory>`). .. In the next section, we define :envvar:`OMP_NUM_THREADS` and :envvar:`MKL_NUM_THREADS`; .. to use 4 threads for OpenMP parallelization and in threaded BLAS (see section :ref:`sec:threading`). ::; .. ; .. setenv OMP_NUM_THREADS 4; .. setenv MKL_NUM_THREADS 4. Then, we move to the working directory using PBS variable ``$PBS_O_WORKDIR`` and ; we create scratch directories on every node, using the ``$PBS_NODEFILE`` which ; points to a file containing a list of the nodes attributed to the job. .. code-block:: bash. cd $PBS_O_WORKDIR; setenv myscratch /scratch/user/psi4.$PBS_JOBID; ; foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Creating scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; ssh $i mkdir -p $myscratch; end. The next section is *very important* as it sets the environment variables needed; by |PSIfour|:. .. code-block:: bash. unsetenv PSIDATADIR; setenv PSI_SCRATCH $myscratch; if ! ( $?PSIPATH ) setenv PSIPATH """"; setenv PSIPATH /path/to/external/modules:${PSIPATH}; setenv PSIPATH /path/to/python/modules:${PSIPATH}. :envvar:`PSIDATADIR` does *not* need to be set.; In the present example we unset it to make sure it does not interfere with the internal location-finding.; :envvar:`PSIPATH` is needed only if you are using external modules or ; plugins in |PSIfour| and should point to the directories where they can be found. In the; present example, we make sure the variable is set with ``if ! ( $?PSIPATH ) setenv PSIPATH """"``; before adding more paths to it. Finally, :envvar:`PSI_SCRATCH` should point to a fast, existing; local disk for temporary file storage. To use 4 threads for OpenMP parallelization; and t",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:15560,echo,echo,15560,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['echo'],['echo']
Availability,"ts so that the lowest ones can be captured reliably. Defaults to 4 guess vectors per root. .. warning:: Prior to Dec 2022, v1.7, Psi4 had a different set of keywords controlling instability analysis, and those were included in the CPHF module rather than the SCF module.; .. warning:: Extending Davidson instability analysis to Kohn-Sham references is under development. As of 1.7, only LDA functionals are currently supported. In case convergence problems are encountered during the Davidson procedure, file a bug report.; If the solver seems to converge on the wrong eigenvalue, try increasing |scf__solver_n_guess|.; Otherwise, if the solver is almost converged but reaches the maximum number of iterations, try increasing; |scf__solver_maxiter|. .. _`sec:scf-ecps`:. Effective core potentials (ECPs); ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. |PSIfour| supports the use of effective core potentials to describe the; innermost electrons in heavy elements.; ECPs are only available if |PSIfour| is compiled with the :ref:`LibECPInt <cmake:ecpint>` library.; If a basis set is designed to use an; effective core potential, the ECP definition should be simply placed alongside; the orbital basis set definition, *c.f.* :ref:`sec:basissets-ecps`. All; information related to the definition and number of core electrons will; automatically be detected and no further input is required to use the; ECP-containing basis set. See :srcsample:`scf-ecp` and :srcsample:`dfmp2-ecp`; for examples of computations with ECP-containing basis sets. .. warning:: Prior to May 2022, v1.6, Psi4 used a built-in ECP code. Analytic derivatives of ECPs were not available. The HF and DFT derivatives were implemented in a semi-numerical scheme, where numerical ECP gradients were added to analytic SCF gradients. For post-SCF methods, the entire gradient computation needed to be run as finite difference of energies. .. warning:: As of May 2022, v1.6, Psi4 uses the LibECPInt library, and analytic derivatives and Hessians of E",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:52206,avail,available,52206,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"ts/pytests/test_mp2.py`, ``<objdir>/stage/lib/PYMOD_INSTALL_LIBDIR/psi4/tests/test_mp2.py``,; ``CMAKE_INSTALL_PREFIX/lib/PYMOD_INSTALL_LIBDIR/psi4/tests/test_mp2.py``).; But for developing a pytest test, you probably want to use the first so you can edit it in place rather than running ``cmake --build`` after each change. * Easiest is from <objdir>, run ``pytest ../tests``. Add any filters (``-k; test_name_fragment``) or parallelism (``-n <N>`` or ``-n auto`` if ``pytest-xdist``; installed) or print test names (``-v``) or print warnings (``-rws``).; * An important point is that because they're PsiAPI, ``import psi4`` is happening,; so the <objdir> |PSIfour| module must be in :envvar:`PYTHONPATH`. Also, any call; to QCEngine is using ``which psi4``, so the <objdir> |PSIfour| executable must be in; :envvar:`PATH`. The easiest way to prepare your local environment is to; execute the printout of ``<objdir>/stage/bin/psi4 --psiapi``.; * To see stdout output from an otherwise passing test, easiest to add ``assert 0``; at its end to trigger failure.; * If stdout printing is insufficient, and you really need to see ``output.dat`` or other files,; comment out their deletion in :source:`tests/pytests/conftest.py` and run the single test, deleting; the file each time (since it appends). .. _`faq:comparison_functions`:. Comparison Functions; ====================. Plain Old Data; --------------. .. function:: psi4.compare_values(expected, computed, atol_exponent, label [, *, **kwargs]); :noindex:. .. autofunction:: psi4.compare_values(expected, computed [, label, *, **kwargs]). .. comment compare_arrays covered by compare_values. .. autofunction:: qcelemental.testing.compare_values; :noindex:. .. autofunction:: psi4.compare_integers(expected, computed [, label, *, **kwargs]). .. autofunction:: qcelemental.testing.compare; :noindex:. Objects; -------. .. function:: psi4.compare_matrices(expected, computed, atol_exponent, label [, *, check_name=False, **kwargs]); :noindex:. .. aut",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:16010,failure,failure,16010,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['failure'],['failure']
Availability,"tus': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:258682,error,error,258682,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"tus': 'fd', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df rohf gradients for mp2 by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'f",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:261666,error,error,261666,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:485349,error,error,485349,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2.5', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2.5', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'gradient', 'meth",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:399437,error,error,399437,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3 by psi4'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'cc2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'no",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:67497,error,error,67497,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:51773,error,error,51773,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'pbe', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:474016,error,error,474016,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:141626,error,error,141626,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:171903,error,error,171903,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"u need to configure a few variables:. * :ref:`faq:runordinaryexe`; * :ref:`faq:runordinarymodule`. .. _`faq:coredepend`:. What are the tools and dependencies strictly required for building Psi4; -----------------------------------------------------------------------. The core |PSIfour| build requires the software below. Note that; practically everything (including Python, CMake, NumPy, BLAS/LAPACK,; Libint, and even C++ compilers on Linux and Mac) can be; satisfied through conda. The links below give examples of how to configure; that software for |PSIfour| and any notes and warnings pertaining to it. See :source:`codedeps.yaml` for a structured listing and history of dependencies. * :ref:`C++ and C Compilers <cmake:cxx>` (C++17 compliant). * :ref:`Optimized BLAS and LAPACK libraries <cmake:lapack>` (preferably NOT one supplied by a standard; Linux distribution). * :ref:`Python interpreter and headers <cmake:python>` (3.8+) https://www.python.org/. * CMake (3.15+) https://cmake.org/download/. * NumPy (needed at runtime *and* buildtime) https://numpy.org/. * System utilities: GNU make and GNU install or Ninja, POSIX threads (Pthreads) library. The following are also required for |PSIfour|, but if not detected, the; build system will automatically download and build. * :ref:`gau2grid <cmake:gau2grid>` |w---w| :ref:`[what is gau2grid?] <sec:gau2grid>` :source:`[gau2grid min version] <external/upstream/gau2grid/CMakeLists.txt#L1>`. * :ref:`Libint <cmake:libint>` |w---w| :ref:`[what is Libint?] <sec:libint>` :source:`[Libint min version] <external/upstream/libint2/CMakeLists.txt#L1>` (Libint2 as of Nov 2020; added by v1.4). * Eigen https://eigen.tuxfamily.org/index.php?title=Main_Page; * Boost https://www.boost.org/ header-only preprocessor library. * :ref:`Libxc <cmake:libxc>` |w---w| :ref:`[what is Libxc?] <sec:libxc>` :source:`[Libxc min version] <external/upstream/libxc/CMakeLists.txt#L4>`. * pybind11 |w---w| `[what is Pybind11?] <https://pybind11.readthedocs.io/en/s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:6894,down,download,6894,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['download']
Availability,"uclear displacements. From this, it can obtain the harmonic vibrational; frequencies, given below (roundoff errors of around 0.1 cm\ :sup:`-1`; may exist)::. Irrep Harmonic Frequency; (cm-1); -----------------------------------------------; A1 1775.6480; A1 4113.3794; B2 4212.1826; -----------------------------------------------. Notice that the symmetry type of the normal modes is specified (A1, A1,; B2). The program also prints out the normal modes in terms of Cartesian; coordinates of each atom. For example, the normal mode at 1776 cm\ :sup:`-1` ; is::. Frequency: 1775.65; Force constant: 0.1193; X Y Z mass; O 0.000 0.000 -0.270 15.994915; H 0.000 0.417 0.538 1.007825; H 0.000 -0.417 0.538 1.007825. where the table shows the displacements in the X, Y, and Z dimensions for; each atom along the normal mode coordinate. (This information could be used; to animate the vibrational frequency using visualization software.). Because the vibrational frequencies are available, a thermodynamics; analysis is automatically performed at the end of the computation.; You can see this in the next section of the output file. The vibrational; frequencies are sufficient to obtain vibrational contributions to; enthalpy (H), entropy (S), and Gibbs free energy (G). Similarly, the; molecular geometry is used to obtain rotational constants, which are; then used to obtain rotational contributions to H, S, and G. .. _`sec:tutorial_tu5`:. Analysis of Intermolecular Interactions; =======================================. Now let's consider something a little more interesting. |PSIfour|; contains code to analyze the nature of intermolecular interactions; between two molecules, via symmetry-adapted perturbation theory; (SAPT) [Jeziorski:1994:1887]_. This kind of analysis gives a lot; of insight into the nature of intermolecular interactions, and |PSIfour|; makes these computations easier than ever. For a SAPT computation, the input needs to provide information on two; distinct molecules. This is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:10717,avail,available,10717,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['avail'],['available']
Availability,"uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'omp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc/fv for oo in occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'omp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'a",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:370962,error,error,370962,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"uld perform similarly in computations,; .. comment exact matches of fragment geometries or efp energies should not be; .. comment expected. See files in test case directories :source:`qchem-efp-sp; .. comment <tests/libefp/qchem-efp-sp>` and :source:`qchem-qmefp-sp; .. comment <tests/libefp/qchem-qmefp-sp>` for equivalent Q-Chem and |PSIfour|; .. comment EFP input files. Creating new efp fragments requires the `GAMESS; <https://www.msg.chem.iastate.edu/gamess/index.html>`_ quantum chemistry package.; Instructions on building new fragments are `here; <https://github.com/libefp2/libefp#how-to-create-custom-efp-fragment-types>`_.; Once your new fragment is ready, make it accessible to |PSIfour| by; including the directory in which the ``.efp`` file is located to the colon; separated environment variable :envvar:`PSIPATH`. Fragments are searched; for first in the current directory, next in the paths of :envvar:`PSIPATH`, and; finally in built-in library. If |PSIfour| is unable to find the; fragment, an error will be reported. .. note:: When constructing new fragment files, the name of the name of the; file should be lowercase and have extension ``.efp``. The molecule name; within the file, *e.g.*, ``$NH3`` must correspond to the name of the; fragment file. .. index:: molecule; EFP; single: EFP; molecule specification. .. _`sec:usingEFPFragments`:. Molecule Specification; ~~~~~~~~~~~~~~~~~~~~~~. EFP fragment geometries are specified alongside the quantum mechanical; (QM) molecule and make use of the ``--`` fragment separation scheme; described :ref:`here <sec:fragments>`. Each EFP fragment has its own; fragment section that includes the label ``efp``, the name of the file; *fragname* from which EFP parameters are to be read, and the position; specification for the fragment in one of two ways, XYZABC or POINTS. For; XYZABC, the fragment specification is all on one line: ``efp`` and; *fragname* are followed by two sets of three numbers: the coordinates; of the center of mas",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:4855,error,error,4855,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['error'],['error']
Availability,"ule': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:13139,error,error,13139,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ule': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd',",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:18397,error,error,18397,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ule': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-dfmp2', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp2', 're",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:229919,error,error,229919,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ultiple versions (including github/conda versions) or to test python versions, *etc.*. In practical terms, installing into a conda environment means you can turn |PSIfours| availability on/off by switching conda environments without turning on/off the whole Ana/Miniconda installation. Below, |PSIfour| is installed into an environment called ``p4env``. Then the environment is activated, removing the main Ana/Miniconda ``bin`` and adding ``envs/p4env/bin`` to :envvar:`PATH`. The ``conda activate`` command (conda >=4.4; December 2017) works in all shells, but if you're using old ``source activate`` that only works for ``bash``; adjust as needed for ``csh``/``tcsh``. .. code-block:: bash. >>> conda create -n p4env psi4; >>> conda activate p4env; # check; >>> which psi4; /path/to/miniconda/envs/p4env/bin/psi4. .. The output for either of the installation commands above looks like the following. It checks what packages are needed, gets your approval for downloading them, fetches and installs them, prints out some useful information, and runs a |PSIfour| test case to check that all's well.; ..; .. .. code-block:: bash; ..; .. >>> conda install psi4; .. Using Anaconda Cloud api site https://api.anaconda.org; .. Fetching package metadata: ......; .. Solving package specifications: .........; ..; .. Package plan for installation in environment /theoryfs2/ds/cdsgroup/miniconda/envs/tpsi4:; ..; .. The following packages will be downloaded:; ..; .. package | build; .. ---------------------------|-----------------; .. psi4-0.4.322 | py27_g84b3aa1 44.4 MB http://conda.anaconda.org/psi4/linux-64/; ..; .. The following NEW packages will be INSTALLED:; ..; .. psi4: 0.4.322-py27_g84b3aa1 http://conda.anaconda.org/psi4/linux-64/; ..; .. Proceed ([y]/n)? y; ..; .. Fetching packages ...; .. psi4-0.4.322-p 100% |####################################################################################| Time: 0:00:08 5.77 MB/s; .. Extracting packages ...; .. [ COMPLETE ]|#########################",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:22590,down,downloading,22590,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloading']
Availability,"ults"" or ""conda-forge"" channels.; ..; .. * Main directions are in [cbcy](https://github.com/psi4/psi4meta/blob/master/conda-recipes/conda_build_config.yaml) and [poodle](https://github.com/psi4/psi4meta/blob/master/psinet-nightly/kitandkapoodle.py); .. * A couple weeks before the first ""rc"" is planned, start going through L/LT in poodle, checking with upstream to see if new versions have been released. If good changes present, rebuild the packages, changing the version numbers in the respective recipes; .. * When L/LT all built and passed, edit the individual package version numbers in cbcy and increment to a new ``ltrtver`` with updated version numbers and/or build numbers (only if code changes); .. * Build L/PSI4. If any trouble, edit psi4 code. Iterate until builds and passes. This stage is the only full ctest & pytest on Psi4+upstream; .. * Build L/RT-MP. If any trouble, edit code in L/RT and rebuild those package(s). Iterate until builds and passes. This stage is the only full ctest & pytest of Psi4+downstream; .. * Build L/DEV. If any trouble, edit psi4 build system, plugin system, or OpenMP setup. Iterate until builds and passes; .. * Build L/DOCS. If any trouble, edit the docs or the tests. Iterate until builds and passes; .. * Results of last should upload to psicode.org (docs) and codecov.io (coverage); .. * Changes to targets' ""source"" and ""version"" in individual recipes should be edited in psi4 ``external/*/*/CMakeLists.txt`` files; .. * Once everything's working on Linux, repeat on Mac; .. * At this point, ready to fine-tune builds of ""Psi4 stack"". Assemble postrelease changes; ----------------------------. * Collect PRs with ""backport"" label, and request other backport suggestions through slack.; * Be on the maintenance branch (e.g., ``1.8.x``). ``git fetch upstream`` or any other remotes you're; going to be cherry-picking from.; * Cherry-pick backport PRs and commits (``git cherry-pick sha``), apply other changes manually, not; forgetting CI files or s",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:8445,down,downstream,8445,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downstream']
Availability,"un independently,; when run through |PSIfour| as EmpiricalDispersion engine, each should; produce the same result. Moreover, |PSIfours| own defaults and aliases; are unchanged by the new engines, so ``-D`` continues to mean ``-D2``,; ``-D3`` continues to mean zero-damping *without* 3-body correction,; and input files should continue producing the same results. Please file; an issue if found otherwise. Dispersion corrections are built into DFT functionals, so appending an *a; posteriori* correction to a computation is as simple as; ``energy('b2plyp-d')`` *vs.* ``energy('b2plyp')``. For example, the; following input file computes (with much redundant work) for water a; B3LYP, a B3LYP-D2, a B3LYP-D3 (zero-damping), and a B3LYP-D4 (Becke-Johnson damping) energy. ::. molecule h2o {; O; H 1 1.0; H 1 1.0 2 104.5; }; set {; basis cc-pVDZ; }; energy('b3lyp'); energy('b3lyp-d'); energy('b3lyp-d3'); energy('b3lyp-d4'). Consult the table :ref:`-D Functionals <table:dft_disp>` to see for each; functional what corrections are available and what default parameters; define them. The dispersion correction is available after a calculation in; the PSI variable :psivar:`DISPERSION CORRECTION ENERGY`.; By default, the output from the ``dftd3``; program is suppressed; to see it in the output file, set print > 2.; No text output is available from the ``dftd4`` or ``s-dftd3`` programs. .. _`table:dashd`:. .. table:: Variants of dispersion corrections. +-------------------------------------+--------------------------------------------------------------------------------------+---------------------------------+---------------------------------------------------------------------------------------------+; | Extension [#f0]_ and Aliases | Variant | Computing Program (engine) | |scf__dft_dispersion_parameters| [#f10]_ |; +=====================================+======================================================================================+=================================+================",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:13548,avail,available,13548,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['avail'],['available']
Availability,"un-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCache.cmake.in psi4PluginCache.cmake @ONLY). instal",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13096,error,error,13096,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,1,['error'],['error']
Availability,"un. A python of proper Py2 or Py3-ness is baked into the |PSIfour|; ""executable"", so you'll see this error only for Psi4 as Python module. .. _`faq:gdblldb`:. How to use ``gdb`` and ``lldb`` with Psi4; -----------------------------------------. Debugging |PSIfour| has gotten a little confusing now that it's running through Python. Here's the syntax ::. >>> cd {objdir}; >>> lldb -- python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (lldb) run. ::. >>> cd {objdir}; >>> gdb --args python stage/bin/psi4 ../tests/tu1-h2o-energy/input.dat; >>> (gdb) run. .. .. _`faq:valgrindpsi`:; .. ; .. How to use ``valgrind`` with Psi4; .. ---------------------------------; .. ; .. When you naively use Valgrind with Psi4, you're likely to get incomprehensible mess of garbage or it may just crash with a boost overflow error. This happens because the boost python layer looks really really bad as far as Valgrind is concerned, i.e. it looks like a ton of memory leaks. It really isn't, so we want to ignore all such errors/warnings. Valgrind has a mechanism for this in the way of suppression files. Calling Valgrind as:; .. ; .. ```bash; .. valgrind --suppressions=<file_name>; .. ```; .. ; .. will run valgrind with the suppression file located on disk at ""file_name"". Lucky for you, Psi4 comes with such a suppression file at [``$top-level-psi4-dir/psi4/share/psi4/scripts/valgrind-python.supp``](../blob/master/psi4/share/psi4/scripts/valgrind-python.supp). This should remove all the python errors.; .. ; .. The other error, boost overflow error arises from ``src/lib/libmints/sieve.cc`` where the inverse; .. of the complementary error function is being called. The internet seems to claim that this is a; .. bug the arises only in debugging mode and has something to do with the exponent boost chooses for; .. the default zero tolerance. Anyways, commenting out lines 47 to 49, for valgrind purposes, should; .. allow you to run valgrind. The consequence of commenting out these lines are you ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:55652,error,errors,55652,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['error'],['errors']
Availability,"us roles; in the Cfour program (*e.g.*, |scf__maxiter| is used to set; |cfour__cfour_scf_maxcyc|). This keyword translation only takes place; if the keywords are explicitly set in the input file (part of that; contract that you mean it), meaning that |PSIfours| defaults don't; get imposed on Cfour. Also, in the case where a translatable pure-\; |PSIfour| keyword and its translation Cfour keyword are both set,; the value attached to the latter is always used. Below are a few; clarifying examples. * uses :math:`10^{-7}` SCF conv crit since that's Cfour's default; for |cfour__cfour_scf_conv| ::. energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; keyword ::. set cfour_scf_conv 6; energy('c4-scf'). * uses :math:`10^{-5}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword ::. set d_convergence 5; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten by; :ref:`SCF module<apdx:scf>` keyword (local scope works, too) where; the |PSIfours| more flexible float input has been rounded down to; the integer required by Cfour ::. set scf d_convergence 5e-6; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten; and Cfour module keyword trumps |PSIfour| SCF module keyword ::. set cfour_scf_conv 6; set d_convergence 8; energy('c4-scf'). The keyword translation feature is still in the proof-of-principle; stage, so only a handful (found here) of keywords participate. .. note:: Longtime Cfour users who may consider this keyword; translation a flaw rather than a feature can avoid it entirely by; confining keywords to the :ref:`Cfour module<apdx:cfour>` along with; |mints__basis| and |globals__puream| (opt, too?). Misc. Running; ~~~~~~~~~~~~~. Naturally, in |PSIfour| multiple jobs can be run in succession from the input file. Control optimizations with optking keywords HERE. Cfour ``GRD`` file is; written to |PSIfour| output file. Gradient transformed back into the frame; in",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:40277,down,down,40277,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['down'],['down']
Availability,"us': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc conv gradients for mp2 by occ'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no hessians for mp2'}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'psi4-occ', 'driver': 'hessian', 'method': 'mp2', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:269104,error,error,269104,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"us': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:50599,error,error,50599,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"us': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:56181,error,error,56181,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a higher lying SCF solution. Because of this, in; practice level shifting is most useful in the initial phase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are available in; |PSIfour| for these terms. The algorithm is selected by the |globals__scf_type|; keyword. Most consist of a single algorithm applied to; the construction of both the Coulomb and Exchange parts; of the Fock Matrix:. PK [:ref:`Default <table:conv_scf>`]; An out-of-core, presorted algorithm using exact ERIs. Quite fast for a; zero-error algorithm if enough memory is available. Integrals are; generated only once, and symmetry",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:27443,error,error,27443,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['error']
Availability,"utations could be run in a separate; input file, but because counterpoise correction is a fairly standard; procedure for intermolecular interactions, |PSIfour| knows about it and has; a built-in routine to perform counterpoise correction. It only needs to; know what method you want to do the counterpoise correction on (here, let's; consider CCSD(T)), and it needs to know what's monomer A and what's monomer; B. This last issue of specifying the monomers separately was already dealt; with in the previous SAPT example, where we saw that two dashes in the; ``molecule`` block can be used to separate monomers. So, we're going to do counterpoise-corrected CCSD(T) energies for Ne\ :sub:`2` at; a series of different interatomic distances. And let's print out a table; of the interatomic distances we've considered, and the CP-corrected CCSD(T); interaction energies (in |kcalpermol|) at each geometry. Doing all this; in a single input is surprisingly easy in |PSIfour|. Here's the input; (available as :srcsample:`tu6-cp-ne2`). .. literalinclude:: @SFNX_INCLUDE@samples/tu6-cp-ne2/input.dat. First, you can see the ``molecule`` block has a couple dashes to; separate the monomers from each other. Also note we've used a Z-matrix to; specify the geometry, and we've used a variable (``R``) as the; interatomic distance. We have *not* specified the value of ``R`` in; the ``molecule`` block like we normally would. That's because we're; going to vary it during the scan across the potential energy surface.; Below the ``molecule`` block, you can see the ``Rvals`` array; specified. This is a Python array holding the interatomic distances we; want to consider. In Python, arrays are surrounded by square brackets, and; elements are separated by commas. The next lines, ``set basis aug-cc-pVDZ`` and ``set freeze_core True``,; are familiar from previous test cases. Next comes a slightly; unusual-looking line, ``ecp = {}``. This is Python's way of initializing; a ""dictionary"". We're going to use thi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:19218,avail,available,19218,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['avail'],['available']
Availability,"utodoc_abbr_options_c.rst. .. index:: Libxc, DFT, functionals. .. _`sec:libxc`:. Interface to Libxc by M. A. L. Marques; ======================================. .. codeauthor:: M. A. L. Marques and Micael Oliveira; .. sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <src/lib/libefp_solver>`. .. image:: https://img.shields.io/badge/home-libxc-5077AB.svg; :target: https://gitlab.com/libxc/libxc. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://www.tddft.org/programs/libxc/manual/. |PSIfour|, relies upon the Libxc library for density functionals. Libxc; requires no; additional licence, downloads, or configuration. Conversely, |Psifour|; cannot build *without* Libxc. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libxc/badges/version.svg; :target: https://anaconda.org/psi4/libxc. * Libxc is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, Libxc has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; Libxc can be obtained through ``conda install libxc -c psi4``.; Then, hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect Libxc and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. Libxc from conda without thinking, consult. * To remove a conda installation, ``conda remove libxc``. **Source**. * .. image:: https://img.shields.io/github/tag/loriab/libxc.svg?maxAge=2592000; :target: https://github.com/loriab/libxc/tree/libxc4retweaked. Note that |PSIfour| has forked and slightly modified upstream Libxc from; https://gitlab.com/libxc/libxc to regain functionality. * If using |PSIfour| built from source and you want Libxc built from; from source",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libxc.rst:1996,avail,available,1996,doc/sphinxman/source/libxc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libxc.rst,1,['avail'],['available']
Availability,"v', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:505284,error,error,505284,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd cc2/cc3/bccd/bccd(t) by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'energy', 'method': 'bccd(t)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defa",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:49207,error,error,49207,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:156958,error,error,156958,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"v', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'cepa(3)', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:162294,error,error,162294,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"vate cookie``.; .. * Enter ""constructor-cutter-unified"" in the psi4meta repo. There's a good README there, https://github.com/psi4/psi4meta/blob/master/conda-recipes/constructor-cutter-unified/README.md; .. * Edit ``cookiecutter/cookiecutter.json`` for control; ..; .. - Edit which python versions, if necessary; .. - Edit ``release`` field; .. - Edit ``hash`` field. This is the 7-char hash that's on every psi4 conda pkg as part of version; .. - Edit ``ltrtver`` field. This matches the current setting in ``conda_build_config.yaml``; .. - For prereleases, ``""channel_tag"": ""/label/dev""``, while for (post)releases, it should be the empty string; .. - Leave this file set to a ""rc"" with Git, as that has more details; ..; .. * For (post)releases (not prereleases), copy cookiecutter.json to cookiecutter.json-vXXX; .. * Edit ``cookiecutter/{{.../construct.yaml`` for templating. This is rarely needed; .. * If it's been a while or you need the space, clear out ``~/.conda/constructor``, where the downloaded packages are cached; .. * Note that installers get written to ``build/`` and this gets regenerated each time. Clear out between runs.; .. * ``python run.py``; .. * [Outdated] Watch out for ``py_`` in buildstring as this means a noarch package has been pulled. It must be eliminated. Constructors can't handle ""noarch"" packages and will fail at runtime. If see a ""noarch"" package, must find the recipe and rebuild for all OS & Python combinations. Then run constructor again.; .. * [Replacement] After adding a post_install to reposition the noarch packages, they are safe to include.; .. * If fetching times out, may have to run run.py several times. Clear out build/ in between. It's the fetching that takes a long time, not constucting; .. * In the end, should have several installers; ..; .. ::; ..; .. >>> ls -l build/psi4conda-1.3-py3.*/*64.sh; .. -rwxr-xr-x. 516M Feb 28 20:30 build/psi4conda-1.3-py3.6-linux-64/psi4conda-1.3-py36-Linux-x86_64.sh; .. -rwxr-xr-x. 299M Feb 28 20:31 bui",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:23269,down,downloaded,23269,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downloaded']
Availability,"ve; depend on the ADC level employed. With this also the computational cost changes.; The key computational step, namely the formation of the matrix-vector products; scales as :math:`{\cal O}(N^5)` for ADC(2) and :math:`{\cal O}(N^6)`; for ADC(2)-x and ADC(3). Several additional approximations,; such as frozen-core, frozen-virtual; may be applied to reduce the cost of the problem.; Using the core-valence separation (CVS) approximation; one may specifically target core-valence-excitations; at a substantial reduction in cost.; With the spin-flip modification few-reference ground states can; be tackled starting from a triplet reference by simultaneously; exciting an electron and flipping its spin.; A more detailed overview of such modifications gives [Dreuw:2014:82]_; and the `adcc theory documentation <https://adc-connect.org/latest/theory.html>`_. Available ADC methods; ---------------------; .. sectionauthor:: Michael F. Herbst. Several ADC methods are available in |PSIfour| for the computation of excited states,; see :ref:`table:adcsummary`.; The methods are available via an interface to the `adcc <https://adc-connect.org>`_ python module.; After a more general introduction, specific aspects of the implementation will be highlighted; in section :ref:`sec:interfaceadcc`. .. _`table:adcsummary`:. .. table:: ADC capabilities of Psi4. +---------------+------------+---------------+-------+------------------------------------+; | Method | References | Exc. Energies | Props | Supported values for kind keyword |; +===============+============+===============+=======+====================================+; | ADC(1) | RHF, UHF | yes | yes | any, singlet, triplet, spin_flip |; +---------------+------------+---------------+-------+------------------------------------+; | ADC(2) | RHF, UHF | yes | yes | any, singlet, triplet, spin_flip |; +---------------+------------+---------------+-------+------------------------------------+; | ADC(2)-x | RHF, UHF | yes | yes | any, singlet,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst:4351,avail,available,4351,doc/sphinxman/source/adc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adc.rst,1,['avail'],['available']
Availability,"ver': 'energy', 'method': 'mp4', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd mp4(sdq)/mp4/qcisd/qcisd(t) by fnocc'}; {'module': 'psi4', 'driver': 'e",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:326764,error,error,326764,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp4(sdq)', 'reference': 'uhf', 'fca",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:332442,error,error,332442,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"want to attempt to find a lower energy solution; you should re-run the calculation with |scf__reference| set to ``UHF``. The main algorithm available in |PSIfour| is the Direct Inversion algorithm. It can *only*; work with |globals__scf_type| ``PK``, and it explicitly builds the full electronic Hessian; matrix before explicitly inverting it. As such, this algorithm is very slow and it should; be avoided whenever possible. Direct Inversion is automatically invoked if the newer algorithm; is not available. The Davidson algorithm for stability analysis was implemented recently.; Only the lowest eigenvalues of the electronic Hessian are computed, and Hessian-vector; products are computed instead of the full Hessian. This algorithm is thus; much more efficient than the Direct Inversion, but at present, it is only available for UHF :math:`\rightarrow` UHF stability; analysis. The capabilities of both algorithms are summarized below:. .. _`table:stab_methods`:. .. table:: Stability analysis methods available in |PSIfour|. +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Algorithm | |scf__reference| | Stability checked | |scf__stability_analysis| | |globals__scf_type| |; +==================+==================+==============================================+===========================+=====================+; | | RHF | Internal, External (:math:`\rightarrow` UHF) | ``CHECK`` | PK only |; + +------------------+----------------------------------------------+---------------------------+---------------------+; | Direct Inversion | ROHF | Internal | ``CHECK`` | PK only |; +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Davidson | UHF | Internal | ``CHECK`` or ``FOLLOW`` | Anything |; +------------------+------------------+----------------------------------------------+---------------------------+-------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:49027,avail,available,49027,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"wavefunction, except for rare cases like EFP where no wavefunction available.; For now, ``CURRENT ENERGY`` will be set by; :py:func:`~psi4.driver.energy`, etc. In future, this will be extracted from the wavefunction. ::. # return highest or most prominent wavefunction (like dimer for SAPT); return fnocc_wfn. Managed Methods; ---------------. There are several conditions when a method and derivative combination should be *managed*:. * when functionality overlaps between modules, a pattern is needed to; access each route through the code;. * when functionality doesn't overlap completely, a pattern is needed to apportion defaulting among; the modules, taking into account reference (RHF/UHF/ROHF), calc type (CONV/DF/CD), and possibly; |globals__freeze_core| state (AE/FC). * for higher-level derivatives, when, say, gradient functionality for mtd+ref+type+fcae doesn't; exactly match energy functionality, a pattern is needed to decide analytic vs. finite difference. * when default type is not available for a method (e.g., CCD governed by |globals__cc_type| that; defaults to ``CONV`` but only ``DF`` and ``CD`` CCD is available), an informative error message is needed. Managed methods handle these cases through the addition of a new; keyword |globals__qc_module| and a set of type keywords analogous to; |globals__mp2_type|: |globals__mp_type|,; |globals__ci_type|, |globals__cc_type|, which can have values ``CONV``,; ``DF``, and ``CD``. These are all *global* keywords, as their values are; shared among modules rather than (or in addition to) being used internally; by the module). We're sticking with |globals__scf_type| and; |globals__mp2_type| defaulting to ``DF``, while most everything higher defaults; to ``CONV``. (Exceptions are MP2.5 and MP3 that default to ``DF``.); In :source:`psi4/driver/procrouting/proc_table.py`, a managed method calls a; ""select"" function rather than a ""run"" function. ::. procedures = {; 'energy': {; 'scf' : run_scf,; 'mp3' : select_mp3,; 'dct' : run",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst:6002,avail,available,6002,doc/sphinxman/source/proc_py.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/proc_py.rst,1,['avail'],['available']
Availability,"with the prerequisite steps for running calculations.; Sec. :ref:`Tutorial <sec:tutorial>` provides a brief tutorial to help new users; get started. Section :ref:`Psithon <sec:psithonInput>` offers further details into the; structure of |PSIfour| input files and how Python can be mixed with; quantum chemistry directives in |PSIfour|. Section :ref:`Psithon Functions <sec:psithonFunc>`; provides more detail on the Python functions provided by |PSIfour|; and discusses some of the higher-level functions such as counterpoise; correction, complete-basis-set extrapolation, and running computations; on an entire database of molecules at a time. Later sections deal with; the different types of computations which can be done using |PSIfour|; (*e.g.*, Hartree |--| Fock, MP2, coupled-cluster) and general procedures; such as geometry optimization and vibrational frequency analysis.; The :ref:`Appendices <sec:appendices>` include a complete description of all possible input; keywords for each module, as well as tables of available basis sets and; a listing of the sample input files available under :source:`samples`.; The user is urged to examine this directory of sample inputs, as; most common types of computations are represented there.; For the latest |PSIfour| documentation, check; `www.psicode.org <http://www.psicode.org>`_. Citing |PSIfour|; ================. Overall |PSIfour| Package; ^^^^^^^^^^^^^^^^^^^^^^^^^. The following citation should be used in any publication utilizing the; |PSIfour| program package:. * ""Psi4 1.4: Open-Source Software for High-Throughput Quantum Chemistry"",; D. G. A. Smith, L. A. Burns, A. C. Simmonett, R. M. Parrish, M. C.; Schieber, R. Galvelis, P. Kraus, H. Kruse, R. Di Remigio, A. Alenaizan, A.; M. James, S. Lehtola, J. P. Misiewicz, M. Scheurer, R. A. Shaw, J. B.; Schriber, Y. Xie, Z. L. Glick, D. A. Sirianni, J. S. O'Brien, J. M.; Waldrop, A. Kumar, E. G. Hohenstein, B. P. Pritchard, B. R. Brooks, H. F.; Schaefer III, A. Yu. Sokolov, K. Patkow",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:3899,avail,available,3899,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,2,['avail'],['available']
Availability,"with write permissions and can connect to the internet *from* the computer, all is well.; ..; .. .. code-block:: bash; ..; .. # check; .. >>> which bzip2; .. /usr/bin/bzip2; .. >>> curl -O ""http://psicode.org/psi4manual/master/introduction.html""; .. >>> ls -1; .. introduction.html; ..; .. 2. Get Miniconda installer script. Either issue the command below or download from http://conda.pydata.org/miniconda.html by clicking on the appropriate link for your OS. If you already have or would prefer to use Anaconda rather than Miniconda, that's fine. Locate or install Anaconda, check that ``conda`` is in your path, and skip to step 4.; ..; .. .. code-block:: bash; ..; .. >>> curl -O ""http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh""; .. # check; .. >>> ls -1; .. Miniconda-latest-Linux-x86_64.sh; ..; .. 3. Install Miniconda. Execute the script and answer its questions, particularly your choice of installation location. You may need to replace the filename below with the correct filename for the OS/version of installer you downloaded. Execute with ``bash`` regardless of ``csh``/``bash`` shell. If you're a ``bash`` user, it's convenient to agree to its offer to prepend ``conda`` commands to your :envvar:`PATH` in ``~/.bashrc``. If you're a ``csh``/``tcsh`` user, it's convenient to do the same by hand to your ``~/.tcshrc``: ``setenv PATH /path/to/miniconda/bin:${PATH}``. Further directions assume that the ``conda`` command is in your path; you may have to log out and log back in for ``which conda`` to return correctly.; ..; .. .. code-block:: bash; ..; .. >>> bash Miniconda-latest-Linux-x86_64.sh; .. # check; .. >>> which conda; .. /path/to/miniconda/bin/conda; ..; .. 4. Update conda. This updates the package manager itself.; ..; .. .. code-block:: bash; ..; .. >>> conda update conda. .. _`sec:slowpsi4`:. Detailed Installation of |PSIfour|; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. 5. Subscribe to |PSIfour|. Subscribe to our channel at https://anaconda.org/psi4 that",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:19760,down,downloaded,19760,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['downloaded']
Availability,"wn to steady oscillation between two (or more); different total energies. This behavior can be ameliorated by choosing occupied; orbitals by ""shape"" instead of by orbital eigenvalue, *i.e.*, by choosing the set; of new orbitals which looks most like some previously known ""good"" set. The; ""good"" set is typically the occupied orbitals from one of the oscillating; iterations with the lowest total energy. For an oscillating system where the; lowest total energy occurs on iterations :math:`N,N+2,\ldots`, invoking; |scf__mom_start| ``N`` can often rescue the convergence of the SCF. MOM can; be used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a higher lying SCF solution. Because of this, in; practice level shifting is most useful in the initial phase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithm",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:26798,error,error,26798,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['error'],['error']
Availability,"wnload one of the nine installers; <http://psicode.org/downloads.html>`_ (Linux/Mac/Windows; Py38/39/310).; ``bash`` it. Follow the prompts and *do* make the adjustments to; :envvar:`PATH` and :envvar:`PSI_SCRATCH` that it suggests at the end. Test; with ``psi4 --test`` (green and yellow good; red bad). Done. Explicit commands at :ref:`sec:psi4conda`. .. _`sec:psi4conda`:. How to install a Psi4 binary with the Psi4conda installer, command-line; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Sequence of commands to get you to a working |PSIfour| on Linux,; Mac, Windows (Ubuntu shell for Windows accepts Linux installers), or native Windows.; Installs Miniconda+Psi4+AddOns into ``$HOME/psi4conda`` and; the |PSIfour| executable into the main conda environment at; ``$HOME/psi4conda/bin/psi4``. .. code-block:: bash. # Linux or WSL (Windows Subsystem for Linux); # py38|py39|py310 for alternate python versions; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-Linux-x86_64.sh"" -o Psi4conda-latest-py38-Linux-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-Linux-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bashrc; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:4531,down,download,4531,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['down'],['download']
Availability,"x and macOS and Windows. * If using the Psi4conda installer, DFTD3 has already been installed alongside. * If using the |PSIfour| conda package, the classic dftd3 conda package can; be obtained through ``conda install dftd3 -c psi4`` or the newer implementation; through ``conda install dftd3-python -c conda-forge``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the dftd3 executable can be obtained through ``conda install dftd3 -c psi4``; or ``conda install dftd3-python -c conda-forge``. * To remove a conda installation, ``conda remove dftd3`` or ``conda remove dftd3-python``. **Source**. * .. image:: https://img.shields.io/badge/home-DFTD3-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/dft-d3/get-the-current-version-of-dft-d3. * If using |PSIfour| built from source and you want to build DFTD3 from; from source also,; follow the instructions provided with the source; (essentially, download the freely available tarball, unpack the source,; edit the Makefile to select a; Fortran compiler, and run make). From version 3.1.0 onwards, DFTD3 can; be used as-is; for earlier versions, patches are available:; :source:`psi4/share/psi4/scripts/patch_grimme_dftd3.3.0.2`. To be used by |PSIfour|, the classic program binary (``dftd3``) must be; found in your :envvar:`PATH` or the s-dftd3 module in your :envvar:`PYTHONPATH`; so QCEngine can detect it. Check if and where found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular dftd3 compilation, simply adjust its; position in the path environment variables. .. >>> cd dftd3; .. >>> ls; .. dftd3.tar; .. patch_grimme_dftd3.3.0.2; .. >>> tar -xvf dftd3.tar; .. copyc6.f; .. dftd3.f; .. Makefile; .. man.pdf; .. pars.f; .. param; .. >>> patch < patch_grimme_dftd3.3.0.2; .. patching file dftd3.f; .. >>> make; .. making dftd3.o from dft",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:7445,down,download,7445,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,2,"['avail', 'down']","['available', 'download']"
Availability,"xact block diagonalization for the one-electron Dirac; Hamiltonian,""; L. Cheng and J. Gauss, *J. Chem. Phys.* **135**, 084114 (2011).; (doi: `10.1063/1.3624397 <https://doi.org/10.1063/1.3624397>`_). Implementation within Psi4. * ""Predicting Near Edge X-ray Absorption Spectra with the Spin-Free; Exact-Two-Component Hamiltonian and Orthogonality Constrained Density; Functional Theory,""; P. Verma, W. D. Derricotte and F. A. Evangelista,; *J. Chem. Theory Comput.* (2015).; (doi: `10.1021/acs.jctc.5b00817 <https://doi.org/10.1021/acs.jctc.5b00817>`_). .. index:: architectures; .. index:: compilers. Supported Systems; =================. Architectures; The majority of |PSIfour| was developed on Mac and Linux machines; in; principle, it should work on any Unix system. The latest version of the; |PSIfour| program package may be obtained at `psicode.org <http://psicode.org>`_.; The package is available as a binary (:ref:`Installing from Binary; <sec:conda>`) for Linux, macOS (both Intel and Apple Silicon), or Windows (both native and via Windows Subsystem for; Linux aka `Bash on Ubuntu on Windows; <https://docs.microsoft.com/en-us/windows/wsl/about>`_); or as source code (git repository or zipped archive from; https://github.com/psi4/psi4.; Compilers; |PSIfour| has been successfully compiled using Intel, GCC, and Clang; compilers. :ref:`Compiler requirements <faq:approvedcxx>` are primarily; C++17 compliance (now GCC version 7.0 or above).; For some architectures, a :ref:`precompiled binary; <sec:conda>` is available. See :ref:`Compiling and Installing; <sec:installFile>` for details.; Python; |PSIfour| 1.1 and 1.2 are supported on Python 2.7, 3.5,; and 3.6. After 1.2, only Python 3 will be supported; `in accordance with other scientific software projects; <https://python3statement.org/>`_).; |PSIfour| 1.3 supports Python 3.6 and 3.7.; |PSIfour| 1.4 supports Python 3.6, 3.7, 3.8, and 3.9.; |PSIfour| 1.5 supports Python 3.7, 3.8, and 3.9.; |PSIfour| 1.6 supports Python 3.8, 3",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst:26954,avail,available,26954,doc/sphinxman/source/introduction.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/introduction.rst,1,['avail'],['available']
Availability,"xible float input has been rounded down to; the integer required by Cfour ::. set scf d_convergence 5e-6; energy('c4-scf'). * uses :math:`10^{-6}` SCF conv crit since default overwritten; and Cfour module keyword trumps |PSIfour| SCF module keyword ::. set cfour_scf_conv 6; set d_convergence 8; energy('c4-scf'). The keyword translation feature is still in the proof-of-principle; stage, so only a handful (found here) of keywords participate. .. note:: Longtime Cfour users who may consider this keyword; translation a flaw rather than a feature can avoid it entirely by; confining keywords to the :ref:`Cfour module<apdx:cfour>` along with; |mints__basis| and |globals__puream| (opt, too?). Misc. Running; ~~~~~~~~~~~~~. Naturally, in |PSIfour| multiple jobs can be run in succession from the input file. Control optimizations with optking keywords HERE. Cfour ``GRD`` file is; written to |PSIfour| output file. Gradient transformed back into the frame; in which it was shipped off to Cfour is also written to the |PSIfour|; output file and is available from input as :py:func:`~psi4.core.Wavefunction.gradient`. sandwich mode := molecule and cfour list within; Naturally, additional jobs can follow in the input file.; Depending on the nature of preceding or following jobs, it is prudent to; separate them with the following::. clean() # removes Psi4 scratch files; clean_variables() # empties the PSI variables list; cfour {} # empties. In this scheme, the contents of the ``cfour {...}`` block are tacked onto; the end of the ``ZMAT`` file that is otherwise written from psi style; format. It is by this route that, for example ``%excite*`` sections can at; present be specified. The execution of :program:`xcfour` can be modified by a few parameters. Setting; the option |cfour__cfour_omp_num_threads| sets the environment variable; :envvar:`OMP_NUM_THREADS` for only the duration of the Cfour computation.; That is, portions of an input file that run |PSIfour| modules are; unaffected. Additi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:41289,avail,available,41289,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['avail'],['available']
Availability,"xt`` files; .. * Once everything's working on Linux, repeat on Mac; .. * At this point, ready to fine-tune builds of ""Psi4 stack"". Assemble postrelease changes; ----------------------------. * Collect PRs with ""backport"" label, and request other backport suggestions through slack.; * Be on the maintenance branch (e.g., ``1.8.x``). ``git fetch upstream`` or any other remotes you're; going to be cherry-picking from.; * Cherry-pick backport PRs and commits (``git cherry-pick sha``), apply other changes manually, not; forgetting CI files or samples.; * Possibly apply other changes manually, including:. - CI file tweaks like LLVM version or dependency constraint.; - samples files from a docs build.; - :source:`doc/sphinxman/source/introduction.rst` for any compiler and Python minimum requirements to edit. * Tag it (`Tag postrelease`_ for details). This is needed to compute a version on a maintenance; branch to even run. Until the release is published on GH (final step of; `Publish GitHub postrelease`_), it's ok to revise a tag (force push to maintenance branch). - Add or increment patch number in ``psi4/metadata.py``; leave the ""z""s. Commit file.; - Tag with ``git tag -a v1.8.2 -m ""v1.8.2""``, then push ``git push --atomic upstream 1.8.x v1.8.2``. * Test core |PSIfour| thoroughly locally (ecosystem will get tested by c-f) by running; ``pytest ../tests/ -n auto`` (psithon and psiapi tests). Possibly you may have to step back for; dependency versions from what master needs.; * Start `Tweak Conda for postrelease`_ PR at conda-forge. This will thoroughly test the ecosystem.; * If more changes are needed, ``git tag -d v1.8.2`` to delete the tag, then make more commits,; retag, push, and repeat. Try to finalize the postrelease tag within a session or a day, so; tentative tags don't linger.; * Start the draft parts of `Publish GitHub postrelease`_ from the backported PRs assembled here. .. Tweak Conda for postrelease (pre-Spring 2023); .. -----------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:9935,mainten,maintenance,9935,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['mainten'],['maintenance']
Availability,"y S. Grimme; =============================. .. codeauthor:: Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Samples <apdx:testSuitegcp>`. .. image:: https://img.shields.io/badge/home-gCP-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp/manGCP.pdf. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/gcp/badges/version.svg; :target: https://anaconda.org/psi4/gcp. * There are two implementations of gCP; see :ref:`table:empdispimpl` . The newer; ""mctc"" one is preferred, while the older ""classic"" one will work for the immediate future.; |PSIfour| will automatically select whichever is available.; Starting with v1.9, only ""mctc-gcp"" is supported, though the now untested; ""classic"" continues to work for many applications. * gCP is available as a conda package for Linux and macOS and Windows. * If using the Psi4conda installer, gCP has already been installed alongside. * If using the |PSIfour| conda package, the classic gcp conda package can; be obtained through ``conda install gcp -c psi4`` or the newer implementation; through ``conda install gcp-correction -c conda-forge``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; the gcp executable can be obtained through ``conda install gcp -c psi4``; or ``conda install gcp-correction -c conda-forge``. * To remove a conda installation, ``conda remove gcp`` or ``conda remove gcp-correction``. **Source**. * .. image:: https://img.shields.io/badge/home-gCP-5077AB.svg; :target: https://www.chemie.uni-bonn.de/pctc/mulliken-center/software/gcp/getgcp. * If using |PSIfour| built from source and you want to build gCP from; from source also, follow the instructions provided with the source; (essentially, download the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst:2086,avail,available,2086,doc/sphinxman/source/gcp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gcp.rst,1,['avail'],['available']
Availability,"y default, Psi will start using ADIIS before blending the ADIIS step with; the DIIS step, eventually using the pure DIIS step. The closely-related EDIIS procedure; may be used instead by setting |scf__scf_initial_accelerator|. This is formally identical; to ADIIS for HF, but the methods will differ for more general DFT.; MOM [Off by Default]; MOM was developed to combat a particular class of convergence failure:; occupation flipping. In some cases, midway though the SCF procedure, a partially; converged orbital which should be occupied in the fully-optimized SCF solution; has a slightly higher orbital eigenvalue than some other orbital which should be; destined to be a virtual orbital. This results in the virtual orbital being; spuriously occupied for one or more iterations. Sometimes this resolves itself; without help, other times the occupation flips back and forth between two, four,; or more orbitals. This is typically visible in the output as a non-converging; SCF which eventually settles down to steady oscillation between two (or more); different total energies. This behavior can be ameliorated by choosing occupied; orbitals by ""shape"" instead of by orbital eigenvalue, *i.e.*, by choosing the set; of new orbitals which looks most like some previously known ""good"" set. The; ""good"" set is typically the occupied orbitals from one of the oscillating; iterations with the lowest total energy. For an oscillating system where the; lowest total energy occurs on iterations :math:`N,N+2,\ldots`, invoking; |scf__mom_start| ``N`` can often rescue the convergence of the SCF. MOM can; be used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the D",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:25802,down,down,25802,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['down'],['down']
Availability,"y occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-occ', 'driver': 'gradi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:291389,error,error,291389,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"y-cpuinfo (transitive dependency of QCEngine). * psutil https://github.com/giampaolo/psutil (transitive dependency of QCEngine). Dropped Dependencies:. * Boost (September 2016; dropped by v1.1). * deepdiff https://github.com/seperman/deepdiff (May 2019; dropped by v1.4). * MPFR https://www.mpfr.org/ (Mar 2022; dropped by v1.6) no longer needed to compile against Libint2. * Perl for testing (April 2022; dropped by v1.6). .. _`faq:addondepend`:. What are the add-on capabilities for Psi4 and what are their dependencies; -------------------------------------------------------------------------. Each of the items below is an independent additional capability that can; be built with |PSIfour|. Sub-items below are the respective additional; dependencies of the add-on. Select which, if any, you want, and examine; the links for appropriate enabling arguments to ``cmake``. Note that many; are available pre-built from conda. * |PSIfour| Testing. * CTest https://cmake.org/download/; * pytest (for installed testing) http://doc.pytest.org/en/latest/; * pytest-xdist (for installed testing many tests at once) https://github.com/pytest-dev/pytest-xdist. * |PSIfour| Documentation (available pre-built at :psicode:`psi4manual/master/index.html`). * Sphinx (3.5+) http://sphinx-doc.org; * Perl (for some auto-documentation scripts) https://www.perl.org/; * nbsphinx (for converting Jupyter notebooks) http://nbsphinx.readthedocs.io/en/jupyter-theme/; * sphinx-psi-theme https://github.com/psi4/sphinx-psi-theme; * See :source:`[""message"" lines] <doc/sphinxman/CMakeLists.txt>` for advice on obtaining docs dependencies or :source:`[conda env spec] <devtools/conda-envs/docs-cf.yaml>`; * See :source:`.github/workflows/docs.yml` for full docs building procedure to follow. * Ambit |w---w| https://github.com/jturney/ambit. * :ref:`CheMPS2 <cmake:chemps2>` |w---w| :ref:`[what is CheMPS2?] <sec:chemps2>` :source:`[CheMPS2 min version] <external/upstream/chemps2/CMakeLists.txt#L2>`. * HDF5 https://suppo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:10008,down,download,10008,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['down'],['download']
Availability,"ybind11_extension(core); if(NOT MSVC AND NOT ${CMAKE_BUILD_TYPE} MATCHES Debug|RelWithDebInfo); # Strip unnecessary sections of the binary on Linux/macOS; pybind11_strip(core); endif(); set_target_properties(core PROPERTIES CXX_VISIBILITY_PRESET ""hidden"" VISIBILITY_INLINES_HIDDEN 1). ### >> Go into psi4 subdirectory to compile libraries and modules <<; add_subdirectory(psi4). ####################################################################; ### >> Merge libraries and modules into master psi4 library <<; ### >> We also add in versioning, settings for plugins, and; ### >> exports for Python here. target_sources(core; PRIVATE; export_benchmarks.cc; export_blas_lapack.cc; export_cubeprop.cc; export_dpd.cc; export_fock.cc; export_functional.cc; export_misc.cc; export_oeprop.cc; export_pcm.cc; export_plugins.cc; export_psio.cc; export_trans.cc; export_wavefunction.cc; export_options.cc; create_new_plugin.cc; read_options.cc; python_data_type.cc; ). # need to down-standard the Libint2 connection from c++17 for Intel as of 2021.4; # See note at psi4/src/psi4/libmints/CMakeLists.txt; add_library(l2export OBJECT export_mints.cc); set_property(TARGET l2export PROPERTY CXX_STANDARD ""${psi4_CXX_STANDARD_Libint2}""); set_property(TARGET l2export PROPERTY POSITION_INDEPENDENT_CODE ON); target_include_directories(l2export; PRIVATE; $<TARGET_PROPERTY:Libint2::cxx,INTERFACE_INCLUDE_DIRECTORIES>; ); target_link_libraries(; l2export; PRIVATE; pybind11::headers; ); if(MSVC); target_link_libraries(; l2export; PRIVATE; pybind11::windows_extras; ); endif(); target_link_libraries(core PRIVATE l2export); target_compile_definitions(core; PRIVATE; psi4_SHGSHELL_ORDERING=${psi4_SHGSHELL_ORDERING}; ); target_compile_definitions(l2export; PRIVATE; psi4_SHGSHELL_ORDERING=${psi4_SHGSHELL_ORDERING}; ). # set_target_properties(core; # PROPERTIES; # implicit in pybind11_add_module; # CXX_VISIBILITY_PRESET hidden; # implicit in add_library MODULE called by pybind11_add_module; # POSITION_INDEPENDENT",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/CMakeLists.txt:1339,down,down-standard,1339,psi4/src/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/CMakeLists.txt,2,['down'],['down-standard']
Availability,"you want to test one Python version on all; architectures before the whole build matrix (currently 16 builds). After editing this (and; opening the PR), you'll have to issue a comment ``@conda-forge-admin, please rerender`` for the; matrix slimming to take effect.; - Possibly: remove any old patches that are now in the main codebase.; - Possibly: add in or remove any dependency or ecosystem packages.; - Possibly: for any relevant addition, make sure ``-D CMAKE_INSIST_FIND_PACKAGE_<project>=ON`` or; ``-D ENABLE_<project>=ON`` is set in ``build.sh`` and ``bld.bat``.; - Possibly: add or release version constraints or architecture constraints (e.g., ``[not win]``) on packages. * Submit the PR and rerender (cmd above). Monitor the CI.; * When all CI lanes are passing *and* the tag is final on the maintenance branch, rerender (may be; no-op) and merge the PR.; * After all the packages are built on main and show up at https://anaconda.org/conda-forge/psi4/files; with a couple downloads, this means they're been mirrored and are generally installable. Announce; on slack general channel. Do final pass before release tag; --------------------------------. * Check that :source:`external/` repos and commits have been updated to match conda recipes sources. Also check versions with ``conda_build_config.yaml``; * Check :source:`doc/sphinxman/source/introduction.rst` for any compiler and Python minimum requirements to edit. Tag (pre)release; ----------------. * Thorough version bump directions at master http://psicode.org/psi4manual/master/manage_git.html#how-to-bump-a-version; * Below is tl;dr. ::. # be on clean master up-to-date with upstream in both commits and tags; # * mind which version strings get ""v"" and which don't; # * if not fork, replace ""upstream"" with ""origin"". >>> vi psi4/metadata.py; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version__ = '1.3rc1'; -__version_long = '1.3rc1+5a7522a'; -__version_upcoming_annotated_v_tag = '1.3rc2'; +__vers",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:13133,down,downloads,13133,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['down'],['downloads']
Availability,"ype': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'cisd', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cisd', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf cisd by psi4'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'fci', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaul",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:172301,error,error,172301,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ype': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'lccsd', 'reference': 'rhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'mod",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:226432,error,error,226432,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ype': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=occ in dfocc until further optimization '}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': ''}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: temporary: cc(t) disabled w/o qc_module=ccenergy for conv rhf/uhf gradients for ccsd(t) by ccenergy until scaling reworked'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no fc gradients by ccenergy'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-ccenergy', 'driver': 'gradient', 'method': 'ccsd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'cepa(1)', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:154752,error,error,154752,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-detci', 'driver': 'energy', 'method': 'zapt2', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no uhf by detci'}; {'module': 'psi4', 'driver': 'energy', 'method': 'zapt2', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no uhf by detci'}; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:528877,error,error,528877,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,5,['error'],['error']
Availability,"ype': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'fd', 'note': 'default'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'default'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf for dft'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd scf gradients to underlie post-scf'}; {'module': 'psi4-scf', 'driver': 'gradient', 'method': 'svwn', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note':",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:504888,error,error,504888,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ype': 'pk', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'energy', 'method': 'mp3', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'mp3', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:303995,error,error,303995,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"ype| with possible values ``total``; (the default) or ``separate``.; The latter forces the separate handling of nuclear and electronic electrostatic potentials and; polarization charges. It is mainly useful for debugging. For the calculation of vertical excitation energies with PCM non-equilibrium solvation should be included with: ::. pcm = {; Medium {; Nonequilibrium = True; }; }. .. note:: At present PCM can only be used for energy calculations with SCF; wavefunctions and CC wavefunctions in the PTE approximation [Cammi:2009:164104]_.; All ERI algorithms (``PK``, ``OUT_OF_CORE``, ``DIRECT``, ``DF``, ``CD``) are supported. .. note:: linear response calculations (static polarisabilities, TD-SCF) are supported for RHF/UHF if available. .. warning:: The PCMSolver library **cannot** exploit molecular point group symmetry. .. warning:: ROHF with PCM is known **not to work**. See `issue #999 on GitHub <https://github.com/psi4/psi4/issues/999>`_.; For the adventurous, a fix is available in `pull request #953 on GitHub <https://github.com/psi4/psi4/pull/953>`_. .. warning:: Analytic gradients and Hessians **are not** available with PCM. Finite differences will be used; regardless of the ``dertype`` passed to the ``optimize`` function.; See :srcsample:`pcmsolver/opt-fd` for a sample input. The PCM model and molecular cavity are specified in a ``pcm`` section that has; to be explicitly typed in by the user. This additional section follows a syntax; that is slightly different from that of |Psifour| and is fully documented; `here <http://pcmsolver.readthedocs.io/en/latest/users/input.html>`_. A typical input for a Hartree--Fock calculation with PCM would look like the following: ::. molecule NH3 {; symmetry c1; N -0.0000000001 -0.1040380466 0.0000000000; H -0.9015844116 0.4818470201 -1.5615900098; H -0.9015844116 0.4818470201 1.5615900098; H 1.8031688251 0.4818470204 0.0000000000; units bohr; no_reorient; no_com; }. set {; basis STO-3G; scf_type pk; pcm true; pcm_scf_type tot",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:5011,avail,available,5011,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['avail'],['available']
Availability,"yword is ""frozen_bend"". * To freeze the cartesian coordinates of atom 2. .. code-block:: none. freeze_list = """"""; 2 xyz; """"""; set optking frozen_cartesian $freeze_list. * To freeze only the y coordinates of atoms 2 and 3. .. code-block:: none. freeze_list = """"""; 2 y; 3 y; """"""; set optking frozen_cartesian $freeze_list. * To optimize toward a value of 0.95 Angstroms for the distance between ; atoms 1 and 3, as well as that between 2 and 4. .. code-block:: none. set optking {; ranged_distance = (""; 1 3 0.949 0.95; 2 4 0.949 0.95; ""); }. .. note:: ; The effect of the frozen and ranged keywords is generally independent of; how the geometry of the molecule was input (whether Z-matrix or Cartesian, etc.)..; At this time; however, enforcing Cartesian constraints when using a zmatrix for; molecular input is not supported. Freezing or constraining Cartesian coordinates; requires Cartesian molecule input. If numerical errors results in symmetry ; breaking, while Cartesian constraints are active, symmetrization cannot occur and; an error will be raised, prompting you to restart the job. * To scan the potential energy surface by optimizing at several fixed values; of the dihedral angle of HOOH. .. code-block:: none. molecule hooh {; 0 1; H 0.850718 0.772960 0.563468; O 0.120432 0.684669 -0.035503; O -0.120432 -0.684669 -0.035503; H -0.850718 -0.772960 0.563468; }; ; set {; basis cc-pvdz; intrafrag_step_limit 0.1; }. lower_bound = [99.99, 109.99, 119.99, 129.99, 149.99]; upper_bound = [100, 110, 120, 130, 140, 150]; PES = []. for lower, upper in zip(lower_bound, upper_bound):; my_string = f""1 2 3 4 {lower} {upper}""; set optking ranged_dihedral = $my_string; E = optimize('scf'); PES.append((upper, E)). print(""\n\tcc-pVDZ SCF energy as a function of phi\n""); for point in PES:; print(""\t%5.1f%20.10f"" % (point[0], point[1])). * To scan the potential energy surface without the |optking__ranged_dihedral| keyword, a zmatrix; can be used. .. warning:: ; Rotating dihedrals in large incre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:7635,error,errors,7635,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,2,['error'],"['error', 'errors']"
Availability,"{'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14403,error,error,14403,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"{'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'acpf', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd except ccsd/ccsd(t) by fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': ''}; {'module': 'psi4-fnocc', 'driver': 'energy', 'method': 'aqcc', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'pass', 'note': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:14613,error,error,14613,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"{'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'aqcc', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'psi4-scf', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'df', 'status': 'pass', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': ''}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'b2plyp', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'pass', 'note': 'defaultdefault'}; {'module': 'psi4-scf', 'driver': 'energ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:19661,error,error,19661,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"{'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_typ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:486391,error,error,486391,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"| is; a cutoff for the value of basis functions at grid points. This keyword is; used to determine the radial extent of the each basis shell, and it is the; COSX analogue to |scf__dft_basis_tolerance|. The |scf__incfock| keyword (defaults to ``false``) increases performance; by constructing the Fock matrix from differences in the density matrix, which; are more amenable to screening. This option is disabled by default because of; potential SCF convergence issues, particularly when using diffuse basis functions.; The |scf__cosx_overlap_fitting| keyword (defaults to ``true``) reduces numerical; integration errors using the method described in [Izsak:2011:144105]_ and is; always recommended. .. _`sec:scflink`:. Linear Exchange; ~~~~~~~~~~~~~~~. Large SCF calculations can benefit from specialized screening procedures that further reduce the scaling of the ERI contribution to the Fock matrix.; LinK, the linear-scaling exchange method described in [Ochsenfeld:1998:1663]_, is available in Psi4 in conjunction with composite algorithms that build J (|globals__scf_type| set to ``J_alg+LINK``).; LinK achieves linear-scaling by exploiting shell pair sparsity in the density matrix and overlap sparsity between shell pairs. Specifically, LinK exploits the fact that the Exchange term; requires only a linear-scaling number of significant elements through reformulating the; shell quartet screening process to scale linearly with system size.; LinK is most competitive when used with non-diffuse orbital basis sets, since orbital and density overlaps decay slower with diffuse functions.; LinK is especially powerful when combined with density-matrix based ERI screening (set |globals__screening| to ``DENSITY``) and incremental Fock builds (set |scf__incfock| to ``TRUE``), which decrease the number of significant two-electron integrals to calculate. To control the LinK algorithm, here are the list of options provided.; ; |scf__linK_ints_tolerance|: The integral screening tolerance used for ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:41837,avail,available,41837,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"|. Presently, topics are brought up on e-mail threads (where; discussion is very temporally localized and not everyone is aware of it; unless cc'd), are brought up at workshops (where people may be absent, no; record is left, and not everyone may have prepared a position on the; topic), or agreed between a couple people over g-chat (others remain; unaware of plans), or planned by someone (who may not have committed those; plans to a ticket or who wants general approval before restructuring the; code). Path of a PsiPEP; ----------------. * Someone creates a file ``doc/sphinxman/source/pepXXXX.rst`` modeled; on :source:`doc/sphinxman/source/pep0000model.rst` and adds; it to ``STATICDOC`` in :source:`doc/sphinxman/CMakeLists.txt`. The file; should have header fields modeled on another PsiPEP and a discussion of; the proposed change or practice. * Anyone can comment by adding sections to the bottom of the reST file.; Alternatively, e-mail discussions can go out and the (possibly edited); results be pasted into the bottom of the reST file once the furor dies; down. * Comments can be simple statements of agreement (useful for gauging; consensus), notation of possible problems, proposed re-writes of the; proposal, etc. Only the original author or his designate should change; the main body of the PsiPEP (to maintain a history). * Once there's agreement, file can be stamped final and be placed into; effect. (Yes, this is very vague.). Roles of a PsiPEP Include; -------------------------. * **Best practices or re-vamped best practices** . Practices can be easily linked- or referred-to by number and can be; tagged as obsolete by a single label change months later. * **Request/present viewpoint on organization**. Draw attention to organization needed in code outside one's area of; expertise. Request interface for some structure (*e.g.*, gradients) or; viewpoints on how that interface will behave to ensure compatibility.; Offer philosophy on how processes/definitions should be. *",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pep0001.rst:3164,down,down,3164,doc/sphinxman/source/pep0001.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pep0001.rst,1,['down'],['down']
Availability,"|scf__stability_analysis| | |globals__scf_type| |; +==================+==================+==============================================+===========================+=====================+; | | RHF | Internal, External (:math:`\rightarrow` UHF) | ``CHECK`` | PK only |; + +------------------+----------------------------------------------+---------------------------+---------------------+; | Direct Inversion | ROHF | Internal | ``CHECK`` | PK only |; +------------------+------------------+----------------------------------------------+---------------------------+---------------------+; | Davidson | UHF | Internal | ``CHECK`` or ``FOLLOW`` | Anything |; +------------------+------------------+----------------------------------------------+---------------------------+---------------------+. The best algorithm is automatically selected, *i.e.* Davidson for UHF :math:`\rightarrow` UHF and Direct Inversion otherwise. In addition to the options available for Direct Inversion, the Davidson algorithm can automatically; adapt |scf__follow_step_scale| to find a new SCF minimum. If |scf__max_attempts| > 1, additional attempts; will automatically increment |scf__follow_step_scale| by 0.2 every time the SCF falls back to the previously; found unstable minimum. The increment can be adjusted by setting |scf__follow_step_increment|.; The default value is 0.2; adjust if needed to try different values of |scf__follow_step_scale| in a single computation. The Davidson solver for the eigenvalues is controlled through several keywords. |scf__solver_maxiter|: maximum number of iterations. |scf__solver_convergence|: eigenvector convergence threshold. |scf__solver_n_root|: Solve for N eigenvectors in each irreducible representation. |scf__solver_roots_per_irrep|: The number of eigenvectors to solve in each irreducible representation. An array of as many integers as there are irreducible representations. |scf__solver_n_guess|: Use N guess vectors, this needs to be larger than the number of roots ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:50191,avail,available,50191,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['avail'],['available']
Availability,"}; setenv PSIPATH /path/to/python/modules:${PSIPATH}. :envvar:`PSIDATADIR` does *not* need to be set.; In the present example we unset it to make sure it does not interfere with the internal location-finding.; :envvar:`PSIPATH` is needed only if you are using external modules or ; plugins in |PSIfour| and should point to the directories where they can be found. In the; present example, we make sure the variable is set with ``if ! ( $?PSIPATH ) setenv PSIPATH """"``; before adding more paths to it. Finally, :envvar:`PSI_SCRATCH` should point to a fast, existing; local disk for temporary file storage. To use 4 threads for OpenMP parallelization; and threaded BLAS (see section :ref:`sec:threading`), we set ``-n4`` below.; The next step is then to actually run the computation: ::. /psi/install/directory/bin/psi4 -i input.in -o input.out -n 4. And then to clean up the scratch directories previously created:. .. code-block:: bash. foreach i (`sort $PBS_NODEFILE | uniq`); echo ""Removing scratch directory "" $myscratch "" on "" $i; ssh $i rm -rf $myscratch; end. Note again that the specific commands for your PBS system may differ. Refer; to your system administrator. .. _`sec:commandLineOptions`:. Command Line Options; ====================. |PSIfour| can be invoked with no command line arguments, as it takes as input; by default the file ""input.dat"" and directs output by default to ""output.dat"".; Each set of three commands below is completely equivalent, while the second set,; perhaps, is the most common usage. ::. >>> psi4; >>> psi4 -i input.dat -o output.dat; >>> psi4 input.dat output.dat. >>> psi4 descriptive_filename.in; >>> psi4 -i descriptive_filename.in -o descriptive_filename.out; >>> psi4 descriptive_filename.in descriptive_filename.out. Command-line arguments to |PSIfour| can be accessed through :option:`psi4 --help`. .. program:: psi4. .. option:: -a, --append. Append results to output file. Default: Truncate first. .. option:: -h, --help. Display the command-line opti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst:16913,echo,echo,16913,doc/sphinxman/source/external.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/external.rst,1,['echo'],['echo']
Availability,"}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no df/cd ci by psi4'}; {'module': 'psi4', 'driver': 'energy', 'method': 'qcisd(t)', 'reference': 'uhf', 'fcae': 'fc', 'sdsc': 'sd', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no open-shell energies in fnocc'}; {'module': 'aaaa-', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': ''}; {'module': 'psi4-occ', 'driver': 'energy', 'method': 'remp2', 'reference': 'rhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'pass', 'note': 'default'}; {'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:487011,error,error,487011,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'ae', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'df', 'corl_type': 'df', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'rohf', 'fcae': 'fc', 'sdsc': 'sc', 'scf_type': 'pk', 'corl_type': 'conv', 'status': 'error', 'note': 'nyi: no rohf mp2.5/mp3/remp2/lccd by occ'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': ''}; {'module': 'psi4', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'error', 'note': 'nyi: no cd gradients by occ'}; {'module': 'psi4-occ', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': 'cd', 'corl_type': 'cd', 'status': 'fd', 'note': 'default'}; {'module': 'aaaa-', 'driver': 'gradient', 'method': 'mp2.5', 'reference': 'uhf', 'fcae': 'ae', 'sdsc': 'sd', 'scf_type': '",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt:290777,error,error,290777,samples/stdsuite_psi4.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/samples/stdsuite_psi4.txt,1,['error'],['error']
Availability,"◻ | |qc_module|\ =DFMP2 Capabilities |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ◻ | |scf__reference| → | Restricted (RHF) | Unrestricted (UHF) | Restricted Open (ROHF) |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | name ↓ → | ◻ | |energy_fn| | |gradient_fn|\ [#m3]_ | |energy_fn| | |gradient_fn|\ [#m3]_ | |energy_fn| | |gradient_fn|\ [#m3]_ |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ◻ | type\ [#m1]_ ↓ → | CV | DF | CD | CV | DF | CD | CV | DF | CD | CV | DF | CD | CV | DF | CD | CV | DF | CD |; + + +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+; | ◻ | |freeze_core|\ [#m2]_\ →| A F A F A F | A F A F A F | A F A F A F | A F A F A F | A F A F A F | A F A F A F |; +==========================+=========================+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+===+; | mp2\ [#m10]_ | |globals__mp2_type| | ✓̳ ✓̳ | ✓̳ ✓̳ | ✓̳ ✓̳ | | ✓̳ ✓̳ | |; +--------------------------+-------------------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+. .. [#m1] Algorithm type selection keyword below. Values to the right: conventional ``CV``, density-fitted ``DF``, and Cholesky-decomposed ``CD``.; .. [#m2] Active orbital values to the right: all-electron ``A`` and frozen-core ``F``.; .. [#m3] Finite difference gradients are not marked explicitly by ""∷"", but the capability can be gleaned from the energy availability.; .. [#m10] Also available for DFT references RKS/UKS",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_dfmp2.rst:2528,avail,availability,2528,doc/sphinxman/source/preview_capabilities_dfmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/preview_capabilities_dfmp2.rst,2,['avail'],"['availability', 'available']"
Deployability," ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCache.cmake.in psi4PluginCache.cmake @ONLY). install(FILES ${CMAKE_BINARY_DIR}/psi4PluginCache.cmake; ${PSI4_ROOT}/cmake/psi4OptionsTools.cmake; ${PSI4_ROOT}/cmake/custom_static_library.cmake; ${PSI4_ROOT}/cmake/custom_cxxstandard.cmake; ${PSI4_ROOT}/cmake/xhost.cmake; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13285,install,install,13285,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,1,['install'],['install']
Deployability," # agrees to conda's license terms; >>> echo ""export PATH=$HOME/miniconda/bin:\$PATH"" >> ~/.bashrc # Mac: use ~/.bash_profile; # log out, log back in so conda in path; >>> conda update --yes --all; >>> conda config --add channels http://conda.anaconda.org/psi4; >>> conda install --yes psi4; >>> psi4 ""$(dirname $(which psi4))""/../share/psi4/samples/sapt1/test.in # test installation. works b/c PSI_SCRATCH defaults to /tmp. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. Now you need only specify a scratch directory; (see :ref:`sec:Scratch`) by replacing the placeholder in the following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. .. note:: Above commands use bash for installation and set up your environment for bash at runtime. To use csh at runtime, follow the on-screen directions at the end of the installation or consult step 7 below. .. _`sec:slowconda`:. Detailed Installation of Miniconda; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. https://docs.conda.io/en/latest/miniconda.html. .. 0. Sanity check. If you already have Miniconda or Anaconda, skip to step 5. The whole installation takes ~5 min; reading this page takes far longer.; ..; .. 1. Get ``bzip2``. You'll need this slightly exotic command so run ``which`` to test for availability, and install from ``yum``, source, *etc.* if unavailable. You'll also need an internet connection for downloading; computers behind a firewall or with restricted login domains are eligible. So long as you can ssh *into* the computer to an account with write permissions and can connect to the internet *from* the computer, all is well.; ..; .. .. code-block:: bash; ..; .. # check; .. >>> which bzip2; .. /usr/bin/bzip2; .. >>> curl -O ""http://psicode.org/psi4manual/master/introduction.html""; .. >>> ls -1; .. introduction.html; ..; .. 2. G",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:18024,install,installation,18024,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['install'],['installation']
Deployability," (*e.g.*, in density fitting), a partial; Cholesky factorization of the density matrices is used. Often extremely; accurate, particularly for closed-shell systems. This is the default for; systems of more than one atom.; SADNO; Natural orbitals from Superposition of Atomic Densities. Similar; to the above, but it forms natural orbitals from the SAD density; matrix to get proper orbitals which are used to start the; calculation, see [Lehtola:2019:1593]_.; GWH; A generalized Wolfsberg-Helmholtz modification of the core; Hamiltonian matrix. Usually less accurate than the core guess: the; latter is exact for one-electron systems, GWH is not; see; [Lehtola:2019:1593]_).; HUCKEL; An extended H\ |u_dots|\ ckel guess based on on-the-fly atomic UHF; calculations alike SAD, see [Lehtola:2019:1593]_.; MODHUCKEL; Like HUCKEL, an extended H\ |u_dots|\ ckel guess based on; on-the-fly atomic UHF calculations alike SAD, see; [Lehtola:2019:1593]_. This variant employs an updated rule for the; generalized Wolfsberg-Helmholz formula from [Ammeter:1978:3686]_.; READ; Read the previous orbitals from a ``wfn`` file, casting from; one basis to another if needed. Useful for starting anion; computations from neutral orbitals, or after small geometry; changes. At present, casting from a different molecular point; group is not supported. This becomes the default for the second; and later iterations of geometry optimizations.; SAP; Superposition of Atomic Potentials. This is essentially a; modification of the core Hamiltonian, which includes screening; effects by using a radially screened effective atomic charge. The; screening effects have been calculated at the complete basis set; limit with finite-element calculations, see [Lehtola:2019:25945]_; and [Lehtola:2020:012516]_. The guess and its implementation have; been described in [Lehtola:2019:1593]_. The guess is evaluated on a; DFT quadrature grid, so the guess energy depends slightly on the; used DFT quadrature. The current implementation",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:20039,update,updated,20039,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['update'],['updated']
Deployability," (E) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4. * (F) Uninstall |PSIfour| from current environment. .. code-block:: console. >>> conda remove psi4. * (G) Initially install |PSIfour| nightly build. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4/label/dev; >>> conda install psi4 --channel psi4/label/dev. * (H) Initially install |PSIfour| nightly build with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4/label/dev. * (I) Update to latest |PSIfour| nightly build. .. code-block:: console. >>> conda update psi4 -c psi4/label/dev. * (J) Initially install nightly build into a conda environment ""p4env"" instead of ""root"". This creates a sandbox with |PSIfour| and python (loaded as dependency). .. code-block:: console. >>> conda create -y -n p4env psi4 -c psi4/label/dev; >>> conda activate p4env. * (K) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4/label/dev. .. Troubleshooting; .. ^^^^^^^^^^^^^^^; ..; .. * If the target computer doesn't have libc >= 2.7 (released c.2007; for reference, 2.10 is newer than 2.7; unlike most libraries, libc generally not available in multiple versions on a computer), the |PSIfour| conda package won't work. ::; ..; .. # unsuitable computer; .. >>> ldd --version; .. ldd (GNU libc) 2.5; .. # suitable computer; .. >>> ldd --version; .. ldd (GNU libc) 2.17; ..; .. * It is of greatest importance that the |PSIfour| executable be linked against conda libpython.so *not* against any system libpython.so. This is arranged by setting ``RPATH`` to seek libraries relative to executable (thanks, conda binary relocation routine!). The conda |PSIfour| executable is not vulnerable to interference from your ``LD_LIBRARY_PATH`` settings. Below shows a well-linked executable.; ..; .. * no libraries ""not found""; .. * fundamental libraries like libc, ld-linux, pthreads found system libraries to link ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:27871,install,install,27871,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['install'],['install']
Deployability," (OS) method of; calculating electron repulsion integrals developed by B. Pritchard and; interfaced into libmints. Enabling simint and adding ``set; integral_package simint`` (do this in ``~/.psi4rc`` for universal effect); runs libderiv from Libint for derivative integrals and simint for; non-derivative integrals. Note that present AM maximum is ``$$(gg|gg)$$``. .. warning:: simint seems to be having some problems with Intel 2018 compilers. presently disabled in conda package. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/simint/badges/version.svg; :target: https://anaconda.org/psi4/simint. * SIMINT is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * The conda package is compiled to least-common-denominator, namely SSE instruction set. * If using the |PSIfour| binary, simint has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; simint can be obtained through ``conda install simint -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_simint`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect simint and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use ; .. simint from conda without thinking, consult. * To remove a conda installation, ``conda remove simint``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/simint.svg?maxAge=2592000. .. :target: https://github.com/psi4/simint TODO BPP. * If using |PSIfour| built from source and you want simint built from; from source also,; enable it as a feature with :makevar:`ENABLE_simint`,; and let the build system fetch and build it and activate dependent code. .. _`cmake:simint`:. How to configure simint for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Role |w---w| In |PSIfour|, simint is",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/simint.rst:2670,install,installed,2670,doc/sphinxman/source/simint.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/simint.rst,2,['install'],"['install', 'installed']"
Deployability," -1.207655674855 -0.365913941094 -0.918035522052; # First, remove the H from the alpha carbon. This line could be deleted; # and is only included for completeness; #H 0.429560656538 0.717651915252 1.673774709694; # Now patch it, using a Z Matrix specification. This patch can be applied; # anywhere in the coord specification, as long as it appears lower than; # the atoms referenced, as is usual for Z-Matrices; C 2 rCC 3 aCCC 1 dCCCN; H 7 rCH1 2 aHCC1 3 dHCCC1; H 7 rCH2 2 aHCC2 3 dHCCC2; H 7 rCH3 2 aHCC3 3 dHCCC3; H 0.221781602033 1.772570540211 0.286988509018; H -1.833601608592 0.108401996052 1.481873213172; H -1.925572581453 1.640882152784 0.986471814808; ; aCCC = 108.0; rCC = 1.4; dCCCN = 120; rCH1 = 1.08; rCH2 = 1.08; rCH3 = 1.08; aHCC1 = 109.0; aHCC2 = 109.0; aHCC3 = 109.0; dHCCC1 = 0.0; dHCCC2 = 120.0; dHCCC3 = 240.0; }. Here, we remove the hydrogen from the alpha carbon of glycine and replace it; with a methyl group. Applying this patch using Cartesian coordinates is; difficult, because it depends on the orientation of the existing glycine unit.; In this example, we use Z-Matrix coordinates to define the methyl group, and; define the orientation in terms of the existing glycine Cartesian coordinates; which is much easier to visualize than the corresponding Cartesian-only; approach. .. index:: molecule; multiple in input file; .. _`sec:multipleMolecules`:. .. index::; triple: setting; keywords; molecule; pair: molecule; charge; pair: molecule; multiplicity; pair: molecule; symmetry; pair: molecule; no_reorient; pair: molecule; units; .. _`sec:moleculeKeywords`:. Molecule Keywords; =================. In addition to specifying the geometry, additional information can be; provided in the molecule block :samp:`molecule {optional_molecule_name} \\{...\\}`. **Charge & Multiplicity**; If two integers :samp:`{charge} {multiplicity}` are encountered on any; line of the molecule block, they are interpreted as the molecular charge; and multiplicity (:math:`2 M_s + 1`), resp",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst:3762,patch,patch,3762,doc/sphinxman/source/psithonmol.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/psithonmol.rst,1,['patch'],['patch']
Deployability," -h, --help show this help message and exit; --psi4-compile (Command Default) Generates a minimal CMake command for building Psi4 against; this psi4-dev conda metapackage.; >>> git clone https://github.com/psi4/psi4.git; >>> cd {top-level-psi4-dir}; >>> conda create -n p4dev python={3.6} psi4-dev [-c psi4/label/dev] -c psi4; >>> conda activate p4dev; >>> psi4-path-advisor; # execute or adapt `cmake` commands above; DepsCache handles python & addons;; # DepsMKLCache handles math; further psi4-path-advisor options handle compilers.; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`; >>> make install; --disable-addons Disengage building against the psi4-dev-provided _optional_ link-time Add-Ons like CheMPS2.; --disable-mkl Disengage building against the psi4-dev-provided MKL libraries (`libmkl_rt`).; --intel Engage self-provided icc/icpc/ifort compilers backed by conda's psi4-dev-provided gcc/g++.; --intel-multiarch Engage self-provided icc/icpc/ifort compilers backed by conda's psi4-dev-provided gcc/g++ PLUS compile for multiple architectures (useful for cluster deployments).; --gcc Engage conda's psi4-dev-provided gcc/g++/gfortran compilers. # execute or adapt `cmake` commands above; DepsCache handles python & addons;; # DepsMKLCache handles math; further psi4-path-advisor options handle compilers.; >>> `psi4-path-advisor [your args]` -Dany_addl_cmake_vals=ON; >>> cd objdir && make -j`getconf _NPROCESSORS_ONLN`; >>> make install. Same for Linux/Mac/WSL. Substitute desired python version: 3.6, 3.7, 3.8, 3.9. Fine; to choose your own env name. Include ``-c psi4/label/dev`` to get dependencies to; build current master, as opposed to latest release.; Activate environment, ``conda activate; p4dev``. Go to where you've cloned psi4. Execute ``psi4-path-advisor``.; It gives you a basic cmake command covering python, sphinx, link-time qc; addons, and run-time qc addons. There's a help menu -h that gives more; info. There's other options that will also pre-configure compilers",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:11603,deploy,deployments,11603,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['deploy'],['deployments']
Deployability," .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. _`sec:buildrunfaq`:. ===============; Build & Run FAQ; ===============. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. Obtaining and Updating |PSIfour|; --------------------------------. #. :ref:`faq:obtainpsi4`; #. :ref:`faq:quiz`; #. :ref:`faq:binary`; #. :ref:`faq:clonepsi4public`; #. :ref:`faq:forkpsi4public`; #. :ref:`faq:tarballpsi4public`; #. :ref:`faq:recompile`. .. #. :ref:`faq:psi3sourceforge`. Configuring and Installing |PSIfour| via Binary; -----------------------------------------------. #. :ref:`faq:psicodedownload`; #. :ref:`sec:psi4conda`; #. :ref:`faq:psi4pkg`; #. :ref:`faq:updatepsi4`; #. :ref:`faq:psi4deps`; #. :ref:`sec:condadetails`; #. :ref:`faq:condamaxameri`. Configuring, Building, and Installing |PSIfour| via Source; ----------------------------------------------------------. #. :ref:`faq:cmakeviasetup`; #. :ref:`faq:buildquick`; #. :ref:`faq:builddetailed`. #. :ref:`faq:setuphelp`; #. :ref:`faq:chooseobjdir`; #. :ref:`faq:setuppre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_faq.rst:1217,install,install,1217,doc/sphinxman/source/build_faq.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_faq.rst,2,"['install', 'update']","['install', 'updated']"
Deployability," .. .. code-block:: bash; .. ; .. cd $top-level-psi4-dir; .. cmake -S. -Bobj-gcc; .. cd obj-gcc. .. .. _`faq:erroreriam`:; ..; .. How to fix error ""``RuntimeError: value for ERI``""; .. --------------------------------------------------; ..; .. You will need to rebuild Libint. Reissue ``cmake`` or edit; .. ``CMakeCache.txt`` with larger ``MAX_AM_ERI`` and rebuild.; ..; .. * :ref:`faq:setupmaxameri`; .. * :ref:`faq:condamaxameri`. .. _`faq:chooseobjdir`:. How to choose the compilation directory, ``{objdir}``; -----------------------------------------------------. * there is no default; * common choices are ``objdir`` or ``build`` under :samp:`{top-level-psi4-dir}`. * ``cd {top-level-psi4-dir} && cmake -S. -Bobjdir``; * ``cd {top-level-psi4-dir} && cmake -S. -Bbuild``. * in-source builds (``*.cc`` and ``*.o`` in same directory) are disallowed; * builds *outside* :samp:`{top-level-psi4-dir}` are permitted. .. _`faq:doconfigure`:. How to save configuration settings for a future compilation; -----------------------------------------------------------. Create a file like ``do-configure`` with the ``cmake`` command and options; *on one line*. ::. >>> cd {top-level-psi4-dir}; >>> cat do-configure; cmake -S. -B{objdir} \; -DCMAKE_INSTALL_PATH=""/Users/me/psi4"" \; -DCMAKE_PREFIX_PATH=""/Users/me/externals/install-libint"" \; -DMAX_AM_ERI=6 \; -DENABLE_gdma=ON \; -DBUILD_SHARED_LIBS=ON; >>> chmod u+x do-configure; >>> ./do-configure. .. _`faq:dirlayoutinstall`:. What is the directory layout of the installed or staged Psi4; ------------------------------------------------------------. After compilation (:samp:`cd {objdir} && make`), a directory structure like the; below will exist at :samp:`{objdir}/stage`. This may be tested and used; just like a full installation. After installation (:samp:`cd {objdir} && make && make install`), a directory; structure like the below will exist at :samp:`/{prefix}`. This is a full; installation. .. code-block:: bash. /; bin/ (executables for psi4 ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:24088,configurat,configuration,24088,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['configurat'],['configuration']
Deployability," .. image:: https://img.shields.io/badge/home-sns--mp2-5077AB.svg; :target: https://github.com/DEShawResearch/sns-mp2. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/DEShawResearch/sns-mp2/blob/master/README.md. This plugin is an implementation of the SNS-MP2 algorithm developed by McGibbon ; et. al. [McGibbon:2017:161725]_. The SNS-MP2 method uses neural networking to ; improve the accuracy of MP2 (:ref:`sec:dfmp2`) interaction energies for dimer molecules.; The plugin is distributed under the 2-clause BSD license. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/snsmp2/badges/version.svg; :target: https://anaconda.org/psi4/snsmp2. * snsmp2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the Psi4conda installer, snsmp2 has already been installed alongside. * If using the |PSIfour| conda package, the snsmp2 conda package can; be obtained through ``conda install snsmp2 -c psi4`` or ``conda install; psi4-rt -c psi4``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; snsmp2 can be obtained through ``conda install snsmp2 -c psi4``.; Then, hint its location with :envvar:`PYTHONPATH`. * To remove a conda installation, ``conda remove snsmp2``. **Source**. * .. image:: https://img.shields.io/github/tag/DEShawResearch/sns-mp2.svg?maxAge=2592000; :target: https://github.com/DEShawResearch/sns-mp2. * Download the plugin from the GitHub repository:. .. code-block:: bash. >>> git clone https://github.com/DEShawResearch/sns-mp2. * Once dowloaded, the plugin can be installed as outlined in the documentation:. .. code-block:: bash. >>> cd {top-level-sns-mp2-directory}; >>> PSI4_PYTHON=$(head $(which psi4) -n 1 | sed -r 's/^.{2}//'); >>> $PSI4_PYTHON -m pip install . Sample Input; ~~~~~~~~~~~~. A sample input file, adapted from the documentation, i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst:2289,install,install,2289,doc/sphinxman/source/plugin_snsmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst,2,['install'],['install']
Deployability," .. include:: autodir_options_c/globals__cubic_grid_spacing.rst; .. include:: autodir_options_c/globals__cubic_grid_overage.rst. Orbital Visualization with VMD; ==============================. Included in |PSIfour| is functionality to automatically render specified surfaces, including molecular orbitals,; densities, and basis functions, using VMD. The vmd_cube.py script takes the .cube files generated; in a calculation and generates images aligned with user-input specifications. The script is located; in :source:`psi4/share/psi4/scripts/vmd_cube.py`. Script Prerequisites; --------------------. 1. VMD must be installed, and it can be downloaded for free at (http://www.ks.uiuc.edu/Research/vmd/). Additionally,; the script needs to know where to find the VMD executable, and this is defined as :envvar:`VMDPATH`. VMDPATH must be defined as; an environment variable. 2. To generate images with multiple surfaces, ImageMagick must also be installed. ImageMagick is a free program which; can be installed using homebrew/pip or from http://www.imagemagick.org/script/binary-releases.php . 3. With ImageMagick installed, an environment variable called :envvar:`MONTAGE` needs to be created which points to the montage executable.; This executable can be found in the /bin/ sub-directory wherever ImageMagick was installed. .. envvar:: VMDPATH. Filesystem path to the VMD executable. .. envvar:: MONTAGE. Filesystem path to the Montage executable of ImageMagick. Running the Script; ------------------. 1. Run a |PSIfour| calculation, generating .cube files as detailed in the above documentation. 2. Add vmd_cube.py to your path. Call vmd_cube.py and pass the directory containing; the .cube files as an argument::; 	; 	python vmd_cube.py /path/to/cube/files/. By default the script will search for cube files in the directory in which it is called.; In addition to individual image files for each orbital, vmd_cube will also generate an image containing all surfaces in an array; (very useful for h",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst:7776,install,installed,7776,doc/sphinxman/source/cubeprop.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cubeprop.rst,1,['install'],['installed']
Deployability," .. include:: autodoc_abbr_options_c.rst. .. index:: adcc, ADC. .. _`sec:adcc`:. Interface to adcc by M. F. Herbst and M. Scheurer; =================================================. .. codeauthor:: Michael F. Herbst; .. sectionauthor:: Michael F. Herbst. *Module:* :ref:`Keywords <apdx:adc>`, :ref:`PSI Variables <apdx:adc_psivar>`. .. image:: https://img.shields.io/badge/home-adcc-informational.svg; :target: https://code.adc-connect.org. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://adc-connect.org/latest. |PSIfour| contains code to interface to the adcc python module developed; by M. F. Herbst *et. al.*. No additional licence or configuration; is required to use adcc. The module serves as the backend for; most algebraic-diagrammatic construction methods for correlated; excited states in |PSIfour|. For more details on ADC methods,; see :ref:`sec:adc`. Installation; ~~~~~~~~~~~~. For up to date information and more details,; see the `adcc installation documentation <https://adc-connect.org/latest/installation.html>`_. **Binary**. * .. image:: https://anaconda.org/adcc/adcc/badges/version.svg; :target: https://anaconda.org/adcc/adcc. * .. image:: https://img.shields.io/pypi/v/adcc; :target: https://pypi.org/project/adcc. * adcc is available as a conda package for Linux and macOS; and on pypi. .. * If using the |PSIfour| binary, adcc has already been installed alongside.; ..; .. * If using |PSIfour| built from source, and anaconda or miniconda has; .. already been installed (instructions at :ref:`sec:quickconda`),; .. adcc can be obtained through ``conda install adcc -c adcc``.; .. Then enable it as a feature with :makevar:`ENABLE_adcc`; .. and rebuild |PSIfour| to detect adcc and activate dependent code.; ..; .. * Previous bullet had details. To build |PSIfour| from source and use; .. adcc from conda without thinking, consult :ref:`sec:condapsi4dev`. * To remove a conda installation, ``conda remove adcc``. **Source",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adcc.rst:2026,install,installation,2026,doc/sphinxman/source/adcc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/adcc.rst,1,['install'],['installation']
Deployability," .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://www-stone.ch.cam.ac.uk/documentation/gdma/manual.pdf. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/gdma/badges/version.svg; :target: https://anaconda.org/psi4/gdma. * GDMA is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, gdma has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; gdma can be obtained through ``conda install gdma -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_gdma`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect gdma and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. gdma from conda without thinking, consult. * To remove a conda installation, ``conda remove gdma``. **Source**. * .. image:: https://img.shields.io/github/tag/psi4/gdma.svg?maxAge=2592000; :target: https://github.com/psi4/gdma. * If using |PSIfour| built from source and you want gdma built from; from source also,; enable it as a feature with :makevar:`ENABLE_gdma`,; and let the build system fetch and build it and activate dependent code. Input; ~~~~~. The distributed multipole analysis (DMA) technique, developed by Anthony J.; Stone and implemented by him into the `GDMA package; <http://www-stone.ch.cam.ac.uk/programs.html>`_, is available in |PSIfour|.; The current implementation simply embeds Stone's GDMA code into the main; executable, and generates the appropriate input files automatically. The; program takes as input a data file, and a Gaussian formatted checkpoint (see; Section :ref:`FCHK <sec:fchk>`) file. The simplest usage of the GDMA code is; demonstrated below, along with a listing of the options supported; these; options correspond to the opti",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst:2662,install,installation,2662,doc/sphinxman/source/gdma.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/gdma.rst,1,['install'],['installation']
Deployability," ; LIBPSIO --- The PSI I/O Library. Programmer's Manual for LIBPSIO: The PSI I/O Library. T. Daniel Crawford ; 22 October 1998 ; Updated: 27 July 2006; crawdad@vt.edu. I. The structure and philosophy of the; library. Many I/O libraries for quantum chemistry packages (including those in; the old PSI2 code) expect the programmer to know the byte-by-byte; layout of the given binary file. Accordingly, the primary read; and write functions in such libraries require as an argument a global; bytewise file pointer to the beginning of the desired data. As a; result, when this pointer is defined to be an unsigned four-byte; integer (common on 32-bit computers), the total size of the direct; access file is limited to 4 GB (232 bytes). Furthermore,; in order to avoid code duplication, this I/O design requires that one; construct specialized libraries of functions (e.g., libfile30; in PSI2) for interaction with particularly complicated files such as a; checkpoint file. Even slight modification of the file layout can; require substantial changes to such libraries. This PSI3 I/O library, libpsio, is intended to overcome these; problems in two ways:. Each file makes use of its own table of contents (TOC); which contains file-global starting and ending addresses for each; data item.; Addresses to data items in the TOC are provided to the standard; read and write functions by the programmer as entry-relative; page/offset pairs, which are translated to file-global; addresses internally. Data items in the TOC are identified by keyword strings (e.g.,; ""Nuclear Repulsion Energy""). If the programmer wishes to; read or write an entire TOC entry, he/she is required to provide only; the TOC keyword and the entry size (in bytes) to obtain the data; the; entry's global starting address is supplied by the TOC. Furthermore,; it is possible to read pieces of TOC entries (say a single buffer of a; large list of two-electron integrals) by providing the appropriate TOC; keyword, a size, and a startin",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html:129,Update,Updated,129,doc/sphinxman/source/attic/libpsio.html,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/libpsio.html,1,['Update'],['Updated']
Deployability," >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Python_INCLUDE_DIR ""Path to the python include files (e.g., /path/to/",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2247,install,install,2247,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['install'],['install']
Deployability," >>> cmake -S. -Bobjdir [your configuration options]; # make; >>> cd objdir; >>> make -j`getconf _NPROCESSORS_ONLN`; >>> make install; # -or- general; >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. .. _`faq:builddetailed`:. How to build, test, and install Psi4, in detail; -----------------------------------------------. **1. Plan Directories**. Get ahold of the |PSIfour| codebase, and navigate to the top level source; directory, hereafter :samp:`{top-level-psi4-dir}`. * :ref:`faq:obtainpsi4`. ::. >>> cd {top-level-psi4-dir}. Choose a compilation directory, hereafter :samp:`{objdir}`. * :ref:`faq:chooseobjdir`. Choose an installation directory, hereafter :samp:`{prefix}`. * :ref:`faq:setupprefix`. **2. Plan Configuration**. Examine the strict and optional software requirements to make sure the; target computer has all the necessary dependencies installed. * :ref:`faq:coredepend`; * :ref:`faq:addondepend`. Prepare any necessary or desired configuration options for ``cmake``,; hereafter ``[your configuration options]``. * :ref:`faq:setuphelp`; * :ref:`faq:cmakeviasetup`. **3. Configure**. Run CMake with planned options and directories, as below. It reports on; software found or unfound as it scans the computer, then (upon success); creates :samp:`{objdir}` ready for compilation. ::. >>> cmake -S. -B{objdir} -DCMAKE_INSTALL_PREFIX={prefix} [your configuration options]. **4. Compile**. Compile the code (optional ``-j`` triggers parallel compilation). .. code-block:: console. >>> cd {objdir}; >>> cmake --build . -j`getconf _NPROCESSORS_ONLN`. **5. Test**. Optionally, use CTest and Pytest to test the build. * :ref:`faq:minutetests`; * :ref:`faq:subsettests`; * :ref:`faq:testsoutput`; * :ref:`faq:pytest`. .. code-block:: console. >>> ctest -j`getconf _NPROCESSORS_ONLN`. >>> make pytest. **6. Install**. If tests pass, install the code. ::. >>> cmake --install . **7. Configure Runtime**. To run |PSIfour| after installation, you need to configure a few",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:4898,configurat,configuration,4898,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,2,['configurat'],['configuration']
Deployability," C -7.122781 1.059754 0.689090; H -7.226173 2.012097 -1.240759; H -6.687348 -2.253224 -1.259958; H -6.707325 -2.266920 1.222105; H -7.246150 1.998400 1.241304; O -6.944245 -0.111984 -2.805375; H -7.058224 0.807436 -3.049180; C -6.990227 -0.143507 2.907714; H -8.018305 -0.274985 3.264065; H -6.592753 0.807024 3.281508; H -6.368443 -0.968607 3.273516; nocom; unit angstrom; }; ; # Create a python dictionary and convert to string for pass through to optking; MTdimer = """"""{; ""Natoms per frag"": [12, 16],; ""A Frag"": 1,; ""A Ref Atoms"": [[1, 3, 4, 6, 8], [8], [11]],; ""A Label"": ""methylthiophene"",; ""B Frag"": 2,; ""B Ref Atoms"": [[13, 14, 15, 16, 17, 18], [13], [15]],; ""B Label"": ""tyrosine"",; ""Frozen"": [""theta_A"", ""theta_B"", ""tau"", ""phi_A"", ""phi_B""],; }""""""; ; set {; basis 6-31+G ; frag_mode MULTI; interfrag_coords $MTdimer ; }. optimize(""mp2""). Dealing with problematic optimizations; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. Although optking is continuously improved with robustness in mind, some; attempted optimizations will inevitably fail to converge to the desired minima.; For difficult cases, the following suggestions are made. * As for any optimizer, computing the Hessian and limiting the step size will; successfully converge a higher percentage of cases. The default settings have; been chosen because they perform efficiently for common, representative test sets.; More restrictive, cautious steps are sometimes necessary. * |optking__dynamic_level| allows optking to change the method of optimization; toward algorithms that, while often less efficient, may help to converge difficult; cases. If this is initially set to 1, then optking, as poor steps are detected,; will increase the dynamic level through several forms of more robust and cautious algorithms.; The changes will reduce the trust radius, allow backward steps (partial line; searching), add cartesian coordinates, switch to cartesian coordinates, and take; steepest-descent steps. * The developers have found the |optking_",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst:17912,continuous,continuously,17912,doc/sphinxman/source/optking.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/optking.rst,1,['continuous'],['continuously']
Deployability," EXCLUDE; # below place extra files the ctests-run-as-pytests need; PATTERN ""adcc/formaldehyde-pe-adc1/fa_6w.pot""; PATTERN ""adcc/formaldehyde-pe-adc2/fa_6w.pot""; PATTERN ""ci-property/grid.dat""; PATTERN ""scf-property/grid.dat""; PATTERN ""mp2-property/grid.dat""; PATTERN ""cubeprop*/*cube.ref""; PATTERN ""fcidump/*INTDUMP.ref""; PATTERN ""psithon2/psiaux1/*""; PATTERN ""psithon2/psiaux1/myplugin1/*""; PATTERN ""psithon2/psiaux2/*""; PATTERN ""dftd3/psithon2/psiaux1/*""; PATTERN ""dftd3/psithon2/psiaux1/myplugin1/*""; PATTERN ""dftd3/psithon2/psiaux2/*""; PATTERN ""mints3/L*dat""; PATTERN ""mints3/P*dat""; ). # <<< install psi4 share/ & include/ >>>. install(DIRECTORY share/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4; MESSAGE_NEVER; PATTERN ""*.bin"" EXCLUDE; PATTERN ""*.pyc"" EXCLUDE). install(FILES share/psi4/quadratures/1_x/R_avail${_endian_ext}.bin; RENAME quadratures/1_x/R_avail.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(FILES share/psi4/quadratures/1_x/error${_endian_ext}.bin; RENAME quadratures/1_x/error.bin; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4). install(DIRECTORY include/psi4/; DESTINATION ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_INCLUDEDIR}/psi4). # <<< install external's share/ to psi4 share/ >>>. if(TARGET libefp::efp); # bring libefp's fraglib to PSIDATADIR's attention; set(_fraglib_in_psi4_dir ${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/psi4/efpfrag). add_custom_target(consolidate_psidatadir ALL; VERBATIM; COMMAND ${CMAKE_COMMAND} -E make_directory ${_fraglib_in_psi4_dir}; COMMENT ""Symlink external resources into PSIDATADIR""). file(GLOB _dotefps ""${libefp_FRAGLIB_DIRS}/*.efp""); foreach(_dotefp ${_dotefps}); get_filename_component(_efpfile ${_dotefp} NAME); add_custom_command(TARGET consolidate_psidatadir; POST_BUILD; COMMAND ${CMAKE_COMMAND} -E create_symlink ${_dotefp} ${_fraglib_in_psi4_dir}/${_efpfile}); endforeach(); endif(). # <<< Export Config >>>. configure_file(psi4PluginCac",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt:13007,install,install,13007,psi4/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/CMakeLists.txt,1,['install'],['install']
Deployability," Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: LibECPInt, ecpint; .. _`sec:ecpint`:. Interface to LibECPInt by R. Shaw; =================================. .. codeauthor:: Andrew C. Simmonett; .. sectionauthor:: Lori A. Burns. .. image:: https://img.shields.io/badge/home-LibECPInt-5077AB.svg; :target: https://github.com/robashaw/libecpint. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://libecpint.readthedocs.io/en/latest/index.html. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libecpint/badges/version.svg; :target: https://anaconda.org/psi4/libecpint. * .. image:: https://anaconda.org/conda-forge/libecpint/badges/version.svg; :target: https://anaconda.org/conda-forge/libecpint. * LibECPInt is available as a conda package for Linux and macOS. * If using the |PSIfour| binary, LibECPInt has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; LibECPInt can be obtained through ``conda install libecpint``.; Then enable it as a feature with :makevar:`ENABLE_ecpint`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect LibECPInt and activate dependent code. * To remove a conda installation, ``conda remove libecpint``. **Source**. * .. image:: https://img.shields.io/github/tag/robashaw/libecpint.svg?maxAge=2592000; :target: https://github.com/robashaw/libecpint. * If using |PSIfour| built from source and you want LibECPInt built from; from source also,; enable it as a feature with :makevar:`ENABLE_ecpint`,; and let the build system fetch and build it and activate dependent code. .. _`cmake:ecpint`:. How to configure LibECPInt for building Psi4; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. **Role and Dependencies**. * Rol",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ecpint.rst:1924,install,installed,1924,doc/sphinxman/source/ecpint.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ecpint.rst,1,['install'],['installed']
Deployability," General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: LIBEFP, EFP. .. _`sec:libefp`:. Interface to LIBEFP by I. Kaliman; =================================. .. codeauthor:: Andrew C. Simmonett, A. Eugene DePrince III, Rollin A. King, and Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <psi4/driver/procrouting/solvent/efp.py>`. .. image:: https://img.shields.io/badge/home-libefp-5077AB.svg; :target: https://github.com/libefp2/libefp. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/libefp2/libefp. |PSIfour| contains code to interface to the LIBEFP library developed; in L. Slipchenko's group by I. Kaliman. LIBEFP; requires no additional licence,; downloads, or configuration. Since February 2017, libefp is not required to build; |Psifour|. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libefp/badges/version.svg; :target: https://anaconda.org/psi4/libefp. * libefp is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, libefp has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; libefp can be obtained through ``conda install libefp -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_libefp`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect libefp and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. libefp from conda without thinking, consult. * To remove a conda installation, ``conda remove libefp``. **Sou",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:1843,configurat,configuration,1843,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,1,['configurat'],['configuration']
Deployability," MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. ===================; Obtaining |PSIfour|; ===================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. .. _`faq:obtainpsi4`:. How to obtain Psi4: start with find-the-code quiz, end in ``{top-level-psi4-dir}``; ----------------------------------------------------------------------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. Take a :ref:`quiz <faq:quiz>` to find the best version of the codebase for; your needs, be it binary, tarball, or version-controlled repository. Or,; select outright among:. #. :ref:`faq:binary`; #. :ref:`faq:binarypackage`; #. :ref:`faq:clonepsi4public`; #. :ref:`faq:forkpsi4public` (only path to develop |PSIfour|); #. :ref:`faq:tarballpsi4public`. .. _`faq:quiz`:. Find-the-code Quiz; ------------------. A better decision tree is available at :psicode:`installs/latest`,; though the below remains valid. * I just want to run the code. I may tweak the Python, but I'm not; developing anything to contribute back to the code base. * Provided I still get good, threaded BLAS/LAPACK, OpenMP parallelism,; and optimization for a variety of processor architectures, I'm willing to forgo; architecture tuning wizardry to avoid compiling it myself. * I'm on Linux or Mac (Intel or Silicon chips) or Windows (native or WSL/Ubuntu Bash Shell). * I'm fami",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst:1641,install,installs,1641,doc/sphinxman/source/build_obtaining.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_obtaining.rst,1,['install'],['installs']
Deployability," Mac and Linux (and; Windows, through the Ubuntu shell) and native Windows architectures; through `Anaconda (formerly Continuum Analytics; <https://www.anaconda.com/products/individual>`_, the company that produces; `Anaconda Python <http://docs.continuum.io/anaconda/index.html>`_ (a; full-fledged scientific python environment with package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_) and, more particularly, `Miniconda; <https://docs.conda.io/en/latest/miniconda.html>`_ (a lightweight Python; distribution with same package manager `conda; <https://conda.io/projects/conda/en/latest/user-guide/getting-started.html>`_). Some nice features for us:. * cross-platform. * no root, administrator, or sudo access required. * built with high-performance math libraries. * lightweight software stack (<100 MB w/o |PSIfour|; ~1 GB including |PSIfour|, numpy, and MKL). * updated nightly so new features accessible. * standardizes python distribution so no need to find/install libpython packages. * add-ons (plugins, extra features requiring Fortran compiler, etc.) can be made available as conda packages. * develop |PSIfour| through plugins without a pre-existing development environment, see :ref:`sec:condaplugins`. The |PSIfour| binary repository is at `Anaconda (formerly Binstar) <https://anaconda.org/psi4>`_. For commands to get a default installation, go to :ref:`sec:psi4conda`; or the :psicode:`psicode downloads page <installs/latest/>` .; Users proficient with conda may prefer to consult :ref:`sec:condadetails`.; For more flexibility and a detailed explanation, go to; :ref:`sec:slowconda` and :ref:`sec:slowpsi4`. .. _`faq:psicodedownload`:. How to install a Psi4 binary with the Psi4conda installer, download site; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. `Download one of the nine installers; <http://psicode.org/downloads.html>`_ (Linux/Mac/Windows; Py38/39/310).; ``bash`` it. Follow the prompts and *",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:2694,install,install,2694,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['install'],['install']
Deployability," Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2102,install,install,2102,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['install'],['install']
Deployability," Psithon mode and want to know the corresponding location to add to; :envvar:`PYTHONPATH` for PsiAPI mode, execute ``psi4 --psiapi``. It; will return bash commands to set :envvar:`PATH` (for correct python; interpreter) and :envvar:`PYTHONPATH` (to find psi4 module) correctly,; after which ``import psi4`` will work. .. code-block:: bash. >>> psi4 --psiapi-path; export PATH=/path/to/dir/of/python/interpreter/against/which/psi4/compiled:$PATH; export PYTHONPATH=/path/to/dir/of/psi4/core-dot-so:$PYTHONPATH. >>> export PATH=/path/to/dir/of/python/interpreter/against/which/psi4/compiled:$PATH; >>> export PYTHONPATH=/path/to/dir/of/psi4/core-dot-so:$PYTHONPATH. >>> python -c ""import psi4"". >>> python -c ""import psi4;print(psi4.__file__, psi4.__version__)"". .. _`faq:runordinarymodule`:. How to run Psi4 as Python module after compilation; --------------------------------------------------. Substituting the full installation directory :samp:`{prefix}` and a; suitable scratch directory, issue the following commands directly in your; terminal or place them into your ""rc"" file and open a new terminal. (To; use a staged installation directory, substitute; :samp:`{objdir}/stage` for :samp:`{prefix}`.). .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; setenv PYTHONPATH {prefix}/lib:$PYTHONPATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; export PYTHONPATH={prefix}/lib:$PYTHONPATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. * :ref:`faq:psi4psiapipath`. Run |PSIfour|. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:runfrombi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:29469,install,installation,29469,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['install'],['installation']
Deployability," Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. index:: prerequisites, compiling, installing; .. _`sec:installFile`:. ====================================; Compiling and Installing from Source; ====================================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :source:`conda/psi4-path-advisor.py`; (extensive help menu at ``conda/psi4-path-advisor.py -h``); or :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see :psicode:`installs/latest`; (select ""source""). For pre-built binaries again well-tested,; performance-tuned, and available for all common operating systems,; see :psicode:`installs/latest` (select ""conda"").; To see working builds for Linux, Mac, and Windows, see :src:; :source:`[this GHA] <.github/workflows/ecosystem.yml>`. .. _`faq:cmakeviasetup`:. Planning: how to configure Psi4 and invoke CMake; ------------------------------------------------. |PSIfour| is built through CMake. An abbreviated build guide can be found; :source:`within the source itself <CMakeLists.txt#L27>` . CMake does a good job scanning your computer to locate libraries, header; files, and executables needed for compilation. So it's very possible that; from :samp:`{top-level-psi4-dir}` source directory, you can call :samp:`cmake -S.; -B{objdir}` without any further arguments, and it will invoke ``cmake``,; detect some appropriate defaults, configure the build, create a build; directory :samp:`{objdir}`,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:1961,install,installs,1961,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['install'],['installs']
Deployability," TOTAL ENERGY; CEPA(2) CORRELATION ENERGY; CEPA(3) TOTAL ENERGY; CEPA(3) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested variant of coupled electron pair approximation level of theory. .. psivar:: CFOUR ERROR CODE. The non-zero return value from a Cfour execution. .. psivar:: CI DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory, (3,). .. psivar:: CI QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n -> ROOT m DIPOLE. Transition dipole array [e a0] between roots *n* and *m* for the requested configuration interaction level of theory, (3,). .. psivar:: CI ROOT n -> ROOT m QUADRUPOLE. Redundant transition quadrupole array [e a0^2] between roots *n* and *m* for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory and root *n*, (3,). .. psivar:: CI ROOT n QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory and root *n*, (3, 3). .. psivar:: CI ROOT n TOTAL ENERGY; CI ROOT n CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root; *n* (numbering starts at 0). .. psivar:: CI STATE-AVERAGED TOTAL ENERGY; CI STATE-AVERAGED CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY; CI CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root. .. psivar:: CISD DIPOLE. Dipole array [e a0] for the configuration interaction singles and doubles level of theory, (3,). .. psivar:: CISD QUADRUPOLE. Redundan",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:24347,configurat,configuration,24347,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['configurat'],['configuration']
Deployability," Variables <apdx:efp_psivar>`, :source:`LIBEFP <psi4/driver/procrouting/solvent/efp.py>`. .. image:: https://img.shields.io/badge/home-libefp-5077AB.svg; :target: https://github.com/libefp2/libefp. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: https://github.com/libefp2/libefp. |PSIfour| contains code to interface to the LIBEFP library developed; in L. Slipchenko's group by I. Kaliman. LIBEFP; requires no additional licence,; downloads, or configuration. Since February 2017, libefp is not required to build; |Psifour|. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libefp/badges/version.svg; :target: https://anaconda.org/psi4/libefp. * libefp is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, libefp has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; libefp can be obtained through ``conda install libefp -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_libefp`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect libefp and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. libefp from conda without thinking, consult. * To remove a conda installation, ``conda remove libefp``. **Source**. * .. image:: https://img.shields.io/github/tag/ilyak/libefp.svg?maxAge=2592000; :target: https://github.com/ilyak/libefp. * If using |PSIfour| built from source and you want libefp built from; from source also,; enable it as a feature with :makevar:`ENABLE_libefp`,; and let the build system fetch and build it and activate dependent code. .. index:: EFP; library fragments; pair: EFP; adding new. .. _`sec:findingEFPFragments`:. EFP Fragments; ~~~~~~~~~~~~~. LIBEFP comes with a couple dozen ready-to-use fragments (water,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst:2336,install,installed,2336,doc/sphinxman/source/libefp.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libefp.rst,2,['install'],"['install', 'installed']"
Deployability," _, output = execute(command, infiles_with_contents, outfiles, environment=env, scratch_messy=False); + command = [sys.executable, psi4.executable, inputdat, ""-n2""]; + _, output = execute(command, infiles_with_contents, outfiles, environment=env, scratch_messy=True). success = output[""proc""].poll() == 0; assert success, output[""stdout""] + output[""stderr""]. * Run a full stdsuite tests to generate new capabilities tables for docs. Detailed instructions are; in :source:`psi4/share/psi4/scripts/merge_stdsuite.py` . Anticipate next release; -----------------------. * Bump version in ``codemeta.json``, :source:`codemeta.json#L9`; * Add to branch list in ``azure-pipelines.yml``, :source:`azure-pipelines.yml`. Build Conda ecosystem stack; ---------------------------. * By ""ecosystem stack"", we mean packages that are upstream, downstream, required, and optional for; a fully featured Psi4 build and which we have some role in packaging.; * These packages (e.g., ``libint``, ``gdma``) should already be updated and built on conda-forge.; Survey them to check version tick and other key PRs have been merged.; * Changes to targets' ""source"" and ""version"" in individual recipes should be edited in psi4; ``external/*/*/CMakeLists.txt`` files; * Edit any added or dropped dependencies in main :source:`CMakeLists.txt` and docs; :source:`doc/sphinxman/source/build_planning.rst` . .. Build Conda ecosystem stack (pre-Spring 2023); .. ---------------------------------------------; ..; .. By ""ecosystem stack"", mean packages that are upstream, downstream, required, and optional for a fully featured Psi4 build and which we can't get from ""defaults"" or ""conda-forge"" channels.; ..; .. * Main directions are in [cbcy](https://github.com/psi4/psi4meta/blob/master/conda-recipes/conda_build_config.yaml) and [poodle](https://github.com/psi4/psi4meta/blob/master/psinet-nightly/kitandkapoodle.py); .. * A couple weeks before the first ""rc"" is planned, start going through L/LT in poodle, checking with upstre",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:6789,update,updated,6789,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['update'],['updated']
Deployability," a documentation; update/fix), then you should wait until next patch release when it; will be merged into the main trunk automatically.; \end{enumerate}. \noindent; The following are some of the most commonly used SVN commands for checking; out and updating working copies of the \PSIfour\ source code. \noindent; $\bullet$ To checkout a working copy of the head of the main trunk:. {\tt svn co https://sirius.chem.vt.edu/svn/psi4/trunk/ psi4} . \noindent; $\bullet$ To check out a working copy of the head of a specific release branch,; e.g., the branch labelled {\tt psi-4-0}:. {\tt svn co https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0 psi4}. \noindent Note that subsequent {\tt svn update} commands in this; working copy will provide updates only on the chosen branch. Note; also that after you have checked out a fresh working copy of the code; you must run the {\tt autoconf} command to generate a {\tt configure}; script for building the code. (See the installation manual for; configuration, compilation, and testing instructions.). \noindent For each of the above commands, the working copy of your; code will be placed in the directory \file{psi4}, regardless of your; choice of branch. In this manual, we will refer to this directory; from now on as {\tt \$PSI4}. Subsequent SVN commands are usually run; within this top-level directory. \noindent; $\bullet$ To update your current working copy to include the latest revisions:. {\tt svn update}. \noindent; Notes: (a) This will update only the revisions on your current branch;; (b) The old {\tt -d} and {\tt -P} flags required by CVS are not necessary with SVN. . \noindent; $\bullet$ To convert your working copy to the head of a specific branch:. {\tt svn switch https://sirius.chem.vt.edu/svn/PSI4/branches/psi-4-0}. \noindent; $\bullet$ To convert your working copy to the head of the main trunk:. {\tt svn switch https://sirius.chem.vt.edu/svn/psi4/trunk/}. \noindent; $\bullet$ To find out what branch your working copy is on",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:5892,install,installation,5892,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability," a few simple input files as examples. A large ; number of sample input files, covering everything from single-point energies; using density-functional theory to response properties from coupled-cluster; theory, can be found in the :source:`samples` directory. Running a Basic Hartree--Fock Calculation; =========================================. In our first example, we will consider a Hartree--Fock SCF computation; for the water molecule using a cc-pVDZ basis set. We will specify the; geometry of our water molecule using a standard Z-matrix. .. literalinclude:: @SFNX_INCLUDE@samples/tu1-h2o-energy/input.dat. .. note:: The memory and basis set specifications are placed *before* the; energy function is called. Any user options need to; be set before the procedure they are meant to affect. For your convenience, the above example can be found in ; :srcsample:`tu1-h2o-energy`.; You can run it if you wish.; Once |PSIfour| is in your path (see the ; :ref:`User Configuration <faq:runordinaryexe>`; section of the installation instructions), you can run this computation by typing. >>> psi4 input.dat output.dat. If everything goes well, the computation should complete and should report; a final restricted Hartree--Fock energy in a section like this::. Energy converged. @RHF Final Energy: -76.02663273410671. By default, the energy should be converged to about :math:`1.0 \times 10^{-6}`, so agreement; is only expected for about the first 6 digits after the decimal. If the; computation does not complete, there is probably a problem with the; compilation or installation of the program (see the installation; instructions in Sec. :ref:`sec:installFile`). This very simple input is sufficient to run the requested information.; Notice that we didn't tell the program some otherwise useful information; like the charge on the molecule (0, it's neutral), the spin multiplicity; (1 for a closed-shell molecule with all electrons paired), or the reference; wavefunction to use (restricted Hartr",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst:3689,install,installation,3689,doc/sphinxman/source/tutorial.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/tutorial.rst,1,['install'],['installation']
Deployability," ahold of the |PSIfour| codebase, and navigate to the top level source; directory, hereafter :samp:`{top-level-psi4-dir}`. * :ref:`faq:obtainpsi4`. ::. >>> cd {top-level-psi4-dir}. Choose a compilation directory, hereafter :samp:`{objdir}`. * :ref:`faq:chooseobjdir`. Choose an installation directory, hereafter :samp:`{prefix}`. * :ref:`faq:setupprefix`. **2. Plan Configuration**. Examine the strict and optional software requirements to make sure the; target computer has all the necessary dependencies installed. * :ref:`faq:coredepend`; * :ref:`faq:addondepend`. Prepare any necessary or desired configuration options for ``cmake``,; hereafter ``[your configuration options]``. * :ref:`faq:setuphelp`; * :ref:`faq:cmakeviasetup`. **3. Configure**. Run CMake with planned options and directories, as below. It reports on; software found or unfound as it scans the computer, then (upon success); creates :samp:`{objdir}` ready for compilation. ::. >>> cmake -S. -B{objdir} -DCMAKE_INSTALL_PREFIX={prefix} [your configuration options]. **4. Compile**. Compile the code (optional ``-j`` triggers parallel compilation). .. code-block:: console. >>> cd {objdir}; >>> cmake --build . -j`getconf _NPROCESSORS_ONLN`. **5. Test**. Optionally, use CTest and Pytest to test the build. * :ref:`faq:minutetests`; * :ref:`faq:subsettests`; * :ref:`faq:testsoutput`; * :ref:`faq:pytest`. .. code-block:: console. >>> ctest -j`getconf _NPROCESSORS_ONLN`. >>> make pytest. **6. Install**. If tests pass, install the code. ::. >>> cmake --install . **7. Configure Runtime**. To run |PSIfour| after installation, you need to configure a few variables:. * :ref:`faq:runordinaryexe`; * :ref:`faq:runordinarymodule`. .. _`faq:coredepend`:. What are the tools and dependencies strictly required for building Psi4; -----------------------------------------------------------------------. The core |PSIfour| build requires the software below. Note that; practically everything (including Python, CMake, NumPy, BLAS/LAPACK,",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:5311,configurat,configuration,5311,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['configurat'],['configuration']
Deployability," al. [McGibbon:2017:161725]_. The SNS-MP2 method uses neural networking to ; improve the accuracy of MP2 (:ref:`sec:dfmp2`) interaction energies for dimer molecules.; The plugin is distributed under the 2-clause BSD license. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/snsmp2/badges/version.svg; :target: https://anaconda.org/psi4/snsmp2. * snsmp2 is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the Psi4conda installer, snsmp2 has already been installed alongside. * If using the |PSIfour| conda package, the snsmp2 conda package can; be obtained through ``conda install snsmp2 -c psi4`` or ``conda install; psi4-rt -c psi4``. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; snsmp2 can be obtained through ``conda install snsmp2 -c psi4``.; Then, hint its location with :envvar:`PYTHONPATH`. * To remove a conda installation, ``conda remove snsmp2``. **Source**. * .. image:: https://img.shields.io/github/tag/DEShawResearch/sns-mp2.svg?maxAge=2592000; :target: https://github.com/DEShawResearch/sns-mp2. * Download the plugin from the GitHub repository:. .. code-block:: bash. >>> git clone https://github.com/DEShawResearch/sns-mp2. * Once dowloaded, the plugin can be installed as outlined in the documentation:. .. code-block:: bash. >>> cd {top-level-sns-mp2-directory}; >>> PSI4_PYTHON=$(head $(which psi4) -n 1 | sed -r 's/^.{2}//'); >>> $PSI4_PYTHON -m pip install . Sample Input; ~~~~~~~~~~~~. A sample input file, adapted from the documentation, is shown below::. # Sample SNS-MP2 calculation for two helium atoms. molecule dimer {; He 0 0 0; --; He 2 0 0; }. energy('sns-mp2'); ; Note that the two monomers are separated by double dashes, indicating that; they should be treated as separate molecules. (See ; :ref:`sec:tutorial_tu5` for more details on; setting up dimer molecules.) This input file can be run ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst:2626,install,installation,2626,doc/sphinxman/source/plugin_snsmp2.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugin_snsmp2.rst,1,['install'],['installation']
Deployability," also at least to the transformation program; (and in the case of MCSCF, to other programs as well). Thus,; orbital subspace keywords such as |detci__ras1|, |detci__ras2|, |detci__ras3|, |detci__ras4|,; |globals__frozen_docc|, |globals__frozen_uocc|, |detci__active|, *etc.*, need to be; in the global ``set {...}`` block section of the input file so they may; be accessed by other modules. The ability to perform state-averaged ; [Docken:1972:4928]_ [Ruedenberg:1979:1069]_; CASSCF or RASSCF computations has been added. This is accomplished using the ; |detci__avg_states| keyword. See the :srcsample:`casscf-sp` and :srcsample:`casscf-sa-sp` examples in the ; samples directory and the example below. Basic Keywords; --------------. WFN = string; This may be ``casscf`` or ``rasscf``. REFERENCE = string; Any of the references allowed by detci should work (*i.e.*, not; {\tt uhf}), but there should be no reason not to use {\tt rhf}. DERTYPE = string; At present, only energies ({\tt none}) are supported; future; releases will implement gradients ({\tt first}). CONVERGENCE = integer; Convergence desired on the orbital gradient. Convergence is achieved when; the RMS of the error in the orbital gradient is less than 10**(-n). The ; default is 4 for energy calculations and 7 for gradients. Note that; this is a different convergence criterion than for the \PSIdetci\; program itself. These can be differentiated, if changed by the user,; by placing the {\tt CONVERGENCE} keywords within separate sections of; input, such as {\tt detcas: ( convergence = x )}. ENERGY\_CONVERGENCE = integer; Convergence desired on the total MCSCF energy. The default is 7.; \item[RESTRICTED\_DOCC = (integer array)]\mbox{}\\; Should be in {\tt psi:()} or {\tt default:()} sections of input.; The number of lowest energy doubly occupied orbitals in each irreducible; representation from which there will be no excitations. ; These orbitals are optimized in the MCSCF.; The Cotton ordering of the irredicible repres",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst:4380,release,releases,4380,doc/sphinxman/source/attic/detcas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/detcas.rst,1,['release'],['releases']
Deployability," and Windows. The Linux package has base ``MAX_AM_ERI=7`` and can run 7z energies; and gradients conventional, 6z energies and gradients density-fitted,; and qz Hessians both conventional and density fitted. The Mac and Windows packages have base ``MAX_AM_ERI=5`` and can run; 5z energies, qz gradients, and tz Hessians, both conventional and; density-fitted. Details about angular momentum settings are available here; :source:`external/upstream/libint2/CMakeLists.txt`; . .. Since February 2019, the |PSIfour| conda package on Linux has been the; .. large AM8. Likewise, this is the package you get upon ::; ..; .. conda install libint -c psi4; ..; .. There is no need for the extra ``am8`` argument previously documented here.; ..; .. On Mac, the Libint conda package itself and the Libint compiled into; .. the |PSIfour| conda package remain AM6.; ..; .. Beware this issue: https://github.com/psi4/psi4/issues/1533. .. _`faq:setuphelp`:. How to see what build configuration options are available; ---------------------------------------------------------. CMake doesn't provide a summary for this (unless you want to try the CMake; GUI, which the developers have never looked at). However, the top half of; the main CMakeLists.txt is a passable summary:. .. literalinclude:: @SFNX_INCLUDE@CMakeLists.txt; :lines: 14-142; :language: none. Note that external projects will have their own sets of build; configuration options. Only the most-common user knobs of those are; mentioned above. .. .. _`faq:setupd`:; .. ###<a name=""setupd""></a> How to set CMake and Preprocessor options through the ``setup`` script; .. ; .. CMake can always be invoked directly to build Psi4 [](see active cmake). But more often you have a working ``setup`` configuration and just need to convey a couple CMake or Preprocessor variables.; .. ; .. * ###### Build with Hint Variable to CMake; .. ; .. ```; .. setup -DGSL_ROOT_DIR=$CONDA/envs/boostenv; .. ```; .. ; .. * ###### Relevant ``setup`` Options:; .. ; .. ```; .. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:19406,configurat,configuration,19406,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['configurat'],['configuration']
Deployability," and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you must resolve them manually. If new directories have been added to the repository, the update above; will automatically add the",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13904,update,update,13904,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,1,['update'],['update']
Deployability," and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main repository is more recent, your version of the code will be; updated. If you have made changes to your version, but the version in; the main repository has not changed, the altered code will be; identified to you with an ``M''. If you have made changes to your; version of the code, and one or more newer versions have been updated; in the main repository, SVN will examine the two versions and attempt; to merge them -- this process often reveals conflicts, however, and is; sometimes unsuccessful. You will be notified of any conflicts that; arise (labelled with a ``C'') and you",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13807,update,updated,13807,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,1,['update'],['updated']
Deployability," and unpack; your docs snapshot into it. - For releases, you'll need to make a new folder, e.g. ``sphinxman/1.8.x``.; - For postreleases, you'll overwrite the contents of the existing folder.; - Unpack and rearrange so that in the end, e.g., ``sphinxman/1.8.x/index.html`` is present. * Commit all your docs files and push to ``master``.; * For releases, add a line to the top-level table https://github.com/psi4/psi4docs/edit/master/README.md .; * For releases, add a new redirects block to https://github.com/psi4/psicode-hugo-website/edit/master/netlify.toml . * Details:. - If you sequentially push the tag commit, push the tag, push the record commit, GHA will build the docs at v1.{Y+1}.dev1, not at v1.Y .; - If you sequentially push the tag commit, then push the tag, GHA will build the docs at the tag commit, but the version will show up as ""undefined"".; - If you ``atomic`` push the tag commit and tag together and wait, GHA will build the docs at v1.Y, as desired. Publish GitHub release; ----------------------. * With an anticipated or newly minted tag, go to https://github.com/psi4/psi4/releases/new (or; ""Draft a new release"" button on GitHub site).; * Release title takes the form: ``v1.8, 2023-05-11``; * Fill in frontmatter style and links from previous GitHub release; * Fill in RN from hopefully existing RN issue.; * Fill in RN by going through the frontmatter from all PRs from this milestone, particularly the; ""User API & Changelog headlines"" section.; * Save the draft release until tag is finalized.; * ""publish"" release. This establishes the release date for the GitHub API.; * Close the RN issue.; * Close the milestone (should be 100% complete).; * Open a milestone for the release that's a year out. Publish GitHub postrelease; --------------------------. * With an anticipated or newly minted tag, go to https://github.com/psi4/psi4/releases/new (or; ""Draft a new release"" button on GitHub site).; * Release title takes the form: ``v1.8.2, 2023-10-03``; * Fill in fro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:35249,release,release,35249,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['release'],['release']
Deployability," any piece of code already in the most recent release, bug; fixes (defined as anything that doesn't add functionality ---; including documentation updates) should be made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3208,release,release,3208,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,1,['release'],['release']
Deployability," autodir_options_c/ddx__ddx_radii_scaling.rst; .. include:: autodir_options_c/ddx__ddx_radii_set.rst; .. include:: autodir_options_c/ddx__ddx_solvent_epsilon.rst; .. include:: autodir_options_c/ddx__ddx_solvent.rst; .. include:: autodir_options_c/ddx__ddx_solvent_kappa.rst. Numerical integration and discretisation parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters can be altered to balance the cost and accuracy; of the implict description of the solvation. |ddx__ddx_solute_radial_points| and |ddx__ddx_solute_spherical_points| influence; the accuracy of the numerical grid used to obtain the representation; of the electric potential / field of the solute density,; since a standard DFT integration grid is used to obtain these quantities.; In contrast to the integration of DFT quantities much lower accuracy; is required, such that for this step considerably smaller grids are employed.; If extremely high accuracy reference solutions are required, the DDX; DFT integration parameters might need to be increased, but this is rarely needed. |ddx__ddx_lmax| and |ddx__ddx_n_lebedev| determine the accuracy of the computations; on the boundary of the spheres around each atom performed by DDX. |ddx__ddx_lmax|; determines the largest angular momentum of the spherical harmonics basis used; to discretise quantities on the atomic spheres and |ddx__ddx_n_lebedev| determines the; number of points of the Lebedev angular grid used for integration on the spheres.; |ddx__ddx_n_lebedev| should be chosen higher than |ddx__ddx_solute_spherical_points|; and the defaults are usually good. .. include:: autodir_options_c/ddx__ddx_solute_radial_points.rst; .. include:: autodir_options_c/ddx__ddx_solute_spherical_points.rst; .. include:: autodir_options_c/ddx__ddx_lmax.rst; .. include:: autodir_options_c/ddx__ddx_n_lebedev.rst. Iterative solver parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters determine how the forward and adjoint linear systems; of the solvatio",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:9096,integrat,integration,9096,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['integrat'],['integration']
Deployability," autodir_options_c/globals__ddx.rst; .. include:: autodir_options_c/ddx__ddx_model.rst; .. include:: autodir_options_c/ddx__ddx_radii.rst; .. include:: autodir_options_c/ddx__ddx_radii_scaling.rst; .. include:: autodir_options_c/ddx__ddx_radii_set.rst; .. include:: autodir_options_c/ddx__ddx_solvent_epsilon.rst; .. include:: autodir_options_c/ddx__ddx_solvent.rst; .. include:: autodir_options_c/ddx__ddx_solvent_kappa.rst. Numerical integration and discretisation parameters; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. These parameters can be altered to balance the cost and accuracy; of the implict description of the solvation. |ddx__ddx_solute_radial_points| and |ddx__ddx_solute_spherical_points| influence; the accuracy of the numerical grid used to obtain the representation; of the electric potential / field of the solute density,; since a standard DFT integration grid is used to obtain these quantities.; In contrast to the integration of DFT quantities much lower accuracy; is required, such that for this step considerably smaller grids are employed.; If extremely high accuracy reference solutions are required, the DDX; DFT integration parameters might need to be increased, but this is rarely needed. |ddx__ddx_lmax| and |ddx__ddx_n_lebedev| determine the accuracy of the computations; on the boundary of the spheres around each atom performed by DDX. |ddx__ddx_lmax|; determines the largest angular momentum of the spherical harmonics basis used; to discretise quantities on the atomic spheres and |ddx__ddx_n_lebedev| determines the; number of points of the Lebedev angular grid used for integration on the spheres.; |ddx__ddx_n_lebedev| should be chosen higher than |ddx__ddx_solute_spherical_points|; and the defaults are usually good. .. include:: autodir_options_c/ddx__ddx_solute_radial_points.rst; .. include:: autodir_options_c/ddx__ddx_solute_spherical_points.rst; .. include:: autodir_options_c/ddx__ddx_lmax.rst; .. include:: autodir_options_c/ddx__ddx_n_lebede",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst:8892,integrat,integration,8892,doc/sphinxman/source/ddx.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/ddx.rst,1,['integrat'],['integration']
Deployability," be (``psi4``, ``psi4-rt``, ``psi4-dev``) * python_versions for Linux & Mac. Also single ``psi4-docs`` from Linux; .. * Run ``kitandkapoodle.py`` and allow stack to upload to anaconda.org to ``psi4/label/dev``. Poodle emits with ``--label dev`` so will go to the subchannel. May need to delete packages to clear out space on anaconda.org; .. * Copy ``meta.yaml`` and ``build.sh`` of at least ``psi4-multiout`` and ``psi4-rt`` to e.g., v121-build.sh files for easy reference or rebuilding as dependencies in master change. .. Publish to main conda label (pre-Spring 2023); .. ---------------------------------------------; ..; .. * Go through each active conda package off https://anaconda.org/psi4/repo; ..; .. - Find the most recent build set (Linux/Mac, active py versions) that ``psi4``/``psi4-rt``/``psi4-dev`` is using; .. - _add_ (not replace) the ``main`` label.; ..; .. * This makes a ``conda install psi4 -c psi4`` get everything psi4 needs. For the moment ``conda install psi4 -c psi4/label/dev`` will get the same set, until package psi4-1.4a1.dev1 gets uploaded. May help to check versions and build versions against ltrtver in ``conda_build_config.yaml``.; .. * This step is manual, so takes a while. (It gets checked when Psi4conda installers are built b/c that pulls from ""main"", not ""dev""). .. Build Psi4conda set (pre-Spring 2021); .. -------------------------------------; ..; .. Installers are build using the project ``constructor`` to build binary bash scripts, one per OS per Python version (e.g., 16 total for linux-64/osx-64/win-64/osx-arm64 and py38/39/310/311). In analogy to Miniconda, they're called Psi4Conda. They can be built anywhere (Mac can be built on Linux) and get served from vergil (cdsgroup webserver).; ..; .. * Need a conda env with ``constructor`` and ``cookiecutter``. This env presently accessed through ``conda activate cookie``.; .. * Enter ""constructor-cutter-unified"" in the psi4meta repo. There's a good README there, https://github.com/psi4/psi4meta/",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:21383,install,install,21383,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['install'],['install']
Deployability," block_matrix(n,n);; ; // Call the BLAS1 dot product between a and b; // n can be a ULI with the BLAS1 wrappers,; // All strides must be ints though; double dot = C_DDOT(n, a, 1, b, 1);; ; // Call the BLAS2 GEMV without transposition; // Note this works in row-major order; C_DGEMV('N', n, n, 1.0, A[0], n, a, 1, 0.0, b, 1);; ; // Call the BLAS3 GEMM without transposition; // Note this works in row-major order; C_DGEMM('N','N', n, n, n, 1.0, A[0], n, B[0], n, 0.0, C[0], n);; ; // Array's init'd with init_array must be free'd, not delete[]'d; free(a);; free(b);; ; // Block matrix should be free_blocked; free_block(A);; free_block(B);; free_block(C);. Important BLAS Routines; ^^^^^^^^^^^^^^^^^^^^^^^. * BLAS1. * DDOT: dot product; * DCOPY: efficient memory copy (with variable stride); * DAXPY: y = y + alpha*x; * DROT: Givens Rotation; * DNRM2: Vector norm square. * BLAS2. * DGEMV: General Matrix-Vector product; * DTRMV: Triangular Matrix-Vector product (2x faster, not wrapped yet); * DTRSM: Triangular Matrix-Vector solution via back substitution (just as fast as DTRMV); * DGER: Rank-1 update (not wrapped yet). * BLAS3. * DGEMM: General Matrix-Matrix product; * DTRMM: General Triangular Matrix-General Matrix product; * DTRSM: Triangular Matrix-General Matrix solution via back substitution (just as fast as DTRMM); * DSYMM/DSYMV calls are not appreciably faster than DGEMM calls, and should only be used in expert situations (like using the other half of the matrix for some form of other transformation).; * DTRMM/DTRMV calls are 2x faster than DGEMM, and should be used where possible. LAPACK Wrappers; ^^^^^^^^^^^^^^^. All standard LAPACK 3.2 double precision routines are provided. LAPACK commands remain in Fortran's ""column-major"" indexing, so all the; results will be transposed, and leading dimensions may have to be fiddled; with (using ``lda = n`` in both directions for square matrices is highly; recommended). An example of the former problem is a Cholesky; Decomposition: yo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst:4864,update,update,4864,doc/sphinxman/source/prog_blas.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_blas.rst,1,['update'],['update']
Deployability," build binary bash scripts, one per OS per Python version (e.g., 16 total for linux-64/osx-64/win-64/osx-arm64 and py38/39/310/311). In analogy to Miniconda, they're called Psi4Conda. They can be built anywhere (Mac can be built on Linux) and get served from vergil (cdsgroup webserver).; ..; .. * Need a conda env with ``constructor`` and ``cookiecutter``. This env presently accessed through ``conda activate cookie``.; .. * Enter ""constructor-cutter-unified"" in the psi4meta repo. There's a good README there, https://github.com/psi4/psi4meta/blob/master/conda-recipes/constructor-cutter-unified/README.md; .. * Edit ``cookiecutter/cookiecutter.json`` for control; ..; .. - Edit which python versions, if necessary; .. - Edit ``release`` field; .. - Edit ``hash`` field. This is the 7-char hash that's on every psi4 conda pkg as part of version; .. - Edit ``ltrtver`` field. This matches the current setting in ``conda_build_config.yaml``; .. - For prereleases, ``""channel_tag"": ""/label/dev""``, while for (post)releases, it should be the empty string; .. - Leave this file set to a ""rc"" with Git, as that has more details; ..; .. * For (post)releases (not prereleases), copy cookiecutter.json to cookiecutter.json-vXXX; .. * Edit ``cookiecutter/{{.../construct.yaml`` for templating. This is rarely needed; .. * If it's been a while or you need the space, clear out ``~/.conda/constructor``, where the downloaded packages are cached; .. * Note that installers get written to ``build/`` and this gets regenerated each time. Clear out between runs.; .. * ``python run.py``; .. * [Outdated] Watch out for ``py_`` in buildstring as this means a noarch package has been pulled. It must be eliminated. Constructors can't handle ""noarch"" packages and will fail at runtime. If see a ""noarch"" package, must find the recipe and rebuild for all OS & Python combinations. Then run constructor again.; .. * [Replacement] After adding a post_install to reposition the noarch packages, they are safe to include.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:22878,release,releases,22878,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['release'],['releases']
Deployability," by orbital eigenvalue, *i.e.*, by choosing the set; of new orbitals which looks most like some previously known ""good"" set. The; ""good"" set is typically the occupied orbitals from one of the oscillating; iterations with the lowest total energy. For an oscillating system where the; lowest total energy occurs on iterations :math:`N,N+2,\ldots`, invoking; |scf__mom_start| ``N`` can often rescue the convergence of the SCF. MOM can; be used in concert with DIIS, though care should be taken to not turn MOM on; until the oscillatory behavior begins.; Damping [Off by Default]; In some cases, a static mixing of Fock Matrices from adjacent; iterations can quench oscillations. This mixing, known as; ""damping"" can be activated by setting the; |scf__damping_percentage| keyword to a nonzero percent. Damping is; turned off when the DIIS error is smaller than; |scf__damping_convergence|.; Level shifting [Off by default]; A commonly used alternative to damping is to use level shifting,; which decreases the mixing of occupied and unoccupied orbitals in; the SCF update by moving the unoccupied orbitals up in energy. It; can be shown that the SCF procedure always converges with a; suitably large level shift; however, the larger the shift is, the; slower the convergence becomes, and the calculation may end up; converging onto a higher lying SCF solution. Because of this, in; practice level shifting is most useful in the initial phase of the; calculation to reduce the orbital error enough for DIIS to work; well. The level shift is controlled by the parameter; |scf__level_shift|, and it is turned off when the DIIS error is; smaller than |scf__level_shift_cutoff|. Reasonable values for; the shift and convergence threshold are 5.0 and 1e-2,; respectively.; SOSCF [Off by Default]; See :ref:`sec:soscf`. .. _`sec:scferi`:. ERI Algorithms; ~~~~~~~~~~~~~~. The key difficulty in the SCF procedure is treatment of the four-index ERI; contributions to the Fock Matrix. A number of algorithms are ava",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:27024,update,update,27024,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['update'],['update']
Deployability," check that the new year's plot appears at https://psicode.netlify.app/posts/downloads/ . Update copyright year; ---------------------. * ``cd ~/path/to/psi4``; * Primary target is licenses. - ``grep -rl ""(c) 2007-2017"" * | xargs sed -i '' ""s/(c) 2007-2017/(c) 2007-2018/g""``; - On Linux, drop the ``''`` in above command; - Need to do ``psi4/`` and ``docs/`` dirs. * Also, license in these files. - ``tests/runtest.py``; - ``README.md``. * Also, in content of :source:`doc/sphinxman/source/conf.py.in#L130`. Update counter scripts; ----------------------. * Log onto vergil as cdsgroup.; * Add new years, Python versions, and Psi4 versions as needed.; * check vergil /home/cdsgroup/psi4meta/download-analysis/installer: vi downloads_updater.py any new patterns to add?; * check vergil if changing any download patterns. Update samples; --------------. * Run ``make sphinxman`` at least once by hand; * Check in resulting ``psifiles.py`` and all the updated and new ``samples/`` files and dirs; * Make a lone PR and warn reviewers not to read it, since autogenerated. Collect new authors; -------------------. * Survey contributions to current Milestone. Add new contributors to the release notes GitHub issue.; * Figure out any new ""Additional Contributors"" authors since last release.; * Get permission of new authors and their particulars for ``codemeta.json``.; * Edit ``psi4/header.py`` accordingly and make PR. Run long tests; --------------. * Run the full test suite with threading parallelism on. There's one CC test that's a known fail; in parallel b/c it sets memory very low, iirc. - CTest (CLI)::. +++ b/tests/runtest.py; @@ -104,7 +104,7 @@ def backtick(exelist):. # run psi4 and collect testing status from any compare_* in input file; if os.path.isfile(infile):; - exelist = [psi, infile, outfile, '-l', psidatadir]; + exelist = [psi, infile, outfile, '-l', psidatadir, '-n2']; # On Windows set Python interpreter explicitly as the shebang is ignored; if sys.platform.startswith('win'",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:3879,update,updated,3879,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['update'],['updated']
Deployability," code copied integrals into a buffer owned by the integral object, whose; address remained constant and could be retrieved by the ``buffer()`` member; function. To avoid unnecessary copies, the new code instead uses the integrals; directly from the underlying integral engine's memory, which may change with; each call to compute integrals. The integral engine provides a; ``std::vector<const double*>`` containing the pointers to the start of each; ""chunk"" of integrals. For first derivatives there are 12 such ""chunks"", which; are ordered Px,Py,Pz,Qx,Qy,Qz,Rx,Ry,Rz,Sx,Sy,Sz, where the Px refers to the x; derivative with respect to the basis functions in shell P. Note that all; integral derivatives are provided by the new integral code, unlike the previous; version where only 9 of 12 were provided and the user was responsible for using; translation invariance relationships to fill in the rest. The addresses for; each chunk are updated in the vector after each call to compute integrals, so; the user should keep a const reference to that object, and query that for the; address of interest. Density Screening; ................. The old code looked only at the integral to determine whether terms can be; avoided *a priori*. However, if the integral is to be contracted with a; density or a density-like quantity, the screening can be performed on the; product, which yields more sparsity. To enable this, simply call the integral; object's ``update_density`` member, passing it a SharedMatrix holding the; current density (remember that it changes during each iteration of the SCF) and; the product will be considered during screening. If only coulomb-like terms; are to be computed, the ``needs_exchange`` argument to the integral object; constructor should be set to false, otherwise it should be true to correcly; account for products of the density and integrals that contribute to; exchange-like terms. Shell blocking; .............. Each underlying integral engine knows whether it wil",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:7151,update,updated,7151,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['update'],['updated']
Deployability," computation. This will; automatically set several additional user options to their appropriate; values. The program uses the Wigner (2n+1) rule to obtain higher-order; energies from lower-order wavefunctions. For the interested reader, the additional user options that are; automatically set up by the calls above are as follows. A call like; ``energy('mp10')`` sets |detci__mpn| to TRUE.; The program uses the Wigner (2n+1) rule by default; (|detci__mpn_wigner| = TRUE); and figures out what order of wavefunction is; necessary to reach the desired order in the energy. The program then; sets |detci__max_num_vecs| to the required order in the; wavefunction.; By default, the requested n-th order energy is saved as the current; energy to the process environment. ZAPTN works essentially the same; way for an ROHF reference. .. index:: ; pair: CI; arbitrary-order coupled-cluster theory. Arbitrary Order Coupled-Cluster Theory; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. *This DETCI-based version of this feature is not yet released. However,; the current version of the code does include an interface to*; :ref:`Kallay's MRCC <sec:mrcc>` *code.*. The DETCI module is also capable of computing arbitrary-order; coupled-cluster energies, using an approach similar to that of Hirata; and Bartlett [Hirata:2000:216]_, or of Olsen [Olsen:2000:7140]_.; Notably, the approach in DETCI also allows arbitrary-order ; *active space* coupled-cluster procedures. The general algorithm; for doing this in DETCI is inefficient compared to optimized; lower-order coupled-cluster codes and should not be used for CCSD,; where the CCENERGY module is much more efficient. For higher-order; CC (like CCSDT and beyond), the code is also not as efficient as the; MRCC code by K\ |a_acute|\ llay, to which |PSIfour| can interface (see Section; :ref:`sec:mrcc`); however, it may allow certain truncations of the model; space that might not be available presently in MRCC. For very small; systems, the code can be useful for ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst:14148,release,released,14148,doc/sphinxman/source/detci.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/detci.rst,1,['release'],['released']
Deployability," cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. As in the simultaneous algorithm, the DIIS; extrapolation is used to accelerate convergence. Two-step algorithm is; only available for the DC-06 and DC-12 methods. QC; In the quadratically-convergent algorithm, the; orbital and cumulant update equations are solved using the Newton-Raphson; method. Each macroiteration of the quadratically-convergent algorithm consists; of a single Newton-Raphson update followed by the orbital transformation; of the integrals. The solution of the Newton-Raphson equations is performed; iteratively using the preconditioned conjugate gradients method, where only the; product of the electronic Hessian with the step vector is computed for; efficiency. By default, the electronic Hessian is build for both the cumulant and orbital; updates and both updates are performed simultaneously. Setting the |dct__qc_type|; option to ``TWOSTEP`` will perform the Newton-Raphson update only for the orbitals,; while the equations for the cumulant will be solved using a standard Jacobi update.; If requested by the user (set |dct__qc_coupling| to TRUE), the electronic Hessian can include; matrix elements that couple the orbitals and the density cumulant.; The computation of these coupling elements increases; the cost of the macroiteration, but usually leads to faster convergence and is; recommended for open-shell systems.; It is important to note that the quadratically-convergent algorithm is not yet fully; optimized and often converges slowly when the RMS of the cumulant or; the orbital gradient is below :math:`10^{-7}`. The choice of the iterative algorithm can significantly affect the cost of the; energy computation. While the two-step algorithm requires a small number of; disk-intensive :math:`{\cal O}(N^5)` int",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:11279,update,updates,11279,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,2,['update'],['updates']
Deployability," current environment. .. code-block:: console. >>> conda remove psi4. * (G) Initially install |PSIfour| nightly build. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4/label/dev; >>> conda install psi4 --channel psi4/label/dev. * (H) Initially install |PSIfour| nightly build with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4/label/dev. * (I) Update to latest |PSIfour| nightly build. .. code-block:: console. >>> conda update psi4 -c psi4/label/dev. * (J) Initially install nightly build into a conda environment ""p4env"" instead of ""root"". This creates a sandbox with |PSIfour| and python (loaded as dependency). .. code-block:: console. >>> conda create -y -n p4env psi4 -c psi4/label/dev; >>> conda activate p4env. * (K) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4/label/dev. .. Troubleshooting; .. ^^^^^^^^^^^^^^^; ..; .. * If the target computer doesn't have libc >= 2.7 (released c.2007; for reference, 2.10 is newer than 2.7; unlike most libraries, libc generally not available in multiple versions on a computer), the |PSIfour| conda package won't work. ::; ..; .. # unsuitable computer; .. >>> ldd --version; .. ldd (GNU libc) 2.5; .. # suitable computer; .. >>> ldd --version; .. ldd (GNU libc) 2.17; ..; .. * It is of greatest importance that the |PSIfour| executable be linked against conda libpython.so *not* against any system libpython.so. This is arranged by setting ``RPATH`` to seek libraries relative to executable (thanks, conda binary relocation routine!). The conda |PSIfour| executable is not vulnerable to interference from your ``LD_LIBRARY_PATH`` settings. Below shows a well-linked executable.; ..; .. * no libraries ""not found""; .. * fundamental libraries like libc, ld-linux, pthreads found system libraries to link against; .. * libpython linked against conda python *not* system python; .. * libm is linked against conda *or* system; .. * blas, c++, ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:28005,release,released,28005,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['release'],['released']
Deployability," electron pair approximation variant 0 level of theory, (3,). .. psivar:: CEPA(0) QUADRUPOLE. Redundant quadrupole array [e a0^2] for the coupled electron pair approximation variant 0 level of theory, (3, 3). .. psivar:: CEPA(0) TOTAL ENERGY; CEPA(0) CORRELATION ENERGY; CEPA(1) TOTAL ENERGY; CEPA(1) CORRELATION ENERGY; CEPA(2) TOTAL ENERGY; CEPA(2) CORRELATION ENERGY; CEPA(3) TOTAL ENERGY; CEPA(3) CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested variant of coupled electron pair approximation level of theory. .. psivar:: CFOUR ERROR CODE. The non-zero return value from a Cfour execution. .. psivar:: CI DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory, (3,). .. psivar:: CI QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n -> ROOT m DIPOLE. Transition dipole array [e a0] between roots *n* and *m* for the requested configuration interaction level of theory, (3,). .. psivar:: CI ROOT n -> ROOT m QUADRUPOLE. Redundant transition quadrupole array [e a0^2] between roots *n* and *m* for the requested configuration interaction level of theory, (3, 3). .. psivar:: CI ROOT n DIPOLE. Dipole array [e a0] for the requested configuration interaction level of theory and root *n*, (3,). .. psivar:: CI ROOT n QUADRUPOLE. Redundant quadrupole array [e a0^2] for the requested configuration interaction level of theory and root *n*, (3, 3). .. psivar:: CI ROOT n TOTAL ENERGY; CI ROOT n CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for the requested configuration interaction level of theory and root; *n* (numbering starts at 0). .. psivar:: CI STATE-AVERAGED TOTAL ENERGY; CI STATE-AVERAGED CORRELATION ENERGY. The total electronic energy [E_h] and correlation energy component [E_h]; for state-averaged CI/CASSCF levels of theory. .. psivar:: CI TOTAL ENERGY",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst:24044,configurat,configuration,24044,doc/sphinxman/source/glossary_psivariables.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/glossary_psivariables.rst,1,['configurat'],['configuration']
Deployability," from hopefully existing RN issue.; * Fill in RN by going through the frontmatter from all PRs from this milestone, particularly the; ""User API & Changelog headlines"" section.; * Save the draft release until tag is finalized.; * ""publish"" release. This establishes the release date for the GitHub API.; * Close the RN issue.; * Close the milestone (should be 100% complete).; * Open a milestone for the release that's a year out. Publish GitHub postrelease; --------------------------. * With an anticipated or newly minted tag, go to https://github.com/psi4/psi4/releases/new (or; ""Draft a new release"" button on GitHub site).; * Release title takes the form: ``v1.8.2, 2023-10-03``; * Fill in frontmatter style and links from previous GitHub release.; * Fill in RN bullets for changes cherry-picked or edited to the maintenance branch.; * Save the draft release until tag is finalized.; * ""publish"" release. This establishes the release date for the GitHub API. Publish psicode.org release; ---------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Execute https://api.github.com/repos/psi4/psi4/releases/latest or; https://api.github.com/repos/psi4/psi4/releases/tags/v1.8.2 (substituting tag) and note the ``id``; field value.; * Copy and edit a new file akin to ``content/posts/v182.md``. Add it to the git index. - e.g., ``v1.8.2`` is used for Title and Release Notes.; - e.g., ``1.8.x`` is used for Documentation and Source.; - e.g., ``v182`` (edition string) is used for Image and Installers.; - Use the ``id`` value in the shortcode call at the bottom near ``ghRN``. * Add a new release page to the ``psi4_release_fireworks.key`` Keynote presentation. Run the slide; transition and screenshot the fireworks. Open the PNG file in Preview and save as JPEG while; downsampling to ~400kB. Place the file at e.g., ``static/images/portfolio/fireworks_slide_v182.jpg``.; Add it to the git index.; * Edit ``data/portfolio.yml`` to add a new bloc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:36543,release,release,36543,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['release'],['release']
Deployability," great\_code}; \item {\tt svn ci -m ``Put comments here.''}; \item {\tt cd \$PSI4}; \item Edit \file{configure.ac} and add \file{great\_code} to the list. ; \item {\tt svn ci configure.ac -m ``Put comments here.''}; \item {\tt autoconf} ; \item {\tt cd \$PSI4/src/bin} ; \item Edit \file{Makefile.in} and add \file{great\_code} to the list. ; \item {\tt svn ci Makefile.in -m ``Put comments here.''}; \end{enumerate}; At this point, all of the code has been properly checked in, but you; should also test to make sure that the code can be checked out by; other programmers, and that it will compile correctly. The following; steps will store your personal version of the code, check out the new; code, and test-compile it:; \begin{enumerate}; \item {\tt cd \$PSI4/src/bin}; \item {\tt mv great\_code great\_code.bak}; \item {\tt cd \$PSI4/..}; \item {\tt svn update}; \item {\tt cd \$objdir}; \item {\tt \$PSI4/configure -}{\tt -prefix=\$prefix}; \item {\tt cd src/bin/great\_code}; \item {\tt make install}; \end{enumerate}; (Note that \$prefix and \$objdir to the installation and compilation; directories defined in the \PSIfour\ installation instructions.); Your original version of the code remains under \file{great\_code.bak},; but should be no longer necessary if the above steps work. Note that it is; necessary to re-run \file{configure} explicitly, instead of just running; \file{config.status}, because the latter contains no information about; the new code. \subsection{Updating checked out code}. If the code in the main repository has been altered, other users' working; copies will of course not automatically be updated. In general, it is; only necessary to execute the following steps in order to completely update; your working copy of the code:. \begin{enumerate}; \item {\tt cd \$PSI4}; \item {\tt svn update}; \end{enumerate}. This will examine each entry in your working copy and compare it to; the most recent version in the main repository. When the file in the; main reposit",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:13037,update,update,13037,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,4,"['install', 'update']","['install', 'installation', 'update']"
Deployability," in frontmatter for this and future filenames; .. * Copy and edit new file akin to https://github.com/psi4/psicode-hugo-website/blob/master/data/installs/v13rc2.yaml for menu and notes content; .. * Enter ``scripts/`` dir and edit primarily https://github.com/psi4/psicode-hugo-website/blob/master/scripts/install-generator.py#L9 but also any other arrays or messages that should change.; .. * Run the ``install-generator.py`` in place. It will dump new files into ``data/installs/`` _subdirs_. Be sure to ``git add`` them.; .. * Installer page is now ready.; .. * Shift ""latest"" alias in frontmatter from whichever page is currently active to the new page. This makes sure ""Downloads"" on the navigation bar points to new page.; .. * Conscientiously, one should test; ..; .. - installer downloads in Mac and Linux. And actually installing them and ``psi4 --test`` them.; .. - that download button and ``curl`` downloading register on the download counters on vergil; ..; .. * Commit the new files, PR, and deploy psicode site; .. * Petition on Slack for testers. Generate download page for psicode.org; --------------------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Copy and edit a new file akin to ``content/installs/v182.md``. Add it to the git index. - Note the edition string ``v182`` in frontmatter for this and future filenames.; - Don't postdate the date string in frontmatter or it won't render.; - Ultimately, make sure the ``aliases:\n - /installs/latest/`` lines are *added* to this new file; and *removed* from the previous latest file, but this can wait until the installer page has been tested. * Copy and edit a new file akin to ``data/installs/v182.yaml``. Add it to the git index. - Glance through the menu and notes content to make sure they're up-to-date. This file determines; the structure of the install page.; - Add or remove python versions and architectures if necessary.; - Every couple years, update the default p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:28774,deploy,deploy,28774,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['deploy'],['deploy']
Deployability," job.in``), https://psicode.org/psi4manual/master/psiapi.html for PsiAPI (``python job.py``). * **Forum** http://forum.psicode.org. * **Communication & Support** https://psicode.org/psi4manual/master/introduction.html#technical-support. * **GitHub** https://github.com/psi4/psi4 (authoritative repository). * **Continuous Integration Status** [![Azure DevOps builds](https://img.shields.io/azure-devops/build/psi4/e80489d7-9619-4512-8e7b-255e355b3ab8/1/master.svg?logo=azure%20devops)](https://dev.azure.com/psi4/psi4/_build?definitionId=1) on Linux and Windows. * **Anaconda** https://anaconda.org/psi4 (binary available for Linux, Mac, Mac Silicon, Windows, and WSL Windows [![Binstar Badge](https://anaconda.org/psi4/psi4/badges/downloads.svg)](https://anaconda.org/psi4/psi4) ) [![Binstar Badge](https://anaconda.org/conda-forge/psi4/badges/downloads.svg)](https://anaconda.org/conda-forge/psi4) ) [instructions](https://psicode.org/psi4manual/master/conda.html#how-to-install-a-psi4-binary-with-the-psi4conda-installer-download-site). * **Coverage** Python and C++ source code lines hit by running most of the test suite. [![codecov](https://img.shields.io/codecov/c/github/psi4/psi4.svg?logo=Codecov&logoColor=white)](https://codecov.io/gh/psi4/psi4). * **Interested Developers** https://psicode.org/developers.php (replacement page needed) (welcome to fork psi4/psi4 and follow [GitHub contribution procedure](https://psicode.org/psi4manual/master/build_obtaining.html#faq-githubworkflow)) [![PRs welcome](https://img.shields.io/badge/PRs-welcome-yellow.svg)](http://makeapullrequest.com). * **Sample Inputs** http://www.psicode.org/psi4manual/master/testsuite.html (also in [`samples/`](samples)). * **Download Tarball** https://github.com/psi4/psi4/releases . <!--* **Build Dashboard** https://testboard.org/cdash/index.php?project=Psi. * **YouTube Channel** https://www.youtube.com/psitutorials-->. License [![license](https://img.shields.io/github/license/psi4/psi4.svg)](https://opensourc",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:5573,install,install-a-,5573,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,2,['install'],"['install-a-', 'installer-download-site']"
Deployability," made {\em only} on the; most recent stable release branch.; \item The main trunk is reserved for development of new functionality.; This allows us to keep new, possibly unstable code away from public; access until the code is ready.; \item Code that you do not want to put into next major release of; \PSIfour\ should be put onto a separate branch off the main; trunk. You will be solely responsible for maintenance of the new; branch, so you should read the SVN manual before attempting this.; \end{enumerate}. \noindent Fig.~\ref{Fig:svn} provides a schematic of the SVN revision-control; structure and branch labeling. Two release branches are shown, the current; stable branch, named {\tt psi-3-4}, and a planned future release, to be named; {\tt psi-3-5}. The tags on the branches indicate release shapshots, where; bugs have been fixed and the code has been or will be exported for public; distribution. The dotted lines in the figure indicate merge points: just; prior to each public release, changes made to the code on the stable release; branch will be merged into the main trunk. \begin{figure}[h]; \begin{center}; \epsfig{file=svn/svn.eps,height=6.5cm}; \end{center}; \caption{\PSIfour\ SVN branch structure with examples of branch- and; release-tag labelling.}; \label{Fig:svn}; \end{figure}. \noindent A frequently encountered problem is what to do about bug fixes; that are necessary for uninterrupted code development of the code on the; main trunk. As Rule 1 of the above policy states, all bug fixes of the code; already in the recent stable release must go on the corresponding branch,; not on the main trunk. The next step depends on the severity of the bug:; \begin{enumerate}; \item If the bug fix is critical and potentially affects every; developer of the code on the main trunk, then \PSIfour\; administrators should be notified of the fix. If deemed necessary,; appropriate steps to create a new patch release will be made. Once; the next patch release is created then the b",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst:3404,release,release,3404,doc/sphinxman/source/attic/proggit.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/attic/proggit.rst,2,['release'],['release']
Deployability," open-source quantum chemistry software package; .. #; .. # Copyright (c) 2007-2023 The Psi4 Developers.; .. #; .. # The copyrights for code used from other parties are included in; .. # the corresponding files.; .. #; .. # This file is part of Psi4.; .. #; .. # Psi4 is free software; you can redistribute it and/or modify; .. # it under the terms of the GNU Lesser General Public License as published by; .. # the Free Software Foundation, version 3.; .. #; .. # Psi4 is distributed in the hope that it will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. index:: prerequisites, compiling, installing; .. _`sec:installFile`:. ====================================; Compiling and Installing from Source; ====================================. .. warning:: As of v1.8, primary binary distribution has moved from; the psi4 channel to the conda-forge channel. Neither install docs; for users nor compile docs for developers have been updated yet to; reflect new patterns. Please consult :source:`conda/psi4-path-advisor.py`; (extensive help menu at ``conda/psi4-path-advisor.py -h``); or :psicode:`psicode downloads; page <installs/latest/>` for the latest guides. This section fulfills the duty of every Linux project to have an INSTALL; file detailing how to build it from source. Few (mostly packagers and; sysadmins) are expected to read this file as it is a broad guide to the; many choices in building this project. For a specific, well-tested,; and performance-tuned build path, see :psicode:`installs/latest`; (select ""source""). For pre-built binaries again well-tested,; perfo",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:1057,install,installing,1057,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['install'],['installing']
Deployability," osx-64,; osx-arm64 and pythons are 38, 39, 310, 311. In analogy to Miniconda, they're called Psi4Conda. They; are built through GHA on the https://github.com/psi4/psi4meta repository and get served from vergil; (the cdsgroup webserver). * If the previous release hasn't had a snapshot saved, copy ``construct.yaml`` into a version-labeled; file and check it in.; * Edit recipe https://github.com/psi4/psi4meta/blob/master/installers/construct.yaml. - Edit the top matter for Configuration, mainly the ``release`` field. See snapshots in directory for examples.; - Edit the packages and channels info if necessary. Probably long-term stable. * Edit the GHA control file https://github.com/psi4/psi4meta/blob/master/.github/workflows/Installers.yml; ``matrix.cfg`` list if Python versions or target architectures have changed.; * All conda packages must already have been built and present in the right channels on; https://anaconda.org/conda-forge/psi4/files .; * Commit ``construct.yaml`` to trigger installer builds. (Even workflow edits need a dummy commit to; ``construct.yaml`` to retrigger.); * When all build successfully, hover over the artifacts, and note the smallest and largest of the; near-consecutive numbers GH has assigned them. These artifacts only linger for a day.; * Log in to vergil root and cd to ``/var/www/html/psicode-download``.; * Use the pull_gha_installers.sh script to download the installers from GH to vergil. First two; arguments are first and last of the artifact numbers, and third argument is an auth token.; ``bash pull_gha_installers.sh 47226565 47226573 715...4f3``.; * Make WindowsWSL and any other symlinks the script frontmatter advises. Build Docker images; -------------------. Docker images are built through GHA on the https://github.com/psi4/psi4meta repository from a Conda; environment specification and get served from DockerHub, https://hub.docker.com/r/psi4/psi4/tags . * Edit specification https://github.com/psi4/psi4meta/blob/master/docker/enviro",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:25978,install,installer,25978,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['install'],['installer']
Deployability," overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration. # <<< Compilers and flags >>>; #; # - CMAKE_C_COMPILER ""C compiler""; # - CMAKE_C_FLAGS ""Additional C flags""; # - CMAKE_CXX_COMPILER ""C++ compiler""; # - CMAKE_CXX_FLAGS ""Additional C++ flags""; # - CMAKE_Fortran_COMPILER ""Fortran compiler (required for some add-ons)""; # - CMAKE_Fortran_FLAGS ""Additional Fortran flags"". # <<< Detecting dependencies and add-ons >>>; #; # - Python_EXECUTABLE ""Python interpreter to use (e.g., /path/to/bin/python3.7)""; # - Python_LIBRARY ""Python library that goes with the interpreter (e.g., /path/to/lib/python3.7.so)""; # - Py",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:2184,install,install,2184,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['install'],['install']
Deployability," package is being slowly retired; due to more optional dependencies being on conda-forge. Similar collections; of dependencies can be obtained from environment spec files like :source:`devtools/conda-envs` . * Grab a Miniconda through one of the below, selecting OS. >>> curl -O ""https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Linux-x86_64.sh""; >>> curl -O ""https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-MacOSX-x86_64.sh""; >>> curl -O ""https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Windows-x86_64.exe"". .. _`faq:updatepsi4`:. How to update a Psi4 binary; ^^^^^^^^^^^^^^^^^^^^^^^^^^^. A. Conda command to update an existing |PSIfour| conda installation to the; newest stable release (roughly annually). It's often a better idea to create; a new environment rather than updating the old one. .. code-block:: bash. >>> # Linux/MacOS; >>> conda update psi4 -c psi4; >>> # Windows; >>> conda update psi4 -c psi4 -c conda-forge. # if psi4 channel in defaults (true for Psi4conda installers); >>> conda update psi4. B. Conda command to update an existing |PSIfour| conda installation to the; latest development head (roughly nightly). .. code-block:: bash. >>> # Linux/MacOS; >>> conda update psi4 -c psi4/label/dev; >>> # Windows; >>> conda update psi4 -c psi4/label/dev -c conda-forge. C. Conda command to install a very specific package, including version,; build string, and subchannel. The final `-c psi4` represents any; additional channels or subchannels needed to locate all dependencies. .. code-block:: bash. >>> conda install psi4=1.2a1.dev249+623ad64=py36_sse41_0 -c psi4/label/subchannel -c psi4. .. _`faq:psi4deps`:. How to use conda to compile Psi4 faster and easier; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. code-block:: console. # Linux # c. v1.2rc1 ###or Mac or Windows; # substitute x.x by 3.5|3.6|3.7 for alternate python versions; >>> conda create -n p4dev python=x.x psi4-dev -c psi4/label/dev -c psi4; >>> conda activate p4dev. >>> cd ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:9297,install,installers,9297,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,2,"['install', 'update']","['installers', 'update']"
Deployability," possible that; from :samp:`{top-level-psi4-dir}` source directory, you can call :samp:`cmake -S.; -B{objdir}` without any further arguments, and it will invoke ``cmake``,; detect some appropriate defaults, configure the build, create a build; directory :samp:`{objdir}`, and complete, leaving you to only invoke; ``make`` or Ninja in the new build directory. Should this happy scenario not come to pass, or if the default build; options are not to your taste, use the links within :ref:`core; dependencies <faq:coredepend>` and :ref:`add-on dependencies; <faq:addondepend>` to plan a set of arguments to ``cmake`` tailored to; your computer. Proceed to :ref:`quick build <faq:buildquick>` or; :ref:`detailed build <faq:builddetailed>`. .. The following topics may also be helpful. .. * :ref:`faq:setuphelp`; .. * :ref:`faq:chooseobjdir`; .. * :ref:`faq:setupprefix`; .. * :ref:`faq:setuptype`; .. * :ref:`faq:setupmaxameri`. .. _`faq:buildquick`:. How to build and install Psi4, the compact version; --------------------------------------------------. This section outlines the main steps of configuring, compiling, and; installing |PSIfour|. More detail is given :ref:`here; <faq:builddetailed>`. .. code-block:: console. >>> cd {top-level-psi4-dir}; >>> cmake -S. -Bobjdir [your configuration options]; # make; >>> cd objdir; >>> make -j`getconf _NPROCESSORS_ONLN`; >>> make install; # -or- general; >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. .. _`faq:builddetailed`:. How to build, test, and install Psi4, in detail; -----------------------------------------------. **1. Plan Directories**. Get ahold of the |PSIfour| codebase, and navigate to the top level source; directory, hereafter :samp:`{top-level-psi4-dir}`. * :ref:`faq:obtainpsi4`. ::. >>> cd {top-level-psi4-dir}. Choose a compilation directory, hereafter :samp:`{objdir}`. * :ref:`faq:chooseobjdir`. Choose an installation directory, hereafter :samp:`{prefix}`. * :ref:`faq:setupprefix`. **2. Plan Config",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:3635,install,install,3635,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['install'],['install']
Deployability," printed to screen during installation (see last codeblock in step 6). Useful Commands; ^^^^^^^^^^^^^^^. * (A) Initially install |PSIfour| stable release. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4; >>> conda install psi4 --channel psi4. * (B) Initially install |PSIfour| stable release with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4. * (C) Update to latest |PSIfour| stable release. .. code-block:: console. >>> conda update psi4 -c psi4. * (D) Initially install stable release into a conda environment ""p4env"" instead of ""root"". This creates a sandbox with |PSIfour| and python (loaded as dependency). .. code-block:: console. >>> conda create -y -n p4env psi4 -c psi4; >>> conda activate p4env. * (E) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4. * (F) Uninstall |PSIfour| from current environment. .. code-block:: console. >>> conda remove psi4. * (G) Initially install |PSIfour| nightly build. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4/label/dev; >>> conda install psi4 --channel psi4/label/dev. * (H) Initially install |PSIfour| nightly build with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4/label/dev. * (I) Update to latest |PSIfour| nightly build. .. code-block:: console. >>> conda update psi4 -c psi4/label/dev. * (J) Initially install nightly build into a conda environment ""p4env"" instead of ""root"". This creates a sandbox with |PSIfour| and python (loaded as dependency). .. code-block:: console. >>> conda create -y -n p4env psi4 -c psi4/label/dev; >>> conda activate p4env. * (K) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4/label/dev. .. Troubleshooting; .. ^^^^^^^^^^^^^^^; ..; .. * If the target computer doesn't have libc >= 2.7 (released c.2007; for reference, 2.10 is newer than 2.7; unlike most libraries, libc generally not ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:27095,install,install,27095,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['install'],['install']
Deployability," received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: Libint, integrals. .. _`sec:libint`:. Interface to Libint by E. Valeev; ================================. .. codeauthor:: Edward F. Valeev and Justin T. Fermann; .. sectionauthor:: Lori A. Burns. .. *Module:* :ref:`Keywords <apdx:efp>`, :ref:`PSI Variables <apdx:efp_psivar>`, :source:`LIBEFP <src/lib/libefp_solver>`. .. image:: https://img.shields.io/badge/home-libint-5077AB.svg; :target: https://github.com/evaleev/libint. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://evaleev.github.io/libint/. |PSIfour|, particularly libmints utterly relies upon the Libint library; developed by E. Valeev from early roots by J. Fermann. Libint requires no; additional licence, downloads, or configuration. Conversely, |Psifour|; cannot build *without* Libint. .. note:: As of Nov 2020 or release v1.4, |PSIfour| uses Libint2, not Libint1.; Compared to many other open-source QC codes, |PSIfour| requires a separate; Libint compilation with a different integrals ordering. See notes at top of; :source:`external/upstream/libint2/CMakeLists.txt` . Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/libint2/badges/version.svg; :target: https://anaconda.org/psi4/libint2. * Libint is available as a conda package for Linux and macOS and Windows. * If using the |PSIfour| binary, Libint has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; Libint can be obtained through ``conda install libint2 -c psi4``.; Then, hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect Libint and activate depende",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libint.rst:1809,configurat,configuration,1809,doc/sphinxman/source/libint.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/libint.rst,1,['configurat'],['configuration']
Deployability," rerender`` for the; matrix slimming to take effect.; - Possibly: remove any old patches that are now in the main codebase.; - Possibly: add in or remove any dependency or ecosystem packages.; - Possibly: for any relevant addition, make sure ``-D CMAKE_INSIST_FIND_PACKAGE_<project>=ON`` or; ``-D ENABLE_<project>=ON`` is set in ``build.sh`` and ``bld.bat``.; - Possibly: add or release version constraints or architecture constraints (e.g., ``[not win]``) on packages. * Submit the PR and rerender (cmd above). Monitor the CI.; * When all CI lanes are passing *and* the tag is final on the maintenance branch, rerender (may be; no-op) and merge the PR.; * After all the packages are built on main and show up at https://anaconda.org/conda-forge/psi4/files; with a couple downloads, this means they're been mirrored and are generally installable. Announce; on slack general channel. Do final pass before release tag; --------------------------------. * Check that :source:`external/` repos and commits have been updated to match conda recipes sources. Also check versions with ``conda_build_config.yaml``; * Check :source:`doc/sphinxman/source/introduction.rst` for any compiler and Python minimum requirements to edit. Tag (pre)release; ----------------. * Thorough version bump directions at master http://psicode.org/psi4manual/master/manage_git.html#how-to-bump-a-version; * Below is tl;dr. ::. # be on clean master up-to-date with upstream in both commits and tags; # * mind which version strings get ""v"" and which don't; # * if not fork, replace ""upstream"" with ""origin"". >>> vi psi4/metadata.py; >>> git diff; diff --git a/psi4/metadata.py b/psi4/metadata.py; ...; -__version__ = '1.3rc1'; -__version_long = '1.3rc1+5a7522a'; -__version_upcoming_annotated_v_tag = '1.3rc2'; +__version__ = '1.3rc2'; +__version_long = '1.3rc2+zzzzzzz'; +__version_upcoming_annotated_v_tag = '1.3rc3'. >>> git add psi4/metadata.py; >>> git commit -m ""v1.3rc2""; [master bc8d7f5] v1.3rc2. >>> git log --oneline | he",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:13373,update,updated,13373,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['update'],['updated']
Deployability," scaling the uncoupled term for; :math:`E_{exch-ind,resp}^{(30)}`. S^inf Keywords; ~~~~~~~~~~~~~~. .. include:: autodir_options_c/sapt__do_ind_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_disp_exch_sinf.rst; .. include:: autodir_options_c/sapt__do_ind30_exch_sinf.rst. .. _`sec:saptd`:. SAPT0-D; ~~~~~~~. In SAPT0, the computation of :math:`E_{disp}^{(20)} + E_{exch-disp}^{(20)}` represents; the computational bottleneck. One can avoid this bottleneck by replacing these; dispersion terms with the empirical D3 corrections developed by Grimme.; ; :ref:`Grimme's dispersion corrections are discussed here. <sec:dftd3>`. The corresponding method, termed SAPT0-D, thus relies on empirically fit parameters; specific to SAPT0/jun-cc-pVDZ. While SAPT0-D can be used with any of the -D ; variants using default parameters optimized for Hartee--Fock interaction energies, ; we recommend using the refit parameters with Becke-Johnson damping, as described in; [Schriber:2021:234107]_. Again, use of SAPT0-D with a basis set other than; jun-cc-pVDZ is not tested and not guaranteed to give meaningful results without; refitting the dispersion parameters. ; A simple water dimer computation using SAPT0-D may look like::. 	molecule water_dimer {; 	 0 1; 	 O -1.551007 -0.114520 0.000000; 	 H -1.934259 0.762503 0.000000; 	 H -0.599677 0.040712 0.000000; 	 --; 	 0 1; 	 O 1.350625 0.111469 0.000000; 	 H 1.680398 -0.373741 -0.758561; 	 H 1.680398 -0.373741 0.758561; 	; 	 units angstrom; 	 no_reorient; 	 symmetry c1; 	}; 	; 	set basis jun-cc-pvdz. 	energy('sapt0-d3mbj') # runs the recommended dispersion correction; energy('sapt0-d3') # tests an alternative damping scheme/parameterization. Given the naturally pairwise-atomic nature of these empirical dispersion corrections,; integration with existing FSAPT functionality is also available simply by calling; ``energy(""fsapt0-d3mbj"")``. See :ref:`FSAPT <sec:fisapt>` documentation for more details on using FSAPT; for functional group analyses.; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst:47301,integrat,integration,47301,doc/sphinxman/source/sapt.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/sapt.rst,1,['integrat'],['integration']
Deployability," see; .. :ref:`Available Plugins <sec:availablePlugins>`.; .. ; .. * :source:`plugins/aointegrals/aointegrals.cc` ; .. An example that uses the LibMints library to generate and print AO basis (no symmetry) integrals.; .. ; .. * :source:`plugins/backtrans/backtrans.cc` ; .. A test of the one- and two-particle density matrix backtransformation code.; .. ; .. * :source:`plugins/mointegrals/mointegrals.cc` ; .. An example that uses the LibTrans library to generate and print MO basis integrals.; .. ; .. * :source:`plugins/mollerplesset2/mp2.cc` ; .. A plugin that uses LibTrans to generate open- and closed-shell MP2 energies.; .. ; .. * :source:`plugins/sointegrals/sointegrals.cc` ; .. An example that uses the LibMints library to generate and print SO basis (with symmetry) integrals. .. _`sec:condaplugins`:. Creating a New Plugin Using a Conda Pre-compiled Binary; -------------------------------------------------------. .. # prepare; .. >>> bash; .. >>> export PATH=$PSI4CONDA/bin:$PATH # usually already done from psi4 installation; .. >>> cd ""$(dirname $(which psi4))""/.. # move into distribution/environment directory, $PSI4CONDA; .. >>> conda install gcc # install compilers into expected place. |PSIfour| plugins can also be created using Conda for both |PSIfour|; binary and development environment. On Linux (or Ubuntu shell on Windows), one can use the ``gcc``; compiler installed alongside ``psi4`` itself in the Conda distribution; or environment (below, ``$PSI4CONDA``). On Mac, one must use; ``libc++.so`` (*not* ``libstdc++.so``), and this can be accomplished by; installing XCode from the App Store that provides ``clang`` and; ``clang++`` compilers. * Check environment:. .. code-block:: bash. # yes, the following returns a blank line. yes, LD_LIBRARY_PATH irrelevant; >>> echo $PYTHONHOME $PYTHONPATH $DYLD_LIBRARY_PATH $PSIDATADIR. >>> which python psi4 g++ gfortran # Linux; $PSI4CONDA/bin/python; $PSI4CONDA/bin/psi4; $PSI4CONDA/bin/gcc++; $PSI4CONDA/bin/gfortran; >>> whi",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst:4556,install,installation,4556,doc/sphinxman/source/plugins.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/plugins.rst,1,['install'],['installation']
Deployability," session. You can keep or undo these changes. For general psi4 use, you must enable the ``psi4`` executable to be found through any of:. #. prepending to :envvar:`PATH` in shell, ``~/.bashrc``, ``~/.tcshrc``, or PBS ``cmd`` file; #. activating the conda environment (p4env above) in shell, ``~/.bashrc``, or PBS ``cmd`` file; #. supplying full path to executable (shell or PBS ``cmd`` file). Similarly, the scratch directory (see :ref:`sec:Scratch`) must be specified through:. #. defining :envvar:`PSI_SCRATCH` in shell, ``~/.bashrc``, ``~/.tcshrc``, or PBS ``cmd`` file. .. Suitable values for these variables have been printed to screen during installation (see last codeblock in step 6). Useful Commands; ^^^^^^^^^^^^^^^. * (A) Initially install |PSIfour| stable release. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4; >>> conda install psi4 --channel psi4. * (B) Initially install |PSIfour| stable release with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4. * (C) Update to latest |PSIfour| stable release. .. code-block:: console. >>> conda update psi4 -c psi4. * (D) Initially install stable release into a conda environment ""p4env"" instead of ""root"". This creates a sandbox with |PSIfour| and python (loaded as dependency). .. code-block:: console. >>> conda create -y -n p4env psi4 -c psi4; >>> conda activate p4env. * (E) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4. * (F) Uninstall |PSIfour| from current environment. .. code-block:: console. >>> conda remove psi4. * (G) Initially install |PSIfour| nightly build. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4/label/dev; >>> conda install psi4 --channel psi4/label/dev. * (H) Initially install |PSIfour| nightly build with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4/label/dev. * (I) Update to latest |PSIfour| nightly build. .. code-block:: console. ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:26476,install,install,26476,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['install'],['install']
Deployability," set_up():; psi4.core.clean(); psi4.core.clean_timers(); psi4.core.clean_options(); + psi4.set_num_threads(2); psi4.set_output_file(""pytest_output.dat"", True). - Pytest (CLI)::. +++ b/tests/pytests/addons.py; @@ -223,8 +223,8 @@ def ctest_runner(inputdatloc, *, extra_infiles: List = None, outfiles: List = No; if Path(psi4.executable).suffix == "".exe"":; command = [psi4.executable, inputdat]; else:; - command = [sys.executable, psi4.executable, inputdat]; - _, output = execute(command, infiles_with_contents, outfiles, environment=env, scratch_messy=False); + command = [sys.executable, psi4.executable, inputdat, ""-n2""]; + _, output = execute(command, infiles_with_contents, outfiles, environment=env, scratch_messy=True). success = output[""proc""].poll() == 0; assert success, output[""stdout""] + output[""stderr""]. * Run a full stdsuite tests to generate new capabilities tables for docs. Detailed instructions are; in :source:`psi4/share/psi4/scripts/merge_stdsuite.py` . Anticipate next release; -----------------------. * Bump version in ``codemeta.json``, :source:`codemeta.json#L9`; * Add to branch list in ``azure-pipelines.yml``, :source:`azure-pipelines.yml`. Build Conda ecosystem stack; ---------------------------. * By ""ecosystem stack"", we mean packages that are upstream, downstream, required, and optional for; a fully featured Psi4 build and which we have some role in packaging.; * These packages (e.g., ``libint``, ``gdma``) should already be updated and built on conda-forge.; Survey them to check version tick and other key PRs have been merged.; * Changes to targets' ""source"" and ""version"" in individual recipes should be edited in psi4; ``external/*/*/CMakeLists.txt`` files; * Edit any added or dropped dependencies in main :source:`CMakeLists.txt` and docs; :source:`doc/sphinxman/source/build_planning.rst` . .. Build Conda ecosystem stack (pre-Spring 2023); .. ---------------------------------------------; ..; .. By ""ecosystem stack"", mean packages that are upstream, ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:6317,release,release,6317,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['release'],['release']
Deployability," shift ""latest"" alias in frontmatter from whichever page is; currently active to the new page, ``content/installs/{edition}.md``. This makes sure ""Downloads""; on the navigation bar points to the new page. * Commit the new files, PR, and deploy psicode site. .. Collect documentation snapshot (pre-Fall 2023); .. ----------------------------------------------; ..; .. * Documentation is built automatically by GHA from the latest psi4 master commit. It gets pushed to the psi4/psi4docs repository and thence served by netlify to a site independent of psicode.org. The netlify psicode.org site has a redirect so that psicode.org/psi4manual/master presents the psi4docs netlify content.; .. * GHA controller is :source:`.github/workflows/docs.yml`; .. * This setup works great for ""latest"" docs, but it won't build a nice copy on the tag because the tag commit is pushed before the tag itself, so the version shows up ""undefined"".; .. * So, anytime after ""Tag (pre)release"" is over, navigate on psi4 GH to the tag commit (not the record commit) and retrigger the docs GHA. Download the artifact (zipped docs dir) at the end to a local computer.; .. * In your hugo site clone, create a new directory under ``static/psi4manual``. Copy the zipped docs there, unpack, rearrange so that ``static/psi4manual/<new-tag>/index.html`` is present. Check in. Collect documentation snapshot; ------------------------------. * Documentation is built automatically by GHA from the latest psi4 master commit. It gets pushed to; a special ""master"" folder on the https://github.com/psi4/psi4docs repository. From there, it and; other docs snapshots are built and served to https://psi4.github.io/psi4docs/master/ (independent; of psicode.org). The netlify psicode.org site has a redirect so that; https://psicode.org/psi4manual/master/index.html presents the psi4docs repo content. - GHA sphinx-build controller is :source:`.github/workflows/docs.yml`; - GHA gh-pages deploy controller is https://github.com/psi4/psi4docs",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:32001,release,release,32001,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['release'],['release']
Deployability," the; proper GPU drivers installed. Please refer to the `BrianQC manual <https://www.brianqc.com/download/>`_; for a full list of prerequisites. When installing BrianQC, choose the SDK installation by setting the; :envvar:`BRIANQC_SDK_INSTALL` envoronment variable to `1`. Building BrianQC's user-built components; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. After the installation, build BrianQC's example and sample programs,; which also creates the wrapper library and CMake configuration files; required to build |PSIfour| with BrianQC. 1. Create a build directory to keep the source tree clean. .. code-block:: bash. cd <brianqc_install_path>; mkdir build; cd build. 2. Configure project and generate makefiles with CMake.; You will require `Eigen <http://eigen.tuxfamily.org>`_ (tested with version 3.1.2); and `boost <https://www.boost.org/>`_ (tested with version 1.62). .. code-block:: bash. cmake .. 3. Build the examples and samples. .. code-block:: bash. make. 4. Test the installation by starting a small calculation.; Make sure to set the :envvar:`BRIANQC_INSTALL_PATH` environment variable to `<brianqc_install_path>`!. .. code-block:: bash. export BRIANQC_INSTALL_PATH=<brianqc_install_path>; bin/sample_hf_and_dft --molecule ../share/qc_molecules/cis-decalin.raw --basis ../share/basis_sets/cc-pvdz. Building |PSIfour| with BrianQC; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~. When CMake-ing |PSIfour|, set the :makevar:`ENABLE_BrianQC` CMake variable to `1`; and set the :makevar:`BrianQC_DIR` CMake variable to the path where BrianQC's; components have been built (usually `<brianqc_install_path>/build`), then build |PSIfour| normally. Using BrianQC from |PSIfour|; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~. To use BrianQC, the :envvar:`BRIANQC_INSTALL_PATH` environment variable; must be set to the full path of your BrianQC installation. There are two ways to enable BrianQC for a specific calculation:. * setting the |globals__brianqc_enable| input option to `True`;. * setting the :envvar:`BRIANQC_ENAB",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst:2795,install,installation,2795,doc/sphinxman/source/brianqc.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/brianqc.rst,1,['install'],['installation']
Deployability," them.; .. - that download button and ``curl`` downloading register on the download counters on vergil; ..; .. * Commit the new files, PR, and deploy psicode site; .. * Petition on Slack for testers. Generate download page for psicode.org; --------------------------------------. * Be in local clone of repository https://github.com/psi4/psicode-hugo-website .; * Copy and edit a new file akin to ``content/installs/v182.md``. Add it to the git index. - Note the edition string ``v182`` in frontmatter for this and future filenames.; - Don't postdate the date string in frontmatter or it won't render.; - Ultimately, make sure the ``aliases:\n - /installs/latest/`` lines are *added* to this new file; and *removed* from the previous latest file, but this can wait until the installer page has been tested. * Copy and edit a new file akin to ``data/installs/v182.yaml``. Add it to the git index. - Glance through the menu and notes content to make sure they're up-to-date. This file determines; the structure of the install page.; - Add or remove python versions and architectures if necessary.; - Every couple years, update the default python version in ``datakey: python``/``selected`` *and*; in ``optsHandler`` at the end.; - Always adjust the ``datakey: branch``/``stable`` block.; - For releases, adjust the ``datakey: branch``/``previous`` and ``nightly`` blocks. * Enter the ``scripts/`` directory. If the previous release hasn't had a snapshot saved, copy; ``install-generator.py`` into a version-labeled file, and add it to the git index.; * Edit ``scripts/install-generator.py``. - Primarily, edit ``edition`` at the top.; - Also, edit other arrays (stuff above ``## Outputs``) or messages (logic below ``## Outputs``); that should change. * Run the ``install-generator.py`` in place. It will dump two new files, e.g.,; ``data/installs/cmd/{edition}.json`` and ``data/installs/dlbtn/{edition}.json``. Add these to the; index (no need to inspect them). * The installer page is now ready for i",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:29647,install,install,29647,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['install'],['install']
Deployability," to build DFTD3 from; from source also,; follow the instructions provided with the source; (essentially, download the freely available tarball, unpack the source,; edit the Makefile to select a; Fortran compiler, and run make). From version 3.1.0 onwards, DFTD3 can; be used as-is; for earlier versions, patches are available:; :source:`psi4/share/psi4/scripts/patch_grimme_dftd3.3.0.2`. To be used by |PSIfour|, the classic program binary (``dftd3``) must be; found in your :envvar:`PATH` or the s-dftd3 module in your :envvar:`PYTHONPATH`; so QCEngine can detect it. Check if and where found through ``qcengine info``. If; |PSIfour| is unable to execute the binary, an error will be reported.; To preferentially use a particular dftd3 compilation, simply adjust its; position in the path environment variables. .. >>> cd dftd3; .. >>> ls; .. dftd3.tar; .. patch_grimme_dftd3.3.0.2; .. >>> tar -xvf dftd3.tar; .. copyc6.f; .. dftd3.f; .. Makefile; .. man.pdf; .. pars.f; .. param; .. >>> patch < patch_grimme_dftd3.3.0.2; .. patching file dftd3.f; .. >>> make; .. making dftd3.o from dftd3.f; .. ifort -O -c dftd3.f -o dftd3.o; .. making copyc6.o from copyc6.f; .. ifort -O -c copyc6.f -o copyc6.o; .. ifort dftd3.o copyc6.o -o ./dftd3; .. >>> ls; .. Makefile copyc6.o dftd3.f dftd3.tar param patch_grimme_dftd3.3.0.2; .. copyc6.f dftd3 dftd3.o man.pdf pars.f. Theory; ~~~~~~. The local or semilocal character of conventional density functionals; necessarily leads to neglect of the long-range correlation interactions; which capture attractive van der Waals forces. Initially proposed by Yang; [Wu:2002:515]_ and assiduously developed by Grimme, [Grimme:2004:1463]_; [Grimme:2006:1787]_ [Grimme:2010:154104]_ the DFT+Dispersion method; appends to the base functional a scaled, damped, and fitted leading term; to the well-known dispersion energy series, :math:`E_{disp} = -C_6/R^6; -C_8/R^8 -C_{10}/R^{10}-\cdots`. The DFT-D2 [Grimme:2006:1787]_ variant; takes the explicit form below. Here, disper",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst:8329,patch,patch,8329,doc/sphinxman/source/dftd3.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dftd3.rst,1,['patch'],['patch']
Deployability," to focus on PsiAPI rather than PSIthon or you want to control the compute conditions with environment variables.; In this case, follow :ref:`faq:add_psiapi_tests` to prepare as PsiAPI (``import psi4``) for, roughly speaking, running through :program:`pytest`.; The PsiAPI/pytest test suite occupies :source:`tests/pytests`. The above description sounds as if there are two disjoint test suites, and you have to run both ``ctest`` and ``pytest`` to fully test |PSIfour|.; This has indeed been the case until March 2022.; The difficulty has been that (1) two test suites is unexpected so some developers don't know to run both; and (2) there are important tests in the PSIthon suite that can't be run on a |PSIfour| installation since CTest only works in a build directory.; Now, by adding an extra file to the test directory (:ref:`faq:psithon_through_pytest`), PSIthon tests can also be run through :program:`pytest`.; This hasn't rolled out to all ~500 PSIthon tests (help wanted), but eventually |PSIfour| can be tested with a single command from a build or from an installation.; Therefore, in designing a test, choose its mode based on whether PSIthon or PsiAPI suits it better and whether it's a simple model for users (probably PSIthon) or for expert users (probably PsiAPI).; Both will continue to work in future, and neither have limitations. Test Contents; =============. * Most |PSIfour| tests will be integration tests focusing on non-regression of user input to answers, and we insist on having these.; But if you find unit tests helpful, by all means add them to the test suite. * Most tests should store reference results (from literature or another implementation or a carefully run |PSIfour| calculation),; run quantum chemistry, then apply one or more of the :ref:`faq:comparison_functions` so that the test will fail if the answer is unexpected.; The functions are the same in CTest and pytest, but in the former they are, for example, ``compare_matrices(refmat, mat, ...)`` while ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst:3881,install,installation,3881,doc/sphinxman/source/add_tests.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/add_tests.rst,1,['install'],['installation']
Deployability," until the installer page has been tested. * Copy and edit a new file akin to ``data/installs/v182.yaml``. Add it to the git index. - Glance through the menu and notes content to make sure they're up-to-date. This file determines; the structure of the install page.; - Add or remove python versions and architectures if necessary.; - Every couple years, update the default python version in ``datakey: python``/``selected`` *and*; in ``optsHandler`` at the end.; - Always adjust the ``datakey: branch``/``stable`` block.; - For releases, adjust the ``datakey: branch``/``previous`` and ``nightly`` blocks. * Enter the ``scripts/`` directory. If the previous release hasn't had a snapshot saved, copy; ``install-generator.py`` into a version-labeled file, and add it to the git index.; * Edit ``scripts/install-generator.py``. - Primarily, edit ``edition`` at the top.; - Also, edit other arrays (stuff above ``## Outputs``) or messages (logic below ``## Outputs``); that should change. * Run the ``install-generator.py`` in place. It will dump two new files, e.g.,; ``data/installs/cmd/{edition}.json`` and ``data/installs/dlbtn/{edition}.json``. Add these to the; index (no need to inspect them). * The installer page is now ready for inspection. Run ``hugo server --watch=false`` and view in; browser at http://localhost:1313/ . Click around the options to make sure the buttons and; instructions all look right. * Iterate on the ``data/installs/{edition}.yaml`` and the ``install-generator.py`` until correct.; It's fine to push to psicode.org to see it in place. But wait until it's final (and all the; packages and installers are ready) to shift ""latest"" alias in frontmatter from whichever page is; currently active to the new page, ``content/installs/{edition}.md``. This makes sure ""Downloads""; on the navigation bar points to the new page. * Commit the new files, PR, and deploy psicode site. .. Collect documentation snapshot (pre-Fall 2023); .. ---------------------------------------------",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst:30393,install,install-generator,30393,doc/sphinxman/source/manage_release.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/manage_release.rst,1,['install'],['install-generator']
Deployability," used to perform energy and; gradient computations for both closed- and open-shell molecules. In addition,; the ODC-06 and ODC-12 methods support restricted reference orbitals; (|scf__reference| ``RHF``) for the energy and gradient computations of; closed-shell molecules. Note that in this case restricted reference orbitals; are only available for |dct__algorithm| ``SIMULTANEOUS``. .. _`sec:dctalgorithms`:. Iterative Algorithms; ~~~~~~~~~~~~~~~~~~~~. As explained in the :ref:`Theory <sec:dcttheory>` section, in order to obtain the DCT energy one; needs to solve a system of coupled equations for orbitals and density; cumulant. At the present moment three iterative algorithms for the solution of the; equations are available. The choice of the algorithm is controlled using the; |dct__algorithm| option. SIMULTANEOUS [Default]; In the simultaneous algorithm the DCT equations are solved in macroiterations.; Each macroiteration consists of a single iteration of the cumulant update; followed by a single iteration of the orbital update and orbital transformation; of the integrals. The macroiterations are repeated until the simultaneous; convergence of the cumulant and orbitals is achieved.; Convergence of the simultaneous algorithm is accelerated using the; DIIS extrapolation technique. TWOSTEP; In the two-step algorithm each macroiteration consists of two sets of; microiterations. In the first set, the density cumulant equations are solved; iteratively, while the orbitals are kept fixed. After the density cumulant is; converged, the second set of microiterations is performed for the; self-consistent update of the orbitals with the fixed density cumulant. Each; macroiteration is completed by performing the orbital transformation of the; integrals. As in the simultaneous algorithm, the DIIS; extrapolation is used to accelerate convergence. Two-step algorithm is; only available for the DC-06 and DC-12 methods. QC; In the quadratically-convergent algorithm, the; orbital and cumu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst:9726,update,update,9726,doc/sphinxman/source/dct.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/dct.rst,2,['update'],['update']
Deployability," will be useful,; .. # but WITHOUT ANY WARRANTY; without even the implied warranty of; .. # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the; .. # GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. _`sec:prog_integrals`:. ======================; Integrals in |PSIfour|; ======================. Introduction; ------------. |PSIfour| has a number of backends available to compute integrals. In order to; accomodate these options, while providing a clean interface to the programmer,; an abstraction layer is implemented within Libmints. A recent upgrade to the; primary integral engine has seen some important changes to the way this; interface layer is used; this document is designed to aid new developers as; well as those familiar with the older calling conventions to ensure that the; most efficient calling conventions are applied. The older style; ---------------. A very simple loop that does not use permutational symmetry might look; something like this in the old scheme:. .. code-block:: cpp. auto sieve = std::make_shared<ERISieve>(basisset, cutoff);; auto factory= std::make_shared<IntegralFactory>(basisset);; int deriv_level = 0;; bool use_shell_pairs = true;; auto eri = factory->eri(deriv_level, use_shell_pairs);; const double* buffer = eri_->buffer();; for (int P = 0; P < basisset->nshell(); ++P) {; const auto& Pshell = basisset->shell(P);; for (int Q = 0; Q < basisset->nshell(); ++Q) {; const auto& Qshell = basisset->shell(Q);; for (int R = 0; R < basisset->nshell(); ++R) {; const auto& Rshell = basisset->shell(R);; for (int S = 0; S < basisset->nshell(); ++S) {; const auto& Sshell = basisset->shell(S);; if(sieve->shell_significant(P, Q, R, S) {; eri->comput",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst:1410,upgrade,upgrade,1410,doc/sphinxman/source/prog_integrals.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/prog_integrals.rst,1,['upgrade'],['upgrade']
Deployability," with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: PCMSolver, PCM, continuum solvation. .. _`sec:pcmsolver`:. Interface to PCMSolver by R. Di Remigio; =======================================. .. codeauthor:: Roberto Di Remigio, T. Daniel Crawford, Andrew C. Simmonett; .. sectionauthor:: Roberto Di Remigio. *Module:* :ref:`Keywords <apdx:pcm>`, :ref:`PSI Variables <apdx:pcm_psivar>`, :source:`PCMSolver <psi4/src/psi4/libpsipcm/>`. .. image:: https://img.shields.io/badge/home-PCMSolver-5077AB.svg; :target: https://github.com/PCMSolver/pcmsolver. .. raw:: html. <br>. .. image:: https://img.shields.io/badge/docs-latest-5077AB.svg; :target: http://pcmsolver.readthedocs.io/en/latest/. |PSIfour| contains code to interface to the PCMSolver library developed; by R. Di Remigio and L. Frediani.; The PCMSolver library requires no additional licence, downloads, or; configuration. The library allows for calculations in solution with the; polarizable continuum model (PCM), a continuum solvation model [Tomasi:2005:2999]_. Installation; ~~~~~~~~~~~~. **Binary**. * .. image:: https://anaconda.org/psi4/pcmsolver/badges/version.svg; :target: https://anaconda.org/psi4/pcmsolver. * PCMSolver is available as a conda package for Linux and macOS (and Windows, through the Ubuntu shell). * If using the |PSIfour| binary, PCMSolver has already been installed alongside. * If using |PSIfour| built from source, and anaconda or miniconda has; already been installed (instructions at :ref:`sec:quickconda`),; PCMSolver can be obtained through ``conda install pcmsolver -c psi4``.; Then enable it as a feature with :makevar:`ENABLE_PCMSolver`,; hint its location with :makevar:`CMAKE_PREFIX_PATH`,; and rebuild |PSIfour| to detect PCMSolver and activate dependent code. .. * Previous bullet had details. To build |PSIfour| from source and use; .. p",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst:1886,configurat,configuration,1886,doc/sphinxman/source/pcmsolver.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/pcmsolver.rst,1,['configurat'],['configuration']
Deployability," within a composite framework; are as follows:. COSX; An algorithm based on the semi-numerical ""chain of spheres exchange"" (COSX); approach described in [Neese:2009:98]_. The coulomb term is computed with a; direct density-fitting algorithm. The COSX algorithm uses no I/O, scales; well with system size, and requires minimal memory, making it ideal for; large systems and multi-core CPUs. See :ref:`sec:scfcosx` for more information.; LINK; An implementation of the linear-scaling ""Linear Exchange"" (LinK); algorithm described in [Ochsenfeld:1998:1663]_. The LINK algorithm provides ; many of the benefits of integral-direct SCF algorithms, including no disk I/O, ; low memory usage, and effective parallelization. Additionally, the; LINK implementation scales well with system size ; while simultaneously providing a formally-exact computation of the ; Exchange term. See :ref:`sec:scflink` for more information. In some cases the above algorithms have multiple implementations that return; the same result, but are optimal under different molecules sizes and hardware; configurations. Psi4 will automatically detect the correct algorithm to run and; only expert users should manually select the below implementations. The DF; algorithm has the following two implementations. MEM_DF; A DF algorithm optimized around memory layout and is optimal as long as; there is sufficient memory to hold the three-index DF tensors in memory. This; algorithm may be faster for builds that require disk if SSDs are used.; DISK_DF; A DF algorithm (the default DF algorithm before Psi4 1.2) optimized to; minimize Disk IO by sacrificing some performance due to memory layout. Note that these algorithms have both in-memory and on-disk options, but; performance penalties up to a factor of 2.5 can be found if the incorrect; algorithm is chosen. It is therefore highly recommended that the keyword ""DF""; be selected in all cases so that the correct implementation can be selected by; |PSIfours| internal routines. Ex",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst:32943,configurat,configurations,32943,doc/sphinxman/source/scf.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/scf.rst,1,['configurat'],['configurations']
Deployability," |PSIfour|; conda package into the main environment of an Anaconda or Miniconda; distribution and added that to your :envvar:`PATH`, as prompted, then; ``which psi4`` likely yields :samp:`{condadist}/bin/psi4` and the ``PATH``; setting lines below are redundant. If you installed into a conda environment :samp:`{p4env}` and performed; :samp:`conda activate {p4env}`, then ``which psi4`` likely yields; :samp:`{condadist}/envs/{p4env}/bin/psi4` and the ``PATH`` setting lines; below are redundant. .. code-block:: tcsh. # csh, tcsh: add to shell or ~/.tcshrc file; unsetenv PSIDATADIR; setenv PATH {prefix}/bin:$PATH; setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/directory/for/scratch/files. .. code-block:: bash. # sh, bash: add to shell or ~/.bashrc (Linux/Windows) or ~/.bash_profile (Mac) file; unset PSIDATADIR; export PATH={prefix}/bin:$PATH; export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files. .. If you installed the Psi4conda distribution or installed the |PSIfour|; .. conda package into the main environment of an Anaconda or Miniconda; .. distribution and added that to your :envvar:`PATH`, as prompted, then; .. :samp:`{condadist} = $HOME/{ana|mini|psi4}conda` and ``which psi4`` likely; .. yields :samp:`{condadist}/bin/psi4` and the ``PATH`` setting lines above; .. are redundant. Run |PSIfour| as executable. ::. >>> cat sample.in; molecule {; He; }; energy('hf/cc-pvdz'); compare_values(-2.85518839, get_variable('current energy'), 5, 'SCF E'); >>> psi4 sample.in; SCF E.............................................................PASSED. *or* Run |PSIfour| as Python module. ::. >>> cat sample.py; import psi4; mol = psi4.geometry(""""""; He; """"""); psi4.energy('hf/cc-pvdz'); psi4.compare_values(-2.85518839, psi4.core.get_variable('current energy'), 5, 'SCF E'); >>> python sample.py; SCF E.............................................................PASSED. .. _`faq:inplace`:. How to run Psi4 as executable after compilati",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:32360,install,installed,32360,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,2,['install'],['installed']
Deployability,"""Choose the type of build."") # foil Ninja Debug on Windows. project(psi4; LANGUAGES C CXX); set(psi4_URL ""http://www.psicode.org/""); set(psi4_EMAIL ""psi4aiqc+cmake@gmail.com""); set(psi4_LICENSE ""GNU Lesser General Public License, version 3 (LGPL-3.0)""); set(psi4_DESCRIPTION ""Open-Source Quantum Chemistry""). list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake). message(STATUS ""Building using CMake ${CMAKE_VERSION} Generator ${CMAKE_GENERATOR}""). ################ Options: Overview and Not Otherwise Mentioned ###############. # <<< CMake build overview >>>; #; # >>> ls; # external/ COPYING psi4/ tests/ ...; # >>> cmake -S. -Bobjdir -DCMAKE_INSTALL_PREFIX=/path/to/install-psi4 ...; # ...; # -- Generating done; # -- Build files have been written to: /current/dir/objdir; # >>> cmake --build objdir --target install -j`getconf _NPROCESSORS_ONLN`. # <<< Required build dependencies that Psi4 can't build itself >>>; #; # - CMake (e.g., `conda install cmake`); # - C++ and C compilers (C++17 compliant); # - BLAS/LAPACK (also runtime; e.g., `conda install mkl-devel`); # - Python (also runtime; interpreter and headers; e.g., `conda install python`); # - NumPy (also runtime; avoidable at buildtime if gau2grid pre-built; e.g., `conda install numpy`); # - networkx >=2.4 (runtime only; e.g., `conda install networkx`); # - pint >=0.10 (runtime only; e.g., `conda install pint -c conda-forge`); # - pydantic >=1.0 (runtime only; e.g., `conda install pydantic -c conda-forge`); # - msgpack-python (runtime only; e.g., `conda install msgpack-python`); # - Eigen (for Libint2; e.g., `conda install eigen`); # - Boost (header-only libs for Libint2; e.g., `conda install boost-cpp`); # - SciPy (runtime only; avoidable through keyword setting; e.g., `conda install scipy`); # - py-cpuinfo (runtime only; e.g., `conda install py-cpuinfo`); # - psutil (runtime only; e.g., `conda install psutil`). # These three ""### Options ###"" sections contain useful CMake variables for build configuration.",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt:1605,install,install,1605,CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/CMakeLists.txt,1,['install'],['install']
Deployability,"""https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-MacOSX-x86_64.sh""; >>> curl -O ""https://repo.anaconda.com/miniconda/Miniconda3-py39_4.9.2-Windows-x86_64.exe"". .. _`faq:updatepsi4`:. How to update a Psi4 binary; ^^^^^^^^^^^^^^^^^^^^^^^^^^^. A. Conda command to update an existing |PSIfour| conda installation to the; newest stable release (roughly annually). It's often a better idea to create; a new environment rather than updating the old one. .. code-block:: bash. >>> # Linux/MacOS; >>> conda update psi4 -c psi4; >>> # Windows; >>> conda update psi4 -c psi4 -c conda-forge. # if psi4 channel in defaults (true for Psi4conda installers); >>> conda update psi4. B. Conda command to update an existing |PSIfour| conda installation to the; latest development head (roughly nightly). .. code-block:: bash. >>> # Linux/MacOS; >>> conda update psi4 -c psi4/label/dev; >>> # Windows; >>> conda update psi4 -c psi4/label/dev -c conda-forge. C. Conda command to install a very specific package, including version,; build string, and subchannel. The final `-c psi4` represents any; additional channels or subchannels needed to locate all dependencies. .. code-block:: bash. >>> conda install psi4=1.2a1.dev249+623ad64=py36_sse41_0 -c psi4/label/subchannel -c psi4. .. _`faq:psi4deps`:. How to use conda to compile Psi4 faster and easier; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^. .. code-block:: console. # Linux # c. v1.2rc1 ###or Mac or Windows; # substitute x.x by 3.5|3.6|3.7 for alternate python versions; >>> conda create -n p4dev python=x.x psi4-dev -c psi4/label/dev -c psi4; >>> conda activate p4dev. >>> cd {top-level-psi4-dir}; >>> psi4-path-advisor --help; usage: psi4-path-advisor [-h] [--psi4-compile] [--disable-addons]; [--disable-mkl] [--intel | --intel-multiarch | --gcc]; ; Build and Run path advisor for Psi4; ; optional arguments:; -h, --help show this help message and exit; --psi4-compile (Command Default) Generates a minimal CMake command for building Psi4 aga",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:9625,install,install,9625,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['install'],['install']
Deployability,"# * In order for any DF to work, need ENABLE_ERI3 and ENABLE_ERI2 >=0; # * In order for gradient and Hessian tests to not segfault, need ENABLE_ERI and ENABLE_ERI3 and ENABLE_ERI2 =2; # * (new c. Jan 2022) In order for Psi4 to at all work with a libint2 build for one-electron ints, need ENABLE_ONEBODY =2; # * The `find_package(Libint2 ... COMPONENTS ...)` commands will check the above requirements met, provided the libint2; # was built with cmake+cmake, not libtool+cmake.; # * Provided you know what you're doing wrt the above options and know what subset of Psi4 calculations you're targeting; # (e.g., no Hessians or non-df only) and recognize that DF is everywhere (e.g., SAD guess and DF_SCF_GUESS) and may; # need further suppression, it's fine to reduce or eliminate the `find_package` components.; # * ~Psi4 can run a libtool+cmake, but one needs to disable the `find_package` components check and correct for some; # Libint2 vs. libint2 spelling differences. See ""CHOOSE!"" toggles here and in <psi4>/psi4/CMakeLists.txt~ (see [Feb 2023] update); # * In order for DF tests to yield right values when cartesian basis sets (6d) used, need ERI3_PURE_SH and ERI2_PURE_SH =OFF; # * In order for DF integrals to be present as nominally expected, need WITH_MAX_AM to mirror WITH_ERI3_MAX_AM; # * In order for DF calculations to not be limited by cheap integrals, need WITH_MAX_AM_ERI2 >= WITH_MAX_AM_ERI3; # * In order for DF fallback fitting to work with def2-universal on all elements, need WITH_ERI3_MAX_AM >=4 for energies; # * Since non-DF calculations often use DF guess or preiterations and DF calculations use 4-center integrals for sieving,; # a natural relationship between ERI and ERI3 for energy integrals is N and N+1.; # * The combination WITH_MAX_AM_ERI=""5;4;3"" and WITH_MAX_AM_ERI3=""6;5;4"" permits any 5Z energy, QZ gradient, and TZ Hessian and is sufficient for the full test suite.; # * Psi4 doesn't know the limits of the Libint2 library to which it's linked. `libint2::Engine",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:1665,toggle,toggles,1665,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['toggle'],['toggles']
Deployability,"# <img src=""https://github.com/psi4/psi4media/blob/master/logos-psi4/psi4square.png"" height=150>. | **Status** | [![Azure DevOps builds](https://img.shields.io/azure-devops/build/psi4/e80489d7-9619-4512-8e7b-255e355b3ab8/1?logo=azure%20devops)](https://dev.azure.com/psi4/psi4/_build?definitionId=1) [![Codecov coverage](https://img.shields.io/codecov/c/github/psi4/psi4.svg?logo=Codecov&logoColor=white)](https://codecov.io/gh/psi4/psi4) |; | :------ | :------- |; | **Latest Release** | [![Last release tag](https://img.shields.io/github/release/psi4/psi4.svg)](https://github.com/psi4/psi4/releases) [![Commits since release](https://img.shields.io/github/commits-since/psi4/psi4/v1.8.svg)](https://github.com/psi4/psi4/releases/tag/v1.8) [![python](https://img.shields.io/badge/python-3.8%2C%203.9%2C%203.10%2C%203.11%2C%203.12-blue.svg)](https://psicode.org/psi4manual/master/introduction.html#supported-systems) |; | **Communication** | [![User site](https://img.shields.io/badge/home-Psi4-5077AB.svg)](https://psicode.org/) [![docs latest](https://img.shields.io/badge/docs-latest-5077AB.svg?logo=read%20the%20docs)](https://psicode.org/psi4manual/master/index.html) [![chat on forum](https://img.shields.io/badge/chat-on_forum-808493.svg?logo=Discourse&logoColor=white)](http://forum.psicode.org/) [![dev chat on slack](https://img.shields.io/badge/dev_chat-on_slack-808493.svg?logo=slack)](https://join.slack.com/t/psi4/shared_invite/zt-5s36s4rb-SQH6_AWyfWOqlKYN3cFs4Q) |; | **Foundation** | [![license](https://img.shields.io/github/license/psi4/psi4.svg)](https://opensource.org/licenses/LGPL-3.0) [![platforms](https://img.shields.io/badge/Platforms-Linux%2C%20MacOS%2C%20MacOS%20Silicon%2C%20Windows%2C%20Windows%20WSL-orange.svg)](https://psicode.org/psi4manual/master/introduction.html#supported-systems) [![python](https://img.shields.io/badge/python-3.8%2C%203.9%2C%203.10%2C%203.11%2C%203.12-blue.svg)](https://psicode.org/psi4manual/master/introduction.html#supported-systems) |; | ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/README.md:497,release,release,497,README.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/README.md,5,['release'],"['release', 'releases']"
Deployability,"# CMake driving pytest copied from pybind11:; # https://github.com/pybind/pybind11/blob/master/tests/CMakeLists.txt. # Make sure pytest is found or produce a fatal error; if(NOT psi4_PYTEST_FOUND); execute_process(COMMAND ${Python_EXECUTABLE} -c ""import pytest""; OUTPUT_QUIET ERROR_QUIET; RESULT_VARIABLE _exec_python_err); if(_exec_python_err); message(STATUS ""Running some tests requires pytest. Please install it manually (try: ${Python_EXECUTABLE} -m pip install pytest)""); endif(); set(psi4_PYTEST_FOUND TRUE CACHE INTERNAL """"); endif(). # A single command to remake and run the pytest smoke tests; add_custom_target(pytest; COMMAND PYTHONPATH=${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}; ${Python_EXECUTABLE} -m pytest -rws -v -m smoke --capture=sys ${CMAKE_CURRENT_SOURCE_DIR}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/tests/pytests/CMakeLists.txt:405,install,install,405,tests/pytests/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/tests/pytests/CMakeLists.txt,4,['install'],['install']
Deployability,"# Format borrowed from sns-mp2 CMakeLists. if(${ENABLE_psi4fockci}); if(NOT (${CMAKE_DISABLE_FIND_PACKAGE_psi4fockci})); include(FindPythonModule); find_python_module(psi4fockci ATLEAST 0.1.0 QUIET); endif(). if(${psi4fockci_FOUND}); message(STATUS ""${Cyan}Found Psi4FockCI${ColourReset}: ${PY_psi4fockci} (found version ${psi4fockci_VERSION})""); add_library(psi4fockci_external INTERFACE) # dummy. else(); if(${CMAKE_INSIST_FIND_PACKAGE_psi4fockci}); message(FATAL_ERROR ""Suitable Psi4FockCI could not be externally located as user insists""); endif(). include(ExternalProject); message(STATUS ""Suitable Psi4FockCI could not be located, ${Magenta}Building Psi4FockCI${ColourReset} instead.""). ExternalProject_Add(psi4fockci_external; BUILD_ALWAYS 1; URL https://github.com/shannonhouck/psi4fockci/archive/267e171.tar.gz # v0.1.0; CONFIGURE_COMMAND """"; UPDATE_COMMAND """"; BUILD_COMMAND ${Python_EXECUTABLE} setup.py build; BUILD_IN_SOURCE 1; INSTALL_COMMAND ${Python_EXECUTABLE} setup.py install; --record=record.txt; --install-lib=${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_LIBDIR}${PYMOD_INSTALL_LIBDIR}); endif(); else(); add_library(psi4fockci_external INTERFACE) # dummy; endif(); ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/downstream/psi4fockci/CMakeLists.txt:987,install,install,987,external/downstream/psi4fockci/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/downstream/psi4fockci/CMakeLists.txt,4,['install'],"['install', 'install-lib']"
Deployability,"# GNU Lesser General Public License for more details.; .. #; .. # You should have received a copy of the GNU Lesser General Public License along; .. # with Psi4; if not, write to the Free Software Foundation, Inc.,; .. # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.; .. #; .. # @END LICENSE; .. #. .. include:: autodoc_abbr_options_c.rst. .. index:: Cfour; .. _`sec:cfour`:. Interface to CFOUR by J. Stanton & J. Gauss; ===========================================. .. codeauthor:: Lori A. Burns; .. sectionauthor:: Lori A. Burns. *Module:* :ref:`Keywords <apdx:cfour>`, :ref:`PSI Variables <apdx:cfour_psivar>`, :ref:`Samples <apdx:testSuitecfour>`. |PSIfour| contains code to interface to the Cfour quantum chemistry suite of; John F. Stanton (U. Texas, Austin) and J\ |u_dots|\ rgen Gauss (U. Mainz),; which is available after a license agreement from ; `http://www.cfour.de/ <http://www.cfour.de/>`_. Installation; ~~~~~~~~~~~~. Follow the instructions provided with the Cfour download to install the; executable or to build the source. To by used by |PSIfour|, the program; binary (:program:`xcfour`) must be found in your :envvar:`PATH` or; :envvar:`PSIPATH`. The ``GENBAS`` file containing basis sets in Cfour; format is not necessary for this interface, but if you prefer to access; basis sets the ""Cfour way"" using a custom ``GENBAS`` file (the distributed; one is included with the interface), it, too, must be in :envvar:`PATH` or; :envvar:`PSIPATH`. If |PSIfour| is unable to execute the binary, an error; will be reported. .. .. caution:: The p4c4 interface isn't in the master branch nor will it be in; .. the near future. To run this code, (1) build the ``c4`` branch of psi4,; .. (2) find a copy of cfour and put it in :envvar:`PATH` or; .. :envvar:`PSIPATH`, and (3) clone https://github.com/loriab/qcdb.git; .. python module and prepend :envvar:`PYTHONPATH` with the top qcdb; .. directory (the path added to PYTHONPATH should have one ""qcdb"" in it;; .. the cloned qcd",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst:1714,install,install,1714,doc/sphinxman/source/cfour.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/cfour.rst,1,['install'],['install']
Deployability,"# Mac; # py38|py39|py310 for alternate python versions; >>> curl -O ""http://vergil.chemistry.gatech.edu/download/Psi4conda-latest-py35-MacOSX-x86_64.sh"" --keepalive-time 2; >>> curl ""http://vergil.chemistry.gatech.edu/psicode-download/Psi4conda-1.4rc1-py38-MacOSX-x86_64.sh"" -o Psi4conda-latest-py38-MacOSX-x86_64.sh --keepalive-time 2; >>> bash Psi4conda-latest-py38-MacOSX-x86_64.sh -b -p $HOME/psi4conda # agrees to license terms; >>> (bash) echo $'. $HOME/psi4conda/etc/profile.d/conda.sh\nconda activate' >> ~/.bash_profile; >>> (tcsh) echo ""source $HOME/psi4conda/etc/profile.d/conda.csh\nconda activate"" >> ~/.tcshrc; # log out, log back in so conda and psi4 in path; >>> psi4 --test. .. code-block:: bash. # Windows; # py38 only python version; # download via button at https://psicode.netlify.app/installs/latest with ""Windows"", ""Installer"", and ""Stable Release"" selected; >>> # install via GUI by double-clicking downloaded `.exe` file analogous to https://conda.io/projects/conda/en/latest/user-guide/install/windows.html; >>> # -OR- install via following line; >>> start /wait """" Psi4conda-1.4rc1-py38-Windows-x86_64.exe /InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\psi4conda; >>> psi4 --test. That last command tested that ``psi4`` is in your path, and it's finding; all the libraries it needs. It works because :envvar:`PSI_SCRATCH`; defaults to ``/tmp``. Now you need only specify a permanent scratch; directory (see :ref:`sec:Scratch`) by replacing the placeholder in the; following:. .. code-block:: bash. >>> echo ""export PSI_SCRATCH=/path/to/existing/writable/local-not-network/directory/for/scratch/files"" >> ~/.bashrc; # log out, log back in so variable takes effect. All done!. Configuration for this set-up is summarized at :ref:`faq:runfrombinary`. .. note:: |PSIfour| installs a Python distribution alongside, so you should choose an installer based on the Python version you *want*, irrespective of any Python version you *have*. .. _`faq:psi4pkg`:. How to ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:6022,install,install,6022,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['install'],['install']
Deployability,"# NOTES on Libint2 build options for Psi4; # ---------------------------------------; # * In order for Psi4 to at all work with a libint2 build, need LIBINT2_CARTGAUSS_ORDERING=standard *at generation time*. This is already the default.; # * In order for Psi4 to at all work with a libint2 build, need LIBINT2_SHELL_SET=standard *at generation time*. This is already the default.; # * ~In order for Psi4 to at all work with a libint2 build, need LIBINT2_SHGAUSS_ORDERING=gaussian *at library build time*.; # This is not the default, though it may become runtime selectable in future https://github.com/evaleev/libint/issues/190#issuecomment-691485225 .~ (see [Feb 2023] update); # * In order for any DF to work, need ENABLE_ERI3 and ENABLE_ERI2 >=0; # * In order for gradient and Hessian tests to not segfault, need ENABLE_ERI and ENABLE_ERI3 and ENABLE_ERI2 =2; # * (new c. Jan 2022) In order for Psi4 to at all work with a libint2 build for one-electron ints, need ENABLE_ONEBODY =2; # * The `find_package(Libint2 ... COMPONENTS ...)` commands will check the above requirements met, provided the libint2; # was built with cmake+cmake, not libtool+cmake.; # * Provided you know what you're doing wrt the above options and know what subset of Psi4 calculations you're targeting; # (e.g., no Hessians or non-df only) and recognize that DF is everywhere (e.g., SAD guess and DF_SCF_GUESS) and may; # need further suppression, it's fine to reduce or eliminate the `find_package` components.; # * ~Psi4 can run a libtool+cmake, but one needs to disable the `find_package` components check and correct for some; # Libint2 vs. libint2 spelling differences. See ""CHOOSE!"" toggles here and in <psi4>/psi4/CMakeLists.txt~ (see [Feb 2023] update); # * In order for DF tests to yield right values when cartesian basis sets (6d) used, need ERI3_PURE_SH and ERI2_PURE_SH =OFF; # * In order for DF integrals to be present as nominally expected, need WITH_MAX_AM to mirror WITH_ERI3_MAX_AM; # * In order for DF calcu",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt:670,update,update,670,external/upstream/libint2/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/external/upstream/libint2/CMakeLists.txt,2,['update'],['update']
Deployability,"## Description; <!-- Provide a brief description of the PR's purpose here. -->. ## User API & Changelog headlines; <!-- A bullet-point format description of how this PR affects the user.; This is destined for the release notes. May be empty. -->; - [ ] RN 1; - [ ] RN 2. ## Dev notes & details; <!-- A bullet-point format description of what this PR does ""at a glance.""; Target audience is code reviewers and other devs skimming PRs.; Should be more technical than user notes. Should never be empty. -->; - [ ] Feature1; - [ ] Feature2. ## Questions; - [ ] Question1. ## Checklist; - [ ] Tests added for any new features; - [ ] [All or relevant fraction of full tests run](http://psicode.org/psi4manual/master/build_planning.html#how-to-run-a-subset-of-tests). ## Status; - [ ] Ready for review; - [ ] Ready for merge; ",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/.github/PULL_REQUEST_TEMPLATE.md:213,release,release,213,.github/PULL_REQUEST_TEMPLATE.md,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/.github/PULL_REQUEST_TEMPLATE.md,1,['release'],['release']
Deployability,"##### Relevant ``cmake`` Options:; .. ; .. ```; .. -DSTRING -express to cmake; .. ```. .. _`faq:setupprefix`:. How to install elsewhere than :samp:`/usr/local/psi4`; -----------------------------------------------------. The installation directory is the filesystem location for the executable; script, the Python module, basis set data, and other administrative files.; Unless using the conda package, which is relocatable, the installation; directory must be specified with CMake variable ``CMAKE_INSTALL_PREFIX``; before compiling. * Build with Specific Install Directory. .. code-block:: bash. cmake -DCMAKE_INSTALL_PREFIX=/nfs/common/software/psi4. * Relevant CMake Options:. .. code-block:: bash. CMAKE_INSTALL_PREFIX=PATH # Location to which Psi4 and internally built; # add-ons are installed (default: /usr/local/psi4). .. note:: It's not guaranteed, but if, in a pinch, you need to install a; built Psi4 to a location *not* configured by ``CMAKE_INSTALL_PREFIX``,; recursively copy the folders under :samp:`{objdir}/stage/{prefix}` to; the desired location, ``chown`` them if needed, edit the shebang in; ``bin/psi4`` if needed, and recursively delete all the "".pyc"" files. It; may just run. .. ###<a name=""profiling""></a>; .. ; .. How to set up a profiling build; .. ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; .. ; .. Specifying build type ``setup --type profile`` prepares a release build; .. type with the addition of extra flags for linking against the profiler; .. `gprof`. .. _`faq:setuptype`:. How to compile for debugging; ----------------------------. Flags to turn optimizations off and debugging on can be set across the; project and plugins with CMake variable ``CMAKE_BUILD_TYPE`` before; compiling. Note that these flags *will not* propagate to any add-ons that; are detected pre-built rather than built. * Build without optimization. .. code-block:: bash. cmake -DCMAKE_BUILD_TYPE=debug. set the CMake build type [default: release]. * Relevant CMake Options:. .. code-block:: bash. CMAKE",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst:21649,install,install,21649,doc/sphinxman/source/build_planning.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/build_planning.rst,1,['install'],['install']
Deployability,"##########################################################################| 100%. 7. Configure environment. Preceding steps have placed ``conda`` and ``psi4`` in your :envvar:`PATH`, either permanently through rc-files or temporarily in this terminal session. You can keep or undo these changes. For general psi4 use, you must enable the ``psi4`` executable to be found through any of:. #. prepending to :envvar:`PATH` in shell, ``~/.bashrc``, ``~/.tcshrc``, or PBS ``cmd`` file; #. activating the conda environment (p4env above) in shell, ``~/.bashrc``, or PBS ``cmd`` file; #. supplying full path to executable (shell or PBS ``cmd`` file). Similarly, the scratch directory (see :ref:`sec:Scratch`) must be specified through:. #. defining :envvar:`PSI_SCRATCH` in shell, ``~/.bashrc``, ``~/.tcshrc``, or PBS ``cmd`` file. .. Suitable values for these variables have been printed to screen during installation (see last codeblock in step 6). Useful Commands; ^^^^^^^^^^^^^^^. * (A) Initially install |PSIfour| stable release. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4; >>> conda install psi4 --channel psi4. * (B) Initially install |PSIfour| stable release with non-current python. .. code-block:: console. >>> conda install psi4 python=3.8 -c psi4. * (C) Update to latest |PSIfour| stable release. .. code-block:: console. >>> conda update psi4 -c psi4. * (D) Initially install stable release into a conda environment ""p4env"" instead of ""root"". This creates a sandbox with |PSIfour| and python (loaded as dependency). .. code-block:: console. >>> conda create -y -n p4env psi4 -c psi4; >>> conda activate p4env. * (E) Install a particular |PSIfour| version. .. code-block:: console. >>> conda install psi4=1.4 -c psi4. * (F) Uninstall |PSIfour| from current environment. .. code-block:: console. >>> conda remove psi4. * (G) Initially install |PSIfour| nightly build. .. code-block:: console. # equivalent; >>> conda install psi4 -c psi4/label/dev; >>> conda install psi4",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:26223,install,install,26223,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,2,"['install', 'release']","['install', 'release']"
Deployability,"###################| 100%; .. Linking packages ...; ..; ..; .. Thank you for installing psi4. Additional resources:; .. Website: www.psicode.org; .. Inputs: /theoryfs2/ds/cdsgroup/miniconda/envs/tpsi4/share/psi4/samples; .. Manual: http://psicode.org/psi4manual/master/index.html; .. GitHub: https://github.com/psi4/psi4/wiki; .. Binary: https://anaconda.org/psi4; .. Youtube: https://www.youtube.com/user/psitutorials; ..; .. For csh/tcsh command-line use, add to shell or ~/.tcshrc file:; .. unsetenv PSIDATADIR; .. setenv PATH /theoryfs2/ds/cdsgroup/miniconda/envs/tpsi4/bin:$PATH; .. setenv PSI_SCRATCH /path/to/existing/writable/local-not-network/disk/for/scratch/files; ..; .. For sh/bash command-line use, add to shell or ~/.bashrc file:; .. unset PSIDATADIR; .. export PATH=/theoryfs2/ds/cdsgroup/miniconda/envs/tpsi4/bin:$PATH; .. export PSI_SCRATCH=/path/to/existing/writable/local-not-network/disk/for/scratch/files; ..; .. Report problems at http://forum.psicode.org/t/report-conda-update-psi4-oddities-here/32; ..; ..; .. Nuclear Repulsion Energy..........................................PASSED; .. SAPT0 Eelst.......................................................PASSED; .. SAPT0 Eexch.......................................................PASSED; .. SAPT0 Eind........................................................PASSED; .. SAPT0 Edisp.......................................................PASSED; .. SAPT0 Etotal......................................................PASSED; ..; .. [ COMPLETE ]|#######################################################################################################| 100%. 7. Configure environment. Preceding steps have placed ``conda`` and ``psi4`` in your :envvar:`PATH`, either permanently through rc-files or temporarily in this terminal session. You can keep or undo these changes. For general psi4 use, you must enable the ``psi4`` executable to be found through any of:. #. prepending to :envvar:`PATH` in shell, ``~/.bashrc``, ``~/.tcshrc``",MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst:24682,update,update-,24682,doc/sphinxman/source/conda.rst,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/doc/sphinxman/source/conda.rst,1,['update'],['update-']
Deployability,${CMAKE_CURRENT_SOURCE_DIR}/cc2_WabeiT2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc2_WabijT2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc2_Wmbij.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc2_WmbijT2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc2_Wmnij.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc2_faeT2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc2_fmiT2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc2_t2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc3.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc3_Wabei.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc3_Wamef.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc3_Wmbij.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc3_Wmnie.cc; ${CMAKE_CURRENT_SOURCE_DIR}/cc3_Wmnij.cc; ${CMAKE_CURRENT_SOURCE_DIR}/ccenergy.cc; ${CMAKE_CURRENT_SOURCE_DIR}/converged.cc; ${CMAKE_CURRENT_SOURCE_DIR}/d1diag.cc; ${CMAKE_CURRENT_SOURCE_DIR}/d2diag.cc; ${CMAKE_CURRENT_SOURCE_DIR}/denom.cc; ${CMAKE_CURRENT_SOURCE_DIR}/diagnostic.cc; ${CMAKE_CURRENT_SOURCE_DIR}/diis.cc; ${CMAKE_CURRENT_SOURCE_DIR}/diis_RHF.cc; ${CMAKE_CURRENT_SOURCE_DIR}/diis_ROHF.cc; ${CMAKE_CURRENT_SOURCE_DIR}/diis_UHF.cc; ${CMAKE_CURRENT_SOURCE_DIR}/dijabT2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/energy.cc; ${CMAKE_CURRENT_SOURCE_DIR}/fock_build.cc; ${CMAKE_CURRENT_SOURCE_DIR}/form_df_ints.cc; ${CMAKE_CURRENT_SOURCE_DIR}/get_moinfo.cc; ${CMAKE_CURRENT_SOURCE_DIR}/get_params.cc; ${CMAKE_CURRENT_SOURCE_DIR}/halftrans.cc; ${CMAKE_CURRENT_SOURCE_DIR}/init_amps.cc; ${CMAKE_CURRENT_SOURCE_DIR}/lmp2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/local.cc; ${CMAKE_CURRENT_SOURCE_DIR}/mp2_energy.cc; ${CMAKE_CURRENT_SOURCE_DIR}/new_d1diag.cc; ${CMAKE_CURRENT_SOURCE_DIR}/pair_energies.cc; ${CMAKE_CURRENT_SOURCE_DIR}/priority.cc; ${CMAKE_CURRENT_SOURCE_DIR}/rotate.cc; ${CMAKE_CURRENT_SOURCE_DIR}/sort_amps.cc; ${CMAKE_CURRENT_SOURCE_DIR}/spinad_amps.cc; ${CMAKE_CURRENT_SOURCE_DIR}/status.cc; ${CMAKE_CURRENT_SOURCE_DIR}/t1.cc; ${CMAKE_CURRENT_SOURCE_DIR}/t1_ijab.cc; ${CMAKE_CURRENT_SOURCE_DIR}/t2.cc; ${CMAKE_CURRENT_SOURCE_DIR}/tau.cc; ${CMAKE_CURRENT_SOURCE_DIR}/taut.cc; ${CMAKE_CURRENT_SOURCE_DIR}/tsave.cc; ${CMAKE_CURRENT_SOURCE_DIR}/update.cc; ); ,MatchSource.DOCS,psi4,psi4,v1.9.1,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/cc/ccenergy/CMakeLists.txt:2893,update,update,2893,psi4/src/psi4/cc/ccenergy/CMakeLists.txt,https://psicode.org,https://github.com/psi4/psi4/tree/v1.9.1/psi4/src/psi4/cc/ccenergy/CMakeLists.txt,2,['update'],['update']
